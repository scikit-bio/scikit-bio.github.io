Search.setIndex({"alltitles": {"Adding Node Information": [[151, "adding-node-information"]], "Advanced Label and Length Rules": [[151, "advanced-label-and-length-rules"]], "Alignment Section": [[143, "alignment-section"], [153, "alignment-section"]], "Alignment algorithms": [[0, "alignment-algorithms"]], "Alignment data structure": [[0, "alignment-data-structure"]], "Alignment structure": [[0, "alignment-structure"]], "Alpha diversity": [[1, "alpha-diversity"]], "Alpha diversity measures (skbio.diversity.alpha)": [[69, "alpha-diversity-measures-skbio-diversity-alpha"]], "Application of Rules": [[151, "application-of-rules"]], "BIOM table": [[1020, "biom-table"]], "BIOM-Format (skbio.io.format.biom)": [[140, "biom-format-skbio-io-format-biom"]], "BLAST Column Types": [[141, "blast-column-types"], [142, "blast-column-types"]], "BLAST+6 format (skbio.io.format.blast6)": [[141, "blast-6-format-skbio-io-format-blast6"]], "BLAST+7 format (skbio.io.format.blast7)": [[142, "blast-7-format-skbio-io-format-blast7"]], "Basic Symbols": [[151, "basic-symbols"]], "Beta diversity": [[1, "beta-diversity"]], "Beta diversity measures (skbio.diversity.beta)": [[105, "beta-diversity-measures-skbio-diversity-beta"]], "Biological Embeddings (skbio.embedding)": [[2, "biological-embeddings-skbio-embedding"]], "Biological Sequences (skbio.sequence)": [[1018, "biological-sequences-skbio-sequence"]], "Canonical analysis": [[776, "canonical-analysis"]], "Categorical Variable Stats": [[627, "categorical-variable-stats"]], "Caveats": [[151, "caveats"]], "Classes": [[158, "classes"], [627, "classes"], [686, "classes"], [1023, "classes"]], "Clustal format (skbio.io.format.clustal)": [[143, "clustal-format-skbio-io-format-clustal"]], "Column Types": [[155, "column-types"]], "Comments and Empty Rows": [[155, "comments-and-empty-rows"]], "Community Diversity (skbio.diversity)": [[1, "community-diversity-skbio-diversity"]], "Composition Statistics (skbio.stats.composition)": [[606, "composition-statistics-skbio-stats-composition"]], "Composition statistics": [[1019, "composition-statistics"]], "Continuous Variable Stats": [[627, "continuous-variable-stats"]], "Cophylogenetic methods": [[684, "cophylogenetic-methods"]], "Correspondence analysis": [[776, "correspondence-analysis"]], "Count vectors": [[1, "count-vectors"]], "Creating a new format for scikit-bio": [[158, "creating-a-new-format-for-scikit-bio"]], "Data Table (skbio.table)": [[1020, "data-table-skbio-table"]], "Data structures": [[627, "data-structures"]], "Data subsampling": [[1019, "data-subsampling"]], "Decorators": [[1023, "decorators"]], "Deprecated functionality": [[0, "deprecated-functionality"]], "Develop custom formats": [[1016, "develop-custom-formats"]], "Developer warnings": [[1022, "developer-warnings"]], "Distance Matrix Comparisons": [[627, "distance-matrix-comparisons"]], "Distance calculation": [[1018, "distance-calculation"]], "Distance matrix statistics": [[1019, "distance-matrix-statistics"]], "Distance matrix-based statistics (skbio.stats.distance)": [[627, "distance-matrix-based-statistics-skbio-stats-distance"]], "Distance-based statistics": [[627, "distance-based-statistics"]], "EMBL format (skbio.io.format.embl)": [[145, "embl-format-skbio-io-format-embl"]], "Embedding format (skbio.io.format.embed).": [[144, "embedding-format-skbio-io-format-embed"]], "Embedding types": [[2, "embedding-types"]], "Empirical Power Estimation (skbio.stats.power)": [[801, "empirical-power-estimation-skbio-stats-power"]], "Evolutionary statistics (skbio.stats.evolve)": [[684, "evolutionary-statistics-skbio-stats-evolve"]], "Example data": [[1020, "example-data"]], "Examples": [[140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [156, "examples"], [157, "examples"], [627, "examples"], [686, "examples"], [776, "examples"], [801, "examples"]], "Exceptions": [[158, "exceptions"], [627, "exceptions"], [1021, "exceptions"]], "Exceptions and warnings": [[1016, "exceptions-and-warnings"]], "Explanation": [[151, "explanation"]], "FASTA Format": [[146, "fasta-format"]], "FASTA/QUAL format (skbio.io.format.fasta)": [[146, "fasta-qual-format-skbio-io-format-fasta"]], "FASTQ format (skbio.io.format.fastq)": [[147, "fastq-format-skbio-io-format-fastq"]], "FEATURES section": [[148, "features-section"]], "FT section": [[145, "ft-section"]], "Feature Level Products": [[145, "feature-level-products"]], "Footer": [[156, "footer"]], "Formal Grammar": [[151, "formal-grammar"]], "Format Parameters": [[141, "format-parameters"], [143, "format-parameters"], [146, "format-parameters"], [147, "format-parameters"], [148, "format-parameters"], [149, "format-parameters"], [150, "format-parameters"], [151, "format-parameters"], [153, "format-parameters"], [154, "format-parameters"], [156, "format-parameters"], [157, "format-parameters"]], "Format Specification": [[139, "format-specification"], [140, "format-specification"], [141, "format-specification"], [142, "format-specification"], [143, "format-specification"], [144, "format-specification"], [145, "format-specification"], [146, "format-specification"], [147, "format-specification"], [148, "format-specification"], [149, "format-specification"], [150, "format-specification"], [151, "format-specification"], [152, "format-specification"], [153, "format-specification"], [154, "format-specification"], [155, "format-specification"], [156, "format-specification"], [157, "format-specification"]], "Format Support": [[139, "format-support"], [140, "format-support"], [141, "format-support"], [142, "format-support"], [143, "format-support"], [144, "format-support"], [145, "format-support"], [146, "format-support"], [147, "format-support"], [148, "format-support"], [149, "format-support"], [150, "format-support"], [151, "format-support"], [152, "format-support"], [153, "format-support"], [154, "format-support"], [155, "format-support"], [156, "format-support"], [157, "format-support"]], "Functions": [[69, "functions"], [105, "functions"], [158, "functions"], [197, "functions"], [603, "functions"], [606, "functions"], [627, "functions"], [684, "functions"], [801, "functions"]], "GC metadata": [[156, "gc-metadata"]], "GF metadata": [[156, "gf-metadata"]], "GFF3 format (skbio.io.format.gff3)": [[149, "gff3-format-skbio-io-format-gff3"]], "GR metadata": [[156, "gr-metadata"]], "GS metadata": [[156, "gs-metadata"]], "GenBank format (skbio.io.format.genbank)": [[148, "genbank-format-skbio-io-format-genbank"]], "Generator and TabularMSA Reader Parameters": [[146, "generator-and-tabularmsa-reader-parameters"]], "Generators Only": [[154, "generators-only"]], "Gradient analyses (skbio.stats.gradient)": [[686, "gradient-analyses-skbio-stats-gradient"]], "Header": [[156, "header"]], "Header Section": [[153, "header-section"]], "I/O Registry (skbio.io.registry)": [[158, "i-o-registry-skbio-io-registry"]], "I/O utilities (skbio.io.util)": [[197, "i-o-utilities-skbio-io-util"]], "Identifier Column": [[155, "identifier-column"]], "Inline Comments": [[151, "inline-comments"]], "Input and Output (skbio.io)": [[1016, "input-and-output-skbio-io"]], "Input validation": [[1, "input-validation"]], "Interval metadata": [[1017, "interval-metadata"]], "Introduction": [[1, "introduction"]], "Labeled square matrix format (skbio.io.format.lsmat)": [[150, "labeled-square-matrix-format-skbio-io-format-lsmat"]], "Leading and trailing whitespace characters": [[155, "leading-and-trailing-whitespace-characters"]], "Location string": [[148, "location-string"]], "Metadata": [[156, "metadata"]], "Metadata (skbio.metadata)": [[1017, "metadata-skbio-metadata"]], "Metadata Columns": [[155, "metadata-columns"]], "Metadata Formatting Requirements": [[155, "metadata-formatting-requirements"]], "Metadata Validation": [[155, "metadata-validation"]], "Metadata columns": [[1017, "metadata-columns"]], "Miscellaneous functionality": [[1022, "miscellaneous-functionality"]], "Multidimensional scaling": [[776, "multidimensional-scaling"]], "Multiple Sequence Alignment": [[156, "multiple-sequence-alignment"]], "Multivariate Statistics (skbio.stats)": [[1019, "multivariate-statistics-skbio-stats"]], "Newick format (skbio.io.format.newick)": [[151, "newick-format-skbio-io-format-newick"]], "Number Formatting": [[155, "number-formatting"]], "ORIGIN section": [[148, "origin-section"]], "Ordination methods": [[1019, "ordination-methods"]], "Ordination methods (skbio.stats.ordination)": [[776, "ordination-methods-skbio-stats-ordination"]], "Ordination results": [[776, "ordination-results"]], "Ordination results format (skbio.io.format.ordination)": [[152, "ordination-results-format-skbio-io-format-ordination"]], "Other statistical methods": [[1019, "other-statistical-methods"]], "PHYLIP multiple sequence alignment format (skbio.io.format.phylip)": [[153, "phylip-multiple-sequence-alignment-format-skbio-io-format-phylip"]], "Phylogenetic reconstruction": [[1021, "phylogenetic-reconstruction"]], "QSeq format (skbio.io.format.qseq)": [[154, "qseq-format-skbio-io-format-qseq"]], "QUAL File Parameter (Readers and Writers)": [[146, "qual-file-parameter-readers-and-writers"]], "QUAL Format": [[146, "qual-format"]], "Quality Score Variants": [[147, "quality-score-variants"]], "Read/write files": [[1016, "read-write-files"]], "Reader-specific Parameters": [[146, "reader-specific-parameters"], [148, "reader-specific-parameters"], [149, "reader-specific-parameters"]], "Reading EMBL Files": [[145, "reading-embl-files"]], "Reading EMBL Files using generators": [[145, "reading-embl-files-using-generators"]], "Reading and Writing FASTA Files": [[146, "reading-and-writing-fasta-files"]], "Reading and Writing FASTA/QUAL Files": [[146, "reading-and-writing-fasta-qual-files"]], "Reading and Writing GenBank Files": [[148, "reading-and-writing-genbank-files"]], "Reading files into scikit-bio": [[1016, "reading-files-into-scikit-bio"]], "Recommendations for Identifiers": [[155, "recommendations-for-identifiers"]], "References": [[139, "references"], [140, "references"], [141, "references"], [142, "references"], [143, "references"], [145, "references"], [146, "references"], [147, "references"], [148, "references"], [149, "references"], [151, "references"], [153, "references"], [154, "references"], [156, "references"], [157, "references"], [606, "references"], [627, "references"], [776, "references"]], "Reserved Keyword Arguments": [[158, "reserved-keyword-arguments"]], "SQ section": [[145, "sq-section"]], "Sample metadata": [[1017, "sample-metadata"]], "Sections before FEATURES": [[148, "sections-before-features"]], "Sections before FH (Feature Header)": [[145, "sections-before-fh-feature-header"]], "Sequence Alignments (skbio.alignment)": [[0, "sequence-alignments-skbio-alignment"]], "Sequence Data": [[146, "sequence-data"]], "Sequence Header": [[146, "sequence-header"]], "Sequence Reader Parameters": [[146, "sequence-reader-parameters"]], "Sequence distance metrics (skbio.sequence.distance)": [[603, "sequence-distance-metrics-skbio-sequence-distance"]], "Sequence types": [[1018, "sequence-types"]], "Sequence utilities": [[1018, "sequence-utilities"]], "Simple binary dissimilarity matrix format (skbio.io.format.binary_dm)": [[139, "simple-binary-dissimilarity-matrix-format-skbio-io-format-binary-dm"]], "Specifying a diversity metric": [[1, "specifying-a-diversity-metric"]], "Stockholm format (skbio.io.format.stockholm)": [[156, "stockholm-format-skbio-io-format-stockholm"]], "Supported file formats": [[1016, "supported-file-formats"]], "Taxdump format (skbio.io.format.taxdump)": [[157, "taxdump-format-skbio-io-format-taxdump"]], "Testing functionality": [[1022, "testing-functionality"]], "Tree structure and operations": [[1021, "tree-structure-and-operations"]], "Tree utilities": [[1021, "tree-utilities"]], "Trees and Phylogenetics (skbio.tree)": [[1021, "trees-and-phylogenetics-skbio-tree"]], "Tutorial": [[0, "tutorial"], [1, "tutorial"], [1016, "tutorial"], [1018, "tutorial"], [1021, "tutorial"], [1023, "tutorial"]], "Using the optimized alignment algorithm": [[0, "using-the-optimized-alignment-algorithm"]], "Using the slow alignment algorithm": [[0, "using-the-slow-alignment-algorithm"]], "Utilities for Developers (skbio.util)": [[1022, "utilities-for-developers-skbio-util"]], "Utility functions": [[776, "utility-functions"]], "What kinds of files scikit-bio can use": [[1016, "what-kinds-of-files-scikit-bio-can-use"]], "Whitespace": [[151, "whitespace"]], "Workflow construction (skbio.workflow)": [[1023, "workflow-construction-skbio-workflow"]], "Writer-specific Parameters": [[146, "writer-specific-parameters"], [149, "writer-specific-parameters"]], "Writing files from scikit-bio": [[1016, "writing-files-from-scikit-bio"]], "division.dmp": [[157, "division-dmp"]], "gencode.dmp": [[157, "gencode-dmp"]], "names.dmp": [[157, "names-dmp"]], "nodes.dmp": [[157, "nodes-dmp"]], "scikit-bio 0.6.1-dev documentation": [[1015, "scikit-bio-version-documentation"]], "skbio.alignment.AlignmentStructure": [[3, "skbio-alignment-alignmentstructure"]], "skbio.alignment.AlignmentStructure.__eq__": [[4, "skbio-alignment-alignmentstructure-eq"]], "skbio.alignment.AlignmentStructure.__ge__": [[5, "skbio-alignment-alignmentstructure-ge"]], "skbio.alignment.AlignmentStructure.__getitem__": [[6, "skbio-alignment-alignmentstructure-getitem"]], "skbio.alignment.AlignmentStructure.__getstate__": [[7, "skbio-alignment-alignmentstructure-getstate"]], "skbio.alignment.AlignmentStructure.__gt__": [[8, "skbio-alignment-alignmentstructure-gt"]], "skbio.alignment.AlignmentStructure.__hash__": [[9, "skbio-alignment-alignmentstructure-hash"]], "skbio.alignment.AlignmentStructure.__le__": [[10, "skbio-alignment-alignmentstructure-le"]], "skbio.alignment.AlignmentStructure.__lt__": [[11, "skbio-alignment-alignmentstructure-lt"]], "skbio.alignment.AlignmentStructure.__ne__": [[12, "skbio-alignment-alignmentstructure-ne"]], "skbio.alignment.AlignmentStructure.__setstate__": [[13, "skbio-alignment-alignmentstructure-setstate"]], "skbio.alignment.AlignmentStructure.__str__": [[14, "skbio-alignment-alignmentstructure-str"]], "skbio.alignment.AlignmentStructure.is_zero_based": [[15, "skbio-alignment-alignmentstructure-is-zero-based"]], "skbio.alignment.AlignmentStructure.set_zero_based": [[16, "skbio-alignment-alignmentstructure-set-zero-based"]], "skbio.alignment.StripedSmithWaterman": [[17, "skbio-alignment-stripedsmithwaterman"]], "skbio.alignment.StripedSmithWaterman.__call__": [[18, "skbio-alignment-stripedsmithwaterman-call"]], "skbio.alignment.StripedSmithWaterman.__eq__": [[19, "skbio-alignment-stripedsmithwaterman-eq"]], "skbio.alignment.StripedSmithWaterman.__ge__": [[20, "skbio-alignment-stripedsmithwaterman-ge"]], "skbio.alignment.StripedSmithWaterman.__getstate__": [[21, "skbio-alignment-stripedsmithwaterman-getstate"]], "skbio.alignment.StripedSmithWaterman.__gt__": [[22, "skbio-alignment-stripedsmithwaterman-gt"]], "skbio.alignment.StripedSmithWaterman.__hash__": [[23, "skbio-alignment-stripedsmithwaterman-hash"]], "skbio.alignment.StripedSmithWaterman.__le__": [[24, "skbio-alignment-stripedsmithwaterman-le"]], "skbio.alignment.StripedSmithWaterman.__lt__": [[25, "skbio-alignment-stripedsmithwaterman-lt"]], "skbio.alignment.StripedSmithWaterman.__ne__": [[26, "skbio-alignment-stripedsmithwaterman-ne"]], "skbio.alignment.StripedSmithWaterman.__setstate__": [[27, "skbio-alignment-stripedsmithwaterman-setstate"]], "skbio.alignment.StripedSmithWaterman.__str__": [[28, "skbio-alignment-stripedsmithwaterman-str"]], "skbio.alignment.TabularMSA": [[29, "skbio-alignment-tabularmsa"]], "skbio.alignment.TabularMSA.__bool__": [[30, "skbio-alignment-tabularmsa-bool"]], "skbio.alignment.TabularMSA.__contains__": [[31, "skbio-alignment-tabularmsa-contains"]], "skbio.alignment.TabularMSA.__copy__": [[32, "skbio-alignment-tabularmsa-copy"]], "skbio.alignment.TabularMSA.__deepcopy__": [[33, "skbio-alignment-tabularmsa-deepcopy"]], "skbio.alignment.TabularMSA.__eq__": [[34, "skbio-alignment-tabularmsa-eq"]], "skbio.alignment.TabularMSA.__ge__": [[35, "skbio-alignment-tabularmsa-ge"]], "skbio.alignment.TabularMSA.__getitem__": [[36, "skbio-alignment-tabularmsa-getitem"]], "skbio.alignment.TabularMSA.__getstate__": [[37, "skbio-alignment-tabularmsa-getstate"]], "skbio.alignment.TabularMSA.__gt__": [[38, "skbio-alignment-tabularmsa-gt"]], "skbio.alignment.TabularMSA.__iter__": [[39, "skbio-alignment-tabularmsa-iter"]], "skbio.alignment.TabularMSA.__le__": [[40, "skbio-alignment-tabularmsa-le"]], "skbio.alignment.TabularMSA.__len__": [[41, "skbio-alignment-tabularmsa-len"]], "skbio.alignment.TabularMSA.__lt__": [[42, "skbio-alignment-tabularmsa-lt"]], "skbio.alignment.TabularMSA.__ne__": [[43, "skbio-alignment-tabularmsa-ne"]], "skbio.alignment.TabularMSA.__reversed__": [[44, "skbio-alignment-tabularmsa-reversed"]], "skbio.alignment.TabularMSA.__str__": [[45, "skbio-alignment-tabularmsa-str"]], "skbio.alignment.TabularMSA.append": [[46, "skbio-alignment-tabularmsa-append"]], "skbio.alignment.TabularMSA.consensus": [[47, "skbio-alignment-tabularmsa-consensus"]], "skbio.alignment.TabularMSA.conservation": [[48, "skbio-alignment-tabularmsa-conservation"]], "skbio.alignment.TabularMSA.extend": [[49, "skbio-alignment-tabularmsa-extend"]], "skbio.alignment.TabularMSA.from_dict": [[50, "skbio-alignment-tabularmsa-from-dict"]], "skbio.alignment.TabularMSA.gap_frequencies": [[51, "skbio-alignment-tabularmsa-gap-frequencies"]], "skbio.alignment.TabularMSA.has_metadata": [[52, "skbio-alignment-tabularmsa-has-metadata"]], "skbio.alignment.TabularMSA.has_positional_metadata": [[53, "skbio-alignment-tabularmsa-has-positional-metadata"]], "skbio.alignment.TabularMSA.iter_positions": [[54, "skbio-alignment-tabularmsa-iter-positions"]], "skbio.alignment.TabularMSA.join": [[55, "skbio-alignment-tabularmsa-join"]], "skbio.alignment.TabularMSA.read": [[56, "skbio-alignment-tabularmsa-read"]], "skbio.alignment.TabularMSA.reassign_index": [[57, "skbio-alignment-tabularmsa-reassign-index"]], "skbio.alignment.TabularMSA.sort": [[58, "skbio-alignment-tabularmsa-sort"]], "skbio.alignment.TabularMSA.to_dict": [[59, "skbio-alignment-tabularmsa-to-dict"]], "skbio.alignment.TabularMSA.write": [[60, "skbio-alignment-tabularmsa-write"]], "skbio.alignment.global_pairwise_align": [[61, "skbio-alignment-global-pairwise-align"]], "skbio.alignment.global_pairwise_align_nucleotide": [[62, "skbio-alignment-global-pairwise-align-nucleotide"]], "skbio.alignment.global_pairwise_align_protein": [[63, "skbio-alignment-global-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align": [[64, "skbio-alignment-local-pairwise-align"]], "skbio.alignment.local_pairwise_align_nucleotide": [[65, "skbio-alignment-local-pairwise-align-nucleotide"]], "skbio.alignment.local_pairwise_align_protein": [[66, "skbio-alignment-local-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align_ssw": [[67, "skbio-alignment-local-pairwise-align-ssw"]], "skbio.alignment.make_identity_substitution_matrix": [[68, "skbio-alignment-make-identity-substitution-matrix"]], "skbio.diversity.alpha.ace": [[70, "skbio-diversity-alpha-ace"]], "skbio.diversity.alpha.berger_parker_d": [[71, "skbio-diversity-alpha-berger-parker-d"]], "skbio.diversity.alpha.brillouin_d": [[72, "skbio-diversity-alpha-brillouin-d"]], "skbio.diversity.alpha.chao1": [[73, "skbio-diversity-alpha-chao1"]], "skbio.diversity.alpha.chao1_ci": [[74, "skbio-diversity-alpha-chao1-ci"]], "skbio.diversity.alpha.dominance": [[75, "skbio-diversity-alpha-dominance"]], "skbio.diversity.alpha.doubles": [[76, "skbio-diversity-alpha-doubles"]], "skbio.diversity.alpha.enspie": [[77, "skbio-diversity-alpha-enspie"]], "skbio.diversity.alpha.esty_ci": [[78, "skbio-diversity-alpha-esty-ci"]], "skbio.diversity.alpha.faith_pd": [[79, "skbio-diversity-alpha-faith-pd"]], "skbio.diversity.alpha.fisher_alpha": [[80, "skbio-diversity-alpha-fisher-alpha"]], "skbio.diversity.alpha.gini_index": [[81, "skbio-diversity-alpha-gini-index"]], "skbio.diversity.alpha.goods_coverage": [[82, "skbio-diversity-alpha-goods-coverage"]], "skbio.diversity.alpha.heip_e": [[83, "skbio-diversity-alpha-heip-e"]], "skbio.diversity.alpha.kempton_taylor_q": [[84, "skbio-diversity-alpha-kempton-taylor-q"]], "skbio.diversity.alpha.lladser_ci": [[85, "skbio-diversity-alpha-lladser-ci"]], "skbio.diversity.alpha.lladser_pe": [[86, "skbio-diversity-alpha-lladser-pe"]], "skbio.diversity.alpha.margalef": [[87, "skbio-diversity-alpha-margalef"]], "skbio.diversity.alpha.mcintosh_d": [[88, "skbio-diversity-alpha-mcintosh-d"]], "skbio.diversity.alpha.mcintosh_e": [[89, "skbio-diversity-alpha-mcintosh-e"]], "skbio.diversity.alpha.menhinick": [[90, "skbio-diversity-alpha-menhinick"]], "skbio.diversity.alpha.michaelis_menten_fit": [[91, "skbio-diversity-alpha-michaelis-menten-fit"]], "skbio.diversity.alpha.observed_features": [[92, "skbio-diversity-alpha-observed-features"]], "skbio.diversity.alpha.observed_otus": [[93, "skbio-diversity-alpha-observed-otus"]], "skbio.diversity.alpha.osd": [[94, "skbio-diversity-alpha-osd"]], "skbio.diversity.alpha.phydiv": [[95, "skbio-diversity-alpha-phydiv"]], "skbio.diversity.alpha.pielou_e": [[96, "skbio-diversity-alpha-pielou-e"]], "skbio.diversity.alpha.robbins": [[97, "skbio-diversity-alpha-robbins"]], "skbio.diversity.alpha.shannon": [[98, "skbio-diversity-alpha-shannon"]], "skbio.diversity.alpha.simpson": [[99, "skbio-diversity-alpha-simpson"]], "skbio.diversity.alpha.simpson_e": [[100, "skbio-diversity-alpha-simpson-e"]], "skbio.diversity.alpha.singles": [[101, "skbio-diversity-alpha-singles"]], "skbio.diversity.alpha.sobs": [[102, "skbio-diversity-alpha-sobs"]], "skbio.diversity.alpha.strong": [[103, "skbio-diversity-alpha-strong"]], "skbio.diversity.alpha_diversity": [[104, "skbio-diversity-alpha-diversity"]], "skbio.diversity.beta.unweighted_unifrac": [[106, "skbio-diversity-beta-unweighted-unifrac"]], "skbio.diversity.beta.weighted_unifrac": [[107, "skbio-diversity-beta-weighted-unifrac"]], "skbio.diversity.beta_diversity": [[108, "skbio-diversity-beta-diversity"]], "skbio.diversity.block_beta_diversity": [[109, "skbio-diversity-block-beta-diversity"]], "skbio.diversity.get_alpha_diversity_metrics": [[110, "skbio-diversity-get-alpha-diversity-metrics"]], "skbio.diversity.get_beta_diversity_metrics": [[111, "skbio-diversity-get-beta-diversity-metrics"]], "skbio.diversity.partial_beta_diversity": [[112, "skbio-diversity-partial-beta-diversity"]], "skbio.embedding.ProteinEmbedding": [[113, "skbio-embedding-proteinembedding"]], "skbio.embedding.ProteinEmbedding.__eq__": [[114, "skbio-embedding-proteinembedding-eq"]], "skbio.embedding.ProteinEmbedding.__ge__": [[115, "skbio-embedding-proteinembedding-ge"]], "skbio.embedding.ProteinEmbedding.__getstate__": [[116, "skbio-embedding-proteinembedding-getstate"]], "skbio.embedding.ProteinEmbedding.__gt__": [[117, "skbio-embedding-proteinembedding-gt"]], "skbio.embedding.ProteinEmbedding.__hash__": [[118, "skbio-embedding-proteinembedding-hash"]], "skbio.embedding.ProteinEmbedding.__le__": [[119, "skbio-embedding-proteinembedding-le"]], "skbio.embedding.ProteinEmbedding.__lt__": [[120, "skbio-embedding-proteinembedding-lt"]], "skbio.embedding.ProteinEmbedding.__ne__": [[121, "skbio-embedding-proteinembedding-ne"]], "skbio.embedding.ProteinEmbedding.__str__": [[122, "skbio-embedding-proteinembedding-str"]], "skbio.embedding.ProteinEmbedding.bytes": [[123, "skbio-embedding-proteinembedding-bytes"]], "skbio.embedding.ProteinEmbedding.read": [[124, "skbio-embedding-proteinembedding-read"]], "skbio.embedding.ProteinEmbedding.write": [[125, "skbio-embedding-proteinembedding-write"]], "skbio.embedding.ProteinVector": [[126, "skbio-embedding-proteinvector"]], "skbio.embedding.ProteinVector.__eq__": [[127, "skbio-embedding-proteinvector-eq"]], "skbio.embedding.ProteinVector.__ge__": [[128, "skbio-embedding-proteinvector-ge"]], "skbio.embedding.ProteinVector.__getstate__": [[129, "skbio-embedding-proteinvector-getstate"]], "skbio.embedding.ProteinVector.__gt__": [[130, "skbio-embedding-proteinvector-gt"]], "skbio.embedding.ProteinVector.__hash__": [[131, "skbio-embedding-proteinvector-hash"]], "skbio.embedding.ProteinVector.__le__": [[132, "skbio-embedding-proteinvector-le"]], "skbio.embedding.ProteinVector.__lt__": [[133, "skbio-embedding-proteinvector-lt"]], "skbio.embedding.ProteinVector.__ne__": [[134, "skbio-embedding-proteinvector-ne"]], "skbio.embedding.ProteinVector.__str__": [[135, "skbio-embedding-proteinvector-str"]], "skbio.embedding.ProteinVector.bytes": [[136, "skbio-embedding-proteinvector-bytes"]], "skbio.embedding.ProteinVector.read": [[137, "skbio-embedding-proteinvector-read"]], "skbio.embedding.ProteinVector.write": [[138, "skbio-embedding-proteinvector-write"]], "skbio.io.registry.Format": [[159, "skbio-io-registry-format"]], "skbio.io.registry.Format.__eq__": [[160, "skbio-io-registry-format-eq"]], "skbio.io.registry.Format.__ge__": [[161, "skbio-io-registry-format-ge"]], "skbio.io.registry.Format.__getstate__": [[162, "skbio-io-registry-format-getstate"]], "skbio.io.registry.Format.__gt__": [[163, "skbio-io-registry-format-gt"]], "skbio.io.registry.Format.__hash__": [[164, "skbio-io-registry-format-hash"]], "skbio.io.registry.Format.__le__": [[165, "skbio-io-registry-format-le"]], "skbio.io.registry.Format.__lt__": [[166, "skbio-io-registry-format-lt"]], "skbio.io.registry.Format.__ne__": [[167, "skbio-io-registry-format-ne"]], "skbio.io.registry.Format.__str__": [[168, "skbio-io-registry-format-str"]], "skbio.io.registry.Format.reader": [[169, "skbio-io-registry-format-reader"]], "skbio.io.registry.Format.sniffer": [[170, "skbio-io-registry-format-sniffer"]], "skbio.io.registry.Format.writer": [[171, "skbio-io-registry-format-writer"]], "skbio.io.registry.IORegistry": [[172, "skbio-io-registry-ioregistry"]], "skbio.io.registry.IORegistry.__eq__": [[173, "skbio-io-registry-ioregistry-eq"]], "skbio.io.registry.IORegistry.__ge__": [[174, "skbio-io-registry-ioregistry-ge"]], "skbio.io.registry.IORegistry.__getstate__": [[175, "skbio-io-registry-ioregistry-getstate"]], "skbio.io.registry.IORegistry.__gt__": [[176, "skbio-io-registry-ioregistry-gt"]], "skbio.io.registry.IORegistry.__hash__": [[177, "skbio-io-registry-ioregistry-hash"]], "skbio.io.registry.IORegistry.__le__": [[178, "skbio-io-registry-ioregistry-le"]], "skbio.io.registry.IORegistry.__lt__": [[179, "skbio-io-registry-ioregistry-lt"]], "skbio.io.registry.IORegistry.__ne__": [[180, "skbio-io-registry-ioregistry-ne"]], "skbio.io.registry.IORegistry.__str__": [[181, "skbio-io-registry-ioregistry-str"]], "skbio.io.registry.IORegistry.add_format": [[182, "skbio-io-registry-ioregistry-add-format"]], "skbio.io.registry.IORegistry.create_format": [[183, "skbio-io-registry-ioregistry-create-format"]], "skbio.io.registry.IORegistry.get_reader": [[184, "skbio-io-registry-ioregistry-get-reader"]], "skbio.io.registry.IORegistry.get_sniffer": [[185, "skbio-io-registry-ioregistry-get-sniffer"]], "skbio.io.registry.IORegistry.get_writer": [[186, "skbio-io-registry-ioregistry-get-writer"]], "skbio.io.registry.IORegistry.list_read_formats": [[187, "skbio-io-registry-ioregistry-list-read-formats"]], "skbio.io.registry.IORegistry.list_write_formats": [[188, "skbio-io-registry-ioregistry-list-write-formats"]], "skbio.io.registry.IORegistry.monkey_patch": [[189, "skbio-io-registry-ioregistry-monkey-patch"]], "skbio.io.registry.IORegistry.read": [[190, "skbio-io-registry-ioregistry-read"]], "skbio.io.registry.IORegistry.sniff": [[191, "skbio-io-registry-ioregistry-sniff"]], "skbio.io.registry.IORegistry.write": [[192, "skbio-io-registry-ioregistry-write"]], "skbio.io.registry.create_format": [[193, "skbio-io-registry-create-format"]], "skbio.io.registry.read": [[194, "skbio-io-registry-read"]], "skbio.io.registry.sniff": [[195, "skbio-io-registry-sniff"]], "skbio.io.registry.write": [[196, "skbio-io-registry-write"]], "skbio.io.util.open": [[198, "skbio-io-util-open"]], "skbio.io.util.open_file": [[199, "skbio-io-util-open-file"]], "skbio.io.util.open_files": [[200, "skbio-io-util-open-files"]], "skbio.metadata.CategoricalMetadataColumn": [[201, "skbio-metadata-categoricalmetadatacolumn"]], "skbio.metadata.CategoricalMetadataColumn.__eq__": [[202, "skbio-metadata-categoricalmetadatacolumn-eq"]], "skbio.metadata.CategoricalMetadataColumn.__ge__": [[203, "skbio-metadata-categoricalmetadatacolumn-ge"]], "skbio.metadata.CategoricalMetadataColumn.__getstate__": [[204, "skbio-metadata-categoricalmetadatacolumn-getstate"]], "skbio.metadata.CategoricalMetadataColumn.__gt__": [[205, "skbio-metadata-categoricalmetadatacolumn-gt"]], "skbio.metadata.CategoricalMetadataColumn.__le__": [[206, "skbio-metadata-categoricalmetadatacolumn-le"]], "skbio.metadata.CategoricalMetadataColumn.__lt__": [[207, "skbio-metadata-categoricalmetadatacolumn-lt"]], "skbio.metadata.CategoricalMetadataColumn.__ne__": [[208, "skbio-metadata-categoricalmetadatacolumn-ne"]], "skbio.metadata.CategoricalMetadataColumn.__str__": [[209, "skbio-metadata-categoricalmetadatacolumn-str"]], "skbio.metadata.CategoricalMetadataColumn.drop_missing_values": [[210, "skbio-metadata-categoricalmetadatacolumn-drop-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.filter_ids": [[211, "skbio-metadata-categoricalmetadatacolumn-filter-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_ids": [[212, "skbio-metadata-categoricalmetadatacolumn-get-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_missing": [[213, "skbio-metadata-categoricalmetadatacolumn-get-missing"]], "skbio.metadata.CategoricalMetadataColumn.get_value": [[214, "skbio-metadata-categoricalmetadatacolumn-get-value"]], "skbio.metadata.CategoricalMetadataColumn.has_missing_values": [[215, "skbio-metadata-categoricalmetadatacolumn-has-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.save": [[216, "skbio-metadata-categoricalmetadatacolumn-save"]], "skbio.metadata.CategoricalMetadataColumn.to_dataframe": [[217, "skbio-metadata-categoricalmetadatacolumn-to-dataframe"]], "skbio.metadata.CategoricalMetadataColumn.to_series": [[218, "skbio-metadata-categoricalmetadatacolumn-to-series"]], "skbio.metadata.Interval": [[219, "skbio-metadata-interval"]], "skbio.metadata.Interval.__eq__": [[220, "skbio-metadata-interval-eq"]], "skbio.metadata.Interval.__ge__": [[221, "skbio-metadata-interval-ge"]], "skbio.metadata.Interval.__getstate__": [[222, "skbio-metadata-interval-getstate"]], "skbio.metadata.Interval.__gt__": [[223, "skbio-metadata-interval-gt"]], "skbio.metadata.Interval.__le__": [[224, "skbio-metadata-interval-le"]], "skbio.metadata.Interval.__lt__": [[225, "skbio-metadata-interval-lt"]], "skbio.metadata.Interval.__ne__": [[226, "skbio-metadata-interval-ne"]], "skbio.metadata.Interval.__str__": [[227, "skbio-metadata-interval-str"]], "skbio.metadata.Interval.drop": [[228, "skbio-metadata-interval-drop"]], "skbio.metadata.IntervalMetadata": [[229, "skbio-metadata-intervalmetadata"]], "skbio.metadata.IntervalMetadata.__copy__": [[230, "skbio-metadata-intervalmetadata-copy"]], "skbio.metadata.IntervalMetadata.__deepcopy__": [[231, "skbio-metadata-intervalmetadata-deepcopy"]], "skbio.metadata.IntervalMetadata.__eq__": [[232, "skbio-metadata-intervalmetadata-eq"]], "skbio.metadata.IntervalMetadata.__ge__": [[233, "skbio-metadata-intervalmetadata-ge"]], "skbio.metadata.IntervalMetadata.__getstate__": [[234, "skbio-metadata-intervalmetadata-getstate"]], "skbio.metadata.IntervalMetadata.__gt__": [[235, "skbio-metadata-intervalmetadata-gt"]], "skbio.metadata.IntervalMetadata.__le__": [[236, "skbio-metadata-intervalmetadata-le"]], "skbio.metadata.IntervalMetadata.__lt__": [[237, "skbio-metadata-intervalmetadata-lt"]], "skbio.metadata.IntervalMetadata.__ne__": [[238, "skbio-metadata-intervalmetadata-ne"]], "skbio.metadata.IntervalMetadata.__str__": [[239, "skbio-metadata-intervalmetadata-str"]], "skbio.metadata.IntervalMetadata.add": [[240, "skbio-metadata-intervalmetadata-add"]], "skbio.metadata.IntervalMetadata.concat": [[241, "skbio-metadata-intervalmetadata-concat"]], "skbio.metadata.IntervalMetadata.drop": [[242, "skbio-metadata-intervalmetadata-drop"]], "skbio.metadata.IntervalMetadata.merge": [[243, "skbio-metadata-intervalmetadata-merge"]], "skbio.metadata.IntervalMetadata.query": [[244, "skbio-metadata-intervalmetadata-query"]], "skbio.metadata.IntervalMetadata.read": [[245, "skbio-metadata-intervalmetadata-read"]], "skbio.metadata.IntervalMetadata.sort": [[246, "skbio-metadata-intervalmetadata-sort"]], "skbio.metadata.IntervalMetadata.write": [[247, "skbio-metadata-intervalmetadata-write"]], "skbio.metadata.MetadataColumn": [[248, "skbio-metadata-metadatacolumn"]], "skbio.metadata.MetadataColumn.__eq__": [[249, "skbio-metadata-metadatacolumn-eq"]], "skbio.metadata.MetadataColumn.__ge__": [[250, "skbio-metadata-metadatacolumn-ge"]], "skbio.metadata.MetadataColumn.__getstate__": [[251, "skbio-metadata-metadatacolumn-getstate"]], "skbio.metadata.MetadataColumn.__gt__": [[252, "skbio-metadata-metadatacolumn-gt"]], "skbio.metadata.MetadataColumn.__le__": [[253, "skbio-metadata-metadatacolumn-le"]], "skbio.metadata.MetadataColumn.__lt__": [[254, "skbio-metadata-metadatacolumn-lt"]], "skbio.metadata.MetadataColumn.__ne__": [[255, "skbio-metadata-metadatacolumn-ne"]], "skbio.metadata.MetadataColumn.__str__": [[256, "skbio-metadata-metadatacolumn-str"]], "skbio.metadata.MetadataColumn.drop_missing_values": [[257, "skbio-metadata-metadatacolumn-drop-missing-values"]], "skbio.metadata.MetadataColumn.filter_ids": [[258, "skbio-metadata-metadatacolumn-filter-ids"]], "skbio.metadata.MetadataColumn.get_ids": [[259, "skbio-metadata-metadatacolumn-get-ids"]], "skbio.metadata.MetadataColumn.get_missing": [[260, "skbio-metadata-metadatacolumn-get-missing"]], "skbio.metadata.MetadataColumn.get_value": [[261, "skbio-metadata-metadatacolumn-get-value"]], "skbio.metadata.MetadataColumn.has_missing_values": [[262, "skbio-metadata-metadatacolumn-has-missing-values"]], "skbio.metadata.MetadataColumn.save": [[263, "skbio-metadata-metadatacolumn-save"]], "skbio.metadata.MetadataColumn.to_dataframe": [[264, "skbio-metadata-metadatacolumn-to-dataframe"]], "skbio.metadata.MetadataColumn.to_series": [[265, "skbio-metadata-metadatacolumn-to-series"]], "skbio.metadata.NumericMetadataColumn": [[266, "skbio-metadata-numericmetadatacolumn"]], "skbio.metadata.NumericMetadataColumn.__eq__": [[267, "skbio-metadata-numericmetadatacolumn-eq"]], "skbio.metadata.NumericMetadataColumn.__ge__": [[268, "skbio-metadata-numericmetadatacolumn-ge"]], "skbio.metadata.NumericMetadataColumn.__getstate__": [[269, "skbio-metadata-numericmetadatacolumn-getstate"]], "skbio.metadata.NumericMetadataColumn.__gt__": [[270, "skbio-metadata-numericmetadatacolumn-gt"]], "skbio.metadata.NumericMetadataColumn.__le__": [[271, "skbio-metadata-numericmetadatacolumn-le"]], "skbio.metadata.NumericMetadataColumn.__lt__": [[272, "skbio-metadata-numericmetadatacolumn-lt"]], "skbio.metadata.NumericMetadataColumn.__ne__": [[273, "skbio-metadata-numericmetadatacolumn-ne"]], "skbio.metadata.NumericMetadataColumn.__str__": [[274, "skbio-metadata-numericmetadatacolumn-str"]], "skbio.metadata.NumericMetadataColumn.drop_missing_values": [[275, "skbio-metadata-numericmetadatacolumn-drop-missing-values"]], "skbio.metadata.NumericMetadataColumn.filter_ids": [[276, "skbio-metadata-numericmetadatacolumn-filter-ids"]], "skbio.metadata.NumericMetadataColumn.get_ids": [[277, "skbio-metadata-numericmetadatacolumn-get-ids"]], "skbio.metadata.NumericMetadataColumn.get_missing": [[278, "skbio-metadata-numericmetadatacolumn-get-missing"]], "skbio.metadata.NumericMetadataColumn.get_value": [[279, "skbio-metadata-numericmetadatacolumn-get-value"]], "skbio.metadata.NumericMetadataColumn.has_missing_values": [[280, "skbio-metadata-numericmetadatacolumn-has-missing-values"]], "skbio.metadata.NumericMetadataColumn.save": [[281, "skbio-metadata-numericmetadatacolumn-save"]], "skbio.metadata.NumericMetadataColumn.to_dataframe": [[282, "skbio-metadata-numericmetadatacolumn-to-dataframe"]], "skbio.metadata.NumericMetadataColumn.to_series": [[283, "skbio-metadata-numericmetadatacolumn-to-series"]], "skbio.metadata.SampleMetadata": [[284, "skbio-metadata-samplemetadata"]], "skbio.metadata.SampleMetadata.__eq__": [[285, "skbio-metadata-samplemetadata-eq"]], "skbio.metadata.SampleMetadata.__ge__": [[286, "skbio-metadata-samplemetadata-ge"]], "skbio.metadata.SampleMetadata.__getstate__": [[287, "skbio-metadata-samplemetadata-getstate"]], "skbio.metadata.SampleMetadata.__gt__": [[288, "skbio-metadata-samplemetadata-gt"]], "skbio.metadata.SampleMetadata.__le__": [[289, "skbio-metadata-samplemetadata-le"]], "skbio.metadata.SampleMetadata.__lt__": [[290, "skbio-metadata-samplemetadata-lt"]], "skbio.metadata.SampleMetadata.__ne__": [[291, "skbio-metadata-samplemetadata-ne"]], "skbio.metadata.SampleMetadata.__str__": [[292, "skbio-metadata-samplemetadata-str"]], "skbio.metadata.SampleMetadata.filter_columns": [[293, "skbio-metadata-samplemetadata-filter-columns"]], "skbio.metadata.SampleMetadata.filter_ids": [[294, "skbio-metadata-samplemetadata-filter-ids"]], "skbio.metadata.SampleMetadata.get_column": [[295, "skbio-metadata-samplemetadata-get-column"]], "skbio.metadata.SampleMetadata.get_ids": [[296, "skbio-metadata-samplemetadata-get-ids"]], "skbio.metadata.SampleMetadata.load": [[297, "skbio-metadata-samplemetadata-load"]], "skbio.metadata.SampleMetadata.merge": [[298, "skbio-metadata-samplemetadata-merge"]], "skbio.metadata.SampleMetadata.read": [[299, "skbio-metadata-samplemetadata-read"]], "skbio.metadata.SampleMetadata.save": [[300, "skbio-metadata-samplemetadata-save"]], "skbio.metadata.SampleMetadata.to_dataframe": [[301, "skbio-metadata-samplemetadata-to-dataframe"]], "skbio.metadata.SampleMetadata.write": [[302, "skbio-metadata-samplemetadata-write"]], "skbio.sequence.DNA": [[303, "skbio-sequence-dna"]], "skbio.sequence.DNA.__bool__": [[304, "skbio-sequence-dna-bool"]], "skbio.sequence.DNA.__contains__": [[305, "skbio-sequence-dna-contains"]], "skbio.sequence.DNA.__copy__": [[306, "skbio-sequence-dna-copy"]], "skbio.sequence.DNA.__deepcopy__": [[307, "skbio-sequence-dna-deepcopy"]], "skbio.sequence.DNA.__eq__": [[308, "skbio-sequence-dna-eq"]], "skbio.sequence.DNA.__ge__": [[309, "skbio-sequence-dna-ge"]], "skbio.sequence.DNA.__getitem__": [[310, "skbio-sequence-dna-getitem"]], "skbio.sequence.DNA.__getstate__": [[311, "skbio-sequence-dna-getstate"]], "skbio.sequence.DNA.__gt__": [[312, "skbio-sequence-dna-gt"]], "skbio.sequence.DNA.__iter__": [[313, "skbio-sequence-dna-iter"]], "skbio.sequence.DNA.__le__": [[314, "skbio-sequence-dna-le"]], "skbio.sequence.DNA.__len__": [[315, "skbio-sequence-dna-len"]], "skbio.sequence.DNA.__lt__": [[316, "skbio-sequence-dna-lt"]], "skbio.sequence.DNA.__ne__": [[317, "skbio-sequence-dna-ne"]], "skbio.sequence.DNA.__reversed__": [[318, "skbio-sequence-dna-reversed"]], "skbio.sequence.DNA.__str__": [[319, "skbio-sequence-dna-str"]], "skbio.sequence.DNA.complement": [[320, "skbio-sequence-dna-complement"]], "skbio.sequence.DNA.concat": [[321, "skbio-sequence-dna-concat"]], "skbio.sequence.DNA.count": [[322, "skbio-sequence-dna-count"]], "skbio.sequence.DNA.definites": [[323, "skbio-sequence-dna-definites"]], "skbio.sequence.DNA.degap": [[324, "skbio-sequence-dna-degap"]], "skbio.sequence.DNA.degenerates": [[325, "skbio-sequence-dna-degenerates"]], "skbio.sequence.DNA.distance": [[326, "skbio-sequence-dna-distance"]], "skbio.sequence.DNA.expand_degenerates": [[327, "skbio-sequence-dna-expand-degenerates"]], "skbio.sequence.DNA.find_motifs": [[328, "skbio-sequence-dna-find-motifs"]], "skbio.sequence.DNA.find_with_regex": [[329, "skbio-sequence-dna-find-with-regex"]], "skbio.sequence.DNA.frequencies": [[330, "skbio-sequence-dna-frequencies"]], "skbio.sequence.DNA.gaps": [[331, "skbio-sequence-dna-gaps"]], "skbio.sequence.DNA.gc_content": [[332, "skbio-sequence-dna-gc-content"]], "skbio.sequence.DNA.gc_frequency": [[333, "skbio-sequence-dna-gc-frequency"]], "skbio.sequence.DNA.has_definites": [[334, "skbio-sequence-dna-has-definites"]], "skbio.sequence.DNA.has_degenerates": [[335, "skbio-sequence-dna-has-degenerates"]], "skbio.sequence.DNA.has_gaps": [[336, "skbio-sequence-dna-has-gaps"]], "skbio.sequence.DNA.has_interval_metadata": [[337, "skbio-sequence-dna-has-interval-metadata"]], "skbio.sequence.DNA.has_metadata": [[338, "skbio-sequence-dna-has-metadata"]], "skbio.sequence.DNA.has_nondegenerates": [[339, "skbio-sequence-dna-has-nondegenerates"]], "skbio.sequence.DNA.has_positional_metadata": [[340, "skbio-sequence-dna-has-positional-metadata"]], "skbio.sequence.DNA.index": [[341, "skbio-sequence-dna-index"]], "skbio.sequence.DNA.is_reverse_complement": [[342, "skbio-sequence-dna-is-reverse-complement"]], "skbio.sequence.DNA.iter_contiguous": [[343, "skbio-sequence-dna-iter-contiguous"]], "skbio.sequence.DNA.iter_kmers": [[344, "skbio-sequence-dna-iter-kmers"]], "skbio.sequence.DNA.kmer_frequencies": [[345, "skbio-sequence-dna-kmer-frequencies"]], "skbio.sequence.DNA.lowercase": [[346, "skbio-sequence-dna-lowercase"]], "skbio.sequence.DNA.match_frequency": [[347, "skbio-sequence-dna-match-frequency"]], "skbio.sequence.DNA.matches": [[348, "skbio-sequence-dna-matches"]], "skbio.sequence.DNA.mismatch_frequency": [[349, "skbio-sequence-dna-mismatch-frequency"]], "skbio.sequence.DNA.mismatches": [[350, "skbio-sequence-dna-mismatches"]], "skbio.sequence.DNA.nondegenerates": [[351, "skbio-sequence-dna-nondegenerates"]], "skbio.sequence.DNA.read": [[352, "skbio-sequence-dna-read"]], "skbio.sequence.DNA.replace": [[353, "skbio-sequence-dna-replace"]], "skbio.sequence.DNA.reverse_complement": [[354, "skbio-sequence-dna-reverse-complement"]], "skbio.sequence.DNA.to_definites": [[355, "skbio-sequence-dna-to-definites"]], "skbio.sequence.DNA.to_indices": [[356, "skbio-sequence-dna-to-indices"]], "skbio.sequence.DNA.to_regex": [[357, "skbio-sequence-dna-to-regex"]], "skbio.sequence.DNA.transcribe": [[358, "skbio-sequence-dna-transcribe"]], "skbio.sequence.DNA.translate": [[359, "skbio-sequence-dna-translate"]], "skbio.sequence.DNA.translate_six_frames": [[360, "skbio-sequence-dna-translate-six-frames"]], "skbio.sequence.DNA.write": [[361, "skbio-sequence-dna-write"]], "skbio.sequence.GeneticCode": [[362, "skbio-sequence-geneticcode"]], "skbio.sequence.GeneticCode.__eq__": [[363, "skbio-sequence-geneticcode-eq"]], "skbio.sequence.GeneticCode.__ge__": [[364, "skbio-sequence-geneticcode-ge"]], "skbio.sequence.GeneticCode.__getstate__": [[365, "skbio-sequence-geneticcode-getstate"]], "skbio.sequence.GeneticCode.__gt__": [[366, "skbio-sequence-geneticcode-gt"]], "skbio.sequence.GeneticCode.__le__": [[367, "skbio-sequence-geneticcode-le"]], "skbio.sequence.GeneticCode.__lt__": [[368, "skbio-sequence-geneticcode-lt"]], "skbio.sequence.GeneticCode.__ne__": [[369, "skbio-sequence-geneticcode-ne"]], "skbio.sequence.GeneticCode.__str__": [[370, "skbio-sequence-geneticcode-str"]], "skbio.sequence.GeneticCode.from_ncbi": [[371, "skbio-sequence-geneticcode-from-ncbi"]], "skbio.sequence.GeneticCode.translate": [[372, "skbio-sequence-geneticcode-translate"]], "skbio.sequence.GeneticCode.translate_six_frames": [[373, "skbio-sequence-geneticcode-translate-six-frames"]], "skbio.sequence.GrammaredSequence": [[374, "skbio-sequence-grammaredsequence"]], "skbio.sequence.GrammaredSequence.__bool__": [[375, "skbio-sequence-grammaredsequence-bool"]], "skbio.sequence.GrammaredSequence.__contains__": [[376, "skbio-sequence-grammaredsequence-contains"]], "skbio.sequence.GrammaredSequence.__copy__": [[377, "skbio-sequence-grammaredsequence-copy"]], "skbio.sequence.GrammaredSequence.__deepcopy__": [[378, "skbio-sequence-grammaredsequence-deepcopy"]], "skbio.sequence.GrammaredSequence.__eq__": [[379, "skbio-sequence-grammaredsequence-eq"]], "skbio.sequence.GrammaredSequence.__ge__": [[380, "skbio-sequence-grammaredsequence-ge"]], "skbio.sequence.GrammaredSequence.__getitem__": [[381, "skbio-sequence-grammaredsequence-getitem"]], "skbio.sequence.GrammaredSequence.__getstate__": [[382, "skbio-sequence-grammaredsequence-getstate"]], "skbio.sequence.GrammaredSequence.__gt__": [[383, "skbio-sequence-grammaredsequence-gt"]], "skbio.sequence.GrammaredSequence.__iter__": [[384, "skbio-sequence-grammaredsequence-iter"]], "skbio.sequence.GrammaredSequence.__le__": [[385, "skbio-sequence-grammaredsequence-le"]], "skbio.sequence.GrammaredSequence.__len__": [[386, "skbio-sequence-grammaredsequence-len"]], "skbio.sequence.GrammaredSequence.__lt__": [[387, "skbio-sequence-grammaredsequence-lt"]], "skbio.sequence.GrammaredSequence.__ne__": [[388, "skbio-sequence-grammaredsequence-ne"]], "skbio.sequence.GrammaredSequence.__reversed__": [[389, "skbio-sequence-grammaredsequence-reversed"]], "skbio.sequence.GrammaredSequence.__str__": [[390, "skbio-sequence-grammaredsequence-str"]], "skbio.sequence.GrammaredSequence.concat": [[391, "skbio-sequence-grammaredsequence-concat"]], "skbio.sequence.GrammaredSequence.count": [[392, "skbio-sequence-grammaredsequence-count"]], "skbio.sequence.GrammaredSequence.definites": [[393, "skbio-sequence-grammaredsequence-definites"]], "skbio.sequence.GrammaredSequence.degap": [[394, "skbio-sequence-grammaredsequence-degap"]], "skbio.sequence.GrammaredSequence.degenerates": [[395, "skbio-sequence-grammaredsequence-degenerates"]], "skbio.sequence.GrammaredSequence.distance": [[396, "skbio-sequence-grammaredsequence-distance"]], "skbio.sequence.GrammaredSequence.expand_degenerates": [[397, "skbio-sequence-grammaredsequence-expand-degenerates"]], "skbio.sequence.GrammaredSequence.find_motifs": [[398, "skbio-sequence-grammaredsequence-find-motifs"]], "skbio.sequence.GrammaredSequence.find_with_regex": [[399, "skbio-sequence-grammaredsequence-find-with-regex"]], "skbio.sequence.GrammaredSequence.frequencies": [[400, "skbio-sequence-grammaredsequence-frequencies"]], "skbio.sequence.GrammaredSequence.gaps": [[401, "skbio-sequence-grammaredsequence-gaps"]], "skbio.sequence.GrammaredSequence.has_definites": [[402, "skbio-sequence-grammaredsequence-has-definites"]], "skbio.sequence.GrammaredSequence.has_degenerates": [[403, "skbio-sequence-grammaredsequence-has-degenerates"]], "skbio.sequence.GrammaredSequence.has_gaps": [[404, "skbio-sequence-grammaredsequence-has-gaps"]], "skbio.sequence.GrammaredSequence.has_interval_metadata": [[405, "skbio-sequence-grammaredsequence-has-interval-metadata"]], "skbio.sequence.GrammaredSequence.has_metadata": [[406, "skbio-sequence-grammaredsequence-has-metadata"]], "skbio.sequence.GrammaredSequence.has_nondegenerates": [[407, "skbio-sequence-grammaredsequence-has-nondegenerates"]], "skbio.sequence.GrammaredSequence.has_positional_metadata": [[408, "skbio-sequence-grammaredsequence-has-positional-metadata"]], "skbio.sequence.GrammaredSequence.index": [[409, "skbio-sequence-grammaredsequence-index"]], "skbio.sequence.GrammaredSequence.iter_contiguous": [[410, "skbio-sequence-grammaredsequence-iter-contiguous"]], "skbio.sequence.GrammaredSequence.iter_kmers": [[411, "skbio-sequence-grammaredsequence-iter-kmers"]], "skbio.sequence.GrammaredSequence.kmer_frequencies": [[412, "skbio-sequence-grammaredsequence-kmer-frequencies"]], "skbio.sequence.GrammaredSequence.lowercase": [[413, "skbio-sequence-grammaredsequence-lowercase"]], "skbio.sequence.GrammaredSequence.match_frequency": [[414, "skbio-sequence-grammaredsequence-match-frequency"]], "skbio.sequence.GrammaredSequence.matches": [[415, "skbio-sequence-grammaredsequence-matches"]], "skbio.sequence.GrammaredSequence.mismatch_frequency": [[416, "skbio-sequence-grammaredsequence-mismatch-frequency"]], "skbio.sequence.GrammaredSequence.mismatches": [[417, "skbio-sequence-grammaredsequence-mismatches"]], "skbio.sequence.GrammaredSequence.nondegenerates": [[418, "skbio-sequence-grammaredsequence-nondegenerates"]], "skbio.sequence.GrammaredSequence.read": [[419, "skbio-sequence-grammaredsequence-read"]], "skbio.sequence.GrammaredSequence.replace": [[420, "skbio-sequence-grammaredsequence-replace"]], "skbio.sequence.GrammaredSequence.to_definites": [[421, "skbio-sequence-grammaredsequence-to-definites"]], "skbio.sequence.GrammaredSequence.to_indices": [[422, "skbio-sequence-grammaredsequence-to-indices"]], "skbio.sequence.GrammaredSequence.to_regex": [[423, "skbio-sequence-grammaredsequence-to-regex"]], "skbio.sequence.GrammaredSequence.write": [[424, "skbio-sequence-grammaredsequence-write"]], "skbio.sequence.Protein": [[425, "skbio-sequence-protein"]], "skbio.sequence.Protein.__bool__": [[426, "skbio-sequence-protein-bool"]], "skbio.sequence.Protein.__contains__": [[427, "skbio-sequence-protein-contains"]], "skbio.sequence.Protein.__copy__": [[428, "skbio-sequence-protein-copy"]], "skbio.sequence.Protein.__deepcopy__": [[429, "skbio-sequence-protein-deepcopy"]], "skbio.sequence.Protein.__eq__": [[430, "skbio-sequence-protein-eq"]], "skbio.sequence.Protein.__ge__": [[431, "skbio-sequence-protein-ge"]], "skbio.sequence.Protein.__getitem__": [[432, "skbio-sequence-protein-getitem"]], "skbio.sequence.Protein.__getstate__": [[433, "skbio-sequence-protein-getstate"]], "skbio.sequence.Protein.__gt__": [[434, "skbio-sequence-protein-gt"]], "skbio.sequence.Protein.__iter__": [[435, "skbio-sequence-protein-iter"]], "skbio.sequence.Protein.__le__": [[436, "skbio-sequence-protein-le"]], "skbio.sequence.Protein.__len__": [[437, "skbio-sequence-protein-len"]], "skbio.sequence.Protein.__lt__": [[438, "skbio-sequence-protein-lt"]], "skbio.sequence.Protein.__ne__": [[439, "skbio-sequence-protein-ne"]], "skbio.sequence.Protein.__reversed__": [[440, "skbio-sequence-protein-reversed"]], "skbio.sequence.Protein.__str__": [[441, "skbio-sequence-protein-str"]], "skbio.sequence.Protein.concat": [[442, "skbio-sequence-protein-concat"]], "skbio.sequence.Protein.count": [[443, "skbio-sequence-protein-count"]], "skbio.sequence.Protein.definites": [[444, "skbio-sequence-protein-definites"]], "skbio.sequence.Protein.degap": [[445, "skbio-sequence-protein-degap"]], "skbio.sequence.Protein.degenerates": [[446, "skbio-sequence-protein-degenerates"]], "skbio.sequence.Protein.distance": [[447, "skbio-sequence-protein-distance"]], "skbio.sequence.Protein.expand_degenerates": [[448, "skbio-sequence-protein-expand-degenerates"]], "skbio.sequence.Protein.find_motifs": [[449, "skbio-sequence-protein-find-motifs"]], "skbio.sequence.Protein.find_with_regex": [[450, "skbio-sequence-protein-find-with-regex"]], "skbio.sequence.Protein.frequencies": [[451, "skbio-sequence-protein-frequencies"]], "skbio.sequence.Protein.gaps": [[452, "skbio-sequence-protein-gaps"]], "skbio.sequence.Protein.has_definites": [[453, "skbio-sequence-protein-has-definites"]], "skbio.sequence.Protein.has_degenerates": [[454, "skbio-sequence-protein-has-degenerates"]], "skbio.sequence.Protein.has_gaps": [[455, "skbio-sequence-protein-has-gaps"]], "skbio.sequence.Protein.has_interval_metadata": [[456, "skbio-sequence-protein-has-interval-metadata"]], "skbio.sequence.Protein.has_metadata": [[457, "skbio-sequence-protein-has-metadata"]], "skbio.sequence.Protein.has_nondegenerates": [[458, "skbio-sequence-protein-has-nondegenerates"]], "skbio.sequence.Protein.has_positional_metadata": [[459, "skbio-sequence-protein-has-positional-metadata"]], "skbio.sequence.Protein.has_stops": [[460, "skbio-sequence-protein-has-stops"]], "skbio.sequence.Protein.index": [[461, "skbio-sequence-protein-index"]], "skbio.sequence.Protein.iter_contiguous": [[462, "skbio-sequence-protein-iter-contiguous"]], "skbio.sequence.Protein.iter_kmers": [[463, "skbio-sequence-protein-iter-kmers"]], "skbio.sequence.Protein.kmer_frequencies": [[464, "skbio-sequence-protein-kmer-frequencies"]], "skbio.sequence.Protein.lowercase": [[465, "skbio-sequence-protein-lowercase"]], "skbio.sequence.Protein.match_frequency": [[466, "skbio-sequence-protein-match-frequency"]], "skbio.sequence.Protein.matches": [[467, "skbio-sequence-protein-matches"]], "skbio.sequence.Protein.mismatch_frequency": [[468, "skbio-sequence-protein-mismatch-frequency"]], "skbio.sequence.Protein.mismatches": [[469, "skbio-sequence-protein-mismatches"]], "skbio.sequence.Protein.nondegenerates": [[470, "skbio-sequence-protein-nondegenerates"]], "skbio.sequence.Protein.read": [[471, "skbio-sequence-protein-read"]], "skbio.sequence.Protein.replace": [[472, "skbio-sequence-protein-replace"]], "skbio.sequence.Protein.stops": [[473, "skbio-sequence-protein-stops"]], "skbio.sequence.Protein.to_definites": [[474, "skbio-sequence-protein-to-definites"]], "skbio.sequence.Protein.to_indices": [[475, "skbio-sequence-protein-to-indices"]], "skbio.sequence.Protein.to_regex": [[476, "skbio-sequence-protein-to-regex"]], "skbio.sequence.Protein.write": [[477, "skbio-sequence-protein-write"]], "skbio.sequence.RNA": [[478, "skbio-sequence-rna"]], "skbio.sequence.RNA.__bool__": [[479, "skbio-sequence-rna-bool"]], "skbio.sequence.RNA.__contains__": [[480, "skbio-sequence-rna-contains"]], "skbio.sequence.RNA.__copy__": [[481, "skbio-sequence-rna-copy"]], "skbio.sequence.RNA.__deepcopy__": [[482, "skbio-sequence-rna-deepcopy"]], "skbio.sequence.RNA.__eq__": [[483, "skbio-sequence-rna-eq"]], "skbio.sequence.RNA.__ge__": [[484, "skbio-sequence-rna-ge"]], "skbio.sequence.RNA.__getitem__": [[485, "skbio-sequence-rna-getitem"]], "skbio.sequence.RNA.__getstate__": [[486, "skbio-sequence-rna-getstate"]], "skbio.sequence.RNA.__gt__": [[487, "skbio-sequence-rna-gt"]], "skbio.sequence.RNA.__iter__": [[488, "skbio-sequence-rna-iter"]], "skbio.sequence.RNA.__le__": [[489, "skbio-sequence-rna-le"]], "skbio.sequence.RNA.__len__": [[490, "skbio-sequence-rna-len"]], "skbio.sequence.RNA.__lt__": [[491, "skbio-sequence-rna-lt"]], "skbio.sequence.RNA.__ne__": [[492, "skbio-sequence-rna-ne"]], "skbio.sequence.RNA.__reversed__": [[493, "skbio-sequence-rna-reversed"]], "skbio.sequence.RNA.__str__": [[494, "skbio-sequence-rna-str"]], "skbio.sequence.RNA.complement": [[495, "skbio-sequence-rna-complement"]], "skbio.sequence.RNA.concat": [[496, "skbio-sequence-rna-concat"]], "skbio.sequence.RNA.count": [[497, "skbio-sequence-rna-count"]], "skbio.sequence.RNA.definites": [[498, "skbio-sequence-rna-definites"]], "skbio.sequence.RNA.degap": [[499, "skbio-sequence-rna-degap"]], "skbio.sequence.RNA.degenerates": [[500, "skbio-sequence-rna-degenerates"]], "skbio.sequence.RNA.distance": [[501, "skbio-sequence-rna-distance"]], "skbio.sequence.RNA.expand_degenerates": [[502, "skbio-sequence-rna-expand-degenerates"]], "skbio.sequence.RNA.find_motifs": [[503, "skbio-sequence-rna-find-motifs"]], "skbio.sequence.RNA.find_with_regex": [[504, "skbio-sequence-rna-find-with-regex"]], "skbio.sequence.RNA.frequencies": [[505, "skbio-sequence-rna-frequencies"]], "skbio.sequence.RNA.gaps": [[506, "skbio-sequence-rna-gaps"]], "skbio.sequence.RNA.gc_content": [[507, "skbio-sequence-rna-gc-content"]], "skbio.sequence.RNA.gc_frequency": [[508, "skbio-sequence-rna-gc-frequency"]], "skbio.sequence.RNA.has_definites": [[509, "skbio-sequence-rna-has-definites"]], "skbio.sequence.RNA.has_degenerates": [[510, "skbio-sequence-rna-has-degenerates"]], "skbio.sequence.RNA.has_gaps": [[511, "skbio-sequence-rna-has-gaps"]], "skbio.sequence.RNA.has_interval_metadata": [[512, "skbio-sequence-rna-has-interval-metadata"]], "skbio.sequence.RNA.has_metadata": [[513, "skbio-sequence-rna-has-metadata"]], "skbio.sequence.RNA.has_nondegenerates": [[514, "skbio-sequence-rna-has-nondegenerates"]], "skbio.sequence.RNA.has_positional_metadata": [[515, "skbio-sequence-rna-has-positional-metadata"]], "skbio.sequence.RNA.index": [[516, "skbio-sequence-rna-index"]], "skbio.sequence.RNA.is_reverse_complement": [[517, "skbio-sequence-rna-is-reverse-complement"]], "skbio.sequence.RNA.iter_contiguous": [[518, "skbio-sequence-rna-iter-contiguous"]], "skbio.sequence.RNA.iter_kmers": [[519, "skbio-sequence-rna-iter-kmers"]], "skbio.sequence.RNA.kmer_frequencies": [[520, "skbio-sequence-rna-kmer-frequencies"]], "skbio.sequence.RNA.lowercase": [[521, "skbio-sequence-rna-lowercase"]], "skbio.sequence.RNA.match_frequency": [[522, "skbio-sequence-rna-match-frequency"]], "skbio.sequence.RNA.matches": [[523, "skbio-sequence-rna-matches"]], "skbio.sequence.RNA.mismatch_frequency": [[524, "skbio-sequence-rna-mismatch-frequency"]], "skbio.sequence.RNA.mismatches": [[525, "skbio-sequence-rna-mismatches"]], "skbio.sequence.RNA.nondegenerates": [[526, "skbio-sequence-rna-nondegenerates"]], "skbio.sequence.RNA.read": [[527, "skbio-sequence-rna-read"]], "skbio.sequence.RNA.replace": [[528, "skbio-sequence-rna-replace"]], "skbio.sequence.RNA.reverse_complement": [[529, "skbio-sequence-rna-reverse-complement"]], "skbio.sequence.RNA.reverse_transcribe": [[530, "skbio-sequence-rna-reverse-transcribe"]], "skbio.sequence.RNA.to_definites": [[531, "skbio-sequence-rna-to-definites"]], "skbio.sequence.RNA.to_indices": [[532, "skbio-sequence-rna-to-indices"]], "skbio.sequence.RNA.to_regex": [[533, "skbio-sequence-rna-to-regex"]], "skbio.sequence.RNA.translate": [[534, "skbio-sequence-rna-translate"]], "skbio.sequence.RNA.translate_six_frames": [[535, "skbio-sequence-rna-translate-six-frames"]], "skbio.sequence.RNA.write": [[536, "skbio-sequence-rna-write"]], "skbio.sequence.Sequence": [[537, "skbio-sequence-sequence"]], "skbio.sequence.Sequence.__bool__": [[538, "skbio-sequence-sequence-bool"]], "skbio.sequence.Sequence.__contains__": [[539, "skbio-sequence-sequence-contains"]], "skbio.sequence.Sequence.__copy__": [[540, "skbio-sequence-sequence-copy"]], "skbio.sequence.Sequence.__deepcopy__": [[541, "skbio-sequence-sequence-deepcopy"]], "skbio.sequence.Sequence.__eq__": [[542, "skbio-sequence-sequence-eq"]], "skbio.sequence.Sequence.__ge__": [[543, "skbio-sequence-sequence-ge"]], "skbio.sequence.Sequence.__getitem__": [[544, "skbio-sequence-sequence-getitem"]], "skbio.sequence.Sequence.__getstate__": [[545, "skbio-sequence-sequence-getstate"]], "skbio.sequence.Sequence.__gt__": [[546, "skbio-sequence-sequence-gt"]], "skbio.sequence.Sequence.__iter__": [[547, "skbio-sequence-sequence-iter"]], "skbio.sequence.Sequence.__le__": [[548, "skbio-sequence-sequence-le"]], "skbio.sequence.Sequence.__len__": [[549, "skbio-sequence-sequence-len"]], "skbio.sequence.Sequence.__lt__": [[550, "skbio-sequence-sequence-lt"]], "skbio.sequence.Sequence.__ne__": [[551, "skbio-sequence-sequence-ne"]], "skbio.sequence.Sequence.__reversed__": [[552, "skbio-sequence-sequence-reversed"]], "skbio.sequence.Sequence.__str__": [[553, "skbio-sequence-sequence-str"]], "skbio.sequence.Sequence.concat": [[554, "skbio-sequence-sequence-concat"]], "skbio.sequence.Sequence.count": [[555, "skbio-sequence-sequence-count"]], "skbio.sequence.Sequence.distance": [[556, "skbio-sequence-sequence-distance"]], "skbio.sequence.Sequence.find_with_regex": [[557, "skbio-sequence-sequence-find-with-regex"]], "skbio.sequence.Sequence.frequencies": [[558, "skbio-sequence-sequence-frequencies"]], "skbio.sequence.Sequence.has_interval_metadata": [[559, "skbio-sequence-sequence-has-interval-metadata"]], "skbio.sequence.Sequence.has_metadata": [[560, "skbio-sequence-sequence-has-metadata"]], "skbio.sequence.Sequence.has_positional_metadata": [[561, "skbio-sequence-sequence-has-positional-metadata"]], "skbio.sequence.Sequence.index": [[562, "skbio-sequence-sequence-index"]], "skbio.sequence.Sequence.iter_contiguous": [[563, "skbio-sequence-sequence-iter-contiguous"]], "skbio.sequence.Sequence.iter_kmers": [[564, "skbio-sequence-sequence-iter-kmers"]], "skbio.sequence.Sequence.kmer_frequencies": [[565, "skbio-sequence-sequence-kmer-frequencies"]], "skbio.sequence.Sequence.lowercase": [[566, "skbio-sequence-sequence-lowercase"]], "skbio.sequence.Sequence.match_frequency": [[567, "skbio-sequence-sequence-match-frequency"]], "skbio.sequence.Sequence.matches": [[568, "skbio-sequence-sequence-matches"]], "skbio.sequence.Sequence.mismatch_frequency": [[569, "skbio-sequence-sequence-mismatch-frequency"]], "skbio.sequence.Sequence.mismatches": [[570, "skbio-sequence-sequence-mismatches"]], "skbio.sequence.Sequence.read": [[571, "skbio-sequence-sequence-read"]], "skbio.sequence.Sequence.replace": [[572, "skbio-sequence-sequence-replace"]], "skbio.sequence.Sequence.to_indices": [[573, "skbio-sequence-sequence-to-indices"]], "skbio.sequence.Sequence.write": [[574, "skbio-sequence-sequence-write"]], "skbio.sequence.SubstitutionMatrix": [[575, "skbio-sequence-substitutionmatrix"]], "skbio.sequence.SubstitutionMatrix.__contains__": [[576, "skbio-sequence-substitutionmatrix-contains"]], "skbio.sequence.SubstitutionMatrix.__eq__": [[577, "skbio-sequence-substitutionmatrix-eq"]], "skbio.sequence.SubstitutionMatrix.__ge__": [[578, "skbio-sequence-substitutionmatrix-ge"]], "skbio.sequence.SubstitutionMatrix.__getitem__": [[579, "skbio-sequence-substitutionmatrix-getitem"]], "skbio.sequence.SubstitutionMatrix.__getstate__": [[580, "skbio-sequence-substitutionmatrix-getstate"]], "skbio.sequence.SubstitutionMatrix.__gt__": [[581, "skbio-sequence-substitutionmatrix-gt"]], "skbio.sequence.SubstitutionMatrix.__le__": [[582, "skbio-sequence-substitutionmatrix-le"]], "skbio.sequence.SubstitutionMatrix.__lt__": [[583, "skbio-sequence-substitutionmatrix-lt"]], "skbio.sequence.SubstitutionMatrix.__ne__": [[584, "skbio-sequence-substitutionmatrix-ne"]], "skbio.sequence.SubstitutionMatrix.__str__": [[585, "skbio-sequence-substitutionmatrix-str"]], "skbio.sequence.SubstitutionMatrix.between": [[586, "skbio-sequence-substitutionmatrix-between"]], "skbio.sequence.SubstitutionMatrix.by_name": [[587, "skbio-sequence-substitutionmatrix-by-name"]], "skbio.sequence.SubstitutionMatrix.copy": [[588, "skbio-sequence-substitutionmatrix-copy"]], "skbio.sequence.SubstitutionMatrix.filter": [[589, "skbio-sequence-substitutionmatrix-filter"]], "skbio.sequence.SubstitutionMatrix.from_dict": [[590, "skbio-sequence-substitutionmatrix-from-dict"]], "skbio.sequence.SubstitutionMatrix.from_iterable": [[591, "skbio-sequence-substitutionmatrix-from-iterable"]], "skbio.sequence.SubstitutionMatrix.get_names": [[592, "skbio-sequence-substitutionmatrix-get-names"]], "skbio.sequence.SubstitutionMatrix.identity": [[593, "skbio-sequence-substitutionmatrix-identity"]], "skbio.sequence.SubstitutionMatrix.index": [[594, "skbio-sequence-substitutionmatrix-index"]], "skbio.sequence.SubstitutionMatrix.plot": [[595, "skbio-sequence-substitutionmatrix-plot"]], "skbio.sequence.SubstitutionMatrix.read": [[596, "skbio-sequence-substitutionmatrix-read"]], "skbio.sequence.SubstitutionMatrix.redundant_form": [[597, "skbio-sequence-substitutionmatrix-redundant-form"]], "skbio.sequence.SubstitutionMatrix.to_data_frame": [[598, "skbio-sequence-substitutionmatrix-to-data-frame"]], "skbio.sequence.SubstitutionMatrix.to_dict": [[599, "skbio-sequence-substitutionmatrix-to-dict"]], "skbio.sequence.SubstitutionMatrix.transpose": [[600, "skbio-sequence-substitutionmatrix-transpose"]], "skbio.sequence.SubstitutionMatrix.within": [[601, "skbio-sequence-substitutionmatrix-within"]], "skbio.sequence.SubstitutionMatrix.write": [[602, "skbio-sequence-substitutionmatrix-write"]], "skbio.sequence.distance.hamming": [[604, "skbio-sequence-distance-hamming"]], "skbio.sequence.distance.kmer_distance": [[605, "skbio-sequence-distance-kmer-distance"]], "skbio.stats.composition.alr": [[607, "skbio-stats-composition-alr"]], "skbio.stats.composition.alr_inv": [[608, "skbio-stats-composition-alr-inv"]], "skbio.stats.composition.ancom": [[609, "skbio-stats-composition-ancom"]], "skbio.stats.composition.centralize": [[610, "skbio-stats-composition-centralize"]], "skbio.stats.composition.closure": [[611, "skbio-stats-composition-closure"]], "skbio.stats.composition.clr": [[612, "skbio-stats-composition-clr"]], "skbio.stats.composition.clr_inv": [[613, "skbio-stats-composition-clr-inv"]], "skbio.stats.composition.dirmult_ttest": [[614, "skbio-stats-composition-dirmult-ttest"]], "skbio.stats.composition.ilr": [[615, "skbio-stats-composition-ilr"]], "skbio.stats.composition.ilr_inv": [[616, "skbio-stats-composition-ilr-inv"]], "skbio.stats.composition.inner": [[617, "skbio-stats-composition-inner"]], "skbio.stats.composition.multi_replace": [[618, "skbio-stats-composition-multi-replace"]], "skbio.stats.composition.multiplicative_replacement": [[619, "skbio-stats-composition-multiplicative-replacement"]], "skbio.stats.composition.pairwise_vlr": [[620, "skbio-stats-composition-pairwise-vlr"]], "skbio.stats.composition.perturb": [[621, "skbio-stats-composition-perturb"]], "skbio.stats.composition.perturb_inv": [[622, "skbio-stats-composition-perturb-inv"]], "skbio.stats.composition.power": [[623, "skbio-stats-composition-power"]], "skbio.stats.composition.sbp_basis": [[624, "skbio-stats-composition-sbp-basis"]], "skbio.stats.composition.tree_basis": [[625, "skbio-stats-composition-tree-basis"]], "skbio.stats.composition.vlr": [[626, "skbio-stats-composition-vlr"]], "skbio.stats.distance.DissimilarityMatrix": [[628, "skbio-stats-distance-dissimilaritymatrix"]], "skbio.stats.distance.DissimilarityMatrix.__contains__": [[629, "skbio-stats-distance-dissimilaritymatrix-contains"]], "skbio.stats.distance.DissimilarityMatrix.__eq__": [[630, "skbio-stats-distance-dissimilaritymatrix-eq"]], "skbio.stats.distance.DissimilarityMatrix.__ge__": [[631, "skbio-stats-distance-dissimilaritymatrix-ge"]], "skbio.stats.distance.DissimilarityMatrix.__getitem__": [[632, "skbio-stats-distance-dissimilaritymatrix-getitem"]], "skbio.stats.distance.DissimilarityMatrix.__getstate__": [[633, "skbio-stats-distance-dissimilaritymatrix-getstate"]], "skbio.stats.distance.DissimilarityMatrix.__gt__": [[634, "skbio-stats-distance-dissimilaritymatrix-gt"]], "skbio.stats.distance.DissimilarityMatrix.__le__": [[635, "skbio-stats-distance-dissimilaritymatrix-le"]], "skbio.stats.distance.DissimilarityMatrix.__lt__": [[636, "skbio-stats-distance-dissimilaritymatrix-lt"]], "skbio.stats.distance.DissimilarityMatrix.__ne__": [[637, "skbio-stats-distance-dissimilaritymatrix-ne"]], "skbio.stats.distance.DissimilarityMatrix.__str__": [[638, "skbio-stats-distance-dissimilaritymatrix-str"]], "skbio.stats.distance.DissimilarityMatrix.between": [[639, "skbio-stats-distance-dissimilaritymatrix-between"]], "skbio.stats.distance.DissimilarityMatrix.copy": [[640, "skbio-stats-distance-dissimilaritymatrix-copy"]], "skbio.stats.distance.DissimilarityMatrix.filter": [[641, "skbio-stats-distance-dissimilaritymatrix-filter"]], "skbio.stats.distance.DissimilarityMatrix.from_iterable": [[642, "skbio-stats-distance-dissimilaritymatrix-from-iterable"]], "skbio.stats.distance.DissimilarityMatrix.index": [[643, "skbio-stats-distance-dissimilaritymatrix-index"]], "skbio.stats.distance.DissimilarityMatrix.plot": [[644, "skbio-stats-distance-dissimilaritymatrix-plot"]], "skbio.stats.distance.DissimilarityMatrix.read": [[645, "skbio-stats-distance-dissimilaritymatrix-read"]], "skbio.stats.distance.DissimilarityMatrix.redundant_form": [[646, "skbio-stats-distance-dissimilaritymatrix-redundant-form"]], "skbio.stats.distance.DissimilarityMatrix.to_data_frame": [[647, "skbio-stats-distance-dissimilaritymatrix-to-data-frame"]], "skbio.stats.distance.DissimilarityMatrix.transpose": [[648, "skbio-stats-distance-dissimilaritymatrix-transpose"]], "skbio.stats.distance.DissimilarityMatrix.within": [[649, "skbio-stats-distance-dissimilaritymatrix-within"]], "skbio.stats.distance.DissimilarityMatrix.write": [[650, "skbio-stats-distance-dissimilaritymatrix-write"]], "skbio.stats.distance.DistanceMatrix": [[651, "skbio-stats-distance-distancematrix"]], "skbio.stats.distance.DistanceMatrix.__contains__": [[652, "skbio-stats-distance-distancematrix-contains"]], "skbio.stats.distance.DistanceMatrix.__eq__": [[653, "skbio-stats-distance-distancematrix-eq"]], "skbio.stats.distance.DistanceMatrix.__ge__": [[654, "skbio-stats-distance-distancematrix-ge"]], "skbio.stats.distance.DistanceMatrix.__getitem__": [[655, "skbio-stats-distance-distancematrix-getitem"]], "skbio.stats.distance.DistanceMatrix.__getstate__": [[656, "skbio-stats-distance-distancematrix-getstate"]], "skbio.stats.distance.DistanceMatrix.__gt__": [[657, "skbio-stats-distance-distancematrix-gt"]], "skbio.stats.distance.DistanceMatrix.__le__": [[658, "skbio-stats-distance-distancematrix-le"]], "skbio.stats.distance.DistanceMatrix.__lt__": [[659, "skbio-stats-distance-distancematrix-lt"]], "skbio.stats.distance.DistanceMatrix.__ne__": [[660, "skbio-stats-distance-distancematrix-ne"]], "skbio.stats.distance.DistanceMatrix.__str__": [[661, "skbio-stats-distance-distancematrix-str"]], "skbio.stats.distance.DistanceMatrix.between": [[662, "skbio-stats-distance-distancematrix-between"]], "skbio.stats.distance.DistanceMatrix.condensed_form": [[663, "skbio-stats-distance-distancematrix-condensed-form"]], "skbio.stats.distance.DistanceMatrix.copy": [[664, "skbio-stats-distance-distancematrix-copy"]], "skbio.stats.distance.DistanceMatrix.filter": [[665, "skbio-stats-distance-distancematrix-filter"]], "skbio.stats.distance.DistanceMatrix.from_iterable": [[666, "skbio-stats-distance-distancematrix-from-iterable"]], "skbio.stats.distance.DistanceMatrix.index": [[667, "skbio-stats-distance-distancematrix-index"]], "skbio.stats.distance.DistanceMatrix.permute": [[668, "skbio-stats-distance-distancematrix-permute"]], "skbio.stats.distance.DistanceMatrix.plot": [[669, "skbio-stats-distance-distancematrix-plot"]], "skbio.stats.distance.DistanceMatrix.read": [[670, "skbio-stats-distance-distancematrix-read"]], "skbio.stats.distance.DistanceMatrix.redundant_form": [[671, "skbio-stats-distance-distancematrix-redundant-form"]], "skbio.stats.distance.DistanceMatrix.to_data_frame": [[672, "skbio-stats-distance-distancematrix-to-data-frame"]], "skbio.stats.distance.DistanceMatrix.to_series": [[673, "skbio-stats-distance-distancematrix-to-series"]], "skbio.stats.distance.DistanceMatrix.transpose": [[674, "skbio-stats-distance-distancematrix-transpose"]], "skbio.stats.distance.DistanceMatrix.within": [[675, "skbio-stats-distance-distancematrix-within"]], "skbio.stats.distance.DistanceMatrix.write": [[676, "skbio-stats-distance-distancematrix-write"]], "skbio.stats.distance.anosim": [[677, "skbio-stats-distance-anosim"]], "skbio.stats.distance.bioenv": [[678, "skbio-stats-distance-bioenv"]], "skbio.stats.distance.mantel": [[679, "skbio-stats-distance-mantel"]], "skbio.stats.distance.permanova": [[680, "skbio-stats-distance-permanova"]], "skbio.stats.distance.permdisp": [[681, "skbio-stats-distance-permdisp"]], "skbio.stats.distance.pwmantel": [[682, "skbio-stats-distance-pwmantel"]], "skbio.stats.distance.randdm": [[683, "skbio-stats-distance-randdm"]], "skbio.stats.evolve.hommola_cospeciation": [[685, "skbio-stats-evolve-hommola-cospeciation"]], "skbio.stats.gradient.AverageGradientANOVA": [[687, "skbio-stats-gradient-averagegradientanova"]], "skbio.stats.gradient.AverageGradientANOVA.__eq__": [[688, "skbio-stats-gradient-averagegradientanova-eq"]], "skbio.stats.gradient.AverageGradientANOVA.__ge__": [[689, "skbio-stats-gradient-averagegradientanova-ge"]], "skbio.stats.gradient.AverageGradientANOVA.__getstate__": [[690, "skbio-stats-gradient-averagegradientanova-getstate"]], "skbio.stats.gradient.AverageGradientANOVA.__gt__": [[691, "skbio-stats-gradient-averagegradientanova-gt"]], "skbio.stats.gradient.AverageGradientANOVA.__hash__": [[692, "skbio-stats-gradient-averagegradientanova-hash"]], "skbio.stats.gradient.AverageGradientANOVA.__le__": [[693, "skbio-stats-gradient-averagegradientanova-le"]], "skbio.stats.gradient.AverageGradientANOVA.__lt__": [[694, "skbio-stats-gradient-averagegradientanova-lt"]], "skbio.stats.gradient.AverageGradientANOVA.__ne__": [[695, "skbio-stats-gradient-averagegradientanova-ne"]], "skbio.stats.gradient.AverageGradientANOVA.__str__": [[696, "skbio-stats-gradient-averagegradientanova-str"]], "skbio.stats.gradient.AverageGradientANOVA.get_trajectories": [[697, "skbio-stats-gradient-averagegradientanova-get-trajectories"]], "skbio.stats.gradient.CategoryResults": [[698, "skbio-stats-gradient-categoryresults"]], "skbio.stats.gradient.CategoryResults.__eq__": [[699, "skbio-stats-gradient-categoryresults-eq"]], "skbio.stats.gradient.CategoryResults.__ge__": [[700, "skbio-stats-gradient-categoryresults-ge"]], "skbio.stats.gradient.CategoryResults.__getstate__": [[701, "skbio-stats-gradient-categoryresults-getstate"]], "skbio.stats.gradient.CategoryResults.__gt__": [[702, "skbio-stats-gradient-categoryresults-gt"]], "skbio.stats.gradient.CategoryResults.__hash__": [[703, "skbio-stats-gradient-categoryresults-hash"]], "skbio.stats.gradient.CategoryResults.__le__": [[704, "skbio-stats-gradient-categoryresults-le"]], "skbio.stats.gradient.CategoryResults.__lt__": [[705, "skbio-stats-gradient-categoryresults-lt"]], "skbio.stats.gradient.CategoryResults.__ne__": [[706, "skbio-stats-gradient-categoryresults-ne"]], "skbio.stats.gradient.CategoryResults.__str__": [[707, "skbio-stats-gradient-categoryresults-str"]], "skbio.stats.gradient.CategoryResults.to_files": [[708, "skbio-stats-gradient-categoryresults-to-files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[709, "skbio-stats-gradient-firstdifferencegradientanova"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__": [[710, "skbio-stats-gradient-firstdifferencegradientanova-eq"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__": [[711, "skbio-stats-gradient-firstdifferencegradientanova-ge"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__": [[712, "skbio-stats-gradient-firstdifferencegradientanova-getstate"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__": [[713, "skbio-stats-gradient-firstdifferencegradientanova-gt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__": [[714, "skbio-stats-gradient-firstdifferencegradientanova-hash"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__": [[715, "skbio-stats-gradient-firstdifferencegradientanova-le"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__": [[716, "skbio-stats-gradient-firstdifferencegradientanova-lt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__": [[717, "skbio-stats-gradient-firstdifferencegradientanova-ne"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__": [[718, "skbio-stats-gradient-firstdifferencegradientanova-str"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories": [[719, "skbio-stats-gradient-firstdifferencegradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVA": [[720, "skbio-stats-gradient-gradientanova"]], "skbio.stats.gradient.GradientANOVA.__eq__": [[721, "skbio-stats-gradient-gradientanova-eq"]], "skbio.stats.gradient.GradientANOVA.__ge__": [[722, "skbio-stats-gradient-gradientanova-ge"]], "skbio.stats.gradient.GradientANOVA.__getstate__": [[723, "skbio-stats-gradient-gradientanova-getstate"]], "skbio.stats.gradient.GradientANOVA.__gt__": [[724, "skbio-stats-gradient-gradientanova-gt"]], "skbio.stats.gradient.GradientANOVA.__hash__": [[725, "skbio-stats-gradient-gradientanova-hash"]], "skbio.stats.gradient.GradientANOVA.__le__": [[726, "skbio-stats-gradient-gradientanova-le"]], "skbio.stats.gradient.GradientANOVA.__lt__": [[727, "skbio-stats-gradient-gradientanova-lt"]], "skbio.stats.gradient.GradientANOVA.__ne__": [[728, "skbio-stats-gradient-gradientanova-ne"]], "skbio.stats.gradient.GradientANOVA.__str__": [[729, "skbio-stats-gradient-gradientanova-str"]], "skbio.stats.gradient.GradientANOVA.get_trajectories": [[730, "skbio-stats-gradient-gradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[731, "skbio-stats-gradient-gradientanovaresults"]], "skbio.stats.gradient.GradientANOVAResults.__eq__": [[732, "skbio-stats-gradient-gradientanovaresults-eq"]], "skbio.stats.gradient.GradientANOVAResults.__ge__": [[733, "skbio-stats-gradient-gradientanovaresults-ge"]], "skbio.stats.gradient.GradientANOVAResults.__getstate__": [[734, "skbio-stats-gradient-gradientanovaresults-getstate"]], "skbio.stats.gradient.GradientANOVAResults.__gt__": [[735, "skbio-stats-gradient-gradientanovaresults-gt"]], "skbio.stats.gradient.GradientANOVAResults.__hash__": [[736, "skbio-stats-gradient-gradientanovaresults-hash"]], "skbio.stats.gradient.GradientANOVAResults.__le__": [[737, "skbio-stats-gradient-gradientanovaresults-le"]], "skbio.stats.gradient.GradientANOVAResults.__lt__": [[738, "skbio-stats-gradient-gradientanovaresults-lt"]], "skbio.stats.gradient.GradientANOVAResults.__ne__": [[739, "skbio-stats-gradient-gradientanovaresults-ne"]], "skbio.stats.gradient.GradientANOVAResults.__str__": [[740, "skbio-stats-gradient-gradientanovaresults-str"]], "skbio.stats.gradient.GradientANOVAResults.to_files": [[741, "skbio-stats-gradient-gradientanovaresults-to-files"]], "skbio.stats.gradient.GroupResults": [[742, "skbio-stats-gradient-groupresults"]], "skbio.stats.gradient.GroupResults.__eq__": [[743, "skbio-stats-gradient-groupresults-eq"]], "skbio.stats.gradient.GroupResults.__ge__": [[744, "skbio-stats-gradient-groupresults-ge"]], "skbio.stats.gradient.GroupResults.__getstate__": [[745, "skbio-stats-gradient-groupresults-getstate"]], "skbio.stats.gradient.GroupResults.__gt__": [[746, "skbio-stats-gradient-groupresults-gt"]], "skbio.stats.gradient.GroupResults.__hash__": [[747, "skbio-stats-gradient-groupresults-hash"]], "skbio.stats.gradient.GroupResults.__le__": [[748, "skbio-stats-gradient-groupresults-le"]], "skbio.stats.gradient.GroupResults.__lt__": [[749, "skbio-stats-gradient-groupresults-lt"]], "skbio.stats.gradient.GroupResults.__ne__": [[750, "skbio-stats-gradient-groupresults-ne"]], "skbio.stats.gradient.GroupResults.__str__": [[751, "skbio-stats-gradient-groupresults-str"]], "skbio.stats.gradient.GroupResults.to_files": [[752, "skbio-stats-gradient-groupresults-to-files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[753, "skbio-stats-gradient-trajectorygradientanova"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__": [[754, "skbio-stats-gradient-trajectorygradientanova-eq"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__": [[755, "skbio-stats-gradient-trajectorygradientanova-ge"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__": [[756, "skbio-stats-gradient-trajectorygradientanova-getstate"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__": [[757, "skbio-stats-gradient-trajectorygradientanova-gt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__": [[758, "skbio-stats-gradient-trajectorygradientanova-hash"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__le__": [[759, "skbio-stats-gradient-trajectorygradientanova-le"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__": [[760, "skbio-stats-gradient-trajectorygradientanova-lt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__": [[761, "skbio-stats-gradient-trajectorygradientanova-ne"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__str__": [[762, "skbio-stats-gradient-trajectorygradientanova-str"]], "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories": [[763, "skbio-stats-gradient-trajectorygradientanova-get-trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[764, "skbio-stats-gradient-windowdifferencegradientanova"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__": [[765, "skbio-stats-gradient-windowdifferencegradientanova-eq"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__": [[766, "skbio-stats-gradient-windowdifferencegradientanova-ge"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__": [[767, "skbio-stats-gradient-windowdifferencegradientanova-getstate"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__": [[768, "skbio-stats-gradient-windowdifferencegradientanova-gt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__": [[769, "skbio-stats-gradient-windowdifferencegradientanova-hash"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__": [[770, "skbio-stats-gradient-windowdifferencegradientanova-le"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__": [[771, "skbio-stats-gradient-windowdifferencegradientanova-lt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__": [[772, "skbio-stats-gradient-windowdifferencegradientanova-ne"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__": [[773, "skbio-stats-gradient-windowdifferencegradientanova-str"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories": [[774, "skbio-stats-gradient-windowdifferencegradientanova-get-trajectories"]], "skbio.stats.isubsample": [[775, "skbio-stats-isubsample"]], "skbio.stats.ordination.OrdinationResults": [[777, "skbio-stats-ordination-ordinationresults"]], "skbio.stats.ordination.OrdinationResults.__eq__": [[778, "skbio-stats-ordination-ordinationresults-eq"]], "skbio.stats.ordination.OrdinationResults.__ge__": [[779, "skbio-stats-ordination-ordinationresults-ge"]], "skbio.stats.ordination.OrdinationResults.__getstate__": [[780, "skbio-stats-ordination-ordinationresults-getstate"]], "skbio.stats.ordination.OrdinationResults.__gt__": [[781, "skbio-stats-ordination-ordinationresults-gt"]], "skbio.stats.ordination.OrdinationResults.__hash__": [[782, "skbio-stats-ordination-ordinationresults-hash"]], "skbio.stats.ordination.OrdinationResults.__le__": [[783, "skbio-stats-ordination-ordinationresults-le"]], "skbio.stats.ordination.OrdinationResults.__lt__": [[784, "skbio-stats-ordination-ordinationresults-lt"]], "skbio.stats.ordination.OrdinationResults.__ne__": [[785, "skbio-stats-ordination-ordinationresults-ne"]], "skbio.stats.ordination.OrdinationResults.__str__": [[786, "skbio-stats-ordination-ordinationresults-str"]], "skbio.stats.ordination.OrdinationResults.plot": [[787, "skbio-stats-ordination-ordinationresults-plot"]], "skbio.stats.ordination.OrdinationResults.read": [[788, "skbio-stats-ordination-ordinationresults-read"]], "skbio.stats.ordination.OrdinationResults.write": [[789, "skbio-stats-ordination-ordinationresults-write"]], "skbio.stats.ordination.ca": [[790, "skbio-stats-ordination-ca"]], "skbio.stats.ordination.cca": [[791, "skbio-stats-ordination-cca"]], "skbio.stats.ordination.corr": [[792, "skbio-stats-ordination-corr"]], "skbio.stats.ordination.e_matrix": [[793, "skbio-stats-ordination-e-matrix"]], "skbio.stats.ordination.f_matrix": [[794, "skbio-stats-ordination-f-matrix"]], "skbio.stats.ordination.mean_and_std": [[795, "skbio-stats-ordination-mean-and-std"]], "skbio.stats.ordination.pcoa": [[796, "skbio-stats-ordination-pcoa"]], "skbio.stats.ordination.pcoa_biplot": [[797, "skbio-stats-ordination-pcoa-biplot"]], "skbio.stats.ordination.rda": [[798, "skbio-stats-ordination-rda"]], "skbio.stats.ordination.scale": [[799, "skbio-stats-ordination-scale"]], "skbio.stats.ordination.svd_rank": [[800, "skbio-stats-ordination-svd-rank"]], "skbio.stats.power.confidence_bound": [[802, "skbio-stats-power-confidence-bound"]], "skbio.stats.power.paired_subsamples": [[803, "skbio-stats-power-paired-subsamples"]], "skbio.stats.power.subsample_paired_power": [[804, "skbio-stats-power-subsample-paired-power"]], "skbio.stats.power.subsample_power": [[805, "skbio-stats-power-subsample-power"]], "skbio.stats.subsample_counts": [[806, "skbio-stats-subsample-counts"]], "skbio.table.Table": [[807, "skbio-table-table"]], "skbio.table.Table.__eq__": [[808, "skbio-table-table-eq"]], "skbio.table.Table.__ge__": [[809, "skbio-table-table-ge"]], "skbio.table.Table.__getitem__": [[810, "skbio-table-table-getitem"]], "skbio.table.Table.__getstate__": [[811, "skbio-table-table-getstate"]], "skbio.table.Table.__gt__": [[812, "skbio-table-table-gt"]], "skbio.table.Table.__iter__": [[813, "skbio-table-table-iter"]], "skbio.table.Table.__le__": [[814, "skbio-table-table-le"]], "skbio.table.Table.__lt__": [[815, "skbio-table-table-lt"]], "skbio.table.Table.__ne__": [[816, "skbio-table-table-ne"]], "skbio.table.Table.__str__": [[817, "skbio-table-table-str"]], "skbio.table.Table.add_group_metadata": [[818, "skbio-table-table-add-group-metadata"]], "skbio.table.Table.add_metadata": [[819, "skbio-table-table-add-metadata"]], "skbio.table.Table.align_to": [[820, "skbio-table-table-align-to"]], "skbio.table.Table.align_to_dataframe": [[821, "skbio-table-table-align-to-dataframe"]], "skbio.table.Table.align_tree": [[822, "skbio-table-table-align-tree"]], "skbio.table.Table.collapse": [[823, "skbio-table-table-collapse"]], "skbio.table.Table.concat": [[824, "skbio-table-table-concat"]], "skbio.table.Table.copy": [[825, "skbio-table-table-copy"]], "skbio.table.Table.data": [[826, "skbio-table-table-data"]], "skbio.table.Table.del_metadata": [[827, "skbio-table-table-del-metadata"]], "skbio.table.Table.delimited_self": [[828, "skbio-table-table-delimited-self"]], "skbio.table.Table.descriptive_equality": [[829, "skbio-table-table-descriptive-equality"]], "skbio.table.Table.exists": [[830, "skbio-table-table-exists"]], "skbio.table.Table.filter": [[831, "skbio-table-table-filter"]], "skbio.table.Table.from_adjacency": [[832, "skbio-table-table-from-adjacency"]], "skbio.table.Table.from_hdf5": [[833, "skbio-table-table-from-hdf5"]], "skbio.table.Table.from_json": [[834, "skbio-table-table-from-json"]], "skbio.table.Table.from_tsv": [[835, "skbio-table-table-from-tsv"]], "skbio.table.Table.get_table_density": [[836, "skbio-table-table-get-table-density"]], "skbio.table.Table.get_value_by_ids": [[837, "skbio-table-table-get-value-by-ids"]], "skbio.table.Table.group_metadata": [[838, "skbio-table-table-group-metadata"]], "skbio.table.Table.head": [[839, "skbio-table-table-head"]], "skbio.table.Table.ids": [[840, "skbio-table-table-ids"]], "skbio.table.Table.index": [[841, "skbio-table-table-index"]], "skbio.table.Table.is_empty": [[842, "skbio-table-table-is-empty"]], "skbio.table.Table.iter": [[843, "skbio-table-table-iter"]], "skbio.table.Table.iter_data": [[844, "skbio-table-table-iter-data"]], "skbio.table.Table.iter_pairwise": [[845, "skbio-table-table-iter-pairwise"]], "skbio.table.Table.length": [[846, "skbio-table-table-length"]], "skbio.table.Table.max": [[847, "skbio-table-table-max"]], "skbio.table.Table.merge": [[848, "skbio-table-table-merge"]], "skbio.table.Table.metadata": [[849, "skbio-table-table-metadata"]], "skbio.table.Table.metadata_to_dataframe": [[850, "skbio-table-table-metadata-to-dataframe"]], "skbio.table.Table.min": [[851, "skbio-table-table-min"]], "skbio.table.Table.nonzero": [[852, "skbio-table-table-nonzero"]], "skbio.table.Table.nonzero_counts": [[853, "skbio-table-table-nonzero-counts"]], "skbio.table.Table.norm": [[854, "skbio-table-table-norm"]], "skbio.table.Table.pa": [[855, "skbio-table-table-pa"]], "skbio.table.Table.partition": [[856, "skbio-table-table-partition"]], "skbio.table.Table.rankdata": [[857, "skbio-table-table-rankdata"]], "skbio.table.Table.read": [[858, "skbio-table-table-read"]], "skbio.table.Table.reduce": [[859, "skbio-table-table-reduce"]], "skbio.table.Table.remove_empty": [[860, "skbio-table-table-remove-empty"]], "skbio.table.Table.sort": [[861, "skbio-table-table-sort"]], "skbio.table.Table.sort_order": [[862, "skbio-table-table-sort-order"]], "skbio.table.Table.subsample": [[863, "skbio-table-table-subsample"]], "skbio.table.Table.sum": [[864, "skbio-table-table-sum"]], "skbio.table.Table.to_anndata": [[865, "skbio-table-table-to-anndata"]], "skbio.table.Table.to_dataframe": [[866, "skbio-table-table-to-dataframe"]], "skbio.table.Table.to_hdf5": [[867, "skbio-table-table-to-hdf5"]], "skbio.table.Table.to_json": [[868, "skbio-table-table-to-json"]], "skbio.table.Table.to_tsv": [[869, "skbio-table-table-to-tsv"]], "skbio.table.Table.transform": [[870, "skbio-table-table-transform"]], "skbio.table.Table.transpose": [[871, "skbio-table-table-transpose"]], "skbio.table.Table.update_ids": [[872, "skbio-table-table-update-ids"]], "skbio.table.Table.write": [[873, "skbio-table-table-write"]], "skbio.table.example_table": [[874, "skbio-table-example-table"]], "skbio.tree.TreeNode": [[875, "skbio-tree-treenode"]], "skbio.tree.TreeNode.__copy__": [[876, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.__deepcopy__": [[877, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.__eq__": [[878, "skbio-tree-treenode-eq"]], "skbio.tree.TreeNode.__ge__": [[879, "skbio-tree-treenode-ge"]], "skbio.tree.TreeNode.__getitem__": [[880, "skbio-tree-treenode-getitem"]], "skbio.tree.TreeNode.__getstate__": [[881, "skbio-tree-treenode-getstate"]], "skbio.tree.TreeNode.__gt__": [[882, "skbio-tree-treenode-gt"]], "skbio.tree.TreeNode.__hash__": [[883, "skbio-tree-treenode-hash"]], "skbio.tree.TreeNode.__iter__": [[884, "skbio-tree-treenode-iter"]], "skbio.tree.TreeNode.__le__": [[885, "skbio-tree-treenode-le"]], "skbio.tree.TreeNode.__len__": [[886, "skbio-tree-treenode-len"]], "skbio.tree.TreeNode.__lt__": [[887, "skbio-tree-treenode-lt"]], "skbio.tree.TreeNode.__ne__": [[888, "skbio-tree-treenode-ne"]], "skbio.tree.TreeNode.__str__": [[889, "skbio-tree-treenode-str"]], "skbio.tree.TreeNode.accumulate_to_ancestor": [[890, "skbio-tree-treenode-accumulate-to-ancestor"]], "skbio.tree.TreeNode.ancestors": [[891, "skbio-tree-treenode-ancestors"]], "skbio.tree.TreeNode.append": [[892, "skbio-tree-treenode-append"]], "skbio.tree.TreeNode.ascii_art": [[893, "skbio-tree-treenode-ascii-art"]], "skbio.tree.TreeNode.assign_ids": [[894, "skbio-tree-treenode-assign-ids"]], "skbio.tree.TreeNode.assign_supports": [[895, "skbio-tree-treenode-assign-supports"]], "skbio.tree.TreeNode.bifurcate": [[896, "skbio-tree-treenode-bifurcate"]], "skbio.tree.TreeNode.cache_attr": [[897, "skbio-tree-treenode-cache-attr"]], "skbio.tree.TreeNode.compare_rfd": [[898, "skbio-tree-treenode-compare-rfd"]], "skbio.tree.TreeNode.compare_subsets": [[899, "skbio-tree-treenode-compare-subsets"]], "skbio.tree.TreeNode.compare_tip_distances": [[900, "skbio-tree-treenode-compare-tip-distances"]], "skbio.tree.TreeNode.copy": [[901, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.count": [[902, "skbio-tree-treenode-count"]], "skbio.tree.TreeNode.create_caches": [[903, "skbio-tree-treenode-create-caches"]], "skbio.tree.TreeNode.deepcopy": [[904, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.descending_branch_length": [[905, "skbio-tree-treenode-descending-branch-length"]], "skbio.tree.TreeNode.distance": [[906, "skbio-tree-treenode-distance"]], "skbio.tree.TreeNode.extend": [[907, "skbio-tree-treenode-extend"]], "skbio.tree.TreeNode.find": [[908, "skbio-tree-treenode-find"]], "skbio.tree.TreeNode.find_all": [[909, "skbio-tree-treenode-find-all"]], "skbio.tree.TreeNode.find_by_func": [[910, "skbio-tree-treenode-find-by-func"]], "skbio.tree.TreeNode.find_by_id": [[911, "skbio-tree-treenode-find-by-id"]], "skbio.tree.TreeNode.from_linkage_matrix": [[912, "skbio-tree-treenode-from-linkage-matrix"]], "skbio.tree.TreeNode.from_taxdump": [[913, "skbio-tree-treenode-from-taxdump"]], "skbio.tree.TreeNode.from_taxonomy": [[914, "skbio-tree-treenode-from-taxonomy"]], "skbio.tree.TreeNode.get_max_distance": [[915, "skbio-tree-treenode-get-max-distance"]], "skbio.tree.TreeNode.has_children": [[916, "skbio-tree-treenode-has-children"]], "skbio.tree.TreeNode.index_tree": [[917, "skbio-tree-treenode-index-tree"]], "skbio.tree.TreeNode.invalidate_caches": [[918, "skbio-tree-treenode-invalidate-caches"]], "skbio.tree.TreeNode.is_root": [[919, "skbio-tree-treenode-is-root"]], "skbio.tree.TreeNode.is_tip": [[920, "skbio-tree-treenode-is-tip"]], "skbio.tree.TreeNode.lca": [[921, "skbio-tree-treenode-lca"]], "skbio.tree.TreeNode.levelorder": [[922, "skbio-tree-treenode-levelorder"]], "skbio.tree.TreeNode.lowest_common_ancestor": [[923, "skbio-tree-treenode-lowest-common-ancestor"]], "skbio.tree.TreeNode.neighbors": [[924, "skbio-tree-treenode-neighbors"]], "skbio.tree.TreeNode.non_tips": [[925, "skbio-tree-treenode-non-tips"]], "skbio.tree.TreeNode.observed_node_counts": [[926, "skbio-tree-treenode-observed-node-counts"]], "skbio.tree.TreeNode.pop": [[927, "skbio-tree-treenode-pop"]], "skbio.tree.TreeNode.postorder": [[928, "skbio-tree-treenode-postorder"]], "skbio.tree.TreeNode.pre_and_postorder": [[929, "skbio-tree-treenode-pre-and-postorder"]], "skbio.tree.TreeNode.preorder": [[930, "skbio-tree-treenode-preorder"]], "skbio.tree.TreeNode.prune": [[931, "skbio-tree-treenode-prune"]], "skbio.tree.TreeNode.read": [[932, "skbio-tree-treenode-read"]], "skbio.tree.TreeNode.remove": [[933, "skbio-tree-treenode-remove"]], "skbio.tree.TreeNode.remove_deleted": [[934, "skbio-tree-treenode-remove-deleted"]], "skbio.tree.TreeNode.root": [[935, "skbio-tree-treenode-root"]], "skbio.tree.TreeNode.root_at": [[936, "skbio-tree-treenode-root-at"]], "skbio.tree.TreeNode.root_at_midpoint": [[937, "skbio-tree-treenode-root-at-midpoint"]], "skbio.tree.TreeNode.shear": [[938, "skbio-tree-treenode-shear"]], "skbio.tree.TreeNode.shuffle": [[939, "skbio-tree-treenode-shuffle"]], "skbio.tree.TreeNode.siblings": [[940, "skbio-tree-treenode-siblings"]], "skbio.tree.TreeNode.subset": [[941, "skbio-tree-treenode-subset"]], "skbio.tree.TreeNode.subsets": [[942, "skbio-tree-treenode-subsets"]], "skbio.tree.TreeNode.subtree": [[943, "skbio-tree-treenode-subtree"]], "skbio.tree.TreeNode.tip_tip_distances": [[944, "skbio-tree-treenode-tip-tip-distances"]], "skbio.tree.TreeNode.tips": [[945, "skbio-tree-treenode-tips"]], "skbio.tree.TreeNode.to_array": [[946, "skbio-tree-treenode-to-array"]], "skbio.tree.TreeNode.to_taxonomy": [[947, "skbio-tree-treenode-to-taxonomy"]], "skbio.tree.TreeNode.traverse": [[948, "skbio-tree-treenode-traverse"]], "skbio.tree.TreeNode.unpack": [[949, "skbio-tree-treenode-unpack"]], "skbio.tree.TreeNode.unpack_by_func": [[950, "skbio-tree-treenode-unpack-by-func"]], "skbio.tree.TreeNode.unrooted_copy": [[951, "skbio-tree-treenode-unrooted-copy"]], "skbio.tree.TreeNode.unrooted_deepcopy": [[952, "skbio-tree-treenode-unrooted-deepcopy"]], "skbio.tree.TreeNode.write": [[953, "skbio-tree-treenode-write"]], "skbio.tree.majority_rule": [[954, "skbio-tree-majority-rule"]], "skbio.tree.nj": [[955, "skbio-tree-nj"]], "skbio.util.EfficiencyWarning": [[956, "skbio-util-efficiencywarning"]], "skbio.util.RepresentationWarning": [[957, "skbio-util-representationwarning"]], "skbio.util.assert_data_frame_almost_equal": [[958, "skbio-util-assert-data-frame-almost-equal"]], "skbio.util.assert_ordination_results_equal": [[959, "skbio-util-assert-ordination-results-equal"]], "skbio.util.cardinal_to_ordinal": [[960, "skbio-util-cardinal-to-ordinal"]], "skbio.util.classproperty": [[961, "skbio-util-classproperty"]], "skbio.util.classproperty.__delete__": [[962, "skbio-util-classproperty-delete"]], "skbio.util.classproperty.__eq__": [[963, "skbio-util-classproperty-eq"]], "skbio.util.classproperty.__ge__": [[964, "skbio-util-classproperty-ge"]], "skbio.util.classproperty.__get__": [[965, "skbio-util-classproperty-get"]], "skbio.util.classproperty.__getstate__": [[966, "skbio-util-classproperty-getstate"]], "skbio.util.classproperty.__gt__": [[967, "skbio-util-classproperty-gt"]], "skbio.util.classproperty.__hash__": [[968, "skbio-util-classproperty-hash"]], "skbio.util.classproperty.__le__": [[969, "skbio-util-classproperty-le"]], "skbio.util.classproperty.__lt__": [[970, "skbio-util-classproperty-lt"]], "skbio.util.classproperty.__ne__": [[971, "skbio-util-classproperty-ne"]], "skbio.util.classproperty.__set__": [[972, "skbio-util-classproperty-set"]], "skbio.util.classproperty.__set_name__": [[973, "skbio-util-classproperty-set-name"]], "skbio.util.classproperty.__str__": [[974, "skbio-util-classproperty-str"]], "skbio.util.classproperty.deleter": [[975, "skbio-util-classproperty-deleter"]], "skbio.util.classproperty.getter": [[976, "skbio-util-classproperty-getter"]], "skbio.util.classproperty.setter": [[977, "skbio-util-classproperty-setter"]], "skbio.util.find_duplicates": [[978, "skbio-util-find-duplicates"]], "skbio.util.get_data_path": [[979, "skbio-util-get-data-path"]], "skbio.util.safe_md5": [[980, "skbio-util-safe-md5"]], "skbio.workflow.Workflow": [[981, "skbio-workflow-workflow"]], "skbio.workflow.Workflow.__call__": [[982, "skbio-workflow-workflow-call"]], "skbio.workflow.Workflow.__eq__": [[983, "skbio-workflow-workflow-eq"]], "skbio.workflow.Workflow.__ge__": [[984, "skbio-workflow-workflow-ge"]], "skbio.workflow.Workflow.__getstate__": [[985, "skbio-workflow-workflow-getstate"]], "skbio.workflow.Workflow.__gt__": [[986, "skbio-workflow-workflow-gt"]], "skbio.workflow.Workflow.__hash__": [[987, "skbio-workflow-workflow-hash"]], "skbio.workflow.Workflow.__le__": [[988, "skbio-workflow-workflow-le"]], "skbio.workflow.Workflow.__lt__": [[989, "skbio-workflow-workflow-lt"]], "skbio.workflow.Workflow.__ne__": [[990, "skbio-workflow-workflow-ne"]], "skbio.workflow.Workflow.__str__": [[991, "skbio-workflow-workflow-str"]], "skbio.workflow.Workflow.initialize_state": [[992, "skbio-workflow-workflow-initialize-state"]], "skbio.workflow.method": [[993, "skbio-workflow-method"]], "skbio.workflow.method.__call__": [[994, "skbio-workflow-method-call"]], "skbio.workflow.method.__eq__": [[995, "skbio-workflow-method-eq"]], "skbio.workflow.method.__ge__": [[996, "skbio-workflow-method-ge"]], "skbio.workflow.method.__getstate__": [[997, "skbio-workflow-method-getstate"]], "skbio.workflow.method.__gt__": [[998, "skbio-workflow-method-gt"]], "skbio.workflow.method.__hash__": [[999, "skbio-workflow-method-hash"]], "skbio.workflow.method.__le__": [[1000, "skbio-workflow-method-le"]], "skbio.workflow.method.__lt__": [[1001, "skbio-workflow-method-lt"]], "skbio.workflow.method.__ne__": [[1002, "skbio-workflow-method-ne"]], "skbio.workflow.method.__str__": [[1003, "skbio-workflow-method-str"]], "skbio.workflow.requires": [[1004, "skbio-workflow-requires"]], "skbio.workflow.requires.__call__": [[1005, "skbio-workflow-requires-call"]], "skbio.workflow.requires.__eq__": [[1006, "skbio-workflow-requires-eq"]], "skbio.workflow.requires.__ge__": [[1007, "skbio-workflow-requires-ge"]], "skbio.workflow.requires.__getstate__": [[1008, "skbio-workflow-requires-getstate"]], "skbio.workflow.requires.__gt__": [[1009, "skbio-workflow-requires-gt"]], "skbio.workflow.requires.__hash__": [[1010, "skbio-workflow-requires-hash"]], "skbio.workflow.requires.__le__": [[1011, "skbio-workflow-requires-le"]], "skbio.workflow.requires.__lt__": [[1012, "skbio-workflow-requires-lt"]], "skbio.workflow.requires.__ne__": [[1013, "skbio-workflow-requires-ne"]], "skbio.workflow.requires.__str__": [[1014, "skbio-workflow-requires-str"]]}, "docnames": ["alignment", "diversity", "embedding", "generated/skbio.alignment.AlignmentStructure", "generated/skbio.alignment.AlignmentStructure.__eq__", "generated/skbio.alignment.AlignmentStructure.__ge__", "generated/skbio.alignment.AlignmentStructure.__getitem__", "generated/skbio.alignment.AlignmentStructure.__getstate__", "generated/skbio.alignment.AlignmentStructure.__gt__", "generated/skbio.alignment.AlignmentStructure.__hash__", "generated/skbio.alignment.AlignmentStructure.__le__", "generated/skbio.alignment.AlignmentStructure.__lt__", "generated/skbio.alignment.AlignmentStructure.__ne__", "generated/skbio.alignment.AlignmentStructure.__setstate__", "generated/skbio.alignment.AlignmentStructure.__str__", "generated/skbio.alignment.AlignmentStructure.is_zero_based", "generated/skbio.alignment.AlignmentStructure.set_zero_based", "generated/skbio.alignment.StripedSmithWaterman", "generated/skbio.alignment.StripedSmithWaterman.__call__", "generated/skbio.alignment.StripedSmithWaterman.__eq__", "generated/skbio.alignment.StripedSmithWaterman.__ge__", "generated/skbio.alignment.StripedSmithWaterman.__getstate__", "generated/skbio.alignment.StripedSmithWaterman.__gt__", "generated/skbio.alignment.StripedSmithWaterman.__hash__", "generated/skbio.alignment.StripedSmithWaterman.__le__", "generated/skbio.alignment.StripedSmithWaterman.__lt__", "generated/skbio.alignment.StripedSmithWaterman.__ne__", "generated/skbio.alignment.StripedSmithWaterman.__setstate__", "generated/skbio.alignment.StripedSmithWaterman.__str__", "generated/skbio.alignment.TabularMSA", "generated/skbio.alignment.TabularMSA.__bool__", "generated/skbio.alignment.TabularMSA.__contains__", "generated/skbio.alignment.TabularMSA.__copy__", "generated/skbio.alignment.TabularMSA.__deepcopy__", "generated/skbio.alignment.TabularMSA.__eq__", "generated/skbio.alignment.TabularMSA.__ge__", "generated/skbio.alignment.TabularMSA.__getitem__", "generated/skbio.alignment.TabularMSA.__getstate__", "generated/skbio.alignment.TabularMSA.__gt__", "generated/skbio.alignment.TabularMSA.__iter__", "generated/skbio.alignment.TabularMSA.__le__", "generated/skbio.alignment.TabularMSA.__len__", "generated/skbio.alignment.TabularMSA.__lt__", "generated/skbio.alignment.TabularMSA.__ne__", "generated/skbio.alignment.TabularMSA.__reversed__", "generated/skbio.alignment.TabularMSA.__str__", "generated/skbio.alignment.TabularMSA.append", "generated/skbio.alignment.TabularMSA.consensus", "generated/skbio.alignment.TabularMSA.conservation", "generated/skbio.alignment.TabularMSA.extend", "generated/skbio.alignment.TabularMSA.from_dict", "generated/skbio.alignment.TabularMSA.gap_frequencies", "generated/skbio.alignment.TabularMSA.has_metadata", "generated/skbio.alignment.TabularMSA.has_positional_metadata", "generated/skbio.alignment.TabularMSA.iter_positions", "generated/skbio.alignment.TabularMSA.join", "generated/skbio.alignment.TabularMSA.read", "generated/skbio.alignment.TabularMSA.reassign_index", "generated/skbio.alignment.TabularMSA.sort", "generated/skbio.alignment.TabularMSA.to_dict", "generated/skbio.alignment.TabularMSA.write", "generated/skbio.alignment.global_pairwise_align", "generated/skbio.alignment.global_pairwise_align_nucleotide", "generated/skbio.alignment.global_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align", "generated/skbio.alignment.local_pairwise_align_nucleotide", "generated/skbio.alignment.local_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align_ssw", "generated/skbio.alignment.make_identity_substitution_matrix", "generated/skbio.diversity.alpha", "generated/skbio.diversity.alpha.ace", "generated/skbio.diversity.alpha.berger_parker_d", "generated/skbio.diversity.alpha.brillouin_d", "generated/skbio.diversity.alpha.chao1", "generated/skbio.diversity.alpha.chao1_ci", "generated/skbio.diversity.alpha.dominance", "generated/skbio.diversity.alpha.doubles", "generated/skbio.diversity.alpha.enspie", "generated/skbio.diversity.alpha.esty_ci", "generated/skbio.diversity.alpha.faith_pd", "generated/skbio.diversity.alpha.fisher_alpha", "generated/skbio.diversity.alpha.gini_index", "generated/skbio.diversity.alpha.goods_coverage", "generated/skbio.diversity.alpha.heip_e", "generated/skbio.diversity.alpha.kempton_taylor_q", "generated/skbio.diversity.alpha.lladser_ci", "generated/skbio.diversity.alpha.lladser_pe", "generated/skbio.diversity.alpha.margalef", "generated/skbio.diversity.alpha.mcintosh_d", "generated/skbio.diversity.alpha.mcintosh_e", "generated/skbio.diversity.alpha.menhinick", "generated/skbio.diversity.alpha.michaelis_menten_fit", "generated/skbio.diversity.alpha.observed_features", "generated/skbio.diversity.alpha.observed_otus", "generated/skbio.diversity.alpha.osd", "generated/skbio.diversity.alpha.phydiv", "generated/skbio.diversity.alpha.pielou_e", "generated/skbio.diversity.alpha.robbins", "generated/skbio.diversity.alpha.shannon", "generated/skbio.diversity.alpha.simpson", "generated/skbio.diversity.alpha.simpson_e", "generated/skbio.diversity.alpha.singles", "generated/skbio.diversity.alpha.sobs", "generated/skbio.diversity.alpha.strong", "generated/skbio.diversity.alpha_diversity", "generated/skbio.diversity.beta", "generated/skbio.diversity.beta.unweighted_unifrac", "generated/skbio.diversity.beta.weighted_unifrac", "generated/skbio.diversity.beta_diversity", "generated/skbio.diversity.block_beta_diversity", "generated/skbio.diversity.get_alpha_diversity_metrics", "generated/skbio.diversity.get_beta_diversity_metrics", "generated/skbio.diversity.partial_beta_diversity", "generated/skbio.embedding.ProteinEmbedding", "generated/skbio.embedding.ProteinEmbedding.__eq__", "generated/skbio.embedding.ProteinEmbedding.__ge__", "generated/skbio.embedding.ProteinEmbedding.__getstate__", "generated/skbio.embedding.ProteinEmbedding.__gt__", "generated/skbio.embedding.ProteinEmbedding.__hash__", "generated/skbio.embedding.ProteinEmbedding.__le__", "generated/skbio.embedding.ProteinEmbedding.__lt__", "generated/skbio.embedding.ProteinEmbedding.__ne__", "generated/skbio.embedding.ProteinEmbedding.__str__", "generated/skbio.embedding.ProteinEmbedding.bytes", "generated/skbio.embedding.ProteinEmbedding.read", "generated/skbio.embedding.ProteinEmbedding.write", "generated/skbio.embedding.ProteinVector", "generated/skbio.embedding.ProteinVector.__eq__", "generated/skbio.embedding.ProteinVector.__ge__", "generated/skbio.embedding.ProteinVector.__getstate__", "generated/skbio.embedding.ProteinVector.__gt__", "generated/skbio.embedding.ProteinVector.__hash__", "generated/skbio.embedding.ProteinVector.__le__", "generated/skbio.embedding.ProteinVector.__lt__", "generated/skbio.embedding.ProteinVector.__ne__", "generated/skbio.embedding.ProteinVector.__str__", "generated/skbio.embedding.ProteinVector.bytes", "generated/skbio.embedding.ProteinVector.read", "generated/skbio.embedding.ProteinVector.write", "generated/skbio.io.format.binary_dm", "generated/skbio.io.format.biom", "generated/skbio.io.format.blast6", "generated/skbio.io.format.blast7", "generated/skbio.io.format.clustal", "generated/skbio.io.format.embed", "generated/skbio.io.format.embl", "generated/skbio.io.format.fasta", "generated/skbio.io.format.fastq", "generated/skbio.io.format.genbank", "generated/skbio.io.format.gff3", "generated/skbio.io.format.lsmat", "generated/skbio.io.format.newick", "generated/skbio.io.format.ordination", "generated/skbio.io.format.phylip", "generated/skbio.io.format.qseq", "generated/skbio.io.format.sample_metadata", "generated/skbio.io.format.stockholm", "generated/skbio.io.format.taxdump", "generated/skbio.io.registry", "generated/skbio.io.registry.Format", "generated/skbio.io.registry.Format.__eq__", "generated/skbio.io.registry.Format.__ge__", "generated/skbio.io.registry.Format.__getstate__", "generated/skbio.io.registry.Format.__gt__", "generated/skbio.io.registry.Format.__hash__", "generated/skbio.io.registry.Format.__le__", "generated/skbio.io.registry.Format.__lt__", "generated/skbio.io.registry.Format.__ne__", "generated/skbio.io.registry.Format.__str__", "generated/skbio.io.registry.Format.reader", "generated/skbio.io.registry.Format.sniffer", "generated/skbio.io.registry.Format.writer", "generated/skbio.io.registry.IORegistry", "generated/skbio.io.registry.IORegistry.__eq__", "generated/skbio.io.registry.IORegistry.__ge__", "generated/skbio.io.registry.IORegistry.__getstate__", "generated/skbio.io.registry.IORegistry.__gt__", "generated/skbio.io.registry.IORegistry.__hash__", "generated/skbio.io.registry.IORegistry.__le__", "generated/skbio.io.registry.IORegistry.__lt__", "generated/skbio.io.registry.IORegistry.__ne__", "generated/skbio.io.registry.IORegistry.__str__", "generated/skbio.io.registry.IORegistry.add_format", "generated/skbio.io.registry.IORegistry.create_format", "generated/skbio.io.registry.IORegistry.get_reader", "generated/skbio.io.registry.IORegistry.get_sniffer", "generated/skbio.io.registry.IORegistry.get_writer", "generated/skbio.io.registry.IORegistry.list_read_formats", "generated/skbio.io.registry.IORegistry.list_write_formats", "generated/skbio.io.registry.IORegistry.monkey_patch", "generated/skbio.io.registry.IORegistry.read", "generated/skbio.io.registry.IORegistry.sniff", "generated/skbio.io.registry.IORegistry.write", "generated/skbio.io.registry.create_format", "generated/skbio.io.registry.read", "generated/skbio.io.registry.sniff", "generated/skbio.io.registry.write", "generated/skbio.io.util", "generated/skbio.io.util.open", "generated/skbio.io.util.open_file", "generated/skbio.io.util.open_files", "generated/skbio.metadata.CategoricalMetadataColumn", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__", "generated/skbio.metadata.CategoricalMetadataColumn.__le__", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__", "generated/skbio.metadata.CategoricalMetadataColumn.__str__", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing", "generated/skbio.metadata.CategoricalMetadataColumn.get_value", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.save", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe", "generated/skbio.metadata.CategoricalMetadataColumn.to_series", "generated/skbio.metadata.Interval", "generated/skbio.metadata.Interval.__eq__", "generated/skbio.metadata.Interval.__ge__", "generated/skbio.metadata.Interval.__getstate__", "generated/skbio.metadata.Interval.__gt__", "generated/skbio.metadata.Interval.__le__", "generated/skbio.metadata.Interval.__lt__", "generated/skbio.metadata.Interval.__ne__", "generated/skbio.metadata.Interval.__str__", "generated/skbio.metadata.Interval.drop", "generated/skbio.metadata.IntervalMetadata", "generated/skbio.metadata.IntervalMetadata.__copy__", "generated/skbio.metadata.IntervalMetadata.__deepcopy__", "generated/skbio.metadata.IntervalMetadata.__eq__", "generated/skbio.metadata.IntervalMetadata.__ge__", "generated/skbio.metadata.IntervalMetadata.__getstate__", "generated/skbio.metadata.IntervalMetadata.__gt__", "generated/skbio.metadata.IntervalMetadata.__le__", "generated/skbio.metadata.IntervalMetadata.__lt__", "generated/skbio.metadata.IntervalMetadata.__ne__", "generated/skbio.metadata.IntervalMetadata.__str__", "generated/skbio.metadata.IntervalMetadata.add", "generated/skbio.metadata.IntervalMetadata.concat", "generated/skbio.metadata.IntervalMetadata.drop", "generated/skbio.metadata.IntervalMetadata.merge", "generated/skbio.metadata.IntervalMetadata.query", "generated/skbio.metadata.IntervalMetadata.read", "generated/skbio.metadata.IntervalMetadata.sort", "generated/skbio.metadata.IntervalMetadata.write", "generated/skbio.metadata.MetadataColumn", "generated/skbio.metadata.MetadataColumn.__eq__", "generated/skbio.metadata.MetadataColumn.__ge__", "generated/skbio.metadata.MetadataColumn.__getstate__", "generated/skbio.metadata.MetadataColumn.__gt__", "generated/skbio.metadata.MetadataColumn.__le__", "generated/skbio.metadata.MetadataColumn.__lt__", "generated/skbio.metadata.MetadataColumn.__ne__", "generated/skbio.metadata.MetadataColumn.__str__", "generated/skbio.metadata.MetadataColumn.drop_missing_values", "generated/skbio.metadata.MetadataColumn.filter_ids", "generated/skbio.metadata.MetadataColumn.get_ids", "generated/skbio.metadata.MetadataColumn.get_missing", "generated/skbio.metadata.MetadataColumn.get_value", "generated/skbio.metadata.MetadataColumn.has_missing_values", "generated/skbio.metadata.MetadataColumn.save", "generated/skbio.metadata.MetadataColumn.to_dataframe", "generated/skbio.metadata.MetadataColumn.to_series", "generated/skbio.metadata.NumericMetadataColumn", "generated/skbio.metadata.NumericMetadataColumn.__eq__", "generated/skbio.metadata.NumericMetadataColumn.__ge__", "generated/skbio.metadata.NumericMetadataColumn.__getstate__", "generated/skbio.metadata.NumericMetadataColumn.__gt__", "generated/skbio.metadata.NumericMetadataColumn.__le__", "generated/skbio.metadata.NumericMetadataColumn.__lt__", "generated/skbio.metadata.NumericMetadataColumn.__ne__", "generated/skbio.metadata.NumericMetadataColumn.__str__", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values", "generated/skbio.metadata.NumericMetadataColumn.filter_ids", "generated/skbio.metadata.NumericMetadataColumn.get_ids", "generated/skbio.metadata.NumericMetadataColumn.get_missing", "generated/skbio.metadata.NumericMetadataColumn.get_value", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values", "generated/skbio.metadata.NumericMetadataColumn.save", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe", "generated/skbio.metadata.NumericMetadataColumn.to_series", "generated/skbio.metadata.SampleMetadata", "generated/skbio.metadata.SampleMetadata.__eq__", "generated/skbio.metadata.SampleMetadata.__ge__", "generated/skbio.metadata.SampleMetadata.__getstate__", "generated/skbio.metadata.SampleMetadata.__gt__", "generated/skbio.metadata.SampleMetadata.__le__", "generated/skbio.metadata.SampleMetadata.__lt__", "generated/skbio.metadata.SampleMetadata.__ne__", "generated/skbio.metadata.SampleMetadata.__str__", "generated/skbio.metadata.SampleMetadata.filter_columns", "generated/skbio.metadata.SampleMetadata.filter_ids", "generated/skbio.metadata.SampleMetadata.get_column", "generated/skbio.metadata.SampleMetadata.get_ids", "generated/skbio.metadata.SampleMetadata.load", "generated/skbio.metadata.SampleMetadata.merge", "generated/skbio.metadata.SampleMetadata.read", "generated/skbio.metadata.SampleMetadata.save", "generated/skbio.metadata.SampleMetadata.to_dataframe", "generated/skbio.metadata.SampleMetadata.write", "generated/skbio.sequence.DNA", "generated/skbio.sequence.DNA.__bool__", "generated/skbio.sequence.DNA.__contains__", "generated/skbio.sequence.DNA.__copy__", "generated/skbio.sequence.DNA.__deepcopy__", "generated/skbio.sequence.DNA.__eq__", "generated/skbio.sequence.DNA.__ge__", "generated/skbio.sequence.DNA.__getitem__", "generated/skbio.sequence.DNA.__getstate__", "generated/skbio.sequence.DNA.__gt__", "generated/skbio.sequence.DNA.__iter__", "generated/skbio.sequence.DNA.__le__", "generated/skbio.sequence.DNA.__len__", "generated/skbio.sequence.DNA.__lt__", "generated/skbio.sequence.DNA.__ne__", "generated/skbio.sequence.DNA.__reversed__", "generated/skbio.sequence.DNA.__str__", "generated/skbio.sequence.DNA.complement", "generated/skbio.sequence.DNA.concat", "generated/skbio.sequence.DNA.count", "generated/skbio.sequence.DNA.definites", "generated/skbio.sequence.DNA.degap", "generated/skbio.sequence.DNA.degenerates", "generated/skbio.sequence.DNA.distance", "generated/skbio.sequence.DNA.expand_degenerates", "generated/skbio.sequence.DNA.find_motifs", "generated/skbio.sequence.DNA.find_with_regex", "generated/skbio.sequence.DNA.frequencies", "generated/skbio.sequence.DNA.gaps", "generated/skbio.sequence.DNA.gc_content", "generated/skbio.sequence.DNA.gc_frequency", "generated/skbio.sequence.DNA.has_definites", "generated/skbio.sequence.DNA.has_degenerates", "generated/skbio.sequence.DNA.has_gaps", "generated/skbio.sequence.DNA.has_interval_metadata", "generated/skbio.sequence.DNA.has_metadata", "generated/skbio.sequence.DNA.has_nondegenerates", "generated/skbio.sequence.DNA.has_positional_metadata", "generated/skbio.sequence.DNA.index", "generated/skbio.sequence.DNA.is_reverse_complement", "generated/skbio.sequence.DNA.iter_contiguous", "generated/skbio.sequence.DNA.iter_kmers", "generated/skbio.sequence.DNA.kmer_frequencies", "generated/skbio.sequence.DNA.lowercase", "generated/skbio.sequence.DNA.match_frequency", "generated/skbio.sequence.DNA.matches", "generated/skbio.sequence.DNA.mismatch_frequency", "generated/skbio.sequence.DNA.mismatches", "generated/skbio.sequence.DNA.nondegenerates", "generated/skbio.sequence.DNA.read", "generated/skbio.sequence.DNA.replace", "generated/skbio.sequence.DNA.reverse_complement", "generated/skbio.sequence.DNA.to_definites", "generated/skbio.sequence.DNA.to_indices", "generated/skbio.sequence.DNA.to_regex", "generated/skbio.sequence.DNA.transcribe", "generated/skbio.sequence.DNA.translate", "generated/skbio.sequence.DNA.translate_six_frames", "generated/skbio.sequence.DNA.write", "generated/skbio.sequence.GeneticCode", "generated/skbio.sequence.GeneticCode.__eq__", "generated/skbio.sequence.GeneticCode.__ge__", "generated/skbio.sequence.GeneticCode.__getstate__", "generated/skbio.sequence.GeneticCode.__gt__", "generated/skbio.sequence.GeneticCode.__le__", "generated/skbio.sequence.GeneticCode.__lt__", "generated/skbio.sequence.GeneticCode.__ne__", "generated/skbio.sequence.GeneticCode.__str__", "generated/skbio.sequence.GeneticCode.from_ncbi", "generated/skbio.sequence.GeneticCode.translate", "generated/skbio.sequence.GeneticCode.translate_six_frames", "generated/skbio.sequence.GrammaredSequence", "generated/skbio.sequence.GrammaredSequence.__bool__", "generated/skbio.sequence.GrammaredSequence.__contains__", "generated/skbio.sequence.GrammaredSequence.__copy__", "generated/skbio.sequence.GrammaredSequence.__deepcopy__", "generated/skbio.sequence.GrammaredSequence.__eq__", "generated/skbio.sequence.GrammaredSequence.__ge__", "generated/skbio.sequence.GrammaredSequence.__getitem__", "generated/skbio.sequence.GrammaredSequence.__getstate__", "generated/skbio.sequence.GrammaredSequence.__gt__", "generated/skbio.sequence.GrammaredSequence.__iter__", "generated/skbio.sequence.GrammaredSequence.__le__", "generated/skbio.sequence.GrammaredSequence.__len__", "generated/skbio.sequence.GrammaredSequence.__lt__", "generated/skbio.sequence.GrammaredSequence.__ne__", "generated/skbio.sequence.GrammaredSequence.__reversed__", "generated/skbio.sequence.GrammaredSequence.__str__", "generated/skbio.sequence.GrammaredSequence.concat", "generated/skbio.sequence.GrammaredSequence.count", "generated/skbio.sequence.GrammaredSequence.definites", "generated/skbio.sequence.GrammaredSequence.degap", "generated/skbio.sequence.GrammaredSequence.degenerates", "generated/skbio.sequence.GrammaredSequence.distance", "generated/skbio.sequence.GrammaredSequence.expand_degenerates", "generated/skbio.sequence.GrammaredSequence.find_motifs", "generated/skbio.sequence.GrammaredSequence.find_with_regex", "generated/skbio.sequence.GrammaredSequence.frequencies", "generated/skbio.sequence.GrammaredSequence.gaps", "generated/skbio.sequence.GrammaredSequence.has_definites", "generated/skbio.sequence.GrammaredSequence.has_degenerates", "generated/skbio.sequence.GrammaredSequence.has_gaps", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata", "generated/skbio.sequence.GrammaredSequence.has_metadata", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata", "generated/skbio.sequence.GrammaredSequence.index", "generated/skbio.sequence.GrammaredSequence.iter_contiguous", "generated/skbio.sequence.GrammaredSequence.iter_kmers", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies", "generated/skbio.sequence.GrammaredSequence.lowercase", "generated/skbio.sequence.GrammaredSequence.match_frequency", "generated/skbio.sequence.GrammaredSequence.matches", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency", "generated/skbio.sequence.GrammaredSequence.mismatches", "generated/skbio.sequence.GrammaredSequence.nondegenerates", "generated/skbio.sequence.GrammaredSequence.read", "generated/skbio.sequence.GrammaredSequence.replace", "generated/skbio.sequence.GrammaredSequence.to_definites", "generated/skbio.sequence.GrammaredSequence.to_indices", "generated/skbio.sequence.GrammaredSequence.to_regex", "generated/skbio.sequence.GrammaredSequence.write", "generated/skbio.sequence.Protein", "generated/skbio.sequence.Protein.__bool__", "generated/skbio.sequence.Protein.__contains__", "generated/skbio.sequence.Protein.__copy__", "generated/skbio.sequence.Protein.__deepcopy__", "generated/skbio.sequence.Protein.__eq__", "generated/skbio.sequence.Protein.__ge__", "generated/skbio.sequence.Protein.__getitem__", "generated/skbio.sequence.Protein.__getstate__", "generated/skbio.sequence.Protein.__gt__", "generated/skbio.sequence.Protein.__iter__", "generated/skbio.sequence.Protein.__le__", "generated/skbio.sequence.Protein.__len__", "generated/skbio.sequence.Protein.__lt__", "generated/skbio.sequence.Protein.__ne__", "generated/skbio.sequence.Protein.__reversed__", "generated/skbio.sequence.Protein.__str__", "generated/skbio.sequence.Protein.concat", "generated/skbio.sequence.Protein.count", "generated/skbio.sequence.Protein.definites", "generated/skbio.sequence.Protein.degap", "generated/skbio.sequence.Protein.degenerates", "generated/skbio.sequence.Protein.distance", "generated/skbio.sequence.Protein.expand_degenerates", "generated/skbio.sequence.Protein.find_motifs", "generated/skbio.sequence.Protein.find_with_regex", "generated/skbio.sequence.Protein.frequencies", "generated/skbio.sequence.Protein.gaps", "generated/skbio.sequence.Protein.has_definites", "generated/skbio.sequence.Protein.has_degenerates", "generated/skbio.sequence.Protein.has_gaps", "generated/skbio.sequence.Protein.has_interval_metadata", "generated/skbio.sequence.Protein.has_metadata", "generated/skbio.sequence.Protein.has_nondegenerates", "generated/skbio.sequence.Protein.has_positional_metadata", "generated/skbio.sequence.Protein.has_stops", "generated/skbio.sequence.Protein.index", "generated/skbio.sequence.Protein.iter_contiguous", "generated/skbio.sequence.Protein.iter_kmers", "generated/skbio.sequence.Protein.kmer_frequencies", "generated/skbio.sequence.Protein.lowercase", "generated/skbio.sequence.Protein.match_frequency", "generated/skbio.sequence.Protein.matches", "generated/skbio.sequence.Protein.mismatch_frequency", "generated/skbio.sequence.Protein.mismatches", "generated/skbio.sequence.Protein.nondegenerates", "generated/skbio.sequence.Protein.read", "generated/skbio.sequence.Protein.replace", "generated/skbio.sequence.Protein.stops", "generated/skbio.sequence.Protein.to_definites", "generated/skbio.sequence.Protein.to_indices", "generated/skbio.sequence.Protein.to_regex", "generated/skbio.sequence.Protein.write", "generated/skbio.sequence.RNA", "generated/skbio.sequence.RNA.__bool__", "generated/skbio.sequence.RNA.__contains__", "generated/skbio.sequence.RNA.__copy__", "generated/skbio.sequence.RNA.__deepcopy__", "generated/skbio.sequence.RNA.__eq__", "generated/skbio.sequence.RNA.__ge__", "generated/skbio.sequence.RNA.__getitem__", "generated/skbio.sequence.RNA.__getstate__", "generated/skbio.sequence.RNA.__gt__", "generated/skbio.sequence.RNA.__iter__", "generated/skbio.sequence.RNA.__le__", "generated/skbio.sequence.RNA.__len__", "generated/skbio.sequence.RNA.__lt__", "generated/skbio.sequence.RNA.__ne__", "generated/skbio.sequence.RNA.__reversed__", "generated/skbio.sequence.RNA.__str__", "generated/skbio.sequence.RNA.complement", "generated/skbio.sequence.RNA.concat", "generated/skbio.sequence.RNA.count", "generated/skbio.sequence.RNA.definites", "generated/skbio.sequence.RNA.degap", "generated/skbio.sequence.RNA.degenerates", "generated/skbio.sequence.RNA.distance", "generated/skbio.sequence.RNA.expand_degenerates", "generated/skbio.sequence.RNA.find_motifs", "generated/skbio.sequence.RNA.find_with_regex", "generated/skbio.sequence.RNA.frequencies", "generated/skbio.sequence.RNA.gaps", "generated/skbio.sequence.RNA.gc_content", "generated/skbio.sequence.RNA.gc_frequency", "generated/skbio.sequence.RNA.has_definites", "generated/skbio.sequence.RNA.has_degenerates", "generated/skbio.sequence.RNA.has_gaps", "generated/skbio.sequence.RNA.has_interval_metadata", "generated/skbio.sequence.RNA.has_metadata", "generated/skbio.sequence.RNA.has_nondegenerates", "generated/skbio.sequence.RNA.has_positional_metadata", "generated/skbio.sequence.RNA.index", "generated/skbio.sequence.RNA.is_reverse_complement", "generated/skbio.sequence.RNA.iter_contiguous", "generated/skbio.sequence.RNA.iter_kmers", "generated/skbio.sequence.RNA.kmer_frequencies", "generated/skbio.sequence.RNA.lowercase", "generated/skbio.sequence.RNA.match_frequency", "generated/skbio.sequence.RNA.matches", "generated/skbio.sequence.RNA.mismatch_frequency", "generated/skbio.sequence.RNA.mismatches", "generated/skbio.sequence.RNA.nondegenerates", "generated/skbio.sequence.RNA.read", "generated/skbio.sequence.RNA.replace", "generated/skbio.sequence.RNA.reverse_complement", "generated/skbio.sequence.RNA.reverse_transcribe", "generated/skbio.sequence.RNA.to_definites", "generated/skbio.sequence.RNA.to_indices", "generated/skbio.sequence.RNA.to_regex", "generated/skbio.sequence.RNA.translate", "generated/skbio.sequence.RNA.translate_six_frames", "generated/skbio.sequence.RNA.write", "generated/skbio.sequence.Sequence", "generated/skbio.sequence.Sequence.__bool__", "generated/skbio.sequence.Sequence.__contains__", "generated/skbio.sequence.Sequence.__copy__", "generated/skbio.sequence.Sequence.__deepcopy__", "generated/skbio.sequence.Sequence.__eq__", "generated/skbio.sequence.Sequence.__ge__", "generated/skbio.sequence.Sequence.__getitem__", "generated/skbio.sequence.Sequence.__getstate__", "generated/skbio.sequence.Sequence.__gt__", "generated/skbio.sequence.Sequence.__iter__", "generated/skbio.sequence.Sequence.__le__", "generated/skbio.sequence.Sequence.__len__", "generated/skbio.sequence.Sequence.__lt__", "generated/skbio.sequence.Sequence.__ne__", "generated/skbio.sequence.Sequence.__reversed__", "generated/skbio.sequence.Sequence.__str__", "generated/skbio.sequence.Sequence.concat", "generated/skbio.sequence.Sequence.count", "generated/skbio.sequence.Sequence.distance", "generated/skbio.sequence.Sequence.find_with_regex", "generated/skbio.sequence.Sequence.frequencies", "generated/skbio.sequence.Sequence.has_interval_metadata", "generated/skbio.sequence.Sequence.has_metadata", "generated/skbio.sequence.Sequence.has_positional_metadata", "generated/skbio.sequence.Sequence.index", "generated/skbio.sequence.Sequence.iter_contiguous", "generated/skbio.sequence.Sequence.iter_kmers", "generated/skbio.sequence.Sequence.kmer_frequencies", "generated/skbio.sequence.Sequence.lowercase", "generated/skbio.sequence.Sequence.match_frequency", "generated/skbio.sequence.Sequence.matches", "generated/skbio.sequence.Sequence.mismatch_frequency", "generated/skbio.sequence.Sequence.mismatches", "generated/skbio.sequence.Sequence.read", "generated/skbio.sequence.Sequence.replace", "generated/skbio.sequence.Sequence.to_indices", "generated/skbio.sequence.Sequence.write", "generated/skbio.sequence.SubstitutionMatrix", "generated/skbio.sequence.SubstitutionMatrix.__contains__", "generated/skbio.sequence.SubstitutionMatrix.__eq__", "generated/skbio.sequence.SubstitutionMatrix.__ge__", "generated/skbio.sequence.SubstitutionMatrix.__getitem__", "generated/skbio.sequence.SubstitutionMatrix.__getstate__", "generated/skbio.sequence.SubstitutionMatrix.__gt__", "generated/skbio.sequence.SubstitutionMatrix.__le__", "generated/skbio.sequence.SubstitutionMatrix.__lt__", "generated/skbio.sequence.SubstitutionMatrix.__ne__", "generated/skbio.sequence.SubstitutionMatrix.__str__", "generated/skbio.sequence.SubstitutionMatrix.between", "generated/skbio.sequence.SubstitutionMatrix.by_name", "generated/skbio.sequence.SubstitutionMatrix.copy", "generated/skbio.sequence.SubstitutionMatrix.filter", "generated/skbio.sequence.SubstitutionMatrix.from_dict", "generated/skbio.sequence.SubstitutionMatrix.from_iterable", "generated/skbio.sequence.SubstitutionMatrix.get_names", "generated/skbio.sequence.SubstitutionMatrix.identity", "generated/skbio.sequence.SubstitutionMatrix.index", "generated/skbio.sequence.SubstitutionMatrix.plot", "generated/skbio.sequence.SubstitutionMatrix.read", "generated/skbio.sequence.SubstitutionMatrix.redundant_form", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame", "generated/skbio.sequence.SubstitutionMatrix.to_dict", "generated/skbio.sequence.SubstitutionMatrix.transpose", "generated/skbio.sequence.SubstitutionMatrix.within", "generated/skbio.sequence.SubstitutionMatrix.write", "generated/skbio.sequence.distance", "generated/skbio.sequence.distance.hamming", "generated/skbio.sequence.distance.kmer_distance", "generated/skbio.stats.composition", "generated/skbio.stats.composition.alr", "generated/skbio.stats.composition.alr_inv", "generated/skbio.stats.composition.ancom", "generated/skbio.stats.composition.centralize", "generated/skbio.stats.composition.closure", "generated/skbio.stats.composition.clr", "generated/skbio.stats.composition.clr_inv", "generated/skbio.stats.composition.dirmult_ttest", "generated/skbio.stats.composition.ilr", "generated/skbio.stats.composition.ilr_inv", "generated/skbio.stats.composition.inner", "generated/skbio.stats.composition.multi_replace", "generated/skbio.stats.composition.multiplicative_replacement", "generated/skbio.stats.composition.pairwise_vlr", "generated/skbio.stats.composition.perturb", "generated/skbio.stats.composition.perturb_inv", "generated/skbio.stats.composition.power", "generated/skbio.stats.composition.sbp_basis", "generated/skbio.stats.composition.tree_basis", "generated/skbio.stats.composition.vlr", "generated/skbio.stats.distance", "generated/skbio.stats.distance.DissimilarityMatrix", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__", "generated/skbio.stats.distance.DissimilarityMatrix.__le__", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__", "generated/skbio.stats.distance.DissimilarityMatrix.__str__", "generated/skbio.stats.distance.DissimilarityMatrix.between", "generated/skbio.stats.distance.DissimilarityMatrix.copy", "generated/skbio.stats.distance.DissimilarityMatrix.filter", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable", "generated/skbio.stats.distance.DissimilarityMatrix.index", "generated/skbio.stats.distance.DissimilarityMatrix.plot", "generated/skbio.stats.distance.DissimilarityMatrix.read", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame", "generated/skbio.stats.distance.DissimilarityMatrix.transpose", "generated/skbio.stats.distance.DissimilarityMatrix.within", "generated/skbio.stats.distance.DissimilarityMatrix.write", "generated/skbio.stats.distance.DistanceMatrix", "generated/skbio.stats.distance.DistanceMatrix.__contains__", "generated/skbio.stats.distance.DistanceMatrix.__eq__", "generated/skbio.stats.distance.DistanceMatrix.__ge__", "generated/skbio.stats.distance.DistanceMatrix.__getitem__", "generated/skbio.stats.distance.DistanceMatrix.__getstate__", "generated/skbio.stats.distance.DistanceMatrix.__gt__", "generated/skbio.stats.distance.DistanceMatrix.__le__", "generated/skbio.stats.distance.DistanceMatrix.__lt__", "generated/skbio.stats.distance.DistanceMatrix.__ne__", "generated/skbio.stats.distance.DistanceMatrix.__str__", "generated/skbio.stats.distance.DistanceMatrix.between", "generated/skbio.stats.distance.DistanceMatrix.condensed_form", "generated/skbio.stats.distance.DistanceMatrix.copy", "generated/skbio.stats.distance.DistanceMatrix.filter", "generated/skbio.stats.distance.DistanceMatrix.from_iterable", "generated/skbio.stats.distance.DistanceMatrix.index", "generated/skbio.stats.distance.DistanceMatrix.permute", "generated/skbio.stats.distance.DistanceMatrix.plot", "generated/skbio.stats.distance.DistanceMatrix.read", "generated/skbio.stats.distance.DistanceMatrix.redundant_form", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame", "generated/skbio.stats.distance.DistanceMatrix.to_series", "generated/skbio.stats.distance.DistanceMatrix.transpose", "generated/skbio.stats.distance.DistanceMatrix.within", "generated/skbio.stats.distance.DistanceMatrix.write", "generated/skbio.stats.distance.anosim", "generated/skbio.stats.distance.bioenv", "generated/skbio.stats.distance.mantel", "generated/skbio.stats.distance.permanova", "generated/skbio.stats.distance.permdisp", "generated/skbio.stats.distance.pwmantel", "generated/skbio.stats.distance.randdm", "generated/skbio.stats.evolve", "generated/skbio.stats.evolve.hommola_cospeciation", "generated/skbio.stats.gradient", "generated/skbio.stats.gradient.AverageGradientANOVA", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.CategoryResults", "generated/skbio.stats.gradient.CategoryResults.__eq__", "generated/skbio.stats.gradient.CategoryResults.__ge__", "generated/skbio.stats.gradient.CategoryResults.__getstate__", "generated/skbio.stats.gradient.CategoryResults.__gt__", "generated/skbio.stats.gradient.CategoryResults.__hash__", "generated/skbio.stats.gradient.CategoryResults.__le__", "generated/skbio.stats.gradient.CategoryResults.__lt__", "generated/skbio.stats.gradient.CategoryResults.__ne__", "generated/skbio.stats.gradient.CategoryResults.__str__", "generated/skbio.stats.gradient.CategoryResults.to_files", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVA", "generated/skbio.stats.gradient.GradientANOVA.__eq__", "generated/skbio.stats.gradient.GradientANOVA.__ge__", "generated/skbio.stats.gradient.GradientANOVA.__getstate__", "generated/skbio.stats.gradient.GradientANOVA.__gt__", "generated/skbio.stats.gradient.GradientANOVA.__hash__", "generated/skbio.stats.gradient.GradientANOVA.__le__", "generated/skbio.stats.gradient.GradientANOVA.__lt__", "generated/skbio.stats.gradient.GradientANOVA.__ne__", "generated/skbio.stats.gradient.GradientANOVA.__str__", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVAResults", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__", "generated/skbio.stats.gradient.GradientANOVAResults.__le__", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__", "generated/skbio.stats.gradient.GradientANOVAResults.__str__", "generated/skbio.stats.gradient.GradientANOVAResults.to_files", "generated/skbio.stats.gradient.GroupResults", "generated/skbio.stats.gradient.GroupResults.__eq__", "generated/skbio.stats.gradient.GroupResults.__ge__", "generated/skbio.stats.gradient.GroupResults.__getstate__", "generated/skbio.stats.gradient.GroupResults.__gt__", "generated/skbio.stats.gradient.GroupResults.__hash__", "generated/skbio.stats.gradient.GroupResults.__le__", "generated/skbio.stats.gradient.GroupResults.__lt__", "generated/skbio.stats.gradient.GroupResults.__ne__", "generated/skbio.stats.gradient.GroupResults.__str__", "generated/skbio.stats.gradient.GroupResults.to_files", "generated/skbio.stats.gradient.TrajectoryGradientANOVA", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.isubsample", "generated/skbio.stats.ordination", "generated/skbio.stats.ordination.OrdinationResults", "generated/skbio.stats.ordination.OrdinationResults.__eq__", "generated/skbio.stats.ordination.OrdinationResults.__ge__", "generated/skbio.stats.ordination.OrdinationResults.__getstate__", "generated/skbio.stats.ordination.OrdinationResults.__gt__", "generated/skbio.stats.ordination.OrdinationResults.__hash__", "generated/skbio.stats.ordination.OrdinationResults.__le__", "generated/skbio.stats.ordination.OrdinationResults.__lt__", "generated/skbio.stats.ordination.OrdinationResults.__ne__", "generated/skbio.stats.ordination.OrdinationResults.__str__", "generated/skbio.stats.ordination.OrdinationResults.plot", "generated/skbio.stats.ordination.OrdinationResults.read", "generated/skbio.stats.ordination.OrdinationResults.write", "generated/skbio.stats.ordination.ca", "generated/skbio.stats.ordination.cca", "generated/skbio.stats.ordination.corr", "generated/skbio.stats.ordination.e_matrix", "generated/skbio.stats.ordination.f_matrix", "generated/skbio.stats.ordination.mean_and_std", "generated/skbio.stats.ordination.pcoa", "generated/skbio.stats.ordination.pcoa_biplot", "generated/skbio.stats.ordination.rda", "generated/skbio.stats.ordination.scale", "generated/skbio.stats.ordination.svd_rank", "generated/skbio.stats.power", "generated/skbio.stats.power.confidence_bound", "generated/skbio.stats.power.paired_subsamples", "generated/skbio.stats.power.subsample_paired_power", "generated/skbio.stats.power.subsample_power", "generated/skbio.stats.subsample_counts", "generated/skbio.table.Table", "generated/skbio.table.Table.__eq__", "generated/skbio.table.Table.__ge__", "generated/skbio.table.Table.__getitem__", "generated/skbio.table.Table.__getstate__", "generated/skbio.table.Table.__gt__", "generated/skbio.table.Table.__iter__", "generated/skbio.table.Table.__le__", "generated/skbio.table.Table.__lt__", "generated/skbio.table.Table.__ne__", "generated/skbio.table.Table.__str__", "generated/skbio.table.Table.add_group_metadata", "generated/skbio.table.Table.add_metadata", "generated/skbio.table.Table.align_to", "generated/skbio.table.Table.align_to_dataframe", "generated/skbio.table.Table.align_tree", "generated/skbio.table.Table.collapse", "generated/skbio.table.Table.concat", "generated/skbio.table.Table.copy", "generated/skbio.table.Table.data", "generated/skbio.table.Table.del_metadata", "generated/skbio.table.Table.delimited_self", "generated/skbio.table.Table.descriptive_equality", "generated/skbio.table.Table.exists", "generated/skbio.table.Table.filter", "generated/skbio.table.Table.from_adjacency", "generated/skbio.table.Table.from_hdf5", "generated/skbio.table.Table.from_json", "generated/skbio.table.Table.from_tsv", "generated/skbio.table.Table.get_table_density", "generated/skbio.table.Table.get_value_by_ids", "generated/skbio.table.Table.group_metadata", "generated/skbio.table.Table.head", "generated/skbio.table.Table.ids", "generated/skbio.table.Table.index", "generated/skbio.table.Table.is_empty", "generated/skbio.table.Table.iter", "generated/skbio.table.Table.iter_data", "generated/skbio.table.Table.iter_pairwise", "generated/skbio.table.Table.length", "generated/skbio.table.Table.max", "generated/skbio.table.Table.merge", "generated/skbio.table.Table.metadata", "generated/skbio.table.Table.metadata_to_dataframe", "generated/skbio.table.Table.min", "generated/skbio.table.Table.nonzero", "generated/skbio.table.Table.nonzero_counts", "generated/skbio.table.Table.norm", "generated/skbio.table.Table.pa", "generated/skbio.table.Table.partition", "generated/skbio.table.Table.rankdata", "generated/skbio.table.Table.read", "generated/skbio.table.Table.reduce", "generated/skbio.table.Table.remove_empty", "generated/skbio.table.Table.sort", "generated/skbio.table.Table.sort_order", "generated/skbio.table.Table.subsample", "generated/skbio.table.Table.sum", "generated/skbio.table.Table.to_anndata", "generated/skbio.table.Table.to_dataframe", "generated/skbio.table.Table.to_hdf5", "generated/skbio.table.Table.to_json", "generated/skbio.table.Table.to_tsv", "generated/skbio.table.Table.transform", "generated/skbio.table.Table.transpose", "generated/skbio.table.Table.update_ids", "generated/skbio.table.Table.write", "generated/skbio.table.example_table", "generated/skbio.tree.TreeNode", "generated/skbio.tree.TreeNode.__copy__", "generated/skbio.tree.TreeNode.__deepcopy__", "generated/skbio.tree.TreeNode.__eq__", "generated/skbio.tree.TreeNode.__ge__", "generated/skbio.tree.TreeNode.__getitem__", "generated/skbio.tree.TreeNode.__getstate__", "generated/skbio.tree.TreeNode.__gt__", "generated/skbio.tree.TreeNode.__hash__", "generated/skbio.tree.TreeNode.__iter__", "generated/skbio.tree.TreeNode.__le__", "generated/skbio.tree.TreeNode.__len__", "generated/skbio.tree.TreeNode.__lt__", "generated/skbio.tree.TreeNode.__ne__", "generated/skbio.tree.TreeNode.__str__", "generated/skbio.tree.TreeNode.accumulate_to_ancestor", "generated/skbio.tree.TreeNode.ancestors", "generated/skbio.tree.TreeNode.append", "generated/skbio.tree.TreeNode.ascii_art", "generated/skbio.tree.TreeNode.assign_ids", "generated/skbio.tree.TreeNode.assign_supports", "generated/skbio.tree.TreeNode.bifurcate", "generated/skbio.tree.TreeNode.cache_attr", "generated/skbio.tree.TreeNode.compare_rfd", "generated/skbio.tree.TreeNode.compare_subsets", "generated/skbio.tree.TreeNode.compare_tip_distances", "generated/skbio.tree.TreeNode.copy", "generated/skbio.tree.TreeNode.count", "generated/skbio.tree.TreeNode.create_caches", "generated/skbio.tree.TreeNode.deepcopy", "generated/skbio.tree.TreeNode.descending_branch_length", "generated/skbio.tree.TreeNode.distance", "generated/skbio.tree.TreeNode.extend", "generated/skbio.tree.TreeNode.find", "generated/skbio.tree.TreeNode.find_all", "generated/skbio.tree.TreeNode.find_by_func", "generated/skbio.tree.TreeNode.find_by_id", "generated/skbio.tree.TreeNode.from_linkage_matrix", "generated/skbio.tree.TreeNode.from_taxdump", "generated/skbio.tree.TreeNode.from_taxonomy", "generated/skbio.tree.TreeNode.get_max_distance", "generated/skbio.tree.TreeNode.has_children", "generated/skbio.tree.TreeNode.index_tree", "generated/skbio.tree.TreeNode.invalidate_caches", "generated/skbio.tree.TreeNode.is_root", "generated/skbio.tree.TreeNode.is_tip", "generated/skbio.tree.TreeNode.lca", "generated/skbio.tree.TreeNode.levelorder", "generated/skbio.tree.TreeNode.lowest_common_ancestor", "generated/skbio.tree.TreeNode.neighbors", "generated/skbio.tree.TreeNode.non_tips", "generated/skbio.tree.TreeNode.observed_node_counts", "generated/skbio.tree.TreeNode.pop", "generated/skbio.tree.TreeNode.postorder", "generated/skbio.tree.TreeNode.pre_and_postorder", "generated/skbio.tree.TreeNode.preorder", "generated/skbio.tree.TreeNode.prune", "generated/skbio.tree.TreeNode.read", "generated/skbio.tree.TreeNode.remove", "generated/skbio.tree.TreeNode.remove_deleted", "generated/skbio.tree.TreeNode.root", "generated/skbio.tree.TreeNode.root_at", "generated/skbio.tree.TreeNode.root_at_midpoint", "generated/skbio.tree.TreeNode.shear", "generated/skbio.tree.TreeNode.shuffle", "generated/skbio.tree.TreeNode.siblings", "generated/skbio.tree.TreeNode.subset", "generated/skbio.tree.TreeNode.subsets", "generated/skbio.tree.TreeNode.subtree", "generated/skbio.tree.TreeNode.tip_tip_distances", "generated/skbio.tree.TreeNode.tips", "generated/skbio.tree.TreeNode.to_array", "generated/skbio.tree.TreeNode.to_taxonomy", "generated/skbio.tree.TreeNode.traverse", "generated/skbio.tree.TreeNode.unpack", "generated/skbio.tree.TreeNode.unpack_by_func", "generated/skbio.tree.TreeNode.unrooted_copy", "generated/skbio.tree.TreeNode.unrooted_deepcopy", "generated/skbio.tree.TreeNode.write", "generated/skbio.tree.majority_rule", "generated/skbio.tree.nj", "generated/skbio.util.EfficiencyWarning", "generated/skbio.util.RepresentationWarning", "generated/skbio.util.assert_data_frame_almost_equal", "generated/skbio.util.assert_ordination_results_equal", "generated/skbio.util.cardinal_to_ordinal", "generated/skbio.util.classproperty", "generated/skbio.util.classproperty.__delete__", "generated/skbio.util.classproperty.__eq__", "generated/skbio.util.classproperty.__ge__", "generated/skbio.util.classproperty.__get__", "generated/skbio.util.classproperty.__getstate__", "generated/skbio.util.classproperty.__gt__", "generated/skbio.util.classproperty.__hash__", "generated/skbio.util.classproperty.__le__", "generated/skbio.util.classproperty.__lt__", "generated/skbio.util.classproperty.__ne__", "generated/skbio.util.classproperty.__set__", "generated/skbio.util.classproperty.__set_name__", "generated/skbio.util.classproperty.__str__", "generated/skbio.util.classproperty.deleter", "generated/skbio.util.classproperty.getter", "generated/skbio.util.classproperty.setter", "generated/skbio.util.find_duplicates", "generated/skbio.util.get_data_path", "generated/skbio.util.safe_md5", "generated/skbio.workflow.Workflow", "generated/skbio.workflow.Workflow.__call__", "generated/skbio.workflow.Workflow.__eq__", "generated/skbio.workflow.Workflow.__ge__", "generated/skbio.workflow.Workflow.__getstate__", "generated/skbio.workflow.Workflow.__gt__", "generated/skbio.workflow.Workflow.__hash__", "generated/skbio.workflow.Workflow.__le__", "generated/skbio.workflow.Workflow.__lt__", "generated/skbio.workflow.Workflow.__ne__", "generated/skbio.workflow.Workflow.__str__", "generated/skbio.workflow.Workflow.initialize_state", "generated/skbio.workflow.method", "generated/skbio.workflow.method.__call__", "generated/skbio.workflow.method.__eq__", "generated/skbio.workflow.method.__ge__", "generated/skbio.workflow.method.__getstate__", "generated/skbio.workflow.method.__gt__", "generated/skbio.workflow.method.__hash__", "generated/skbio.workflow.method.__le__", "generated/skbio.workflow.method.__lt__", "generated/skbio.workflow.method.__ne__", "generated/skbio.workflow.method.__str__", "generated/skbio.workflow.requires", "generated/skbio.workflow.requires.__call__", "generated/skbio.workflow.requires.__eq__", "generated/skbio.workflow.requires.__ge__", "generated/skbio.workflow.requires.__getstate__", "generated/skbio.workflow.requires.__gt__", "generated/skbio.workflow.requires.__hash__", "generated/skbio.workflow.requires.__le__", "generated/skbio.workflow.requires.__lt__", "generated/skbio.workflow.requires.__ne__", "generated/skbio.workflow.requires.__str__", "index", "io", "metadata", "sequence", "stats", "table", "tree", "util", "workflow"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["alignment.rst", "diversity.rst", "embedding.rst", "generated/skbio.alignment.AlignmentStructure.rst", "generated/skbio.alignment.AlignmentStructure.__eq__.rst", "generated/skbio.alignment.AlignmentStructure.__ge__.rst", "generated/skbio.alignment.AlignmentStructure.__getitem__.rst", "generated/skbio.alignment.AlignmentStructure.__getstate__.rst", "generated/skbio.alignment.AlignmentStructure.__gt__.rst", "generated/skbio.alignment.AlignmentStructure.__hash__.rst", "generated/skbio.alignment.AlignmentStructure.__le__.rst", "generated/skbio.alignment.AlignmentStructure.__lt__.rst", "generated/skbio.alignment.AlignmentStructure.__ne__.rst", "generated/skbio.alignment.AlignmentStructure.__setstate__.rst", "generated/skbio.alignment.AlignmentStructure.__str__.rst", "generated/skbio.alignment.AlignmentStructure.is_zero_based.rst", "generated/skbio.alignment.AlignmentStructure.set_zero_based.rst", "generated/skbio.alignment.StripedSmithWaterman.rst", "generated/skbio.alignment.StripedSmithWaterman.__call__.rst", "generated/skbio.alignment.StripedSmithWaterman.__eq__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ge__.rst", "generated/skbio.alignment.StripedSmithWaterman.__getstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__gt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__hash__.rst", "generated/skbio.alignment.StripedSmithWaterman.__le__.rst", "generated/skbio.alignment.StripedSmithWaterman.__lt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ne__.rst", "generated/skbio.alignment.StripedSmithWaterman.__setstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__str__.rst", "generated/skbio.alignment.TabularMSA.rst", "generated/skbio.alignment.TabularMSA.__bool__.rst", "generated/skbio.alignment.TabularMSA.__contains__.rst", "generated/skbio.alignment.TabularMSA.__copy__.rst", "generated/skbio.alignment.TabularMSA.__deepcopy__.rst", "generated/skbio.alignment.TabularMSA.__eq__.rst", "generated/skbio.alignment.TabularMSA.__ge__.rst", "generated/skbio.alignment.TabularMSA.__getitem__.rst", "generated/skbio.alignment.TabularMSA.__getstate__.rst", "generated/skbio.alignment.TabularMSA.__gt__.rst", "generated/skbio.alignment.TabularMSA.__iter__.rst", "generated/skbio.alignment.TabularMSA.__le__.rst", "generated/skbio.alignment.TabularMSA.__len__.rst", "generated/skbio.alignment.TabularMSA.__lt__.rst", "generated/skbio.alignment.TabularMSA.__ne__.rst", "generated/skbio.alignment.TabularMSA.__reversed__.rst", "generated/skbio.alignment.TabularMSA.__str__.rst", "generated/skbio.alignment.TabularMSA.append.rst", "generated/skbio.alignment.TabularMSA.consensus.rst", "generated/skbio.alignment.TabularMSA.conservation.rst", "generated/skbio.alignment.TabularMSA.extend.rst", "generated/skbio.alignment.TabularMSA.from_dict.rst", "generated/skbio.alignment.TabularMSA.gap_frequencies.rst", "generated/skbio.alignment.TabularMSA.has_metadata.rst", "generated/skbio.alignment.TabularMSA.has_positional_metadata.rst", "generated/skbio.alignment.TabularMSA.iter_positions.rst", "generated/skbio.alignment.TabularMSA.join.rst", "generated/skbio.alignment.TabularMSA.read.rst", "generated/skbio.alignment.TabularMSA.reassign_index.rst", "generated/skbio.alignment.TabularMSA.sort.rst", "generated/skbio.alignment.TabularMSA.to_dict.rst", "generated/skbio.alignment.TabularMSA.write.rst", "generated/skbio.alignment.global_pairwise_align.rst", "generated/skbio.alignment.global_pairwise_align_nucleotide.rst", "generated/skbio.alignment.global_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align.rst", "generated/skbio.alignment.local_pairwise_align_nucleotide.rst", "generated/skbio.alignment.local_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align_ssw.rst", "generated/skbio.alignment.make_identity_substitution_matrix.rst", "generated/skbio.diversity.alpha.rst", "generated/skbio.diversity.alpha.ace.rst", "generated/skbio.diversity.alpha.berger_parker_d.rst", "generated/skbio.diversity.alpha.brillouin_d.rst", "generated/skbio.diversity.alpha.chao1.rst", "generated/skbio.diversity.alpha.chao1_ci.rst", "generated/skbio.diversity.alpha.dominance.rst", "generated/skbio.diversity.alpha.doubles.rst", "generated/skbio.diversity.alpha.enspie.rst", "generated/skbio.diversity.alpha.esty_ci.rst", "generated/skbio.diversity.alpha.faith_pd.rst", "generated/skbio.diversity.alpha.fisher_alpha.rst", "generated/skbio.diversity.alpha.gini_index.rst", "generated/skbio.diversity.alpha.goods_coverage.rst", "generated/skbio.diversity.alpha.heip_e.rst", "generated/skbio.diversity.alpha.kempton_taylor_q.rst", "generated/skbio.diversity.alpha.lladser_ci.rst", "generated/skbio.diversity.alpha.lladser_pe.rst", "generated/skbio.diversity.alpha.margalef.rst", "generated/skbio.diversity.alpha.mcintosh_d.rst", "generated/skbio.diversity.alpha.mcintosh_e.rst", "generated/skbio.diversity.alpha.menhinick.rst", "generated/skbio.diversity.alpha.michaelis_menten_fit.rst", "generated/skbio.diversity.alpha.observed_features.rst", "generated/skbio.diversity.alpha.observed_otus.rst", "generated/skbio.diversity.alpha.osd.rst", "generated/skbio.diversity.alpha.phydiv.rst", "generated/skbio.diversity.alpha.pielou_e.rst", "generated/skbio.diversity.alpha.robbins.rst", "generated/skbio.diversity.alpha.shannon.rst", "generated/skbio.diversity.alpha.simpson.rst", "generated/skbio.diversity.alpha.simpson_e.rst", "generated/skbio.diversity.alpha.singles.rst", "generated/skbio.diversity.alpha.sobs.rst", "generated/skbio.diversity.alpha.strong.rst", "generated/skbio.diversity.alpha_diversity.rst", "generated/skbio.diversity.beta.rst", "generated/skbio.diversity.beta.unweighted_unifrac.rst", "generated/skbio.diversity.beta.weighted_unifrac.rst", "generated/skbio.diversity.beta_diversity.rst", "generated/skbio.diversity.block_beta_diversity.rst", "generated/skbio.diversity.get_alpha_diversity_metrics.rst", "generated/skbio.diversity.get_beta_diversity_metrics.rst", "generated/skbio.diversity.partial_beta_diversity.rst", "generated/skbio.embedding.ProteinEmbedding.rst", "generated/skbio.embedding.ProteinEmbedding.__eq__.rst", "generated/skbio.embedding.ProteinEmbedding.__ge__.rst", "generated/skbio.embedding.ProteinEmbedding.__getstate__.rst", "generated/skbio.embedding.ProteinEmbedding.__gt__.rst", "generated/skbio.embedding.ProteinEmbedding.__hash__.rst", "generated/skbio.embedding.ProteinEmbedding.__le__.rst", "generated/skbio.embedding.ProteinEmbedding.__lt__.rst", "generated/skbio.embedding.ProteinEmbedding.__ne__.rst", "generated/skbio.embedding.ProteinEmbedding.__str__.rst", "generated/skbio.embedding.ProteinEmbedding.bytes.rst", "generated/skbio.embedding.ProteinEmbedding.read.rst", "generated/skbio.embedding.ProteinEmbedding.write.rst", "generated/skbio.embedding.ProteinVector.rst", "generated/skbio.embedding.ProteinVector.__eq__.rst", "generated/skbio.embedding.ProteinVector.__ge__.rst", "generated/skbio.embedding.ProteinVector.__getstate__.rst", "generated/skbio.embedding.ProteinVector.__gt__.rst", "generated/skbio.embedding.ProteinVector.__hash__.rst", "generated/skbio.embedding.ProteinVector.__le__.rst", "generated/skbio.embedding.ProteinVector.__lt__.rst", "generated/skbio.embedding.ProteinVector.__ne__.rst", "generated/skbio.embedding.ProteinVector.__str__.rst", "generated/skbio.embedding.ProteinVector.bytes.rst", "generated/skbio.embedding.ProteinVector.read.rst", "generated/skbio.embedding.ProteinVector.write.rst", "generated/skbio.io.format.binary_dm.rst", "generated/skbio.io.format.biom.rst", "generated/skbio.io.format.blast6.rst", "generated/skbio.io.format.blast7.rst", "generated/skbio.io.format.clustal.rst", "generated/skbio.io.format.embed.rst", "generated/skbio.io.format.embl.rst", "generated/skbio.io.format.fasta.rst", "generated/skbio.io.format.fastq.rst", "generated/skbio.io.format.genbank.rst", "generated/skbio.io.format.gff3.rst", "generated/skbio.io.format.lsmat.rst", "generated/skbio.io.format.newick.rst", "generated/skbio.io.format.ordination.rst", "generated/skbio.io.format.phylip.rst", "generated/skbio.io.format.qseq.rst", "generated/skbio.io.format.sample_metadata.rst", "generated/skbio.io.format.stockholm.rst", "generated/skbio.io.format.taxdump.rst", "generated/skbio.io.registry.rst", "generated/skbio.io.registry.Format.rst", "generated/skbio.io.registry.Format.__eq__.rst", "generated/skbio.io.registry.Format.__ge__.rst", "generated/skbio.io.registry.Format.__getstate__.rst", "generated/skbio.io.registry.Format.__gt__.rst", "generated/skbio.io.registry.Format.__hash__.rst", "generated/skbio.io.registry.Format.__le__.rst", "generated/skbio.io.registry.Format.__lt__.rst", "generated/skbio.io.registry.Format.__ne__.rst", "generated/skbio.io.registry.Format.__str__.rst", "generated/skbio.io.registry.Format.reader.rst", "generated/skbio.io.registry.Format.sniffer.rst", "generated/skbio.io.registry.Format.writer.rst", "generated/skbio.io.registry.IORegistry.rst", "generated/skbio.io.registry.IORegistry.__eq__.rst", "generated/skbio.io.registry.IORegistry.__ge__.rst", "generated/skbio.io.registry.IORegistry.__getstate__.rst", "generated/skbio.io.registry.IORegistry.__gt__.rst", "generated/skbio.io.registry.IORegistry.__hash__.rst", "generated/skbio.io.registry.IORegistry.__le__.rst", "generated/skbio.io.registry.IORegistry.__lt__.rst", "generated/skbio.io.registry.IORegistry.__ne__.rst", "generated/skbio.io.registry.IORegistry.__str__.rst", "generated/skbio.io.registry.IORegistry.add_format.rst", "generated/skbio.io.registry.IORegistry.create_format.rst", "generated/skbio.io.registry.IORegistry.get_reader.rst", "generated/skbio.io.registry.IORegistry.get_sniffer.rst", "generated/skbio.io.registry.IORegistry.get_writer.rst", "generated/skbio.io.registry.IORegistry.list_read_formats.rst", "generated/skbio.io.registry.IORegistry.list_write_formats.rst", "generated/skbio.io.registry.IORegistry.monkey_patch.rst", "generated/skbio.io.registry.IORegistry.read.rst", "generated/skbio.io.registry.IORegistry.sniff.rst", "generated/skbio.io.registry.IORegistry.write.rst", "generated/skbio.io.registry.create_format.rst", "generated/skbio.io.registry.read.rst", "generated/skbio.io.registry.sniff.rst", "generated/skbio.io.registry.write.rst", "generated/skbio.io.util.rst", "generated/skbio.io.util.open.rst", "generated/skbio.io.util.open_file.rst", "generated/skbio.io.util.open_files.rst", "generated/skbio.metadata.CategoricalMetadataColumn.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__le__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__str__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_value.rst", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.save.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_series.rst", "generated/skbio.metadata.Interval.rst", "generated/skbio.metadata.Interval.__eq__.rst", "generated/skbio.metadata.Interval.__ge__.rst", "generated/skbio.metadata.Interval.__getstate__.rst", "generated/skbio.metadata.Interval.__gt__.rst", "generated/skbio.metadata.Interval.__le__.rst", "generated/skbio.metadata.Interval.__lt__.rst", "generated/skbio.metadata.Interval.__ne__.rst", "generated/skbio.metadata.Interval.__str__.rst", "generated/skbio.metadata.Interval.drop.rst", "generated/skbio.metadata.IntervalMetadata.rst", "generated/skbio.metadata.IntervalMetadata.__copy__.rst", "generated/skbio.metadata.IntervalMetadata.__deepcopy__.rst", "generated/skbio.metadata.IntervalMetadata.__eq__.rst", "generated/skbio.metadata.IntervalMetadata.__ge__.rst", "generated/skbio.metadata.IntervalMetadata.__getstate__.rst", "generated/skbio.metadata.IntervalMetadata.__gt__.rst", "generated/skbio.metadata.IntervalMetadata.__le__.rst", "generated/skbio.metadata.IntervalMetadata.__lt__.rst", "generated/skbio.metadata.IntervalMetadata.__ne__.rst", "generated/skbio.metadata.IntervalMetadata.__str__.rst", "generated/skbio.metadata.IntervalMetadata.add.rst", "generated/skbio.metadata.IntervalMetadata.concat.rst", "generated/skbio.metadata.IntervalMetadata.drop.rst", "generated/skbio.metadata.IntervalMetadata.merge.rst", "generated/skbio.metadata.IntervalMetadata.query.rst", "generated/skbio.metadata.IntervalMetadata.read.rst", "generated/skbio.metadata.IntervalMetadata.sort.rst", "generated/skbio.metadata.IntervalMetadata.write.rst", "generated/skbio.metadata.MetadataColumn.rst", "generated/skbio.metadata.MetadataColumn.__eq__.rst", "generated/skbio.metadata.MetadataColumn.__ge__.rst", "generated/skbio.metadata.MetadataColumn.__getstate__.rst", "generated/skbio.metadata.MetadataColumn.__gt__.rst", "generated/skbio.metadata.MetadataColumn.__le__.rst", "generated/skbio.metadata.MetadataColumn.__lt__.rst", "generated/skbio.metadata.MetadataColumn.__ne__.rst", "generated/skbio.metadata.MetadataColumn.__str__.rst", "generated/skbio.metadata.MetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.MetadataColumn.filter_ids.rst", "generated/skbio.metadata.MetadataColumn.get_ids.rst", "generated/skbio.metadata.MetadataColumn.get_missing.rst", "generated/skbio.metadata.MetadataColumn.get_value.rst", "generated/skbio.metadata.MetadataColumn.has_missing_values.rst", "generated/skbio.metadata.MetadataColumn.save.rst", "generated/skbio.metadata.MetadataColumn.to_dataframe.rst", "generated/skbio.metadata.MetadataColumn.to_series.rst", "generated/skbio.metadata.NumericMetadataColumn.rst", "generated/skbio.metadata.NumericMetadataColumn.__eq__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ge__.rst", "generated/skbio.metadata.NumericMetadataColumn.__getstate__.rst", "generated/skbio.metadata.NumericMetadataColumn.__gt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__le__.rst", "generated/skbio.metadata.NumericMetadataColumn.__lt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ne__.rst", "generated/skbio.metadata.NumericMetadataColumn.__str__.rst", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.filter_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_missing.rst", "generated/skbio.metadata.NumericMetadataColumn.get_value.rst", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.save.rst", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.NumericMetadataColumn.to_series.rst", "generated/skbio.metadata.SampleMetadata.rst", "generated/skbio.metadata.SampleMetadata.__eq__.rst", "generated/skbio.metadata.SampleMetadata.__ge__.rst", "generated/skbio.metadata.SampleMetadata.__getstate__.rst", "generated/skbio.metadata.SampleMetadata.__gt__.rst", "generated/skbio.metadata.SampleMetadata.__le__.rst", "generated/skbio.metadata.SampleMetadata.__lt__.rst", "generated/skbio.metadata.SampleMetadata.__ne__.rst", "generated/skbio.metadata.SampleMetadata.__str__.rst", "generated/skbio.metadata.SampleMetadata.filter_columns.rst", "generated/skbio.metadata.SampleMetadata.filter_ids.rst", "generated/skbio.metadata.SampleMetadata.get_column.rst", "generated/skbio.metadata.SampleMetadata.get_ids.rst", "generated/skbio.metadata.SampleMetadata.load.rst", "generated/skbio.metadata.SampleMetadata.merge.rst", "generated/skbio.metadata.SampleMetadata.read.rst", "generated/skbio.metadata.SampleMetadata.save.rst", "generated/skbio.metadata.SampleMetadata.to_dataframe.rst", "generated/skbio.metadata.SampleMetadata.write.rst", "generated/skbio.sequence.DNA.rst", "generated/skbio.sequence.DNA.__bool__.rst", "generated/skbio.sequence.DNA.__contains__.rst", "generated/skbio.sequence.DNA.__copy__.rst", "generated/skbio.sequence.DNA.__deepcopy__.rst", "generated/skbio.sequence.DNA.__eq__.rst", "generated/skbio.sequence.DNA.__ge__.rst", "generated/skbio.sequence.DNA.__getitem__.rst", "generated/skbio.sequence.DNA.__getstate__.rst", "generated/skbio.sequence.DNA.__gt__.rst", "generated/skbio.sequence.DNA.__iter__.rst", "generated/skbio.sequence.DNA.__le__.rst", "generated/skbio.sequence.DNA.__len__.rst", "generated/skbio.sequence.DNA.__lt__.rst", "generated/skbio.sequence.DNA.__ne__.rst", "generated/skbio.sequence.DNA.__reversed__.rst", "generated/skbio.sequence.DNA.__str__.rst", "generated/skbio.sequence.DNA.complement.rst", "generated/skbio.sequence.DNA.concat.rst", "generated/skbio.sequence.DNA.count.rst", "generated/skbio.sequence.DNA.definites.rst", "generated/skbio.sequence.DNA.degap.rst", "generated/skbio.sequence.DNA.degenerates.rst", "generated/skbio.sequence.DNA.distance.rst", "generated/skbio.sequence.DNA.expand_degenerates.rst", "generated/skbio.sequence.DNA.find_motifs.rst", "generated/skbio.sequence.DNA.find_with_regex.rst", "generated/skbio.sequence.DNA.frequencies.rst", "generated/skbio.sequence.DNA.gaps.rst", "generated/skbio.sequence.DNA.gc_content.rst", "generated/skbio.sequence.DNA.gc_frequency.rst", "generated/skbio.sequence.DNA.has_definites.rst", "generated/skbio.sequence.DNA.has_degenerates.rst", "generated/skbio.sequence.DNA.has_gaps.rst", "generated/skbio.sequence.DNA.has_interval_metadata.rst", "generated/skbio.sequence.DNA.has_metadata.rst", "generated/skbio.sequence.DNA.has_nondegenerates.rst", "generated/skbio.sequence.DNA.has_positional_metadata.rst", "generated/skbio.sequence.DNA.index.rst", "generated/skbio.sequence.DNA.is_reverse_complement.rst", "generated/skbio.sequence.DNA.iter_contiguous.rst", "generated/skbio.sequence.DNA.iter_kmers.rst", "generated/skbio.sequence.DNA.kmer_frequencies.rst", "generated/skbio.sequence.DNA.lowercase.rst", "generated/skbio.sequence.DNA.match_frequency.rst", "generated/skbio.sequence.DNA.matches.rst", "generated/skbio.sequence.DNA.mismatch_frequency.rst", "generated/skbio.sequence.DNA.mismatches.rst", "generated/skbio.sequence.DNA.nondegenerates.rst", "generated/skbio.sequence.DNA.read.rst", "generated/skbio.sequence.DNA.replace.rst", "generated/skbio.sequence.DNA.reverse_complement.rst", "generated/skbio.sequence.DNA.to_definites.rst", "generated/skbio.sequence.DNA.to_indices.rst", "generated/skbio.sequence.DNA.to_regex.rst", "generated/skbio.sequence.DNA.transcribe.rst", "generated/skbio.sequence.DNA.translate.rst", "generated/skbio.sequence.DNA.translate_six_frames.rst", "generated/skbio.sequence.DNA.write.rst", "generated/skbio.sequence.GeneticCode.rst", "generated/skbio.sequence.GeneticCode.__eq__.rst", "generated/skbio.sequence.GeneticCode.__ge__.rst", "generated/skbio.sequence.GeneticCode.__getstate__.rst", "generated/skbio.sequence.GeneticCode.__gt__.rst", "generated/skbio.sequence.GeneticCode.__le__.rst", "generated/skbio.sequence.GeneticCode.__lt__.rst", "generated/skbio.sequence.GeneticCode.__ne__.rst", "generated/skbio.sequence.GeneticCode.__str__.rst", "generated/skbio.sequence.GeneticCode.from_ncbi.rst", "generated/skbio.sequence.GeneticCode.translate.rst", "generated/skbio.sequence.GeneticCode.translate_six_frames.rst", "generated/skbio.sequence.GrammaredSequence.rst", "generated/skbio.sequence.GrammaredSequence.__bool__.rst", "generated/skbio.sequence.GrammaredSequence.__contains__.rst", "generated/skbio.sequence.GrammaredSequence.__copy__.rst", "generated/skbio.sequence.GrammaredSequence.__deepcopy__.rst", "generated/skbio.sequence.GrammaredSequence.__eq__.rst", "generated/skbio.sequence.GrammaredSequence.__ge__.rst", "generated/skbio.sequence.GrammaredSequence.__getitem__.rst", "generated/skbio.sequence.GrammaredSequence.__getstate__.rst", "generated/skbio.sequence.GrammaredSequence.__gt__.rst", "generated/skbio.sequence.GrammaredSequence.__iter__.rst", "generated/skbio.sequence.GrammaredSequence.__le__.rst", "generated/skbio.sequence.GrammaredSequence.__len__.rst", "generated/skbio.sequence.GrammaredSequence.__lt__.rst", "generated/skbio.sequence.GrammaredSequence.__ne__.rst", "generated/skbio.sequence.GrammaredSequence.__reversed__.rst", "generated/skbio.sequence.GrammaredSequence.__str__.rst", "generated/skbio.sequence.GrammaredSequence.concat.rst", "generated/skbio.sequence.GrammaredSequence.count.rst", "generated/skbio.sequence.GrammaredSequence.definites.rst", "generated/skbio.sequence.GrammaredSequence.degap.rst", "generated/skbio.sequence.GrammaredSequence.degenerates.rst", "generated/skbio.sequence.GrammaredSequence.distance.rst", "generated/skbio.sequence.GrammaredSequence.expand_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.find_motifs.rst", "generated/skbio.sequence.GrammaredSequence.find_with_regex.rst", "generated/skbio.sequence.GrammaredSequence.frequencies.rst", "generated/skbio.sequence.GrammaredSequence.gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_definites.rst", "generated/skbio.sequence.GrammaredSequence.has_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata.rst", "generated/skbio.sequence.GrammaredSequence.index.rst", "generated/skbio.sequence.GrammaredSequence.iter_contiguous.rst", "generated/skbio.sequence.GrammaredSequence.iter_kmers.rst", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies.rst", "generated/skbio.sequence.GrammaredSequence.lowercase.rst", "generated/skbio.sequence.GrammaredSequence.match_frequency.rst", "generated/skbio.sequence.GrammaredSequence.matches.rst", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency.rst", "generated/skbio.sequence.GrammaredSequence.mismatches.rst", "generated/skbio.sequence.GrammaredSequence.nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.read.rst", "generated/skbio.sequence.GrammaredSequence.replace.rst", "generated/skbio.sequence.GrammaredSequence.to_definites.rst", "generated/skbio.sequence.GrammaredSequence.to_indices.rst", "generated/skbio.sequence.GrammaredSequence.to_regex.rst", "generated/skbio.sequence.GrammaredSequence.write.rst", "generated/skbio.sequence.Protein.rst", "generated/skbio.sequence.Protein.__bool__.rst", "generated/skbio.sequence.Protein.__contains__.rst", "generated/skbio.sequence.Protein.__copy__.rst", "generated/skbio.sequence.Protein.__deepcopy__.rst", "generated/skbio.sequence.Protein.__eq__.rst", "generated/skbio.sequence.Protein.__ge__.rst", "generated/skbio.sequence.Protein.__getitem__.rst", "generated/skbio.sequence.Protein.__getstate__.rst", "generated/skbio.sequence.Protein.__gt__.rst", "generated/skbio.sequence.Protein.__iter__.rst", "generated/skbio.sequence.Protein.__le__.rst", "generated/skbio.sequence.Protein.__len__.rst", "generated/skbio.sequence.Protein.__lt__.rst", "generated/skbio.sequence.Protein.__ne__.rst", "generated/skbio.sequence.Protein.__reversed__.rst", "generated/skbio.sequence.Protein.__str__.rst", "generated/skbio.sequence.Protein.concat.rst", "generated/skbio.sequence.Protein.count.rst", "generated/skbio.sequence.Protein.definites.rst", "generated/skbio.sequence.Protein.degap.rst", "generated/skbio.sequence.Protein.degenerates.rst", "generated/skbio.sequence.Protein.distance.rst", "generated/skbio.sequence.Protein.expand_degenerates.rst", "generated/skbio.sequence.Protein.find_motifs.rst", "generated/skbio.sequence.Protein.find_with_regex.rst", "generated/skbio.sequence.Protein.frequencies.rst", "generated/skbio.sequence.Protein.gaps.rst", "generated/skbio.sequence.Protein.has_definites.rst", "generated/skbio.sequence.Protein.has_degenerates.rst", "generated/skbio.sequence.Protein.has_gaps.rst", "generated/skbio.sequence.Protein.has_interval_metadata.rst", "generated/skbio.sequence.Protein.has_metadata.rst", "generated/skbio.sequence.Protein.has_nondegenerates.rst", "generated/skbio.sequence.Protein.has_positional_metadata.rst", "generated/skbio.sequence.Protein.has_stops.rst", "generated/skbio.sequence.Protein.index.rst", "generated/skbio.sequence.Protein.iter_contiguous.rst", "generated/skbio.sequence.Protein.iter_kmers.rst", "generated/skbio.sequence.Protein.kmer_frequencies.rst", "generated/skbio.sequence.Protein.lowercase.rst", "generated/skbio.sequence.Protein.match_frequency.rst", "generated/skbio.sequence.Protein.matches.rst", "generated/skbio.sequence.Protein.mismatch_frequency.rst", "generated/skbio.sequence.Protein.mismatches.rst", "generated/skbio.sequence.Protein.nondegenerates.rst", "generated/skbio.sequence.Protein.read.rst", "generated/skbio.sequence.Protein.replace.rst", "generated/skbio.sequence.Protein.stops.rst", "generated/skbio.sequence.Protein.to_definites.rst", "generated/skbio.sequence.Protein.to_indices.rst", "generated/skbio.sequence.Protein.to_regex.rst", "generated/skbio.sequence.Protein.write.rst", "generated/skbio.sequence.RNA.rst", "generated/skbio.sequence.RNA.__bool__.rst", "generated/skbio.sequence.RNA.__contains__.rst", "generated/skbio.sequence.RNA.__copy__.rst", "generated/skbio.sequence.RNA.__deepcopy__.rst", "generated/skbio.sequence.RNA.__eq__.rst", "generated/skbio.sequence.RNA.__ge__.rst", "generated/skbio.sequence.RNA.__getitem__.rst", "generated/skbio.sequence.RNA.__getstate__.rst", "generated/skbio.sequence.RNA.__gt__.rst", "generated/skbio.sequence.RNA.__iter__.rst", "generated/skbio.sequence.RNA.__le__.rst", "generated/skbio.sequence.RNA.__len__.rst", "generated/skbio.sequence.RNA.__lt__.rst", "generated/skbio.sequence.RNA.__ne__.rst", "generated/skbio.sequence.RNA.__reversed__.rst", "generated/skbio.sequence.RNA.__str__.rst", "generated/skbio.sequence.RNA.complement.rst", "generated/skbio.sequence.RNA.concat.rst", "generated/skbio.sequence.RNA.count.rst", "generated/skbio.sequence.RNA.definites.rst", "generated/skbio.sequence.RNA.degap.rst", "generated/skbio.sequence.RNA.degenerates.rst", "generated/skbio.sequence.RNA.distance.rst", "generated/skbio.sequence.RNA.expand_degenerates.rst", "generated/skbio.sequence.RNA.find_motifs.rst", "generated/skbio.sequence.RNA.find_with_regex.rst", "generated/skbio.sequence.RNA.frequencies.rst", "generated/skbio.sequence.RNA.gaps.rst", "generated/skbio.sequence.RNA.gc_content.rst", "generated/skbio.sequence.RNA.gc_frequency.rst", "generated/skbio.sequence.RNA.has_definites.rst", "generated/skbio.sequence.RNA.has_degenerates.rst", "generated/skbio.sequence.RNA.has_gaps.rst", "generated/skbio.sequence.RNA.has_interval_metadata.rst", "generated/skbio.sequence.RNA.has_metadata.rst", "generated/skbio.sequence.RNA.has_nondegenerates.rst", "generated/skbio.sequence.RNA.has_positional_metadata.rst", "generated/skbio.sequence.RNA.index.rst", "generated/skbio.sequence.RNA.is_reverse_complement.rst", "generated/skbio.sequence.RNA.iter_contiguous.rst", "generated/skbio.sequence.RNA.iter_kmers.rst", "generated/skbio.sequence.RNA.kmer_frequencies.rst", "generated/skbio.sequence.RNA.lowercase.rst", "generated/skbio.sequence.RNA.match_frequency.rst", "generated/skbio.sequence.RNA.matches.rst", "generated/skbio.sequence.RNA.mismatch_frequency.rst", "generated/skbio.sequence.RNA.mismatches.rst", "generated/skbio.sequence.RNA.nondegenerates.rst", "generated/skbio.sequence.RNA.read.rst", "generated/skbio.sequence.RNA.replace.rst", "generated/skbio.sequence.RNA.reverse_complement.rst", "generated/skbio.sequence.RNA.reverse_transcribe.rst", "generated/skbio.sequence.RNA.to_definites.rst", "generated/skbio.sequence.RNA.to_indices.rst", "generated/skbio.sequence.RNA.to_regex.rst", "generated/skbio.sequence.RNA.translate.rst", "generated/skbio.sequence.RNA.translate_six_frames.rst", "generated/skbio.sequence.RNA.write.rst", "generated/skbio.sequence.Sequence.rst", "generated/skbio.sequence.Sequence.__bool__.rst", "generated/skbio.sequence.Sequence.__contains__.rst", "generated/skbio.sequence.Sequence.__copy__.rst", "generated/skbio.sequence.Sequence.__deepcopy__.rst", "generated/skbio.sequence.Sequence.__eq__.rst", "generated/skbio.sequence.Sequence.__ge__.rst", "generated/skbio.sequence.Sequence.__getitem__.rst", "generated/skbio.sequence.Sequence.__getstate__.rst", "generated/skbio.sequence.Sequence.__gt__.rst", "generated/skbio.sequence.Sequence.__iter__.rst", "generated/skbio.sequence.Sequence.__le__.rst", "generated/skbio.sequence.Sequence.__len__.rst", "generated/skbio.sequence.Sequence.__lt__.rst", "generated/skbio.sequence.Sequence.__ne__.rst", "generated/skbio.sequence.Sequence.__reversed__.rst", "generated/skbio.sequence.Sequence.__str__.rst", "generated/skbio.sequence.Sequence.concat.rst", "generated/skbio.sequence.Sequence.count.rst", "generated/skbio.sequence.Sequence.distance.rst", "generated/skbio.sequence.Sequence.find_with_regex.rst", "generated/skbio.sequence.Sequence.frequencies.rst", "generated/skbio.sequence.Sequence.has_interval_metadata.rst", "generated/skbio.sequence.Sequence.has_metadata.rst", "generated/skbio.sequence.Sequence.has_positional_metadata.rst", "generated/skbio.sequence.Sequence.index.rst", "generated/skbio.sequence.Sequence.iter_contiguous.rst", "generated/skbio.sequence.Sequence.iter_kmers.rst", "generated/skbio.sequence.Sequence.kmer_frequencies.rst", "generated/skbio.sequence.Sequence.lowercase.rst", "generated/skbio.sequence.Sequence.match_frequency.rst", "generated/skbio.sequence.Sequence.matches.rst", "generated/skbio.sequence.Sequence.mismatch_frequency.rst", "generated/skbio.sequence.Sequence.mismatches.rst", "generated/skbio.sequence.Sequence.read.rst", "generated/skbio.sequence.Sequence.replace.rst", "generated/skbio.sequence.Sequence.to_indices.rst", "generated/skbio.sequence.Sequence.write.rst", "generated/skbio.sequence.SubstitutionMatrix.rst", "generated/skbio.sequence.SubstitutionMatrix.__contains__.rst", "generated/skbio.sequence.SubstitutionMatrix.__eq__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ge__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getitem__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getstate__.rst", "generated/skbio.sequence.SubstitutionMatrix.__gt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__le__.rst", "generated/skbio.sequence.SubstitutionMatrix.__lt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ne__.rst", "generated/skbio.sequence.SubstitutionMatrix.__str__.rst", "generated/skbio.sequence.SubstitutionMatrix.between.rst", "generated/skbio.sequence.SubstitutionMatrix.by_name.rst", "generated/skbio.sequence.SubstitutionMatrix.copy.rst", "generated/skbio.sequence.SubstitutionMatrix.filter.rst", "generated/skbio.sequence.SubstitutionMatrix.from_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.from_iterable.rst", "generated/skbio.sequence.SubstitutionMatrix.get_names.rst", "generated/skbio.sequence.SubstitutionMatrix.identity.rst", "generated/skbio.sequence.SubstitutionMatrix.index.rst", "generated/skbio.sequence.SubstitutionMatrix.plot.rst", "generated/skbio.sequence.SubstitutionMatrix.read.rst", "generated/skbio.sequence.SubstitutionMatrix.redundant_form.rst", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame.rst", "generated/skbio.sequence.SubstitutionMatrix.to_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.transpose.rst", "generated/skbio.sequence.SubstitutionMatrix.within.rst", "generated/skbio.sequence.SubstitutionMatrix.write.rst", "generated/skbio.sequence.distance.rst", "generated/skbio.sequence.distance.hamming.rst", "generated/skbio.sequence.distance.kmer_distance.rst", "generated/skbio.stats.composition.rst", "generated/skbio.stats.composition.alr.rst", "generated/skbio.stats.composition.alr_inv.rst", "generated/skbio.stats.composition.ancom.rst", "generated/skbio.stats.composition.centralize.rst", "generated/skbio.stats.composition.closure.rst", "generated/skbio.stats.composition.clr.rst", "generated/skbio.stats.composition.clr_inv.rst", "generated/skbio.stats.composition.dirmult_ttest.rst", "generated/skbio.stats.composition.ilr.rst", "generated/skbio.stats.composition.ilr_inv.rst", "generated/skbio.stats.composition.inner.rst", "generated/skbio.stats.composition.multi_replace.rst", "generated/skbio.stats.composition.multiplicative_replacement.rst", "generated/skbio.stats.composition.pairwise_vlr.rst", "generated/skbio.stats.composition.perturb.rst", "generated/skbio.stats.composition.perturb_inv.rst", "generated/skbio.stats.composition.power.rst", "generated/skbio.stats.composition.sbp_basis.rst", "generated/skbio.stats.composition.tree_basis.rst", "generated/skbio.stats.composition.vlr.rst", "generated/skbio.stats.distance.rst", "generated/skbio.stats.distance.DissimilarityMatrix.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__le__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__str__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.between.rst", "generated/skbio.stats.distance.DissimilarityMatrix.copy.rst", "generated/skbio.stats.distance.DissimilarityMatrix.filter.rst", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable.rst", "generated/skbio.stats.distance.DissimilarityMatrix.index.rst", "generated/skbio.stats.distance.DissimilarityMatrix.plot.rst", "generated/skbio.stats.distance.DissimilarityMatrix.read.rst", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form.rst", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DissimilarityMatrix.transpose.rst", "generated/skbio.stats.distance.DissimilarityMatrix.within.rst", "generated/skbio.stats.distance.DissimilarityMatrix.write.rst", "generated/skbio.stats.distance.DistanceMatrix.rst", "generated/skbio.stats.distance.DistanceMatrix.__contains__.rst", "generated/skbio.stats.distance.DistanceMatrix.__eq__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ge__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getitem__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getstate__.rst", "generated/skbio.stats.distance.DistanceMatrix.__gt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__le__.rst", "generated/skbio.stats.distance.DistanceMatrix.__lt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ne__.rst", "generated/skbio.stats.distance.DistanceMatrix.__str__.rst", "generated/skbio.stats.distance.DistanceMatrix.between.rst", "generated/skbio.stats.distance.DistanceMatrix.condensed_form.rst", "generated/skbio.stats.distance.DistanceMatrix.copy.rst", "generated/skbio.stats.distance.DistanceMatrix.filter.rst", "generated/skbio.stats.distance.DistanceMatrix.from_iterable.rst", "generated/skbio.stats.distance.DistanceMatrix.index.rst", "generated/skbio.stats.distance.DistanceMatrix.permute.rst", "generated/skbio.stats.distance.DistanceMatrix.plot.rst", "generated/skbio.stats.distance.DistanceMatrix.read.rst", "generated/skbio.stats.distance.DistanceMatrix.redundant_form.rst", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DistanceMatrix.to_series.rst", "generated/skbio.stats.distance.DistanceMatrix.transpose.rst", "generated/skbio.stats.distance.DistanceMatrix.within.rst", "generated/skbio.stats.distance.DistanceMatrix.write.rst", "generated/skbio.stats.distance.anosim.rst", "generated/skbio.stats.distance.bioenv.rst", "generated/skbio.stats.distance.mantel.rst", "generated/skbio.stats.distance.permanova.rst", "generated/skbio.stats.distance.permdisp.rst", "generated/skbio.stats.distance.pwmantel.rst", "generated/skbio.stats.distance.randdm.rst", "generated/skbio.stats.evolve.rst", "generated/skbio.stats.evolve.hommola_cospeciation.rst", "generated/skbio.stats.gradient.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.CategoryResults.rst", "generated/skbio.stats.gradient.CategoryResults.__eq__.rst", "generated/skbio.stats.gradient.CategoryResults.__ge__.rst", "generated/skbio.stats.gradient.CategoryResults.__getstate__.rst", "generated/skbio.stats.gradient.CategoryResults.__gt__.rst", "generated/skbio.stats.gradient.CategoryResults.__hash__.rst", "generated/skbio.stats.gradient.CategoryResults.__le__.rst", "generated/skbio.stats.gradient.CategoryResults.__lt__.rst", "generated/skbio.stats.gradient.CategoryResults.__ne__.rst", "generated/skbio.stats.gradient.CategoryResults.__str__.rst", "generated/skbio.stats.gradient.CategoryResults.to_files.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVA.rst", "generated/skbio.stats.gradient.GradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVA.__le__.rst", "generated/skbio.stats.gradient.GradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVA.__str__.rst", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVAResults.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__le__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__str__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.to_files.rst", "generated/skbio.stats.gradient.GroupResults.rst", "generated/skbio.stats.gradient.GroupResults.__eq__.rst", "generated/skbio.stats.gradient.GroupResults.__ge__.rst", "generated/skbio.stats.gradient.GroupResults.__getstate__.rst", "generated/skbio.stats.gradient.GroupResults.__gt__.rst", "generated/skbio.stats.gradient.GroupResults.__hash__.rst", "generated/skbio.stats.gradient.GroupResults.__le__.rst", "generated/skbio.stats.gradient.GroupResults.__lt__.rst", "generated/skbio.stats.gradient.GroupResults.__ne__.rst", "generated/skbio.stats.gradient.GroupResults.__str__.rst", "generated/skbio.stats.gradient.GroupResults.to_files.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.isubsample.rst", "generated/skbio.stats.ordination.rst", "generated/skbio.stats.ordination.OrdinationResults.rst", "generated/skbio.stats.ordination.OrdinationResults.__eq__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ge__.rst", "generated/skbio.stats.ordination.OrdinationResults.__getstate__.rst", "generated/skbio.stats.ordination.OrdinationResults.__gt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__hash__.rst", "generated/skbio.stats.ordination.OrdinationResults.__le__.rst", "generated/skbio.stats.ordination.OrdinationResults.__lt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ne__.rst", "generated/skbio.stats.ordination.OrdinationResults.__str__.rst", "generated/skbio.stats.ordination.OrdinationResults.plot.rst", "generated/skbio.stats.ordination.OrdinationResults.read.rst", "generated/skbio.stats.ordination.OrdinationResults.write.rst", "generated/skbio.stats.ordination.ca.rst", "generated/skbio.stats.ordination.cca.rst", "generated/skbio.stats.ordination.corr.rst", "generated/skbio.stats.ordination.e_matrix.rst", "generated/skbio.stats.ordination.f_matrix.rst", "generated/skbio.stats.ordination.mean_and_std.rst", "generated/skbio.stats.ordination.pcoa.rst", "generated/skbio.stats.ordination.pcoa_biplot.rst", "generated/skbio.stats.ordination.rda.rst", "generated/skbio.stats.ordination.scale.rst", "generated/skbio.stats.ordination.svd_rank.rst", "generated/skbio.stats.power.rst", "generated/skbio.stats.power.confidence_bound.rst", "generated/skbio.stats.power.paired_subsamples.rst", "generated/skbio.stats.power.subsample_paired_power.rst", "generated/skbio.stats.power.subsample_power.rst", "generated/skbio.stats.subsample_counts.rst", "generated/skbio.table.Table.rst", "generated/skbio.table.Table.__eq__.rst", "generated/skbio.table.Table.__ge__.rst", "generated/skbio.table.Table.__getitem__.rst", "generated/skbio.table.Table.__getstate__.rst", "generated/skbio.table.Table.__gt__.rst", "generated/skbio.table.Table.__iter__.rst", "generated/skbio.table.Table.__le__.rst", "generated/skbio.table.Table.__lt__.rst", "generated/skbio.table.Table.__ne__.rst", "generated/skbio.table.Table.__str__.rst", "generated/skbio.table.Table.add_group_metadata.rst", "generated/skbio.table.Table.add_metadata.rst", "generated/skbio.table.Table.align_to.rst", "generated/skbio.table.Table.align_to_dataframe.rst", "generated/skbio.table.Table.align_tree.rst", "generated/skbio.table.Table.collapse.rst", "generated/skbio.table.Table.concat.rst", "generated/skbio.table.Table.copy.rst", "generated/skbio.table.Table.data.rst", "generated/skbio.table.Table.del_metadata.rst", "generated/skbio.table.Table.delimited_self.rst", "generated/skbio.table.Table.descriptive_equality.rst", "generated/skbio.table.Table.exists.rst", "generated/skbio.table.Table.filter.rst", "generated/skbio.table.Table.from_adjacency.rst", "generated/skbio.table.Table.from_hdf5.rst", "generated/skbio.table.Table.from_json.rst", "generated/skbio.table.Table.from_tsv.rst", "generated/skbio.table.Table.get_table_density.rst", "generated/skbio.table.Table.get_value_by_ids.rst", "generated/skbio.table.Table.group_metadata.rst", "generated/skbio.table.Table.head.rst", "generated/skbio.table.Table.ids.rst", "generated/skbio.table.Table.index.rst", "generated/skbio.table.Table.is_empty.rst", "generated/skbio.table.Table.iter.rst", "generated/skbio.table.Table.iter_data.rst", "generated/skbio.table.Table.iter_pairwise.rst", "generated/skbio.table.Table.length.rst", "generated/skbio.table.Table.max.rst", "generated/skbio.table.Table.merge.rst", "generated/skbio.table.Table.metadata.rst", "generated/skbio.table.Table.metadata_to_dataframe.rst", "generated/skbio.table.Table.min.rst", "generated/skbio.table.Table.nonzero.rst", "generated/skbio.table.Table.nonzero_counts.rst", "generated/skbio.table.Table.norm.rst", "generated/skbio.table.Table.pa.rst", "generated/skbio.table.Table.partition.rst", "generated/skbio.table.Table.rankdata.rst", "generated/skbio.table.Table.read.rst", "generated/skbio.table.Table.reduce.rst", "generated/skbio.table.Table.remove_empty.rst", "generated/skbio.table.Table.sort.rst", "generated/skbio.table.Table.sort_order.rst", "generated/skbio.table.Table.subsample.rst", "generated/skbio.table.Table.sum.rst", "generated/skbio.table.Table.to_anndata.rst", "generated/skbio.table.Table.to_dataframe.rst", "generated/skbio.table.Table.to_hdf5.rst", "generated/skbio.table.Table.to_json.rst", "generated/skbio.table.Table.to_tsv.rst", "generated/skbio.table.Table.transform.rst", "generated/skbio.table.Table.transpose.rst", "generated/skbio.table.Table.update_ids.rst", "generated/skbio.table.Table.write.rst", "generated/skbio.table.example_table.rst", "generated/skbio.tree.TreeNode.rst", "generated/skbio.tree.TreeNode.__copy__.rst", "generated/skbio.tree.TreeNode.__deepcopy__.rst", "generated/skbio.tree.TreeNode.__eq__.rst", "generated/skbio.tree.TreeNode.__ge__.rst", "generated/skbio.tree.TreeNode.__getitem__.rst", "generated/skbio.tree.TreeNode.__getstate__.rst", "generated/skbio.tree.TreeNode.__gt__.rst", "generated/skbio.tree.TreeNode.__hash__.rst", "generated/skbio.tree.TreeNode.__iter__.rst", "generated/skbio.tree.TreeNode.__le__.rst", "generated/skbio.tree.TreeNode.__len__.rst", "generated/skbio.tree.TreeNode.__lt__.rst", "generated/skbio.tree.TreeNode.__ne__.rst", "generated/skbio.tree.TreeNode.__str__.rst", "generated/skbio.tree.TreeNode.accumulate_to_ancestor.rst", "generated/skbio.tree.TreeNode.ancestors.rst", "generated/skbio.tree.TreeNode.append.rst", "generated/skbio.tree.TreeNode.ascii_art.rst", "generated/skbio.tree.TreeNode.assign_ids.rst", "generated/skbio.tree.TreeNode.assign_supports.rst", "generated/skbio.tree.TreeNode.bifurcate.rst", "generated/skbio.tree.TreeNode.cache_attr.rst", "generated/skbio.tree.TreeNode.compare_rfd.rst", "generated/skbio.tree.TreeNode.compare_subsets.rst", "generated/skbio.tree.TreeNode.compare_tip_distances.rst", "generated/skbio.tree.TreeNode.copy.rst", "generated/skbio.tree.TreeNode.count.rst", "generated/skbio.tree.TreeNode.create_caches.rst", "generated/skbio.tree.TreeNode.deepcopy.rst", "generated/skbio.tree.TreeNode.descending_branch_length.rst", "generated/skbio.tree.TreeNode.distance.rst", "generated/skbio.tree.TreeNode.extend.rst", "generated/skbio.tree.TreeNode.find.rst", "generated/skbio.tree.TreeNode.find_all.rst", "generated/skbio.tree.TreeNode.find_by_func.rst", "generated/skbio.tree.TreeNode.find_by_id.rst", "generated/skbio.tree.TreeNode.from_linkage_matrix.rst", "generated/skbio.tree.TreeNode.from_taxdump.rst", "generated/skbio.tree.TreeNode.from_taxonomy.rst", "generated/skbio.tree.TreeNode.get_max_distance.rst", "generated/skbio.tree.TreeNode.has_children.rst", "generated/skbio.tree.TreeNode.index_tree.rst", "generated/skbio.tree.TreeNode.invalidate_caches.rst", "generated/skbio.tree.TreeNode.is_root.rst", "generated/skbio.tree.TreeNode.is_tip.rst", "generated/skbio.tree.TreeNode.lca.rst", "generated/skbio.tree.TreeNode.levelorder.rst", "generated/skbio.tree.TreeNode.lowest_common_ancestor.rst", "generated/skbio.tree.TreeNode.neighbors.rst", "generated/skbio.tree.TreeNode.non_tips.rst", "generated/skbio.tree.TreeNode.observed_node_counts.rst", "generated/skbio.tree.TreeNode.pop.rst", "generated/skbio.tree.TreeNode.postorder.rst", "generated/skbio.tree.TreeNode.pre_and_postorder.rst", "generated/skbio.tree.TreeNode.preorder.rst", "generated/skbio.tree.TreeNode.prune.rst", "generated/skbio.tree.TreeNode.read.rst", "generated/skbio.tree.TreeNode.remove.rst", "generated/skbio.tree.TreeNode.remove_deleted.rst", "generated/skbio.tree.TreeNode.root.rst", "generated/skbio.tree.TreeNode.root_at.rst", "generated/skbio.tree.TreeNode.root_at_midpoint.rst", "generated/skbio.tree.TreeNode.shear.rst", "generated/skbio.tree.TreeNode.shuffle.rst", "generated/skbio.tree.TreeNode.siblings.rst", "generated/skbio.tree.TreeNode.subset.rst", "generated/skbio.tree.TreeNode.subsets.rst", "generated/skbio.tree.TreeNode.subtree.rst", "generated/skbio.tree.TreeNode.tip_tip_distances.rst", "generated/skbio.tree.TreeNode.tips.rst", "generated/skbio.tree.TreeNode.to_array.rst", "generated/skbio.tree.TreeNode.to_taxonomy.rst", "generated/skbio.tree.TreeNode.traverse.rst", "generated/skbio.tree.TreeNode.unpack.rst", "generated/skbio.tree.TreeNode.unpack_by_func.rst", "generated/skbio.tree.TreeNode.unrooted_copy.rst", "generated/skbio.tree.TreeNode.unrooted_deepcopy.rst", "generated/skbio.tree.TreeNode.write.rst", "generated/skbio.tree.majority_rule.rst", "generated/skbio.tree.nj.rst", "generated/skbio.util.EfficiencyWarning.rst", "generated/skbio.util.RepresentationWarning.rst", "generated/skbio.util.assert_data_frame_almost_equal.rst", "generated/skbio.util.assert_ordination_results_equal.rst", "generated/skbio.util.cardinal_to_ordinal.rst", "generated/skbio.util.classproperty.rst", "generated/skbio.util.classproperty.__delete__.rst", "generated/skbio.util.classproperty.__eq__.rst", "generated/skbio.util.classproperty.__ge__.rst", "generated/skbio.util.classproperty.__get__.rst", "generated/skbio.util.classproperty.__getstate__.rst", "generated/skbio.util.classproperty.__gt__.rst", "generated/skbio.util.classproperty.__hash__.rst", "generated/skbio.util.classproperty.__le__.rst", "generated/skbio.util.classproperty.__lt__.rst", "generated/skbio.util.classproperty.__ne__.rst", "generated/skbio.util.classproperty.__set__.rst", "generated/skbio.util.classproperty.__set_name__.rst", "generated/skbio.util.classproperty.__str__.rst", "generated/skbio.util.classproperty.deleter.rst", "generated/skbio.util.classproperty.getter.rst", "generated/skbio.util.classproperty.setter.rst", "generated/skbio.util.find_duplicates.rst", "generated/skbio.util.get_data_path.rst", "generated/skbio.util.safe_md5.rst", "generated/skbio.workflow.Workflow.rst", "generated/skbio.workflow.Workflow.__call__.rst", "generated/skbio.workflow.Workflow.__eq__.rst", "generated/skbio.workflow.Workflow.__ge__.rst", "generated/skbio.workflow.Workflow.__getstate__.rst", "generated/skbio.workflow.Workflow.__gt__.rst", "generated/skbio.workflow.Workflow.__hash__.rst", "generated/skbio.workflow.Workflow.__le__.rst", "generated/skbio.workflow.Workflow.__lt__.rst", "generated/skbio.workflow.Workflow.__ne__.rst", "generated/skbio.workflow.Workflow.__str__.rst", "generated/skbio.workflow.Workflow.initialize_state.rst", "generated/skbio.workflow.method.rst", "generated/skbio.workflow.method.__call__.rst", "generated/skbio.workflow.method.__eq__.rst", "generated/skbio.workflow.method.__ge__.rst", "generated/skbio.workflow.method.__getstate__.rst", "generated/skbio.workflow.method.__gt__.rst", "generated/skbio.workflow.method.__hash__.rst", "generated/skbio.workflow.method.__le__.rst", "generated/skbio.workflow.method.__lt__.rst", "generated/skbio.workflow.method.__ne__.rst", "generated/skbio.workflow.method.__str__.rst", "generated/skbio.workflow.requires.rst", "generated/skbio.workflow.requires.__call__.rst", "generated/skbio.workflow.requires.__eq__.rst", "generated/skbio.workflow.requires.__ge__.rst", "generated/skbio.workflow.requires.__getstate__.rst", "generated/skbio.workflow.requires.__gt__.rst", "generated/skbio.workflow.requires.__hash__.rst", "generated/skbio.workflow.requires.__le__.rst", "generated/skbio.workflow.requires.__lt__.rst", "generated/skbio.workflow.requires.__ne__.rst", "generated/skbio.workflow.requires.__str__.rst", "index.rst", "io.rst", "metadata.rst", "sequence.rst", "stats.rst", "table.rst", "tree.rst", "util.rst", "workflow.rst"], "indexentries": {"__bool__() (skbio.alignment.tabularmsa method)": [[30, "skbio.alignment.TabularMSA.__bool__", false]], "__bool__() (skbio.sequence.dna method)": [[304, "skbio.sequence.DNA.__bool__", false]], "__bool__() (skbio.sequence.grammaredsequence method)": [[375, "skbio.sequence.GrammaredSequence.__bool__", false]], "__bool__() (skbio.sequence.protein method)": [[426, "skbio.sequence.Protein.__bool__", false]], "__bool__() (skbio.sequence.rna method)": [[479, "skbio.sequence.RNA.__bool__", false]], "__bool__() (skbio.sequence.sequence method)": [[538, "skbio.sequence.Sequence.__bool__", false]], "__call__() (skbio.alignment.stripedsmithwaterman method)": [[18, "skbio.alignment.StripedSmithWaterman.__call__", false]], "__call__() (skbio.workflow.method method)": [[994, "skbio.workflow.method.__call__", false]], "__call__() (skbio.workflow.requires method)": [[1005, "skbio.workflow.requires.__call__", false]], "__call__() (skbio.workflow.workflow method)": [[982, "skbio.workflow.Workflow.__call__", false]], "__contains__() (skbio.alignment.tabularmsa method)": [[31, "skbio.alignment.TabularMSA.__contains__", false]], "__contains__() (skbio.sequence.dna method)": [[305, "skbio.sequence.DNA.__contains__", false]], "__contains__() (skbio.sequence.grammaredsequence method)": [[376, "skbio.sequence.GrammaredSequence.__contains__", false]], "__contains__() (skbio.sequence.protein method)": [[427, "skbio.sequence.Protein.__contains__", false]], "__contains__() (skbio.sequence.rna method)": [[480, "skbio.sequence.RNA.__contains__", false]], "__contains__() (skbio.sequence.sequence method)": [[539, "skbio.sequence.Sequence.__contains__", false]], "__contains__() (skbio.sequence.substitutionmatrix method)": [[576, "skbio.sequence.SubstitutionMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.dissimilaritymatrix method)": [[629, "skbio.stats.distance.DissimilarityMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.distancematrix method)": [[652, "skbio.stats.distance.DistanceMatrix.__contains__", false]], "__copy__() (skbio.alignment.tabularmsa method)": [[32, "skbio.alignment.TabularMSA.__copy__", false]], "__copy__() (skbio.metadata.intervalmetadata method)": [[230, "skbio.metadata.IntervalMetadata.__copy__", false]], "__copy__() (skbio.sequence.dna method)": [[306, "skbio.sequence.DNA.__copy__", false]], "__copy__() (skbio.sequence.grammaredsequence method)": [[377, "skbio.sequence.GrammaredSequence.__copy__", false]], "__copy__() (skbio.sequence.protein method)": [[428, "skbio.sequence.Protein.__copy__", false]], "__copy__() (skbio.sequence.rna method)": [[481, "skbio.sequence.RNA.__copy__", false]], "__copy__() (skbio.sequence.sequence method)": [[540, "skbio.sequence.Sequence.__copy__", false]], "__copy__() (skbio.tree.treenode method)": [[876, "skbio.tree.TreeNode.__copy__", false]], "__deepcopy__() (skbio.alignment.tabularmsa method)": [[33, "skbio.alignment.TabularMSA.__deepcopy__", false]], "__deepcopy__() (skbio.metadata.intervalmetadata method)": [[231, "skbio.metadata.IntervalMetadata.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.dna method)": [[307, "skbio.sequence.DNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.grammaredsequence method)": [[378, "skbio.sequence.GrammaredSequence.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.protein method)": [[429, "skbio.sequence.Protein.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.rna method)": [[482, "skbio.sequence.RNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.sequence method)": [[541, "skbio.sequence.Sequence.__deepcopy__", false]], "__deepcopy__() (skbio.tree.treenode method)": [[877, "skbio.tree.TreeNode.__deepcopy__", false]], "__delete__() (skbio.util.classproperty method)": [[962, "skbio.util.classproperty.__delete__", false]], "__eq__() (skbio.alignment.alignmentstructure method)": [[4, "skbio.alignment.AlignmentStructure.__eq__", false]], "__eq__() (skbio.alignment.stripedsmithwaterman method)": [[19, "skbio.alignment.StripedSmithWaterman.__eq__", false]], "__eq__() (skbio.alignment.tabularmsa method)": [[34, "skbio.alignment.TabularMSA.__eq__", false]], "__eq__() (skbio.embedding.proteinembedding method)": [[114, "skbio.embedding.ProteinEmbedding.__eq__", false]], "__eq__() (skbio.embedding.proteinvector method)": [[127, "skbio.embedding.ProteinVector.__eq__", false]], "__eq__() (skbio.io.registry.format method)": [[160, "skbio.io.registry.Format.__eq__", false]], "__eq__() (skbio.io.registry.ioregistry method)": [[173, "skbio.io.registry.IORegistry.__eq__", false]], "__eq__() (skbio.metadata.categoricalmetadatacolumn method)": [[202, "skbio.metadata.CategoricalMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.interval method)": [[220, "skbio.metadata.Interval.__eq__", false]], "__eq__() (skbio.metadata.intervalmetadata method)": [[232, "skbio.metadata.IntervalMetadata.__eq__", false]], "__eq__() (skbio.metadata.metadatacolumn method)": [[249, "skbio.metadata.MetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.numericmetadatacolumn method)": [[267, "skbio.metadata.NumericMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.samplemetadata method)": [[285, "skbio.metadata.SampleMetadata.__eq__", false]], "__eq__() (skbio.sequence.dna method)": [[308, "skbio.sequence.DNA.__eq__", false]], "__eq__() (skbio.sequence.geneticcode method)": [[363, "skbio.sequence.GeneticCode.__eq__", false]], "__eq__() (skbio.sequence.grammaredsequence method)": [[379, "skbio.sequence.GrammaredSequence.__eq__", false]], "__eq__() (skbio.sequence.protein method)": [[430, "skbio.sequence.Protein.__eq__", false]], "__eq__() (skbio.sequence.rna method)": [[483, "skbio.sequence.RNA.__eq__", false]], "__eq__() (skbio.sequence.sequence method)": [[542, "skbio.sequence.Sequence.__eq__", false]], "__eq__() (skbio.sequence.substitutionmatrix method)": [[577, "skbio.sequence.SubstitutionMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.dissimilaritymatrix method)": [[630, "skbio.stats.distance.DissimilarityMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.distancematrix method)": [[653, "skbio.stats.distance.DistanceMatrix.__eq__", false]], "__eq__() (skbio.stats.gradient.averagegradientanova method)": [[688, "skbio.stats.gradient.AverageGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.categoryresults method)": [[699, "skbio.stats.gradient.CategoryResults.__eq__", false]], "__eq__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[710, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanova method)": [[721, "skbio.stats.gradient.GradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanovaresults method)": [[732, "skbio.stats.gradient.GradientANOVAResults.__eq__", false]], "__eq__() (skbio.stats.gradient.groupresults method)": [[743, "skbio.stats.gradient.GroupResults.__eq__", false]], "__eq__() (skbio.stats.gradient.trajectorygradientanova method)": [[754, "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[765, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.ordination.ordinationresults method)": [[778, "skbio.stats.ordination.OrdinationResults.__eq__", false]], "__eq__() (skbio.table.table method)": [[808, "skbio.table.Table.__eq__", false]], "__eq__() (skbio.tree.treenode method)": [[878, "skbio.tree.TreeNode.__eq__", false]], "__eq__() (skbio.util.classproperty method)": [[963, "skbio.util.classproperty.__eq__", false]], "__eq__() (skbio.workflow.method method)": [[995, "skbio.workflow.method.__eq__", false]], "__eq__() (skbio.workflow.requires method)": [[1006, "skbio.workflow.requires.__eq__", false]], "__eq__() (skbio.workflow.workflow method)": [[983, "skbio.workflow.Workflow.__eq__", false]], "__ge__() (skbio.alignment.alignmentstructure method)": [[5, "skbio.alignment.AlignmentStructure.__ge__", false]], "__ge__() (skbio.alignment.stripedsmithwaterman method)": [[20, "skbio.alignment.StripedSmithWaterman.__ge__", false]], "__ge__() (skbio.alignment.tabularmsa method)": [[35, "skbio.alignment.TabularMSA.__ge__", false]], "__ge__() (skbio.embedding.proteinembedding method)": [[115, "skbio.embedding.ProteinEmbedding.__ge__", false]], "__ge__() (skbio.embedding.proteinvector method)": [[128, "skbio.embedding.ProteinVector.__ge__", false]], "__ge__() (skbio.io.registry.format method)": [[161, "skbio.io.registry.Format.__ge__", false]], "__ge__() (skbio.io.registry.ioregistry method)": [[174, "skbio.io.registry.IORegistry.__ge__", false]], "__ge__() (skbio.metadata.categoricalmetadatacolumn method)": [[203, "skbio.metadata.CategoricalMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.interval method)": [[221, "skbio.metadata.Interval.__ge__", false]], "__ge__() (skbio.metadata.intervalmetadata method)": [[233, "skbio.metadata.IntervalMetadata.__ge__", false]], "__ge__() (skbio.metadata.metadatacolumn method)": [[250, "skbio.metadata.MetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.numericmetadatacolumn method)": [[268, "skbio.metadata.NumericMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.samplemetadata method)": [[286, "skbio.metadata.SampleMetadata.__ge__", false]], "__ge__() (skbio.sequence.dna method)": [[309, "skbio.sequence.DNA.__ge__", false]], "__ge__() (skbio.sequence.geneticcode method)": [[364, "skbio.sequence.GeneticCode.__ge__", false]], "__ge__() (skbio.sequence.grammaredsequence method)": [[380, "skbio.sequence.GrammaredSequence.__ge__", false]], "__ge__() (skbio.sequence.protein method)": [[431, "skbio.sequence.Protein.__ge__", false]], "__ge__() (skbio.sequence.rna method)": [[484, "skbio.sequence.RNA.__ge__", false]], "__ge__() (skbio.sequence.sequence method)": [[543, "skbio.sequence.Sequence.__ge__", false]], "__ge__() (skbio.sequence.substitutionmatrix method)": [[578, "skbio.sequence.SubstitutionMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.dissimilaritymatrix method)": [[631, "skbio.stats.distance.DissimilarityMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.distancematrix method)": [[654, "skbio.stats.distance.DistanceMatrix.__ge__", false]], "__ge__() (skbio.stats.gradient.averagegradientanova method)": [[689, "skbio.stats.gradient.AverageGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.categoryresults method)": [[700, "skbio.stats.gradient.CategoryResults.__ge__", false]], "__ge__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[711, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanova method)": [[722, "skbio.stats.gradient.GradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanovaresults method)": [[733, "skbio.stats.gradient.GradientANOVAResults.__ge__", false]], "__ge__() (skbio.stats.gradient.groupresults method)": [[744, "skbio.stats.gradient.GroupResults.__ge__", false]], "__ge__() (skbio.stats.gradient.trajectorygradientanova method)": [[755, "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[766, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.ordination.ordinationresults method)": [[779, "skbio.stats.ordination.OrdinationResults.__ge__", false]], "__ge__() (skbio.table.table method)": [[809, "skbio.table.Table.__ge__", false]], "__ge__() (skbio.tree.treenode method)": [[879, "skbio.tree.TreeNode.__ge__", false]], "__ge__() (skbio.util.classproperty method)": [[964, "skbio.util.classproperty.__ge__", false]], "__ge__() (skbio.workflow.method method)": [[996, "skbio.workflow.method.__ge__", false]], "__ge__() (skbio.workflow.requires method)": [[1007, "skbio.workflow.requires.__ge__", false]], "__ge__() (skbio.workflow.workflow method)": [[984, "skbio.workflow.Workflow.__ge__", false]], "__get__() (skbio.util.classproperty method)": [[965, "skbio.util.classproperty.__get__", false]], "__getitem__() (skbio.alignment.alignmentstructure method)": [[6, "skbio.alignment.AlignmentStructure.__getitem__", false]], "__getitem__() (skbio.alignment.tabularmsa method)": [[36, "skbio.alignment.TabularMSA.__getitem__", false]], "__getitem__() (skbio.sequence.dna method)": [[310, "skbio.sequence.DNA.__getitem__", false]], "__getitem__() (skbio.sequence.grammaredsequence method)": [[381, "skbio.sequence.GrammaredSequence.__getitem__", false]], "__getitem__() (skbio.sequence.protein method)": [[432, "skbio.sequence.Protein.__getitem__", false]], "__getitem__() (skbio.sequence.rna method)": [[485, "skbio.sequence.RNA.__getitem__", false]], "__getitem__() (skbio.sequence.sequence method)": [[544, "skbio.sequence.Sequence.__getitem__", false]], "__getitem__() (skbio.sequence.substitutionmatrix method)": [[579, "skbio.sequence.SubstitutionMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.dissimilaritymatrix method)": [[632, "skbio.stats.distance.DissimilarityMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.distancematrix method)": [[655, "skbio.stats.distance.DistanceMatrix.__getitem__", false]], "__getitem__() (skbio.table.table method)": [[810, "skbio.table.Table.__getitem__", false]], "__getitem__() (skbio.tree.treenode method)": [[880, "skbio.tree.TreeNode.__getitem__", false]], "__getstate__() (skbio.alignment.alignmentstructure method)": [[7, "skbio.alignment.AlignmentStructure.__getstate__", false]], "__getstate__() (skbio.alignment.stripedsmithwaterman method)": [[21, "skbio.alignment.StripedSmithWaterman.__getstate__", false]], "__getstate__() (skbio.alignment.tabularmsa method)": [[37, "skbio.alignment.TabularMSA.__getstate__", false]], "__getstate__() (skbio.embedding.proteinembedding method)": [[116, "skbio.embedding.ProteinEmbedding.__getstate__", false]], "__getstate__() (skbio.embedding.proteinvector method)": [[129, "skbio.embedding.ProteinVector.__getstate__", false]], "__getstate__() (skbio.io.registry.format method)": [[162, "skbio.io.registry.Format.__getstate__", false]], "__getstate__() (skbio.io.registry.ioregistry method)": [[175, "skbio.io.registry.IORegistry.__getstate__", false]], "__getstate__() (skbio.metadata.categoricalmetadatacolumn method)": [[204, "skbio.metadata.CategoricalMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.interval method)": [[222, "skbio.metadata.Interval.__getstate__", false]], "__getstate__() (skbio.metadata.intervalmetadata method)": [[234, "skbio.metadata.IntervalMetadata.__getstate__", false]], "__getstate__() (skbio.metadata.metadatacolumn method)": [[251, "skbio.metadata.MetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.numericmetadatacolumn method)": [[269, "skbio.metadata.NumericMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.samplemetadata method)": [[287, "skbio.metadata.SampleMetadata.__getstate__", false]], "__getstate__() (skbio.sequence.dna method)": [[311, "skbio.sequence.DNA.__getstate__", false]], "__getstate__() (skbio.sequence.geneticcode method)": [[365, "skbio.sequence.GeneticCode.__getstate__", false]], "__getstate__() (skbio.sequence.grammaredsequence method)": [[382, "skbio.sequence.GrammaredSequence.__getstate__", false]], "__getstate__() (skbio.sequence.protein method)": [[433, "skbio.sequence.Protein.__getstate__", false]], "__getstate__() (skbio.sequence.rna method)": [[486, "skbio.sequence.RNA.__getstate__", false]], "__getstate__() (skbio.sequence.sequence method)": [[545, "skbio.sequence.Sequence.__getstate__", false]], "__getstate__() (skbio.sequence.substitutionmatrix method)": [[580, "skbio.sequence.SubstitutionMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.dissimilaritymatrix method)": [[633, "skbio.stats.distance.DissimilarityMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.distancematrix method)": [[656, "skbio.stats.distance.DistanceMatrix.__getstate__", false]], "__getstate__() (skbio.stats.gradient.averagegradientanova method)": [[690, "skbio.stats.gradient.AverageGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.categoryresults method)": [[701, "skbio.stats.gradient.CategoryResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[712, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanova method)": [[723, "skbio.stats.gradient.GradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanovaresults method)": [[734, "skbio.stats.gradient.GradientANOVAResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.groupresults method)": [[745, "skbio.stats.gradient.GroupResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.trajectorygradientanova method)": [[756, "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[767, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.ordination.ordinationresults method)": [[780, "skbio.stats.ordination.OrdinationResults.__getstate__", false]], "__getstate__() (skbio.table.table method)": [[811, "skbio.table.Table.__getstate__", false]], "__getstate__() (skbio.tree.treenode method)": [[881, "skbio.tree.TreeNode.__getstate__", false]], "__getstate__() (skbio.util.classproperty method)": [[966, "skbio.util.classproperty.__getstate__", false]], "__getstate__() (skbio.workflow.method method)": [[997, "skbio.workflow.method.__getstate__", false]], "__getstate__() (skbio.workflow.requires method)": [[1008, "skbio.workflow.requires.__getstate__", false]], "__getstate__() (skbio.workflow.workflow method)": [[985, "skbio.workflow.Workflow.__getstate__", false]], "__gt__() (skbio.alignment.alignmentstructure method)": [[8, "skbio.alignment.AlignmentStructure.__gt__", false]], "__gt__() (skbio.alignment.stripedsmithwaterman method)": [[22, "skbio.alignment.StripedSmithWaterman.__gt__", false]], "__gt__() (skbio.alignment.tabularmsa method)": [[38, "skbio.alignment.TabularMSA.__gt__", false]], "__gt__() (skbio.embedding.proteinembedding method)": [[117, "skbio.embedding.ProteinEmbedding.__gt__", false]], "__gt__() (skbio.embedding.proteinvector method)": [[130, "skbio.embedding.ProteinVector.__gt__", false]], "__gt__() (skbio.io.registry.format method)": [[163, "skbio.io.registry.Format.__gt__", false]], "__gt__() (skbio.io.registry.ioregistry method)": [[176, "skbio.io.registry.IORegistry.__gt__", false]], "__gt__() (skbio.metadata.categoricalmetadatacolumn method)": [[205, "skbio.metadata.CategoricalMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.interval method)": [[223, "skbio.metadata.Interval.__gt__", false]], "__gt__() (skbio.metadata.intervalmetadata method)": [[235, "skbio.metadata.IntervalMetadata.__gt__", false]], "__gt__() (skbio.metadata.metadatacolumn method)": [[252, "skbio.metadata.MetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.numericmetadatacolumn method)": [[270, "skbio.metadata.NumericMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.samplemetadata method)": [[288, "skbio.metadata.SampleMetadata.__gt__", false]], "__gt__() (skbio.sequence.dna method)": [[312, "skbio.sequence.DNA.__gt__", false]], "__gt__() (skbio.sequence.geneticcode method)": [[366, "skbio.sequence.GeneticCode.__gt__", false]], "__gt__() (skbio.sequence.grammaredsequence method)": [[383, "skbio.sequence.GrammaredSequence.__gt__", false]], "__gt__() (skbio.sequence.protein method)": [[434, "skbio.sequence.Protein.__gt__", false]], "__gt__() (skbio.sequence.rna method)": [[487, "skbio.sequence.RNA.__gt__", false]], "__gt__() (skbio.sequence.sequence method)": [[546, "skbio.sequence.Sequence.__gt__", false]], "__gt__() (skbio.sequence.substitutionmatrix method)": [[581, "skbio.sequence.SubstitutionMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.dissimilaritymatrix method)": [[634, "skbio.stats.distance.DissimilarityMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.distancematrix method)": [[657, "skbio.stats.distance.DistanceMatrix.__gt__", false]], "__gt__() (skbio.stats.gradient.averagegradientanova method)": [[691, "skbio.stats.gradient.AverageGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.categoryresults method)": [[702, "skbio.stats.gradient.CategoryResults.__gt__", false]], "__gt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[713, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanova method)": [[724, "skbio.stats.gradient.GradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanovaresults method)": [[735, "skbio.stats.gradient.GradientANOVAResults.__gt__", false]], "__gt__() (skbio.stats.gradient.groupresults method)": [[746, "skbio.stats.gradient.GroupResults.__gt__", false]], "__gt__() (skbio.stats.gradient.trajectorygradientanova method)": [[757, "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[768, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.ordination.ordinationresults method)": [[781, "skbio.stats.ordination.OrdinationResults.__gt__", false]], "__gt__() (skbio.table.table method)": [[812, "skbio.table.Table.__gt__", false]], "__gt__() (skbio.tree.treenode method)": [[882, "skbio.tree.TreeNode.__gt__", false]], "__gt__() (skbio.util.classproperty method)": [[967, "skbio.util.classproperty.__gt__", false]], "__gt__() (skbio.workflow.method method)": [[998, "skbio.workflow.method.__gt__", false]], "__gt__() (skbio.workflow.requires method)": [[1009, "skbio.workflow.requires.__gt__", false]], "__gt__() (skbio.workflow.workflow method)": [[986, "skbio.workflow.Workflow.__gt__", false]], "__hash__() (skbio.alignment.alignmentstructure method)": [[9, "skbio.alignment.AlignmentStructure.__hash__", false]], "__hash__() (skbio.alignment.stripedsmithwaterman method)": [[23, "skbio.alignment.StripedSmithWaterman.__hash__", false]], "__hash__() (skbio.embedding.proteinembedding method)": [[118, "skbio.embedding.ProteinEmbedding.__hash__", false]], "__hash__() (skbio.embedding.proteinvector method)": [[131, "skbio.embedding.ProteinVector.__hash__", false]], "__hash__() (skbio.io.registry.format method)": [[164, "skbio.io.registry.Format.__hash__", false]], "__hash__() (skbio.io.registry.ioregistry method)": [[177, "skbio.io.registry.IORegistry.__hash__", false]], "__hash__() (skbio.stats.gradient.averagegradientanova method)": [[692, "skbio.stats.gradient.AverageGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.categoryresults method)": [[703, "skbio.stats.gradient.CategoryResults.__hash__", false]], "__hash__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[714, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanova method)": [[725, "skbio.stats.gradient.GradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanovaresults method)": [[736, "skbio.stats.gradient.GradientANOVAResults.__hash__", false]], "__hash__() (skbio.stats.gradient.groupresults method)": [[747, "skbio.stats.gradient.GroupResults.__hash__", false]], "__hash__() (skbio.stats.gradient.trajectorygradientanova method)": [[758, "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[769, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.ordination.ordinationresults method)": [[782, "skbio.stats.ordination.OrdinationResults.__hash__", false]], "__hash__() (skbio.tree.treenode method)": [[883, "skbio.tree.TreeNode.__hash__", false]], "__hash__() (skbio.util.classproperty method)": [[968, "skbio.util.classproperty.__hash__", false]], "__hash__() (skbio.workflow.method method)": [[999, "skbio.workflow.method.__hash__", false]], "__hash__() (skbio.workflow.requires method)": [[1010, "skbio.workflow.requires.__hash__", false]], "__hash__() (skbio.workflow.workflow method)": [[987, "skbio.workflow.Workflow.__hash__", false]], "__iter__() (skbio.alignment.tabularmsa method)": [[39, "skbio.alignment.TabularMSA.__iter__", false]], "__iter__() (skbio.sequence.dna method)": [[313, "skbio.sequence.DNA.__iter__", false]], "__iter__() (skbio.sequence.grammaredsequence method)": [[384, "skbio.sequence.GrammaredSequence.__iter__", false]], "__iter__() (skbio.sequence.protein method)": [[435, "skbio.sequence.Protein.__iter__", false]], "__iter__() (skbio.sequence.rna method)": [[488, "skbio.sequence.RNA.__iter__", false]], "__iter__() (skbio.sequence.sequence method)": [[547, "skbio.sequence.Sequence.__iter__", false]], "__iter__() (skbio.table.table method)": [[813, "skbio.table.Table.__iter__", false]], "__iter__() (skbio.tree.treenode method)": [[884, "skbio.tree.TreeNode.__iter__", false]], "__le__() (skbio.alignment.alignmentstructure method)": [[10, "skbio.alignment.AlignmentStructure.__le__", false]], "__le__() (skbio.alignment.stripedsmithwaterman method)": [[24, "skbio.alignment.StripedSmithWaterman.__le__", false]], "__le__() (skbio.alignment.tabularmsa method)": [[40, "skbio.alignment.TabularMSA.__le__", false]], "__le__() (skbio.embedding.proteinembedding method)": [[119, "skbio.embedding.ProteinEmbedding.__le__", false]], "__le__() (skbio.embedding.proteinvector method)": [[132, "skbio.embedding.ProteinVector.__le__", false]], "__le__() (skbio.io.registry.format method)": [[165, "skbio.io.registry.Format.__le__", false]], "__le__() (skbio.io.registry.ioregistry method)": [[178, "skbio.io.registry.IORegistry.__le__", false]], "__le__() (skbio.metadata.categoricalmetadatacolumn method)": [[206, "skbio.metadata.CategoricalMetadataColumn.__le__", false]], "__le__() (skbio.metadata.interval method)": [[224, "skbio.metadata.Interval.__le__", false]], "__le__() (skbio.metadata.intervalmetadata method)": [[236, "skbio.metadata.IntervalMetadata.__le__", false]], "__le__() (skbio.metadata.metadatacolumn method)": [[253, "skbio.metadata.MetadataColumn.__le__", false]], "__le__() (skbio.metadata.numericmetadatacolumn method)": [[271, "skbio.metadata.NumericMetadataColumn.__le__", false]], "__le__() (skbio.metadata.samplemetadata method)": [[289, "skbio.metadata.SampleMetadata.__le__", false]], "__le__() (skbio.sequence.dna method)": [[314, "skbio.sequence.DNA.__le__", false]], "__le__() (skbio.sequence.geneticcode method)": [[367, "skbio.sequence.GeneticCode.__le__", false]], "__le__() (skbio.sequence.grammaredsequence method)": [[385, "skbio.sequence.GrammaredSequence.__le__", false]], "__le__() (skbio.sequence.protein method)": [[436, "skbio.sequence.Protein.__le__", false]], "__le__() (skbio.sequence.rna method)": [[489, "skbio.sequence.RNA.__le__", false]], "__le__() (skbio.sequence.sequence method)": [[548, "skbio.sequence.Sequence.__le__", false]], "__le__() (skbio.sequence.substitutionmatrix method)": [[582, "skbio.sequence.SubstitutionMatrix.__le__", false]], "__le__() (skbio.stats.distance.dissimilaritymatrix method)": [[635, "skbio.stats.distance.DissimilarityMatrix.__le__", false]], "__le__() (skbio.stats.distance.distancematrix method)": [[658, "skbio.stats.distance.DistanceMatrix.__le__", false]], "__le__() (skbio.stats.gradient.averagegradientanova method)": [[693, "skbio.stats.gradient.AverageGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.categoryresults method)": [[704, "skbio.stats.gradient.CategoryResults.__le__", false]], "__le__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[715, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanova method)": [[726, "skbio.stats.gradient.GradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanovaresults method)": [[737, "skbio.stats.gradient.GradientANOVAResults.__le__", false]], "__le__() (skbio.stats.gradient.groupresults method)": [[748, "skbio.stats.gradient.GroupResults.__le__", false]], "__le__() (skbio.stats.gradient.trajectorygradientanova method)": [[759, "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[770, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.ordination.ordinationresults method)": [[783, "skbio.stats.ordination.OrdinationResults.__le__", false]], "__le__() (skbio.table.table method)": [[814, "skbio.table.Table.__le__", false]], "__le__() (skbio.tree.treenode method)": [[885, "skbio.tree.TreeNode.__le__", false]], "__le__() (skbio.util.classproperty method)": [[969, "skbio.util.classproperty.__le__", false]], "__le__() (skbio.workflow.method method)": [[1000, "skbio.workflow.method.__le__", false]], "__le__() (skbio.workflow.requires method)": [[1011, "skbio.workflow.requires.__le__", false]], "__le__() (skbio.workflow.workflow method)": [[988, "skbio.workflow.Workflow.__le__", false]], "__len__() (skbio.alignment.tabularmsa method)": [[41, "skbio.alignment.TabularMSA.__len__", false]], "__len__() (skbio.sequence.dna method)": [[315, "skbio.sequence.DNA.__len__", false]], "__len__() (skbio.sequence.grammaredsequence method)": [[386, "skbio.sequence.GrammaredSequence.__len__", false]], "__len__() (skbio.sequence.protein method)": [[437, "skbio.sequence.Protein.__len__", false]], "__len__() (skbio.sequence.rna method)": [[490, "skbio.sequence.RNA.__len__", false]], "__len__() (skbio.sequence.sequence method)": [[549, "skbio.sequence.Sequence.__len__", false]], "__len__() (skbio.tree.treenode method)": [[886, "skbio.tree.TreeNode.__len__", false]], "__lt__() (skbio.alignment.alignmentstructure method)": [[11, "skbio.alignment.AlignmentStructure.__lt__", false]], "__lt__() (skbio.alignment.stripedsmithwaterman method)": [[25, "skbio.alignment.StripedSmithWaterman.__lt__", false]], "__lt__() (skbio.alignment.tabularmsa method)": [[42, "skbio.alignment.TabularMSA.__lt__", false]], "__lt__() (skbio.embedding.proteinembedding method)": [[120, "skbio.embedding.ProteinEmbedding.__lt__", false]], "__lt__() (skbio.embedding.proteinvector method)": [[133, "skbio.embedding.ProteinVector.__lt__", false]], "__lt__() (skbio.io.registry.format method)": [[166, "skbio.io.registry.Format.__lt__", false]], "__lt__() (skbio.io.registry.ioregistry method)": [[179, "skbio.io.registry.IORegistry.__lt__", false]], "__lt__() (skbio.metadata.categoricalmetadatacolumn method)": [[207, "skbio.metadata.CategoricalMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.interval method)": [[225, "skbio.metadata.Interval.__lt__", false]], "__lt__() (skbio.metadata.intervalmetadata method)": [[237, "skbio.metadata.IntervalMetadata.__lt__", false]], "__lt__() (skbio.metadata.metadatacolumn method)": [[254, "skbio.metadata.MetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.numericmetadatacolumn method)": [[272, "skbio.metadata.NumericMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.samplemetadata method)": [[290, "skbio.metadata.SampleMetadata.__lt__", false]], "__lt__() (skbio.sequence.dna method)": [[316, "skbio.sequence.DNA.__lt__", false]], "__lt__() (skbio.sequence.geneticcode method)": [[368, "skbio.sequence.GeneticCode.__lt__", false]], "__lt__() (skbio.sequence.grammaredsequence method)": [[387, "skbio.sequence.GrammaredSequence.__lt__", false]], "__lt__() (skbio.sequence.protein method)": [[438, "skbio.sequence.Protein.__lt__", false]], "__lt__() (skbio.sequence.rna method)": [[491, "skbio.sequence.RNA.__lt__", false]], "__lt__() (skbio.sequence.sequence method)": [[550, "skbio.sequence.Sequence.__lt__", false]], "__lt__() (skbio.sequence.substitutionmatrix method)": [[583, "skbio.sequence.SubstitutionMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.dissimilaritymatrix method)": [[636, "skbio.stats.distance.DissimilarityMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.distancematrix method)": [[659, "skbio.stats.distance.DistanceMatrix.__lt__", false]], "__lt__() (skbio.stats.gradient.averagegradientanova method)": [[694, "skbio.stats.gradient.AverageGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.categoryresults method)": [[705, "skbio.stats.gradient.CategoryResults.__lt__", false]], "__lt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[716, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanova method)": [[727, "skbio.stats.gradient.GradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanovaresults method)": [[738, "skbio.stats.gradient.GradientANOVAResults.__lt__", false]], "__lt__() (skbio.stats.gradient.groupresults method)": [[749, "skbio.stats.gradient.GroupResults.__lt__", false]], "__lt__() (skbio.stats.gradient.trajectorygradientanova method)": [[760, "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[771, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.ordination.ordinationresults method)": [[784, "skbio.stats.ordination.OrdinationResults.__lt__", false]], "__lt__() (skbio.table.table method)": [[815, "skbio.table.Table.__lt__", false]], "__lt__() (skbio.tree.treenode method)": [[887, "skbio.tree.TreeNode.__lt__", false]], "__lt__() (skbio.util.classproperty method)": [[970, "skbio.util.classproperty.__lt__", false]], "__lt__() (skbio.workflow.method method)": [[1001, "skbio.workflow.method.__lt__", false]], "__lt__() (skbio.workflow.requires method)": [[1012, "skbio.workflow.requires.__lt__", false]], "__lt__() (skbio.workflow.workflow method)": [[989, "skbio.workflow.Workflow.__lt__", false]], "__ne__() (skbio.alignment.alignmentstructure method)": [[12, "skbio.alignment.AlignmentStructure.__ne__", false]], "__ne__() (skbio.alignment.stripedsmithwaterman method)": [[26, "skbio.alignment.StripedSmithWaterman.__ne__", false]], "__ne__() (skbio.alignment.tabularmsa method)": [[43, "skbio.alignment.TabularMSA.__ne__", false]], "__ne__() (skbio.embedding.proteinembedding method)": [[121, "skbio.embedding.ProteinEmbedding.__ne__", false]], "__ne__() (skbio.embedding.proteinvector method)": [[134, "skbio.embedding.ProteinVector.__ne__", false]], "__ne__() (skbio.io.registry.format method)": [[167, "skbio.io.registry.Format.__ne__", false]], "__ne__() (skbio.io.registry.ioregistry method)": [[180, "skbio.io.registry.IORegistry.__ne__", false]], "__ne__() (skbio.metadata.categoricalmetadatacolumn method)": [[208, "skbio.metadata.CategoricalMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.interval method)": [[226, "skbio.metadata.Interval.__ne__", false]], "__ne__() (skbio.metadata.intervalmetadata method)": [[238, "skbio.metadata.IntervalMetadata.__ne__", false]], "__ne__() (skbio.metadata.metadatacolumn method)": [[255, "skbio.metadata.MetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.numericmetadatacolumn method)": [[273, "skbio.metadata.NumericMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.samplemetadata method)": [[291, "skbio.metadata.SampleMetadata.__ne__", false]], "__ne__() (skbio.sequence.dna method)": [[317, "skbio.sequence.DNA.__ne__", false]], "__ne__() (skbio.sequence.geneticcode method)": [[369, "skbio.sequence.GeneticCode.__ne__", false]], "__ne__() (skbio.sequence.grammaredsequence method)": [[388, "skbio.sequence.GrammaredSequence.__ne__", false]], "__ne__() (skbio.sequence.protein method)": [[439, "skbio.sequence.Protein.__ne__", false]], "__ne__() (skbio.sequence.rna method)": [[492, "skbio.sequence.RNA.__ne__", false]], "__ne__() (skbio.sequence.sequence method)": [[551, "skbio.sequence.Sequence.__ne__", false]], "__ne__() (skbio.sequence.substitutionmatrix method)": [[584, "skbio.sequence.SubstitutionMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.dissimilaritymatrix method)": [[637, "skbio.stats.distance.DissimilarityMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.distancematrix method)": [[660, "skbio.stats.distance.DistanceMatrix.__ne__", false]], "__ne__() (skbio.stats.gradient.averagegradientanova method)": [[695, "skbio.stats.gradient.AverageGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.categoryresults method)": [[706, "skbio.stats.gradient.CategoryResults.__ne__", false]], "__ne__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[717, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanova method)": [[728, "skbio.stats.gradient.GradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanovaresults method)": [[739, "skbio.stats.gradient.GradientANOVAResults.__ne__", false]], "__ne__() (skbio.stats.gradient.groupresults method)": [[750, "skbio.stats.gradient.GroupResults.__ne__", false]], "__ne__() (skbio.stats.gradient.trajectorygradientanova method)": [[761, "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[772, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.ordination.ordinationresults method)": [[785, "skbio.stats.ordination.OrdinationResults.__ne__", false]], "__ne__() (skbio.table.table method)": [[816, "skbio.table.Table.__ne__", false]], "__ne__() (skbio.tree.treenode method)": [[888, "skbio.tree.TreeNode.__ne__", false]], "__ne__() (skbio.util.classproperty method)": [[971, "skbio.util.classproperty.__ne__", false]], "__ne__() (skbio.workflow.method method)": [[1002, "skbio.workflow.method.__ne__", false]], "__ne__() (skbio.workflow.requires method)": [[1013, "skbio.workflow.requires.__ne__", false]], "__ne__() (skbio.workflow.workflow method)": [[990, "skbio.workflow.Workflow.__ne__", false]], "__reversed__() (skbio.alignment.tabularmsa method)": [[44, "skbio.alignment.TabularMSA.__reversed__", false]], "__reversed__() (skbio.sequence.dna method)": [[318, "skbio.sequence.DNA.__reversed__", false]], "__reversed__() (skbio.sequence.grammaredsequence method)": [[389, "skbio.sequence.GrammaredSequence.__reversed__", false]], "__reversed__() (skbio.sequence.protein method)": [[440, "skbio.sequence.Protein.__reversed__", false]], "__reversed__() (skbio.sequence.rna method)": [[493, "skbio.sequence.RNA.__reversed__", false]], "__reversed__() (skbio.sequence.sequence method)": [[552, "skbio.sequence.Sequence.__reversed__", false]], "__set__() (skbio.util.classproperty method)": [[972, "skbio.util.classproperty.__set__", false]], "__set_name__() (skbio.util.classproperty method)": [[973, "skbio.util.classproperty.__set_name__", false]], "__setstate__() (skbio.alignment.alignmentstructure method)": [[13, "skbio.alignment.AlignmentStructure.__setstate__", false]], "__setstate__() (skbio.alignment.stripedsmithwaterman method)": [[27, "skbio.alignment.StripedSmithWaterman.__setstate__", false]], "__str__() (skbio.alignment.alignmentstructure method)": [[14, "skbio.alignment.AlignmentStructure.__str__", false]], "__str__() (skbio.alignment.stripedsmithwaterman method)": [[28, "skbio.alignment.StripedSmithWaterman.__str__", false]], "__str__() (skbio.alignment.tabularmsa method)": [[45, "skbio.alignment.TabularMSA.__str__", false]], "__str__() (skbio.embedding.proteinembedding method)": [[122, "skbio.embedding.ProteinEmbedding.__str__", false]], "__str__() (skbio.embedding.proteinvector method)": [[135, "skbio.embedding.ProteinVector.__str__", false]], "__str__() (skbio.io.registry.format method)": [[168, "skbio.io.registry.Format.__str__", false]], "__str__() (skbio.io.registry.ioregistry method)": [[181, "skbio.io.registry.IORegistry.__str__", false]], "__str__() (skbio.metadata.categoricalmetadatacolumn method)": [[209, "skbio.metadata.CategoricalMetadataColumn.__str__", false]], "__str__() (skbio.metadata.interval method)": [[227, "skbio.metadata.Interval.__str__", false]], "__str__() (skbio.metadata.intervalmetadata method)": [[239, "skbio.metadata.IntervalMetadata.__str__", false]], "__str__() (skbio.metadata.metadatacolumn method)": [[256, "skbio.metadata.MetadataColumn.__str__", false]], "__str__() (skbio.metadata.numericmetadatacolumn method)": [[274, "skbio.metadata.NumericMetadataColumn.__str__", false]], "__str__() (skbio.metadata.samplemetadata method)": [[292, "skbio.metadata.SampleMetadata.__str__", false]], "__str__() (skbio.sequence.dna method)": [[319, "skbio.sequence.DNA.__str__", false]], "__str__() (skbio.sequence.geneticcode method)": [[370, "skbio.sequence.GeneticCode.__str__", false]], "__str__() (skbio.sequence.grammaredsequence method)": [[390, "skbio.sequence.GrammaredSequence.__str__", false]], "__str__() (skbio.sequence.protein method)": [[441, "skbio.sequence.Protein.__str__", false]], "__str__() (skbio.sequence.rna method)": [[494, "skbio.sequence.RNA.__str__", false]], "__str__() (skbio.sequence.sequence method)": [[553, "skbio.sequence.Sequence.__str__", false]], "__str__() (skbio.sequence.substitutionmatrix method)": [[585, "skbio.sequence.SubstitutionMatrix.__str__", false]], "__str__() (skbio.stats.distance.dissimilaritymatrix method)": [[638, "skbio.stats.distance.DissimilarityMatrix.__str__", false]], "__str__() (skbio.stats.distance.distancematrix method)": [[661, "skbio.stats.distance.DistanceMatrix.__str__", false]], "__str__() (skbio.stats.gradient.averagegradientanova method)": [[696, "skbio.stats.gradient.AverageGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.categoryresults method)": [[707, "skbio.stats.gradient.CategoryResults.__str__", false]], "__str__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[718, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanova method)": [[729, "skbio.stats.gradient.GradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanovaresults method)": [[740, "skbio.stats.gradient.GradientANOVAResults.__str__", false]], "__str__() (skbio.stats.gradient.groupresults method)": [[751, "skbio.stats.gradient.GroupResults.__str__", false]], "__str__() (skbio.stats.gradient.trajectorygradientanova method)": [[762, "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[773, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.ordination.ordinationresults method)": [[786, "skbio.stats.ordination.OrdinationResults.__str__", false]], "__str__() (skbio.table.table method)": [[817, "skbio.table.Table.__str__", false]], "__str__() (skbio.tree.treenode method)": [[889, "skbio.tree.TreeNode.__str__", false]], "__str__() (skbio.util.classproperty method)": [[974, "skbio.util.classproperty.__str__", false]], "__str__() (skbio.workflow.method method)": [[1003, "skbio.workflow.method.__str__", false]], "__str__() (skbio.workflow.requires method)": [[1014, "skbio.workflow.requires.__str__", false]], "__str__() (skbio.workflow.workflow method)": [[991, "skbio.workflow.Workflow.__str__", false]], "accumulate_to_ancestor() (skbio.tree.treenode method)": [[890, "skbio.tree.TreeNode.accumulate_to_ancestor", false]], "ace() (in module skbio.diversity.alpha)": [[70, "skbio.diversity.alpha.ace", false]], "add() (skbio.metadata.intervalmetadata method)": [[240, "skbio.metadata.IntervalMetadata.add", false]], "add_format() (skbio.io.registry.ioregistry method)": [[182, "skbio.io.registry.IORegistry.add_format", false]], "add_group_metadata() (skbio.table.table method)": [[818, "skbio.table.Table.add_group_metadata", false]], "add_metadata() (skbio.table.table method)": [[819, "skbio.table.Table.add_metadata", false]], "align_to() (skbio.table.table method)": [[820, "skbio.table.Table.align_to", false]], "align_to_dataframe() (skbio.table.table method)": [[821, "skbio.table.Table.align_to_dataframe", false]], "align_tree() (skbio.table.table method)": [[822, "skbio.table.Table.align_tree", false]], "alignmentstructure (class in skbio.alignment)": [[3, "skbio.alignment.AlignmentStructure", false]], "alpha_diversity() (in module skbio.diversity)": [[104, "skbio.diversity.alpha_diversity", false]], "alr() (in module skbio.stats.composition)": [[607, "skbio.stats.composition.alr", false]], "alr_inv() (in module skbio.stats.composition)": [[608, "skbio.stats.composition.alr_inv", false]], "ancestors() (skbio.tree.treenode method)": [[891, "skbio.tree.TreeNode.ancestors", false]], "ancom() (in module skbio.stats.composition)": [[609, "skbio.stats.composition.ancom", false]], "anosim() (in module skbio.stats.distance)": [[677, "skbio.stats.distance.anosim", false]], "append() (skbio.alignment.tabularmsa method)": [[46, "skbio.alignment.TabularMSA.append", false]], "append() (skbio.tree.treenode method)": [[892, "skbio.tree.TreeNode.append", false]], "ascii_art() (skbio.tree.treenode method)": [[893, "skbio.tree.TreeNode.ascii_art", false]], "assert_data_frame_almost_equal() (in module skbio.util)": [[958, "skbio.util.assert_data_frame_almost_equal", false]], "assert_ordination_results_equal() (in module skbio.util)": [[959, "skbio.util.assert_ordination_results_equal", false]], "assign_ids() (skbio.tree.treenode method)": [[894, "skbio.tree.TreeNode.assign_ids", false]], "assign_supports() (skbio.tree.treenode method)": [[895, "skbio.tree.TreeNode.assign_supports", false]], "averagegradientanova (class in skbio.stats.gradient)": [[687, "skbio.stats.gradient.AverageGradientANOVA", false]], "berger_parker_d() (in module skbio.diversity.alpha)": [[71, "skbio.diversity.alpha.berger_parker_d", false]], "beta_diversity() (in module skbio.diversity)": [[108, "skbio.diversity.beta_diversity", false]], "between() (skbio.sequence.substitutionmatrix method)": [[586, "skbio.sequence.SubstitutionMatrix.between", false]], "between() (skbio.stats.distance.dissimilaritymatrix method)": [[639, "skbio.stats.distance.DissimilarityMatrix.between", false]], "between() (skbio.stats.distance.distancematrix method)": [[662, "skbio.stats.distance.DistanceMatrix.between", false]], "bifurcate() (skbio.tree.treenode method)": [[896, "skbio.tree.TreeNode.bifurcate", false]], "bioenv() (in module skbio.stats.distance)": [[678, "skbio.stats.distance.bioenv", false]], "block_beta_diversity() (in module skbio.diversity)": [[109, "skbio.diversity.block_beta_diversity", false]], "brillouin_d() (in module skbio.diversity.alpha)": [[72, "skbio.diversity.alpha.brillouin_d", false]], "by_name() (skbio.sequence.substitutionmatrix class method)": [[587, "skbio.sequence.SubstitutionMatrix.by_name", false]], "bytes() (skbio.embedding.proteinembedding method)": [[123, "skbio.embedding.ProteinEmbedding.bytes", false]], "bytes() (skbio.embedding.proteinvector method)": [[136, "skbio.embedding.ProteinVector.bytes", false]], "ca() (in module skbio.stats.ordination)": [[790, "skbio.stats.ordination.ca", false]], "cache_attr() (skbio.tree.treenode method)": [[897, "skbio.tree.TreeNode.cache_attr", false]], "cardinal_to_ordinal() (in module skbio.util)": [[960, "skbio.util.cardinal_to_ordinal", false]], "categoricalmetadatacolumn (class in skbio.metadata)": [[201, "skbio.metadata.CategoricalMetadataColumn", false]], "categoryresults (class in skbio.stats.gradient)": [[698, "skbio.stats.gradient.CategoryResults", false]], "cca() (in module skbio.stats.ordination)": [[791, "skbio.stats.ordination.cca", false]], "centralize() (in module skbio.stats.composition)": [[610, "skbio.stats.composition.centralize", false]], "chao1() (in module skbio.diversity.alpha)": [[73, "skbio.diversity.alpha.chao1", false]], "chao1_ci() (in module skbio.diversity.alpha)": [[74, "skbio.diversity.alpha.chao1_ci", false]], "classproperty (class in skbio.util)": [[961, "skbio.util.classproperty", false]], "closure() (in module skbio.stats.composition)": [[611, "skbio.stats.composition.closure", false]], "clr() (in module skbio.stats.composition)": [[612, "skbio.stats.composition.clr", false]], "clr_inv() (in module skbio.stats.composition)": [[613, "skbio.stats.composition.clr_inv", false]], "collapse() (skbio.table.table method)": [[823, "skbio.table.Table.collapse", false]], "compare_rfd() (skbio.tree.treenode method)": [[898, "skbio.tree.TreeNode.compare_rfd", false]], "compare_subsets() (skbio.tree.treenode method)": [[899, "skbio.tree.TreeNode.compare_subsets", false]], "compare_tip_distances() (skbio.tree.treenode method)": [[900, "skbio.tree.TreeNode.compare_tip_distances", false]], "complement() (skbio.sequence.dna method)": [[320, "skbio.sequence.DNA.complement", false]], "complement() (skbio.sequence.rna method)": [[495, "skbio.sequence.RNA.complement", false]], "concat() (skbio.metadata.intervalmetadata class method)": [[241, "skbio.metadata.IntervalMetadata.concat", false]], "concat() (skbio.sequence.dna class method)": [[321, "skbio.sequence.DNA.concat", false]], "concat() (skbio.sequence.grammaredsequence class method)": [[391, "skbio.sequence.GrammaredSequence.concat", false]], "concat() (skbio.sequence.protein class method)": [[442, "skbio.sequence.Protein.concat", false]], "concat() (skbio.sequence.rna class method)": [[496, "skbio.sequence.RNA.concat", false]], "concat() (skbio.sequence.sequence class method)": [[554, "skbio.sequence.Sequence.concat", false]], "concat() (skbio.table.table method)": [[824, "skbio.table.Table.concat", false]], "condensed_form() (skbio.stats.distance.distancematrix method)": [[663, "skbio.stats.distance.DistanceMatrix.condensed_form", false]], "confidence_bound() (in module skbio.stats.power)": [[802, "skbio.stats.power.confidence_bound", false]], "consensus() (skbio.alignment.tabularmsa method)": [[47, "skbio.alignment.TabularMSA.consensus", false]], "conservation() (skbio.alignment.tabularmsa method)": [[48, "skbio.alignment.TabularMSA.conservation", false]], "copy() (skbio.sequence.substitutionmatrix method)": [[588, "skbio.sequence.SubstitutionMatrix.copy", false]], "copy() (skbio.stats.distance.dissimilaritymatrix method)": [[640, "skbio.stats.distance.DissimilarityMatrix.copy", false]], "copy() (skbio.stats.distance.distancematrix method)": [[664, "skbio.stats.distance.DistanceMatrix.copy", false]], "copy() (skbio.table.table method)": [[825, "skbio.table.Table.copy", false]], "copy() (skbio.tree.treenode method)": [[901, "skbio.tree.TreeNode.copy", false]], "corr() (in module skbio.stats.ordination)": [[792, "skbio.stats.ordination.corr", false]], "count() (skbio.sequence.dna method)": [[322, "skbio.sequence.DNA.count", false]], "count() (skbio.sequence.grammaredsequence method)": [[392, "skbio.sequence.GrammaredSequence.count", false]], "count() (skbio.sequence.protein method)": [[443, "skbio.sequence.Protein.count", false]], "count() (skbio.sequence.rna method)": [[497, "skbio.sequence.RNA.count", false]], "count() (skbio.sequence.sequence method)": [[555, "skbio.sequence.Sequence.count", false]], "count() (skbio.tree.treenode method)": [[902, "skbio.tree.TreeNode.count", false]], "create_caches() (skbio.tree.treenode method)": [[903, "skbio.tree.TreeNode.create_caches", false]], "create_format() (in module skbio.io.registry)": [[193, "skbio.io.registry.create_format", false]], "create_format() (skbio.io.registry.ioregistry method)": [[183, "skbio.io.registry.IORegistry.create_format", false]], "data() (skbio.table.table method)": [[826, "skbio.table.Table.data", false]], "deepcopy() (skbio.tree.treenode method)": [[904, "skbio.tree.TreeNode.deepcopy", false]], "definites() (skbio.sequence.dna method)": [[323, "skbio.sequence.DNA.definites", false]], "definites() (skbio.sequence.grammaredsequence method)": [[393, "skbio.sequence.GrammaredSequence.definites", false]], "definites() (skbio.sequence.protein method)": [[444, "skbio.sequence.Protein.definites", false]], "definites() (skbio.sequence.rna method)": [[498, "skbio.sequence.RNA.definites", false]], "degap() (skbio.sequence.dna method)": [[324, "skbio.sequence.DNA.degap", false]], "degap() (skbio.sequence.grammaredsequence method)": [[394, "skbio.sequence.GrammaredSequence.degap", false]], "degap() (skbio.sequence.protein method)": [[445, "skbio.sequence.Protein.degap", false]], "degap() (skbio.sequence.rna method)": [[499, "skbio.sequence.RNA.degap", false]], "degenerates() (skbio.sequence.dna method)": [[325, "skbio.sequence.DNA.degenerates", false]], "degenerates() (skbio.sequence.grammaredsequence method)": [[395, "skbio.sequence.GrammaredSequence.degenerates", false]], "degenerates() (skbio.sequence.protein method)": [[446, "skbio.sequence.Protein.degenerates", false]], "degenerates() (skbio.sequence.rna method)": [[500, "skbio.sequence.RNA.degenerates", false]], "del_metadata() (skbio.table.table method)": [[827, "skbio.table.Table.del_metadata", false]], "deleter() (skbio.util.classproperty method)": [[975, "skbio.util.classproperty.deleter", false]], "delimited_self() (skbio.table.table method)": [[828, "skbio.table.Table.delimited_self", false]], "descending_branch_length() (skbio.tree.treenode method)": [[905, "skbio.tree.TreeNode.descending_branch_length", false]], "descriptive_equality() (skbio.table.table method)": [[829, "skbio.table.Table.descriptive_equality", false]], "dirmult_ttest() (in module skbio.stats.composition)": [[614, "skbio.stats.composition.dirmult_ttest", false]], "dissimilaritymatrix (class in skbio.stats.distance)": [[628, "skbio.stats.distance.DissimilarityMatrix", false]], "distance() (skbio.sequence.dna method)": [[326, "skbio.sequence.DNA.distance", false]], "distance() (skbio.sequence.grammaredsequence method)": [[396, "skbio.sequence.GrammaredSequence.distance", false]], "distance() (skbio.sequence.protein method)": [[447, "skbio.sequence.Protein.distance", false]], "distance() (skbio.sequence.rna method)": [[501, "skbio.sequence.RNA.distance", false]], "distance() (skbio.sequence.sequence method)": [[556, "skbio.sequence.Sequence.distance", false]], "distance() (skbio.tree.treenode method)": [[906, "skbio.tree.TreeNode.distance", false]], "distancematrix (class in skbio.stats.distance)": [[651, "skbio.stats.distance.DistanceMatrix", false]], "dna (class in skbio.sequence)": [[303, "skbio.sequence.DNA", false]], "dominance() (in module skbio.diversity.alpha)": [[75, "skbio.diversity.alpha.dominance", false]], "doubles() (in module skbio.diversity.alpha)": [[76, "skbio.diversity.alpha.doubles", false]], "drop() (skbio.metadata.interval method)": [[228, "skbio.metadata.Interval.drop", false]], "drop() (skbio.metadata.intervalmetadata method)": [[242, "skbio.metadata.IntervalMetadata.drop", false]], "drop_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[210, "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.metadatacolumn method)": [[257, "skbio.metadata.MetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[275, "skbio.metadata.NumericMetadataColumn.drop_missing_values", false]], "e_matrix() (in module skbio.stats.ordination)": [[793, "skbio.stats.ordination.e_matrix", false]], "efficiencywarning": [[956, "skbio.util.EfficiencyWarning", false]], "enspie() (in module skbio.diversity.alpha)": [[77, "skbio.diversity.alpha.enspie", false]], "esty_ci() (in module skbio.diversity.alpha)": [[78, "skbio.diversity.alpha.esty_ci", false]], "example_table (in module skbio.table)": [[874, "skbio.table.example_table", false]], "exists() (skbio.table.table method)": [[830, "skbio.table.Table.exists", false]], "expand_degenerates() (skbio.sequence.dna method)": [[327, "skbio.sequence.DNA.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.grammaredsequence method)": [[397, "skbio.sequence.GrammaredSequence.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.protein method)": [[448, "skbio.sequence.Protein.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.rna method)": [[502, "skbio.sequence.RNA.expand_degenerates", false]], "extend() (skbio.alignment.tabularmsa method)": [[49, "skbio.alignment.TabularMSA.extend", false]], "extend() (skbio.tree.treenode method)": [[907, "skbio.tree.TreeNode.extend", false]], "f_matrix() (in module skbio.stats.ordination)": [[794, "skbio.stats.ordination.f_matrix", false]], "faith_pd() (in module skbio.diversity.alpha)": [[79, "skbio.diversity.alpha.faith_pd", false]], "filter() (skbio.sequence.substitutionmatrix method)": [[589, "skbio.sequence.SubstitutionMatrix.filter", false]], "filter() (skbio.stats.distance.dissimilaritymatrix method)": [[641, "skbio.stats.distance.DissimilarityMatrix.filter", false]], "filter() (skbio.stats.distance.distancematrix method)": [[665, "skbio.stats.distance.DistanceMatrix.filter", false]], "filter() (skbio.table.table method)": [[831, "skbio.table.Table.filter", false]], "filter_columns() (skbio.metadata.samplemetadata method)": [[293, "skbio.metadata.SampleMetadata.filter_columns", false]], "filter_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[211, "skbio.metadata.CategoricalMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.metadatacolumn method)": [[258, "skbio.metadata.MetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.numericmetadatacolumn method)": [[276, "skbio.metadata.NumericMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.samplemetadata method)": [[294, "skbio.metadata.SampleMetadata.filter_ids", false]], "find() (skbio.tree.treenode method)": [[908, "skbio.tree.TreeNode.find", false]], "find_all() (skbio.tree.treenode method)": [[909, "skbio.tree.TreeNode.find_all", false]], "find_by_func() (skbio.tree.treenode method)": [[910, "skbio.tree.TreeNode.find_by_func", false]], "find_by_id() (skbio.tree.treenode method)": [[911, "skbio.tree.TreeNode.find_by_id", false]], "find_duplicates() (in module skbio.util)": [[978, "skbio.util.find_duplicates", false]], "find_motifs() (skbio.sequence.dna method)": [[328, "skbio.sequence.DNA.find_motifs", false]], "find_motifs() (skbio.sequence.grammaredsequence method)": [[398, "skbio.sequence.GrammaredSequence.find_motifs", false]], "find_motifs() (skbio.sequence.protein method)": [[449, "skbio.sequence.Protein.find_motifs", false]], "find_motifs() (skbio.sequence.rna method)": [[503, "skbio.sequence.RNA.find_motifs", false]], "find_with_regex() (skbio.sequence.dna method)": [[329, "skbio.sequence.DNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.grammaredsequence method)": [[399, "skbio.sequence.GrammaredSequence.find_with_regex", false]], "find_with_regex() (skbio.sequence.protein method)": [[450, "skbio.sequence.Protein.find_with_regex", false]], "find_with_regex() (skbio.sequence.rna method)": [[504, "skbio.sequence.RNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.sequence method)": [[557, "skbio.sequence.Sequence.find_with_regex", false]], "firstdifferencegradientanova (class in skbio.stats.gradient)": [[709, "skbio.stats.gradient.FirstDifferenceGradientANOVA", false]], "fisher_alpha() (in module skbio.diversity.alpha)": [[80, "skbio.diversity.alpha.fisher_alpha", false]], "format (class in skbio.io.registry)": [[159, "skbio.io.registry.Format", false]], "frequencies() (skbio.sequence.dna method)": [[330, "skbio.sequence.DNA.frequencies", false]], "frequencies() (skbio.sequence.grammaredsequence method)": [[400, "skbio.sequence.GrammaredSequence.frequencies", false]], "frequencies() (skbio.sequence.protein method)": [[451, "skbio.sequence.Protein.frequencies", false]], "frequencies() (skbio.sequence.rna method)": [[505, "skbio.sequence.RNA.frequencies", false]], "frequencies() (skbio.sequence.sequence method)": [[558, "skbio.sequence.Sequence.frequencies", false]], "from_adjacency() (skbio.table.table static method)": [[832, "skbio.table.Table.from_adjacency", false]], "from_dict() (skbio.alignment.tabularmsa class method)": [[50, "skbio.alignment.TabularMSA.from_dict", false]], "from_dict() (skbio.sequence.substitutionmatrix class method)": [[590, "skbio.sequence.SubstitutionMatrix.from_dict", false]], "from_hdf5() (skbio.table.table class method)": [[833, "skbio.table.Table.from_hdf5", false]], "from_iterable() (skbio.sequence.substitutionmatrix class method)": [[591, "skbio.sequence.SubstitutionMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.dissimilaritymatrix class method)": [[642, "skbio.stats.distance.DissimilarityMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.distancematrix class method)": [[666, "skbio.stats.distance.DistanceMatrix.from_iterable", false]], "from_json() (skbio.table.table class method)": [[834, "skbio.table.Table.from_json", false]], "from_linkage_matrix() (skbio.tree.treenode class method)": [[912, "skbio.tree.TreeNode.from_linkage_matrix", false]], "from_ncbi() (skbio.sequence.geneticcode class method)": [[371, "skbio.sequence.GeneticCode.from_ncbi", false]], "from_taxdump() (skbio.tree.treenode class method)": [[913, "skbio.tree.TreeNode.from_taxdump", false]], "from_taxonomy() (skbio.tree.treenode class method)": [[914, "skbio.tree.TreeNode.from_taxonomy", false]], "from_tsv() (skbio.table.table static method)": [[835, "skbio.table.Table.from_tsv", false]], "gap_frequencies() (skbio.alignment.tabularmsa method)": [[51, "skbio.alignment.TabularMSA.gap_frequencies", false]], "gaps() (skbio.sequence.dna method)": [[331, "skbio.sequence.DNA.gaps", false]], "gaps() (skbio.sequence.grammaredsequence method)": [[401, "skbio.sequence.GrammaredSequence.gaps", false]], "gaps() (skbio.sequence.protein method)": [[452, "skbio.sequence.Protein.gaps", false]], "gaps() (skbio.sequence.rna method)": [[506, "skbio.sequence.RNA.gaps", false]], "gc_content() (skbio.sequence.dna method)": [[332, "skbio.sequence.DNA.gc_content", false]], "gc_content() (skbio.sequence.rna method)": [[507, "skbio.sequence.RNA.gc_content", false]], "gc_frequency() (skbio.sequence.dna method)": [[333, "skbio.sequence.DNA.gc_frequency", false]], "gc_frequency() (skbio.sequence.rna method)": [[508, "skbio.sequence.RNA.gc_frequency", false]], "geneticcode (class in skbio.sequence)": [[362, "skbio.sequence.GeneticCode", false]], "get_alpha_diversity_metrics() (in module skbio.diversity)": [[110, "skbio.diversity.get_alpha_diversity_metrics", false]], "get_beta_diversity_metrics() (in module skbio.diversity)": [[111, "skbio.diversity.get_beta_diversity_metrics", false]], "get_column() (skbio.metadata.samplemetadata method)": [[295, "skbio.metadata.SampleMetadata.get_column", false]], "get_data_path() (in module skbio.util)": [[979, "skbio.util.get_data_path", false]], "get_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[212, "skbio.metadata.CategoricalMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.metadatacolumn method)": [[259, "skbio.metadata.MetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.numericmetadatacolumn method)": [[277, "skbio.metadata.NumericMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.samplemetadata method)": [[296, "skbio.metadata.SampleMetadata.get_ids", false]], "get_max_distance() (skbio.tree.treenode method)": [[915, "skbio.tree.TreeNode.get_max_distance", false]], "get_missing() (skbio.metadata.categoricalmetadatacolumn method)": [[213, "skbio.metadata.CategoricalMetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.metadatacolumn method)": [[260, "skbio.metadata.MetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.numericmetadatacolumn method)": [[278, "skbio.metadata.NumericMetadataColumn.get_missing", false]], "get_names() (skbio.sequence.substitutionmatrix class method)": [[592, "skbio.sequence.SubstitutionMatrix.get_names", false]], "get_reader() (skbio.io.registry.ioregistry method)": [[184, "skbio.io.registry.IORegistry.get_reader", false]], "get_sniffer() (skbio.io.registry.ioregistry method)": [[185, "skbio.io.registry.IORegistry.get_sniffer", false]], "get_table_density() (skbio.table.table method)": [[836, "skbio.table.Table.get_table_density", false]], "get_trajectories() (skbio.stats.gradient.averagegradientanova method)": [[697, "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.firstdifferencegradientanova method)": [[719, "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.gradientanova method)": [[730, "skbio.stats.gradient.GradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.trajectorygradientanova method)": [[763, "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.windowdifferencegradientanova method)": [[774, "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", false]], "get_value() (skbio.metadata.categoricalmetadatacolumn method)": [[214, "skbio.metadata.CategoricalMetadataColumn.get_value", false]], "get_value() (skbio.metadata.metadatacolumn method)": [[261, "skbio.metadata.MetadataColumn.get_value", false]], "get_value() (skbio.metadata.numericmetadatacolumn method)": [[279, "skbio.metadata.NumericMetadataColumn.get_value", false]], "get_value_by_ids() (skbio.table.table method)": [[837, "skbio.table.Table.get_value_by_ids", false]], "get_writer() (skbio.io.registry.ioregistry method)": [[186, "skbio.io.registry.IORegistry.get_writer", false]], "getter() (skbio.util.classproperty method)": [[976, "skbio.util.classproperty.getter", false]], "gini_index() (in module skbio.diversity.alpha)": [[81, "skbio.diversity.alpha.gini_index", false]], "global_pairwise_align() (in module skbio.alignment)": [[61, "skbio.alignment.global_pairwise_align", false]], "global_pairwise_align_nucleotide() (in module skbio.alignment)": [[62, "skbio.alignment.global_pairwise_align_nucleotide", false]], "global_pairwise_align_protein() (in module skbio.alignment)": [[63, "skbio.alignment.global_pairwise_align_protein", false]], "goods_coverage() (in module skbio.diversity.alpha)": [[82, "skbio.diversity.alpha.goods_coverage", false]], "gradientanova (class in skbio.stats.gradient)": [[720, "skbio.stats.gradient.GradientANOVA", false]], "gradientanovaresults (class in skbio.stats.gradient)": [[731, "skbio.stats.gradient.GradientANOVAResults", false]], "grammaredsequence (class in skbio.sequence)": [[374, "skbio.sequence.GrammaredSequence", false]], "group_metadata() (skbio.table.table method)": [[838, "skbio.table.Table.group_metadata", false]], "groupresults (class in skbio.stats.gradient)": [[742, "skbio.stats.gradient.GroupResults", false]], "hamming() (in module skbio.sequence.distance)": [[604, "skbio.sequence.distance.hamming", false]], "has_children() (skbio.tree.treenode method)": [[916, "skbio.tree.TreeNode.has_children", false]], "has_definites() (skbio.sequence.dna method)": [[334, "skbio.sequence.DNA.has_definites", false]], "has_definites() (skbio.sequence.grammaredsequence method)": [[402, "skbio.sequence.GrammaredSequence.has_definites", false]], "has_definites() (skbio.sequence.protein method)": [[453, "skbio.sequence.Protein.has_definites", false]], "has_definites() (skbio.sequence.rna method)": [[509, "skbio.sequence.RNA.has_definites", false]], "has_degenerates() (skbio.sequence.dna method)": [[335, "skbio.sequence.DNA.has_degenerates", false]], "has_degenerates() (skbio.sequence.grammaredsequence method)": [[403, "skbio.sequence.GrammaredSequence.has_degenerates", false]], "has_degenerates() (skbio.sequence.protein method)": [[454, "skbio.sequence.Protein.has_degenerates", false]], "has_degenerates() (skbio.sequence.rna method)": [[510, "skbio.sequence.RNA.has_degenerates", false]], "has_gaps() (skbio.sequence.dna method)": [[336, "skbio.sequence.DNA.has_gaps", false]], "has_gaps() (skbio.sequence.grammaredsequence method)": [[404, "skbio.sequence.GrammaredSequence.has_gaps", false]], "has_gaps() (skbio.sequence.protein method)": [[455, "skbio.sequence.Protein.has_gaps", false]], "has_gaps() (skbio.sequence.rna method)": [[511, "skbio.sequence.RNA.has_gaps", false]], "has_interval_metadata() (skbio.sequence.dna method)": [[337, "skbio.sequence.DNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.grammaredsequence method)": [[405, "skbio.sequence.GrammaredSequence.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.protein method)": [[456, "skbio.sequence.Protein.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.rna method)": [[512, "skbio.sequence.RNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.sequence method)": [[559, "skbio.sequence.Sequence.has_interval_metadata", false]], "has_metadata() (skbio.alignment.tabularmsa method)": [[52, "skbio.alignment.TabularMSA.has_metadata", false]], "has_metadata() (skbio.sequence.dna method)": [[338, "skbio.sequence.DNA.has_metadata", false]], "has_metadata() (skbio.sequence.grammaredsequence method)": [[406, "skbio.sequence.GrammaredSequence.has_metadata", false]], "has_metadata() (skbio.sequence.protein method)": [[457, "skbio.sequence.Protein.has_metadata", false]], "has_metadata() (skbio.sequence.rna method)": [[513, "skbio.sequence.RNA.has_metadata", false]], "has_metadata() (skbio.sequence.sequence method)": [[560, "skbio.sequence.Sequence.has_metadata", false]], "has_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[215, "skbio.metadata.CategoricalMetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.metadatacolumn method)": [[262, "skbio.metadata.MetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[280, "skbio.metadata.NumericMetadataColumn.has_missing_values", false]], "has_nondegenerates() (skbio.sequence.dna method)": [[339, "skbio.sequence.DNA.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.grammaredsequence method)": [[407, "skbio.sequence.GrammaredSequence.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.protein method)": [[458, "skbio.sequence.Protein.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.rna method)": [[514, "skbio.sequence.RNA.has_nondegenerates", false]], "has_positional_metadata() (skbio.alignment.tabularmsa method)": [[53, "skbio.alignment.TabularMSA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.dna method)": [[340, "skbio.sequence.DNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.grammaredsequence method)": [[408, "skbio.sequence.GrammaredSequence.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.protein method)": [[459, "skbio.sequence.Protein.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.rna method)": [[515, "skbio.sequence.RNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.sequence method)": [[561, "skbio.sequence.Sequence.has_positional_metadata", false]], "has_stops() (skbio.sequence.protein method)": [[460, "skbio.sequence.Protein.has_stops", false]], "head() (skbio.table.table method)": [[839, "skbio.table.Table.head", false]], "heip_e() (in module skbio.diversity.alpha)": [[83, "skbio.diversity.alpha.heip_e", false]], "hommola_cospeciation() (in module skbio.stats.evolve)": [[685, "skbio.stats.evolve.hommola_cospeciation", false]], "identity() (skbio.sequence.substitutionmatrix class method)": [[593, "skbio.sequence.SubstitutionMatrix.identity", false]], "ids() (skbio.table.table method)": [[840, "skbio.table.Table.ids", false]], "ilr() (in module skbio.stats.composition)": [[615, "skbio.stats.composition.ilr", false]], "ilr_inv() (in module skbio.stats.composition)": [[616, "skbio.stats.composition.ilr_inv", false]], "index() (skbio.sequence.dna method)": [[341, "skbio.sequence.DNA.index", false]], "index() (skbio.sequence.grammaredsequence method)": [[409, "skbio.sequence.GrammaredSequence.index", false]], "index() (skbio.sequence.protein method)": [[461, "skbio.sequence.Protein.index", false]], "index() (skbio.sequence.rna method)": [[516, "skbio.sequence.RNA.index", false]], "index() (skbio.sequence.sequence method)": [[562, "skbio.sequence.Sequence.index", false]], "index() (skbio.sequence.substitutionmatrix method)": [[594, "skbio.sequence.SubstitutionMatrix.index", false]], "index() (skbio.stats.distance.dissimilaritymatrix method)": [[643, "skbio.stats.distance.DissimilarityMatrix.index", false]], "index() (skbio.stats.distance.distancematrix method)": [[667, "skbio.stats.distance.DistanceMatrix.index", false]], "index() (skbio.table.table method)": [[841, "skbio.table.Table.index", false]], "index_tree() (skbio.tree.treenode method)": [[917, "skbio.tree.TreeNode.index_tree", false]], "initialize_state() (skbio.workflow.workflow method)": [[992, "skbio.workflow.Workflow.initialize_state", false]], "inner() (in module skbio.stats.composition)": [[617, "skbio.stats.composition.inner", false]], "interval (class in skbio.metadata)": [[219, "skbio.metadata.Interval", false]], "intervalmetadata (class in skbio.metadata)": [[229, "skbio.metadata.IntervalMetadata", false]], "invalidate_caches() (skbio.tree.treenode method)": [[918, "skbio.tree.TreeNode.invalidate_caches", false]], "ioregistry (class in skbio.io.registry)": [[172, "skbio.io.registry.IORegistry", false]], "is_empty() (skbio.table.table method)": [[842, "skbio.table.Table.is_empty", false]], "is_reverse_complement() (skbio.sequence.dna method)": [[342, "skbio.sequence.DNA.is_reverse_complement", false]], "is_reverse_complement() (skbio.sequence.rna method)": [[517, "skbio.sequence.RNA.is_reverse_complement", false]], "is_root() (skbio.tree.treenode method)": [[919, "skbio.tree.TreeNode.is_root", false]], "is_tip() (skbio.tree.treenode method)": [[920, "skbio.tree.TreeNode.is_tip", false]], "is_zero_based() (skbio.alignment.alignmentstructure method)": [[15, "skbio.alignment.AlignmentStructure.is_zero_based", false]], "isubsample() (in module skbio.stats)": [[775, "skbio.stats.isubsample", false]], "iter() (skbio.table.table method)": [[843, "skbio.table.Table.iter", false]], "iter_contiguous() (skbio.sequence.dna method)": [[343, "skbio.sequence.DNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.grammaredsequence method)": [[410, "skbio.sequence.GrammaredSequence.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.protein method)": [[462, "skbio.sequence.Protein.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.rna method)": [[518, "skbio.sequence.RNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.sequence method)": [[563, "skbio.sequence.Sequence.iter_contiguous", false]], "iter_data() (skbio.table.table method)": [[844, "skbio.table.Table.iter_data", false]], "iter_kmers() (skbio.sequence.dna method)": [[344, "skbio.sequence.DNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.grammaredsequence method)": [[411, "skbio.sequence.GrammaredSequence.iter_kmers", false]], "iter_kmers() (skbio.sequence.protein method)": [[463, "skbio.sequence.Protein.iter_kmers", false]], "iter_kmers() (skbio.sequence.rna method)": [[519, "skbio.sequence.RNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.sequence method)": [[564, "skbio.sequence.Sequence.iter_kmers", false]], "iter_pairwise() (skbio.table.table method)": [[845, "skbio.table.Table.iter_pairwise", false]], "iter_positions() (skbio.alignment.tabularmsa method)": [[54, "skbio.alignment.TabularMSA.iter_positions", false]], "join() (skbio.alignment.tabularmsa method)": [[55, "skbio.alignment.TabularMSA.join", false]], "kempton_taylor_q() (in module skbio.diversity.alpha)": [[84, "skbio.diversity.alpha.kempton_taylor_q", false]], "kmer_distance() (in module skbio.sequence.distance)": [[605, "skbio.sequence.distance.kmer_distance", false]], "kmer_frequencies() (skbio.sequence.dna method)": [[345, "skbio.sequence.DNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.grammaredsequence method)": [[412, "skbio.sequence.GrammaredSequence.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.protein method)": [[464, "skbio.sequence.Protein.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.rna method)": [[520, "skbio.sequence.RNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.sequence method)": [[565, "skbio.sequence.Sequence.kmer_frequencies", false]], "lca() (skbio.tree.treenode method)": [[921, "skbio.tree.TreeNode.lca", false]], "length() (skbio.table.table method)": [[846, "skbio.table.Table.length", false]], "levelorder() (skbio.tree.treenode method)": [[922, "skbio.tree.TreeNode.levelorder", false]], "list_read_formats() (skbio.io.registry.ioregistry method)": [[187, "skbio.io.registry.IORegistry.list_read_formats", false]], "list_write_formats() (skbio.io.registry.ioregistry method)": [[188, "skbio.io.registry.IORegistry.list_write_formats", false]], "lladser_ci() (in module skbio.diversity.alpha)": [[85, "skbio.diversity.alpha.lladser_ci", false]], "lladser_pe() (in module skbio.diversity.alpha)": [[86, "skbio.diversity.alpha.lladser_pe", false]], "load() (skbio.metadata.samplemetadata class method)": [[297, "skbio.metadata.SampleMetadata.load", false]], "local_pairwise_align() (in module skbio.alignment)": [[64, "skbio.alignment.local_pairwise_align", false]], "local_pairwise_align_nucleotide() (in module skbio.alignment)": [[65, "skbio.alignment.local_pairwise_align_nucleotide", false]], "local_pairwise_align_protein() (in module skbio.alignment)": [[66, "skbio.alignment.local_pairwise_align_protein", false]], "local_pairwise_align_ssw() (in module skbio.alignment)": [[67, "skbio.alignment.local_pairwise_align_ssw", false]], "lowercase() (skbio.sequence.dna method)": [[346, "skbio.sequence.DNA.lowercase", false]], "lowercase() (skbio.sequence.grammaredsequence method)": [[413, "skbio.sequence.GrammaredSequence.lowercase", false]], "lowercase() (skbio.sequence.protein method)": [[465, "skbio.sequence.Protein.lowercase", false]], "lowercase() (skbio.sequence.rna method)": [[521, "skbio.sequence.RNA.lowercase", false]], "lowercase() (skbio.sequence.sequence method)": [[566, "skbio.sequence.Sequence.lowercase", false]], "lowest_common_ancestor() (skbio.tree.treenode method)": [[923, "skbio.tree.TreeNode.lowest_common_ancestor", false]], "majority_rule() (in module skbio.tree)": [[954, "skbio.tree.majority_rule", false]], "make_identity_substitution_matrix() (in module skbio.alignment)": [[68, "skbio.alignment.make_identity_substitution_matrix", false]], "mantel() (in module skbio.stats.distance)": [[679, "skbio.stats.distance.mantel", false]], "margalef() (in module skbio.diversity.alpha)": [[87, "skbio.diversity.alpha.margalef", false]], "match_frequency() (skbio.sequence.dna method)": [[347, "skbio.sequence.DNA.match_frequency", false]], "match_frequency() (skbio.sequence.grammaredsequence method)": [[414, "skbio.sequence.GrammaredSequence.match_frequency", false]], "match_frequency() (skbio.sequence.protein method)": [[466, "skbio.sequence.Protein.match_frequency", false]], "match_frequency() (skbio.sequence.rna method)": [[522, "skbio.sequence.RNA.match_frequency", false]], "match_frequency() (skbio.sequence.sequence method)": [[567, "skbio.sequence.Sequence.match_frequency", false]], "matches() (skbio.sequence.dna method)": [[348, "skbio.sequence.DNA.matches", false]], "matches() (skbio.sequence.grammaredsequence method)": [[415, "skbio.sequence.GrammaredSequence.matches", false]], "matches() (skbio.sequence.protein method)": [[467, "skbio.sequence.Protein.matches", false]], "matches() (skbio.sequence.rna method)": [[523, "skbio.sequence.RNA.matches", false]], "matches() (skbio.sequence.sequence method)": [[568, "skbio.sequence.Sequence.matches", false]], "max() (skbio.table.table method)": [[847, "skbio.table.Table.max", false]], "mcintosh_d() (in module skbio.diversity.alpha)": [[88, "skbio.diversity.alpha.mcintosh_d", false]], "mcintosh_e() (in module skbio.diversity.alpha)": [[89, "skbio.diversity.alpha.mcintosh_e", false]], "mean_and_std() (in module skbio.stats.ordination)": [[795, "skbio.stats.ordination.mean_and_std", false]], "menhinick() (in module skbio.diversity.alpha)": [[90, "skbio.diversity.alpha.menhinick", false]], "merge() (skbio.metadata.intervalmetadata method)": [[243, "skbio.metadata.IntervalMetadata.merge", false]], "merge() (skbio.metadata.samplemetadata method)": [[298, "skbio.metadata.SampleMetadata.merge", false]], "merge() (skbio.table.table method)": [[848, "skbio.table.Table.merge", false]], "metadata() (skbio.table.table method)": [[849, "skbio.table.Table.metadata", false]], "metadata_to_dataframe() (skbio.table.table method)": [[850, "skbio.table.Table.metadata_to_dataframe", false]], "metadatacolumn (class in skbio.metadata)": [[248, "skbio.metadata.MetadataColumn", false]], "method (class in skbio.workflow)": [[993, "skbio.workflow.method", false]], "michaelis_menten_fit() (in module skbio.diversity.alpha)": [[91, "skbio.diversity.alpha.michaelis_menten_fit", false]], "min() (skbio.table.table method)": [[851, "skbio.table.Table.min", false]], "mismatch_frequency() (skbio.sequence.dna method)": [[349, "skbio.sequence.DNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.grammaredsequence method)": [[416, "skbio.sequence.GrammaredSequence.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.protein method)": [[468, "skbio.sequence.Protein.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.rna method)": [[524, "skbio.sequence.RNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.sequence method)": [[569, "skbio.sequence.Sequence.mismatch_frequency", false]], "mismatches() (skbio.sequence.dna method)": [[350, "skbio.sequence.DNA.mismatches", false]], "mismatches() (skbio.sequence.grammaredsequence method)": [[417, "skbio.sequence.GrammaredSequence.mismatches", false]], "mismatches() (skbio.sequence.protein method)": [[469, "skbio.sequence.Protein.mismatches", false]], "mismatches() (skbio.sequence.rna method)": [[525, "skbio.sequence.RNA.mismatches", false]], "mismatches() (skbio.sequence.sequence method)": [[570, "skbio.sequence.Sequence.mismatches", false]], "module": [[0, "module-skbio.alignment", false], [1, "module-skbio.diversity", false], [2, "module-skbio.embedding", false], [69, "module-skbio.diversity.alpha", false], [105, "module-skbio.diversity.beta", false], [139, "module-skbio.io.format.binary_dm", false], [140, "module-skbio.io.format.biom", false], [141, "module-skbio.io.format.blast6", false], [142, "module-skbio.io.format.blast7", false], [143, "module-skbio.io.format.clustal", false], [144, "module-skbio.io.format.embed", false], [145, "module-skbio.io.format.embl", false], [146, "module-skbio.io.format.fasta", false], [147, "module-skbio.io.format.fastq", false], [148, "module-skbio.io.format.genbank", false], [149, "module-skbio.io.format.gff3", false], [150, "module-skbio.io.format.lsmat", false], [151, "module-skbio.io.format.newick", false], [152, "module-skbio.io.format.ordination", false], [153, "module-skbio.io.format.phylip", false], [154, "module-skbio.io.format.qseq", false], [155, "module-skbio.io.format.sample_metadata", false], [156, "module-skbio.io.format.stockholm", false], [157, "module-skbio.io.format.taxdump", false], [158, "module-skbio.io.registry", false], [197, "module-skbio.io.util", false], [603, "module-skbio.sequence.distance", false], [606, "module-skbio.stats.composition", false], [627, "module-skbio.stats.distance", false], [684, "module-skbio.stats.evolve", false], [686, "module-skbio.stats.gradient", false], [776, "module-skbio.stats.ordination", false], [801, "module-skbio.stats.power", false], [1016, "module-skbio.io", false], [1017, "module-skbio.metadata", false], [1018, "module-skbio.sequence", false], [1019, "module-skbio.stats", false], [1020, "module-skbio.table", false], [1021, "module-skbio.tree", false], [1022, "module-skbio.util", false], [1023, "module-skbio.workflow", false]], "monkey_patch() (skbio.io.registry.ioregistry method)": [[189, "skbio.io.registry.IORegistry.monkey_patch", false]], "multi_replace() (in module skbio.stats.composition)": [[618, "skbio.stats.composition.multi_replace", false]], "multiplicative_replacement() (in module skbio.stats.composition)": [[619, "skbio.stats.composition.multiplicative_replacement", false]], "neighbors() (skbio.tree.treenode method)": [[924, "skbio.tree.TreeNode.neighbors", false]], "nj() (in module skbio.tree)": [[955, "skbio.tree.nj", false]], "non_tips() (skbio.tree.treenode method)": [[925, "skbio.tree.TreeNode.non_tips", false]], "nondegenerates() (skbio.sequence.dna method)": [[351, "skbio.sequence.DNA.nondegenerates", false]], "nondegenerates() (skbio.sequence.grammaredsequence method)": [[418, "skbio.sequence.GrammaredSequence.nondegenerates", false]], "nondegenerates() (skbio.sequence.protein method)": [[470, "skbio.sequence.Protein.nondegenerates", false]], "nondegenerates() (skbio.sequence.rna method)": [[526, "skbio.sequence.RNA.nondegenerates", false]], "nonzero() (skbio.table.table method)": [[852, "skbio.table.Table.nonzero", false]], "nonzero_counts() (skbio.table.table method)": [[853, "skbio.table.Table.nonzero_counts", false]], "norm() (skbio.table.table method)": [[854, "skbio.table.Table.norm", false]], "numericmetadatacolumn (class in skbio.metadata)": [[266, "skbio.metadata.NumericMetadataColumn", false]], "observed_features() (in module skbio.diversity.alpha)": [[92, "skbio.diversity.alpha.observed_features", false]], "observed_node_counts() (skbio.tree.treenode method)": [[926, "skbio.tree.TreeNode.observed_node_counts", false]], "observed_otus() (in module skbio.diversity.alpha)": [[93, "skbio.diversity.alpha.observed_otus", false]], "open() (in module skbio.io.util)": [[198, "skbio.io.util.open", false]], "open_file() (in module skbio.io.util)": [[199, "skbio.io.util.open_file", false]], "open_files() (in module skbio.io.util)": [[200, "skbio.io.util.open_files", false]], "ordinationresults (class in skbio.stats.ordination)": [[777, "skbio.stats.ordination.OrdinationResults", false]], "osd() (in module skbio.diversity.alpha)": [[94, "skbio.diversity.alpha.osd", false]], "pa() (skbio.table.table method)": [[855, "skbio.table.Table.pa", false]], "paired_subsamples() (in module skbio.stats.power)": [[803, "skbio.stats.power.paired_subsamples", false]], "pairwise_vlr() (in module skbio.stats.composition)": [[620, "skbio.stats.composition.pairwise_vlr", false]], "partial_beta_diversity() (in module skbio.diversity)": [[112, "skbio.diversity.partial_beta_diversity", false]], "partition() (skbio.table.table method)": [[856, "skbio.table.Table.partition", false]], "pcoa() (in module skbio.stats.ordination)": [[796, "skbio.stats.ordination.pcoa", false]], "pcoa_biplot() (in module skbio.stats.ordination)": [[797, "skbio.stats.ordination.pcoa_biplot", false]], "permanova() (in module skbio.stats.distance)": [[680, "skbio.stats.distance.permanova", false]], "permdisp() (in module skbio.stats.distance)": [[681, "skbio.stats.distance.permdisp", false]], "permute() (skbio.stats.distance.distancematrix method)": [[668, "skbio.stats.distance.DistanceMatrix.permute", false]], "perturb() (in module skbio.stats.composition)": [[621, "skbio.stats.composition.perturb", false]], "perturb_inv() (in module skbio.stats.composition)": [[622, "skbio.stats.composition.perturb_inv", false]], "phydiv() (in module skbio.diversity.alpha)": [[95, "skbio.diversity.alpha.phydiv", false]], "pielou_e() (in module skbio.diversity.alpha)": [[96, "skbio.diversity.alpha.pielou_e", false]], "plot() (skbio.sequence.substitutionmatrix method)": [[595, "skbio.sequence.SubstitutionMatrix.plot", false]], "plot() (skbio.stats.distance.dissimilaritymatrix method)": [[644, "skbio.stats.distance.DissimilarityMatrix.plot", false]], "plot() (skbio.stats.distance.distancematrix method)": [[669, "skbio.stats.distance.DistanceMatrix.plot", false]], "plot() (skbio.stats.ordination.ordinationresults method)": [[787, "skbio.stats.ordination.OrdinationResults.plot", false]], "pop() (skbio.tree.treenode method)": [[927, "skbio.tree.TreeNode.pop", false]], "postorder() (skbio.tree.treenode method)": [[928, "skbio.tree.TreeNode.postorder", false]], "power() (in module skbio.stats.composition)": [[623, "skbio.stats.composition.power", false]], "pre_and_postorder() (skbio.tree.treenode method)": [[929, "skbio.tree.TreeNode.pre_and_postorder", false]], "preorder() (skbio.tree.treenode method)": [[930, "skbio.tree.TreeNode.preorder", false]], "protein (class in skbio.sequence)": [[425, "skbio.sequence.Protein", false]], "proteinembedding (class in skbio.embedding)": [[113, "skbio.embedding.ProteinEmbedding", false]], "proteinvector (class in skbio.embedding)": [[126, "skbio.embedding.ProteinVector", false]], "prune() (skbio.tree.treenode method)": [[931, "skbio.tree.TreeNode.prune", false]], "pwmantel() (in module skbio.stats.distance)": [[682, "skbio.stats.distance.pwmantel", false]], "query() (skbio.metadata.intervalmetadata method)": [[244, "skbio.metadata.IntervalMetadata.query", false]], "randdm() (in module skbio.stats.distance)": [[683, "skbio.stats.distance.randdm", false]], "rankdata() (skbio.table.table method)": [[857, "skbio.table.Table.rankdata", false]], "rda() (in module skbio.stats.ordination)": [[798, "skbio.stats.ordination.rda", false]], "read() (in module skbio.io.registry)": [[194, "skbio.io.registry.read", false]], "read() (skbio.alignment.tabularmsa class method)": [[56, "skbio.alignment.TabularMSA.read", false]], "read() (skbio.embedding.proteinembedding class method)": [[124, "skbio.embedding.ProteinEmbedding.read", false]], "read() (skbio.embedding.proteinvector class method)": [[137, "skbio.embedding.ProteinVector.read", false]], "read() (skbio.io.registry.ioregistry method)": [[190, "skbio.io.registry.IORegistry.read", false]], "read() (skbio.metadata.intervalmetadata class method)": [[245, "skbio.metadata.IntervalMetadata.read", false]], "read() (skbio.metadata.samplemetadata class method)": [[299, "skbio.metadata.SampleMetadata.read", false]], "read() (skbio.sequence.dna class method)": [[352, "skbio.sequence.DNA.read", false]], "read() (skbio.sequence.grammaredsequence class method)": [[419, "skbio.sequence.GrammaredSequence.read", false]], "read() (skbio.sequence.protein class method)": [[471, "skbio.sequence.Protein.read", false]], "read() (skbio.sequence.rna class method)": [[527, "skbio.sequence.RNA.read", false]], "read() (skbio.sequence.sequence class method)": [[571, "skbio.sequence.Sequence.read", false]], "read() (skbio.sequence.substitutionmatrix class method)": [[596, "skbio.sequence.SubstitutionMatrix.read", false]], "read() (skbio.stats.distance.dissimilaritymatrix class method)": [[645, "skbio.stats.distance.DissimilarityMatrix.read", false]], "read() (skbio.stats.distance.distancematrix class method)": [[670, "skbio.stats.distance.DistanceMatrix.read", false]], "read() (skbio.stats.ordination.ordinationresults class method)": [[788, "skbio.stats.ordination.OrdinationResults.read", false]], "read() (skbio.table.table class method)": [[858, "skbio.table.Table.read", false]], "read() (skbio.tree.treenode class method)": [[932, "skbio.tree.TreeNode.read", false]], "reader() (skbio.io.registry.format method)": [[169, "skbio.io.registry.Format.reader", false]], "reassign_index() (skbio.alignment.tabularmsa method)": [[57, "skbio.alignment.TabularMSA.reassign_index", false]], "reduce() (skbio.table.table method)": [[859, "skbio.table.Table.reduce", false]], "redundant_form() (skbio.sequence.substitutionmatrix method)": [[597, "skbio.sequence.SubstitutionMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.dissimilaritymatrix method)": [[646, "skbio.stats.distance.DissimilarityMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.distancematrix method)": [[671, "skbio.stats.distance.DistanceMatrix.redundant_form", false]], "remove() (skbio.tree.treenode method)": [[933, "skbio.tree.TreeNode.remove", false]], "remove_deleted() (skbio.tree.treenode method)": [[934, "skbio.tree.TreeNode.remove_deleted", false]], "remove_empty() (skbio.table.table method)": [[860, "skbio.table.Table.remove_empty", false]], "replace() (skbio.sequence.dna method)": [[353, "skbio.sequence.DNA.replace", false]], "replace() (skbio.sequence.grammaredsequence method)": [[420, "skbio.sequence.GrammaredSequence.replace", false]], "replace() (skbio.sequence.protein method)": [[472, "skbio.sequence.Protein.replace", false]], "replace() (skbio.sequence.rna method)": [[528, "skbio.sequence.RNA.replace", false]], "replace() (skbio.sequence.sequence method)": [[572, "skbio.sequence.Sequence.replace", false]], "representationwarning": [[957, "skbio.util.RepresentationWarning", false]], "requires (class in skbio.workflow)": [[1004, "skbio.workflow.requires", false]], "reverse_complement() (skbio.sequence.dna method)": [[354, "skbio.sequence.DNA.reverse_complement", false]], "reverse_complement() (skbio.sequence.rna method)": [[529, "skbio.sequence.RNA.reverse_complement", false]], "reverse_transcribe() (skbio.sequence.rna method)": [[530, "skbio.sequence.RNA.reverse_transcribe", false]], "rna (class in skbio.sequence)": [[478, "skbio.sequence.RNA", false]], "robbins() (in module skbio.diversity.alpha)": [[97, "skbio.diversity.alpha.robbins", false]], "root() (skbio.tree.treenode method)": [[935, "skbio.tree.TreeNode.root", false]], "root_at() (skbio.tree.treenode method)": [[936, "skbio.tree.TreeNode.root_at", false]], "root_at_midpoint() (skbio.tree.treenode method)": [[937, "skbio.tree.TreeNode.root_at_midpoint", false]], "safe_md5() (in module skbio.util)": [[980, "skbio.util.safe_md5", false]], "samplemetadata (class in skbio.metadata)": [[284, "skbio.metadata.SampleMetadata", false]], "save() (skbio.metadata.categoricalmetadatacolumn method)": [[216, "skbio.metadata.CategoricalMetadataColumn.save", false]], "save() (skbio.metadata.metadatacolumn method)": [[263, "skbio.metadata.MetadataColumn.save", false]], "save() (skbio.metadata.numericmetadatacolumn method)": [[281, "skbio.metadata.NumericMetadataColumn.save", false]], "save() (skbio.metadata.samplemetadata method)": [[300, "skbio.metadata.SampleMetadata.save", false]], "sbp_basis() (in module skbio.stats.composition)": [[624, "skbio.stats.composition.sbp_basis", false]], "scale() (in module skbio.stats.ordination)": [[799, "skbio.stats.ordination.scale", false]], "sequence (class in skbio.sequence)": [[537, "skbio.sequence.Sequence", false]], "set_zero_based() (skbio.alignment.alignmentstructure method)": [[16, "skbio.alignment.AlignmentStructure.set_zero_based", false]], "setter() (skbio.util.classproperty method)": [[977, "skbio.util.classproperty.setter", false]], "shannon() (in module skbio.diversity.alpha)": [[98, "skbio.diversity.alpha.shannon", false]], "shear() (skbio.tree.treenode method)": [[938, "skbio.tree.TreeNode.shear", false]], "shuffle() (skbio.tree.treenode method)": [[939, "skbio.tree.TreeNode.shuffle", false]], "siblings() (skbio.tree.treenode method)": [[940, "skbio.tree.TreeNode.siblings", false]], "simpson() (in module skbio.diversity.alpha)": [[99, "skbio.diversity.alpha.simpson", false]], "simpson_e() (in module skbio.diversity.alpha)": [[100, "skbio.diversity.alpha.simpson_e", false]], "singles() (in module skbio.diversity.alpha)": [[101, "skbio.diversity.alpha.singles", false]], "skbio.alignment": [[0, "module-skbio.alignment", false]], "skbio.diversity": [[1, "module-skbio.diversity", false]], "skbio.diversity.alpha": [[69, "module-skbio.diversity.alpha", false]], "skbio.diversity.beta": [[105, "module-skbio.diversity.beta", false]], "skbio.embedding": [[2, "module-skbio.embedding", false]], "skbio.io": [[1016, "module-skbio.io", false]], "skbio.io.format.binary_dm": [[139, "module-skbio.io.format.binary_dm", false]], "skbio.io.format.biom": [[140, "module-skbio.io.format.biom", false]], "skbio.io.format.blast6": [[141, "module-skbio.io.format.blast6", false]], "skbio.io.format.blast7": [[142, "module-skbio.io.format.blast7", false]], "skbio.io.format.clustal": [[143, "module-skbio.io.format.clustal", false]], "skbio.io.format.embed": [[144, "module-skbio.io.format.embed", false]], "skbio.io.format.embl": [[145, "module-skbio.io.format.embl", false]], "skbio.io.format.fasta": [[146, "module-skbio.io.format.fasta", false]], "skbio.io.format.fastq": [[147, "module-skbio.io.format.fastq", false]], "skbio.io.format.genbank": [[148, "module-skbio.io.format.genbank", false]], "skbio.io.format.gff3": [[149, "module-skbio.io.format.gff3", false]], "skbio.io.format.lsmat": [[150, "module-skbio.io.format.lsmat", false]], "skbio.io.format.newick": [[151, "module-skbio.io.format.newick", false]], "skbio.io.format.ordination": [[152, "module-skbio.io.format.ordination", false]], "skbio.io.format.phylip": [[153, "module-skbio.io.format.phylip", false]], "skbio.io.format.qseq": [[154, "module-skbio.io.format.qseq", false]], "skbio.io.format.sample_metadata": [[155, "module-skbio.io.format.sample_metadata", false]], "skbio.io.format.stockholm": [[156, "module-skbio.io.format.stockholm", false]], "skbio.io.format.taxdump": [[157, "module-skbio.io.format.taxdump", false]], "skbio.io.registry": [[158, "module-skbio.io.registry", false]], "skbio.io.util": [[197, "module-skbio.io.util", false]], "skbio.metadata": [[1017, "module-skbio.metadata", false]], "skbio.sequence": [[1018, "module-skbio.sequence", false]], "skbio.sequence.distance": [[603, "module-skbio.sequence.distance", false]], "skbio.stats": [[1019, "module-skbio.stats", false]], "skbio.stats.composition": [[606, "module-skbio.stats.composition", false]], "skbio.stats.distance": [[627, "module-skbio.stats.distance", false]], "skbio.stats.evolve": [[684, "module-skbio.stats.evolve", false]], "skbio.stats.gradient": [[686, "module-skbio.stats.gradient", false]], "skbio.stats.ordination": [[776, "module-skbio.stats.ordination", false]], "skbio.stats.power": [[801, "module-skbio.stats.power", false]], "skbio.table": [[1020, "module-skbio.table", false]], "skbio.tree": [[1021, "module-skbio.tree", false]], "skbio.util": [[1022, "module-skbio.util", false]], "skbio.workflow": [[1023, "module-skbio.workflow", false]], "sniff() (in module skbio.io.registry)": [[195, "skbio.io.registry.sniff", false]], "sniff() (skbio.io.registry.ioregistry method)": [[191, "skbio.io.registry.IORegistry.sniff", false]], "sniffer() (skbio.io.registry.format method)": [[170, "skbio.io.registry.Format.sniffer", false]], "sobs() (in module skbio.diversity.alpha)": [[102, "skbio.diversity.alpha.sobs", false]], "sort() (skbio.alignment.tabularmsa method)": [[58, "skbio.alignment.TabularMSA.sort", false]], "sort() (skbio.metadata.intervalmetadata method)": [[246, "skbio.metadata.IntervalMetadata.sort", false]], "sort() (skbio.table.table method)": [[861, "skbio.table.Table.sort", false]], "sort_order() (skbio.table.table method)": [[862, "skbio.table.Table.sort_order", false]], "stops() (skbio.sequence.protein method)": [[473, "skbio.sequence.Protein.stops", false]], "stripedsmithwaterman (class in skbio.alignment)": [[17, "skbio.alignment.StripedSmithWaterman", false]], "strong() (in module skbio.diversity.alpha)": [[103, "skbio.diversity.alpha.strong", false]], "subsample() (skbio.table.table method)": [[863, "skbio.table.Table.subsample", false]], "subsample_counts() (in module skbio.stats)": [[806, "skbio.stats.subsample_counts", false]], "subsample_paired_power() (in module skbio.stats.power)": [[804, "skbio.stats.power.subsample_paired_power", false]], "subsample_power() (in module skbio.stats.power)": [[805, "skbio.stats.power.subsample_power", false]], "subset() (skbio.tree.treenode method)": [[941, "skbio.tree.TreeNode.subset", false]], "subsets() (skbio.tree.treenode method)": [[942, "skbio.tree.TreeNode.subsets", false]], "substitutionmatrix (class in skbio.sequence)": [[575, "skbio.sequence.SubstitutionMatrix", false]], "subtree() (skbio.tree.treenode method)": [[943, "skbio.tree.TreeNode.subtree", false]], "sum() (skbio.table.table method)": [[864, "skbio.table.Table.sum", false]], "svd_rank() (in module skbio.stats.ordination)": [[800, "skbio.stats.ordination.svd_rank", false]], "table (class in skbio.table)": [[807, "skbio.table.Table", false]], "tabularmsa (class in skbio.alignment)": [[29, "skbio.alignment.TabularMSA", false]], "tip_tip_distances() (skbio.tree.treenode method)": [[944, "skbio.tree.TreeNode.tip_tip_distances", false]], "tips() (skbio.tree.treenode method)": [[945, "skbio.tree.TreeNode.tips", false]], "to_anndata() (skbio.table.table method)": [[865, "skbio.table.Table.to_anndata", false]], "to_array() (skbio.tree.treenode method)": [[946, "skbio.tree.TreeNode.to_array", false]], "to_data_frame() (skbio.sequence.substitutionmatrix method)": [[598, "skbio.sequence.SubstitutionMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.dissimilaritymatrix method)": [[647, "skbio.stats.distance.DissimilarityMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.distancematrix method)": [[672, "skbio.stats.distance.DistanceMatrix.to_data_frame", false]], "to_dataframe() (skbio.metadata.categoricalmetadatacolumn method)": [[217, "skbio.metadata.CategoricalMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.metadatacolumn method)": [[264, "skbio.metadata.MetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.numericmetadatacolumn method)": [[282, "skbio.metadata.NumericMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.samplemetadata method)": [[301, "skbio.metadata.SampleMetadata.to_dataframe", false]], "to_dataframe() (skbio.table.table method)": [[866, "skbio.table.Table.to_dataframe", false]], "to_definites() (skbio.sequence.dna method)": [[355, "skbio.sequence.DNA.to_definites", false]], "to_definites() (skbio.sequence.grammaredsequence method)": [[421, "skbio.sequence.GrammaredSequence.to_definites", false]], "to_definites() (skbio.sequence.protein method)": [[474, "skbio.sequence.Protein.to_definites", false]], "to_definites() (skbio.sequence.rna method)": [[531, "skbio.sequence.RNA.to_definites", false]], "to_dict() (skbio.alignment.tabularmsa method)": [[59, "skbio.alignment.TabularMSA.to_dict", false]], "to_dict() (skbio.sequence.substitutionmatrix method)": [[599, "skbio.sequence.SubstitutionMatrix.to_dict", false]], "to_files() (skbio.stats.gradient.categoryresults method)": [[708, "skbio.stats.gradient.CategoryResults.to_files", false]], "to_files() (skbio.stats.gradient.gradientanovaresults method)": [[741, "skbio.stats.gradient.GradientANOVAResults.to_files", false]], "to_files() (skbio.stats.gradient.groupresults method)": [[752, "skbio.stats.gradient.GroupResults.to_files", false]], "to_hdf5() (skbio.table.table method)": [[867, "skbio.table.Table.to_hdf5", false]], "to_indices() (skbio.sequence.dna method)": [[356, "skbio.sequence.DNA.to_indices", false]], "to_indices() (skbio.sequence.grammaredsequence method)": [[422, "skbio.sequence.GrammaredSequence.to_indices", false]], "to_indices() (skbio.sequence.protein method)": [[475, "skbio.sequence.Protein.to_indices", false]], "to_indices() (skbio.sequence.rna method)": [[532, "skbio.sequence.RNA.to_indices", false]], "to_indices() (skbio.sequence.sequence method)": [[573, "skbio.sequence.Sequence.to_indices", false]], "to_json() (skbio.table.table method)": [[868, "skbio.table.Table.to_json", false]], "to_regex() (skbio.sequence.dna method)": [[357, "skbio.sequence.DNA.to_regex", false]], "to_regex() (skbio.sequence.grammaredsequence method)": [[423, "skbio.sequence.GrammaredSequence.to_regex", false]], "to_regex() (skbio.sequence.protein method)": [[476, "skbio.sequence.Protein.to_regex", false]], "to_regex() (skbio.sequence.rna method)": [[533, "skbio.sequence.RNA.to_regex", false]], "to_series() (skbio.metadata.categoricalmetadatacolumn method)": [[218, "skbio.metadata.CategoricalMetadataColumn.to_series", false]], "to_series() (skbio.metadata.metadatacolumn method)": [[265, "skbio.metadata.MetadataColumn.to_series", false]], "to_series() (skbio.metadata.numericmetadatacolumn method)": [[283, "skbio.metadata.NumericMetadataColumn.to_series", false]], "to_series() (skbio.stats.distance.distancematrix method)": [[673, "skbio.stats.distance.DistanceMatrix.to_series", false]], "to_taxonomy() (skbio.tree.treenode method)": [[947, "skbio.tree.TreeNode.to_taxonomy", false]], "to_tsv() (skbio.table.table method)": [[869, "skbio.table.Table.to_tsv", false]], "trajectorygradientanova (class in skbio.stats.gradient)": [[753, "skbio.stats.gradient.TrajectoryGradientANOVA", false]], "transcribe() (skbio.sequence.dna method)": [[358, "skbio.sequence.DNA.transcribe", false]], "transform() (skbio.table.table method)": [[870, "skbio.table.Table.transform", false]], "translate() (skbio.sequence.dna method)": [[359, "skbio.sequence.DNA.translate", false]], "translate() (skbio.sequence.geneticcode method)": [[372, "skbio.sequence.GeneticCode.translate", false]], "translate() (skbio.sequence.rna method)": [[534, "skbio.sequence.RNA.translate", false]], "translate_six_frames() (skbio.sequence.dna method)": [[360, "skbio.sequence.DNA.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.geneticcode method)": [[373, "skbio.sequence.GeneticCode.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.rna method)": [[535, "skbio.sequence.RNA.translate_six_frames", false]], "transpose() (skbio.sequence.substitutionmatrix method)": [[600, "skbio.sequence.SubstitutionMatrix.transpose", false]], "transpose() (skbio.stats.distance.dissimilaritymatrix method)": [[648, "skbio.stats.distance.DissimilarityMatrix.transpose", false]], "transpose() (skbio.stats.distance.distancematrix method)": [[674, "skbio.stats.distance.DistanceMatrix.transpose", false]], "transpose() (skbio.table.table method)": [[871, "skbio.table.Table.transpose", false]], "traverse() (skbio.tree.treenode method)": [[948, "skbio.tree.TreeNode.traverse", false]], "tree_basis() (in module skbio.stats.composition)": [[625, "skbio.stats.composition.tree_basis", false]], "treenode (class in skbio.tree)": [[875, "skbio.tree.TreeNode", false]], "unpack() (skbio.tree.treenode method)": [[949, "skbio.tree.TreeNode.unpack", false]], "unpack_by_func() (skbio.tree.treenode method)": [[950, "skbio.tree.TreeNode.unpack_by_func", false]], "unrooted_copy() (skbio.tree.treenode method)": [[951, "skbio.tree.TreeNode.unrooted_copy", false]], "unrooted_deepcopy() (skbio.tree.treenode method)": [[952, "skbio.tree.TreeNode.unrooted_deepcopy", false]], "unweighted_unifrac() (in module skbio.diversity.beta)": [[106, "skbio.diversity.beta.unweighted_unifrac", false]], "update_ids() (skbio.table.table method)": [[872, "skbio.table.Table.update_ids", false]], "vlr() (in module skbio.stats.composition)": [[626, "skbio.stats.composition.vlr", false]], "weighted_unifrac() (in module skbio.diversity.beta)": [[107, "skbio.diversity.beta.weighted_unifrac", false]], "windowdifferencegradientanova (class in skbio.stats.gradient)": [[764, "skbio.stats.gradient.WindowDifferenceGradientANOVA", false]], "within() (skbio.sequence.substitutionmatrix method)": [[601, "skbio.sequence.SubstitutionMatrix.within", false]], "within() (skbio.stats.distance.dissimilaritymatrix method)": [[649, "skbio.stats.distance.DissimilarityMatrix.within", false]], "within() (skbio.stats.distance.distancematrix method)": [[675, "skbio.stats.distance.DistanceMatrix.within", false]], "workflow (class in skbio.workflow)": [[981, "skbio.workflow.Workflow", false]], "write() (in module skbio.io.registry)": [[196, "skbio.io.registry.write", false]], "write() (skbio.alignment.tabularmsa method)": [[60, "skbio.alignment.TabularMSA.write", false]], "write() (skbio.embedding.proteinembedding method)": [[125, "skbio.embedding.ProteinEmbedding.write", false]], "write() (skbio.embedding.proteinvector method)": [[138, "skbio.embedding.ProteinVector.write", false]], "write() (skbio.io.registry.ioregistry method)": [[192, "skbio.io.registry.IORegistry.write", false]], "write() (skbio.metadata.intervalmetadata method)": [[247, "skbio.metadata.IntervalMetadata.write", false]], "write() (skbio.metadata.samplemetadata method)": [[302, "skbio.metadata.SampleMetadata.write", false]], "write() (skbio.sequence.dna method)": [[361, "skbio.sequence.DNA.write", false]], "write() (skbio.sequence.grammaredsequence method)": [[424, "skbio.sequence.GrammaredSequence.write", false]], "write() (skbio.sequence.protein method)": [[477, "skbio.sequence.Protein.write", false]], "write() (skbio.sequence.rna method)": [[536, "skbio.sequence.RNA.write", false]], "write() (skbio.sequence.sequence method)": [[574, "skbio.sequence.Sequence.write", false]], "write() (skbio.sequence.substitutionmatrix method)": [[602, "skbio.sequence.SubstitutionMatrix.write", false]], "write() (skbio.stats.distance.dissimilaritymatrix method)": [[650, "skbio.stats.distance.DissimilarityMatrix.write", false]], "write() (skbio.stats.distance.distancematrix method)": [[676, "skbio.stats.distance.DistanceMatrix.write", false]], "write() (skbio.stats.ordination.ordinationresults method)": [[789, "skbio.stats.ordination.OrdinationResults.write", false]], "write() (skbio.table.table method)": [[873, "skbio.table.Table.write", false]], "write() (skbio.tree.treenode method)": [[953, "skbio.tree.TreeNode.write", false]], "writer() (skbio.io.registry.format method)": [[171, "skbio.io.registry.Format.writer", false]]}, "objects": {"skbio": [[0, 0, 0, "-", "alignment"], [1, 0, 0, "-", "diversity"], [2, 0, 0, "-", "embedding"], [1016, 0, 0, "-", "io"], [1017, 0, 0, "-", "metadata"], [1018, 0, 0, "-", "sequence"], [1019, 0, 0, "-", "stats"], [1020, 0, 0, "-", "table"], [1021, 0, 0, "-", "tree"], [1022, 0, 0, "-", "util"], [1023, 0, 0, "-", "workflow"]], "skbio.alignment": [[3, 1, 1, "", "AlignmentStructure"], [17, 1, 1, "", "StripedSmithWaterman"], [29, 1, 1, "", "TabularMSA"], [61, 3, 1, "", "global_pairwise_align"], [62, 3, 1, "", "global_pairwise_align_nucleotide"], [63, 3, 1, "", "global_pairwise_align_protein"], [64, 3, 1, "", "local_pairwise_align"], [65, 3, 1, "", "local_pairwise_align_nucleotide"], [66, 3, 1, "", "local_pairwise_align_protein"], [67, 3, 1, "", "local_pairwise_align_ssw"], [68, 3, 1, "", "make_identity_substitution_matrix"]], "skbio.alignment.AlignmentStructure": [[4, 2, 1, "", "__eq__"], [5, 2, 1, "", "__ge__"], [6, 2, 1, "", "__getitem__"], [7, 2, 1, "", "__getstate__"], [8, 2, 1, "", "__gt__"], [9, 2, 1, "", "__hash__"], [10, 2, 1, "", "__le__"], [11, 2, 1, "", "__lt__"], [12, 2, 1, "", "__ne__"], [13, 2, 1, "", "__setstate__"], [14, 2, 1, "", "__str__"], [15, 2, 1, "", "is_zero_based"], [16, 2, 1, "", "set_zero_based"]], "skbio.alignment.StripedSmithWaterman": [[18, 2, 1, "", "__call__"], [19, 2, 1, "", "__eq__"], [20, 2, 1, "", "__ge__"], [21, 2, 1, "", "__getstate__"], [22, 2, 1, "", "__gt__"], [23, 2, 1, "", "__hash__"], [24, 2, 1, "", "__le__"], [25, 2, 1, "", "__lt__"], [26, 2, 1, "", "__ne__"], [27, 2, 1, "", "__setstate__"], [28, 2, 1, "", "__str__"]], "skbio.alignment.TabularMSA": [[30, 2, 1, "", "__bool__"], [31, 2, 1, "", "__contains__"], [32, 2, 1, "", "__copy__"], [33, 2, 1, "", "__deepcopy__"], [34, 2, 1, "", "__eq__"], [35, 2, 1, "", "__ge__"], [36, 2, 1, "", "__getitem__"], [37, 2, 1, "", "__getstate__"], [38, 2, 1, "", "__gt__"], [39, 2, 1, "", "__iter__"], [40, 2, 1, "", "__le__"], [41, 2, 1, "", "__len__"], [42, 2, 1, "", "__lt__"], [43, 2, 1, "", "__ne__"], [44, 2, 1, "", "__reversed__"], [45, 2, 1, "", "__str__"], [46, 2, 1, "", "append"], [47, 2, 1, "", "consensus"], [48, 2, 1, "", "conservation"], [49, 2, 1, "", "extend"], [50, 2, 1, "", "from_dict"], [51, 2, 1, "", "gap_frequencies"], [52, 2, 1, "", "has_metadata"], [53, 2, 1, "", "has_positional_metadata"], [54, 2, 1, "", "iter_positions"], [55, 2, 1, "", "join"], [56, 2, 1, "", "read"], [57, 2, 1, "", "reassign_index"], [58, 2, 1, "", "sort"], [59, 2, 1, "", "to_dict"], [60, 2, 1, "", "write"]], "skbio.diversity": [[69, 0, 0, "-", "alpha"], [104, 3, 1, "", "alpha_diversity"], [105, 0, 0, "-", "beta"], [108, 3, 1, "", "beta_diversity"], [109, 3, 1, "", "block_beta_diversity"], [110, 3, 1, "", "get_alpha_diversity_metrics"], [111, 3, 1, "", "get_beta_diversity_metrics"], [112, 3, 1, "", "partial_beta_diversity"]], "skbio.diversity.alpha": [[70, 3, 1, "", "ace"], [71, 3, 1, "", "berger_parker_d"], [72, 3, 1, "", "brillouin_d"], [73, 3, 1, "", "chao1"], [74, 3, 1, "", "chao1_ci"], [75, 3, 1, "", "dominance"], [76, 3, 1, "", "doubles"], [77, 3, 1, "", "enspie"], [78, 3, 1, "", "esty_ci"], [79, 3, 1, "", "faith_pd"], [80, 3, 1, "", "fisher_alpha"], [81, 3, 1, "", "gini_index"], [82, 3, 1, "", "goods_coverage"], [83, 3, 1, "", "heip_e"], [84, 3, 1, "", "kempton_taylor_q"], [85, 3, 1, "", "lladser_ci"], [86, 3, 1, "", "lladser_pe"], [87, 3, 1, "", "margalef"], [88, 3, 1, "", "mcintosh_d"], [89, 3, 1, "", "mcintosh_e"], [90, 3, 1, "", "menhinick"], [91, 3, 1, "", "michaelis_menten_fit"], [92, 3, 1, "", "observed_features"], [93, 3, 1, "", "observed_otus"], [94, 3, 1, "", "osd"], [95, 3, 1, "", "phydiv"], [96, 3, 1, "", "pielou_e"], [97, 3, 1, "", "robbins"], [98, 3, 1, "", "shannon"], [99, 3, 1, "", "simpson"], [100, 3, 1, "", "simpson_e"], [101, 3, 1, "", "singles"], [102, 3, 1, "", "sobs"], [103, 3, 1, "", "strong"]], "skbio.diversity.beta": [[106, 3, 1, "", "unweighted_unifrac"], [107, 3, 1, "", "weighted_unifrac"]], "skbio.embedding": [[113, 1, 1, "", "ProteinEmbedding"], [126, 1, 1, "", "ProteinVector"]], "skbio.embedding.ProteinEmbedding": [[114, 2, 1, "", "__eq__"], [115, 2, 1, "", "__ge__"], [116, 2, 1, "", "__getstate__"], [117, 2, 1, "", "__gt__"], [118, 2, 1, "", "__hash__"], [119, 2, 1, "", "__le__"], [120, 2, 1, "", "__lt__"], [121, 2, 1, "", "__ne__"], [122, 2, 1, "", "__str__"], [123, 2, 1, "", "bytes"], [124, 2, 1, "", "read"], [125, 2, 1, "", "write"]], "skbio.embedding.ProteinVector": [[127, 2, 1, "", "__eq__"], [128, 2, 1, "", "__ge__"], [129, 2, 1, "", "__getstate__"], [130, 2, 1, "", "__gt__"], [131, 2, 1, "", "__hash__"], [132, 2, 1, "", "__le__"], [133, 2, 1, "", "__lt__"], [134, 2, 1, "", "__ne__"], [135, 2, 1, "", "__str__"], [136, 2, 1, "", "bytes"], [137, 2, 1, "", "read"], [138, 2, 1, "", "write"]], "skbio.io": [[158, 0, 0, "-", "registry"], [197, 0, 0, "-", "util"]], "skbio.io.format": [[139, 0, 0, "-", "binary_dm"], [140, 0, 0, "-", "biom"], [141, 0, 0, "-", "blast6"], [142, 0, 0, "-", "blast7"], [143, 0, 0, "-", "clustal"], [144, 0, 0, "-", "embed"], [145, 0, 0, "-", "embl"], [146, 0, 0, "-", "fasta"], [147, 0, 0, "-", "fastq"], [148, 0, 0, "-", "genbank"], [149, 0, 0, "-", "gff3"], [150, 0, 0, "-", "lsmat"], [151, 0, 0, "-", "newick"], [152, 0, 0, "-", "ordination"], [153, 0, 0, "-", "phylip"], [154, 0, 0, "-", "qseq"], [155, 0, 0, "-", "sample_metadata"], [156, 0, 0, "-", "stockholm"], [157, 0, 0, "-", "taxdump"]], "skbio.io.registry": [[159, 1, 1, "", "Format"], [172, 1, 1, "", "IORegistry"], [193, 3, 1, "", "create_format"], [194, 3, 1, "", "read"], [195, 3, 1, "", "sniff"], [196, 3, 1, "", "write"]], "skbio.io.registry.Format": [[160, 2, 1, "", "__eq__"], [161, 2, 1, "", "__ge__"], [162, 2, 1, "", "__getstate__"], [163, 2, 1, "", "__gt__"], [164, 2, 1, "", "__hash__"], [165, 2, 1, "", "__le__"], [166, 2, 1, "", "__lt__"], [167, 2, 1, "", "__ne__"], [168, 2, 1, "", "__str__"], [169, 2, 1, "", "reader"], [170, 2, 1, "", "sniffer"], [171, 2, 1, "", "writer"]], "skbio.io.registry.IORegistry": [[173, 2, 1, "", "__eq__"], [174, 2, 1, "", "__ge__"], [175, 2, 1, "", "__getstate__"], [176, 2, 1, "", "__gt__"], [177, 2, 1, "", "__hash__"], [178, 2, 1, "", "__le__"], [179, 2, 1, "", "__lt__"], [180, 2, 1, "", "__ne__"], [181, 2, 1, "", "__str__"], [182, 2, 1, "", "add_format"], [183, 2, 1, "", "create_format"], [184, 2, 1, "", "get_reader"], [185, 2, 1, "", "get_sniffer"], [186, 2, 1, "", "get_writer"], [187, 2, 1, "", "list_read_formats"], [188, 2, 1, "", "list_write_formats"], [189, 2, 1, "", "monkey_patch"], [190, 2, 1, "", "read"], [191, 2, 1, "", "sniff"], [192, 2, 1, "", "write"]], "skbio.io.util": [[198, 3, 1, "", "open"], [199, 3, 1, "", "open_file"], [200, 3, 1, "", "open_files"]], "skbio.metadata": [[201, 1, 1, "", "CategoricalMetadataColumn"], [219, 1, 1, "", "Interval"], [229, 1, 1, "", "IntervalMetadata"], [248, 1, 1, "", "MetadataColumn"], [266, 1, 1, "", "NumericMetadataColumn"], [284, 1, 1, "", "SampleMetadata"]], "skbio.metadata.CategoricalMetadataColumn": [[202, 2, 1, "", "__eq__"], [203, 2, 1, "", "__ge__"], [204, 2, 1, "", "__getstate__"], [205, 2, 1, "", "__gt__"], [206, 2, 1, "", "__le__"], [207, 2, 1, "", "__lt__"], [208, 2, 1, "", "__ne__"], [209, 2, 1, "", "__str__"], [210, 2, 1, "", "drop_missing_values"], [211, 2, 1, "", "filter_ids"], [212, 2, 1, "", "get_ids"], [213, 2, 1, "", "get_missing"], [214, 2, 1, "", "get_value"], [215, 2, 1, "", "has_missing_values"], [216, 2, 1, "", "save"], [217, 2, 1, "", "to_dataframe"], [218, 2, 1, "", "to_series"]], "skbio.metadata.Interval": [[220, 2, 1, "", "__eq__"], [221, 2, 1, "", "__ge__"], [222, 2, 1, "", "__getstate__"], [223, 2, 1, "", "__gt__"], [224, 2, 1, "", "__le__"], [225, 2, 1, "", "__lt__"], [226, 2, 1, "", "__ne__"], [227, 2, 1, "", "__str__"], [228, 2, 1, "", "drop"]], "skbio.metadata.IntervalMetadata": [[230, 2, 1, "", "__copy__"], [231, 2, 1, "", "__deepcopy__"], [232, 2, 1, "", "__eq__"], [233, 2, 1, "", "__ge__"], [234, 2, 1, "", "__getstate__"], [235, 2, 1, "", "__gt__"], [236, 2, 1, "", "__le__"], [237, 2, 1, "", "__lt__"], [238, 2, 1, "", "__ne__"], [239, 2, 1, "", "__str__"], [240, 2, 1, "", "add"], [241, 2, 1, "", "concat"], [242, 2, 1, "", "drop"], [243, 2, 1, "", "merge"], [244, 2, 1, "", "query"], [245, 2, 1, "", "read"], [246, 2, 1, "", "sort"], [247, 2, 1, "", "write"]], "skbio.metadata.MetadataColumn": [[249, 2, 1, "", "__eq__"], [250, 2, 1, "", "__ge__"], [251, 2, 1, "", "__getstate__"], [252, 2, 1, "", "__gt__"], [253, 2, 1, "", "__le__"], [254, 2, 1, "", "__lt__"], [255, 2, 1, "", "__ne__"], [256, 2, 1, "", "__str__"], [257, 2, 1, "", "drop_missing_values"], [258, 2, 1, "", "filter_ids"], [259, 2, 1, "", "get_ids"], [260, 2, 1, "", "get_missing"], [261, 2, 1, "", "get_value"], [262, 2, 1, "", "has_missing_values"], [263, 2, 1, "", "save"], [264, 2, 1, "", "to_dataframe"], [265, 2, 1, "", "to_series"]], "skbio.metadata.NumericMetadataColumn": [[267, 2, 1, "", "__eq__"], [268, 2, 1, "", "__ge__"], [269, 2, 1, "", "__getstate__"], [270, 2, 1, "", "__gt__"], [271, 2, 1, "", "__le__"], [272, 2, 1, "", "__lt__"], [273, 2, 1, "", "__ne__"], [274, 2, 1, "", "__str__"], [275, 2, 1, "", "drop_missing_values"], [276, 2, 1, "", "filter_ids"], [277, 2, 1, "", "get_ids"], [278, 2, 1, "", "get_missing"], [279, 2, 1, "", "get_value"], [280, 2, 1, "", "has_missing_values"], [281, 2, 1, "", "save"], [282, 2, 1, "", "to_dataframe"], [283, 2, 1, "", "to_series"]], "skbio.metadata.SampleMetadata": [[285, 2, 1, "", "__eq__"], [286, 2, 1, "", "__ge__"], [287, 2, 1, "", "__getstate__"], [288, 2, 1, "", "__gt__"], [289, 2, 1, "", "__le__"], [290, 2, 1, "", "__lt__"], [291, 2, 1, "", "__ne__"], [292, 2, 1, "", "__str__"], [293, 2, 1, "", "filter_columns"], [294, 2, 1, "", "filter_ids"], [295, 2, 1, "", "get_column"], [296, 2, 1, "", "get_ids"], [297, 2, 1, "", "load"], [298, 2, 1, "", "merge"], [299, 2, 1, "", "read"], [300, 2, 1, "", "save"], [301, 2, 1, "", "to_dataframe"], [302, 2, 1, "", "write"]], "skbio.sequence": [[303, 1, 1, "", "DNA"], [362, 1, 1, "", "GeneticCode"], [374, 1, 1, "", "GrammaredSequence"], [425, 1, 1, "", "Protein"], [478, 1, 1, "", "RNA"], [537, 1, 1, "", "Sequence"], [575, 1, 1, "", "SubstitutionMatrix"], [603, 0, 0, "-", "distance"]], "skbio.sequence.DNA": [[304, 2, 1, "", "__bool__"], [305, 2, 1, "", "__contains__"], [306, 2, 1, "", "__copy__"], [307, 2, 1, "", "__deepcopy__"], [308, 2, 1, "", "__eq__"], [309, 2, 1, "", "__ge__"], [310, 2, 1, "", "__getitem__"], [311, 2, 1, "", "__getstate__"], [312, 2, 1, "", "__gt__"], [313, 2, 1, "", "__iter__"], [314, 2, 1, "", "__le__"], [315, 2, 1, "", "__len__"], [316, 2, 1, "", "__lt__"], [317, 2, 1, "", "__ne__"], [318, 2, 1, "", "__reversed__"], [319, 2, 1, "", "__str__"], [320, 2, 1, "", "complement"], [321, 2, 1, "", "concat"], [322, 2, 1, "", "count"], [323, 2, 1, "", "definites"], [324, 2, 1, "", "degap"], [325, 2, 1, "", "degenerates"], [326, 2, 1, "", "distance"], [327, 2, 1, "", "expand_degenerates"], [328, 2, 1, "", "find_motifs"], [329, 2, 1, "", "find_with_regex"], [330, 2, 1, "", "frequencies"], [331, 2, 1, "", "gaps"], [332, 2, 1, "", "gc_content"], [333, 2, 1, "", "gc_frequency"], [334, 2, 1, "", "has_definites"], [335, 2, 1, "", "has_degenerates"], [336, 2, 1, "", "has_gaps"], [337, 2, 1, "", "has_interval_metadata"], [338, 2, 1, "", "has_metadata"], [339, 2, 1, "", "has_nondegenerates"], [340, 2, 1, "", "has_positional_metadata"], [341, 2, 1, "", "index"], [342, 2, 1, "", "is_reverse_complement"], [343, 2, 1, "", "iter_contiguous"], [344, 2, 1, "", "iter_kmers"], [345, 2, 1, "", "kmer_frequencies"], [346, 2, 1, "", "lowercase"], [347, 2, 1, "", "match_frequency"], [348, 2, 1, "", "matches"], [349, 2, 1, "", "mismatch_frequency"], [350, 2, 1, "", "mismatches"], [351, 2, 1, "", "nondegenerates"], [352, 2, 1, "", "read"], [353, 2, 1, "", "replace"], [354, 2, 1, "", "reverse_complement"], [355, 2, 1, "", "to_definites"], [356, 2, 1, "", "to_indices"], [357, 2, 1, "", "to_regex"], [358, 2, 1, "", "transcribe"], [359, 2, 1, "", "translate"], [360, 2, 1, "", "translate_six_frames"], [361, 2, 1, "", "write"]], "skbio.sequence.GeneticCode": [[363, 2, 1, "", "__eq__"], [364, 2, 1, "", "__ge__"], [365, 2, 1, "", "__getstate__"], [366, 2, 1, "", "__gt__"], [367, 2, 1, "", "__le__"], [368, 2, 1, "", "__lt__"], [369, 2, 1, "", "__ne__"], [370, 2, 1, "", "__str__"], [371, 2, 1, "", "from_ncbi"], [372, 2, 1, "", "translate"], [373, 2, 1, "", "translate_six_frames"]], "skbio.sequence.GrammaredSequence": [[375, 2, 1, "", "__bool__"], [376, 2, 1, "", "__contains__"], [377, 2, 1, "", "__copy__"], [378, 2, 1, "", "__deepcopy__"], [379, 2, 1, "", "__eq__"], [380, 2, 1, "", "__ge__"], [381, 2, 1, "", "__getitem__"], [382, 2, 1, "", "__getstate__"], [383, 2, 1, "", "__gt__"], [384, 2, 1, "", "__iter__"], [385, 2, 1, "", "__le__"], [386, 2, 1, "", "__len__"], [387, 2, 1, "", "__lt__"], [388, 2, 1, "", "__ne__"], [389, 2, 1, "", "__reversed__"], [390, 2, 1, "", "__str__"], [391, 2, 1, "", "concat"], [392, 2, 1, "", "count"], [393, 2, 1, "", "definites"], [394, 2, 1, "", "degap"], [395, 2, 1, "", "degenerates"], [396, 2, 1, "", "distance"], [397, 2, 1, "", "expand_degenerates"], [398, 2, 1, "", "find_motifs"], [399, 2, 1, "", "find_with_regex"], [400, 2, 1, "", "frequencies"], [401, 2, 1, "", "gaps"], [402, 2, 1, "", "has_definites"], [403, 2, 1, "", "has_degenerates"], [404, 2, 1, "", "has_gaps"], [405, 2, 1, "", "has_interval_metadata"], [406, 2, 1, "", "has_metadata"], [407, 2, 1, "", "has_nondegenerates"], [408, 2, 1, "", "has_positional_metadata"], [409, 2, 1, "", "index"], [410, 2, 1, "", "iter_contiguous"], [411, 2, 1, "", "iter_kmers"], [412, 2, 1, "", "kmer_frequencies"], [413, 2, 1, "", "lowercase"], [414, 2, 1, "", "match_frequency"], [415, 2, 1, "", "matches"], [416, 2, 1, "", "mismatch_frequency"], [417, 2, 1, "", "mismatches"], [418, 2, 1, "", "nondegenerates"], [419, 2, 1, "", "read"], [420, 2, 1, "", "replace"], [421, 2, 1, "", "to_definites"], [422, 2, 1, "", "to_indices"], [423, 2, 1, "", "to_regex"], [424, 2, 1, "", "write"]], "skbio.sequence.Protein": [[426, 2, 1, "", "__bool__"], [427, 2, 1, "", "__contains__"], [428, 2, 1, "", "__copy__"], [429, 2, 1, "", "__deepcopy__"], [430, 2, 1, "", "__eq__"], [431, 2, 1, "", "__ge__"], [432, 2, 1, "", "__getitem__"], [433, 2, 1, "", "__getstate__"], [434, 2, 1, "", "__gt__"], [435, 2, 1, "", "__iter__"], [436, 2, 1, "", "__le__"], [437, 2, 1, "", "__len__"], [438, 2, 1, "", "__lt__"], [439, 2, 1, "", "__ne__"], [440, 2, 1, "", "__reversed__"], [441, 2, 1, "", "__str__"], [442, 2, 1, "", "concat"], [443, 2, 1, "", "count"], [444, 2, 1, "", "definites"], [445, 2, 1, "", "degap"], [446, 2, 1, "", "degenerates"], [447, 2, 1, "", "distance"], [448, 2, 1, "", "expand_degenerates"], [449, 2, 1, "", "find_motifs"], [450, 2, 1, "", "find_with_regex"], [451, 2, 1, "", "frequencies"], [452, 2, 1, "", "gaps"], [453, 2, 1, "", "has_definites"], [454, 2, 1, "", "has_degenerates"], [455, 2, 1, "", "has_gaps"], [456, 2, 1, "", "has_interval_metadata"], [457, 2, 1, "", "has_metadata"], [458, 2, 1, "", "has_nondegenerates"], [459, 2, 1, "", "has_positional_metadata"], [460, 2, 1, "", "has_stops"], [461, 2, 1, "", "index"], [462, 2, 1, "", "iter_contiguous"], [463, 2, 1, "", "iter_kmers"], [464, 2, 1, "", "kmer_frequencies"], [465, 2, 1, "", "lowercase"], [466, 2, 1, "", "match_frequency"], [467, 2, 1, "", "matches"], [468, 2, 1, "", "mismatch_frequency"], [469, 2, 1, "", "mismatches"], [470, 2, 1, "", "nondegenerates"], [471, 2, 1, "", "read"], [472, 2, 1, "", "replace"], [473, 2, 1, "", "stops"], [474, 2, 1, "", "to_definites"], [475, 2, 1, "", "to_indices"], [476, 2, 1, "", "to_regex"], [477, 2, 1, "", "write"]], "skbio.sequence.RNA": [[479, 2, 1, "", "__bool__"], [480, 2, 1, "", "__contains__"], [481, 2, 1, "", "__copy__"], [482, 2, 1, "", "__deepcopy__"], [483, 2, 1, "", "__eq__"], [484, 2, 1, "", "__ge__"], [485, 2, 1, "", "__getitem__"], [486, 2, 1, "", "__getstate__"], [487, 2, 1, "", "__gt__"], [488, 2, 1, "", "__iter__"], [489, 2, 1, "", "__le__"], [490, 2, 1, "", "__len__"], [491, 2, 1, "", "__lt__"], [492, 2, 1, "", "__ne__"], [493, 2, 1, "", "__reversed__"], [494, 2, 1, "", "__str__"], [495, 2, 1, "", "complement"], [496, 2, 1, "", "concat"], [497, 2, 1, "", "count"], [498, 2, 1, "", "definites"], [499, 2, 1, "", "degap"], [500, 2, 1, "", "degenerates"], [501, 2, 1, "", "distance"], [502, 2, 1, "", "expand_degenerates"], [503, 2, 1, "", "find_motifs"], [504, 2, 1, "", "find_with_regex"], [505, 2, 1, "", "frequencies"], [506, 2, 1, "", "gaps"], [507, 2, 1, "", "gc_content"], [508, 2, 1, "", "gc_frequency"], [509, 2, 1, "", "has_definites"], [510, 2, 1, "", "has_degenerates"], [511, 2, 1, "", "has_gaps"], [512, 2, 1, "", "has_interval_metadata"], [513, 2, 1, "", "has_metadata"], [514, 2, 1, "", "has_nondegenerates"], [515, 2, 1, "", "has_positional_metadata"], [516, 2, 1, "", "index"], [517, 2, 1, "", "is_reverse_complement"], [518, 2, 1, "", "iter_contiguous"], [519, 2, 1, "", "iter_kmers"], [520, 2, 1, "", "kmer_frequencies"], [521, 2, 1, "", "lowercase"], [522, 2, 1, "", "match_frequency"], [523, 2, 1, "", "matches"], [524, 2, 1, "", "mismatch_frequency"], [525, 2, 1, "", "mismatches"], [526, 2, 1, "", "nondegenerates"], [527, 2, 1, "", "read"], [528, 2, 1, "", "replace"], [529, 2, 1, "", "reverse_complement"], [530, 2, 1, "", "reverse_transcribe"], [531, 2, 1, "", "to_definites"], [532, 2, 1, "", "to_indices"], [533, 2, 1, "", "to_regex"], [534, 2, 1, "", "translate"], [535, 2, 1, "", "translate_six_frames"], [536, 2, 1, "", "write"]], "skbio.sequence.Sequence": [[538, 2, 1, "", "__bool__"], [539, 2, 1, "", "__contains__"], [540, 2, 1, "", "__copy__"], [541, 2, 1, "", "__deepcopy__"], [542, 2, 1, "", "__eq__"], [543, 2, 1, "", "__ge__"], [544, 2, 1, "", "__getitem__"], [545, 2, 1, "", "__getstate__"], [546, 2, 1, "", "__gt__"], [547, 2, 1, "", "__iter__"], [548, 2, 1, "", "__le__"], [549, 2, 1, "", "__len__"], [550, 2, 1, "", "__lt__"], [551, 2, 1, "", "__ne__"], [552, 2, 1, "", "__reversed__"], [553, 2, 1, "", "__str__"], [554, 2, 1, "", "concat"], [555, 2, 1, "", "count"], [556, 2, 1, "", "distance"], [557, 2, 1, "", "find_with_regex"], [558, 2, 1, "", "frequencies"], [559, 2, 1, "", "has_interval_metadata"], [560, 2, 1, "", "has_metadata"], [561, 2, 1, "", "has_positional_metadata"], [562, 2, 1, "", "index"], [563, 2, 1, "", "iter_contiguous"], [564, 2, 1, "", "iter_kmers"], [565, 2, 1, "", "kmer_frequencies"], [566, 2, 1, "", "lowercase"], [567, 2, 1, "", "match_frequency"], [568, 2, 1, "", "matches"], [569, 2, 1, "", "mismatch_frequency"], [570, 2, 1, "", "mismatches"], [571, 2, 1, "", "read"], [572, 2, 1, "", "replace"], [573, 2, 1, "", "to_indices"], [574, 2, 1, "", "write"]], "skbio.sequence.SubstitutionMatrix": [[576, 2, 1, "", "__contains__"], [577, 2, 1, "", "__eq__"], [578, 2, 1, "", "__ge__"], [579, 2, 1, "", "__getitem__"], [580, 2, 1, "", "__getstate__"], [581, 2, 1, "", "__gt__"], [582, 2, 1, "", "__le__"], [583, 2, 1, "", "__lt__"], [584, 2, 1, "", "__ne__"], [585, 2, 1, "", "__str__"], [586, 2, 1, "", "between"], [587, 2, 1, "", "by_name"], [588, 2, 1, "", "copy"], [589, 2, 1, "", "filter"], [590, 2, 1, "", "from_dict"], [591, 2, 1, "", "from_iterable"], [592, 2, 1, "", "get_names"], [593, 2, 1, "", "identity"], [594, 2, 1, "", "index"], [595, 2, 1, "", "plot"], [596, 2, 1, "", "read"], [597, 2, 1, "", "redundant_form"], [598, 2, 1, "", "to_data_frame"], [599, 2, 1, "", "to_dict"], [600, 2, 1, "", "transpose"], [601, 2, 1, "", "within"], [602, 2, 1, "", "write"]], "skbio.sequence.distance": [[604, 3, 1, "", "hamming"], [605, 3, 1, "", "kmer_distance"]], "skbio.stats": [[606, 0, 0, "-", "composition"], [627, 0, 0, "-", "distance"], [684, 0, 0, "-", "evolve"], [686, 0, 0, "-", "gradient"], [775, 3, 1, "", "isubsample"], [776, 0, 0, "-", "ordination"], [801, 0, 0, "-", "power"], [806, 3, 1, "", "subsample_counts"]], "skbio.stats.composition": [[607, 3, 1, "", "alr"], [608, 3, 1, "", "alr_inv"], [609, 3, 1, "", "ancom"], [610, 3, 1, "", "centralize"], [611, 3, 1, "", "closure"], [612, 3, 1, "", "clr"], [613, 3, 1, "", "clr_inv"], [614, 3, 1, "", "dirmult_ttest"], [615, 3, 1, "", "ilr"], [616, 3, 1, "", "ilr_inv"], [617, 3, 1, "", "inner"], [618, 3, 1, "", "multi_replace"], [619, 3, 1, "", "multiplicative_replacement"], [620, 3, 1, "", "pairwise_vlr"], [621, 3, 1, "", "perturb"], [622, 3, 1, "", "perturb_inv"], [623, 3, 1, "", "power"], [624, 3, 1, "", "sbp_basis"], [625, 3, 1, "", "tree_basis"], [626, 3, 1, "", "vlr"]], "skbio.stats.distance": [[628, 1, 1, "", "DissimilarityMatrix"], [651, 1, 1, "", "DistanceMatrix"], [677, 3, 1, "", "anosim"], [678, 3, 1, "", "bioenv"], [679, 3, 1, "", "mantel"], [680, 3, 1, "", "permanova"], [681, 3, 1, "", "permdisp"], [682, 3, 1, "", "pwmantel"], [683, 3, 1, "", "randdm"]], "skbio.stats.distance.DissimilarityMatrix": [[629, 2, 1, "", "__contains__"], [630, 2, 1, "", "__eq__"], [631, 2, 1, "", "__ge__"], [632, 2, 1, "", "__getitem__"], [633, 2, 1, "", "__getstate__"], [634, 2, 1, "", "__gt__"], [635, 2, 1, "", "__le__"], [636, 2, 1, "", "__lt__"], [637, 2, 1, "", "__ne__"], [638, 2, 1, "", "__str__"], [639, 2, 1, "", "between"], [640, 2, 1, "", "copy"], [641, 2, 1, "", "filter"], [642, 2, 1, "", "from_iterable"], [643, 2, 1, "", "index"], [644, 2, 1, "", "plot"], [645, 2, 1, "", "read"], [646, 2, 1, "", "redundant_form"], [647, 2, 1, "", "to_data_frame"], [648, 2, 1, "", "transpose"], [649, 2, 1, "", "within"], [650, 2, 1, "", "write"]], "skbio.stats.distance.DistanceMatrix": [[652, 2, 1, "", "__contains__"], [653, 2, 1, "", "__eq__"], [654, 2, 1, "", "__ge__"], [655, 2, 1, "", "__getitem__"], [656, 2, 1, "", "__getstate__"], [657, 2, 1, "", "__gt__"], [658, 2, 1, "", "__le__"], [659, 2, 1, "", "__lt__"], [660, 2, 1, "", "__ne__"], [661, 2, 1, "", "__str__"], [662, 2, 1, "", "between"], [663, 2, 1, "", "condensed_form"], [664, 2, 1, "", "copy"], [665, 2, 1, "", "filter"], [666, 2, 1, "", "from_iterable"], [667, 2, 1, "", "index"], [668, 2, 1, "", "permute"], [669, 2, 1, "", "plot"], [670, 2, 1, "", "read"], [671, 2, 1, "", "redundant_form"], [672, 2, 1, "", "to_data_frame"], [673, 2, 1, "", "to_series"], [674, 2, 1, "", "transpose"], [675, 2, 1, "", "within"], [676, 2, 1, "", "write"]], "skbio.stats.evolve": [[685, 3, 1, "", "hommola_cospeciation"]], "skbio.stats.gradient": [[687, 1, 1, "", "AverageGradientANOVA"], [698, 1, 1, "", "CategoryResults"], [709, 1, 1, "", "FirstDifferenceGradientANOVA"], [720, 1, 1, "", "GradientANOVA"], [731, 1, 1, "", "GradientANOVAResults"], [742, 1, 1, "", "GroupResults"], [753, 1, 1, "", "TrajectoryGradientANOVA"], [764, 1, 1, "", "WindowDifferenceGradientANOVA"]], "skbio.stats.gradient.AverageGradientANOVA": [[688, 2, 1, "", "__eq__"], [689, 2, 1, "", "__ge__"], [690, 2, 1, "", "__getstate__"], [691, 2, 1, "", "__gt__"], [692, 2, 1, "", "__hash__"], [693, 2, 1, "", "__le__"], [694, 2, 1, "", "__lt__"], [695, 2, 1, "", "__ne__"], [696, 2, 1, "", "__str__"], [697, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.CategoryResults": [[699, 2, 1, "", "__eq__"], [700, 2, 1, "", "__ge__"], [701, 2, 1, "", "__getstate__"], [702, 2, 1, "", "__gt__"], [703, 2, 1, "", "__hash__"], [704, 2, 1, "", "__le__"], [705, 2, 1, "", "__lt__"], [706, 2, 1, "", "__ne__"], [707, 2, 1, "", "__str__"], [708, 2, 1, "", "to_files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[710, 2, 1, "", "__eq__"], [711, 2, 1, "", "__ge__"], [712, 2, 1, "", "__getstate__"], [713, 2, 1, "", "__gt__"], [714, 2, 1, "", "__hash__"], [715, 2, 1, "", "__le__"], [716, 2, 1, "", "__lt__"], [717, 2, 1, "", "__ne__"], [718, 2, 1, "", "__str__"], [719, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVA": [[721, 2, 1, "", "__eq__"], [722, 2, 1, "", "__ge__"], [723, 2, 1, "", "__getstate__"], [724, 2, 1, "", "__gt__"], [725, 2, 1, "", "__hash__"], [726, 2, 1, "", "__le__"], [727, 2, 1, "", "__lt__"], [728, 2, 1, "", "__ne__"], [729, 2, 1, "", "__str__"], [730, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[732, 2, 1, "", "__eq__"], [733, 2, 1, "", "__ge__"], [734, 2, 1, "", "__getstate__"], [735, 2, 1, "", "__gt__"], [736, 2, 1, "", "__hash__"], [737, 2, 1, "", "__le__"], [738, 2, 1, "", "__lt__"], [739, 2, 1, "", "__ne__"], [740, 2, 1, "", "__str__"], [741, 2, 1, "", "to_files"]], "skbio.stats.gradient.GroupResults": [[743, 2, 1, "", "__eq__"], [744, 2, 1, "", "__ge__"], [745, 2, 1, "", "__getstate__"], [746, 2, 1, "", "__gt__"], [747, 2, 1, "", "__hash__"], [748, 2, 1, "", "__le__"], [749, 2, 1, "", "__lt__"], [750, 2, 1, "", "__ne__"], [751, 2, 1, "", "__str__"], [752, 2, 1, "", "to_files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[754, 2, 1, "", "__eq__"], [755, 2, 1, "", "__ge__"], [756, 2, 1, "", "__getstate__"], [757, 2, 1, "", "__gt__"], [758, 2, 1, "", "__hash__"], [759, 2, 1, "", "__le__"], [760, 2, 1, "", "__lt__"], [761, 2, 1, "", "__ne__"], [762, 2, 1, "", "__str__"], [763, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[765, 2, 1, "", "__eq__"], [766, 2, 1, "", "__ge__"], [767, 2, 1, "", "__getstate__"], [768, 2, 1, "", "__gt__"], [769, 2, 1, "", "__hash__"], [770, 2, 1, "", "__le__"], [771, 2, 1, "", "__lt__"], [772, 2, 1, "", "__ne__"], [773, 2, 1, "", "__str__"], [774, 2, 1, "", "get_trajectories"]], "skbio.stats.ordination": [[777, 1, 1, "", "OrdinationResults"], [790, 3, 1, "", "ca"], [791, 3, 1, "", "cca"], [792, 3, 1, "", "corr"], [793, 3, 1, "", "e_matrix"], [794, 3, 1, "", "f_matrix"], [795, 3, 1, "", "mean_and_std"], [796, 3, 1, "", "pcoa"], [797, 3, 1, "", "pcoa_biplot"], [798, 3, 1, "", "rda"], [799, 3, 1, "", "scale"], [800, 3, 1, "", "svd_rank"]], "skbio.stats.ordination.OrdinationResults": [[778, 2, 1, "", "__eq__"], [779, 2, 1, "", "__ge__"], [780, 2, 1, "", "__getstate__"], [781, 2, 1, "", "__gt__"], [782, 2, 1, "", "__hash__"], [783, 2, 1, "", "__le__"], [784, 2, 1, "", "__lt__"], [785, 2, 1, "", "__ne__"], [786, 2, 1, "", "__str__"], [787, 2, 1, "", "plot"], [788, 2, 1, "", "read"], [789, 2, 1, "", "write"]], "skbio.stats.power": [[802, 3, 1, "", "confidence_bound"], [803, 3, 1, "", "paired_subsamples"], [804, 3, 1, "", "subsample_paired_power"], [805, 3, 1, "", "subsample_power"]], "skbio.table": [[807, 1, 1, "", "Table"], [874, 4, 1, "", "example_table"]], "skbio.table.Table": [[808, 2, 1, "", "__eq__"], [809, 2, 1, "", "__ge__"], [810, 2, 1, "", "__getitem__"], [811, 2, 1, "", "__getstate__"], [812, 2, 1, "", "__gt__"], [813, 2, 1, "", "__iter__"], [814, 2, 1, "", "__le__"], [815, 2, 1, "", "__lt__"], [816, 2, 1, "", "__ne__"], [817, 2, 1, "", "__str__"], [818, 2, 1, "", "add_group_metadata"], [819, 2, 1, "", "add_metadata"], [820, 2, 1, "", "align_to"], [821, 2, 1, "", "align_to_dataframe"], [822, 2, 1, "", "align_tree"], [823, 2, 1, "", "collapse"], [824, 2, 1, "", "concat"], [825, 2, 1, "", "copy"], [826, 2, 1, "", "data"], [827, 2, 1, "", "del_metadata"], [828, 2, 1, "", "delimited_self"], [829, 2, 1, "", "descriptive_equality"], [830, 2, 1, "", "exists"], [831, 2, 1, "", "filter"], [832, 2, 1, "", "from_adjacency"], [833, 2, 1, "", "from_hdf5"], [834, 2, 1, "", "from_json"], [835, 2, 1, "", "from_tsv"], [836, 2, 1, "", "get_table_density"], [837, 2, 1, "", "get_value_by_ids"], [838, 2, 1, "", "group_metadata"], [839, 2, 1, "", "head"], [840, 2, 1, "", "ids"], [841, 2, 1, "", "index"], [842, 2, 1, "", "is_empty"], [843, 2, 1, "", "iter"], [844, 2, 1, "", "iter_data"], [845, 2, 1, "", "iter_pairwise"], [846, 2, 1, "", "length"], [847, 2, 1, "", "max"], [848, 2, 1, "", "merge"], [849, 2, 1, "", "metadata"], [850, 2, 1, "", "metadata_to_dataframe"], [851, 2, 1, "", "min"], [852, 2, 1, "", "nonzero"], [853, 2, 1, "", "nonzero_counts"], [854, 2, 1, "", "norm"], [855, 2, 1, "", "pa"], [856, 2, 1, "", "partition"], [857, 2, 1, "", "rankdata"], [858, 2, 1, "", "read"], [859, 2, 1, "", "reduce"], [860, 2, 1, "", "remove_empty"], [861, 2, 1, "", "sort"], [862, 2, 1, "", "sort_order"], [863, 2, 1, "", "subsample"], [864, 2, 1, "", "sum"], [865, 2, 1, "", "to_anndata"], [866, 2, 1, "", "to_dataframe"], [867, 2, 1, "", "to_hdf5"], [868, 2, 1, "", "to_json"], [869, 2, 1, "", "to_tsv"], [870, 2, 1, "", "transform"], [871, 2, 1, "", "transpose"], [872, 2, 1, "", "update_ids"], [873, 2, 1, "", "write"]], "skbio.tree": [[875, 1, 1, "", "TreeNode"], [954, 3, 1, "", "majority_rule"], [955, 3, 1, "", "nj"]], "skbio.tree.TreeNode": [[876, 2, 1, "", "__copy__"], [877, 2, 1, "", "__deepcopy__"], [878, 2, 1, "", "__eq__"], [879, 2, 1, "", "__ge__"], [880, 2, 1, "", "__getitem__"], [881, 2, 1, "", "__getstate__"], [882, 2, 1, "", "__gt__"], [883, 2, 1, "", "__hash__"], [884, 2, 1, "", "__iter__"], [885, 2, 1, "", "__le__"], [886, 2, 1, "", "__len__"], [887, 2, 1, "", "__lt__"], [888, 2, 1, "", "__ne__"], [889, 2, 1, "", "__str__"], [890, 2, 1, "", "accumulate_to_ancestor"], [891, 2, 1, "", "ancestors"], [892, 2, 1, "", "append"], [893, 2, 1, "", "ascii_art"], [894, 2, 1, "", "assign_ids"], [895, 2, 1, "", "assign_supports"], [896, 2, 1, "", "bifurcate"], [897, 2, 1, "", "cache_attr"], [898, 2, 1, "", "compare_rfd"], [899, 2, 1, "", "compare_subsets"], [900, 2, 1, "", "compare_tip_distances"], [901, 2, 1, "", "copy"], [902, 2, 1, "", "count"], [903, 2, 1, "", "create_caches"], [904, 2, 1, "", "deepcopy"], [905, 2, 1, "", "descending_branch_length"], [906, 2, 1, "", "distance"], [907, 2, 1, "", "extend"], [908, 2, 1, "", "find"], [909, 2, 1, "", "find_all"], [910, 2, 1, "", "find_by_func"], [911, 2, 1, "", "find_by_id"], [912, 2, 1, "", "from_linkage_matrix"], [913, 2, 1, "", "from_taxdump"], [914, 2, 1, "", "from_taxonomy"], [915, 2, 1, "", "get_max_distance"], [916, 2, 1, "", "has_children"], [917, 2, 1, "", "index_tree"], [918, 2, 1, "", "invalidate_caches"], [919, 2, 1, "", "is_root"], [920, 2, 1, "", "is_tip"], [921, 2, 1, "", "lca"], [922, 2, 1, "", "levelorder"], [923, 2, 1, "", "lowest_common_ancestor"], [924, 2, 1, "", "neighbors"], [925, 2, 1, "", "non_tips"], [926, 2, 1, "", "observed_node_counts"], [927, 2, 1, "", "pop"], [928, 2, 1, "", "postorder"], [929, 2, 1, "", "pre_and_postorder"], [930, 2, 1, "", "preorder"], [931, 2, 1, "", "prune"], [932, 2, 1, "", "read"], [933, 2, 1, "", "remove"], [934, 2, 1, "", "remove_deleted"], [935, 2, 1, "", "root"], [936, 2, 1, "", "root_at"], [937, 2, 1, "", "root_at_midpoint"], [938, 2, 1, "", "shear"], [939, 2, 1, "", "shuffle"], [940, 2, 1, "", "siblings"], [941, 2, 1, "", "subset"], [942, 2, 1, "", "subsets"], [943, 2, 1, "", "subtree"], [944, 2, 1, "", "tip_tip_distances"], [945, 2, 1, "", "tips"], [946, 2, 1, "", "to_array"], [947, 2, 1, "", "to_taxonomy"], [948, 2, 1, "", "traverse"], [949, 2, 1, "", "unpack"], [950, 2, 1, "", "unpack_by_func"], [951, 2, 1, "", "unrooted_copy"], [952, 2, 1, "", "unrooted_deepcopy"], [953, 2, 1, "", "write"]], "skbio.util": [[956, 5, 1, "", "EfficiencyWarning"], [957, 5, 1, "", "RepresentationWarning"], [958, 3, 1, "", "assert_data_frame_almost_equal"], [959, 3, 1, "", "assert_ordination_results_equal"], [960, 3, 1, "", "cardinal_to_ordinal"], [961, 1, 1, "", "classproperty"], [978, 3, 1, "", "find_duplicates"], [979, 3, 1, "", "get_data_path"], [980, 3, 1, "", "safe_md5"]], "skbio.util.classproperty": [[962, 2, 1, "", "__delete__"], [963, 2, 1, "", "__eq__"], [964, 2, 1, "", "__ge__"], [965, 2, 1, "", "__get__"], [966, 2, 1, "", "__getstate__"], [967, 2, 1, "", "__gt__"], [968, 2, 1, "", "__hash__"], [969, 2, 1, "", "__le__"], [970, 2, 1, "", "__lt__"], [971, 2, 1, "", "__ne__"], [972, 2, 1, "", "__set__"], [973, 2, 1, "", "__set_name__"], [974, 2, 1, "", "__str__"], [975, 2, 1, "", "deleter"], [976, 2, 1, "", "getter"], [977, 2, 1, "", "setter"]], "skbio.workflow": [[981, 1, 1, "", "Workflow"], [993, 1, 1, "", "method"], [1004, 1, 1, "", "requires"]], "skbio.workflow.Workflow": [[982, 2, 1, "", "__call__"], [983, 2, 1, "", "__eq__"], [984, 2, 1, "", "__ge__"], [985, 2, 1, "", "__getstate__"], [986, 2, 1, "", "__gt__"], [987, 2, 1, "", "__hash__"], [988, 2, 1, "", "__le__"], [989, 2, 1, "", "__lt__"], [990, 2, 1, "", "__ne__"], [991, 2, 1, "", "__str__"], [992, 2, 1, "", "initialize_state"]], "skbio.workflow.method": [[994, 2, 1, "", "__call__"], [995, 2, 1, "", "__eq__"], [996, 2, 1, "", "__ge__"], [997, 2, 1, "", "__getstate__"], [998, 2, 1, "", "__gt__"], [999, 2, 1, "", "__hash__"], [1000, 2, 1, "", "__le__"], [1001, 2, 1, "", "__lt__"], [1002, 2, 1, "", "__ne__"], [1003, 2, 1, "", "__str__"]], "skbio.workflow.requires": [[1005, 2, 1, "", "__call__"], [1006, 2, 1, "", "__eq__"], [1007, 2, 1, "", "__ge__"], [1008, 2, 1, "", "__getstate__"], [1009, 2, 1, "", "__gt__"], [1010, 2, 1, "", "__hash__"], [1011, 2, 1, "", "__le__"], [1012, 2, 1, "", "__lt__"], [1013, 2, 1, "", "__ne__"], [1014, 2, 1, "", "__str__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:exception"}, "terms": {"": [0, 1, 17, 29, 46, 47, 48, 49, 52, 53, 54, 55, 57, 61, 62, 63, 66, 70, 72, 75, 77, 78, 79, 80, 82, 83, 87, 89, 90, 91, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 111, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 217, 218, 219, 229, 241, 264, 265, 282, 283, 284, 296, 297, 301, 303, 305, 308, 310, 313, 315, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 358, 359, 360, 362, 363, 369, 372, 373, 374, 376, 379, 381, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 425, 427, 430, 432, 435, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 478, 480, 483, 485, 488, 490, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 532, 534, 535, 537, 539, 542, 544, 547, 549, 551, 552, 553, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 579, 586, 587, 589, 601, 604, 607, 608, 609, 612, 613, 615, 616, 620, 624, 626, 628, 632, 639, 641, 649, 655, 662, 665, 675, 677, 678, 679, 680, 681, 708, 741, 752, 775, 787, 790, 791, 792, 796, 798, 800, 801, 803, 804, 805, 823, 831, 839, 844, 859, 862, 897, 905, 917, 933, 954, 1004, 1016, 1018, 1021, 1023], "0": [0, 1, 15, 16, 17, 29, 41, 46, 47, 49, 51, 54, 55, 57, 67, 68, 70, 75, 79, 80, 81, 84, 85, 93, 95, 96, 106, 107, 112, 113, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 198, 241, 303, 304, 308, 310, 320, 321, 322, 324, 326, 327, 328, 330, 332, 333, 339, 345, 347, 349, 351, 354, 356, 357, 358, 359, 360, 362, 372, 373, 374, 375, 379, 381, 391, 392, 394, 396, 397, 398, 400, 407, 412, 414, 416, 418, 422, 423, 425, 426, 430, 432, 442, 443, 445, 447, 448, 449, 451, 458, 464, 466, 468, 470, 475, 476, 478, 479, 483, 485, 495, 496, 497, 499, 501, 502, 503, 505, 507, 508, 514, 520, 522, 524, 526, 529, 530, 532, 533, 534, 535, 537, 538, 542, 544, 554, 555, 556, 558, 565, 567, 569, 573, 575, 586, 587, 590, 595, 598, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 639, 644, 647, 649, 662, 669, 672, 673, 675, 677, 678, 679, 681, 682, 683, 685, 686, 720, 775, 776, 787, 791, 795, 796, 799, 801, 802, 804, 805, 806, 807, 810, 820, 821, 822, 823, 824, 826, 830, 831, 834, 837, 838, 839, 840, 841, 843, 844, 848, 849, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 867, 869, 870, 872, 874, 876, 877, 890, 895, 898, 899, 900, 901, 904, 905, 906, 909, 915, 927, 933, 937, 938, 939, 944, 946, 949, 950, 954, 955, 960, 993, 1016, 1018, 1021, 1023], "00": [1, 141, 142, 146, 149, 152, 321, 358, 391, 442, 496, 530, 554, 955, 1018], "000": 109, "000000": [1, 955], "000000e": [141, 142], "000123": 155, "000133446": 900, "000532": 776, "001": [609, 801], "001562": 776, "00193863362662502": 804, "003": 805, "0031": 686, "005": 805, "007022633956606": 686, "007446": 614, "0082138": [17, 67], "01": [152, 801], "0118478282382": 686, "0123": 155, "0123456789": 219, "012631": 776, "015": [620, 626], "016": 801, "02": [152, 157, 609], "020131": 614, "0220": [620, 626], "0225": 686, "029747": 776, "03": [152, 681], "0301": 686, "032": 801, "0341": 686, "036910": 614, "0378111988903307": 143, "03t14": 834, "04": [152, 801], "043888": 614, "044": 801, "044805": 776, "048219": 614, "05": [1, 152, 609, 614, 685, 801, 802, 804, 805, 958], "051": 801, "056": 805, "06": [152, 834], "0625": 618, "0633": 686, "065613": 614, "068310": 614, "07": 152, "0721": 686, "074": 805, "08": [152, 155, 801, 804], "083071": 156, "0874": 686, "088": 804, "0898": 686, "09": 152, "09392265": 1, "09861229": 607, "0i": 609, "0th": [850, 960], "1": [0, 1, 3, 16, 17, 29, 34, 46, 47, 48, 49, 51, 54, 55, 57, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 169, 170, 219, 229, 241, 244, 246, 303, 308, 310, 320, 321, 322, 328, 330, 343, 344, 345, 349, 354, 355, 356, 359, 360, 362, 363, 370, 371, 372, 373, 374, 379, 381, 391, 392, 398, 400, 410, 411, 412, 416, 421, 422, 425, 430, 432, 442, 443, 449, 451, 462, 463, 464, 468, 474, 475, 478, 483, 485, 495, 496, 497, 503, 505, 518, 519, 520, 524, 529, 531, 532, 534, 535, 537, 542, 544, 554, 555, 558, 563, 564, 565, 569, 573, 575, 586, 587, 590, 593, 595, 597, 598, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 639, 644, 646, 647, 649, 651, 662, 663, 669, 671, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 685, 720, 742, 764, 775, 776, 787, 790, 791, 795, 798, 799, 801, 803, 804, 805, 806, 807, 820, 821, 822, 823, 824, 827, 830, 831, 833, 834, 837, 838, 839, 840, 841, 843, 844, 848, 849, 851, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 867, 869, 870, 872, 874, 890, 895, 898, 900, 905, 906, 909, 913, 914, 915, 927, 937, 938, 939, 944, 946, 947, 949, 950, 954, 955, 960, 1018, 1021, 1023], "10": [17, 48, 67, 70, 85, 86, 113, 126, 142, 145, 146, 147, 148, 149, 151, 152, 153, 219, 229, 244, 303, 328, 374, 398, 425, 449, 478, 503, 537, 609, 614, 620, 626, 681, 776, 801, 804, 805, 810, 820, 823, 824, 828, 844, 848, 955, 1023], "100": [1, 141, 142, 146, 149, 244, 609, 614, 805, 839, 863, 1023], "1000": [244, 775], "1004": 686, "1004075": [620, 626], "100548": 776, "1007": [145, 620, 626], "101": 614, "10136628": 612, "102": 614, "1024": 144, "103": 614, "104": [156, 614], "1048576": 980, "104937": 776, "1055": 686, "10596": 142, "108": 801, "10915": [63, 66, 587], "10919": [63, 66, 587], "1093": [147, 955], "10937312": 1, "11": [0, 17, 63, 66, 67, 73, 78, 79, 141, 145, 152, 154, 303, 329, 399, 450, 478, 504, 557, 609, 614, 620, 626, 686, 776, 791, 798, 801, 820, 823, 824, 844, 955], "110": 614, "1115": 88, "112": 857, "1126": 88, "1131255": 980, "114": 141, "1154": 686, "116": 686, "1167": 791, "117": 677, "11704769": 615, "117693430600200007": 79, "1179": 791, "11th": 153, "12": [1, 145, 152, 537, 609, 614, 620, 801, 823, 824, 857, 1018], "120": [149, 614], "120492524415": 1021, "1215": 686, "123": [155, 775], "12345": [146, 537], "126": 147, "127": 804, "128": 614, "13": [0, 74, 96, 100, 142, 146, 152, 154, 303, 374, 425, 478, 537, 609, 614, 776, 823, 824, 867], "131": [96, 100, 898], "131567": 157, "1345": 71, "1347": 71, "135": [142, 620, 626], "1371": [17, 67, 620, 626], "139": 156, "14": [1, 74, 84, 95, 145, 147, 152, 324, 328, 394, 398, 445, 449, 499, 503, 609, 614, 686, 805, 824, 906, 944], "14092516": 616, "141": [95, 898], "142857": 682, "14285714": 622, "142857142857": 854, "143": 677, "1435": 146, "144": 100, "1457": 685, "1468": 685, "147": 64, "1495": 145, "149855": 146, "1499": 145, "15": [17, 63, 66, 84, 142, 152, 155, 686, 801, 804, 805, 824, 944], "1535": 895, "1542": [142, 895], "156": 81, "1566": 142, "157": 801, "1576": [106, 107], "15800534": 141, "1585": [106, 107], "16": [1, 77, 95, 143, 146, 147, 148, 152, 153, 320, 329, 354, 399, 450, 495, 504, 529, 557, 614, 787, 801, 805, 820, 824, 915, 944], "16025641": 1, "161": 141, "16247744": 610, "1627907": 1, "163": [75, 99, 100], "164998": 614, "165": 95, "168": [71, 804], "169": [106, 107], "17": [77, 79, 106, 107, 145, 152, 303, 478, 776, 804, 824], "170768970": 141, "172": [106, 107], "1740": 145, "17445763": 610, "1767": 147, "1771": 147, "1786181": 142, "18": [142, 152, 156, 677, 801, 1018], "1800": 145, "1814": 67, "182343": 614, "1859": 145, "1875": 618, "18761279": 610, "19": [1, 145, 152, 801, 823], "1907511": 145, "1912": 81, "1913": 68, "192": 156, "19234468": 148, "193": 70, "194": 95, "1943": 80, "1948": 98, "1949": [75, 99, 100], "195": 64, "1953": 82, "1955": 81, "1956": 72, "1958": 87, "1966": [96, 100], "1967": [88, 679], "1968": 97, "1970": [61, 71], "1974": [83, 89], "1976": 84, "1978": 587, "1981": [64, 898, 954], "1983": 78, "1984": [73, 303, 374, 425, 478, 537], "1985": [146, 303, 374, 425, 478, 537], "1986": [146, 151, 153, 791], "1987": [91, 955], "199": 148, "1990": [141, 142, 145], "1991": 145, "1992": [63, 66, 70, 79, 95, 587, 627], "1993": [70, 677, 678], "1995": 791, "1997": [79, 156, 955], "1998": [84, 776, 790, 791, 793, 794, 796, 798], "1d": [51, 104, 113, 126, 303, 305, 310, 322, 323, 325, 326, 328, 329, 331, 341, 342, 343, 347, 348, 349, 350, 351, 353, 356, 376, 381, 392, 393, 395, 396, 398, 399, 401, 409, 410, 414, 415, 416, 417, 418, 420, 422, 425, 427, 432, 443, 444, 446, 447, 449, 450, 452, 461, 462, 466, 467, 468, 469, 470, 472, 473, 475, 478, 480, 485, 497, 498, 500, 501, 503, 504, 506, 516, 517, 518, 522, 523, 524, 525, 526, 528, 532, 537, 539, 544, 555, 556, 557, 562, 563, 567, 568, 569, 570, 572, 573], "1e": [142, 151, 958], "1e51ca3a5450c43524b9185c236cc5cc": 145, "1e9": 155, "1st": [41, 753, 960], "1x1": 153, "2": [0, 1, 17, 29, 34, 41, 46, 47, 48, 50, 51, 54, 55, 57, 61, 62, 63, 64, 65, 66, 70, 73, 75, 77, 79, 81, 84, 85, 86, 88, 89, 91, 95, 98, 99, 100, 106, 107, 108, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 170, 229, 241, 244, 246, 284, 303, 320, 321, 322, 328, 329, 330, 333, 341, 343, 345, 354, 356, 360, 363, 372, 373, 391, 392, 398, 399, 400, 409, 410, 412, 422, 442, 443, 449, 450, 451, 461, 462, 464, 475, 495, 496, 497, 503, 504, 505, 508, 516, 518, 520, 529, 532, 535, 537, 554, 555, 557, 558, 562, 563, 565, 573, 575, 586, 587, 593, 595, 598, 601, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 639, 644, 647, 649, 651, 662, 669, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 685, 686, 775, 776, 787, 790, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 820, 821, 822, 823, 824, 827, 828, 831, 833, 834, 839, 846, 847, 848, 851, 854, 857, 863, 865, 866, 867, 870, 872, 874, 890, 895, 896, 898, 900, 905, 906, 911, 913, 914, 915, 938, 939, 944, 946, 947, 949, 950, 954, 955, 960, 1016, 1018, 1021, 1023], "20": [0, 152, 425, 609, 614, 787, 793, 801, 804, 805, 839], "200": [148, 614], "2000": [70, 805, 955], "2001": 680, "2002": [48, 79, 95, 103, 142, 146], "2003": [146, 606], "2004": 90, "2005": [106, 145], "2006": [79, 681, 955], "2007": [95, 106, 107], "2008": [146, 153], "2009": [147, 148, 685], "201": [70, 614], "2010": [79, 106, 107, 147], "2011": [85, 86, 95, 106, 107], "2012": [95, 148, 157, 679, 807, 874], "2013": [17, 67, 77, 95, 624, 787], "2014": [17, 67, 141, 153, 614, 624, 834], "2015": [48, 606, 609, 620, 626], "2016": [95, 620, 626], "2017": 895, "2018": 157, "202": 614, "2020": 157, "2022": 157, "2024": 155, "203": 614, "20309816": 686, "205": 678, "207": 95, "209": [145, 148, 679], "21": [145, 152, 609, 620, 626, 794, 805, 823, 839, 870], "210": 70, "2106": 95, "2107852473": 617, "2113": 95, "2130": 142, "21383822": 613, "215": [141, 142], "217": 70, "21712454": 787, "2186": 686, "219": [142, 145, 678], "22": [63, 66, 152, 157, 587, 609, 801, 839, 1018], "220": 679, "22054469": 616, "2208": 686, "2214": 142, "224": 801, "226": 805, "227": [70, 146], "229": 801, "23": [1, 152, 155, 156, 371, 609, 823, 839, 955, 1018], "23059566": 623, "23632778": 613, "2364": 686, "237": [82, 103], "238327": 776, "239": 954, "23e": 155, "24": [0, 142, 152, 587, 804, 834, 839], "24270353": 1, "245": 681, "246": [70, 103, 156], "24714631": 623, "25": [0, 1, 51, 64, 79, 84, 95, 106, 107, 109, 145, 151, 152, 326, 330, 332, 345, 349, 358, 362, 396, 400, 412, 416, 447, 451, 464, 468, 501, 505, 507, 520, 524, 530, 556, 558, 565, 569, 609, 621, 677, 678, 681, 686, 801, 804, 805, 854, 1018], "2500": 805, "253": 681, "255": [17, 791], "256": [97, 801], "257": 97, "25737316": 623, "259": 156, "25th": 609, "26": [77, 142, 151, 609, 680, 685, 787], "260656459": 148, "26118259": 613, "262": 84, "264": 82, "26433692": 1, "26488486": 623, "265": 73, "27": [0, 79, 98, 106, 107, 142, 425, 620, 679], "270": 73, "272": 805, "2761": 686, "278": 79, "28": [0, 95, 152, 801], "28571429": 622, "28865141": 613, "289": 791, "29": [145, 147, 148], "293463": 614, "29597001": 686, "29672718": 616, "2_": 70, "2a": 153, "2b": 81, "2d": [17, 61, 62, 63, 64, 65, 66, 104, 108, 109, 112, 575, 590, 599, 617, 683, 792, 799], "2e": 155, "2f_2": 73, "2nd": [753, 843, 960], "2nf_2": 78, "2x2": [1, 150, 848, 854], "2x3": [830, 831, 837, 838, 840, 841, 843, 849, 855, 856, 859, 861, 862, 864, 869, 870, 872], "3": [1, 17, 29, 34, 46, 47, 49, 51, 54, 55, 57, 58, 61, 65, 70, 78, 79, 82, 87, 95, 98, 103, 106, 107, 113, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 219, 229, 241, 246, 308, 310, 320, 321, 322, 327, 328, 344, 345, 347, 353, 354, 356, 359, 360, 372, 373, 379, 381, 391, 392, 397, 398, 411, 412, 414, 420, 422, 425, 430, 432, 442, 443, 448, 449, 463, 464, 466, 472, 475, 483, 485, 495, 496, 497, 502, 503, 519, 520, 522, 528, 529, 532, 534, 535, 537, 542, 544, 554, 555, 564, 565, 567, 572, 573, 586, 595, 598, 601, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 626, 628, 639, 644, 647, 649, 662, 669, 672, 673, 675, 677, 678, 679, 681, 682, 683, 685, 686, 687, 709, 720, 753, 776, 777, 787, 790, 791, 796, 801, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 830, 831, 834, 837, 838, 839, 840, 841, 843, 844, 846, 848, 849, 851, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 866, 867, 869, 870, 872, 874, 890, 900, 905, 906, 913, 914, 915, 938, 942, 944, 946, 947, 949, 950, 955, 960, 1015, 1018, 1021, 1023], "30": [0, 142, 148, 149, 152, 154, 804, 805, 844, 928], "3021": [303, 374, 425, 478, 537], "30216948": 610, "3030": [303, 374, 425, 478, 537], "30409883": 612, "30870431": 1, "30927835": 1, "31": 142, "312": 156, "314": 145, "32": [152, 680], "32495488": 610, "32630": 148, "329": 141, "33": [47, 79, 106, 107, 147, 327, 397, 448, 502, 614, 678, 681, 801, 804, 1018], "330": 141, "332": 801, "33333333333333331": 1, "335928": 157, "34": [148, 154, 895], "34180297": 616, "343": 148, "344": 148, "3447015": 955, "345": 587, "34891526": 610, "34989": 146, "35": [1, 145, 147, 148, 154, 606, 805], "3519": 686, "352": 587, "354": 686, "355": [145, 686], "356": 686, "36": [87, 97, 152, 155, 620, 626, 801], "36463": 156, "36514837": 624, "37": [106, 156], "3716": 686, "375": 618, "379": 98, "379593": 980, "38": [0, 141, 147, 152, 801], "38629436": 607, "3899": 145, "39": [146, 152, 624], "3937": 71, "3e": [141, 142, 801], "3f": 685, "3k1v_a": 148, "3rd": [679, 753, 797, 960, 1023], "3x": 928, "3x2": 848, "3x3": [627, 679, 682, 683], "4": [0, 1, 29, 46, 49, 50, 53, 55, 68, 70, 79, 82, 95, 106, 107, 145, 146, 148, 151, 152, 153, 155, 156, 157, 219, 229, 241, 246, 303, 310, 315, 320, 321, 330, 340, 344, 354, 356, 359, 360, 362, 373, 381, 386, 391, 400, 408, 411, 422, 432, 437, 442, 451, 459, 463, 475, 485, 490, 495, 496, 505, 515, 519, 529, 532, 534, 535, 537, 544, 549, 554, 558, 561, 564, 573, 575, 586, 587, 595, 601, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 622, 623, 624, 626, 639, 644, 649, 662, 669, 673, 675, 677, 679, 685, 776, 790, 791, 798, 801, 806, 820, 821, 822, 824, 827, 828, 834, 838, 839, 848, 857, 861, 862, 866, 867, 890, 900, 905, 906, 913, 914, 915, 944, 946, 947, 949, 950, 954, 955, 1018, 1021], "40": [1, 82, 146, 155, 157, 624, 803, 805, 834, 839], "400": 678, "402": 79, "403": [141, 142], "40824829": [624, 625], "41": [146, 152, 839], "410": [141, 142], "4140": 686, "4148": [75, 99, 100], "42": [1, 55, 80, 146, 152, 153, 155, 303, 326, 396, 447, 478, 501, 556, 678, 681, 830, 831, 837, 838, 839, 840, 841, 843, 849, 855, 856, 857, 859, 864, 869, 870, 872], "423": 98, "42512039": 1, "426": 805, "42857143": 622, "43": [55, 91, 152, 839, 859, 864, 954], "431": 95, "4375": 618, "44": [1, 96, 681, 839, 954], "443": 61, "444": 95, "45": [1, 152, 155, 805], "450": 678, "456": 790, "45995501": 787, "46": [152, 680, 805, 843, 859, 864], "4603377592": 149, "4603378712": 149, "4604421736": 149, "462339": 614, "466911": 776, "467481": 614, "46774194": 1, "4693": 146, "47": [152, 801, 864], "48": [61, 88], "480232": 614, "484": 801, "49": [0, 149, 152], "4hh": 145, "4x4": [677, 678, 944], "5": [0, 1, 17, 47, 55, 62, 65, 67, 74, 79, 81, 95, 106, 107, 109, 112, 140, 142, 145, 146, 147, 148, 151, 153, 156, 157, 219, 308, 310, 320, 321, 322, 328, 330, 332, 333, 339, 345, 351, 354, 356, 372, 379, 381, 391, 392, 398, 400, 407, 412, 418, 422, 430, 432, 442, 443, 449, 451, 458, 464, 470, 475, 483, 485, 495, 496, 497, 503, 505, 507, 508, 514, 520, 526, 529, 532, 542, 544, 554, 555, 558, 565, 573, 586, 587, 601, 604, 609, 614, 618, 621, 627, 639, 649, 662, 673, 675, 677, 678, 681, 682, 685, 776, 791, 801, 804, 805, 806, 810, 820, 821, 822, 823, 824, 834, 839, 847, 848, 857, 866, 870, 874, 890, 895, 899, 900, 902, 905, 906, 913, 914, 915, 937, 938, 939, 944, 946, 947, 954, 955, 958, 1021], "50": [1, 63, 66, 146, 149, 152, 321, 391, 442, 496, 554, 609, 614, 686, 787, 804, 805, 831, 1018], "500": [804, 805], "5007512": 787, "50th": [146, 609], "52": 152, "52199973": 686, "528": 804, "528243": 614, "53": [61, 152, 898], "530": 678, "533": 801, "533729": 614, "5338": 79, "54": [83, 107], "54772256": 624, "55": [152, 324, 394, 445, 499, 681, 686, 801, 955], "55152525": 156, "555": 83, "556061": 614, "5565": 142, "557": 83, "5587": 142, "56": [95, 324, 394, 445, 499], "560": 89, "5671": 142, "57": [142, 152, 791, 844], "572": 801, "58": [80, 152, 801], "581": 145, "59": 147, "5917809": 612, "594590": 614, "5990": 156, "5996": 156, "5e": 155, "6": [1, 49, 73, 74, 79, 93, 95, 106, 107, 142, 145, 146, 147, 148, 155, 156, 157, 320, 321, 329, 330, 353, 354, 356, 374, 391, 399, 400, 420, 422, 442, 450, 451, 472, 475, 495, 496, 504, 505, 528, 529, 532, 554, 557, 558, 572, 573, 601, 609, 611, 616, 619, 620, 622, 649, 673, 675, 679, 681, 682, 685, 776, 801, 820, 823, 824, 834, 839, 848, 854, 857, 890, 895, 905, 906, 914, 915, 944, 946, 947, 954, 1018], "60": [143, 144, 145, 149, 686, 804, 839], "601": 801, "601277": 614, "6018555": 679, "602": 801, "607": 686, "609": 145, "61": [152, 681, 805, 839], "617": 801, "619": 156, "62": [79, 106, 107, 143, 144, 147, 681, 839, 1018], "6212": 156, "6216": 686, "6234": 156, "627677": 614, "63": [142, 152, 839], "634": 686, "64": [1, 109, 147, 155, 362, 363, 839, 950], "641": 156, "646": 805, "646e": 801, "65": 686, "65463348": 787, "66": [148, 152, 327, 397, 448, 502, 681, 1018], "664": 801, "6666666666666667": 1021, "67": [148, 152, 320, 327, 354, 397, 448, 495, 502, 529, 677, 681, 791, 801, 1018], "68": [148, 686, 804], "6821": 142, "68235294": 1, "68339802": 615, "688": [75, 99, 100], "69": 152, "6913": 686, "692": 79, "6928": 142, "69314718": 607, "694": 79, "6e": 142, "6x6": [1, 681], "7": [1, 64, 74, 95, 109, 146, 147, 148, 156, 157, 219, 229, 241, 246, 303, 310, 321, 372, 381, 391, 432, 442, 478, 485, 496, 544, 554, 601, 614, 649, 675, 678, 679, 681, 682, 685, 776, 801, 807, 820, 823, 824, 857, 874, 900, 914, 938, 946, 947, 955, 959, 1018], "70": 152, "702656": 614, "70710678": [624, 625], "707221": 614, "71": [87, 106, 152, 156], "714286": 678, "71597633": 1, "72": 95, "73": [106, 107], "74": 152, "75": [1, 51, 79, 84, 106, 107, 347, 414, 466, 522, 567, 609, 627, 678, 681, 854, 857, 950], "750792": 614, "7559": 679, "755929": 682, "75th": 609, "76": [90, 95, 152], "77": [90, 681], "7715": 686, "771517": 678, "77549923": 1, "7768362": 615, "779": 801, "78": [152, 950], "78142077": 1, "783": 801, "78787879": 1, "788": 801, "79": [146, 149, 152], "793": 91, "79451346": 612, "8": [0, 1, 67, 141, 142, 147, 148, 153, 156, 157, 170, 246, 321, 330, 353, 358, 374, 391, 400, 420, 442, 451, 472, 496, 505, 528, 530, 554, 558, 572, 601, 620, 626, 649, 675, 678, 685, 776, 801, 805, 806, 820, 823, 824, 828, 857, 905, 914, 947, 955, 1018, 1021], "80": [70, 146, 776, 804, 805, 839, 895, 950, 1023], "803": 91, "80332382": 787, "806": 805, "81": 839, "810": 678, "811": 142, "81521739": 1, "81649658": [624, 625], "818": 84, "82": [142, 143, 156, 839], "820": 84, "8228": 106, "8235": 106, "824": 805, "82857143": 1, "82967033": 1, "83": [140, 839, 874], "8304": 686, "832": 685, "836": 801, "838": 801, "84": 839, "844": 801, "8468": 142, "848": 801, "85": [145, 152, 805, 950], "8547619": 1, "8552": 142, "857142857143": 854, "85714286": 1, "86": [303, 478], "86111111": 1, "86666667": 1, "86813187": 1, "87": [70, 152], "87709497": 1, "87777778": 1, "88": [156, 681, 804], "884420": 834, "884498": 614, "89": [63, 66, 148, 587], "89285714": 1, "8e": 142, "9": [1, 141, 142, 143, 146, 149, 152, 155, 156, 198, 219, 229, 303, 324, 328, 374, 394, 398, 425, 445, 449, 478, 499, 503, 537, 609, 614, 685, 686, 776, 790, 791, 793, 794, 796, 797, 798, 801, 820, 823, 824, 902, 905, 914, 944, 947, 954, 955, 1018], "90": [48, 149, 614, 1023], "900": 244, "905": 78, "909": 142, "912": 78, "91769271": 787, "92": 678, "9223489": 156, "922404392093": 1, "9230769230": 605, "928": 801, "93": 147, "932": 801, "939336": 1, "94": [142, 152], "95": [74, 78, 79, 85, 147, 152, 895], "952": 805, "95224719": 1, "956": 801, "96": [74, 149], "97": [152, 614], "978387": 614, "984": 801, "98435423": 1, "98796148": 1, "99": [141, 142, 145, 152, 677, 681, 685, 857], "991987": 614, "996": [801, 805], "999": [1, 537, 677, 679, 680, 681, 682, 685], "999887756453524252": 156, "9e": 141, "9f": 900, "A": [1, 17, 29, 50, 51, 54, 55, 56, 59, 61, 63, 66, 70, 73, 78, 79, 80, 81, 83, 84, 90, 95, 98, 106, 107, 109, 124, 126, 137, 139, 141, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 183, 187, 188, 193, 200, 201, 219, 240, 244, 245, 266, 284, 299, 303, 324, 330, 336, 352, 356, 363, 369, 374, 394, 400, 404, 419, 422, 425, 445, 451, 455, 471, 475, 478, 499, 505, 511, 527, 532, 537, 558, 571, 573, 575, 586, 587, 591, 593, 595, 596, 600, 601, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 639, 642, 644, 645, 648, 649, 651, 662, 666, 669, 670, 674, 675, 678, 679, 680, 681, 683, 685, 698, 720, 742, 786, 787, 788, 790, 791, 796, 798, 803, 804, 805, 810, 821, 822, 823, 827, 832, 833, 834, 835, 843, 850, 856, 858, 859, 860, 861, 862, 863, 866, 867, 868, 870, 875, 876, 877, 890, 895, 898, 900, 901, 904, 905, 906, 907, 910, 911, 912, 914, 915, 917, 924, 932, 934, 936, 937, 942, 944, 951, 952, 954, 1004, 1016, 1021, 1023], "AS": 156, "AT": [47, 146, 147, 153], "And": [149, 303, 425, 621, 1018], "As": [1, 145, 148, 151, 155, 537, 597, 646, 671, 679, 681, 791, 908, 1016, 1023], "At": [155, 158, 823], "Be": 537, "By": [55, 84, 95, 104, 108, 146, 148, 155, 609, 681, 795, 796, 799, 833, 845, 944, 955, 982], "For": [1, 29, 48, 56, 60, 67, 95, 124, 125, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 229, 244, 245, 246, 247, 284, 299, 302, 303, 352, 361, 419, 424, 425, 471, 477, 478, 527, 536, 537, 571, 574, 587, 596, 602, 609, 614, 645, 650, 670, 676, 677, 678, 679, 680, 681, 683, 685, 687, 753, 787, 788, 789, 790, 791, 801, 803, 804, 805, 807, 823, 828, 829, 850, 858, 863, 873, 874, 895, 932, 953, 954, 956, 957, 1016, 1018, 1021], "IF": 850, "IN": 156, "If": [1, 17, 29, 46, 48, 49, 51, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 70, 73, 74, 79, 80, 81, 85, 91, 95, 104, 106, 107, 108, 109, 112, 113, 124, 137, 141, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 169, 170, 171, 184, 186, 190, 191, 194, 195, 198, 211, 212, 213, 219, 228, 232, 245, 246, 258, 259, 260, 276, 277, 278, 284, 293, 294, 297, 298, 299, 303, 305, 310, 320, 321, 322, 324, 326, 328, 330, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 357, 372, 374, 376, 381, 391, 392, 394, 396, 398, 400, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 425, 427, 432, 442, 443, 445, 447, 449, 451, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 475, 476, 478, 480, 485, 495, 496, 497, 499, 501, 503, 505, 508, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 532, 533, 534, 535, 537, 539, 544, 554, 555, 556, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 579, 586, 587, 589, 590, 591, 594, 595, 596, 601, 604, 605, 609, 611, 614, 615, 616, 618, 619, 625, 628, 632, 639, 641, 642, 643, 644, 645, 649, 655, 662, 665, 666, 667, 668, 669, 670, 675, 677, 678, 679, 680, 681, 682, 683, 685, 720, 731, 764, 775, 786, 787, 788, 790, 791, 792, 795, 796, 799, 801, 802, 803, 804, 805, 806, 810, 818, 820, 823, 824, 826, 827, 828, 831, 832, 833, 834, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 858, 859, 860, 863, 864, 865, 866, 867, 868, 869, 870, 872, 895, 897, 898, 902, 905, 908, 909, 913, 918, 921, 923, 926, 932, 937, 938, 939, 944, 946, 947, 948, 954, 955, 958, 959, 960, 961], "In": [1, 17, 48, 79, 95, 106, 107, 109, 146, 147, 148, 149, 151, 153, 157, 284, 303, 333, 372, 425, 478, 508, 575, 606, 609, 614, 627, 678, 679, 685, 775, 790, 791, 796, 801, 805, 820, 875, 895, 908, 954, 1016, 1018, 1021, 1023], "It": [1, 17, 68, 75, 79, 80, 82, 95, 102, 140, 141, 143, 146, 147, 148, 149, 151, 153, 155, 157, 170, 219, 229, 232, 240, 241, 243, 244, 246, 303, 339, 351, 407, 418, 425, 458, 470, 478, 514, 526, 530, 609, 612, 614, 618, 627, 668, 679, 680, 685, 708, 709, 741, 752, 764, 790, 791, 795, 798, 801, 804, 805, 831, 870, 875, 876, 877, 901, 904, 958, 980, 1004, 1018], "Its": 798, "NOT": [17, 89, 198], "No": [30, 74, 141, 142, 145, 154, 157, 229, 319, 390, 441, 494, 553, 679], "Not": [147, 303, 356, 422, 475, 532, 573, 681], "ONE": [17, 67], "OR": 30, "Of": 148, "On": 796, "One": [79, 153, 158, 298, 614, 663, 955], "That": [96, 100, 151, 346, 413, 465, 521, 566], "The": [0, 1, 17, 18, 46, 47, 48, 49, 50, 52, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 79, 80, 81, 82, 84, 89, 91, 95, 96, 97, 98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 124, 125, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 169, 170, 171, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 211, 216, 217, 218, 219, 220, 229, 230, 231, 240, 241, 242, 243, 244, 245, 247, 248, 258, 263, 264, 265, 276, 281, 282, 283, 284, 293, 294, 296, 297, 298, 299, 300, 301, 302, 305, 308, 310, 315, 320, 321, 322, 324, 326, 330, 338, 340, 341, 343, 344, 345, 352, 354, 356, 360, 361, 362, 371, 372, 373, 376, 379, 381, 386, 391, 392, 394, 396, 400, 406, 408, 409, 410, 411, 412, 419, 422, 424, 427, 430, 432, 437, 442, 443, 445, 447, 451, 457, 459, 461, 462, 463, 464, 471, 475, 477, 478, 480, 483, 485, 490, 495, 496, 497, 499, 501, 505, 513, 515, 516, 518, 519, 520, 527, 529, 532, 535, 536, 537, 539, 542, 544, 549, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 571, 573, 574, 575, 579, 586, 591, 596, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 618, 619, 621, 623, 624, 625, 628, 632, 639, 642, 645, 649, 650, 651, 655, 662, 663, 666, 668, 670, 673, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 698, 720, 731, 742, 764, 775, 777, 788, 789, 790, 791, 795, 796, 797, 798, 801, 802, 803, 804, 805, 807, 810, 818, 819, 820, 821, 822, 823, 824, 827, 830, 832, 833, 835, 836, 837, 838, 839, 840, 843, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 867, 869, 870, 871, 873, 874, 890, 891, 896, 897, 898, 899, 900, 902, 903, 905, 906, 908, 909, 911, 912, 913, 914, 915, 917, 921, 923, 924, 927, 932, 933, 935, 936, 938, 939, 940, 941, 944, 946, 953, 954, 955, 958, 961, 979, 981, 982, 1016, 1018, 1021, 1023], "Then": [1, 609, 621, 686, 776], "There": [1, 55, 80, 91, 142, 148, 151, 154, 327, 397, 448, 502, 651, 796, 804, 805, 823, 848, 1016, 1021, 1023], "These": [0, 1, 47, 52, 53, 69, 79, 106, 107, 148, 151, 155, 156, 157, 248, 338, 340, 406, 408, 457, 459, 513, 515, 560, 561, 603, 682, 684, 777, 797, 803, 810, 848], "To": [1, 36, 79, 106, 107, 146, 147, 148, 151, 154, 155, 158, 198, 284, 303, 425, 478, 609, 614, 651, 673, 677, 679, 681, 685, 801, 895, 1016, 1023], "Will": [51, 189, 192, 196, 198, 216, 263, 281, 300, 588, 600, 640, 648, 664, 674, 777, 806], "With": [141, 606, 618], "_": [70, 143, 146, 147, 151, 156, 241, 308, 379, 430, 483, 542, 627, 679, 855], "_1": 151, "__": 148, "____________1______________2_________": 156, "________________": 156, "____________________": 156, "__copy__": [33, 231], "__deepcopy__": [32, 230], "__eq__": [43, 208, 238, 255, 273, 291, 584, 637, 660], "__init__": [158, 169, 171], "__iter__": 54, "__locat": 148, "__ne__": [202, 249, 267, 285], "__reversed__": 54, "_block_comput": 109, "_ci": 69, "_except": 153, "_interval_tre": 229, "_io": [140, 144], "_is_stale_tre": 229, "_leaf_index": 917, "_myformat_sniff": 158, "_myformat_to_some_skbio_class": 158, "_not_": [823, 951], "_rebuild_tre": 229, "_setup_debug_trac": 992, "_some_skbio_class_to_myformat": 158, "_tree": 954, "aT": 147, "a_1": 151, "aa": [54, 146, 148, 153, 362], "aaa": [156, 343, 410, 462, 518, 563], "aaaaaaaaa": 145, "aaaaaaaaaa": 145, "aaaaaaattttttt": 1023, "aaaaaactctctaaactcactaaggctctctacccctcttcagagaagtcga": 0, "aaaaaccgat": 145, "aaaataaata": 145, "aaacaaacca": 145, "aaaccattgc": [146, 153], "aaacccttgc": [146, 153], "aaacccttgccg": 146, "aaacccttgccggtacgcttaaaccattgccggtacgcttaa": 146, "aaacccttgccgttacgcttaaaccgaggccgggacactcat": 146, "aaaccgaggc": [146, 153], "aaagataggc": 145, "aaatatggat": 145, "aaatcctatg": 145, "aac": 154, "aacaaatgca": 145, "aacaacagga": 145, "aacaccaaacttctccacc": 147, "aacaccaaacttctccaccacgtgagctacaaaag": 147, "aaccttatca": 145, "aacgaaggcg": 145, "aactttgtag": 145, "aagaactttc": 145, "aagaggttac": 145, "aagcctggtg": 145, "aagccttggc": 146, "aagccttggcagtgcagggtgagccgtgg": 146, "aagccttggcagtgcagggtgagccgtggccgggcacggtat": 146, "aagctngggc": [146, 153], "aagctngggcatttcagggtgagcccgggcaatacagggtat": 146, "aagga": [310, 381, 432, 485, 544], "aaggaatcaa": 145, "aaggaatttg": 145, "aagtaa": [320, 495], "aagtatttgg": 145, "aagtcttaga": 145, "aagtcttttt": 145, "aagttgttag": 145, "aagucuuuuu": 145, "aata": 154, "aataaac": 154, "aataagtgca": 145, "aatacagggt": [146, 153], "aatataccggttataa": [329, 399, 450, 504, 557], "aatatggatt": 145, "aatgaa": [320, 342, 354, 495, 517, 529], "aatgtt": [342, 517], "aatt": 823, "aattaaataa": 145, "aattctggat": 145, "aattg": 1023, "aattgccggac": 1023, "aattgg": 775, "aauauggauu": 145, "ab": [147, 374], "ab07acbb1e496801937adfa772424bf7": 980, "ababacac": 374, "abbrevi": [157, 777], "abc": [143, 308, 374, 379, 430, 483, 542], "abcd": 955, "abcdef": 1, "abil": 151, "abl": [29, 49, 109, 303, 425, 478, 537, 609, 804, 905], "about": [1, 56, 60, 91, 124, 125, 137, 138, 143, 146, 147, 151, 155, 156, 158, 201, 229, 245, 247, 248, 266, 284, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 604, 645, 650, 670, 676, 776, 788, 789, 798, 804, 805, 823, 853, 858, 873, 932, 953, 956, 957, 1017, 1018], "abov": [0, 1, 55, 146, 148, 152, 153, 154, 155, 156, 158, 169, 171, 303, 425, 478, 537, 627, 677, 679, 681, 685, 1018], "absenc": [74, 805, 855], "absent": [356, 422, 475, 532, 573, 796], "absolut": [606, 614, 679, 863, 979], "abstract": [248, 374], "abund": [1, 70, 71, 79, 81, 84, 91, 95, 103, 104, 106, 107, 108, 109, 112, 140, 609, 614, 776, 790, 791, 797, 798, 805, 857, 863], "abx": 803, "ac": [30, 31, 32, 33, 34, 39, 41, 44, 47, 49, 51, 55, 57, 58, 61, 64, 145, 147, 148, 156, 219, 331, 401, 452, 506, 1018], "aca": [344, 345, 411, 412, 463, 464, 519, 520, 564, 565], "acaatcaaat": 145, "acac": [335, 344, 403, 411, 454, 463, 510, 519, 564], "acacatttatta": [345, 412, 464, 520, 565], "acacgacgtt": [336, 341, 344, 404, 409, 411, 455, 461, 463, 511, 516, 519, 562, 564], "acad": [63, 66], "academ": 72, "academi": 587, "acagaattga": 145, "acaggttggc": [146, 153], "acata": 147, "acatggcaat": 145, "acatgggata": 145, "acc": [0, 142, 1018], "accaatattt": 145, "accaatttga": 145, "acccc": 0, "acceler": 806, "accept": [1, 29, 57, 109, 353, 359, 360, 420, 472, 528, 534, 535, 572, 587, 603, 609, 679, 683, 685, 801, 804, 805, 910, 939, 947, 950, 1004], "acces": 141, "access": [3, 52, 53, 139, 145, 146, 148, 157, 284, 338, 340, 363, 369, 406, 408, 457, 459, 513, 515, 560, 561, 627, 955, 961], "accgaat": 303, "accgaau": 478, "accgggta": 1018, "accggttggc": 146, "accggttggccgttcagggtacaggttggccgttcagggtaa": 146, "accgttcg": 156, "accgttgta": [143, 153], "accguuaguc": 1018, "accident": 956, "accommod": 219, "accompani": [146, 628, 957], "accomplish": [1, 606, 1016], "accord": [75, 79, 303, 425, 478, 795, 799, 861, 862], "account": [113, 357, 423, 476, 533, 720, 790, 798, 805, 1021], "accumul": [87, 90, 890], "accumulate_to_ancestor": 906, "accur": [81, 85, 86], "accuraci": [681, 796], "acdefghikl": [113, 126], "acdfnasanftacgnpnrtesl": [343, 410, 462, 518, 563], "acg": [30, 31, 32, 33, 34, 39, 41, 44, 51, 54, 55, 57, 58, 154, 156, 341, 344, 409, 411, 461, 463, 516, 519, 562, 564], "acga": [46, 49, 308, 317, 379, 388, 430, 439, 483, 492, 542, 551], "acgaactatt": 145, "acggggaggcggag": [328, 398, 449, 503], "acgggu": 1018, "acgt": [29, 46, 49, 50, 52, 53, 59, 304, 308, 317, 321, 332, 333, 338, 340, 342, 346, 375, 379, 388, 391, 406, 408, 413, 426, 430, 439, 442, 457, 459, 465, 479, 483, 492, 496, 507, 508, 513, 515, 517, 521, 537, 538, 542, 551, 554, 560, 561, 566, 575, 593], "acgta": 154, "acgtac": 154, "acgtacgt": [332, 507], "acgtgagctacaaaag": 147, "acgtgccta": 0, "acgtgcctaggtacgcaag": 0, "acgtggaa": [321, 391, 442, 496, 554], "acgtn": [356, 422, 475, 532, 573], "acgtu": 68, "achiev": [95, 1018], "acid": [61, 63, 66, 145, 146, 147, 150, 153, 157, 303, 356, 362, 372, 374, 422, 425, 475, 478, 532, 537, 573, 575, 587], "acquir": 804, "across": [51, 95, 146, 147, 153, 229, 298, 609, 614, 679, 804, 824, 954], "act": [0, 55, 169, 170, 171], "actaaggctc": 0, "actaaggctcctaacccccttttctcaga": 0, "actaaggctctct": 0, "actaaggctctctacccctctcagaga": 0, "actacattcg": 145, "actatacgga": 145, "actcat": 146, "action": 248, "activ": 1015, "acttagtt": [332, 507], "actual": [96, 100, 155, 158, 189, 679], "acwgn": [323, 325, 351, 393, 395, 418, 444, 446, 470, 498, 500, 526], "ad": [17, 61, 62, 63, 64, 65, 66, 146, 156, 240, 537, 609, 614, 791, 794, 823, 848, 981, 1021], "adapt": 954, "adata": 865, "add": [1, 62, 65, 155, 156, 158, 182, 219, 229, 241, 243, 308, 379, 430, 483, 537, 542, 611, 618, 619, 621, 622, 623, 818, 819, 823, 843, 864, 892, 905, 907], "add_format": [169, 171], "addit": [1, 67, 68, 79, 105, 106, 107, 111, 145, 146, 147, 148, 149, 153, 154, 155, 216, 263, 281, 284, 300, 303, 425, 478, 575, 606, 607, 608, 609, 627, 651, 875, 896, 908, 909, 954, 981, 1016], "addition": [1, 140, 151, 198, 229, 862, 1018, 1021], "additon": 146, "address": [609, 1016], "adenin": [303, 478], "adequ": 804, "adher": 155, "adiv_faith_pd": 1, "adiv_sob": 1, "adjac": [343, 410, 462, 518, 563, 832], "adjust": 95, "adoni": 680, "adopt": [95, 356, 422, 475, 532, 573], "advanc": 1, "advantag": [95, 651, 981], "advis": [106, 107, 112], "ae000111": 142, "ae000171": 142, "ae000174": 142, "ae000394": 142, "ae000425": 142, "af031394": 142, "af035635": 156, "af178031": 142, "af178032": 142, "af178033": 142, "affect": [146, 151, 362, 363, 369, 537, 677, 681], "aforement": 157, "after": [17, 46, 49, 61, 62, 63, 146, 147, 155, 156, 157, 158, 232, 243, 298, 614, 620, 621, 678, 679, 682, 685, 790, 805, 929, 931, 948], "ag": [29, 46, 49, 51, 627, 803, 804], "agaagacc": [330, 400, 451, 505, 558], "agaagctatg": 145, "agaagctctt": 145, "agaagcuaug": 145, "agacatcacg": 145, "agagcatgcg": 145, "agaggttcta": 148, "agagguucua": 148, "agagttgaag": 153, "agagttgaaggtatct": [143, 153], "again": [1, 146, 147, 284, 624, 854, 955], "against": [34, 43, 61, 64, 147, 220, 226, 232, 238, 308, 317, 363, 369, 379, 388, 430, 439, 483, 492, 542, 551, 609, 685, 821, 822, 898], "agatataaag": 145, "agatcttttg": 145, "agatgagtat": 145, "agctttctgc": 145, "agg": 1018, "aggaccttat": 145, "aggctc": 0, "aggctcccttctacccctctcagaga": 0, "agggaaagtt": 145, "agggctggct": 145, "agggga": 1018, "agggta": 604, "aggreg": 1023, "aggtacccta": 145, "aggtgcagta": 145, "agre": [190, 194], "agtactctaa": 145, "agtgcagggt": [146, 153], "aguauucugccacuguaagaa": 372, "aguc": [326, 347, 349, 396, 414, 416, 447, 466, 468, 501, 522, 524, 556, 567, 569], "ahead": 1023, "aiacaqkm": 156, "aim": 776, "ainsworth": 678, "aitchison": [606, 607, 608, 612, 613, 615, 616, 624], "aitchson": 617, "al": [609, 614, 685, 807, 874], "ala": 425, "alanin": [48, 425], "aldex2": 614, "alexandro": 895, "algorithm": [61, 64, 148, 677, 678, 679, 681, 686, 687, 698, 709, 720, 731, 742, 753, 764, 790, 791, 798, 898, 955, 956, 1015], "alia": [3, 79, 92, 93, 95, 106, 107, 149, 597, 609, 619, 646, 671, 921, 923], "alic": 537, "alig": 16, "align": [141, 142, 146, 147, 219, 229, 537, 575, 820, 821, 822, 1015, 1016, 1018], "aligned_query_sequ": 0, "aligned_target_sequ": 0, "alignmentstructur": 18, "all": [1, 17, 29, 30, 47, 48, 52, 53, 55, 61, 62, 63, 68, 70, 79, 80, 81, 91, 95, 96, 100, 103, 104, 106, 107, 108, 109, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 183, 193, 212, 219, 229, 232, 241, 243, 244, 259, 277, 296, 298, 303, 321, 324, 327, 330, 338, 340, 343, 353, 357, 372, 391, 394, 397, 400, 406, 408, 410, 420, 423, 425, 442, 445, 448, 451, 457, 459, 462, 472, 476, 478, 496, 499, 502, 505, 513, 515, 518, 528, 533, 537, 554, 558, 560, 561, 563, 572, 575, 586, 587, 591, 593, 601, 609, 611, 614, 618, 619, 621, 622, 623, 624, 627, 639, 642, 649, 662, 666, 673, 675, 677, 678, 679, 680, 681, 682, 709, 720, 764, 775, 776, 787, 795, 796, 804, 805, 806, 823, 824, 827, 831, 864, 872, 875, 891, 894, 895, 896, 905, 908, 909, 910, 921, 923, 924, 927, 934, 939, 940, 942, 944, 954, 981, 982, 1021], "all_char": 151, "allow": [141, 146, 147, 151, 153, 154, 155, 158, 169, 171, 198, 229, 303, 321, 330, 391, 400, 425, 442, 451, 478, 496, 505, 554, 558, 579, 586, 606, 632, 639, 655, 662, 677, 678, 680, 681, 682, 686, 796, 807, 823, 874, 905, 947, 982, 1023], "allow_empti": 947, "allow_overlap": [586, 639, 662], "allvltkt": 156, "almost": 958, "alon": [151, 678], "along": [150, 787, 795, 796, 840, 861, 872], "alpha": [104, 110, 609, 801, 802, 806, 1015], "alpha_divers": [1, 79, 95, 108, 110], "alpha_pwr": [801, 804, 805], "alphabet": [0, 58, 68, 110, 111, 141, 146, 303, 356, 362, 374, 422, 425, 475, 478, 532, 537, 573, 575, 587, 590, 593, 604, 1018], "alphanumer": 155, "alr": 608, "alreadi": [151, 156, 158, 169, 170, 171, 537, 628, 679], "also": [0, 1, 47, 48, 75, 79, 99, 105, 106, 107, 108, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 229, 284, 333, 343, 353, 356, 372, 410, 420, 422, 462, 472, 475, 508, 518, 528, 532, 537, 563, 572, 573, 575, 609, 624, 625, 627, 677, 678, 679, 681, 685, 776, 791, 798, 801, 804, 805, 828, 833, 845, 958, 1004, 1016, 1018, 1023], "alter": 957, "altern": [57, 157, 158, 355, 372, 421, 474, 531, 591, 606, 620, 626, 642, 666, 679, 681, 682, 685, 796, 801, 913, 939], "although": [95, 685, 804, 824], "altschul": [141, 142], "alwai": [1, 17, 145, 148, 151, 153, 155, 170, 198, 216, 219, 240, 263, 281, 284, 298, 300, 372, 848, 905, 961, 1023], "amar": 148, "ambigu": [191, 195], "amen": 607, "american": 70, "amino": [61, 63, 66, 145, 146, 150, 303, 356, 362, 372, 422, 425, 475, 532, 573, 575, 587], "amino_acid": [362, 363, 369], "among": [1, 75, 95, 148, 601, 649, 675, 687, 791, 798, 1019], "amount": [682, 875, 1023], "amplicon": [1, 820], "amsterdam": [776, 790, 791, 798], "an": [0, 1, 3, 17, 29, 31, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 67, 79, 80, 82, 88, 92, 93, 104, 106, 107, 108, 112, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 169, 170, 171, 184, 186, 187, 188, 190, 192, 194, 196, 198, 199, 213, 214, 219, 229, 240, 241, 243, 244, 246, 247, 260, 261, 278, 279, 284, 298, 302, 310, 321, 328, 337, 338, 340, 347, 349, 353, 356, 361, 362, 372, 374, 381, 391, 398, 405, 406, 408, 414, 416, 420, 422, 424, 432, 442, 449, 456, 457, 459, 466, 468, 472, 475, 477, 478, 485, 496, 503, 512, 513, 515, 522, 524, 528, 532, 536, 537, 544, 554, 559, 560, 561, 567, 569, 572, 573, 574, 575, 579, 586, 589, 591, 593, 597, 601, 602, 609, 612, 613, 615, 616, 619, 621, 624, 625, 627, 632, 639, 641, 642, 646, 649, 650, 655, 662, 663, 665, 666, 671, 675, 676, 677, 679, 680, 681, 685, 697, 719, 730, 742, 763, 774, 775, 776, 786, 789, 795, 796, 801, 803, 804, 805, 806, 807, 810, 818, 819, 820, 826, 827, 830, 831, 832, 833, 838, 840, 841, 843, 846, 847, 848, 849, 851, 853, 854, 864, 867, 870, 871, 872, 873, 874, 876, 877, 890, 892, 893, 895, 897, 901, 903, 904, 908, 911, 912, 914, 921, 923, 926, 936, 939, 944, 946, 949, 951, 952, 953, 954, 955, 956, 961, 962, 965, 972, 978, 979, 980, 982, 1004, 1016, 1018, 1021, 1023], "analog": 95, "analogu": 681, "analys": [79, 106, 107, 677, 1019], "analysi": [1, 79, 91, 106, 107, 146, 153, 606, 607, 609, 614, 624, 677, 680, 681, 686, 687, 708, 709, 741, 752, 753, 764, 787, 790, 791, 796, 797, 798, 801, 804, 805], "analyt": 80, "analyz": [1, 606, 791, 804], "ancacwwgacgtt": [334, 335, 339, 402, 403, 407, 453, 454, 458, 509, 510, 514], "ancestor": [79, 95, 321, 391, 442, 496, 554, 890, 921, 923], "ancestr": 79, "ancom_df": 609, "anderson": [680, 681], "ani": [1, 17, 47, 48, 55, 57, 67, 68, 71, 102, 103, 146, 148, 150, 151, 155, 156, 169, 170, 171, 191, 195, 198, 211, 216, 219, 229, 243, 244, 258, 263, 276, 281, 284, 294, 297, 300, 303, 425, 478, 537, 575, 604, 609, 611, 679, 682, 686, 720, 742, 790, 795, 801, 803, 804, 828, 833, 857, 867, 869, 892, 895, 896, 897, 907, 915, 944, 946, 954, 981, 982, 992, 1004, 1021, 1023], "anim": 80, "ann": [78, 97], "anndata": 865, "annot": [145, 148, 149, 155, 229], "announc": 155, "anosim": [1, 680, 681], "anoth": [1, 34, 43, 46, 55, 79, 106, 107, 148, 150, 151, 202, 208, 220, 226, 229, 232, 238, 243, 246, 249, 255, 267, 273, 285, 291, 308, 317, 326, 348, 350, 363, 369, 379, 388, 396, 415, 417, 430, 439, 447, 467, 469, 483, 492, 501, 523, 525, 537, 542, 551, 556, 568, 570, 575, 577, 630, 653, 685, 820], "anova": [609, 680, 697, 698, 719, 730, 763, 774], "answer": 980, "anti": [1, 677], "antibiot": [621, 803], "anticip": 1023, "anyon": 155, "anyth": [1, 146, 147, 154, 158, 537, 867, 981, 992, 1004, 1023], "anytim": 155, "anywher": [150, 151, 155, 609], "apart": 937, "api": [146, 284, 603], "app": 154, "appear": [1, 70, 141, 153, 155, 156, 589, 641, 665, 678, 790, 791, 796, 801, 810], "append": [0, 49, 153, 158, 537, 907], "appl": [106, 107], "appli": [0, 1, 17, 29, 48, 52, 53, 104, 107, 108, 109, 112, 145, 146, 151, 155, 157, 229, 248, 303, 338, 340, 406, 408, 425, 457, 459, 478, 513, 515, 537, 560, 561, 575, 591, 606, 642, 666, 668, 679, 682, 686, 790, 804, 827, 848, 854, 857, 863, 870, 955, 982, 1023], "applic": [17, 48, 61, 67, 284, 776, 900, 1023], "approach": [614, 679, 804, 876, 877, 901, 904], "appropri": [1, 139, 150, 198, 321, 391, 442, 496, 554, 609, 1016, 1021], "approx": 801, "approxim": [798, 801], "aqfvdhwkel": 144, "aquat": 791, "ar": [0, 1, 17, 29, 30, 34, 39, 43, 44, 47, 48, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 85, 86, 95, 104, 106, 107, 108, 109, 111, 112, 124, 125, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 169, 170, 171, 183, 190, 193, 194, 198, 202, 208, 211, 212, 219, 220, 226, 232, 238, 241, 243, 245, 246, 247, 248, 249, 255, 258, 259, 267, 273, 276, 277, 284, 285, 291, 293, 294, 296, 297, 298, 299, 302, 303, 308, 310, 317, 320, 321, 327, 330, 334, 335, 336, 339, 347, 348, 349, 350, 352, 353, 356, 358, 359, 360, 361, 362, 363, 369, 371, 372, 373, 374, 379, 381, 388, 391, 397, 400, 402, 403, 404, 407, 414, 415, 416, 417, 419, 420, 422, 424, 425, 430, 432, 439, 442, 448, 451, 453, 454, 455, 458, 460, 466, 467, 468, 469, 471, 472, 475, 477, 478, 483, 485, 492, 495, 496, 502, 505, 509, 510, 511, 514, 522, 523, 524, 525, 527, 528, 530, 532, 534, 535, 536, 537, 542, 544, 551, 554, 558, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 584, 587, 590, 591, 596, 597, 601, 602, 604, 605, 606, 607, 609, 611, 614, 615, 616, 618, 619, 621, 622, 623, 624, 627, 628, 630, 632, 637, 642, 645, 646, 649, 650, 651, 653, 655, 660, 666, 668, 670, 671, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 698, 720, 764, 775, 776, 777, 786, 787, 788, 789, 790, 791, 794, 795, 796, 798, 799, 801, 803, 804, 805, 807, 810, 823, 824, 827, 829, 833, 839, 848, 850, 858, 860, 861, 862, 863, 865, 866, 867, 872, 873, 874, 875, 895, 898, 903, 913, 924, 926, 927, 931, 932, 939, 940, 944, 946, 947, 948, 953, 954, 956, 958, 959, 961, 978, 981, 982, 993, 1004, 1016, 1018, 1021, 1023], "arang": [839, 844], "arbitrari": [29, 47, 50, 150, 155, 156, 303, 425, 478, 537, 775, 833, 867, 981, 1018], "arbitrarili": [954, 1023], "archaea": [913, 914, 947], "archiv": [157, 980], "area": [1, 81], "arg": [158, 183, 193, 359, 360, 425, 534, 535, 810], "arginin": 425, "argument": [17, 29, 56, 57, 60, 67, 124, 125, 137, 138, 150, 169, 170, 171, 183, 190, 191, 192, 193, 194, 195, 196, 245, 247, 299, 302, 346, 352, 359, 360, 361, 413, 419, 424, 465, 471, 477, 521, 527, 534, 535, 536, 566, 571, 574, 575, 591, 596, 602, 607, 642, 645, 650, 666, 670, 676, 683, 788, 789, 810, 858, 873, 932, 953, 981, 1004], "argumentoverridewarn": [190, 194], "aris": [946, 954], "around": [85, 86, 109, 146, 153, 156, 575, 610, 679, 802, 1021], "arrai": [1, 17, 48, 51, 79, 95, 106, 107, 146, 152, 303, 320, 323, 325, 331, 348, 350, 351, 354, 356, 393, 395, 401, 415, 417, 418, 422, 425, 444, 446, 452, 467, 469, 470, 473, 475, 478, 495, 498, 500, 506, 523, 525, 526, 529, 532, 537, 568, 570, 573, 575, 577, 585, 590, 593, 597, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 630, 638, 646, 653, 661, 663, 671, 685, 686, 720, 742, 764, 776, 795, 799, 801, 802, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 840, 843, 847, 851, 853, 857, 859, 863, 864, 867, 870, 917, 946, 954, 1018], "arrang": 776, "array_lik": [1, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 112, 310, 328, 329, 343, 353, 381, 398, 399, 410, 420, 432, 449, 450, 462, 472, 485, 503, 504, 518, 528, 544, 557, 563, 572, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 677, 679, 680, 681, 682, 685, 792, 795, 799, 802, 805, 806], "articl": [17, 67, 143], "artifact": [54, 61, 62, 63], "artifici": [148, 776], "asarrai": [628, 830, 831, 837, 838, 840, 841, 843, 848, 849, 854, 855, 856, 859, 861, 862, 864, 869, 870, 872], "ascend": [58, 246], "ascii": [147, 154, 155, 158, 356, 422, 475, 532, 573, 893, 1021], "ascii_art": [151, 822, 896, 913, 914, 955, 1021], "ask": 170, "asn": 425, "asp": 425, "asparagin": 425, "aspart": 425, "aspect": 982, "ass": 83, "assai": 804, "assembl": 145, "assert": 959, "assert_frame_equ": 958, "assertionerror": [958, 959], "assess": [95, 103, 677, 679, 680, 681, 685], "assign": [48, 57, 68, 104, 108, 153, 155, 220, 353, 420, 472, 528, 537, 572, 593, 609, 614, 677, 680, 681, 775, 805, 894, 895, 896], "assign_support": 950, "assist": [155, 1023], "associ": [1, 36, 70, 95, 147, 155, 156, 157, 184, 185, 186, 212, 214, 219, 240, 242, 244, 259, 261, 277, 279, 284, 303, 425, 478, 537, 678, 685, 775, 795, 799, 802, 803, 804, 823, 826, 833, 848, 865, 867, 905, 911, 944, 1016], "asst": [332, 333, 507, 508], "assum": [1, 70, 79, 81, 87, 90, 106, 107, 143, 146, 147, 150, 152, 169, 171, 284, 310, 358, 359, 360, 381, 432, 485, 544, 579, 614, 627, 628, 632, 655, 666, 685, 686, 791, 795, 801, 802, 804, 805, 863], "assumpt": [91, 151, 604, 609, 614, 908, 909, 957], "assur": [876, 877, 901, 904], "asv": 1, "asx": 425, "asymmetr": [575, 579, 632, 655], "ataaatcacg": 145, "ataacgttgg": 145, "ataagggatg": 145, "atacaaccat": 145, "atactcccaa": 145, "atagacc": 1023, "atagcatacc": 145, "atagttacac": 145, "atatatacat": 147, "atatatat": 775, "atatatgttt": 145, "atatgaacaaa": 1023, "atattacaac": 145, "atcaaaaggg": 145, "atcaccgcta": 145, "atcactgaaa": 145, "atcataacta": 145, "atccatatat": 145, "atcggcgat": 605, "atgagccatg": 145, "atgc": 827, "atgcactagg": 145, "atgcatgcat": 149, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 149, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 149, "atgccactttaa": [359, 360], "atgccccttc": 145, "atggca": 775, "atggcc": 775, "atggcg": 775, "atggct": 775, "atggtatgaa": 145, "atgtgtatttga": 1018, "atgttgtagt": 145, "atl": [360, 373, 535], "atla": 587, "atom": [833, 867], "att": [324, 394, 445, 499], "attach": [169, 171, 895], "attagaaaga": 145, "attcgttgtg": 145, "attctggaac": 145, "attempt": [56, 124, 137, 146, 155, 198, 245, 299, 352, 419, 471, 527, 571, 596, 645, 670, 788, 858, 895, 908, 932], "attr": [149, 833, 867, 918, 946], "attr_1": 946, "attr_n": 946, "attribut": [3, 29, 57, 113, 126, 139, 144, 145, 146, 148, 149, 152, 154, 155, 156, 159, 201, 219, 228, 229, 244, 248, 266, 284, 303, 308, 356, 362, 374, 379, 422, 425, 430, 475, 478, 483, 532, 537, 542, 573, 575, 586, 601, 628, 639, 649, 651, 662, 675, 698, 731, 742, 777, 786, 797, 804, 807, 833, 867, 874, 875, 876, 877, 890, 894, 897, 901, 904, 918, 946, 954, 959, 961, 962, 965, 972, 993, 1018], "attribute_nam": 946, "attributeerror": [537, 961], "atttcagggt": [146, 153], "aucauaacua": 145, "aug": 146, "augccacuuuaa": [362, 373, 534, 535], "auguguauuu": 1018, "austral": 680, "australian": 677, "auth": 158, "author": [95, 148, 156, 537, 609], "auto": [198, 356, 422, 475, 532, 573], "automat": [17, 46, 49, 55, 56, 60, 124, 125, 137, 138, 150, 154, 155, 183, 193, 219, 245, 247, 299, 302, 346, 352, 361, 413, 419, 424, 465, 471, 477, 521, 527, 536, 566, 571, 574, 596, 602, 627, 645, 650, 670, 676, 777, 788, 789, 858, 873, 900, 932, 953, 1016], "auxilari": 158, "av": 686, "avail": [1, 108, 141, 146, 147, 148, 152, 155, 157, 187, 188, 356, 362, 371, 422, 475, 532, 573, 587, 651, 677, 678, 679, 680, 681, 720, 801, 805, 833, 867, 956, 1016, 1023], "averag": [610, 614, 686, 687, 795, 799, 857, 928, 954], "averagegradientanova": 686, "avg": 686, "avoid": [17, 144, 155, 156, 158, 243, 776, 799, 951, 952], "aw": [0, 95], "awar": [48, 95, 155, 537], "awesom": 1023, "awgh": 0, "ax": [687, 709, 720, 753, 776, 787, 790, 791, 810, 820, 827, 848], "axes3d": 787, "axi": [36, 51, 81, 97, 150, 575, 720, 764, 777, 787, 795, 802, 805, 810, 818, 819, 820, 821, 822, 823, 824, 826, 827, 830, 831, 833, 838, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 862, 863, 864, 867, 870, 872, 959], "axis_label": [1, 787], "b": [1, 17, 50, 55, 57, 58, 59, 79, 80, 81, 91, 95, 112, 147, 150, 151, 155, 199, 303, 425, 478, 537, 579, 586, 587, 590, 595, 598, 601, 625, 627, 632, 639, 644, 647, 649, 655, 662, 669, 672, 673, 675, 678, 679, 775, 787, 803, 804, 821, 823, 824, 827, 831, 856, 867, 876, 877, 889, 890, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 911, 915, 916, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 948, 949, 950, 951, 952, 954, 955, 980, 1016, 1018, 1021], "b1": [609, 614], "b2": [609, 614], "b3": [609, 614], "b4": [609, 614], "b5": [609, 614], "b6": [609, 614], "b7": [609, 614], "b_b": 151, "b_i": [103, 624], "ba": 156, "babp": 17, "bacilli": [914, 947], "bacillu": 156, "back": [95, 144, 146, 149, 192, 196, 217, 218, 264, 265, 282, 283, 301, 891, 1021], "backward": [79, 95, 106, 107, 155, 609], "bacteri": 609, "bacteria": [805, 850, 913, 914, 947], "bacteroidet": [850, 913, 914, 947], "baeza": 787, "baker": 79, "balanc": [95, 624], "band": 17, "bar": [155, 824, 849, 859, 869, 870, 980, 1023], "barcod": [821, 823, 827], "barker": 95, "barlow": 624, "base": [1, 55, 62, 65, 70, 73, 74, 78, 79, 83, 84, 89, 90, 91, 95, 98, 100, 106, 107, 140, 141, 146, 148, 152, 154, 155, 219, 240, 248, 284, 295, 303, 343, 374, 410, 425, 462, 478, 518, 537, 563, 579, 628, 632, 655, 677, 679, 680, 681, 685, 720, 790, 791, 798, 801, 803, 804, 805, 807, 823, 831, 863, 874, 898, 910, 911, 954, 980, 1018, 1019, 1021, 1023], "base1": 362, "base2": 362, "base3": 362, "basi": [615, 616, 624, 625], "basic": [61, 81, 141, 142, 685, 777, 787, 833, 867], "baz": [824, 980], "bb": 803, "bbb": 147, "bbf": 147, "bbx": 147, "bc_dm": 1, "bct": 157, "becam": 151, "becaus": [1, 48, 54, 55, 79, 106, 107, 141, 146, 147, 148, 151, 153, 154, 155, 158, 284, 308, 343, 372, 379, 410, 430, 462, 483, 518, 537, 542, 563, 609, 679, 791, 796, 798, 800, 803, 895, 900, 903, 947], "becom": [1, 80, 146, 147, 151, 155, 229, 823, 850], "been": [0, 61, 62, 63, 68, 112, 146, 147, 148, 153, 189, 191, 195, 198, 284, 297, 339, 343, 351, 407, 410, 418, 458, 462, 470, 514, 518, 526, 537, 563, 609, 679, 685, 806, 833, 867, 872, 931], "befor": [1, 48, 146, 150, 155, 156, 332, 333, 372, 507, 508, 621, 678, 679, 805, 823, 929, 948, 1021, 1023], "begin": [17, 145, 146, 147, 148, 152, 155, 156, 170, 219, 284, 372, 805], "behav": [303, 425, 478, 679], "behavior": [52, 53, 55, 61, 62, 63, 146, 147, 148, 155, 198, 338, 340, 356, 372, 406, 408, 422, 457, 459, 475, 513, 515, 532, 537, 560, 561, 573, 677, 679, 681, 899, 1023], "being": [1, 17, 46, 48, 49, 61, 62, 63, 79, 104, 108, 146, 147, 153, 157, 284, 298, 624, 681, 685, 775, 804, 823, 867, 876, 877, 897, 901, 904, 937, 1016, 1018], "bell": 98, "belong": [17, 71, 75, 149, 609, 614, 677, 680, 681, 823], "below": [143, 146, 147, 151, 153, 155, 156, 157, 284, 362, 374, 537, 678, 679, 787, 804, 833, 863, 867, 875], "benefit": 614, "benjamini": [609, 614], "berger": 71, "best": [17, 61, 62, 63, 64, 65, 66, 85, 86, 606, 678, 790, 957], "beta": [108, 109, 111, 145, 1015], "beta_divers": [1, 104, 106, 107, 109, 111, 112], "betadisp": 681, "bethesda": 146, "better": [146, 790, 791, 1016], "between": [1, 17, 62, 65, 75, 80, 81, 85, 96, 103, 106, 107, 108, 112, 139, 146, 147, 148, 150, 153, 156, 157, 232, 246, 321, 326, 347, 348, 349, 350, 391, 396, 414, 415, 416, 417, 442, 447, 466, 467, 468, 469, 496, 501, 522, 523, 524, 525, 554, 556, 567, 568, 569, 570, 575, 579, 591, 603, 604, 605, 609, 614, 624, 627, 628, 632, 642, 651, 655, 666, 677, 678, 679, 680, 681, 682, 684, 685, 720, 790, 791, 792, 798, 801, 804, 805, 810, 848, 875, 890, 898, 899, 900, 906, 915, 925, 944, 945, 955, 1018, 1021], "bf00039495": 145, "bh": [609, 614], "bia": [73, 74, 614], "bias": [73, 74, 614], "bias_correct": [73, 74], "bifurc": [151, 625, 912], "bigoplu": 616, "bin": [775, 823, 856], "bin_": 775, "bin_f": [775, 823], "binari": [158, 159, 169, 170, 171, 198, 624, 625, 685, 790, 798, 853, 948, 980], "binary_dm": [596, 602, 645, 650, 670, 676], "binomi": [804, 805], "bio": [0, 1, 52, 53, 56, 60, 61, 64, 67, 68, 79, 106, 107, 108, 109, 110, 111, 112, 124, 125, 137, 138, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 156, 157, 245, 247, 299, 302, 338, 340, 352, 359, 360, 361, 362, 372, 373, 406, 408, 419, 424, 457, 459, 471, 477, 513, 515, 527, 534, 535, 536, 560, 561, 571, 574, 596, 602, 603, 645, 650, 670, 676, 678, 776, 788, 789, 858, 873, 932, 953, 956, 1018, 1022], "biocor": [106, 107, 787], "biodivers": [1, 77, 79, 95], "bioinformat": [79, 95, 147, 153, 155, 895], "biol": [61, 64, 79, 83, 95, 141, 142, 145, 148, 620, 626], "biolog": [1, 54, 61, 62, 63, 90, 95, 96, 100, 102, 146, 147, 149, 151, 154, 219, 323, 324, 325, 327, 328, 331, 334, 335, 336, 339, 351, 393, 394, 395, 397, 398, 401, 402, 403, 404, 407, 418, 444, 445, 446, 448, 449, 452, 453, 454, 455, 458, 470, 498, 499, 500, 502, 503, 506, 509, 510, 511, 514, 526, 537, 575, 804, 807, 834, 874, 955, 1015, 1019, 1020], "biologi": [95, 96, 100, 372, 685, 895, 908, 954, 955], "biom": [155, 807, 813, 820, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 1015], "biom_format": [807, 874], "biom_open": [833, 867], "biometr": [91, 681], "biometrika": [70, 82], "bioperl": [147, 153], "biopython": 147, "biosci": [620, 626], "bioscienc": 898, "biotechnologi": [146, 157], "biowulf": 154, "biplot": [152, 790, 798], "biplot_scor": [777, 959], "bit": [98, 141, 142, 155], "bitscor": [141, 142], "bitting": 95, "biz": 824, "blackwel": 90, "blank": [146, 147, 151, 152, 153, 155, 201, 216, 248, 263, 266, 281, 284, 297, 300, 595, 644, 669], "blast": [62, 63, 65, 66, 146], "blast6": 142, "blastcgihelp": 146, "blastedbio": 141, "blastn": 142, "blastp": 142, "block": [63, 66, 109, 587, 980], "block_siz": 980, "blocksiz": 109, "blogspot": 141, "blosum": [63, 66, 425, 575, 587], "blosum45": 587, "blosum50": 587, "blosum62": [575, 587], "blosum80": 587, "blosum90": 587, "bmi": 805, "bob": 537, "bodi": [1, 787], "body_sit": [1, 787], "boilerpl": 158, "bologna": 81, "bone": 804, "bonferroni": [609, 614], "boniferroni": [609, 614], "boogaart": 624, "book": [141, 142, 146], "bool": [15, 17, 30, 31, 34, 43, 46, 49, 51, 52, 53, 54, 58, 61, 62, 63, 73, 74, 79, 95, 104, 106, 107, 108, 109, 112, 113, 169, 170, 171, 190, 194, 202, 208, 212, 215, 217, 218, 219, 220, 226, 232, 238, 240, 242, 246, 249, 255, 259, 262, 264, 265, 267, 273, 277, 280, 282, 283, 285, 291, 293, 301, 303, 304, 305, 308, 310, 317, 320, 321, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 355, 356, 357, 363, 369, 375, 376, 379, 381, 388, 391, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 430, 432, 439, 442, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 483, 485, 492, 495, 496, 498, 500, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 528, 531, 532, 533, 537, 538, 539, 542, 544, 551, 554, 557, 558, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 572, 573, 576, 577, 584, 586, 589, 605, 609, 615, 616, 620, 626, 628, 629, 630, 637, 639, 641, 652, 653, 660, 662, 665, 668, 679, 682, 685, 720, 731, 795, 796, 798, 799, 803, 804, 806, 823, 826, 830, 831, 833, 834, 842, 843, 844, 845, 853, 854, 855, 856, 857, 860, 865, 866, 867, 870, 872, 893, 898, 899, 902, 916, 918, 919, 920, 922, 925, 928, 929, 930, 933, 945, 947, 948, 955, 959, 981], "boolean": [30, 107, 146, 149, 154, 303, 310, 323, 325, 328, 331, 343, 346, 348, 350, 351, 353, 381, 393, 395, 398, 401, 410, 413, 415, 417, 418, 420, 425, 432, 444, 446, 449, 452, 462, 465, 467, 469, 470, 472, 473, 478, 485, 498, 500, 503, 506, 518, 521, 523, 525, 526, 528, 537, 544, 563, 566, 568, 570, 572, 666, 831, 863], "bootstrap": 875, "both": [29, 47, 55, 57, 68, 73, 74, 75, 79, 95, 139, 140, 141, 142, 144, 146, 147, 153, 155, 157, 190, 194, 244, 372, 591, 612, 613, 615, 616, 627, 642, 666, 668, 673, 678, 679, 680, 681, 796, 810, 820, 823, 827, 833, 848, 863, 867, 899, 900, 939, 948, 1016, 1018], "bound": [84, 85, 148, 149, 158, 219, 220, 228, 229, 232, 240, 241, 243, 244, 537, 609, 614, 802, 805], "bound_moieti": 148, "bowden": [303, 374, 425, 478, 537], "boxplot": 1, "bp": [145, 148], "braak": 791, "bracket": [103, 151], "brai": 1, "branch": [1, 79, 95, 107, 625, 875, 895, 896, 905, 946, 949, 955, 1021], "braycurti": 1, "break": [303, 425, 478], "bren": 624, "brillouin": 72, "broader": 776, "broadinstitut": 146, "broken": [47, 954], "brows": 145, "bsd": 1015, "bt": [147, 844], "btop": [141, 142], "buf_siz": 775, "buffer": [158, 198, 775], "buffer_s": 158, "bufferedrandom": 198, "bufferedread": [159, 169, 170, 198], "bufferedwrit": [159, 171, 198], "bui": 1015, "build": [229, 624, 868], "buildilrbas": 624, "built": [3, 17, 29, 113, 126, 159, 172, 201, 219, 229, 248, 266, 284, 303, 362, 374, 425, 478, 537, 575, 628, 651, 687, 698, 709, 720, 731, 742, 753, 764, 777, 807, 875, 900, 939, 961, 981, 993, 1004, 1016], "bulletin": 954, "busi": 158, "bwpd_": 95, "by_id": 863, "by_nam": [356, 422, 475, 532, 573, 575, 592], "bypass": [79, 104, 106, 107, 108], "byte": [198, 353, 420, 472, 528, 572], "byteio": [140, 144], "bytesio": [140, 144, 198, 199, 980], "bz2": 198, "bzh91ai": 199, "b\u00e4hler": [620, 626], "c": [1, 3, 17, 29, 47, 54, 55, 57, 58, 67, 70, 79, 80, 81, 82, 83, 95, 96, 98, 100, 106, 107, 112, 145, 146, 147, 151, 153, 155, 156, 157, 171, 303, 313, 318, 324, 330, 332, 333, 384, 389, 394, 400, 425, 435, 440, 445, 451, 478, 488, 493, 499, 505, 507, 508, 537, 547, 552, 558, 575, 586, 590, 593, 595, 598, 601, 606, 608, 613, 620, 621, 622, 623, 625, 626, 627, 639, 644, 647, 649, 662, 669, 672, 673, 675, 678, 679, 787, 797, 803, 804, 821, 823, 824, 876, 877, 889, 890, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 911, 915, 916, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 948, 949, 950, 951, 952, 954, 955, 1018, 1021], "c_": 70, "ca": [48, 152, 777, 791, 798], "caa40058": 145, "caaatgtgaa": 145, "caacgtggcc": 145, "caaggaagat": 145, "caagggctgc": 145, "cabcacc": 147, "cac": [336, 344, 404, 411, 455, 463, 511, 519, 564], "cacaattact": 145, "cacaauuacu": 145, "cach": [892, 897, 903, 907, 908, 909, 911, 918, 927, 931], "cache_attr": [903, 918], "cache_attrnam": 897, "cache_typ": 897, "caggcc": 1023, "cagttgaagc": 145, "cagtttgatg": 145, "caguugaagc": 145, "caguuugaug": 145, "cajo": 791, "calcul": [17, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 112, 139, 332, 333, 507, 508, 609, 614, 617, 625, 626, 677, 678, 679, 680, 681, 685, 709, 720, 764, 795, 799, 802, 804, 805, 847, 851, 863, 898, 905, 944, 1015], "call": [1, 55, 79, 80, 85, 86, 106, 107, 143, 146, 153, 156, 158, 198, 219, 321, 329, 332, 353, 372, 391, 399, 420, 442, 450, 472, 496, 504, 507, 528, 537, 554, 557, 572, 668, 678, 679, 775, 791, 801, 831, 891, 893, 894, 897, 908, 909, 911, 924, 925, 931, 940, 945, 952, 979, 981, 982, 992, 1016, 1023], "callabl": [17, 29, 46, 49, 57, 104, 108, 109, 112, 591, 609, 642, 666], "callback": [982, 1023], "caller": [56, 60, 124, 125, 137, 138, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 708, 741, 752, 788, 789, 858, 871, 873, 932, 953], "calucul": 681, "can": [0, 1, 17, 29, 54, 57, 61, 62, 63, 67, 68, 75, 79, 80, 95, 104, 106, 107, 108, 110, 111, 112, 113, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 198, 219, 228, 229, 244, 284, 321, 326, 328, 343, 353, 391, 396, 398, 410, 420, 442, 447, 449, 462, 472, 496, 501, 503, 518, 528, 537, 554, 556, 563, 572, 575, 579, 587, 603, 606, 609, 614, 624, 627, 628, 632, 651, 655, 677, 678, 679, 681, 682, 683, 686, 776, 787, 790, 795, 796, 797, 798, 801, 803, 804, 805, 810, 820, 824, 833, 845, 848, 857, 867, 870, 875, 896, 898, 906, 936, 939, 946, 954, 955, 956, 960, 961, 981, 1004, 1018, 1021, 1023], "cancer": 679, "candid": [362, 805], "cannot": [17, 29, 46, 49, 146, 147, 150, 151, 155, 190, 191, 194, 195, 198, 284, 321, 374, 391, 442, 496, 554, 609, 677, 678, 679, 680, 681, 775, 787, 803, 805, 806, 908, 911, 939, 1016], "canon": [303, 355, 421, 425, 474, 478, 531, 575, 791, 798, 807, 874, 1015], "captur": [357, 423, 476, 533], "cardin": 960, "care": [1, 48, 146, 148, 681], "carlo": 801, "carol": 537, "casava": 154, "casava_ug_15011196b": 154, "case": [1, 48, 61, 62, 63, 71, 109, 140, 144, 146, 151, 153, 155, 157, 159, 284, 298, 303, 333, 346, 356, 413, 422, 465, 475, 478, 508, 521, 532, 566, 573, 587, 609, 614, 628, 679, 685, 790, 795, 797, 805, 895, 928, 954, 981, 982, 1016, 1021], "cast": [1, 151, 284, 321, 391, 442, 496, 554, 627, 628, 683, 787, 849], "cat": [345, 412, 464, 520, 565, 803, 804], "catatttgct": 145, "catcgatcgatcgatgcatgcatgcatg": 146, "catcgtc": 146, "categor": [155, 201, 284, 293, 297, 301, 677, 680, 776, 787], "categori": [1, 155, 156, 686, 687, 697, 698, 708, 719, 720, 730, 731, 742, 752, 753, 763, 764, 774, 776, 787, 801, 803, 804, 818, 823, 867, 1017], "categoricalmetadatacolumn": [248, 284, 295], "categoryresult": 731, "catttagga": 154, "catttgaaaa": 145, "cauauuugcu": 145, "caugcaucguacguacgcaugac": 143, "caus": [17, 155, 198, 372], "caution": 112, "cauucguacguacgcaugac": 143, "caveat": [146, 606], "cb": [156, 803], "cc": [156, 353, 362, 420, 472, 528, 572], "cca": [152, 776, 777, 790, 798], "cca1": 776, "cca2": 776, "cca3": 776, "cca4": 776, "cca5": 776, "cca6": 776, "cca7": 776, "cca8": 776, "cca9": 776, "ccaatggtac": 145, "ccaggtcgat": 145, "ccc": [305, 376, 427, 480, 539], "cccataaata": 145, "cccc": [343, 410, 462, 518, 563], "ccccchhhhhhhhhhhhh": 156, "ccchhhhhhhhhhhhhhh": 156, "cccttaggtc": 145, "ccg": 57, "ccggac": 1023, "ccgggcacggtat": 146, "ccgwllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 362, "ccora": 791, "ccyt": 147, "cd": [61, 145, 148, 372], "cde": 157, "ceil": 863, "cell": [155, 804], "cell_lin": 804, "center": [146, 157, 610, 678, 790, 792, 796, 799], "centr": [606, 612, 613, 794], "centroid": 681, "cepa": 895, "certain": [79, 88, 104, 106, 107, 108, 190, 192, 194, 196, 284, 303, 425, 478, 604, 950], "cg": [47, 353, 420, 472, 528, 537, 572], "cga": [344, 411, 463, 519, 564], "cgac": 143, "cgagc": [310, 381, 432, 485, 544], "cgaggccgggac": 146, "cgatgtc": 146, "cgatgtcgatcgatcgatcgatcag": 146, "cgau": 143, "cgcgaugcaugcau": 143, "cgggacactc": [146, 153], "cgggcacggt": [146, 153], "cgggcasdgca": 154, "cgggcattgca": 154, "cggtacgctt": [146, 153], "cgi": [62, 63, 65, 66, 362, 370, 371], "cgt": [344, 411, 463, 519, 564], "cgtcacttat": 145, "cgttacgctt": [146, 153], "cgttcagggt": [146, 153], "cgttta": 604, "cgugcaugcau": 143, "chain": 148, "challeng": 79, "chanc": [575, 685, 863], "chang": [84, 146, 228, 229, 372, 537, 587, 609, 614, 677, 775, 870, 897, 931, 1023], "chao": [70, 73, 95], "chao1": 74, "chao1_ci": 73, "chapter": [146, 797], "char": [330, 357, 400, 423, 451, 476, 505, 533, 558], "charact": [17, 34, 47, 48, 51, 55, 68, 113, 126, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 284, 303, 308, 310, 313, 315, 317, 318, 319, 323, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 339, 346, 351, 353, 355, 356, 362, 372, 374, 379, 381, 384, 386, 388, 389, 390, 393, 394, 395, 398, 400, 401, 402, 403, 404, 407, 413, 418, 420, 421, 422, 425, 430, 432, 435, 437, 439, 440, 441, 444, 445, 446, 449, 451, 452, 453, 454, 455, 458, 460, 465, 470, 472, 473, 474, 475, 478, 483, 485, 488, 490, 492, 493, 494, 498, 499, 500, 503, 505, 506, 507, 508, 509, 510, 511, 514, 521, 526, 528, 531, 532, 537, 542, 544, 547, 549, 551, 552, 553, 558, 566, 572, 573, 575, 590, 593, 604, 833, 867, 1018], "character": 614, "charg": [146, 153], "charlson": 95, "chase": 77, "check": [17, 147, 170, 190, 194, 220, 229, 232, 243, 576, 577, 615, 616, 627, 628, 629, 630, 651, 652, 653, 686, 790, 791, 804, 830, 842, 958, 959, 979, 1023], "check_length": 1023, "checksum": 980, "chemic": [575, 805], "chen": [70, 95], "chf": [360, 373, 535], "chi": [790, 791], "chichest": 606, "child": [151, 229, 321, 391, 442, 496, 554, 624, 875, 896, 927, 931, 949, 1021], "child1": [892, 907], "child2": [892, 907], "child_index": 946, "children": [151, 625, 875, 880, 884, 892, 896, 907, 909, 916, 920, 927, 931, 933, 940], "chimp": [146, 153], "chisquar": 805, "chiu": 95, "choic": [46, 49, 150, 796], "choos": [79, 155, 791, 801], "chosen": [353, 420, 472, 528, 572, 618, 678, 787, 798, 806], "christoph": 147, "chunk": 153, "ci": [69, 85, 614], "ci_typ": 85, "cigar": [3, 17], "circuit": 1023, "circumst": [81, 425, 804], "citat": 157, "ciufo": 157, "cl": [169, 171, 184, 186, 187, 188, 374, 965], "clade": [934, 941, 954, 1021], "cladogenesi": 685, "claim": [191, 195], "clarifi": 79, "clariti": 151, "clark": [677, 678], "class": [3, 17, 29, 52, 53, 68, 70, 73, 113, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 169, 171, 172, 184, 186, 187, 188, 189, 201, 219, 229, 248, 266, 284, 303, 321, 338, 340, 362, 374, 391, 406, 408, 425, 442, 457, 459, 478, 496, 513, 515, 537, 554, 560, 561, 575, 609, 628, 651, 687, 698, 709, 720, 731, 742, 753, 764, 777, 807, 828, 831, 854, 869, 874, 875, 897, 954, 961, 981, 993, 1004, 1015, 1016, 1018], "classic": 157, "classif": [157, 787], "classmethod": [50, 56, 124, 137, 241, 245, 297, 299, 321, 352, 371, 391, 419, 442, 471, 496, 527, 554, 571, 587, 590, 591, 592, 593, 596, 642, 645, 666, 670, 788, 833, 834, 858, 912, 913, 914, 932], "classproperti": 374, "claus": 296, "clean": [198, 892, 931], "clear": 154, "clinic": [805, 1017], "clip_head": 113, "clip_tail": 113, "clone": 145, "clone_lib": 145, "close": [56, 60, 80, 124, 125, 137, 138, 146, 147, 151, 153, 156, 198, 199, 245, 247, 284, 299, 302, 352, 361, 372, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 609, 645, 650, 670, 676, 708, 741, 752, 788, 789, 858, 873, 932, 953, 980], "closeabl": 198, "closefd": 158, "closer": [1, 1023], "clostridia": [914, 947], "closur": [608, 621, 622, 623], "clover": 145, "clr": [606, 613, 614, 625], "clustal": [56, 60, 1016], "clustal_f": 143, "clustalw": 143, "cluster": [1, 679, 681, 912, 1018], "cmap": [1, 595, 644, 669, 787], "cnt": 804, "co": 685, "co2": 804, "cock": 147, "cocryst": 148, "code": [143, 146, 147, 148, 157, 244, 303, 356, 358, 359, 360, 362, 363, 369, 370, 371, 372, 373, 422, 425, 475, 478, 530, 532, 534, 535, 573, 685, 806, 863, 898, 954, 956, 1018], "codon": [148, 157, 359, 362, 372, 373, 534, 575], "codon_start": 148, "coeff": 679, "coeffici": [70, 678, 679, 685, 777, 798, 801, 900], "coercion": [321, 391, 442, 496, 554], "cogent": 905, "col": [628, 817, 828, 843, 869], "col1": [55, 155], "col2": [55, 155], "col3": [55, 155], "collabor": 148, "collaps": [155, 896], "collapse_f": 823, "collapsed_id": [823, 833, 867], "collat": 682, "collect": [17, 96, 100, 102, 198, 284, 586, 624, 639, 662, 775], "collinear": [776, 791], "colon": 151, "color": [1, 85, 86, 595, 644, 669, 787], "colorbar": [595, 644, 669, 787], "colormap": [595, 644, 669, 787], "colormaps_refer": 787, "column": [1, 17, 29, 53, 54, 55, 108, 139, 140, 146, 148, 149, 152, 153, 156, 157, 201, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 248, 249, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 321, 340, 346, 391, 408, 413, 442, 459, 465, 496, 515, 521, 537, 554, 561, 566, 575, 579, 594, 598, 607, 608, 609, 614, 615, 616, 627, 632, 643, 647, 655, 667, 668, 672, 677, 678, 679, 680, 681, 682, 683, 685, 720, 764, 776, 787, 790, 791, 792, 794, 798, 799, 803, 804, 810, 821, 823, 828, 833, 834, 839, 843, 844, 845, 850, 859, 860, 865, 866, 867, 869, 913, 917, 958, 959, 1015], "column_missing_schem": [284, 297], "column_typ": [293, 297], "columnwis": 792, "com": [84, 141, 142, 143, 678, 980], "comb": 928, "combin": [17, 29, 46, 49, 148, 614, 678, 777, 791, 845], "come": [156, 685, 942], "comma": [149, 150, 151], "command": [155, 157, 372], "comment": [145, 146, 148, 149, 150, 156, 157, 284], "comment_char": 151, "commit": 801, "common": [47, 52, 53, 64, 79, 95, 141, 146, 147, 148, 155, 156, 157, 338, 340, 406, 408, 457, 459, 513, 515, 560, 561, 607, 628, 720, 821, 822, 875, 900, 908, 921, 923, 946, 947, 955, 1018, 1021, 1022], "commonli": [151, 155, 575, 681, 798, 1021], "commun": [70, 75, 79, 95, 98, 103, 106, 107, 614, 627, 677, 678, 680, 681, 776, 787, 791, 798, 805, 1015], "compact": 893, "compani": 804, "compar": [1, 89, 106, 112, 141, 142, 246, 342, 347, 348, 349, 350, 353, 414, 415, 416, 417, 420, 466, 467, 468, 469, 472, 517, 522, 523, 524, 525, 528, 567, 568, 569, 570, 572, 577, 584, 609, 627, 630, 637, 653, 660, 679, 685, 803, 804, 805, 898, 899, 900, 928, 958, 959, 1018, 1021], "compare_rfd": [899, 900], "compare_subset": [898, 900, 941, 942, 1021], "compare_tip_dist": [898, 899, 906, 915, 944, 1021], "comparison": [106, 107, 609, 614, 685, 803, 898, 958, 1021], "compat": [79, 95, 106, 107, 155, 157, 362, 609], "compil": [329, 357, 399, 423, 450, 476, 504, 533, 557, 806], "complement": [342, 354, 372, 517, 529, 1018], "complement_map": [320, 495], "complet": [67, 85, 86, 147, 148, 151, 801, 957, 1016], "complex": [151, 1023], "compliant": [303, 425, 478], "complic": [575, 1016], "compon": [606, 608, 618, 619, 620, 621, 622, 623, 753, 777, 790, 796, 1023], "compos": [48, 147, 154, 284], "composit": [75, 79, 95, 198, 791, 1015], "compound": 614, "comprehens": 157, "compress": [140, 158, 198, 833, 843, 844, 845, 867], "compresslevel": [158, 198], "comput": [0, 1, 47, 48, 51, 70, 73, 79, 86, 97, 103, 104, 105, 106, 107, 108, 109, 112, 229, 326, 330, 396, 400, 447, 451, 501, 505, 556, 558, 591, 603, 604, 605, 609, 614, 620, 624, 625, 626, 627, 642, 666, 677, 678, 679, 680, 681, 682, 685, 686, 687, 697, 719, 720, 730, 731, 742, 753, 763, 764, 774, 776, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 906, 942, 944, 954, 980, 1018, 1021], "computation": 17, "concat": [54, 55], "concaten": [54, 156, 241, 321, 391, 442, 496, 554, 824], "concentr": [75, 805], "concept": [88, 624], "conceptu": [147, 680], "concern": [17, 150], "concis": 609, "conclud": 609, "concret": 248, "condens": [651, 663, 668, 673], "condensed_form": [651, 668, 673], "condit": [1, 85, 86, 804, 863], "confid": [1, 69, 74, 78, 85, 614, 801, 802, 875, 895], "confirm": [1, 677, 681, 805], "conflict": 903, "conform": 374, "confus": 791, "conjunct": 681, "connect": [79, 81, 95, 151, 875, 924, 931], "consens": 954, "consensu": 954, "consensus_tre": 954, "conserv": [79, 84, 85, 95, 143, 321, 391, 442, 496, 554, 609, 627], "consid": [48, 70, 79, 84, 95, 106, 107, 146, 151, 284, 308, 343, 379, 410, 430, 462, 483, 518, 542, 563, 604, 606, 621, 681, 682, 775, 803, 804, 805, 958, 981], "consider": [84, 95, 248, 284, 804], "consist": [142, 146, 147, 149, 152, 153, 155, 156, 157, 293, 356, 422, 475, 532, 537, 573, 575, 804, 925, 945], "constant": [78, 606, 609, 663, 679, 803], "constitut": [1, 575, 593], "constrain": [777, 791], "constraint": [152, 777, 791, 798], "construct": [50, 59, 148, 157, 213, 217, 218, 219, 220, 248, 260, 264, 265, 278, 282, 283, 284, 301, 575, 590, 593, 599, 620, 627, 776, 820, 821, 822, 823, 824, 839, 848, 854, 856, 857, 861, 862, 869, 870, 903, 913, 914, 955, 1015, 1016, 1021], "constructor": [29, 46, 49, 57, 143, 146, 147, 148, 153, 154, 156, 170, 183, 193, 303, 346, 362, 413, 425, 465, 478, 521, 537, 566, 575, 683], "consum": [29, 49, 171, 303, 362, 425, 478, 537], "consumpt": [682, 796, 823], "contain": [1, 17, 29, 47, 49, 55, 61, 62, 63, 64, 65, 66, 67, 70, 104, 105, 108, 109, 112, 139, 141, 143, 144, 145, 146, 147, 149, 150, 152, 153, 155, 156, 157, 158, 189, 201, 211, 213, 217, 218, 258, 260, 264, 265, 266, 276, 278, 282, 283, 284, 293, 294, 298, 301, 303, 305, 310, 323, 325, 330, 331, 334, 335, 336, 339, 343, 344, 345, 351, 353, 356, 362, 376, 381, 393, 395, 400, 401, 402, 403, 404, 407, 410, 411, 412, 418, 420, 422, 425, 427, 432, 444, 446, 451, 452, 453, 454, 455, 458, 460, 462, 463, 464, 470, 472, 473, 475, 478, 480, 485, 498, 500, 505, 506, 509, 510, 511, 514, 518, 519, 520, 526, 528, 532, 539, 544, 558, 563, 564, 565, 572, 573, 589, 591, 595, 603, 604, 609, 624, 625, 627, 641, 642, 644, 665, 666, 669, 673, 677, 678, 679, 680, 681, 682, 684, 686, 776, 787, 791, 823, 833, 834, 863, 867, 893, 897, 905, 935, 954, 955, 979, 982, 1004, 1018, 1021], "content": [29, 47, 145, 146, 147, 148, 149, 151, 155, 158, 169, 170, 171, 298, 303, 320, 321, 324, 327, 354, 358, 391, 394, 397, 442, 445, 448, 478, 495, 496, 499, 502, 529, 530, 554, 1018], "context": [1, 17, 199, 200, 604, 787, 955], "contextu": 981, "contigu": [149, 219, 343, 410, 462, 518, 563], "conting": [614, 798, 807, 871], "continu": [61, 62, 63, 776], "contrast": [95, 624], "contribut": [47, 95, 685, 790, 795], "control": [55, 146, 677, 679, 680, 686, 798, 801, 803, 804, 805, 821, 831, 848], "control_cat": [803, 804], "controversi": 91, "conveni": [0, 17, 56, 60, 94, 124, 125, 137, 138, 192, 196, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953, 1022], "convent": [79, 106, 107, 141, 145, 148], "convers": [147, 198, 663, 848], "convert": [1, 141, 143, 145, 146, 148, 151, 153, 156, 198, 217, 218, 248, 264, 265, 282, 283, 301, 303, 326, 355, 356, 396, 421, 422, 425, 447, 474, 475, 478, 501, 531, 532, 537, 556, 573, 628, 668, 678, 806, 850, 855, 857, 865, 866, 895, 960], "convert_underscor": 151, "convienc": [921, 923], "coo_matrix": 625, "coord": [686, 687, 709, 720, 753, 764], "coord_data": 686, "coordin": [1, 113, 148, 154, 219, 229, 232, 240, 241, 246, 614, 625, 681, 686, 720, 753, 764, 777, 787, 790, 796, 797, 798], "copi": [29, 32, 33, 146, 153, 156, 229, 230, 231, 306, 307, 353, 377, 378, 420, 428, 429, 472, 481, 482, 528, 537, 540, 541, 572, 597, 600, 628, 646, 648, 671, 674, 799, 806, 871, 876, 877, 904, 936, 937, 943, 951, 952, 975, 976, 977], "copy_from": 229, "copyright": [146, 153], "corbet": 80, "cornish": [303, 374, 425, 478, 537], "cornwel": 95, "corr": 1, "corr_coeff": [679, 685], "correct": [73, 74, 81, 146, 609, 614, 931, 937, 1016], "correl": [1, 620, 626, 627, 678, 679, 682, 684, 685, 777, 791, 792, 798, 801, 805, 900, 1021], "correspond": [1, 54, 79, 95, 106, 107, 113, 144, 146, 147, 149, 154, 156, 191, 195, 214, 261, 279, 284, 333, 346, 362, 372, 413, 465, 508, 521, 534, 535, 566, 579, 609, 624, 632, 655, 777, 790, 791, 794, 805, 823, 828, 833, 835, 837, 838, 849, 850, 867, 869, 870, 875, 908, 913, 917, 926, 947, 954], "cospeci": 685, "cost": [620, 626], "costli": 0, "could": [1, 29, 86, 144, 146, 147, 154, 158, 190, 192, 194, 196, 609, 614, 628, 677, 679, 680, 681, 682, 685, 787, 803, 862, 921, 923, 956, 957, 1016], "count": [0, 29, 46, 49, 51, 55, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 140, 143, 146, 147, 153, 156, 330, 332, 333, 345, 347, 349, 400, 412, 414, 416, 451, 464, 466, 468, 505, 507, 508, 520, 522, 524, 558, 565, 567, 569, 605, 606, 609, 614, 685, 791, 797, 804, 805, 806, 823, 837, 853, 857, 863, 899, 900, 926, 954, 1016], "counts2": 805, "counts_001": 801, "counts_010": 801, "counts_100": 801, "counts_interv": [801, 804, 805], "coupl": 229, "covari": [95, 792], "cover": [229, 587, 1021], "coverag": [70, 78, 82, 86, 141, 142], "cprofil": 1023, "cran": [624, 677, 678, 679, 680, 681], "crd": 146, "creat": [1, 17, 29, 46, 49, 50, 54, 56, 57, 58, 59, 124, 137, 145, 146, 149, 151, 153, 155, 172, 183, 193, 198, 199, 217, 218, 219, 229, 240, 241, 245, 264, 265, 282, 283, 299, 301, 303, 352, 353, 374, 419, 420, 425, 471, 472, 478, 527, 528, 537, 571, 572, 590, 591, 593, 595, 596, 598, 599, 609, 618, 619, 627, 642, 644, 645, 647, 666, 669, 670, 672, 673, 683, 685, 720, 776, 787, 788, 807, 823, 830, 831, 837, 838, 840, 841, 843, 848, 849, 854, 855, 856, 858, 859, 861, 862, 864, 869, 870, 872, 874, 896, 897, 918, 932, 955, 1018, 1021, 1023], "create_cach": 918, "create_d": [807, 874], "create_format": [158, 169, 170, 171], "creation": [833, 867, 868], "creation_d": [867, 868], "credibl": 614, "criteria": [212, 244, 259, 277, 296, 803, 950], "critic": [801, 802, 804, 805, 895], "crop": 157, "cross": 148, "cross_refer": 145, "csc": [810, 867], "csc_matrix": 867, "csr": [810, 867], "csr_matrix": 867, "csv": [141, 150, 1016], "ctaa": 148, "ctaacccccttttctcaga": 0, "ctagctagta": 145, "ctataaaaaa": 148, "ctattatact": 145, "ctc": [356, 422, 475, 532, 573], "ctcaaaagtc": [356, 422, 475, 532, 573], "ctcaaaattc": 145, "ctcttctagt": 145, "ctgtttgtta": 145, "cttcatgtat": 145, "cttccaattt": 145, "cttgacatag": 145, "cttgatgata": 145, "cuaa": 148, "cual": 155, "cuauaaaaaa": 148, "cug": 372, "cuguuuguua": 145, "cultur": 804, "cumbersom": 155, "cumul": [84, 103, 143, 144], "cuppini": 81, "curat": 157, "current": [139, 141, 144, 145, 146, 147, 148, 153, 155, 156, 157, 229, 243, 284, 293, 360, 373, 535, 587, 609, 679, 764, 790, 796, 833, 867, 897, 910, 919, 920, 925, 1015], "curti": 1, "curv": [81, 84, 91, 791, 801, 804, 805], "custom": [0, 1, 157, 303, 326, 362, 363, 374, 396, 425, 447, 478, 501, 556, 787, 833, 861, 867, 1015, 1018], "custom_metr": [326, 396, 447, 501, 556], "customsequ": 374, "cutoff": [609, 954], "cuucauguau": 145, "cuugacauag": 145, "cw": 156, "cy": 425, "cyanogen": 145, "cystein": 425, "cytokin": 804, "cytophagia": [914, 947], "cytosin": [303, 478], "czech": 895, "d": [1, 17, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 141, 142, 148, 151, 152, 303, 425, 478, 586, 590, 595, 601, 606, 607, 608, 609, 612, 613, 615, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 639, 644, 649, 662, 669, 673, 675, 677, 678, 679, 680, 681, 685, 720, 742, 764, 777, 787, 795, 804, 805, 806, 807, 824, 839, 840, 860, 874, 876, 877, 890, 891, 893, 895, 896, 897, 898, 899, 901, 902, 904, 905, 906, 908, 909, 910, 911, 915, 921, 922, 923, 924, 925, 931, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 949, 950, 951, 952, 954, 955, 1016, 1018, 1021, 1023], "d1": [157, 1018], "d136": 157, "d143": 157, "d2": 1018, "d3": 1018, "d_": [90, 100], "d_a": 848, "d_b": 848, "d_d": 151, "d_w": 103, "d_x": 679, "d_y": 679, "daili": 157, "danger": 1, "dash": 155, "data": [1, 55, 79, 81, 91, 95, 104, 106, 107, 108, 109, 112, 140, 141, 144, 145, 147, 149, 150, 152, 154, 155, 156, 157, 198, 201, 248, 266, 284, 293, 303, 374, 425, 478, 537, 577, 579, 597, 606, 607, 608, 609, 610, 613, 614, 616, 618, 620, 624, 626, 628, 630, 632, 646, 651, 653, 655, 671, 678, 685, 686, 708, 741, 752, 775, 776, 787, 790, 791, 795, 801, 803, 804, 805, 807, 808, 810, 817, 818, 820, 823, 828, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 849, 852, 854, 855, 856, 857, 859, 861, 862, 864, 865, 866, 867, 869, 870, 871, 872, 913, 944, 948, 955, 979, 982, 1015, 1016, 1017, 1018, 1023], "data_fh": 832, "data_fram": 678, "data_pump": 834, "data_typ": [833, 867], "databas": [141, 142, 145, 148, 155, 157, 219, 913], "datafram": [1, 29, 53, 108, 141, 142, 157, 217, 248, 264, 282, 284, 301, 303, 340, 408, 425, 459, 478, 515, 537, 561, 586, 598, 601, 609, 614, 639, 647, 649, 662, 672, 675, 677, 678, 680, 681, 682, 686, 720, 764, 776, 777, 787, 790, 791, 797, 798, 803, 804, 821, 850, 866, 913, 958, 1018], "datapoint": 91, "dataset": [109, 139, 144, 606, 614, 681, 776, 791, 796, 833, 867], "datatyp": [139, 775, 806], "date": [145, 833, 834, 867, 868], "datetim": [867, 868], "dayhoff": 587, "db": 146, "db_xref": [145, 148], "dbsourc": 145, "dbxref": [148, 149], "ddbj": 148, "ddl": [833, 867], "ddof": [620, 626, 795, 799], "de": [145, 156], "deal": [144, 145, 197, 606, 618, 796, 1016], "debug": [70, 981, 992, 1023], "debug_post_st": 1023, "debug_pre_st": 1023, "debug_runtim": 1023, "debug_trac": 1023, "decemb": 147, "decid": [796, 1023], "decim": [151, 155, 959], "declar": [152, 155], "decod": [147, 198], "decomposit": [95, 109], "decompress": 198, "decor": [158, 169, 170, 171, 229, 374, 897, 954, 961, 981, 993, 994, 1004, 1015], "decreas": 775, "deem": 791, "deep": [33, 71, 231, 306, 307, 377, 378, 428, 429, 481, 482, 537, 540, 541, 588, 600, 640, 648, 664, 674], "deepcopi": [33, 876, 877, 901, 951, 952], "deeper": [106, 107], "def": [143, 158, 169, 170, 171, 326, 374, 396, 447, 501, 556, 805, 1023], "default": [0, 1, 17, 29, 46, 47, 49, 55, 57, 60, 61, 62, 63, 65, 66, 70, 74, 84, 91, 95, 98, 104, 108, 125, 138, 141, 146, 148, 149, 150, 151, 153, 154, 155, 158, 159, 169, 171, 184, 186, 212, 244, 247, 248, 259, 277, 284, 296, 302, 326, 343, 355, 356, 359, 360, 361, 362, 372, 373, 396, 410, 421, 422, 424, 447, 462, 474, 475, 477, 501, 518, 531, 532, 534, 535, 536, 556, 563, 573, 574, 586, 591, 595, 602, 607, 608, 609, 614, 615, 616, 618, 619, 628, 639, 642, 644, 650, 662, 666, 669, 676, 678, 679, 681, 682, 683, 720, 775, 787, 789, 795, 796, 798, 799, 806, 817, 823, 828, 831, 833, 838, 840, 843, 844, 845, 847, 848, 851, 853, 854, 855, 856, 857, 861, 863, 867, 868, 869, 870, 872, 873, 900, 925, 944, 953, 954, 955, 958, 959, 979, 982, 1004, 1016, 1018, 1021, 1023], "default_column": 141, "default_gap_char": [47, 48, 55, 374], "default_missing_schem": [284, 297], "default_write_format": 171, "defaultdict": 849, "defer": 229, "defin": [1, 29, 55, 57, 63, 66, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 112, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 219, 229, 243, 284, 308, 326, 344, 345, 355, 356, 362, 363, 370, 371, 379, 396, 411, 412, 421, 422, 430, 447, 463, 464, 474, 475, 483, 501, 519, 520, 531, 532, 542, 556, 564, 565, 573, 575, 587, 592, 595, 605, 607, 608, 612, 613, 615, 616, 617, 621, 622, 623, 628, 644, 669, 679, 682, 787, 801, 831, 833, 848, 856, 867, 872, 951, 952, 955, 958, 992, 1016, 1018, 1021, 1023], "definit": [1, 47, 75, 113, 126, 144, 145, 146, 147, 148, 149, 157, 303, 320, 321, 324, 325, 327, 334, 335, 339, 351, 354, 357, 358, 359, 360, 362, 372, 373, 374, 391, 394, 395, 397, 402, 403, 407, 418, 423, 425, 442, 445, 446, 448, 453, 454, 458, 470, 476, 478, 495, 496, 499, 500, 502, 509, 510, 514, 526, 529, 530, 533, 534, 535, 554, 587, 833, 867, 955, 1018, 1022, 1023], "definite_char": 374, "deflin": 146, "degap": [332, 333, 507, 508, 1018], "degener": [47, 48, 113, 126, 144, 145, 146, 147, 148, 149, 303, 320, 321, 323, 324, 327, 332, 333, 334, 335, 339, 351, 354, 355, 357, 358, 359, 360, 362, 372, 373, 374, 391, 393, 394, 397, 402, 403, 407, 418, 421, 423, 425, 442, 444, 445, 448, 453, 454, 458, 470, 474, 476, 478, 495, 496, 498, 499, 502, 507, 508, 509, 510, 514, 526, 529, 530, 531, 533, 534, 535, 554, 587, 1018], "degenerate_map": [327, 374, 397, 448, 502, 1018], "degenerate_mod": 48, "degre": [75, 95, 143, 614, 620, 626, 795, 802, 804], "deiman": 156, "del": [150, 355, 421, 474, 531, 776], "deleg": 880, "delet": [229, 918, 934, 962], "deleteri": 957, "delgado": [606, 624], "delim": 828, "delimit": [149, 150, 152, 154, 157, 216, 263, 281, 300, 627, 828, 832, 835, 869], "delta": [95, 618, 619, 795], "demograph": 1017, "demonstr": [52, 53, 158, 338, 340, 406, 408, 457, 459, 513, 515, 560, 561], "dempqsv": [356, 422, 475, 532, 573], "demultiplex": 775, "den": 624, "denomin": [607, 624], "denominator_col": 607, "denominator_idx": [607, 608], "denot": [75, 95, 99, 102, 103, 146, 609, 614, 677, 680, 681], "dens": [140, 823, 826, 831, 834, 843, 844, 845, 854, 865, 866, 874], "densiti": 870, "dep": 801, "depend": [3, 74, 77, 78, 79, 95, 104, 106, 107, 108, 146, 147, 156, 169, 170, 171, 198, 333, 508, 579, 632, 655, 679, 681, 683, 742, 796, 833, 876, 877, 900, 901, 904, 948, 954, 981, 992, 1016, 1021, 1023], "deprec": [67, 68, 79, 93, 95, 106, 107, 112, 339, 351, 407, 418, 458, 470, 514, 526, 609, 619], "depth": [95, 776, 801, 804, 805, 948, 1021], "deriv": [62, 63, 65, 66, 145, 343, 410, 462, 518, 537, 563, 615, 616, 624, 804, 955], "derives_from": 149, "desc": 537, "descend": [58, 95, 246, 875, 905, 917, 925, 934, 941, 942, 945, 948, 1021], "describ": [0, 1, 48, 61, 64, 71, 72, 75, 78, 79, 82, 83, 85, 86, 87, 88, 95, 96, 99, 106, 107, 112, 140, 145, 146, 147, 148, 149, 152, 153, 155, 156, 216, 263, 281, 284, 297, 300, 343, 346, 410, 413, 462, 465, 518, 521, 537, 563, 566, 597, 620, 626, 627, 646, 663, 671, 679, 685, 797, 823, 829, 833, 867, 868, 917, 955, 1017, 1018, 1021], "descript": [17, 70, 79, 84, 89, 90, 100, 104, 106, 107, 108, 139, 141, 146, 147, 148, 149, 151, 153, 155, 157, 201, 248, 266, 579, 632, 655, 867, 898, 954, 1018, 1021], "description_newline_replac": [146, 147], "descriptor": [148, 797, 975, 976, 977], "deseri": [627, 777], "design": [1, 109, 139, 140, 145, 155, 284, 627, 803], "desir": [81, 85, 141, 150, 796, 850, 862, 938, 1023], "destin": 537, "detail": [17, 54, 55, 67, 68, 95, 109, 111, 112, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 201, 248, 266, 284, 373, 537, 579, 632, 655, 678, 682, 787, 790, 791, 798, 955, 1016], "detect": [146, 148, 155, 191, 195, 609, 679, 805, 820], "determin": [1, 31, 34, 43, 52, 53, 79, 95, 104, 106, 107, 108, 150, 158, 187, 188, 198, 202, 208, 211, 215, 249, 255, 258, 262, 267, 273, 276, 280, 284, 285, 291, 293, 294, 305, 308, 317, 334, 335, 336, 337, 338, 339, 340, 342, 363, 369, 376, 379, 388, 402, 403, 404, 405, 406, 407, 408, 427, 430, 439, 453, 454, 455, 456, 457, 458, 459, 460, 480, 483, 492, 509, 510, 511, 512, 513, 514, 515, 517, 539, 542, 551, 559, 560, 561, 584, 609, 637, 660, 681, 685, 775, 796, 801, 803, 804, 808, 823, 954, 1023], "determinist": [80, 677, 681], "develop": [1, 3, 109, 112, 145, 155, 169, 170, 171, 609, 955, 1015, 1023], "deviat": [678, 795, 798, 799, 802], "df": [141, 142, 157, 598, 614, 647, 672, 677, 678, 681, 787, 802, 866], "di": [81, 1018], "diag": 845, "diagnos": 1023, "diagon": [139, 666, 673, 845], "diagram": 219, "dict": [17, 29, 50, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 124, 125, 137, 138, 145, 148, 170, 190, 191, 192, 194, 195, 196, 219, 240, 244, 245, 247, 284, 297, 299, 302, 303, 330, 345, 352, 359, 360, 361, 400, 412, 419, 424, 425, 451, 464, 471, 477, 478, 505, 520, 527, 534, 535, 536, 537, 558, 565, 571, 574, 575, 590, 596, 599, 602, 645, 650, 670, 676, 679, 682, 742, 788, 789, 818, 819, 833, 834, 835, 838, 848, 849, 856, 858, 867, 872, 873, 913, 917, 926, 932, 946, 953, 981, 1018, 1023], "dict_of_metadata": 819, "dictionari": [50, 52, 57, 59, 68, 156, 157, 219, 230, 231, 240, 244, 338, 406, 457, 513, 537, 560, 590, 599, 679, 831, 913], "did": [70, 146, 154, 190, 194, 199, 1023], "didn": [146, 1023], "diet": 803, "differ": [0, 1, 34, 47, 48, 50, 61, 62, 63, 74, 79, 84, 96, 100, 106, 107, 142, 144, 146, 147, 153, 156, 157, 158, 248, 305, 308, 317, 321, 322, 326, 341, 342, 347, 348, 349, 350, 353, 359, 362, 369, 376, 379, 388, 391, 392, 396, 409, 414, 415, 416, 417, 420, 427, 430, 439, 442, 443, 447, 461, 466, 467, 468, 469, 472, 480, 483, 492, 496, 497, 501, 516, 517, 522, 523, 524, 525, 528, 534, 539, 542, 551, 554, 555, 556, 562, 567, 568, 569, 570, 572, 579, 604, 609, 614, 627, 632, 655, 677, 680, 681, 685, 709, 764, 776, 790, 791, 796, 804, 805, 870, 898, 899, 958, 959, 975, 976, 977, 1018, 1021], "differenti": [609, 614], "difficult": 1, "digit": 155, "dim": 144, "dimens": [41, 113, 126, 144, 152, 153, 585, 607, 611, 615, 616, 638, 661, 681, 777, 786, 787, 796, 797], "dimension": [1, 144, 597, 608, 621, 622, 623, 628, 646, 663, 671, 776, 790, 797, 798, 804, 805, 859, 1019], "direct": [155, 157, 216, 263, 281, 300, 791, 875], "direct_io": [828, 868, 869], "direction": 959, "directli": [29, 46, 49, 155, 303, 362, 425, 478, 537, 603, 609, 685, 868, 869, 981, 1023], "dirichilet": 614, "dirichlet": 614, "disabl": [1, 79, 104, 106, 107, 108, 1023], "disallow": [151, 156, 679], "disallow_negative_branch_length": 955, "discard": [148, 679, 831], "discov": [1, 903], "discoveri": 1, "discrep": 75, "discret": 102, "discuss": [95, 106, 107, 155, 1023], "diseas": [609, 679, 821], "disjoint": [824, 954], "disjointiderror": [820, 824], "disk": [146, 284, 628], "dism": 620, "disperison": 681, "dispers": 681, "displai": [145, 330, 353, 362, 400, 420, 451, 472, 505, 528, 558, 572, 682, 777], "disrupt": [328, 398, 449, 503, 1018], "dissimilar": [105, 108, 150, 576, 577, 579, 584, 585, 586, 588, 589, 591, 594, 595, 597, 600, 601, 620, 627, 628, 629, 630, 632, 637, 638, 639, 640, 641, 642, 643, 644, 646, 648, 649, 652, 653, 655, 660, 661, 662, 664, 665, 667, 669, 671, 674, 675], "dissimilaritymatrix": [139, 150, 575, 577, 579, 584, 586, 588, 589, 591, 595, 596, 598, 600, 601, 602, 620, 627, 651, 653, 655, 660, 662, 664, 665, 669, 672, 674, 675, 683], "dist": [900, 915], "dist_f": 900, "distanc": [1, 17, 95, 105, 106, 107, 108, 109, 111, 112, 139, 150, 151, 347, 349, 414, 416, 466, 468, 522, 524, 567, 569, 575, 586, 589, 595, 597, 601, 607, 620, 684, 685, 787, 790, 791, 793, 796, 798, 875, 889, 890, 898, 900, 915, 937, 944, 955, 1015, 1021], "distance_filt": 17, "distance_from_r": 900, "distance_from_r_squar": 900, "distance_matrix": [677, 678, 680, 681, 793, 796], "distancematrix": [108, 109, 112, 139, 150, 598, 603, 620, 627, 628, 647, 677, 678, 679, 680, 681, 682, 683, 685, 787, 796, 944, 955], "distant": 915, "distinct": [47, 92, 93, 102, 604, 627], "distinguish": [75, 95], "distort": 606, "distribut": [78, 145, 614, 621, 683, 796, 801, 802, 804, 805, 863], "div": 157, "diverg": 1, "divers": [627, 806, 1015], "divid": [143, 624, 793, 795, 799, 823], "divis": [362, 624, 799], "dj": 146, "dm": [139, 579, 586, 595, 598, 601, 627, 632, 639, 644, 647, 649, 655, 662, 669, 672, 673, 675, 677, 678, 681, 682, 787, 955], "dm1": 682, "dm2": 682, "dm_fh": 627, "dm_from_np": 627, "dmp": 913, "dna": [0, 29, 30, 31, 32, 33, 34, 39, 41, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 62, 65, 67, 143, 145, 146, 147, 148, 149, 153, 154, 156, 362, 374, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 407, 408, 410, 418, 422, 423, 442, 444, 445, 446, 448, 449, 452, 453, 454, 455, 458, 459, 462, 470, 475, 476, 478, 495, 496, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 514, 515, 517, 518, 526, 529, 530, 532, 533, 537, 554, 561, 563, 573, 628, 1016, 1018], "dna_seq": [145, 146, 148], "dnaful": 587, "do": [1, 46, 49, 91, 139, 144, 146, 153, 155, 158, 198, 303, 308, 350, 379, 417, 425, 430, 469, 478, 483, 525, 537, 542, 570, 604, 609, 679, 682, 720, 798, 810, 831, 854, 863, 895, 908, 938, 939, 1021, 1023], "do_someth": 1023, "do_something_awesom": 1023, "do_something_els": 1023, "doc": [108, 143, 145, 146, 153, 155, 216, 219, 263, 281, 284, 297, 300, 597, 628, 646, 651, 663, 671, 867, 954], "docstr": [201, 248, 266], "doctest": 833, "document": [1, 36, 111, 140, 146, 148, 153, 154, 189, 609, 787, 807, 833, 867, 874, 875, 1016, 1020], "doe": [29, 46, 47, 49, 55, 58, 67, 79, 95, 141, 143, 144, 146, 147, 149, 151, 153, 156, 198, 211, 258, 276, 294, 321, 362, 363, 369, 372, 391, 442, 496, 554, 587, 597, 604, 627, 646, 668, 671, 677, 679, 681, 720, 796, 804, 805, 827, 849, 850, 867, 891, 900, 911, 924, 937, 944, 947, 954, 958, 1016], "doesn": [55, 146, 155, 297, 372, 621, 625, 790, 796, 800, 937, 956, 1022], "doi": [17, 67, 145, 147, 620, 626, 955], "domain": [156, 425, 913, 947], "domin": [69, 71, 77, 88, 99, 100, 103], "domrachev": 157, "don": [1, 17, 55, 146, 155, 332, 333, 507, 508, 607, 609, 682, 798, 801, 805, 899, 900, 937, 955], "done": [48, 609, 681, 708, 741, 752, 810], "doubl": [70, 71, 72, 73, 75, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 103, 190, 194, 790, 796], "doubleton": [1, 73, 74, 76, 78, 94], "doubt": 155, "download": [145, 148, 157], "dqyhrykedvgimkdqnmdsyrfsiswprilpkgklsgginhegikyynnli": 145, "dr": 145, "draw": [614, 801, 803, 804, 805, 893, 936], "draw_mod": [801, 805], "drawn": [614, 683, 801, 804, 805], "driver": [1, 77], "drop": [229, 293, 310, 381, 432, 485, 544, 682, 776, 791, 831, 934, 954], "drop_all_miss": 293, "drop_all_uniqu": 293, "drop_missing_valu": [212, 215, 259, 262, 277, 280], "drop_zero_vari": 293, "dt": 145, "dt_rich": 823, "dtype": [0, 1, 29, 34, 46, 47, 48, 49, 51, 54, 55, 57, 58, 143, 144, 146, 147, 153, 154, 156, 284, 301, 320, 321, 323, 324, 325, 331, 348, 350, 351, 354, 356, 391, 393, 394, 395, 401, 415, 417, 418, 422, 442, 444, 445, 446, 452, 467, 469, 470, 473, 475, 495, 496, 498, 499, 500, 506, 523, 525, 526, 529, 532, 537, 554, 568, 570, 573, 609, 628, 673, 677, 681, 776, 807, 847, 851, 865, 874, 946, 1018], "due": [93, 151, 243, 618, 619, 678, 681, 791, 804], "dump": [157, 1021, 1023], "dunn": 145, "duplic": [55, 112, 147, 155, 156, 243, 356, 422, 475, 532, 573, 589, 641, 665, 978], "duplicatenodeerror": [79, 95, 104, 106, 107, 108, 903], "duplicateregistrationerror": [169, 170, 171], "dure": [55, 146, 220, 321, 391, 442, 496, 554, 681, 848, 868, 869, 979], "dx": 81, "e": [0, 1, 17, 30, 41, 48, 51, 52, 58, 75, 80, 81, 82, 83, 84, 89, 90, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 109, 112, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 219, 242, 248, 284, 297, 298, 321, 329, 330, 338, 372, 391, 399, 400, 406, 425, 442, 450, 451, 457, 460, 473, 496, 504, 505, 513, 530, 537, 554, 557, 558, 560, 575, 579, 586, 595, 601, 604, 609, 614, 624, 625, 627, 628, 632, 639, 644, 649, 651, 655, 662, 669, 673, 675, 677, 678, 679, 680, 681, 787, 793, 794, 803, 804, 806, 824, 828, 833, 850, 863, 867, 875, 876, 877, 890, 891, 893, 895, 896, 897, 901, 902, 904, 905, 906, 908, 909, 910, 911, 915, 919, 921, 922, 923, 924, 925, 931, 935, 936, 937, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 959, 978, 981, 1016, 1018, 1021, 1023], "e1004075": [620, 626], "e157": 95, "e_": [615, 616], "e_1": [615, 616], "e_d": 100, "e_h": 96, "e_i": 616, "e_matrix": 794, "each": [0, 1, 17, 29, 39, 44, 47, 48, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 79, 91, 104, 106, 107, 108, 109, 112, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 219, 230, 231, 240, 284, 298, 303, 313, 318, 321, 327, 330, 343, 345, 360, 373, 384, 389, 391, 397, 400, 410, 412, 425, 435, 440, 442, 448, 451, 462, 464, 488, 493, 496, 502, 505, 518, 520, 535, 537, 547, 552, 554, 558, 563, 565, 575, 579, 589, 591, 604, 609, 611, 614, 618, 619, 621, 622, 623, 624, 627, 632, 641, 642, 655, 665, 666, 677, 678, 679, 680, 681, 682, 685, 686, 687, 697, 698, 709, 719, 720, 730, 731, 753, 763, 764, 774, 775, 776, 777, 787, 791, 792, 794, 795, 796, 798, 801, 804, 805, 823, 831, 833, 844, 850, 852, 864, 867, 870, 948, 954, 1016, 1018, 1023], "earlier": 1023, "earth": 109, "earthmicrobiom": 109, "easi": [146, 147, 155], "easier": [219, 575], "easili": [150, 1018], "ebi": [61, 64, 145, 148, 219], "ec_numb": 145, "ecoli": [142, 820], "ecolog": [1, 77, 776, 791, 796], "ecologi": [1, 77, 79, 80, 87, 88, 103, 609, 677, 678, 679, 680, 776, 790, 791, 796, 797, 798], "ecologist": 790, "ed": [81, 144], "edg": [151, 685, 790, 893, 946], "edit": [155, 679, 797], "editor": 146, "edu": [70, 74, 143, 146, 151, 153, 954], "educ": [0, 803], "edward": 148, "eeb": [70, 74], "eeeee": 156, "eeeeeeee": 156, "eeeeeeeeeeh": 156, "eeeeeeeehhh": 156, "effect": [17, 67, 77, 106, 107, 155, 198, 356, 422, 475, 532, 573, 586, 639, 662, 801, 803, 804, 805], "effici": [0, 150, 668], "efficiencywarn": 806, "effort": 148, "egozcu": [606, 615, 616, 620, 624, 626], "eh": 79, "eifcyilkinitilqfsitengmnefndatlpveeallntyridyyyrhlyi": 145, "eigendecomposit": [681, 796], "eigenvalu": [681, 777, 790, 796, 798], "eigenvector": [681, 791, 796], "eigh": [681, 796], "eight": 805, "eigval": [152, 777], "either": [1, 29, 36, 55, 57, 61, 62, 63, 95, 141, 155, 156, 169, 170, 171, 284, 333, 343, 374, 410, 462, 508, 518, 563, 605, 679, 681, 775, 787, 790, 795, 803, 805, 821, 822, 848, 856, 864, 954], "elem": [833, 867], "element": [17, 150, 198, 579, 591, 611, 615, 616, 632, 642, 655, 666, 764, 787, 790, 794, 795, 799, 802, 804, 805, 806, 807, 810, 833, 836, 852, 867, 978], "elementwis": 793, "elev": 678, "ellaps": 875, "elong": 949, "els": [15, 16, 151, 158, 170, 190, 194, 304, 357, 375, 423, 426, 476, 479, 533, 537, 538, 792, 831, 855, 870, 897], "elsevi": [679, 776, 790, 791, 798], "elsewher": [79, 104, 106, 107, 108], "emb": [124, 125, 137, 138], "embed": [776, 1015], "embedding_ptr": 144, "embl": [148, 157, 219, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574], "embl_gen": 145, "embl_str": 145, "emboss": [61, 64], "emboss_needl": 61, "emboss_wat": 64, "embptr": 144, "embryophyta": 145, "emdptr": 144, "emorg": 142, "emperor": 787, "emploi": 74, "empti": [3, 30, 52, 80, 142, 146, 149, 153, 187, 188, 330, 338, 400, 406, 451, 457, 505, 513, 558, 560, 589, 609, 641, 665, 803, 810, 842, 856, 859, 860, 897, 947, 958, 1016], "en": [146, 147, 156, 955], "ena": [145, 148], "enabl": [867, 981, 1023], "encod": [123, 136, 139, 146, 147, 154, 158, 159, 198, 284, 624, 776], "encode_miss": [217, 218, 264, 265, 282, 283, 301], "encount": [1, 155, 906, 908, 915], "encourag": 804, "end": [0, 17, 61, 62, 63, 64, 65, 66, 67, 113, 141, 142, 145, 146, 147, 148, 149, 156, 157, 219, 229, 240, 246, 322, 341, 372, 392, 409, 443, 461, 497, 516, 555, 562, 937], "endpoint": [805, 944], "enforc": [146, 284, 537], "engel": 89, "engin": 982, "english": [151, 679], "enough": [77, 146, 151, 805], "enrol": 805, "ens_": 77, "ens_pi": 77, "enspi": 100, "ensur": [1, 17, 48, 79, 106, 107, 158, 303, 425, 478, 577, 611, 614, 618, 630, 651, 653, 863, 896, 958], "entail": [79, 104, 106, 107, 108], "entir": [1, 17, 29, 75, 303, 425, 478, 537, 810, 867, 871], "entiti": [102, 219, 867], "entrez": 157, "entri": [81, 139, 140, 145, 157, 775, 828, 831, 853, 854, 869, 870, 874], "entropi": [48, 83, 98], "enumer": 17, "env": [678, 827], "environ": [70, 106, 107, 621, 791, 865], "environment": [95, 678, 776, 791, 796, 797], "enzym": 91, "eq": [793, 794], "equal": [1, 34, 43, 48, 68, 70, 102, 106, 107, 108, 146, 202, 208, 220, 226, 232, 238, 249, 255, 267, 273, 285, 291, 308, 317, 363, 369, 379, 388, 430, 439, 483, 492, 537, 542, 551, 575, 577, 584, 604, 621, 630, 637, 653, 660, 677, 679, 680, 681, 683, 685, 775, 790, 795, 796, 799, 804, 805, 806, 808, 829, 898, 954, 958, 959], "equat": [73, 74, 80, 91, 679], "equit": [96, 100], "equival": [41, 77, 79, 95, 147, 155, 306, 307, 330, 332, 353, 354, 360, 373, 377, 378, 400, 420, 428, 429, 451, 472, 481, 482, 505, 507, 528, 529, 535, 540, 541, 558, 572, 586, 601, 604, 609, 639, 649, 662, 675, 679, 776, 1018], "erb": [620, 626], "eredi": 81, "erik": [17, 67], "error": [1, 48, 79, 91, 95, 104, 106, 107, 108, 146, 147, 153, 155, 158, 198, 243, 284, 298, 356, 422, 475, 532, 573, 677, 679, 681, 801, 805, 872, 960, 1016], "escap": 151, "especi": [139, 146, 155, 685, 798], "essenti": 148, "esti": 78, "estim": [17, 70, 73, 74, 78, 80, 82, 84, 85, 86, 91, 97, 614, 795, 803, 804, 805], "estrang": 151, "et": [609, 614, 685, 807, 874], "etc": [56, 60, 81, 124, 125, 137, 138, 146, 147, 155, 190, 191, 192, 194, 195, 196, 216, 219, 245, 247, 263, 281, 299, 300, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 575, 596, 602, 645, 650, 670, 676, 788, 789, 796, 798, 850, 858, 873, 875, 932, 953, 1017, 1018], "euclidean": [606, 627, 678, 790, 796, 798], "euclidian": 796, "eudicotyledon": 145, "eukaryota": 145, "euryarchaeota": [914, 947], "evalu": [79, 95, 141, 142, 310, 381, 432, 485, 544, 627, 678, 775, 801, 897, 934, 937, 1021, 1023], "evaul": 158, "even": [61, 62, 63, 69, 83, 89, 96, 100, 146, 151, 372, 677, 681, 805, 948], "evenli": [621, 787], "everi": [70, 155, 157, 293, 608, 621, 622, 623, 624, 625, 682, 896, 911, 917], "evid": [145, 151], "evmltdiprlhindpimk": 156, "evolut": [146, 151, 153, 684, 685, 895, 954, 955], "evolutionari": [79, 575, 587, 875, 955], "ex": 1023, "exact": [79, 95, 104, 106, 107, 108, 155, 219, 321, 391, 442, 496, 554, 681, 796, 1016], "exactli": [29, 46, 49, 54, 64, 65, 66, 146, 147, 153, 158, 217, 264, 282, 284, 308, 317, 363, 379, 388, 430, 439, 483, 492, 542, 551, 625, 787, 893], "examin": [982, 1023], "exampl": [0, 1, 29, 30, 31, 32, 33, 34, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 79, 106, 107, 108, 113, 126, 150, 155, 158, 169, 170, 171, 199, 219, 229, 241, 246, 284, 303, 304, 305, 308, 310, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 362, 363, 371, 372, 373, 374, 375, 376, 379, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 430, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 478, 479, 480, 483, 485, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 542, 544, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 586, 587, 590, 593, 595, 598, 601, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 639, 644, 647, 649, 662, 669, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 775, 787, 796, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 866, 867, 869, 870, 872, 876, 877, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 960, 980, 1016, 1017, 1018, 1019, 1021, 1023], "example_protein_embed": 144, "example_t": [140, 826, 845, 846, 847, 850, 851, 865, 866], "exce": [146, 153], "exceed": 155, "excel": [147, 155], "except": [1, 146, 151, 152, 153, 155, 170, 372, 589, 641, 665, 680, 791, 903, 954, 956, 957, 992, 1022], "excit": 1023, "exclud": [154, 624, 666, 673, 940], "exclude_absent_taxa": 899, "exclus": [158, 219, 229, 240, 322, 341, 392, 409, 443, 461, 497, 516, 555, 562, 609], "execut": [158, 698, 742, 982, 1004, 1023], "exercis": 803, "exhibit": 790, "exist": [0, 57, 70, 75, 140, 151, 158, 169, 170, 171, 187, 188, 372, 575, 587, 591, 627, 642, 666, 679, 682, 787, 827, 833, 839, 875, 892, 900, 905, 907, 938, 979, 1004, 1018], "exon": [149, 219, 346, 413, 465, 478, 521, 537, 566], "exp": [608, 613, 620, 626], "expand": [685, 850, 947], "expect": [1, 109, 141, 158, 186, 303, 425, 478, 614, 615, 616, 627, 685, 790, 791, 798, 823, 832, 833, 848, 867, 946, 1023], "expens": 810, "experi": [0, 145, 148, 155, 609, 614, 804], "experienc": 805, "experiment": [145, 681, 1017], "explain": [148, 149, 152, 686, 720, 764, 776, 777, 790, 796, 798], "explan": [790, 791], "explanatori": [685, 776, 777, 791, 798], "explicit": 147, "explicitli": [95, 153, 155, 356, 422, 475, 532, 573, 776], "explor": [1, 105, 776], "exploratori": 1, "expon": [151, 623], "export": 155, "expos": 833, "express": [103, 329, 357, 399, 423, 450, 476, 504, 533, 557, 614, 620, 626, 804, 1018], "ext": [216, 263, 281, 300], "extend": [0, 17, 46, 55, 61, 62, 63, 64, 65, 66, 79, 804, 892, 905, 954, 1016], "extens": [145, 155, 216, 263, 281, 300], "extern": 151, "extinct": 79, "extra": [157, 158, 677, 678, 680, 681, 742], "extract": [579, 614, 627, 628, 632, 655, 677, 681, 791, 895, 1018], "extrapol": [85, 86, 801], "extrem": 679, "f": [1, 17, 55, 71, 85, 95, 109, 140, 141, 142, 144, 147, 151, 154, 156, 157, 199, 425, 679, 680, 681, 791, 794, 801, 804, 822, 823, 833, 856, 859, 867, 869, 870, 876, 877, 890, 891, 893, 895, 896, 897, 901, 902, 904, 905, 906, 908, 909, 910, 911, 915, 921, 922, 923, 924, 925, 931, 935, 936, 937, 940, 941, 942, 944, 945, 949, 950, 951, 952, 954, 1021], "f_1": [70, 73, 78, 82, 97], "f_2": [73, 78], "f_i": 70, "f_onewai": 609, "fabacea": 145, "fabal": 145, "fabid": 145, "facilit": [79, 106, 107, 109, 139, 651, 776, 801, 903, 955], "fact": 372, "factor": [95, 106, 107, 677, 680, 685, 791, 805], "factori": [158, 169, 170, 171, 183, 193], "fail": [79, 80, 95, 104, 106, 107, 108, 243, 681, 801, 981, 982, 1023], "fail_callback": [982, 1023], "fail_f": 1023, "failur": [70, 982, 1023], "fairli": 685, "faith": [1, 79, 95, 627], "faith_pd": [1, 95], "fall": [81, 84, 95, 107, 775], "fals": [1, 15, 16, 17, 30, 31, 32, 33, 34, 46, 47, 49, 51, 52, 53, 54, 58, 61, 62, 63, 73, 74, 79, 95, 104, 106, 107, 108, 113, 126, 141, 144, 145, 146, 147, 148, 149, 151, 154, 169, 170, 171, 198, 199, 212, 215, 217, 218, 219, 229, 241, 242, 259, 262, 264, 265, 277, 280, 282, 283, 293, 301, 303, 304, 305, 306, 308, 310, 317, 320, 321, 323, 324, 325, 327, 330, 331, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 372, 373, 374, 375, 376, 377, 379, 381, 388, 391, 393, 394, 395, 397, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 432, 439, 442, 444, 445, 446, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 485, 492, 495, 496, 498, 499, 500, 502, 505, 506, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 542, 544, 551, 554, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 576, 577, 584, 586, 609, 614, 620, 626, 629, 630, 637, 639, 652, 653, 660, 662, 666, 668, 679, 682, 685, 686, 687, 709, 720, 753, 796, 798, 801, 803, 804, 806, 823, 830, 831, 834, 842, 843, 844, 845, 853, 854, 856, 860, 863, 865, 866, 867, 870, 872, 893, 898, 899, 902, 910, 916, 919, 920, 925, 933, 945, 947, 948, 950, 959, 981, 1004, 1018, 1021, 1023], "famili": 1, "far": 790, "farthest": 937, "fasffbf": 147, "fast": [79, 106, 107, 686, 796, 848], "fasta": [56, 60, 147, 149, 154, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 1016], "fasta_fl": 146, "fasta_format": 146, "faster": [1, 79, 106, 107, 109, 330, 360, 373, 400, 451, 505, 535, 558, 681, 796, 928], "fastq": [56, 60, 154, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 1016], "fastq_format": 147, "favor": [67, 619], "fc": 614, "fd": [79, 980], "fdr_bh": [609, 614], "featur": [1, 81, 92, 140, 146, 149, 155, 156, 219, 229, 232, 241, 243, 244, 246, 284, 303, 425, 478, 537, 606, 609, 614, 624, 777, 786, 790, 791, 797, 798, 863, 959, 1017, 1018, 1019], "feature_t": 148, "fecal": 805, "federhen": 157, "fee": [146, 153], "felsenstein": [146, 153, 1021], "fernand": 614, "fernandez": [606, 618], "ferr": 148, "fetch": [229, 863, 1021], "fetureid": 155, "few": [79, 106, 107, 109, 833, 867, 1016, 1021, 1023], "fewer": [70, 153, 804, 805], "fff": 147, "ffffx": 147, "ffllssssyi": 362, "fglfmeqlttgdysksmrrivknrlpkfskfesslvngsfdfiginyysssi": 145, "fh": [141, 142, 143, 146, 147, 148, 149, 153, 154, 156, 157, 158, 169, 170, 171], "field": [1, 142, 147, 154, 362, 776, 833, 867], "fifth": 146, "fig": [1, 595, 644, 669, 787], "figur": [595, 644, 669, 787], "file": [56, 60, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 170, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 216, 245, 247, 263, 281, 284, 297, 299, 300, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 595, 596, 602, 609, 627, 644, 645, 650, 669, 670, 676, 708, 741, 752, 787, 788, 789, 803, 807, 820, 821, 822, 823, 824, 828, 832, 833, 835, 839, 848, 854, 856, 857, 858, 861, 862, 867, 868, 869, 870, 873, 874, 895, 932, 953, 979, 980, 1015, 1021], "fileformaterror": 158, "filehandl": [56, 60, 124, 125, 137, 138, 158, 169, 170, 171, 190, 191, 192, 194, 195, 196, 198, 199, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953], "filenam": 979, "filepath": [56, 60, 124, 125, 137, 138, 190, 191, 192, 194, 195, 196, 198, 216, 245, 247, 263, 281, 297, 299, 300, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 682, 788, 789, 858, 873, 932, 953], "filesentinel": [158, 169, 171], "filter": [17, 48, 67, 154, 210, 211, 257, 258, 275, 276, 284, 293, 294, 324, 394, 445, 499, 682, 821, 822, 863, 947, 1023], "filter_column": 294, "filter_f": 947, "filter_fn": 831, "filter_id": [212, 259, 277, 293, 296], "final": [156, 685, 823, 868, 869, 1023], "find": [0, 80, 323, 325, 328, 331, 341, 343, 348, 350, 351, 393, 395, 398, 401, 409, 410, 415, 417, 418, 444, 446, 449, 452, 461, 462, 467, 469, 470, 473, 498, 500, 503, 506, 516, 518, 523, 525, 526, 562, 563, 568, 570, 678, 681, 685, 791, 805, 844, 890, 891, 903, 905, 906, 909, 910, 911, 916, 918, 919, 920, 921, 923, 924, 931, 935, 940, 949, 951, 952, 978], "find_al": [908, 910, 911], "find_by_func": [908, 909, 911], "find_by_id": [908, 909, 910], "find_motif": [343, 410, 462, 518, 563, 1018], "find_with_regex": [343, 410, 462, 518, 563, 1018], "fine": 870, "firmicut": [850, 913, 914, 947], "first": [1, 17, 61, 62, 63, 64, 65, 66, 67, 70, 79, 106, 107, 113, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 171, 241, 246, 341, 343, 359, 360, 372, 409, 410, 461, 462, 516, 518, 534, 537, 562, 563, 579, 607, 608, 609, 614, 621, 632, 655, 677, 679, 709, 764, 776, 792, 801, 804, 828, 839, 869, 895, 899, 908, 909, 914, 917, 947, 948, 992, 1016, 1021, 1023], "fish": 776, "fisher": 80, "fit": [91, 614, 775, 777, 798, 1022], "five": [146, 157, 595, 609, 644, 669, 955], "fix": [85, 150, 153], "fl": 146, "flag": [157, 1021], "flat": [148, 343, 410, 462, 518, 563], "flatfil": 145, "flatten": 795, "float": [48, 51, 61, 62, 63, 64, 65, 66, 67, 68, 79, 84, 85, 95, 104, 106, 107, 108, 109, 112, 139, 141, 148, 150, 151, 155, 284, 301, 326, 332, 333, 347, 349, 396, 414, 416, 447, 466, 468, 501, 507, 508, 522, 524, 556, 567, 569, 591, 593, 604, 605, 609, 614, 618, 619, 623, 626, 627, 628, 642, 666, 679, 681, 683, 685, 698, 742, 787, 802, 804, 805, 810, 833, 834, 836, 837, 848, 864, 867, 875, 890, 898, 899, 900, 905, 906, 915, 946, 954, 958], "float32": [139, 144, 681, 865], "float64": [1, 55, 139, 144, 321, 391, 442, 496, 554, 609, 673, 681, 776, 833, 867], "flush": 198, "fmet": 372, "fn": 979, "focu": 158, "focus": [284, 798], "fold": [614, 1016], "folder": 979, "follow": [1, 52, 53, 55, 67, 74, 79, 80, 95, 106, 107, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 219, 284, 303, 310, 338, 340, 381, 406, 408, 425, 432, 457, 459, 478, 485, 513, 515, 537, 544, 560, 561, 579, 587, 607, 608, 609, 612, 613, 615, 616, 617, 621, 623, 624, 627, 632, 655, 677, 678, 679, 681, 682, 686, 787, 790, 805, 894, 931, 982, 1016, 1021, 1023], "foo": [149, 155, 229, 537, 810, 823, 824, 833, 834, 849, 859, 867, 869, 870, 980, 1023], "foobar": [824, 1023], "foral": [612, 613], "foraminifera": 71, "ford": 95, "form": [1, 29, 61, 200, 579, 628, 632, 651, 655, 673, 818, 819, 828, 832, 869, 946], "formal": [147, 157, 606], "format": [56, 60, 124, 125, 137, 138, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 216, 219, 245, 247, 263, 266, 281, 284, 297, 299, 300, 302, 352, 357, 361, 362, 370, 419, 423, 424, 471, 476, 477, 527, 533, 536, 571, 574, 596, 597, 602, 628, 645, 646, 650, 651, 663, 668, 670, 671, 676, 708, 741, 752, 788, 789, 807, 828, 832, 833, 834, 835, 858, 865, 867, 868, 869, 873, 874, 893, 913, 932, 953, 955, 1015, 1020, 1021], "format_f": 867, "format_nam": [184, 185, 186], "format_object": 182, "format_url": 834, "format_vers": [140, 807, 833, 867, 874], "formatidentificationwarn": [190, 194], "former": 575, "formula": [81, 681], "forum": 155, "forward": [1, 360, 372, 373, 535], "fould": 898, "found": [17, 102, 140, 142, 145, 146, 147, 148, 151, 153, 156, 190, 192, 194, 196, 356, 422, 475, 532, 573, 589, 641, 665, 678, 679, 681, 805, 833, 867, 898, 908, 909, 910, 911, 921, 923, 939, 954], "foundat": 147, "four": [29, 147, 156, 303, 425, 478, 609, 787], "fr": 954, "frac": [70, 71, 72, 73, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 96, 97, 100, 103, 607, 608, 612, 617, 618, 619, 621, 622, 623, 624, 679, 798], "fraction": [71, 605, 805, 836, 899, 1021], "fraction_diff": [326, 396, 447, 501, 556], "fraction_sam": [326, 396, 447, 501, 556], "frame": [141, 142, 360, 372, 373, 535, 614, 678, 913], "framework": [95, 606], "free": [157, 981, 1023], "freedom": [614, 620, 626, 795, 802], "freq": [330, 345, 400, 412, 451, 464, 505, 520, 558, 565], "frequenc": [1, 48, 51, 70, 82, 332, 333, 345, 347, 349, 412, 414, 416, 464, 466, 468, 507, 508, 520, 522, 524, 565, 567, 569, 801, 803, 805, 875, 895], "frequent": [810, 875, 897], "friedman": 609, "friedmanchisquar": 609, "from": [0, 1, 2, 17, 29, 30, 31, 32, 33, 34, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 75, 79, 84, 95, 102, 103, 106, 107, 113, 124, 126, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 169, 170, 171, 190, 194, 210, 217, 218, 219, 228, 229, 241, 242, 245, 248, 257, 264, 265, 275, 282, 283, 284, 297, 298, 299, 301, 303, 304, 305, 308, 310, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 372, 373, 374, 375, 376, 379, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 430, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 483, 485, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 542, 544, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 579, 586, 587, 590, 591, 593, 595, 596, 598, 599, 601, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 632, 639, 642, 644, 645, 647, 649, 655, 662, 666, 669, 670, 672, 673, 675, 677, 678, 679, 681, 682, 683, 685, 686, 687, 775, 776, 787, 788, 790, 791, 793, 794, 796, 801, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 872, 876, 877, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 960, 980, 982, 1018, 1021, 1023], "from_": [586, 639, 662], "from_dict": [59, 677, 681, 686, 787, 803, 804], "from_hdf5": 867, "from_iter": 603, "from_ncbi": [362, 363, 372, 373, 534, 535], "from_taxdump": 914, "from_taxonomi": [913, 947], "front": [246, 624], "frontier": 95, "frozenset": [897, 941, 942], "fsvd": [681, 796], "ft_current": 219, "ftp": [145, 157, 219], "full": [85, 86, 143, 144, 609, 810, 823, 845, 911, 937, 979], "full_genome_avail": [831, 856], "fulli": [95, 148, 1016], "fun": 1023, "func": [835, 859, 897, 910, 934, 939, 950, 961, 994, 1005], "function": [1, 61, 62, 63, 79, 80, 85, 86, 91, 94, 106, 107, 108, 109, 112, 146, 147, 154, 169, 170, 171, 184, 185, 186, 189, 219, 229, 241, 303, 326, 362, 396, 425, 447, 478, 501, 556, 575, 591, 604, 607, 608, 609, 612, 613, 615, 616, 619, 624, 642, 666, 678, 679, 680, 681, 682, 683, 686, 775, 791, 800, 803, 804, 805, 807, 823, 828, 831, 833, 835, 848, 856, 859, 861, 867, 868, 869, 870, 874, 893, 897, 900, 905, 910, 934, 939, 947, 949, 950, 955, 956, 958, 959, 960, 961, 979, 981, 993, 994, 1004, 1005, 1015, 1016, 1017, 1018, 1021], "further": [158, 284, 804, 1021], "futher": 158, "futur": [79, 95, 106, 107, 146], "fuzzi": [149, 219, 220, 228, 229, 240, 241, 537], "g": [0, 1, 17, 34, 48, 49, 55, 63, 66, 81, 84, 91, 95, 109, 112, 141, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 158, 219, 248, 284, 297, 303, 310, 313, 318, 321, 322, 329, 330, 331, 332, 333, 343, 381, 384, 389, 391, 392, 399, 400, 401, 410, 425, 432, 435, 440, 442, 443, 450, 451, 452, 462, 478, 485, 488, 493, 496, 497, 504, 505, 506, 507, 508, 518, 537, 544, 547, 552, 554, 555, 557, 558, 563, 575, 579, 587, 593, 604, 609, 624, 627, 628, 632, 651, 655, 673, 677, 678, 680, 681, 787, 804, 805, 833, 850, 863, 867, 875, 896, 897, 902, 905, 909, 936, 937, 938, 940, 941, 947, 950, 951, 952, 954, 981, 1016, 1018, 1021, 1023], "g1": 681, "g2": 681, "g_m": 612, "ga": [537, 1018], "gaa": 1018, "gaagcaatgc": 145, "gaagttgagt": 145, "gaatcaagcc": 145, "gabor": [17, 67], "gac": [344, 411, 463, 519, 564], "gacccgcuuu": 1018, "gacg": [344, 411, 463, 519, 564], "gacgtt": [335, 336, 403, 404, 454, 455, 510, 511], "gag": [356, 422, 475, 532, 573], "gagatagagt": 145, "gagcccgggc": [146, 153], "gagccgtggc": [146, 153], "gagcggaggc": 145, "gaggacttcg": 145, "gaggtattgg": 145, "gagrctc": [356, 422, 475, 532, 573], "gain": [284, 627, 796], "gair": 146, "gairaagccttggc": 153, "gamma": 70, "gap": [0, 17, 47, 48, 51, 55, 61, 62, 63, 64, 65, 66, 113, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 303, 320, 321, 324, 327, 328, 332, 333, 336, 343, 354, 355, 356, 358, 359, 360, 362, 372, 373, 374, 391, 394, 397, 398, 404, 410, 421, 422, 425, 442, 445, 448, 449, 455, 462, 474, 475, 478, 495, 496, 499, 502, 503, 507, 508, 511, 518, 529, 530, 531, 532, 534, 535, 537, 554, 563, 573, 604, 947, 1018, 1023], "gap_char": [324, 374, 394, 445, 499], "gap_charact": [356, 422, 475, 532, 573], "gap_extend_penalti": [17, 61, 62, 63, 64, 65, 66], "gap_mod": 48, "gap_open_penalti": [17, 61, 62, 63, 64, 65, 66], "gapopen": [141, 142], "garbag": 198, "gardnerella": 805, "garrison": [17, 67], "gascuel": 955, "gaston": 79, "gataccttca": 145, "gatcacttga": 145, "gatcttcccc": 145, "gatgcaacac": 145, "gather": [601, 649, 675, 1021], "gattattcta": 145, "gattttcgag": 145, "gauu": [348, 350, 415, 417, 467, 469, 523, 525, 568, 570], "gb": [142, 148], "gb_str": 148, "gbk": 148, "gc": [47, 145, 146, 147, 148, 149, 157, 303, 320, 321, 324, 327, 333, 354, 358, 363, 373, 391, 394, 397, 442, 445, 448, 478, 495, 496, 499, 502, 508, 529, 530, 554, 1018], "gc_content": [333, 508], "gc_frequenc": [332, 507], "gcaattttca": 145, "gcacatccct": 148, "gcacaucccu": 148, "gcagaagctg": 145, "gcagatgtg": 605, "gcatgcatgc": 149, "gcatggtcat": 145, "gcaugcaucugcauacguacguacgcaugca": 143, "gcaugcaucugcauacguacguacgcaugcagucgauacauacguacgucgguacgu": 143, "gcaugcaucugcauacguacguacgcaugcauca": 143, "gccaaaccca": 145, "gcccagtagcttcccaatatgagagcatcaattgtagatcgggcc": 0, "gccccccuuu": 1018, "gcgtatagtt": 145, "gcgtgcctaaggtatgcaag": 0, "gctaactaggctcccttctacccctctcagaga": 0, "gctgccgaga": 145, "gctgttattt": 145, "gcttcatctt": 145, "gen": [149, 1023], "gen1": 149, "gen2": 149, "gena": 219, "genbank": [145, 149, 157, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574], "gender": [627, 803, 804], "gene": [1, 149, 219, 229, 241, 244, 303, 537, 614, 620, 626, 807, 874, 1017], "gene_nam": 219, "genea": 820, "geneb": 820, "gener": [1, 46, 49, 61, 67, 68, 69, 87, 95, 109, 144, 147, 148, 149, 151, 156, 157, 169, 171, 184, 186, 190, 194, 197, 329, 343, 344, 399, 410, 411, 450, 462, 463, 504, 518, 519, 537, 557, 563, 564, 575, 614, 627, 677, 678, 679, 683, 775, 777, 787, 790, 801, 804, 805, 833, 843, 844, 852, 856, 867, 1016, 1018, 1022], "generated_bi": [807, 834, 867, 868, 874], "generatortyp": [843, 845, 856], "genet": [146, 151, 153, 157, 359, 360, 362, 363, 369, 370, 371, 372, 373, 534, 535, 684, 954, 1018], "genetic_cod": [534, 535], "geneticcod": [360, 534, 535, 1018], "genom": [1, 229], "genpept": 148, "gentil": 624, "genu": [1, 157], "geologi": 606, "geometr": [610, 612, 614, 624, 681], "geometri": [606, 608, 612, 613, 616], "geq": 798, "gerald": 624, "get": [68, 140, 144, 155, 198, 199, 228, 229, 362, 371, 627, 679, 775, 791, 831, 838, 839, 840, 841, 847, 849, 851, 853, 854, 872, 902, 941], "get_alpha_diversity_metr": [1, 104, 111], "get_beta_diversity_metr": [1, 108, 110, 112], "get_column": 296, "get_id": [210, 211, 215, 257, 258, 262, 275, 276, 280, 294, 295], "get_max_dist": 906, "get_nam": 587, "get_trajectori": 686, "get_value_by_id": 826, "getaaafhwqaaf": 154, "getvalu": [143, 146, 147, 148, 149, 153, 156, 627], "gff": 149, "gff3": [148, 245, 247, 352, 361, 419, 424, 571, 574], "gff_str": 149, "gfgmvinn": 156, "gfp": 1018, "gfv": 156, "gg": [322, 328, 392, 398, 443, 449, 497, 503, 555], "gg_otu_1": [833, 834], "gg_otu_2": 834, "gg_otu_3": 834, "gg_otu_4": 834, "gg_otu_5": 834, "gga": 1018, "ggaa": [321, 391, 442, 496, 554], "ggacugaa": 1018, "ggag": [328, 398, 449, 503], "ggattgttta": 145, "ggca": 0, "ggctaacggt": 145, "ggg": 1018, "ggggagg": [328, 398, 449, 503], "gggtttttac": 145, "ggt": [156, 353, 420, 472, 528, 572], "ggta": 0, "ggtaccaacg": [353, 420, 472, 528, 572], "ggtacgcaag": 0, "ggtc": [324, 394, 445, 499], "ggtccattc": [324, 394, 445, 499], "ggtggtttct": 145, "ggtgtttagc": 145, "ggtt": 827, "ggu": [305, 376, 427, 480, 539], "gguc": [313, 315, 318, 326, 347, 348, 349, 350, 384, 386, 389, 396, 414, 415, 416, 417, 435, 437, 440, 447, 466, 467, 468, 469, 488, 490, 493, 501, 522, 523, 524, 525, 547, 549, 552, 556, 567, 568, 569, 570], "ggucg": [310, 322, 381, 392, 432, 443, 485, 497, 544, 555], "ggucguaaagga": [319, 390, 441, 494, 553], "ggucgugaag": 537, "ggucgugaagga": [305, 310, 376, 381, 427, 432, 480, 485, 537, 539, 544], "gi": [141, 142, 148], "gigasci": [787, 807, 874], "gilk": 685, "gini": [81, 99], "gish": [141, 142], "github": 787, "give": [1, 151, 790, 791, 798, 807, 874, 900], "given": [1, 56, 60, 70, 81, 84, 89, 91, 100, 104, 108, 109, 112, 124, 125, 137, 138, 146, 147, 151, 152, 155, 169, 171, 187, 188, 190, 191, 194, 195, 242, 245, 247, 299, 302, 352, 356, 361, 419, 422, 424, 471, 475, 477, 527, 532, 536, 571, 573, 574, 591, 596, 602, 624, 642, 645, 650, 666, 670, 676, 678, 679, 682, 788, 789, 791, 795, 800, 802, 804, 838, 840, 848, 856, 858, 872, 873, 875, 910, 932, 953, 980, 981, 993, 1023], "gkp1137": 147, "glahn": [606, 620, 626], "gln": 425, "global": [0, 61, 62, 63], "global_pairwise_align": [62, 63, 64, 65, 66], "global_pairwise_align_nucelotid": [61, 63, 64, 65, 66], "global_pairwise_align_nucleotid": 0, "global_pairwise_align_protein": [61, 62, 64, 65, 66], "glossari": 48, "glu": 425, "glucosidas": 145, "glutam": 425, "glutamin": 425, "glx": 425, "gly": 425, "glycin": [48, 425], "glycosyl": [343, 410, 449, 462, 518, 563, 1018], "go": [805, 863, 1021, 1023], "goa": 145, "goal": [155, 1016], "goldman": 95, "gonzalez": 787, "good": [78, 82, 796], "goodrich": 898, "googl": 155, "gorilla": [146, 153], "gorlick": 156, "goto": 147, "gouet": [85, 86], "gov": [48, 62, 63, 65, 66, 141, 142, 146, 148, 154, 157, 362, 370, 371], "gracilibacteria": 362, "gradient": [81, 776, 790, 791, 796, 798], "gradientanova": [687, 709, 753, 764], "gradientanovaresult": [697, 719, 730, 763, 774], "graft": 949, "gram": [615, 616], "grammar": [374, 537], "grammaredsequ": [29, 39, 44, 46, 49, 50, 61, 64, 143, 146, 153, 156, 303, 324, 327, 355, 425, 445, 448, 474, 478, 499, 502, 531, 1018], "grand": 875, "grant": [146, 153], "greater": [146, 229, 304, 375, 426, 479, 538, 614, 677, 679, 680, 681, 682, 685, 804, 805, 806, 839], "grei": 787, "group": [1, 102, 155, 357, 423, 476, 533, 586, 609, 614, 624, 639, 662, 677, 680, 681, 686, 687, 697, 698, 719, 730, 742, 752, 753, 763, 774, 776, 803, 804, 805, 818, 833, 838, 856, 867, 981, 1017, 1021], "group1": 677, "group2": 677, "group3": 677, "group_md": 818, "group_observation_md": 838, "groupbi": 804, "groupresult": 698, "growth": [614, 804], "gsi": 624, "gt": 54, "gt10": 145, "gtaacctgag": 145, "gtacct": [143, 153], "gtagaggacc": 145, "gtagct": [143, 153], "gtatct": 153, "gtcgaa": [143, 153], "gtt": [344, 411, 463, 519, 564], "gttaatgcca": 145, "gttactcaac": 145, "gttcggcctc": 145, "gttgaccaat": 145, "gttgggatta": 145, "gtttatccaa": 145, "guaaccugag": 145, "guanin": [303, 478], "guarante": [55, 86, 155, 303, 327, 397, 425, 448, 478, 502, 628, 683, 905], "guc": [310, 381, 432, 485, 544], "gucgauacauacguacgucgguacgu": 143, "gucgauacauacguacgucguacguacgu": 143, "guess": [56, 91, 124, 137, 146, 190, 194, 245, 299, 352, 419, 471, 527, 571, 596, 645, 670, 788, 858, 932, 957], "gunnerida": 145, "gut": [1, 155, 787], "gytai": 156, "gzip": [198, 867], "h": [17, 70, 71, 75, 83, 95, 96, 97, 98, 99, 100, 146, 153, 156, 199, 303, 425, 478, 896, 897, 902, 905, 936, 937, 938, 941, 942, 951, 952, 954, 1021], "h5grp": [833, 867], "h5py": [833, 867], "h_": 609, "h_0": 81, "h_b": 72, "h_i": 81, "h_n": 81, "ha": [1, 17, 29, 47, 52, 53, 61, 62, 63, 68, 112, 113, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 191, 195, 198, 215, 262, 280, 284, 297, 303, 320, 321, 324, 327, 337, 338, 339, 340, 351, 354, 358, 359, 360, 362, 372, 373, 374, 391, 394, 397, 405, 406, 407, 408, 418, 425, 442, 445, 448, 456, 457, 458, 459, 470, 478, 495, 496, 499, 502, 512, 513, 514, 515, 526, 529, 530, 534, 535, 537, 554, 559, 560, 561, 609, 611, 627, 775, 790, 792, 803, 804, 805, 823, 831, 848, 896, 916, 919, 920, 934, 938, 954, 981, 1018, 1021], "habitat": 791, "had": [79, 106, 107, 677, 681, 805], "half": [84, 621], "halobacteria": [914, 947], "ham": [326, 396, 447, 501, 556, 627, 1018], "hamadi": [79, 106, 107], "hand": [1, 796], "handbook": 146, "handi": [981, 1023], "handl": [48, 55, 146, 147, 154, 156, 157, 158, 159, 169, 171, 198, 284, 297, 372, 373, 609, 679, 681, 682, 801, 810, 823, 848, 857, 948, 955, 980, 1023], "handler": [159, 190, 192, 194, 196, 198], "happen": [151, 343, 410, 462, 518, 563, 954, 1023], "hard": [79, 104, 106, 107, 108], "hardcod": 78, "harm": 621, "has_children": [919, 920], "has_definit": [323, 325, 335, 339, 351, 393, 395, 403, 407, 418, 444, 446, 454, 458, 470, 498, 500, 510, 514, 526], "has_degener": [325, 334, 339, 395, 402, 407, 446, 453, 458, 500, 509, 514], "has_gap": [331, 401, 452, 506], "has_missing_valu": [210, 212, 257, 259, 275, 277], "has_nuc_pattern": 1023, "has_stop": 473, "hash": [9, 23, 118, 131, 164, 177, 692, 703, 714, 725, 736, 747, 758, 769, 782, 883, 968, 987, 999, 1010], "hashabl": [29, 31, 775, 1004], "hashlib": 980, "hasn": [537, 806, 870], "have": [0, 1, 17, 47, 50, 51, 54, 55, 67, 69, 79, 84, 96, 100, 106, 107, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 189, 198, 219, 229, 230, 231, 284, 293, 298, 308, 321, 327, 343, 372, 379, 391, 397, 410, 430, 442, 448, 462, 483, 496, 502, 518, 542, 554, 563, 577, 593, 609, 625, 627, 630, 653, 679, 685, 686, 708, 720, 741, 752, 775, 787, 790, 791, 792, 795, 796, 798, 799, 801, 803, 804, 805, 806, 831, 833, 848, 849, 850, 863, 867, 872, 875, 894, 895, 896, 905, 907, 908, 931, 937, 944, 946, 947, 956, 958, 1021, 1023], "hdf5": [139, 140, 144, 807, 833, 867, 874], "hdfgroup": 139, "hdist": 685, "he": 0, "header": [141, 142, 143, 147, 148, 150, 152, 155, 202, 208, 249, 255, 267, 273, 284, 285, 291, 296, 828, 832], "header_kei": [828, 869], "header_valu": [828, 869], "heagawghe": 0, "health": [609, 803, 804], "healthi": [803, 804, 805], "heatmap": [595, 644, 669], "heip": [83, 89], "heip_": 96, "held": 863, "hello": [319, 390, 441, 494, 553], "help": [155, 157], "helper": [7, 21, 37, 116, 129, 162, 175, 204, 222, 234, 251, 269, 287, 311, 365, 382, 433, 486, 545, 580, 633, 656, 690, 701, 712, 723, 734, 745, 756, 767, 780, 811, 881, 958, 959, 966, 985, 997, 1008, 1021], "henc": 679, "henikoff": [63, 66, 587], "here": [0, 1, 48, 70, 74, 79, 84, 89, 91, 97, 98, 100, 104, 105, 106, 107, 108, 109, 110, 111, 140, 144, 145, 148, 153, 158, 169, 171, 199, 343, 410, 462, 518, 563, 609, 614, 685, 796, 798, 833, 867, 948, 955, 1021], "hernand": 624, "heterogen": 797, "heuer": 147, "heurist": [17, 681, 796], "hexdigest": 980, "hgc": 157, "hi": 425, "hidden": 157, "hierarch": [157, 624], "hierarchi": [823, 912, 913, 1021], "high": [79, 106, 107, 146, 147, 614, 776, 787, 790, 796, 1019], "higher": [48, 575, 609, 614, 993], "highest": [17, 151], "highli": 48, "highlight": 147, "hill": 95, "histidin": 425, "histor": [1, 93, 362, 895], "histori": [79, 805], "hit": 142, "hoc": 801, "hochberg": [609, 614], "hoffmann": 95, "hold": [651, 697, 719, 730, 763, 774, 775, 796, 803, 864, 903, 1004], "hollow": [108, 139, 628, 666, 668, 683], "holm": [609, 614], "hommola": 685, "homogen": [681, 790, 798], "homolog": 575, "horizont": 55, "host": [157, 685], "host_dist": 685, "hot": 776, "hotton": 157, "hous": 803, "how": [44, 54, 55, 91, 146, 148, 155, 198, 248, 284, 321, 343, 355, 372, 373, 391, 410, 421, 442, 462, 474, 496, 518, 531, 554, 563, 620, 626, 679, 796, 801, 803, 804, 805, 807, 829, 848, 874, 1016, 1023], "howev": [1, 79, 80, 95, 104, 106, 107, 108, 146, 150, 151, 155, 157, 303, 425, 478, 537, 606, 614, 681, 685, 776, 796, 810, 870, 906, 961], "hsp": [141, 142], "hstack": [803, 804], "htm": 678, "html": [48, 84, 140, 141, 143, 146, 148, 151, 153, 156, 219, 597, 628, 646, 651, 663, 671, 677, 678, 679, 680, 681, 787, 807, 833, 867, 874, 954], "http": [17, 48, 61, 62, 63, 64, 65, 66, 67, 70, 74, 84, 109, 139, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 216, 263, 281, 284, 297, 300, 362, 370, 371, 597, 620, 624, 626, 628, 646, 651, 663, 671, 677, 678, 679, 680, 681, 787, 807, 833, 834, 867, 874, 954, 955, 980], "huerta": 895, "hugh": 145, "human": [139, 146, 147, 150, 151, 152, 960], "hundr": [1, 109], "hwang": 70, "hydrogenosom": 157, "hypothesi": [606, 609, 614, 679, 682, 685, 801], "hypothet": 219, "h\u00e9bert": 624, "i": [0, 1, 3, 17, 29, 30, 31, 32, 33, 34, 36, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 112, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 169, 170, 171, 183, 184, 186, 190, 191, 192, 193, 194, 195, 196, 198, 202, 208, 216, 219, 220, 226, 228, 229, 232, 238, 240, 241, 242, 243, 245, 247, 248, 249, 255, 263, 267, 273, 281, 284, 285, 291, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 388, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 439, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 551, 554, 555, 556, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 584, 586, 589, 594, 595, 596, 597, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 637, 639, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 708, 720, 741, 752, 753, 764, 775, 776, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 810, 817, 820, 823, 824, 827, 828, 830, 831, 832, 833, 839, 842, 843, 844, 845, 848, 849, 850, 856, 857, 858, 859, 860, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 880, 890, 893, 895, 897, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 913, 914, 915, 917, 919, 920, 921, 923, 925, 926, 928, 931, 932, 936, 939, 941, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 965, 978, 979, 980, 981, 982, 992, 993, 1004, 1015, 1016, 1018, 1021, 1022, 1023], "id": [0, 1, 29, 34, 52, 57, 58, 79, 95, 104, 106, 107, 108, 109, 112, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 202, 208, 211, 212, 214, 217, 218, 249, 255, 258, 259, 261, 264, 265, 267, 273, 276, 277, 279, 282, 283, 284, 285, 291, 293, 294, 296, 298, 301, 308, 317, 319, 338, 359, 360, 362, 371, 372, 373, 379, 388, 390, 406, 430, 439, 441, 457, 483, 492, 494, 513, 534, 535, 537, 542, 551, 553, 560, 576, 577, 579, 585, 586, 589, 591, 594, 598, 601, 620, 627, 628, 629, 630, 632, 638, 639, 641, 642, 643, 647, 649, 651, 652, 653, 655, 661, 662, 665, 666, 667, 668, 672, 673, 675, 677, 678, 679, 680, 681, 682, 683, 720, 764, 777, 786, 787, 803, 804, 805, 808, 817, 819, 820, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 834, 837, 839, 841, 843, 848, 849, 850, 854, 856, 857, 861, 862, 863, 866, 867, 869, 870, 871, 872, 876, 877, 894, 901, 904, 911, 913, 914, 917, 944, 946, 955, 1018], "id1": 155, "id2": 155, "id3": 155, "id_": [823, 831, 856, 870], "id_head": [217, 218, 264, 265, 282, 283, 296, 298, 301], "id_i": 845, "id_index": 946, "id_j": 845, "id_list": 912, "id_map": 872, "id_pair": 112, "id_whitespace_replac": [146, 147], "idea": 804, "ideal": 158, "ident": [1, 141, 142, 151, 155, 579, 632, 651, 655, 685, 900, 933, 1021], "identif": 64, "identifi": [58, 104, 108, 109, 112, 139, 143, 146, 147, 148, 149, 150, 153, 156, 157, 244, 284, 328, 449, 503, 627, 682, 801, 805, 841, 849, 872, 1016], "idptr": 144, "ids_to_keep": [211, 258, 276, 294, 831], "idx": [356, 422, 475, 532, 573], "ie": [333, 508], "igkeeiqqrl": 144, "ignor": [17, 48, 70, 79, 106, 107, 142, 143, 145, 146, 147, 150, 151, 155, 158, 293, 328, 329, 372, 373, 398, 399, 449, 450, 503, 504, 557, 589, 641, 665, 677, 678, 679, 680, 681, 796, 803, 804, 856, 867, 905, 924, 959, 981, 982, 1018, 1021, 1023], "ignore_axis_label": 959, "ignore_direction": 959, "ignore_metadata": 54, "ignore_method_nam": 959, "ignore_non": 856, "ii": 801, "iii": 85, "ij": 679, "il": 425, "illumina": [147, 154], "illumina1": [147, 154], "illumina_1": 154, "illustr": [537, 677, 681], "iloc": 36, "ilr": [606, 616, 625], "ilr_inv": 625, "im": [149, 229, 241], "im1": 241, "im2": 241, "imagin": 151, "immedi": [146, 153, 917], "immut": [537, 1018], "implement": [0, 1, 61, 64, 69, 70, 74, 79, 84, 89, 100, 105, 106, 107, 110, 111, 147, 151, 155, 158, 169, 170, 171, 172, 198, 284, 624, 776, 790, 791, 796, 797, 868, 869, 898, 954, 956], "impli": [48, 198, 685], "implicit": 848, "implicitli": [140, 144], "import": [0, 1, 29, 30, 31, 32, 33, 34, 39, 41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 75, 79, 95, 106, 107, 113, 126, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 169, 170, 171, 219, 229, 241, 303, 304, 305, 308, 310, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 362, 372, 373, 374, 375, 376, 379, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 430, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 478, 479, 480, 483, 485, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 542, 544, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 586, 587, 590, 593, 595, 598, 601, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 639, 644, 647, 649, 662, 669, 672, 673, 675, 677, 678, 679, 681, 682, 685, 686, 775, 776, 787, 801, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 866, 867, 869, 870, 876, 877, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 960, 980, 1016, 1018, 1021, 1023], "import_modul": 158, "impos": [79, 106, 107], "improv": [54, 151, 153, 303, 425, 478, 666], "impur": 99, "imput": [606, 618], "incid": 685, "includ": [1, 48, 54, 56, 60, 68, 69, 79, 95, 106, 107, 111, 112, 124, 125, 137, 138, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 201, 216, 245, 247, 248, 263, 266, 281, 284, 285, 291, 296, 298, 299, 300, 302, 310, 319, 324, 332, 333, 343, 352, 356, 358, 359, 360, 361, 372, 373, 381, 390, 394, 410, 419, 422, 424, 432, 441, 445, 462, 471, 475, 477, 478, 485, 494, 499, 507, 508, 518, 527, 530, 532, 534, 535, 536, 544, 553, 563, 571, 573, 574, 575, 585, 587, 596, 602, 609, 627, 638, 645, 650, 661, 666, 670, 673, 676, 677, 678, 680, 681, 682, 686, 786, 787, 788, 789, 791, 796, 797, 801, 805, 823, 828, 858, 865, 866, 871, 873, 890, 891, 893, 922, 924, 925, 928, 929, 930, 932, 945, 947, 948, 953, 1016, 1017, 1018, 1019, 1021, 1022], "include_collapsed_metadata": 823, "include_self": [897, 922, 925, 928, 929, 930, 945, 948, 1021], "inclus": [198, 219, 240, 322, 341, 392, 409, 443, 461, 497, 516, 555, 562, 678], "incom": 895, "incomplet": [303, 374, 425, 478, 537], "inconsist": 590, "incorpor": [1, 95, 605], "incorrect": 1, "incorrectli": 832, "increas": [614, 627, 628, 682, 683, 685, 775, 801, 804, 823, 870], "incub": 804, "ind": [801, 805], "inde": 685, "independ": [360, 373, 535, 685, 697, 698, 719, 730, 763, 774, 848, 948], "index": [0, 1, 29, 31, 34, 36, 43, 46, 49, 50, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 75, 81, 83, 84, 87, 88, 90, 96, 98, 99, 100, 103, 104, 143, 144, 146, 153, 154, 156, 213, 217, 218, 260, 264, 265, 278, 282, 283, 284, 301, 310, 340, 381, 408, 432, 459, 485, 515, 544, 561, 576, 579, 598, 607, 608, 609, 614, 627, 629, 632, 647, 652, 655, 672, 673, 677, 678, 679, 680, 681, 686, 720, 764, 777, 787, 803, 810, 821, 823, 833, 849, 850, 853, 866, 867, 914, 917, 927, 928, 946, 954, 958], "indexerror": [810, 839], "indic": [1, 16, 30, 31, 34, 43, 52, 53, 70, 73, 74, 89, 95, 112, 139, 146, 147, 155, 158, 202, 208, 219, 220, 226, 229, 232, 238, 249, 255, 267, 273, 284, 285, 291, 305, 308, 310, 317, 323, 325, 328, 329, 331, 334, 335, 336, 337, 338, 339, 340, 343, 348, 350, 351, 353, 356, 362, 363, 369, 376, 379, 381, 388, 393, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 415, 417, 418, 420, 422, 427, 430, 432, 439, 444, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 467, 469, 470, 472, 473, 475, 480, 483, 485, 492, 498, 500, 503, 504, 506, 509, 510, 511, 512, 513, 514, 515, 518, 523, 525, 526, 528, 532, 539, 542, 544, 551, 557, 559, 560, 561, 563, 568, 570, 572, 573, 575, 609, 614, 625, 677, 679, 680, 681, 685, 775, 786, 787, 803, 833, 867, 910, 912, 950, 993, 1004, 1021, 1023], "indicatd": 1023, "indirectli": 937, "indiscern": 651, "individu": [1, 70, 71, 72, 75, 78, 79, 80, 82, 87, 88, 89, 90, 91, 96, 100, 103, 106, 107, 139, 144, 146, 284, 575, 609, 803, 810, 1023], "indptr": [833, 867], "ineffici": [810, 956], "inekmtlva": 144, "ineleg": 928, "inequ": [43, 208, 226, 238, 255, 273, 291, 317, 369, 388, 439, 492, 551, 651, 796], "inf": [80, 155, 939], "infeas": 146, "infect": 805, "infer": [148, 155, 190, 194, 216, 263, 281, 297, 300, 979, 1016], "infern": 156, "infin": 155, "infinit": [939, 951, 952], "infinitum": 151, "info": [17, 67, 229, 686, 742], "inform": [17, 48, 56, 60, 72, 87, 95, 124, 125, 137, 138, 141, 142, 143, 145, 146, 147, 148, 154, 155, 157, 219, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 698, 742, 776, 788, 789, 798, 804, 805, 807, 823, 858, 873, 874, 932, 953, 981, 1017, 1018, 1023], "inher": [606, 685], "inherit": [157, 374, 537, 824], "inidic": [15, 17], "initi": [91, 146, 804, 922, 925, 928, 929, 930, 945, 948, 955, 992], "initialize_st": 1023, "inlin": 155, "inner": [55, 151, 298, 321, 391, 442, 496, 554, 590], "inord": 948, "inosin": 303, "inplac": [796, 831, 854, 855, 857, 860, 870, 872, 939], "input": [61, 62, 63, 64, 65, 66, 67, 79, 95, 104, 106, 107, 108, 157, 169, 171, 198, 199, 229, 241, 326, 353, 372, 373, 396, 420, 447, 472, 501, 528, 556, 572, 603, 609, 614, 625, 628, 678, 679, 775, 787, 790, 791, 793, 797, 806, 832, 949, 954, 955, 1015, 1018], "input_is_dens": 834, "ins": [3, 17, 29, 113, 126, 159, 172, 201, 219, 229, 248, 266, 284, 303, 362, 374, 425, 478, 537, 575, 628, 651, 687, 698, 709, 720, 731, 742, 753, 764, 777, 807, 875, 961, 981, 993, 1004], "insdc": [145, 148, 219, 248, 284, 297], "insensit": [155, 587, 609, 614], "insert": [151, 240, 896], "insert_length": 896, "insid": [148, 151], "insight": [106, 107], "insignific": 1, "instal": 956, "instanc": [56, 60, 124, 125, 137, 138, 144, 158, 171, 184, 186, 187, 188, 190, 194, 229, 244, 245, 247, 299, 302, 321, 352, 361, 391, 419, 424, 442, 471, 477, 496, 527, 536, 554, 571, 574, 577, 587, 596, 602, 604, 605, 614, 628, 630, 645, 650, 651, 653, 668, 670, 676, 679, 681, 682, 683, 697, 719, 730, 763, 774, 787, 788, 789, 805, 820, 824, 850, 858, 873, 875, 891, 932, 953, 954, 961, 962, 965, 972, 1021, 1023], "instanti": [17, 145, 158, 374, 1023], "instead": [1, 51, 98, 145, 146, 148, 155, 158, 159, 169, 170, 171, 213, 242, 248, 260, 278, 330, 343, 345, 347, 349, 356, 400, 410, 412, 414, 416, 422, 451, 462, 464, 466, 468, 475, 505, 518, 520, 522, 524, 532, 558, 563, 565, 567, 569, 573, 628, 677, 679, 681, 795, 804, 805, 865, 866, 900, 955, 956, 1016], "institut": 147, "instruct": 1020, "instrument": 146, "int": [17, 41, 51, 58, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 112, 141, 148, 149, 154, 170, 198, 219, 229, 240, 244, 284, 310, 315, 322, 328, 329, 333, 341, 343, 344, 345, 347, 349, 353, 371, 381, 386, 392, 398, 399, 409, 410, 411, 412, 414, 416, 420, 432, 437, 443, 449, 450, 461, 462, 463, 464, 466, 468, 472, 485, 490, 497, 503, 504, 508, 516, 518, 519, 520, 522, 524, 528, 534, 535, 544, 549, 555, 557, 562, 563, 564, 565, 567, 569, 572, 593, 594, 605, 607, 608, 614, 620, 626, 643, 667, 677, 679, 680, 681, 682, 683, 685, 720, 764, 775, 787, 791, 795, 796, 798, 799, 802, 804, 805, 806, 823, 833, 839, 841, 863, 867, 875, 896, 900, 902, 911, 917, 926, 927, 939, 954, 959, 960, 980, 993], "int32": [833, 867], "int64": [1, 29, 47, 55, 320, 324, 354, 394, 445, 495, 499, 529, 537, 609, 833, 867, 1018], "integ": [1, 17, 104, 108, 139, 141, 144, 146, 147, 150, 151, 152, 153, 154, 284, 310, 381, 432, 485, 544, 609, 614, 627, 628, 677, 680, 681, 682, 683, 764, 806], "intend": [1, 85, 86, 155, 303, 374, 425, 775, 787, 958, 959], "intens": 804, "interablemetadata": 241, "interact": [685, 1020], "interest": [1, 155, 537, 609, 627, 685, 790, 798, 804, 921, 923, 1023], "interfac": [52, 53, 105, 155, 338, 340, 406, 408, 457, 459, 513, 515, 560, 561, 575, 677, 678, 679, 680, 954, 1016], "interleav": [153, 156], "intermedi": 896, "intern": [58, 140, 148, 151, 625, 893, 895, 897, 903, 905, 908, 917, 926, 931, 937, 947, 949, 950, 1016, 1021], "internet": [146, 157], "interpret": [1, 48, 75, 79, 104, 106, 107, 108, 139, 151, 155, 248, 284, 606, 790, 791, 798, 834], "interpro": 145, "interquantil": 84, "interrog": 981, "intersect": [321, 391, 442, 496, 554, 848, 876, 877, 901, 904], "interv": [69, 74, 78, 85, 145, 148, 149, 229, 230, 231, 232, 238, 240, 241, 242, 243, 244, 246, 303, 308, 320, 337, 358, 379, 405, 425, 430, 456, 478, 483, 495, 512, 537, 542, 559, 614, 802, 1015], "interval_metadata": [148, 149, 219, 229, 241, 244, 303, 308, 310, 337, 374, 379, 381, 405, 425, 430, 432, 456, 478, 483, 485, 512, 537, 542, 544, 559], "intervalmetadata": [149, 219, 228, 303, 425, 478, 537], "intracellular": 156, "introduc": [70, 81, 143, 146, 606], "introduct": 1015, "intron": [346, 413, 465, 478, 521, 566], "intvl": 229, "invalid": [1, 51, 55, 79, 95, 104, 106, 107, 108, 146, 297, 303, 425, 478, 678, 679, 787, 807, 874, 892, 897, 907, 918, 927, 931], "invalidate_cach": [897, 903], "invent": 147, "invers": [48, 608, 613, 616, 622], "inverse_shannon_uncertainti": 48, "invert": [343, 410, 462, 518, 563, 831], "investig": 1, "involv": [95, 607], "inward": 84, "io": [1, 56, 60, 79, 106, 107, 124, 125, 137, 138, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 627, 645, 650, 670, 676, 787, 788, 789, 832, 835, 858, 873, 913, 932, 953, 954, 980, 1015, 1021], "io_registri": 158, "ionom": 624, "ioregistri": [158, 169, 171], "ipr001360": 145, "ipr013781": 145, "ipr017853": 145, "ipr033132": 145, "ipyparallel": 109, "ipython": 777, "irrelev": [61, 62, 63], "irsairagsnvkgfyawsfldcnewfagftvrfglnfvd": 145, "is_circular": 149, "is_reverse_compl": [354, 529], "is_root": [916, 920, 1021], "is_tip": [897, 916, 919, 1021], "is_zero_bas": 16, "ism": [79, 106, 107], "isn": [29, 46, 49, 55, 81, 155, 156, 169, 171, 199, 219, 615, 616, 806, 850], "isnapshgnakpsystnpmtnisfekhgiplgpraasiwiyvypymfiqedf": 145, "iso": [833, 867], "isoleucin": 425, "isometr": [606, 607, 608, 615, 616], "isometri": [612, 613, 615, 616], "isomorph": [151, 612, 613, 615, 616], "issu": [77, 145, 146, 147, 155, 170, 955, 1016], "isubsampl": 806, "item": [61, 62, 63, 64, 65, 66, 67, 156, 330, 353, 400, 420, 451, 472, 505, 528, 537, 558, 572, 586, 601, 639, 649, 662, 675, 775, 806, 827, 863, 897, 939, 946, 947, 981, 982, 992, 1023], "iter": [29, 39, 44, 49, 54, 61, 62, 63, 64, 65, 66, 67, 68, 104, 108, 109, 112, 144, 154, 211, 219, 240, 241, 242, 244, 258, 276, 294, 310, 313, 318, 321, 329, 343, 353, 356, 381, 384, 389, 391, 399, 410, 420, 422, 432, 435, 440, 442, 450, 462, 472, 475, 485, 488, 493, 496, 504, 518, 528, 532, 544, 547, 552, 554, 557, 563, 572, 573, 575, 586, 589, 591, 593, 601, 609, 639, 641, 642, 649, 662, 665, 666, 675, 678, 681, 682, 775, 787, 804, 805, 813, 823, 824, 831, 832, 833, 844, 845, 848, 856, 862, 870, 876, 877, 884, 901, 904, 905, 914, 922, 925, 928, 929, 930, 938, 939, 945, 948, 978, 980, 982, 1004, 1021, 1023], "iter_": [845, 982], "iter_km": [330, 400, 451, 505, 558], "its": [1, 29, 46, 47, 49, 50, 52, 53, 54, 55, 61, 62, 63, 93, 145, 146, 147, 148, 151, 152, 156, 158, 171, 198, 219, 229, 284, 298, 330, 337, 338, 340, 345, 400, 405, 406, 408, 412, 451, 456, 457, 459, 464, 505, 512, 513, 515, 520, 537, 558, 559, 560, 561, 565, 579, 587, 610, 632, 655, 678, 786, 790, 792, 795, 800, 831, 875, 897, 927, 928, 937, 942, 947, 948, 954, 955, 979, 1016, 1021], "itself": [113, 126, 146, 153, 157, 199, 219, 303, 362, 425, 478, 537, 575, 685, 777, 831, 855, 870, 875, 1018], "itypeerror": 108, "iupac": [146, 147, 153, 154, 303, 333, 362, 372, 425, 478, 508, 537, 1018], "iv": [84, 89, 95], "j": [61, 63, 64, 66, 79, 82, 83, 91, 95, 96, 106, 107, 139, 141, 142, 146, 147, 148, 156, 157, 425, 586, 587, 601, 606, 615, 616, 617, 618, 620, 624, 626, 639, 649, 662, 675, 679, 680, 681, 791, 845, 905, 954], "j00123": 148, "j04373": 156, "jag": 850, "jaim": 895, "je": 685, "jet": 1, "jim": 147, "jj": [620, 626], "joe": 153, "join": [54, 141, 142, 147, 154, 156, 157, 298, 321, 391, 442, 496, 554, 824, 947, 954, 955], "joint": 148, "joseph": [146, 153, 1021], "jost": 95, "journal": [17, 67, 70, 73, 80, 95, 96, 98, 100, 148, 620, 626, 677], "json": [807, 834, 868, 874], "json_obj": 834, "json_tabl": 834, "juli": [17, 67], "julia": 898, "june": 151, "jupyt": 787, "just": [84, 85, 86, 91, 158, 817, 828, 845, 848, 869, 938, 1016, 1021, 1023], "justif": 84, "jyzox": 147, "k": [17, 70, 75, 95, 96, 98, 99, 100, 109, 303, 330, 344, 345, 400, 411, 412, 425, 451, 463, 464, 478, 505, 519, 520, 558, 564, 565, 575, 587, 605, 624, 678, 685, 905, 939, 946, 954], "k_": 801, "k__a": 823, "ka": 147, "kan": 157, "kannan": 157, "karsch": 157, "keemei": 155, "keep": [144, 148, 155, 242, 310, 381, 432, 485, 544, 775, 821, 822, 831, 843, 848, 937, 938], "kegg_pathwai": [833, 850, 867], "kei": [6, 29, 46, 49, 50, 52, 57, 68, 145, 146, 148, 156, 240, 244, 303, 327, 338, 346, 353, 397, 406, 413, 420, 425, 448, 457, 465, 472, 478, 502, 513, 521, 528, 537, 560, 566, 572, 591, 642, 666, 823, 827, 850, 872, 926, 946, 954, 1023], "kellei": [106, 107], "kempton": 84, "kendalltau": 679, "kept": 148, "kestrel": 156, "keto": 303, "keyerror": [681, 850], "keyword": [56, 60, 67, 124, 125, 137, 138, 145, 148, 150, 170, 190, 191, 192, 194, 195, 196, 244, 245, 247, 299, 302, 346, 352, 359, 360, 361, 413, 419, 424, 465, 471, 477, 521, 527, 534, 535, 536, 566, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953], "khovanskaya": 157, "kill": 621, "kind": 790, "kinet": 91, "kingdom": [141, 142, 157], "kit": 1015, "kj": 79, "klein": 148, "kmer": [344, 345, 411, 412, 463, 464, 519, 520, 564, 565, 605], "kmer_frequ": [330, 400, 451, 505, 558], "knight": [77, 79, 106, 107, 787], "know": [1, 17, 79, 106, 107, 143, 146, 153, 156, 158, 609, 801, 956, 1016], "knowledg": [936, 1016], "known": [70, 151, 190, 194, 624, 625, 791, 796, 1018], "kortlev": 156, "kqlaaargqr": 144, "kr": 677, "kruskal": [609, 804, 805], "kuo": 70, "kva": [360, 373, 535], "kw": 145, "kwarg": [56, 60, 67, 104, 108, 109, 112, 113, 124, 125, 126, 137, 138, 169, 171, 183, 190, 191, 192, 193, 194, 195, 196, 199, 200, 245, 247, 299, 302, 352, 359, 360, 361, 419, 424, 471, 477, 527, 534, 535, 536, 571, 574, 575, 596, 602, 645, 650, 670, 676, 764, 788, 789, 807, 835, 858, 873, 932, 953, 981, 1016], "kwarg1": 158, "kz": 147, "l": [17, 71, 72, 79, 84, 85, 95, 103, 145, 147, 157, 372, 425, 624, 679, 776, 790, 791, 798, 947], "l1": 31, "l2": 31, "l3": 31, "lab": [787, 804], "label": [29, 31, 34, 36, 46, 49, 50, 55, 57, 58, 59, 143, 146, 148, 153, 155, 156, 595, 624, 627, 644, 669, 677, 678, 680, 681, 682, 777, 787, 856, 895, 959], "labor": 804, "lack": 890, "lafond": 624, "lahaeavhvyktkyqayqkgkigitlvsnwlmplddnsipdikaaersldfq": 145, "lambda": [145, 775, 801, 804, 805, 823, 831, 835, 856, 859, 861, 870, 897, 910, 931, 934, 939, 950, 954, 955, 1023], "lane": 154, "lane_numb": 154, "langl": [615, 617], "languag": [2, 113, 144], "lapoint": 624, "larg": [17, 80, 84, 106, 107, 139, 146, 153, 618, 619, 678, 798, 804, 833, 893, 900], "larger": [48, 804], "largest": [17, 103, 844, 857], "last": [47, 113, 145, 153, 343, 372, 410, 462, 518, 537, 563, 679, 776, 1023], "latent": 113, "later": [147, 803], "latter": [1, 575], "law": 78, "layout": 148, "lb": 147, "lca": [79, 95, 895, 923], "ldot": [607, 608, 612, 613, 615, 616, 621, 622, 623], "lead": [79, 104, 106, 107, 108, 146, 147, 150], "learn": [807, 874], "least": [52, 53, 91, 151, 155, 284, 328, 337, 338, 340, 398, 405, 406, 408, 449, 456, 457, 459, 503, 512, 513, 515, 559, 560, 561, 609, 679, 787, 804, 805, 957, 1023], "leav": [84, 145, 355, 421, 474, 531, 831, 854], "lee": [17, 67, 70], "leesleyqqf": 144, "left": [55, 70, 98, 151, 216, 263, 281, 298, 300, 607, 608, 612, 617, 621, 622, 623, 624, 895, 917, 958, 959, 1021], "left_child_id": 946, "leftmost": 157, "legaci": [141, 142, 146], "legal": 198, "legend": 787, "legendr": [679, 776, 790, 791, 793, 794, 796, 797, 798], "len": [17, 29, 41, 315, 386, 437, 490, 549, 587, 683, 805, 876, 877, 901, 904, 942, 954, 1023], "length": [0, 1, 17, 29, 46, 47, 49, 54, 61, 62, 63, 79, 95, 106, 107, 113, 126, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 229, 241, 303, 304, 310, 315, 320, 321, 322, 324, 327, 330, 332, 333, 343, 344, 345, 347, 348, 349, 350, 354, 355, 356, 358, 359, 360, 362, 372, 373, 374, 375, 381, 386, 391, 392, 394, 397, 400, 410, 411, 412, 414, 415, 416, 417, 421, 422, 425, 426, 432, 437, 442, 443, 445, 448, 451, 462, 463, 464, 466, 467, 468, 469, 474, 475, 478, 479, 485, 490, 495, 496, 497, 499, 502, 505, 507, 508, 518, 519, 520, 522, 523, 524, 525, 529, 530, 531, 532, 534, 535, 537, 538, 544, 549, 554, 555, 558, 563, 564, 565, 567, 568, 569, 570, 573, 591, 604, 605, 609, 614, 642, 666, 677, 680, 681, 685, 795, 796, 804, 805, 833, 867, 875, 890, 896, 905, 906, 915, 937, 944, 946, 949, 950, 955, 1018, 1021, 1023], "lengtherror": 937, "leq": 606, "less": [17, 70, 79, 86, 106, 107, 109, 153, 155, 344, 345, 411, 412, 463, 464, 519, 520, 564, 565, 605, 679, 682, 775, 790, 806, 823, 863, 926, 960], "lesser": 95, "let": [1, 146, 147, 149, 153, 154, 156, 219, 229, 353, 420, 472, 528, 537, 572, 609, 679, 775, 800, 801, 804, 805, 844, 956, 1018, 1021, 1023], "letter": [77, 79, 146, 148, 425], "leu": 425, "leucin": 425, "level": [58, 85, 151, 198, 284, 609, 803, 804, 913, 961, 1018], "levelord": [925, 928, 929, 930, 945, 948], "leven": 681, "lewi": 95, "lexicon": [146, 147, 153], "lfc_result": 614, "li": 95, "librari": [17, 67, 106, 107, 146, 1015, 1016], "libreria": 81, "licens": 1015, "life": 79, "like": [1, 61, 62, 63, 109, 146, 148, 149, 150, 152, 155, 158, 346, 413, 465, 521, 566, 575, 627, 685, 708, 720, 741, 742, 752, 764, 796, 798, 804, 805, 828, 832, 835, 839, 868, 869, 980, 1016, 1023], "likelihood": 575, "likelyhood": [795, 799], "likewis": [55, 95, 156], "limit": [1, 78, 141, 151, 152, 153, 803, 804, 955], "limits_": [612, 613, 616, 617, 624], "linalg": 800, "linamaras": 145, "line": [81, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 198, 804, 832, 835, 893], "lineag": [157, 804, 914, 947], "lineage_map": 914, "linear": [81, 145, 148, 777, 791], "link": [108, 228, 284, 678, 685, 875], "linkag": [805, 912], "linkage_matrix": 912, "linnean": 95, "linux": 839, "lipman": [141, 142, 146], "list": [1, 67, 79, 95, 106, 107, 110, 111, 141, 145, 147, 148, 149, 152, 155, 156, 157, 158, 169, 171, 187, 188, 198, 229, 353, 420, 472, 528, 537, 572, 585, 589, 592, 625, 627, 638, 641, 661, 665, 679, 681, 682, 698, 720, 731, 753, 786, 801, 803, 804, 805, 823, 827, 831, 832, 833, 835, 844, 850, 856, 861, 862, 867, 875, 891, 897, 905, 907, 909, 912, 921, 923, 924, 939, 940, 944, 946, 947, 954, 955, 1016, 1023], "liter": 151, "literatur": [1, 75, 805], "live": [1, 243], "lkwh": [360, 373, 535], "ll": [1, 79, 106, 107, 678, 679, 682, 776, 801, 804, 805, 1021, 1023], "lladser": [85, 86, 106, 107], "lladser_ci": 86, "lladser_p": 85, "ln": [72, 80, 87, 96, 607, 609, 612, 617, 624], "load": [0, 144, 146, 147, 152, 154, 155, 216, 263, 281, 284, 300, 587, 609, 627, 628, 677, 678, 681, 682, 833, 979, 980, 1016], "loc": [36, 537, 609, 804], "local": [0, 64, 65, 66, 141, 142, 148], "local_pairwise_align": [61, 62, 63, 65, 66], "local_pairwise_align_nucleotid": [61, 62, 63, 64, 66], "local_pairwise_align_protein": [0, 61, 62, 63, 64, 65], "local_pairwise_align_ssw": [0, 61, 62, 63, 64, 65, 66], "locat": [17, 56, 60, 124, 125, 137, 138, 145, 151, 156, 184, 185, 186, 219, 245, 247, 299, 302, 328, 329, 352, 361, 398, 399, 419, 424, 449, 450, 471, 477, 503, 504, 527, 536, 557, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 852, 858, 873, 932, 936, 953, 958, 1022], "loci": 17, "locu": [145, 148, 157], "log": [87, 606, 607, 608, 609, 612, 613, 614, 615, 616, 620, 626], "log2": 614, "log_2": 98, "logarithm": [83, 98, 609], "logic": [158, 981], "logratio": 606, "long": [143, 146, 153, 155, 328, 398, 449, 503, 607, 678, 764, 790], "long_method_nam": [777, 959], "longer": [146, 153, 606, 805], "look": [68, 150, 152, 153, 158, 244, 353, 420, 472, 528, 534, 535, 572, 579, 609, 632, 655, 787, 803, 804, 805, 828, 897, 1004, 1021, 1023], "lookup": [61, 62, 63, 64, 65, 66, 184, 185, 186, 579, 632, 655, 679, 682, 892, 903, 907, 917, 918, 927, 931, 946, 981], "lookup_id": [576, 594, 629, 643, 652, 667], "loop": [146, 951, 952], "loos": [1, 685], "lorenz": 81, "lose": [681, 796], "loss": [79, 685], "lost": [681, 796], "lot": 790, "love": [807, 874], "lovel": [620, 626], "low": [86, 776, 796, 804, 863], "lower": [84, 85, 146, 153, 219, 284, 609, 614, 666, 673, 679, 775, 776, 805], "lower_bound": [74, 78, 85], "lower_quantil": 84, "lowercas": [17, 145, 146, 147, 148, 154, 303, 321, 374, 391, 425, 442, 478, 496, 537, 554], "lowest": [79, 95, 921, 923], "lowest_common_ancestor": 921, "lozupon": [79, 106, 107], "lq": 84, "lsmat": [596, 602, 645, 650, 670, 676], "luca": 895, "ly": 425, "lysin": 425, "m": [17, 64, 70, 79, 95, 106, 107, 141, 142, 145, 147, 153, 157, 303, 362, 363, 372, 425, 478, 587, 678, 681, 685, 787, 790, 791, 797, 798, 800, 803, 833, 839, 867, 938, 955], "m1": 900, "m2": 900, "m24803": 156, "m24804": 156, "m_shape": 800, "ma": [70, 356, 422, 475, 532, 573], "machin": 154, "machine_nam": 154, "macrophag": 804, "madden": 146, "made": [29, 91, 537, 609, 628, 651, 775, 823, 891, 908, 909, 931, 957], "magnitud": [91, 614, 679, 681, 796, 956], "magnoliophyta": 145, "magnuson": 95, "magurran": [84, 90], "mai": [1, 3, 17, 48, 57, 79, 86, 142, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 158, 170, 187, 188, 198, 219, 243, 284, 296, 297, 303, 330, 374, 400, 425, 451, 478, 505, 537, 558, 575, 579, 589, 604, 609, 627, 632, 641, 655, 665, 679, 681, 685, 775, 790, 801, 803, 804, 805, 806, 823, 913, 956, 979, 981, 1016, 1018], "main": 248, "mainli": [686, 776], "maintain": [146, 151, 158, 668, 790, 791, 801, 804], "major": [47, 606, 673, 833, 867, 954], "make": [48, 55, 146, 151, 155, 158, 216, 263, 281, 284, 300, 363, 579, 604, 632, 655, 677, 681, 805, 943, 946, 947, 955, 961, 981, 1023], "mam": 157, "manag": [198, 199, 200], "mandal": 609, "mani": [1, 70, 94, 111, 151, 155, 575, 606, 609, 685, 790, 796, 804, 805, 823, 1023], "manipul": [0, 52, 53, 155, 284, 338, 340, 406, 408, 457, 459, 513, 515, 537, 560, 561, 606, 627, 833], "mann": 609, "manner": [47, 146, 153, 310, 324, 381, 394, 432, 445, 485, 499, 544, 679, 796], "mannwhitneyu": 609, "mantel": [1, 627, 682, 685], "manual": [70, 74, 84, 89, 155, 954], "map": [1, 50, 57, 109, 172, 284, 297, 679, 682, 685, 686, 720, 764, 787, 803, 805, 823, 856, 872, 914, 917, 1018], "map_async": 109, "map_f": 109, "mar": [61, 64, 83], "marchand": 624, "marguerat": [620, 626], "margush": 954, "marin": 678, "mark": [145, 148, 156, 1023], "marrow": 804, "marth": [17, 67], "marti": [680, 681], "martin": [606, 618], "mask": [17, 356, 422, 475, 532, 573, 620, 626], "mask_auto": 17, "mask_gap": [356, 422, 475, 532, 573], "mask_length": 17, "mat": [575, 587, 590, 593, 607, 608, 610, 611, 612, 613, 615, 616, 618, 619, 620, 944], "match": [0, 17, 46, 49, 55, 62, 65, 68, 141, 146, 147, 155, 198, 199, 212, 217, 218, 259, 264, 265, 277, 282, 283, 284, 296, 298, 301, 308, 328, 329, 347, 349, 350, 357, 372, 379, 398, 399, 414, 416, 417, 423, 430, 449, 450, 466, 468, 469, 476, 483, 503, 504, 522, 524, 525, 533, 542, 557, 567, 569, 570, 593, 628, 677, 679, 681, 682, 801, 803, 804, 805, 899, 900, 909, 911, 1018, 1023], "match_frequ": [349, 416, 468, 524, 569, 1018], "match_scor": [17, 62, 65, 68], "matevz": 624, "mathbb": [607, 608, 609, 612, 613, 615, 616], "mathemat": [75, 98, 106, 606, 776, 895, 898, 954], "mathemt": 107, "matplotlib": [595, 644, 669, 777, 787], "matric": [1, 63, 66, 139, 150, 425, 575, 577, 584, 587, 592, 627, 628, 630, 637, 653, 660, 678, 679, 682, 684, 685, 792, 796, 900], "matrix": [1, 17, 68, 104, 108, 109, 112, 356, 422, 475, 532, 573, 575, 576, 577, 579, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 599, 600, 601, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 632, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 651, 652, 653, 655, 660, 661, 662, 664, 665, 666, 667, 668, 669, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 776, 787, 790, 792, 793, 794, 796, 797, 798, 800, 802, 807, 808, 810, 823, 833, 834, 837, 852, 859, 863, 865, 866, 867, 874, 912, 944, 955, 1015, 1020], "matrix_data": [807, 874], "matrix_element_typ": 834, "matrix_rank": 800, "matsen": 95, "matter": [155, 220, 241, 579, 632, 655], "matthew": 954, "matto": 624, "max": [17, 70, 71, 91, 804, 805, 844, 915], "max_count": [801, 804, 805], "max_i": 103, "max_sample_count": 844, "max_width": 146, "maxim": [17, 95, 678, 791], "maxima": 847, "maximum": [96, 103, 146, 147, 609, 614, 678, 720, 775, 791, 795, 799, 804, 805, 847, 900], "mccoi": 95, "mcdonald": [807, 874], "mcentyr": 146, "mci": 1018, "mcintosh": [88, 89], "mcintosh_": 88, "mcintosh_d": 89, "mcmorri": 954, "md": [146, 819, 827, 831, 856, 870], "md5": [145, 980], "md_i": 845, "md_j": 845, "mdfivaifalfvissftitstnaveastlldignlsr": 145, "mean": [149, 151, 158, 198, 229, 244, 303, 332, 333, 507, 508, 586, 601, 606, 609, 612, 614, 624, 639, 649, 662, 675, 742, 764, 790, 794, 795, 796, 799, 801, 802, 804, 805, 833, 867, 1016, 1021], "meaning": [17, 46, 49, 55, 796, 1018], "measur": [1, 75, 77, 83, 85, 86, 89, 90, 94, 95, 96, 98, 99, 100, 106, 107, 575, 609, 620, 626, 627, 790, 803, 804, 875, 895, 1017], "mechan": [981, 1023], "media": 804, "median": [609, 681], "medic": 145, "medlin": 156, "meepqsdpsv": [356, 422, 475, 532, 573], "meet": [67, 155, 244, 296, 297, 950], "member": [190, 194, 981, 1004, 1023], "membership": 158, "meme_v4": 143, "memo": [33, 231, 307, 378, 429, 482, 541], "memori": [81, 143, 144, 146, 147, 148, 153, 154, 156, 284, 627, 682, 775, 796, 807, 874, 980, 1016], "mengyao": [17, 67], "menopaus": 805, "menten": 91, "mention": 151, "merg": 284, "merged_t": 848, "messag": [1, 79, 104, 106, 107, 108, 698, 742, 960, 1016], "met": [1, 425, 1004], "met_neg": 805, "met_po": 805, "meta": [155, 803, 804], "metabolit": [1, 805, 807, 874, 1017], "metabolite_test": 805, "metadata": [0, 1, 29, 34, 43, 46, 47, 49, 52, 53, 54, 55, 57, 58, 140, 143, 145, 146, 147, 148, 149, 153, 154, 303, 308, 310, 317, 319, 320, 321, 324, 327, 337, 338, 340, 346, 353, 354, 358, 359, 360, 362, 372, 373, 374, 379, 381, 388, 390, 391, 394, 397, 405, 406, 408, 413, 420, 425, 430, 432, 439, 441, 442, 445, 448, 456, 457, 459, 465, 472, 478, 483, 485, 492, 494, 495, 496, 499, 502, 512, 513, 515, 521, 528, 529, 530, 534, 535, 537, 542, 544, 551, 553, 554, 559, 560, 561, 566, 572, 591, 642, 666, 678, 686, 698, 720, 731, 742, 764, 787, 798, 801, 803, 804, 805, 808, 818, 819, 821, 822, 823, 827, 828, 831, 833, 834, 835, 838, 843, 848, 850, 856, 865, 866, 867, 869, 870, 871, 1015, 1018, 1019], "metadata_f": 823, "metadata_field": [833, 867], "metadata_formatt": [828, 869], "metadata_i": 845, "metadata_j": 845, "metadata_map": [686, 687, 709, 720, 753, 764], "metadatacolumn": [201, 202, 208, 210, 211, 266, 267, 273, 275, 276, 284, 295], "metadatafileerror": 297, "metag": 820, "metagenom": 820, "metatdata": 145, "metdata": [537, 848], "methionin": [372, 425], "method": [0, 1, 3, 17, 29, 36, 48, 55, 56, 60, 61, 81, 104, 106, 108, 109, 112, 113, 124, 125, 126, 137, 138, 140, 144, 152, 155, 159, 169, 171, 172, 189, 201, 219, 229, 240, 245, 247, 248, 266, 284, 299, 302, 303, 306, 307, 321, 330, 352, 354, 360, 361, 362, 371, 373, 374, 377, 378, 391, 400, 419, 424, 425, 428, 429, 442, 451, 471, 477, 478, 481, 482, 496, 505, 527, 529, 535, 536, 537, 540, 541, 554, 558, 571, 574, 575, 596, 602, 606, 609, 614, 618, 624, 627, 628, 645, 650, 651, 668, 670, 676, 677, 678, 679, 680, 681, 682, 687, 698, 708, 709, 720, 731, 741, 742, 752, 753, 764, 775, 777, 787, 788, 789, 790, 791, 796, 807, 857, 858, 867, 873, 875, 876, 877, 893, 895, 896, 897, 900, 901, 903, 904, 905, 906, 908, 910, 911, 931, 932, 937, 939, 951, 952, 953, 954, 955, 961, 973, 980, 981, 982, 992, 1004, 1015, 1018, 1021, 1023], "metodologica": 81, "metric": [48, 70, 75, 79, 80, 95, 104, 105, 106, 107, 108, 109, 110, 111, 112, 147, 326, 396, 447, 501, 556, 591, 605, 642, 651, 666, 875, 1018], "metricspac": 651, "mgc": 157, "micha": 91, "michael": 147, "microbi": [79, 85, 86, 95, 106, 107, 609, 677, 678, 680, 681, 787], "microbiol": [106, 107], "microbiom": [1, 95, 109, 609, 614, 796], "microsoft": 155, "mid": 937, "middl": 243, "midpoint": [937, 955], "mieadkvahvqvgnnleh": 156, "might": [1, 81, 150, 152, 678, 803, 804, 805, 900, 1016], "miller": [141, 142], "million": 109, "min": [95, 100, 805], "min_count": [801, 804, 805], "min_group_s": 823, "min_length": [328, 343, 398, 410, 449, 462, 503, 518, 563, 1018], "minim": 151, "minima": 851, "minimize_scalar": 80, "minimum": [79, 95, 100, 157, 333, 343, 410, 462, 508, 518, 563, 609, 681, 775, 804, 805, 823, 851], "mininum": 614, "minor": [142, 833, 867], "minter": [0, 29, 34, 46, 49, 57, 58, 143, 153], "minu": [48, 148, 156, 753], "mirror": 614, "misc_bind": 148, "miscellan": 1015, "mislead": [48, 112], "mismatch": [0, 17, 62, 65, 68, 141, 142, 347, 348, 349, 414, 415, 416, 466, 467, 468, 522, 523, 524, 567, 568, 569, 593, 679, 899], "mismatch_frequ": [347, 414, 466, 522, 567, 1018], "mismatch_scor": [17, 62, 65, 68], "miss": [141, 146, 155, 156, 210, 212, 213, 215, 217, 218, 248, 257, 259, 260, 262, 264, 265, 275, 277, 278, 280, 282, 283, 284, 293, 297, 301, 321, 391, 442, 496, 554, 606, 618, 678, 787, 803, 804, 1023], "missing_schem": [201, 248, 266], "missingiderror": [579, 586, 589, 594, 601, 632, 639, 641, 643, 649, 655, 662, 665, 667, 675], "missingnodeerror": [79, 95, 104, 106, 107, 108, 908, 909, 911, 926, 939], "mit": 143, "mitochondri": [157, 359, 371, 534], "mix": 155, "mizrachi": 157, "ml": 91, "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm": 362, "mn": 90, "moac": 141, "mode": [48, 158, 198, 372, 805, 823, 981], "model": [2, 84, 85, 86, 91, 113, 144, 587, 606, 614, 627, 805], "moder": 679, "modif": [229, 685], "modifi": [58, 146, 148, 156, 189, 303, 425, 478, 537, 668, 764, 797, 831, 870, 939], "modul": [0, 1, 2, 144, 156, 158, 197, 603, 606, 627, 686, 776, 801, 979, 980, 1016, 1017, 1018, 1019, 1020, 1021, 1023], "mol": [61, 64, 141, 142, 145, 148], "mol_typ": [145, 148], "molbev": 955, "molecul": [145, 146, 148, 537, 575, 1018], "molecular": [64, 685, 895, 955, 1018], "moment": [145, 679, 1023], "monkei": 189, "monkey_patch": [169, 171], "monoton": [627, 628, 682, 683], "mont": 801, "month": 157, "mooer": 95, "more": [0, 1, 47, 48, 49, 56, 60, 61, 67, 70, 81, 104, 111, 124, 125, 137, 138, 142, 145, 146, 147, 151, 152, 153, 154, 155, 156, 191, 195, 215, 245, 247, 262, 280, 284, 298, 299, 302, 334, 335, 336, 339, 352, 361, 402, 403, 404, 407, 419, 424, 425, 453, 454, 455, 458, 460, 471, 477, 509, 510, 511, 514, 527, 536, 571, 574, 579, 596, 602, 606, 609, 611, 614, 627, 632, 645, 650, 655, 668, 670, 676, 677, 678, 679, 680, 681, 682, 685, 697, 719, 730, 763, 774, 775, 787, 788, 789, 790, 791, 798, 804, 805, 807, 823, 839, 858, 873, 874, 896, 913, 932, 953, 954, 1016, 1021, 1022], "mosaic": 156, "most": [47, 71, 80, 95, 139, 143, 146, 147, 150, 151, 153, 155, 157, 372, 537, 679, 775, 798, 801, 915, 917, 954, 1021], "mostli": [155, 156], "motif": [328, 398, 449, 503, 1018], "motif_slic": [328, 398, 449, 503], "motif_typ": [328, 398, 449, 503], "motiv": 109, "mpl": [359, 360, 362, 372, 373, 534, 535], "mpt": [359, 534], "mqhvsapvfvfectrlai": 156, "mrna": 145, "msa": [0, 29, 30, 31, 32, 33, 34, 36, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 143, 146, 147, 153, 156], "msa1": 55, "msa2": 55, "msa_copi": [32, 33], "msl072": 955, "mtcraqliavprassla": 156, "mtrand": [900, 939], "mu": 801, "mu_": 801, "much": [0, 1, 79, 106, 107, 151, 1016], "mullikin": 147, "multi": 609, "multi_replac": [609, 619], "multifurc": [151, 1021], "multiindex": [58, 673], "multimod": 790, "multinomi": [614, 863], "multipl": [0, 29, 54, 79, 106, 107, 143, 145, 146, 147, 148, 149, 151, 157, 219, 241, 537, 575, 606, 609, 614, 618, 685, 776, 798, 804, 823, 947, 954, 1016, 1021], "multiple_comparisons_correct": 609, "multipli": 95, "multivari": [607, 677, 678, 680, 681, 790, 791, 1015], "must": [17, 29, 46, 49, 55, 56, 60, 79, 81, 95, 106, 107, 108, 109, 112, 124, 125, 137, 138, 141, 143, 146, 147, 150, 151, 152, 153, 155, 156, 170, 244, 245, 247, 284, 296, 298, 299, 302, 303, 321, 326, 346, 352, 359, 361, 391, 396, 413, 419, 424, 425, 442, 447, 465, 471, 477, 478, 496, 501, 521, 527, 534, 536, 537, 554, 556, 566, 571, 574, 589, 596, 602, 609, 614, 625, 628, 641, 645, 650, 665, 670, 676, 677, 678, 679, 680, 681, 683, 685, 708, 741, 752, 775, 787, 788, 789, 790, 795, 804, 805, 806, 823, 831, 832, 839, 848, 856, 858, 868, 869, 870, 873, 897, 932, 939, 947, 953, 954, 955, 958, 960, 980, 981, 1004, 1023], "mutabl": [81, 537, 961, 1018], "mutant": 148, "mutat": [575, 587, 875], "my": 1018, "my_obj": 1016, "myeloid": 804, "myer": [141, 142], "myformat": [158, 169, 170, 171], "myformat2": [169, 170, 171], "myformat_read": [169, 171], "myformat_sniff": 170, "myobject": [169, 171], "n": [1, 17, 71, 72, 78, 80, 81, 82, 87, 88, 89, 90, 91, 95, 97, 103, 139, 141, 142, 143, 146, 147, 148, 152, 153, 154, 156, 157, 158, 169, 170, 171, 198, 199, 303, 343, 356, 410, 422, 425, 449, 462, 475, 478, 518, 532, 563, 573, 618, 619, 627, 679, 682, 685, 775, 790, 791, 792, 795, 797, 798, 799, 801, 805, 806, 833, 839, 863, 867, 876, 877, 889, 897, 901, 904, 910, 915, 917, 924, 939, 940, 947, 954, 955, 960, 1018], "n1": 835, "n4": 835, "n_": [70, 71], "n_compon": [607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626], "n_composit": [607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623], "n_featur": 624, "n_i": [72, 88, 89], "n_ob": 865, "n_partit": 624, "n_var": 865, "na": [155, 832], "naess": 624, "name": [1, 56, 60, 79, 95, 106, 107, 124, 125, 137, 138, 141, 142, 147, 148, 149, 151, 152, 154, 155, 156, 158, 159, 184, 185, 186, 191, 195, 202, 208, 217, 218, 219, 245, 247, 249, 255, 264, 265, 267, 273, 282, 283, 284, 285, 291, 295, 297, 298, 299, 301, 302, 346, 352, 361, 362, 363, 369, 371, 413, 419, 424, 465, 471, 477, 521, 527, 536, 566, 571, 574, 575, 587, 592, 596, 602, 609, 614, 620, 625, 645, 650, 670, 676, 677, 678, 680, 681, 686, 698, 742, 777, 787, 788, 789, 823, 828, 858, 866, 869, 873, 875, 889, 891, 892, 893, 895, 897, 898, 899, 900, 903, 907, 908, 909, 910, 911, 913, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 934, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 953, 954, 973, 979, 1016, 1021], "name_txt": 157, "named_gc": 363, "namedtemporaryfil": 198, "nan": [48, 51, 55, 86, 141, 155, 212, 213, 215, 217, 218, 248, 259, 260, 262, 264, 265, 277, 278, 280, 282, 283, 284, 293, 301, 321, 330, 391, 400, 442, 451, 496, 505, 554, 558, 604, 605, 677, 678, 679, 680, 681, 682, 685, 787, 803, 804, 946, 958], "nan_length_valu": 946, "nanmean": 805, "naohisa": 147, "nar": 147, "nasanfta": [343, 410, 462, 518, 563], "nat": 148, "natal": 624, "nation": [146, 157, 587], "nativ": [1, 597, 646, 671, 796], "natl": [63, 66], "natsort": 861, "natur": [75, 84, 99, 100, 284, 861], "nb": 199, "nbk21097": 146, "nbk279675": 141, "nbk279682": 142, "nc": 199, "ncbi": [62, 63, 65, 66, 141, 142, 146, 148, 157, 359, 360, 362, 363, 370, 371, 372, 373, 534, 535, 913, 1018], "ncbiinsight": 157, "ncifcrf": 48, "ncrna": 537, "nd": 832, "ndarrai": [51, 108, 113, 126, 303, 305, 322, 323, 325, 326, 331, 341, 342, 347, 348, 349, 350, 351, 356, 376, 392, 393, 395, 396, 401, 409, 414, 415, 416, 417, 418, 422, 425, 427, 443, 444, 446, 447, 452, 461, 466, 467, 468, 469, 470, 473, 475, 478, 480, 497, 498, 500, 501, 506, 516, 517, 522, 523, 524, 525, 526, 532, 537, 539, 555, 556, 562, 567, 568, 569, 570, 573, 579, 597, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 622, 623, 624, 628, 632, 646, 655, 663, 668, 671, 683, 685, 799, 806, 826, 865, 912], "ne2": 145, "nearbi": 17, "nearli": [61, 62, 63], "necessari": [55, 141, 153, 229, 537, 628, 677, 678, 679, 708, 741, 752, 900, 979, 1016], "necessarili": [46, 49, 55, 152, 330, 400, 451, 505, 537, 558, 806], "nee": 79, "need": [1, 46, 49, 54, 79, 106, 107, 109, 139, 144, 149, 151, 158, 169, 171, 198, 229, 244, 374, 609, 614, 615, 616, 625, 677, 678, 680, 681, 682, 775, 776, 791, 798, 801, 804, 805, 833, 897, 900, 958, 959, 981, 1023], "needl": 61, "needleman": [0, 61, 62, 63], "neg": [1, 17, 62, 65, 68, 81, 155, 372, 611, 618, 619, 651, 790, 791, 796, 801, 805, 955], "negat": 242, "neglig": 1, "nei": 955, "neighbor": [148, 940, 955], "neighbour_join": 955, "neither": [29, 57, 199, 859, 939, 948], "nellangiqpfvtlfhwdlpqvledeyggflnsgvindfrdytdlcfkefgd": 145, "neq": 801, "nest": [151, 627, 679, 850, 865, 942, 1021], "never": [146, 156], "new": [0, 46, 49, 56, 57, 58, 72, 83, 85, 86, 106, 124, 137, 157, 169, 170, 171, 183, 193, 229, 245, 298, 299, 310, 321, 324, 352, 353, 381, 391, 394, 419, 420, 432, 442, 445, 471, 472, 485, 496, 499, 527, 528, 537, 544, 554, 571, 572, 596, 645, 668, 670, 679, 680, 682, 788, 791, 799, 831, 854, 855, 857, 858, 860, 862, 870, 871, 872, 876, 877, 901, 904, 931, 932, 936, 937, 951, 952, 955, 1018, 1021, 1023], "new_fasta_fh": 146, "new_fh": 147, "new_qual_fh": 146, "new_tabl": [831, 854, 861], "new_taxdump": 157, "new_tre": [951, 952], "newcastl": 145, "newick": [79, 106, 107, 833, 838, 867, 889, 895, 932, 953, 955, 1016, 1021], "newick_doc": 151, "newick_str": 955, "newicktre": 151, "newlin": [146, 151, 153, 158, 159, 190, 191, 194, 195, 198], "next": [1, 79, 85, 86, 106, 107, 145, 151, 158, 537, 609, 764, 790, 954, 1021, 1023], "nh": 156, "nhx": 156, "nich": 791, "nident": [141, 142], "nih": [62, 63, 65, 66, 141, 142, 146, 148, 154, 157, 362, 370, 371], "nlm": [62, 63, 65, 66, 141, 142, 146, 148, 157, 362, 370, 371], "nnz": [807, 833, 867, 874], "no_gap": [343, 410, 462, 518, 563], "node": [1, 79, 106, 107, 625, 875, 876, 877, 880, 884, 890, 891, 892, 894, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 937, 940, 941, 944, 945, 946, 947, 948, 949, 950, 954, 1016, 1021], "node_c": 924, "node_id": [911, 917, 946], "node_info": 151, "nodes_new": 157, "nodes_slim": 157, "nolengtherror": [890, 906, 915], "nomenclatur": [303, 374, 425, 478, 537], "non": [29, 73, 81, 141, 143, 145, 149, 155, 219, 303, 339, 351, 355, 407, 418, 421, 425, 458, 470, 474, 514, 526, 531, 575, 606, 607, 608, 609, 611, 614, 618, 619, 621, 622, 623, 651, 677, 680, 681, 685, 790, 796, 801, 807, 833, 848, 867, 870, 899, 900, 905, 1018], "non_tip": [922, 928, 929, 930, 945, 948, 954, 1021], "noncanon": [355, 421, 474, 531], "none": [17, 29, 46, 48, 49, 56, 57, 58, 62, 63, 65, 66, 67, 79, 91, 95, 104, 106, 107, 108, 109, 124, 137, 141, 146, 150, 158, 159, 169, 171, 184, 185, 186, 190, 194, 198, 216, 219, 229, 240, 242, 244, 245, 263, 281, 284, 293, 296, 297, 299, 300, 303, 322, 326, 328, 329, 330, 341, 352, 356, 357, 374, 392, 396, 398, 399, 400, 409, 419, 422, 423, 425, 443, 447, 449, 450, 451, 461, 471, 475, 476, 478, 497, 501, 503, 504, 505, 516, 527, 532, 533, 537, 555, 556, 557, 558, 562, 571, 573, 591, 595, 596, 609, 614, 615, 616, 618, 619, 620, 628, 642, 644, 645, 651, 666, 669, 670, 677, 678, 679, 680, 681, 682, 683, 687, 709, 720, 753, 775, 777, 787, 788, 792, 795, 796, 799, 800, 802, 803, 804, 805, 807, 823, 827, 828, 833, 834, 835, 838, 843, 848, 849, 856, 858, 859, 863, 867, 868, 869, 870, 874, 875, 895, 896, 900, 903, 905, 913, 922, 924, 927, 928, 929, 930, 932, 939, 943, 944, 946, 947, 948, 951, 952, 954, 955, 981, 982, 1004, 1018, 1021, 1023], "nonlinear": 91, "nonmatch": [679, 682], "nonneg": 146, "nonparametr": [78, 606, 618], "nontip": 925, "nonzero": [140, 831, 836, 847, 851, 853, 854, 870, 874], "noparenterror": 890, "noqa": 833, "nor": [29, 46, 49, 57, 150, 153, 628, 859, 939], "norm": [687, 709, 753, 764, 823], "normal": [78, 107, 147, 148, 248, 284, 677, 681, 796, 797, 798, 801, 802, 804, 805, 823, 854, 897], "not_non": [1004, 1023], "notabl": 147, "notat": [151, 155, 425], "note": [3, 17, 29, 36, 41, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 109, 111, 140, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 219, 229, 230, 231, 243, 296, 298, 303, 306, 307, 310, 321, 324, 327, 330, 332, 343, 354, 356, 358, 359, 360, 362, 363, 370, 371, 372, 373, 374, 377, 378, 381, 391, 394, 397, 400, 410, 422, 425, 428, 429, 432, 442, 445, 448, 451, 462, 475, 478, 481, 482, 485, 496, 499, 502, 505, 507, 518, 529, 530, 532, 534, 535, 537, 540, 541, 544, 554, 558, 563, 573, 575, 579, 586, 587, 597, 600, 601, 604, 605, 609, 614, 615, 616, 618, 620, 624, 625, 626, 628, 632, 639, 646, 648, 649, 651, 655, 662, 663, 668, 671, 674, 675, 677, 678, 679, 680, 681, 682, 685, 775, 787, 790, 791, 796, 798, 799, 804, 805, 806, 807, 810, 823, 824, 832, 833, 839, 848, 850, 863, 865, 866, 867, 874, 893, 895, 896, 897, 898, 900, 905, 911, 913, 939, 944, 946, 947, 948, 949, 954, 955, 958, 960, 979, 980, 1018, 1021, 1023], "notebook": 777, "noth": [58, 198, 298, 357, 423, 476, 533, 981], "notic": [1, 146, 151, 153, 805, 1023], "notifi": 679, "notimplementederror": [790, 791], "notion": 679, "notredam": [620, 626], "notstart": 155, "nov": [63, 66, 145, 787], "novel": 609, "novemb": 955, "now": [1, 84, 145, 146, 148, 153, 537, 606, 609, 678, 775, 776, 801, 804, 805, 870, 1021, 1023], "np": [48, 51, 79, 86, 95, 106, 107, 113, 126, 141, 212, 215, 259, 262, 277, 280, 284, 293, 303, 305, 322, 323, 325, 326, 330, 331, 341, 342, 347, 348, 349, 350, 351, 356, 376, 392, 393, 395, 396, 400, 401, 409, 414, 415, 416, 417, 418, 422, 425, 427, 443, 444, 446, 447, 451, 452, 461, 466, 467, 468, 469, 470, 473, 475, 478, 480, 497, 498, 500, 501, 505, 506, 516, 517, 522, 523, 524, 525, 526, 532, 537, 539, 555, 556, 558, 562, 567, 568, 569, 570, 573, 575, 604, 605, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 677, 679, 680, 681, 682, 685, 686, 775, 776, 787, 800, 801, 803, 804, 805, 806, 820, 821, 822, 823, 824, 826, 827, 830, 831, 837, 838, 839, 840, 841, 843, 844, 847, 848, 849, 851, 854, 855, 856, 857, 859, 861, 862, 863, 864, 865, 869, 870, 872, 917, 939, 954, 958], "np_286546": 141, "npd": 95, "nrte": [343, 410, 462, 518, 563], "ns_": 91, "nt": 219, "nuc": [356, 422, 475, 532, 573, 575, 587], "nuc_pattern": 1023, "nuccor": 148, "nucl": 147, "nucleic": [153, 157, 303, 374, 425, 478, 537], "nucleobas": [303, 478], "nucleotid": [0, 17, 62, 65, 142, 145, 146, 147, 148, 303, 320, 342, 354, 356, 422, 475, 478, 495, 517, 529, 532, 573, 575, 587, 1023], "nucleotidemixin": [320, 354, 495, 529], "null": [151, 609, 614, 685, 801, 870], "num_it": [801, 804, 805], "num_object": 683, "num_repeat": 91, "num_run": [804, 805], "number": [1, 29, 41, 46, 49, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 139, 141, 143, 145, 146, 148, 151, 153, 154, 156, 157, 198, 219, 240, 284, 315, 322, 330, 347, 349, 386, 392, 400, 414, 416, 437, 443, 451, 466, 468, 490, 497, 505, 522, 524, 549, 555, 558, 567, 569, 575, 590, 608, 609, 614, 618, 619, 621, 622, 623, 624, 628, 677, 678, 679, 680, 681, 682, 683, 685, 720, 764, 775, 791, 795, 796, 798, 799, 801, 802, 804, 805, 806, 807, 823, 833, 837, 839, 853, 863, 867, 895, 902, 939, 958, 959], "number_of_dimens": [681, 796], "numer": [1, 80, 84, 141, 150, 155, 157, 266, 284, 293, 297, 301, 624, 678, 679, 720, 776, 787, 790, 791, 797, 798, 805, 959], "numeric_onli": 1, "numericmetadatacolumn": [248, 284, 295], "numpi": [1, 108, 113, 126, 579, 597, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 632, 646, 655, 663, 671, 677, 681, 683, 685, 686, 720, 742, 764, 775, 776, 801, 803, 804, 805, 806, 820, 821, 822, 823, 824, 827, 830, 831, 837, 838, 839, 840, 841, 843, 844, 848, 849, 853, 854, 855, 856, 857, 859, 861, 862, 863, 864, 867, 869, 870, 900, 939, 1018], "nutrient": 624, "nwnnnnnn": [334, 339, 402, 407, 453, 458, 509, 514], "o": [55, 56, 60, 95, 124, 125, 137, 138, 145, 146, 147, 154, 156, 245, 247, 299, 302, 352, 361, 419, 424, 425, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 839, 858, 873, 932, 953, 955, 1016, 1022], "o1": [821, 822, 824, 827, 830, 831, 837, 838, 839, 840, 841, 843, 844, 848, 849, 850, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 869, 870, 872], "o2": [821, 822, 824, 827, 830, 831, 837, 838, 839, 840, 841, 843, 844, 848, 849, 850, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 869, 870, 872], "o3": [821, 822, 824, 830, 839, 844, 848, 857], "o31698": 156, "o31699": 156, "o4": [821, 822, 824, 839, 857], "o5": [824, 839], "o83071": 156, "ob": [1, 73, 102, 865], "obesrvation_metadata_f": 848, "obf": 147, "obj": [158, 171, 192, 196, 972, 1023], "object": [0, 1, 2, 17, 29, 32, 33, 34, 43, 46, 49, 50, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 109, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 190, 192, 194, 196, 201, 202, 208, 211, 214, 219, 220, 226, 228, 229, 230, 231, 232, 238, 240, 241, 242, 243, 244, 248, 249, 255, 258, 261, 266, 267, 273, 276, 279, 284, 285, 291, 294, 297, 298, 301, 303, 305, 308, 310, 321, 322, 326, 329, 330, 337, 338, 340, 341, 342, 347, 348, 349, 350, 357, 376, 379, 381, 391, 392, 396, 399, 400, 405, 406, 408, 409, 414, 415, 416, 417, 423, 425, 427, 430, 432, 442, 443, 447, 450, 451, 456, 457, 459, 461, 466, 467, 468, 469, 476, 478, 480, 483, 485, 496, 497, 501, 504, 505, 512, 513, 515, 516, 517, 522, 523, 524, 525, 533, 537, 539, 542, 544, 554, 555, 556, 557, 558, 559, 560, 561, 562, 567, 568, 569, 570, 579, 589, 591, 595, 603, 604, 609, 627, 628, 632, 641, 642, 644, 651, 655, 665, 666, 669, 677, 678, 680, 681, 682, 683, 708, 741, 752, 790, 791, 796, 797, 798, 807, 810, 822, 832, 833, 834, 835, 860, 865, 867, 868, 869, 872, 875, 892, 900, 907, 939, 944, 946, 955, 958, 959, 980, 981, 1004, 1016, 1018, 1021, 1023], "obs_id": [837, 839, 844], "obs_map": 835, "obs_phi": 823, "observ": [1, 79, 82, 91, 94, 102, 106, 107, 112, 140, 330, 356, 400, 422, 451, 475, 505, 532, 558, 573, 609, 685, 776, 801, 804, 805, 807, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 874, 926, 954, 1020, 1023], "observation_column_nam": [828, 869], "observation_group_metadata": [807, 838], "observation_id": [807, 844, 852, 857], "observation_index": 807, "observation_metadata": 807, "observation_metadata_f": 848, "observed_char": [330, 400, 451, 505, 558], "observed_featur": 102, "obsolet": 153, "obtain": [80, 284, 310, 381, 432, 485, 537, 544, 586, 587, 601, 609, 627, 639, 649, 662, 673, 675, 677, 679, 681, 975, 976, 977], "obviou": 151, "oc": 145, "occur": [17, 142, 146, 147, 150, 151, 191, 195, 198, 341, 409, 461, 516, 537, 562, 805, 899, 908], "occurr": [76, 101, 322, 334, 335, 336, 339, 392, 402, 403, 404, 407, 443, 453, 454, 455, 458, 460, 497, 509, 510, 511, 514, 555], "oct": [146, 148], "odot": [616, 623], "off": [84, 97, 303, 425, 478, 621, 804, 898, 954, 958, 1023], "offer": 981, "offici": 140, "offset": [147, 148], "often": [1, 79, 104, 108, 145, 146, 148, 627, 685, 791, 796, 801, 979], "oh": 1015, "ol": 79, "old": 872, "older": 153, "om": [807, 874], "omic": 606, "ominu": 622, "omit": [151, 284, 297, 627, 863, 913, 947, 949, 954, 1016], "ommit": 154, "onc": [82, 146, 158, 948], "one": [0, 1, 46, 47, 48, 49, 52, 53, 55, 61, 62, 63, 79, 80, 81, 84, 89, 95, 104, 106, 107, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 170, 191, 195, 215, 217, 241, 244, 246, 262, 264, 280, 282, 284, 313, 318, 321, 334, 335, 336, 337, 338, 339, 340, 372, 384, 389, 391, 402, 403, 404, 405, 406, 407, 408, 425, 435, 440, 442, 453, 454, 455, 456, 457, 458, 459, 460, 488, 493, 496, 509, 510, 511, 512, 513, 514, 515, 547, 552, 554, 559, 560, 561, 575, 579, 591, 609, 628, 632, 642, 655, 666, 673, 678, 679, 681, 682, 685, 686, 687, 776, 792, 795, 796, 803, 804, 805, 820, 823, 848, 859, 890, 892, 893, 899, 913, 926, 931, 939, 1016, 1021, 1023], "one_to_mani": 823, "one_to_many_md_kei": 823, "one_to_many_mod": 823, "ones": [791, 804, 848], "onli": [0, 1, 17, 55, 82, 85, 95, 112, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 198, 212, 213, 229, 244, 259, 260, 277, 278, 284, 293, 298, 303, 321, 328, 362, 391, 398, 425, 442, 449, 478, 496, 503, 537, 554, 575, 589, 606, 609, 621, 641, 651, 665, 666, 668, 673, 677, 681, 682, 775, 776, 791, 796, 798, 803, 804, 805, 821, 822, 823, 831, 833, 845, 870, 896, 899, 900, 902, 905, 908, 931, 939, 944, 948, 961, 1004, 1021, 1023], "onlin": [84, 89, 147], "ons": 155, "onto": [158, 189, 797, 954], "ontologi": 149, "ontology_term": 149, "oo": 1016, "open": [0, 56, 60, 61, 62, 63, 64, 65, 66, 109, 124, 125, 137, 138, 141, 142, 147, 158, 169, 171, 190, 191, 192, 194, 195, 196, 199, 200, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 833, 858, 869, 873, 932, 953, 980, 1015, 1016], "open_fil": 980, "open_filehandl": 1016, "oper": [1, 46, 49, 55, 106, 141, 146, 151, 242, 303, 332, 333, 425, 478, 507, 508, 537, 606, 608, 621, 622, 623, 627, 628, 663, 679, 680, 796, 818, 819, 821, 822, 823, 827, 833, 846, 850, 859, 860, 861, 862, 863, 864, 867, 870, 913, 937, 954, 982, 1015, 1016, 1018], "operon": 219, "opinion": 81, "oplu": 621, "oppos": [682, 1023], "optim": [1, 17, 80, 104, 106, 107, 108, 681, 906, 956], "option": [17, 29, 46, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 79, 84, 85, 86, 91, 95, 98, 104, 106, 107, 108, 109, 112, 113, 124, 125, 137, 138, 143, 144, 146, 147, 152, 153, 155, 156, 157, 159, 169, 170, 171, 190, 191, 192, 194, 195, 196, 198, 212, 216, 217, 218, 219, 229, 240, 244, 245, 246, 247, 259, 263, 264, 265, 277, 281, 282, 283, 284, 293, 296, 297, 299, 300, 301, 302, 303, 308, 320, 321, 322, 326, 328, 329, 330, 333, 341, 343, 344, 345, 347, 349, 352, 355, 356, 361, 362, 371, 372, 373, 379, 391, 392, 396, 398, 399, 400, 409, 410, 411, 412, 414, 416, 419, 421, 422, 424, 425, 430, 442, 443, 447, 449, 450, 451, 461, 462, 463, 464, 466, 468, 471, 474, 475, 477, 478, 483, 495, 496, 497, 501, 503, 504, 505, 508, 516, 518, 519, 520, 522, 524, 527, 531, 532, 534, 535, 536, 537, 542, 554, 555, 556, 557, 558, 562, 563, 564, 565, 567, 569, 571, 573, 574, 586, 589, 591, 595, 596, 602, 605, 609, 614, 615, 616, 618, 619, 628, 639, 641, 642, 644, 645, 650, 662, 665, 666, 668, 669, 670, 676, 677, 678, 679, 680, 681, 682, 683, 685, 720, 775, 787, 788, 789, 791, 792, 795, 796, 798, 799, 802, 803, 804, 805, 806, 818, 819, 820, 823, 824, 826, 827, 830, 831, 833, 838, 839, 840, 843, 844, 845, 846, 847, 848, 851, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 875, 896, 913, 918, 932, 939, 946, 947, 953, 954, 955, 958, 959, 980, 981, 982, 1004, 1018, 1023], "or_f": 152, "oral": 1, "orcutt": 587, "ord_r": 152, "order": [1, 17, 39, 44, 50, 54, 55, 58, 104, 108, 139, 141, 146, 150, 151, 152, 153, 156, 211, 216, 241, 258, 263, 276, 281, 284, 285, 291, 294, 298, 300, 303, 318, 327, 330, 356, 360, 362, 373, 389, 397, 400, 422, 425, 440, 448, 451, 475, 478, 493, 502, 505, 532, 535, 552, 558, 573, 577, 579, 586, 589, 601, 609, 614, 625, 630, 632, 639, 641, 649, 653, 655, 662, 665, 668, 673, 675, 677, 678, 679, 680, 681, 682, 685, 790, 799, 803, 804, 833, 853, 861, 862, 867, 925, 944, 945, 946, 954, 956, 958, 1021, 1023], "ordin": [1, 681, 959, 960, 1015], "ordination_result": 776, "ordinationresult": [152, 681, 790, 791, 796, 797, 798, 959], "org": [17, 67, 109, 139, 140, 146, 147, 148, 153, 155, 156, 216, 263, 281, 284, 297, 300, 597, 620, 624, 626, 628, 646, 651, 663, 671, 677, 678, 679, 680, 681, 787, 807, 833, 834, 867, 874, 955], "organ": [1, 145, 148, 157], "organis": 148, "orient": [686, 787, 803, 833, 867, 936, 1016], "origin": [1, 61, 63, 64, 66, 71, 72, 75, 78, 79, 82, 83, 87, 88, 95, 96, 98, 99, 106, 107, 109, 143, 144, 146, 151, 153, 154, 213, 217, 218, 260, 264, 265, 278, 282, 283, 301, 321, 391, 442, 496, 537, 554, 677, 678, 679, 680, 681, 685, 790, 798, 806, 823, 831, 854, 870, 898, 954, 955, 1021, 1023], "orthogon": [615, 616, 624], "ortholog": [807, 874], "orthonorm": [615, 616, 624, 625], "orthornorm": 615, "ostel": 146, "other": [0, 1, 17, 34, 43, 52, 53, 55, 79, 94, 109, 145, 146, 147, 148, 150, 151, 153, 155, 156, 157, 198, 202, 208, 220, 226, 232, 238, 243, 249, 255, 267, 273, 284, 285, 291, 298, 303, 308, 317, 326, 332, 333, 338, 340, 342, 347, 348, 349, 350, 353, 363, 369, 379, 388, 396, 406, 408, 414, 415, 416, 417, 420, 425, 430, 439, 447, 457, 459, 466, 467, 468, 469, 472, 478, 483, 492, 501, 507, 508, 513, 515, 517, 522, 523, 524, 525, 528, 537, 542, 551, 556, 560, 561, 567, 568, 569, 570, 572, 575, 577, 584, 603, 609, 614, 627, 630, 637, 651, 653, 660, 681, 776, 787, 790, 791, 796, 803, 805, 808, 816, 820, 824, 829, 844, 848, 875, 898, 899, 900, 906, 908, 909, 958, 981, 992, 1015, 1016, 1017, 1018, 1021, 1023], "other_vertebr": 142, "otherwis": [17, 30, 46, 49, 58, 73, 74, 146, 148, 151, 154, 155, 198, 215, 248, 262, 280, 356, 422, 475, 532, 573, 576, 577, 579, 584, 589, 629, 630, 632, 637, 641, 652, 653, 655, 660, 665, 668, 682, 810, 826, 830, 842, 848, 854, 857, 933, 1018], "otu": [1, 93, 155, 807, 820, 821, 822, 823, 824, 828, 832, 833, 834, 839, 844, 848, 854, 856, 857, 861, 862, 867, 869, 870, 874], "otu1": 828, "otu2": 828, "otu_id": [79, 95, 106, 107], "otuid": 155, "our": [1, 81, 147, 155, 158, 170, 199, 343, 410, 462, 518, 563, 776, 801, 804, 805, 806, 1018, 1023], "out": [48, 144, 154, 155, 158, 210, 257, 275, 787, 831, 863, 899, 900, 1023], "out_f": [708, 741, 752], "out_fh": 627, "outcom": [97, 804], "outer": [54, 55, 321, 391, 442, 496, 554, 590], "outfmt": [141, 142], "output": [2, 55, 141, 142, 144, 151, 153, 154, 156, 346, 413, 465, 521, 566, 614, 677, 681, 682, 720, 791, 817, 823, 828, 868, 869, 947, 955, 1015, 1023], "outsid": [147, 219, 243, 330, 400, 451, 505, 558], "over": [39, 44, 54, 109, 146, 147, 154, 155, 156, 313, 318, 384, 389, 435, 440, 488, 493, 547, 552, 575, 614, 683, 697, 719, 730, 763, 774, 801, 802, 810, 820, 823, 824, 843, 844, 845, 847, 850, 851, 856, 859, 863, 870, 884, 922, 925, 928, 929, 930, 942, 945, 948, 1021], "overal": [807, 874], "overhead": [775, 833], "overlap": [84, 244, 298, 344, 345, 411, 412, 463, 464, 519, 520, 564, 565, 586, 605, 614, 639, 662, 848, 899], "overrid": [17, 62, 65, 95, 159, 169, 170, 171, 190, 194, 297, 931, 1023], "overridden": [17, 29, 148, 955], "override_skip_babp": 17, "overriden": [169, 170, 171], "overview": 955, "own": [46, 49, 55, 139, 146, 152, 156, 158, 801], "owner": 965, "oxfordjourn": 147, "oxtobi": 145, "p": [1, 17, 67, 79, 88, 89, 95, 425, 609, 614, 624, 627, 677, 679, 680, 681, 682, 685, 776, 790, 791, 792, 798, 801, 804, 805, 863], "p26204": 145, "p__b": 823, "p__c": 823, "p_adjust": [609, 614], "p_i": [75, 77, 98, 99], "p_valu": [1, 679, 685], "packag": [17, 67, 69, 105, 143, 146, 151, 153, 614, 624, 627, 677, 678, 679, 680, 681, 684, 790, 791, 798, 801, 1021, 1022], "pad": [55, 153, 321, 391, 442, 496, 554], "page": [81, 609, 955, 1021], "pair": [0, 1, 52, 61, 62, 63, 65, 68, 106, 107, 108, 112, 145, 147, 148, 149, 151, 156, 240, 244, 338, 406, 457, 513, 560, 575, 579, 586, 601, 605, 609, 632, 639, 649, 655, 662, 666, 673, 675, 682, 801, 915, 944, 1018], "pairwis": [108, 109, 112, 591, 609, 620, 642, 666, 682, 685, 823, 845, 906, 944, 1021], "pairwise_dist": 108, "pairwise_func": 108, "pam": [425, 575, 587], "pam250": 587, "pam30": 587, "pam70": 587, "pancoro": 145, "panda": [1, 29, 53, 58, 108, 141, 142, 157, 217, 218, 248, 264, 265, 282, 283, 284, 301, 303, 340, 408, 425, 459, 478, 515, 561, 598, 609, 614, 647, 672, 673, 677, 678, 680, 681, 682, 686, 720, 764, 776, 787, 803, 804, 821, 850, 866, 913, 958, 1018], "paper": 155, "papilionoidea": 145, "par_dist": 685, "parallel": [81, 109], "paramet": [1, 3, 17, 18, 29, 31, 34, 43, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 124, 125, 126, 137, 138, 158, 159, 169, 170, 171, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 202, 208, 211, 212, 214, 216, 217, 218, 219, 220, 226, 229, 232, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 258, 259, 261, 263, 264, 265, 267, 273, 276, 277, 279, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 310, 317, 320, 321, 322, 326, 328, 329, 330, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 359, 360, 361, 362, 363, 369, 371, 372, 373, 376, 379, 381, 388, 391, 392, 396, 398, 399, 400, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 430, 432, 439, 442, 443, 447, 449, 450, 451, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 480, 483, 485, 492, 495, 496, 497, 501, 503, 504, 505, 508, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 531, 532, 533, 534, 535, 536, 537, 539, 542, 544, 551, 554, 555, 556, 557, 558, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 584, 586, 587, 589, 590, 591, 593, 594, 595, 596, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 637, 639, 641, 642, 643, 644, 645, 649, 650, 652, 653, 655, 660, 662, 665, 666, 667, 668, 669, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 708, 720, 741, 752, 764, 775, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 810, 818, 819, 820, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 875, 890, 892, 893, 896, 897, 898, 899, 900, 902, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 936, 938, 939, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 958, 959, 960, 961, 978, 979, 980, 981, 982, 992, 993, 1004, 1023], "parametr": [73, 606, 609, 677, 680], "params_guess": 91, "parasit": 685, "pardi": 95, "parent": [145, 149, 151, 157, 537, 624, 875, 892, 895, 907, 910, 919, 927, 931, 940, 946, 949, 951, 952, 1021], "parent_tax_id": [157, 913], "parenthes": 1021, "parenthesi": 151, "parker": 71, "pars": [146, 147, 148, 150, 158, 832, 833, 834, 835, 1016], "parse_biom_t": 833, "parse_f": 833, "parser": [149, 151, 1016], "part": [141, 146, 148, 151, 154, 603, 607, 624, 775, 856, 925, 981, 1021], "partial": [17, 95, 243, 810], "partial_beta_divers": 109, "partialdistancematrix": 109, "particip": 805, "particuarli": 146, "particular": [1, 875, 957, 1023], "particularli": 897, "partit": [624, 625, 823], "pass": [1, 29, 36, 49, 56, 57, 60, 67, 104, 108, 109, 110, 111, 124, 125, 137, 138, 141, 143, 146, 148, 153, 154, 156, 169, 170, 171, 183, 189, 190, 191, 192, 193, 194, 195, 196, 198, 245, 247, 299, 302, 303, 326, 328, 330, 352, 353, 361, 372, 396, 398, 400, 419, 420, 424, 425, 447, 449, 451, 471, 472, 477, 478, 501, 503, 505, 527, 528, 536, 537, 556, 558, 571, 572, 574, 579, 596, 602, 632, 645, 650, 655, 666, 668, 670, 676, 679, 682, 720, 788, 789, 804, 844, 857, 858, 873, 921, 923, 932, 953, 955, 1004, 1021, 1023], "passthrough": 58, "password": 158, "patch": 189, "path": [140, 144, 146, 147, 154, 198, 216, 263, 281, 297, 300, 823, 891, 979], "pathwai": [807, 823, 874], "pattern": [157, 329, 357, 399, 423, 450, 476, 504, 533, 557, 776, 1018, 1023], "paw": [425, 460, 473], "pawhea": 0, "pawlowski": [606, 620, 626], "pc": [1, 686, 787], "pca": [790, 796, 798], "pcbi": [620, 626], "pcoa": [1, 152, 681, 777, 787, 797], "pcoa_result": 787, "pcr": 805, "pd": [1, 29, 49, 53, 58, 79, 95, 104, 141, 142, 157, 248, 340, 408, 459, 515, 537, 561, 586, 598, 601, 609, 614, 627, 639, 647, 649, 662, 672, 673, 675, 677, 678, 681, 686, 776, 777, 787, 790, 798, 803, 804, 821, 850, 866, 913, 958], "pd_": 95, "pdf": 154, "pdist": [1, 105, 108, 111, 685], "pearson": [146, 679, 682, 685, 900], "pearsonr": [679, 685, 801], "peerj": 95, "penal": [61, 62, 63], "penalize_terminal_gap": [61, 62, 63], "penalti": [0, 17, 61, 62, 63, 64, 65, 66], "pentapetala": 145, "per": [55, 141, 142, 154, 156, 303, 425, 478, 537, 614, 682, 685, 775, 798, 804, 805, 864, 893, 980], "percent": [141, 1018], "percentag": [141, 606], "percentil": 609, "percentile_df": 609, "perfect": [776, 791], "perform": [0, 1, 17, 54, 55, 67, 79, 91, 104, 106, 107, 108, 109, 146, 147, 155, 220, 298, 303, 360, 373, 425, 478, 535, 537, 577, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 620, 621, 622, 623, 625, 626, 628, 630, 651, 653, 663, 666, 681, 682, 685, 686, 687, 709, 753, 764, 776, 796, 798, 799, 805, 806, 810, 823, 854, 857, 863, 876, 877, 901, 904, 911, 922, 928, 929, 930, 939, 951, 952, 958, 1016], "period": [155, 216, 263, 281, 300], "periton": 804, "perm_stat": 685, "permanova": [677, 681], "permdisp2": 681, "permiss": [146, 151, 153], "permit": [151, 170], "permut": [1, 220, 677, 679, 680, 681, 682, 685], "perspect": 95, "pertain": 684, "perturb": [606, 622], "petchei": 79, "peter": 147, "pfam": 156, "pg": 77, "pgc": 157, "ph": 678, "phagocyt": 804, "phase": [148, 149], "phe": 425, "phenylalanin": 425, "php": 146, "phred": [146, 147], "phred_offset": [147, 154], "phydiv": 79, "phylip": [56, 60, 146, 151, 954, 1016, 1021], "phylip_multiple_alignment_format": 153, "phylipformaterror": 153, "phylo": 153, "phylochip": [79, 106, 107], "phylogenet": [1, 79, 95, 106, 107, 151, 153, 627, 685, 875, 898, 908, 955, 1015, 1018], "phylogeni": [153, 684, 685], "phylum": 913, "physic": [797, 805], "pick": [17, 804], "pickl": [7, 21, 37, 116, 129, 162, 175, 204, 222, 234, 251, 269, 287, 311, 365, 382, 433, 486, 545, 580, 633, 656, 690, 701, 712, 723, 734, 745, 756, 767, 780, 811, 881, 966, 985, 997, 1008], "pident": [141, 142], "pie": 77, "piec": 1023, "pielou": [96, 100], "pielou_": 83, "piet": 791, "pii": 143, "ping": [17, 67], "pipe": 157, "pirrung": 787, "pisc": 84, "pitfal": 48, "pizetti": 81, "place": [58, 151, 156, 298, 372, 775, 796, 799, 831, 854, 857, 867, 870, 892, 917, 949, 959], "placebo": [609, 614], "plain": [143, 146, 147, 148, 151, 153, 154], "plan": 155, "planetmath": 651, "plankton": 71, "plant": [103, 145, 624], "plastid": 157, "pleas": [36, 56, 60, 124, 125, 137, 138, 146, 154, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953, 1020], "pleij": 156, "plm": [2, 144], "pln": [145, 157], "plo": [17, 67, 85, 86, 620, 626], "ploson": [17, 67], "plot": [1, 777], "plu": [157, 303, 425, 478], "plugin": 155, "plural": [1, 200], "pm": 78, "pmid": [156, 679, 955], "png": 777, "point": [48, 81, 84, 86, 139, 143, 155, 158, 170, 219, 284, 346, 353, 356, 413, 420, 422, 465, 472, 475, 521, 528, 532, 566, 572, 573, 587, 681, 687, 709, 764, 776, 787, 804, 805, 937, 958, 979], "poisson": [85, 86], "polymeras": 156, "pone": [17, 67], "pool": 70, "poorli": [685, 796], "pop": [931, 933, 934, 938], "popul": [73, 80, 82, 102, 154, 156, 346, 413, 465, 521, 566, 621, 683, 801, 805], "port": 155, "portal": 157, "portion": 679, "pos_rat": 805, "posit": [0, 17, 29, 30, 34, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 141, 142, 143, 146, 147, 148, 151, 153, 154, 155, 156, 303, 308, 310, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 340, 341, 343, 346, 347, 348, 349, 350, 351, 353, 354, 358, 359, 360, 372, 373, 379, 381, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 425, 430, 432, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 459, 461, 462, 465, 466, 467, 468, 469, 470, 472, 473, 478, 483, 485, 488, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 515, 516, 518, 521, 522, 523, 524, 525, 526, 528, 529, 530, 534, 535, 537, 542, 544, 547, 551, 552, 553, 554, 555, 557, 561, 562, 563, 566, 567, 568, 569, 570, 572, 607, 608, 609, 618, 679, 685, 764, 777, 801, 802, 804, 805, 810, 837, 850, 927, 1018], "positional_metadata": [29, 34, 47, 53, 54, 55, 146, 156, 303, 308, 320, 321, 324, 340, 346, 353, 354, 374, 379, 391, 394, 408, 413, 420, 425, 430, 442, 445, 459, 465, 472, 478, 483, 495, 496, 499, 515, 521, 528, 529, 537, 542, 554, 561, 566, 572, 1018], "possibl": [1, 17, 36, 96, 100, 146, 147, 155, 156, 243, 327, 360, 373, 397, 448, 502, 535, 678, 682, 804, 900, 948, 954], "post": [153, 801, 805], "posterior": [614, 875], "postmenopaus": 805, "postord": [905, 908, 922, 925, 929, 930, 945, 948, 1021], "potenti": [146, 343, 410, 462, 518, 563, 775, 934, 956, 1023], "pound": [155, 284], "power": [606, 614, 807, 874, 1016], "pp": [80, 90, 97, 791], "ppo": [141, 142], "practic": [1, 55, 95, 146, 147, 154, 775, 903, 908], "pre": [329, 357, 399, 423, 450, 476, 504, 533, 557, 575, 587, 592, 805], "pre_and_postord": [922, 925, 928, 930, 945, 948], "pre_rat": 805, "prealloc": 981, "preced": [17, 143, 151, 153], "precomput": 800, "predefin": [149, 326, 396, 447, 501, 556], "predict": [85, 86, 156, 804], "prefer": [48, 104, 108, 147, 216, 263, 281, 300, 790, 791], "prefer_self": 848, "prefix": 157, "preliminari": 804, "premenopaus": 805, "preorder": [922, 925, 928, 929, 945, 948, 1021], "prepar": 155, "preq1": 148, "presenc": [74, 95, 363, 372, 805, 855], "present": [47, 48, 79, 106, 107, 141, 144, 146, 152, 155, 156, 230, 231, 284, 303, 320, 323, 324, 325, 330, 331, 341, 351, 354, 372, 393, 394, 395, 400, 401, 409, 418, 425, 444, 445, 446, 451, 452, 461, 470, 473, 478, 495, 498, 499, 500, 505, 506, 516, 526, 529, 558, 562, 589, 609, 641, 665, 677, 678, 680, 681, 720, 786, 796, 805, 806, 823, 832, 833, 872, 899, 954, 955, 957, 1021], "preserv": [151, 284, 776, 790, 791, 796, 937], "press": 72, "presum": 146, "prevent": 17, "previou": [1, 61, 62, 63, 64, 65, 66, 308, 379, 430, 483, 542, 677, 679, 681], "previous": [0, 346, 353, 413, 420, 465, 472, 521, 528, 566, 572, 1023], "pri": 157, "primari": [158, 1018], "primer": 678, "princip": [1, 681, 787, 790, 796, 797], "principl": 801, "print": [0, 1, 54, 79, 106, 107, 143, 146, 147, 148, 149, 151, 153, 154, 156, 327, 343, 356, 360, 373, 397, 410, 422, 448, 462, 475, 502, 518, 532, 535, 537, 563, 573, 627, 679, 685, 686, 775, 801, 805, 820, 821, 822, 823, 824, 827, 831, 837, 839, 840, 844, 845, 846, 847, 848, 851, 854, 855, 856, 857, 861, 862, 863, 869, 870, 872, 876, 877, 892, 893, 896, 897, 900, 901, 902, 904, 905, 907, 908, 909, 911, 913, 914, 916, 919, 920, 921, 922, 923, 925, 927, 928, 929, 930, 931, 934, 936, 937, 938, 939, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 1018, 1021, 1023], "printabl": [147, 154], "prior": [372, 679, 682, 863, 913, 982, 992, 1023], "prioriti": [95, 993, 994, 1023], "privat": [148, 893], "prng": 775, "pro": 425, "prob": [29, 34, 47, 54], "probabl": [75, 85, 86, 97, 614, 686, 698, 775, 790, 801, 805, 875], "problem": [155, 609, 796], "problemat": [155, 946], "proc": [63, 66], "procedur": [681, 1016], "proceed": 587, "process": [109, 146, 156, 243, 614, 798, 868, 869, 957, 982, 1023], "process_func": 835, "processor": 1023, "prod": [612, 624], "produc": [141, 142, 153, 154, 169, 343, 410, 462, 518, 563, 790, 798], "product": [0, 219, 617, 679], "program": [150, 151, 155, 157], "progress": 678, "project": [109, 147, 607, 624, 677, 678, 679, 680, 681, 797], "prolin": 425, "promis": 609, "pronounc": [807, 874, 1015], "prop_expl": [686, 687, 709, 720, 753, 764], "propag": 537, "properli": [151, 198], "properti": [143, 153, 157, 298, 363, 369, 374, 575, 591, 642, 651, 666, 801, 895, 931, 961, 973, 975, 976, 977, 1017], "proport": [75, 77, 81, 82, 91, 95, 98, 99, 152, 333, 508, 604, 606, 607, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 677, 679, 680, 686, 720, 764, 777, 790, 796, 798, 898], "proportion": [620, 626], "proportion_explain": [776, 777], "propos": [98, 955], "prot": 145, "protein": [0, 2, 17, 29, 48, 61, 63, 66, 67, 113, 126, 141, 143, 144, 145, 146, 147, 148, 153, 154, 156, 343, 356, 359, 360, 362, 372, 373, 374, 410, 422, 518, 532, 534, 535, 537, 563, 573, 587, 804, 1018], "protein_from_dna": 1018, "protein_from_rna": 1018, "protein_id": 145, "proteinembed": 144, "proteinvector": 144, "provid": [0, 1, 2, 17, 29, 46, 48, 49, 56, 57, 62, 65, 67, 69, 79, 84, 95, 104, 105, 106, 107, 108, 124, 137, 141, 144, 146, 147, 151, 153, 155, 156, 157, 158, 169, 171, 190, 191, 194, 195, 197, 199, 214, 216, 245, 261, 263, 279, 281, 284, 297, 298, 299, 300, 308, 330, 343, 346, 352, 356, 379, 400, 410, 413, 419, 422, 430, 451, 462, 465, 471, 475, 478, 483, 505, 518, 521, 527, 532, 537, 542, 558, 563, 566, 571, 573, 575, 591, 596, 601, 606, 614, 627, 628, 642, 645, 649, 666, 670, 675, 677, 678, 679, 680, 681, 683, 686, 720, 775, 776, 777, 787, 788, 792, 801, 803, 804, 807, 818, 826, 828, 831, 833, 838, 840, 841, 846, 847, 849, 851, 856, 857, 858, 863, 867, 868, 870, 872, 874, 897, 905, 913, 926, 932, 936, 939, 946, 954, 955, 982, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "proxim": 776, "prune": [896, 938, 949, 950], "psa": [61, 64], "pseudo": [680, 801], "pseudocount": [606, 609, 614], "pseudoknot": 156, "pub": [145, 157, 219], "public": [95, 147, 787], "publish": [147, 156], "pubm": [145, 148, 537], "pull": 146, "pure": [0, 956], "purin": [303, 328, 398, 449, 503, 1018], "purpos": [0, 1, 67, 70, 155, 157, 362, 801, 1023], "put": [305, 376, 427, 480, 539], "pvalu": 614, "pwmantel": 679, "pwr": 804, "pwr_001": 801, "pwr_010": 801, "pwr_100": 801, "pwr_est": 805, "pwr_est2": 805, "py": [147, 158], "pycog": [79, 106, 107, 954], "pyl": 425, "pyrimidin": [303, 328, 503], "pyrosequenc": [79, 106, 107], "pyrrolysin": 425, "python": [0, 1, 3, 537, 627, 651, 679, 956, 961, 1015, 1016, 1018], "q": [17, 84, 142, 425, 791, 792], "q2": 155, "q2cli": 155, "qacc": [141, 142], "qaccver": [141, 142], "qcov": [141, 142], "qcovhsp": [141, 142], "qend": [141, 142], "qframe": [141, 142], "qgi": [141, 142], "qiim": [79, 106, 107, 155, 284], "qiime2": [155, 216, 263, 281, 284, 297, 300], "qiita": 155, "qiu": 685, "qlen": [141, 142], "qseq": [141, 142, 352, 419, 471, 527, 571], "qseqid": [141, 142], "qstart": [141, 142], "qual": 147, "qual_fl": 146, "qualifi": [145, 148], "qualit": [106, 107, 787], "qualiti": [53, 146, 154, 303, 308, 320, 324, 340, 354, 379, 394, 408, 425, 430, 445, 459, 478, 483, 495, 499, 515, 529, 537, 542, 561, 787, 1018], "quantifi": 1, "quantil": [84, 614], "quantit": [95, 106, 107, 790, 805], "quantiti": 107, "quartil": 84, "queri": [0, 17, 67, 141, 142, 229, 296, 537], "query1": 142, "query_begin": 3, "query_sequ": [0, 3, 17, 18], "quick": [579, 632, 655, 663, 787, 790], "quit": 1023, "quot": 151, "qvalu": 614, "r": [1, 17, 79, 80, 84, 85, 86, 87, 88, 95, 106, 107, 147, 148, 157, 198, 303, 425, 478, 587, 606, 607, 608, 612, 613, 614, 615, 616, 624, 677, 678, 679, 680, 681, 685, 787, 790, 791, 798, 822, 897, 938], "r1": 1018, "r2": 1018, "r3": 1018, "r4": 1018, "r5": 1018, "r_i": 624, "r_m": 679, "ra": [145, 156], "raaijmak": 91, "raimon": 624, "rais": [29, 46, 48, 49, 51, 55, 57, 59, 70, 79, 80, 81, 95, 104, 106, 107, 108, 112, 146, 147, 153, 158, 169, 170, 171, 190, 191, 192, 194, 195, 196, 211, 243, 258, 276, 294, 297, 298, 305, 321, 322, 326, 328, 330, 341, 342, 344, 345, 347, 348, 349, 350, 356, 372, 374, 376, 391, 392, 396, 398, 400, 409, 411, 412, 414, 415, 416, 417, 422, 427, 442, 443, 447, 449, 451, 461, 463, 464, 466, 467, 468, 469, 475, 480, 496, 497, 501, 503, 505, 516, 517, 519, 520, 522, 523, 524, 525, 532, 539, 554, 555, 556, 558, 562, 564, 565, 567, 568, 569, 570, 573, 579, 586, 587, 589, 590, 591, 594, 601, 604, 605, 611, 618, 619, 625, 632, 639, 641, 642, 643, 649, 655, 662, 665, 666, 667, 675, 677, 678, 679, 681, 682, 720, 764, 775, 787, 790, 791, 796, 804, 805, 806, 807, 810, 818, 820, 824, 826, 827, 831, 832, 833, 838, 839, 840, 841, 844, 845, 846, 847, 849, 850, 851, 857, 859, 860, 863, 870, 872, 874, 890, 897, 898, 900, 903, 905, 906, 908, 909, 911, 913, 915, 921, 923, 926, 936, 937, 938, 939, 944, 949, 958, 959, 960, 961], "rand": [113, 126, 683], "randint": 801, "randn": [801, 804, 805], "random": [78, 80, 91, 113, 126, 139, 614, 677, 681, 683, 775, 791, 801, 803, 804, 805, 863, 900, 939], "random_fn": 683, "randomli": [75, 668, 677, 679, 680, 683, 775, 806, 863, 900, 939], "randomst": [900, 939], "rang": [53, 75, 84, 96, 107, 147, 148, 155, 320, 324, 330, 340, 343, 354, 394, 400, 408, 410, 445, 451, 459, 462, 495, 499, 505, 515, 518, 529, 558, 561, 563, 677, 678, 787, 805, 839, 844, 863, 917, 1023], "rangeindex": [29, 46, 49, 57, 153], "rangle_a": [615, 617], "rank": [1, 103, 157, 609, 677, 678, 679, 800, 857, 913], "rapid": [139, 146, 917], "rapidli": 1023, "rare": [70, 805], "rare_threshold": 70, "rarefact": [91, 863], "rate": [70, 575, 801], "rather": [1, 84, 151, 575, 606, 685, 955], "ratio": [85, 96, 100, 606, 607, 608, 609, 612, 613, 615, 616, 620, 626, 805], "rational": 800, "raw": [141, 708, 741], "raw_f": [708, 741, 752], "raxml": 153, "rbwpd_": 95, "rc": [156, 320, 495, 595, 644, 669, 787], "rda": [152, 777, 790, 791], "re": [0, 1, 46, 49, 55, 79, 104, 106, 107, 108, 140, 143, 146, 147, 153, 156, 303, 329, 357, 374, 399, 423, 425, 450, 476, 478, 504, 533, 537, 557, 682, 790, 798, 800, 801, 805, 820, 863, 946, 1021, 1023], "reach": 153, "read": [1, 17, 60, 79, 106, 107, 125, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 156, 157, 169, 170, 187, 189, 191, 195, 198, 199, 247, 297, 302, 303, 360, 361, 372, 373, 424, 425, 477, 478, 535, 536, 537, 574, 602, 625, 627, 650, 676, 682, 789, 822, 873, 876, 877, 889, 890, 891, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 911, 913, 915, 916, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 961, 1015, 1021], "read_numb": 154, "read_sequ": 3, "readabl": [139, 146, 147, 150, 151, 152, 153, 198, 960], "reader": [56, 124, 137, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 184, 189, 190, 191, 194, 195, 245, 299, 352, 419, 471, 527, 571, 596, 645, 670, 788, 858, 932], "readi": [0, 158], "reading_fram": [360, 372, 373, 535], "readlin": [169, 198], "real": [54, 146, 147, 154, 606, 607, 608, 612, 613, 615, 616, 621, 622, 623], "realli": 1, "reason": [1, 80, 91, 145, 151, 804, 833, 895], "reassign": [57, 153, 679], "reassign_index": [29, 46, 49, 58, 59, 153], "reca": 244, "recal": 151, "recapitul": 685, "recaptur": 70, "receiv": [158, 159, 170, 330, 400, 451, 505, 558, 954], "recent": [153, 372, 537, 679], "receptor": 804, "reciproc": [75, 805], "recod": 48, "recogn": [155, 850, 860], "recommend": [1, 84, 95, 153, 156, 303, 374, 425, 478, 537, 609, 627, 787, 790, 798, 804], "recomput": [46, 49, 55], "reconstruct": [931, 955, 1015, 1018], "record": [142, 145, 146, 147, 148, 149, 154], "rectangl": 81, "recurs": [151, 893, 951, 952], "red": [595, 644, 669], "redefin": [679, 961], "reduc": [109, 216, 263, 281, 300, 681, 775, 796, 823], "reduce_f": 109, "reduct": 776, "redund": [597, 628, 646, 651, 671, 798], "redundant_form": 620, "reeder": [85, 86], "ref": [141, 892], "refer": [1, 17, 36, 48, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 106, 107, 109, 219, 303, 362, 370, 371, 374, 425, 478, 537, 575, 587, 597, 607, 608, 609, 614, 618, 620, 624, 626, 628, 646, 651, 663, 671, 677, 678, 679, 680, 681, 685, 787, 790, 791, 798, 807, 833, 867, 874, 898, 927, 954, 955, 1020], "reference_sequ": 3, "reflect": [198, 685, 931, 936], "regard": 614, "regardless": [17, 47, 54, 55, 156, 284, 298, 372, 593, 683], "regex": [329, 357, 399, 423, 450, 476, 504, 533, 557], "region": [149, 219, 229, 343, 410, 462, 518, 563], "regist": [60, 125, 138, 158, 159, 169, 170, 171, 183, 189, 191, 193, 195, 247, 302, 361, 424, 477, 536, 574, 602, 650, 676, 789, 873, 953], "registri": [56, 60, 124, 125, 137, 138, 140, 144, 146, 147, 154, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953, 1016], "regress": [606, 679, 798, 805], "regsistri": [183, 193], "regular": [140, 144, 151, 329, 357, 399, 423, 450, 476, 504, 533, 557, 1018], "reject": [609, 614, 801], "rel": [51, 95, 140, 145, 148, 211, 258, 276, 294, 298, 330, 332, 333, 345, 347, 349, 400, 412, 414, 416, 451, 464, 466, 468, 505, 507, 508, 520, 522, 524, 558, 565, 567, 569, 620, 626, 663, 940, 958, 993, 1018], "relat": [1, 79, 80, 88, 95, 106, 107, 109, 145, 146, 150, 156, 627, 673, 790, 791, 798, 833, 867], "relationship": [1, 95, 151, 790, 791, 798, 801, 805, 823, 955, 1019], "relax": 153, "releas": [79, 95, 106, 107, 145, 157], "relev": [1, 17, 148, 614, 804, 823, 833, 867, 955, 1018], "reli": [94, 155, 216, 263, 281, 300, 303, 425, 478], "reliabl": 614, "reload": 147, "remain": [57, 146], "remaind": [146, 823], "rememb": [155, 219], "remot": 148, "remov": [48, 67, 79, 95, 106, 107, 113, 146, 150, 153, 210, 242, 257, 275, 324, 355, 394, 421, 445, 474, 499, 531, 827, 856, 860, 892, 907, 927, 931, 934, 938, 949, 1018], "remove_delet": [927, 931, 933, 938], "remove_empti": 856, "renam": [148, 339, 351, 407, 418, 458, 470, 514, 526, 609], "render": 955, "reorder": [679, 682, 896, 900], "repeat": [1, 147, 801, 978], "repeatedli": 801, "repect": 146, "repen": 145, "replac": [1, 68, 91, 146, 303, 355, 358, 421, 425, 474, 478, 530, 531, 575, 606, 609, 618, 619, 775, 799, 806, 863, 870, 946], "replic": 905, "report": [95, 155, 170, 614, 685, 798], "repres": [1, 47, 75, 77, 79, 82, 91, 98, 99, 106, 107, 109, 113, 126, 139, 140, 141, 142, 145, 146, 150, 151, 153, 155, 156, 157, 219, 240, 248, 284, 303, 356, 422, 425, 475, 478, 532, 537, 573, 575, 579, 586, 591, 601, 615, 616, 624, 625, 632, 639, 642, 649, 655, 662, 666, 675, 685, 776, 787, 801, 810, 823, 834, 859, 864, 868, 875, 942, 947, 954, 955, 1018, 1021], "represent": [0, 1, 122, 123, 126, 136, 139, 140, 146, 151, 155, 229, 346, 370, 413, 465, 521, 566, 585, 625, 638, 661, 684, 777, 786, 807, 810, 823, 833, 869, 874, 875, 889, 946, 947, 1016, 1021], "representationwarn": 944, "reprint": 81, "reproduc": [55, 79, 106, 107], "reproduct": 805, "request": [146, 295, 586, 601, 639, 649, 662, 675, 820, 827, 839, 850, 905, 979, 1016], "requir": [17, 79, 85, 86, 95, 106, 107, 139, 142, 143, 146, 149, 153, 156, 157, 244, 284, 297, 359, 372, 373, 534, 625, 627, 651, 679, 685, 775, 795, 803, 810, 823, 832, 897, 903, 937, 957, 981, 1016, 1018, 1023], "rerun": 679, "res_metadata": 821, "res_tabl": [821, 822], "res_tre": 822, "resampl": 863, "research": [1, 157, 679, 796], "resembl": 146, "reserv": [153, 155], "reset": [46, 49, 57], "reset_index": [46, 49], "reshap": [839, 844], "resid": 775, "residu": [48, 113, 144, 798], "resolv": [109, 112, 155, 685], "resourc": [95, 155, 157, 198], "respect": [1, 29, 73, 146, 149, 152, 155, 157, 169, 170, 171, 189, 190, 192, 194, 196, 198, 284, 330, 400, 451, 505, 537, 558, 586, 591, 593, 601, 609, 624, 639, 642, 649, 662, 666, 673, 675, 685, 776, 777, 821, 822, 843, 844, 845, 864], "respons": [56, 60, 124, 125, 137, 138, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 708, 741, 752, 776, 788, 789, 791, 798, 858, 873, 932, 953], "restrict": [36, 79, 106, 107, 153, 248, 284, 1018], "result": [1, 3, 17, 18, 48, 50, 55, 61, 62, 63, 79, 80, 84, 104, 106, 107, 108, 112, 141, 142, 146, 155, 158, 198, 241, 296, 298, 303, 320, 321, 324, 354, 356, 391, 394, 422, 425, 442, 445, 475, 478, 495, 496, 499, 529, 532, 554, 573, 609, 614, 617, 618, 621, 666, 677, 679, 680, 681, 682, 683, 686, 697, 698, 708, 709, 719, 730, 731, 741, 742, 752, 753, 763, 774, 775, 777, 786, 787, 790, 791, 796, 798, 801, 806, 823, 824, 845, 848, 856, 863, 867, 869, 908, 924, 938, 946, 947, 954, 955, 959, 1016, 1018, 1023], "result_constructor": 955, "retain": [55, 211, 258, 276, 293, 294, 321, 353, 391, 420, 442, 472, 496, 528, 554, 572, 589, 641, 665, 775, 823, 863, 872], "retriev": [212, 214, 259, 261, 277, 279, 284, 295, 296, 537, 651, 833, 837, 839], "return": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 124, 127, 128, 130, 131, 132, 133, 134, 135, 137, 141, 149, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 245, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 685, 688, 689, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 703, 704, 705, 706, 707, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 735, 736, 737, 738, 739, 740, 743, 744, 746, 747, 748, 749, 750, 751, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 809, 810, 812, 814, 815, 816, 821, 822, 823, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 876, 877, 878, 879, 882, 883, 885, 887, 888, 889, 890, 891, 893, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 923, 924, 925, 926, 927, 932, 933, 935, 936, 937, 938, 940, 941, 942, 944, 946, 947, 948, 950, 951, 952, 954, 955, 960, 961, 963, 964, 965, 967, 968, 969, 970, 971, 974, 978, 979, 980, 983, 984, 986, 987, 988, 989, 990, 991, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1018, 1023], "return_cod": [356, 422, 475, 532, 573], "reus": [17, 800], "rev": 939, "reveal": [776, 955], "revers": [44, 54, 58, 158, 318, 320, 342, 354, 360, 372, 373, 389, 440, 493, 495, 517, 529, 530, 535, 552, 677, 681, 861, 939, 1018, 1023], "reverse_compl": [320, 342, 495, 517, 1018], "reverse_transcrib": 359, "review": 895, "revisit": 624, "rf": [360, 373, 535], "rfam": 156, "rho": 678, "riboswitch": [148, 219], "rice": 147, "rich": [1, 69, 73, 79, 87, 90, 95, 102], "rich_sparse_otu_table_hdf5": 833, "right": [55, 70, 98, 151, 298, 606, 607, 608, 612, 617, 621, 622, 623, 624, 917, 958, 959, 1023], "right_child_id": 946, "rightarrow": [607, 608, 612, 613, 615, 616], "risk": 805, "rl": [145, 156], "rm": [156, 687, 753], "rn": [145, 156], "rna": [0, 29, 34, 62, 65, 67, 143, 145, 146, 147, 148, 153, 154, 156, 303, 321, 358, 359, 360, 362, 372, 373, 374, 391, 442, 537, 554, 614, 1018], "rna_seq": [145, 148], "robinson": 898, "robust": [95, 155, 620, 626, 681, 685], "role": [156, 575, 804], "rome": 81, "root": [1, 79, 90, 95, 106, 107, 151, 157, 625, 876, 877, 890, 891, 892, 893, 895, 896, 897, 901, 904, 905, 906, 907, 910, 911, 913, 915, 919, 921, 923, 924, 931, 936, 937, 940, 942, 944, 946, 947, 949, 951, 952, 954, 955, 1021], "root_at": [937, 951, 952], "root_at_midpoint": [936, 955], "rosid": 145, "roughli": 91, "round": [79, 84, 91, 106, 107, 679, 801, 804, 805, 905], "roundtrip": [140, 144], "roundtripp": [216, 263, 281, 284, 300], "routin": 651, "row": [1, 29, 104, 108, 109, 112, 113, 139, 140, 144, 153, 219, 284, 575, 579, 594, 608, 609, 611, 614, 615, 616, 618, 619, 621, 622, 623, 624, 627, 628, 632, 643, 655, 667, 668, 673, 677, 678, 679, 680, 681, 682, 683, 685, 777, 790, 791, 794, 798, 804, 805, 810, 817, 828, 833, 834, 839, 843, 844, 845, 859, 860, 867, 869, 958], "rozan": 624, "rp": 145, "rpd": 95, "rpd_": 95, "rrna": [1, 614], "rt": [145, 156], "rtol": 958, "rubbbbrbcefgh": 154, "rule": [70, 146, 153, 155, 156, 954], "run": [1, 79, 104, 106, 107, 108, 147, 154, 155, 328, 398, 449, 503, 609, 677, 678, 679, 681, 682, 685, 697, 719, 730, 763, 774, 787, 1018, 1023], "run_numb": 154, "runtim": [146, 303, 425, 478, 981, 1023], "runtimeerror": 80, "rvrywstlnepwvfsnsgyalgtnapgrcsasnvakpgdsgtgpyivthnqi": 145, "rvsrv": 156, "rx": 145, "rykmbdhvn": [332, 333, 507, 508], "s1": [0, 1, 77, 303, 305, 321, 322, 326, 341, 342, 347, 348, 349, 350, 376, 391, 392, 396, 409, 414, 415, 416, 417, 425, 427, 442, 443, 447, 461, 466, 467, 468, 469, 478, 480, 496, 497, 501, 516, 517, 522, 523, 524, 525, 537, 539, 554, 555, 556, 562, 567, 568, 569, 570, 609, 614, 677, 681, 820, 821, 822, 824, 826, 827, 830, 831, 837, 838, 839, 840, 841, 843, 845, 848, 849, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 869, 870, 872], "s12064": [620, 626], "s2": [0, 1, 321, 326, 391, 396, 442, 447, 496, 501, 554, 556, 609, 614, 677, 681, 820, 821, 822, 824, 827, 830, 831, 837, 838, 839, 840, 841, 843, 845, 848, 849, 854, 855, 856, 857, 859, 861, 862, 863, 864, 866, 869, 870, 872], "s3": [609, 614, 677, 681, 820, 821, 822, 824, 830, 831, 838, 839, 840, 841, 845, 848, 849, 855, 856, 857, 859, 861, 862, 863, 864, 866, 869, 870, 872], "s4": [609, 614, 677, 681, 821, 822, 824, 830, 839], "s46826": 145, "s5": [609, 614, 677, 681, 824, 839], "s6": [609, 614, 681, 824], "s7": [681, 824], "s8": 824, "s9": 824, "s_": [1, 70, 72, 73, 91, 102], "s_i": 624, "s_max": 91, "sa": 156, "sacc": [141, 142], "saccver": [141, 142], "safe": [1, 79, 104, 106, 107, 108, 155, 796, 806, 893], "safe_char": 151, "saga": [229, 241, 537], "sagb": [229, 241], "sagc": 229, "sai": [219, 229, 805], "saitou": 955, "sallacc": [141, 142], "sallgi": [141, 142], "sallseqid": [141, 142], "salltitl": [141, 142], "salmo": [146, 153], "salvemini": 81, "sam_id": 844, "same": [1, 29, 47, 48, 49, 51, 55, 57, 75, 79, 84, 95, 96, 100, 106, 107, 144, 146, 147, 148, 149, 151, 154, 156, 158, 211, 232, 246, 248, 258, 276, 293, 294, 298, 308, 310, 317, 320, 321, 324, 326, 327, 343, 347, 348, 349, 350, 354, 355, 359, 362, 363, 372, 379, 381, 388, 391, 394, 396, 397, 410, 414, 415, 416, 417, 421, 430, 432, 439, 442, 445, 447, 448, 462, 466, 467, 468, 469, 474, 483, 485, 492, 495, 496, 499, 501, 502, 518, 522, 523, 524, 525, 529, 531, 534, 537, 542, 544, 551, 554, 556, 563, 567, 568, 569, 570, 577, 579, 587, 588, 589, 591, 600, 604, 605, 609, 614, 630, 632, 640, 641, 642, 648, 653, 655, 664, 665, 666, 668, 674, 677, 678, 679, 680, 681, 682, 685, 775, 790, 791, 795, 796, 798, 804, 805, 806, 810, 823, 831, 854, 870, 909, 939, 954, 958, 1018, 1021], "samp_id": [837, 839], "sampl": [1, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 139, 140, 155, 284, 606, 609, 614, 628, 677, 678, 680, 681, 687, 720, 753, 764, 775, 777, 786, 787, 790, 791, 796, 797, 798, 801, 803, 804, 805, 818, 819, 820, 821, 822, 823, 824, 826, 827, 830, 831, 832, 833, 835, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 900, 959, 1015, 1019], "sample1": [828, 834], "sample2": [828, 834], "sample3": 834, "sample4": 834, "sample5": 834, "sample6": 834, "sample_constraint": 777, "sample_count": [804, 805], "sample_gen": 844, "sample_group_metadata": 807, "sample_id": [807, 844, 852, 857], "sample_index": 807, "sample_map": 835, "sample_md": 1, "sample_metadata": [155, 299, 302, 807, 827], "sample_metadata_f": 848, "sample_nam": 155, "sample_typ": [831, 856], "samplea": 775, "sampleb": 775, "samplec": 775, "sampleid": [155, 832], "samplemetadata": 155, "samplerecord": 148, "sanger": 147, "sapien": 146, "sapiensaccggttggc": 153, "satisfi": [158, 244, 803, 1004], "save": [17, 229, 284, 297, 628, 708, 741, 752, 928], "sb": 61, "sbc": 156, "sbjct": 142, "sbjctframe": 142, "sblastnam": [141, 142], "sbp": 624, "scalar": [74, 98, 356, 422, 475, 532, 573, 575, 579, 617, 623, 627, 632, 655, 787, 847, 851], "scale": [77, 678, 790, 791, 792, 798], "scale_i": 798, "scandinavian": 73, "scatter": 787, "scatterplot": [777, 787], "scenario": [144, 609], "scheme": [157, 198, 213, 217, 218, 260, 264, 265, 278, 282, 283, 284, 297, 301, 595, 644, 669], "schmidt": [615, 616], "schneider": 48, "schoch": 157, "school": 145, "schwartz": 587, "sci": [63, 66, 142, 624], "scienc": [71, 72, 79, 143, 146, 587, 791], "sciencedirect": 143, "scientif": [141, 155, 651, 776], "sciki": 146, "scikit": [0, 1, 52, 53, 56, 60, 61, 64, 67, 68, 79, 106, 107, 108, 109, 110, 111, 112, 124, 125, 137, 138, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 156, 157, 245, 247, 299, 302, 338, 340, 352, 359, 360, 361, 362, 372, 373, 406, 408, 419, 424, 457, 459, 471, 477, 513, 515, 527, 534, 535, 536, 560, 561, 571, 574, 596, 602, 603, 645, 650, 670, 676, 776, 788, 789, 858, 873, 932, 953, 956, 1018, 1022], "scipi": [1, 80, 105, 108, 111, 597, 604, 609, 614, 625, 628, 646, 651, 663, 671, 673, 678, 679, 681, 685, 796, 801, 804, 805, 826, 857, 867, 912], "scomnam": [141, 142], "scope": [79, 1023], "score": [0, 17, 48, 61, 62, 63, 64, 65, 66, 67, 68, 74, 141, 142, 146, 148, 149, 154, 537, 575, 590, 593, 777, 798, 1018], "score_filt": 17, "score_onli": 17, "score_s": 17, "sdbl": 905, "sdr": [84, 89], "sdrhelp": 84, "se": 156, "sea": 71, "search": [31, 61, 141, 142, 146, 212, 244, 259, 277, 296, 328, 341, 398, 409, 449, 461, 503, 516, 562, 576, 629, 652, 791, 826, 838, 841, 849, 872, 903, 908, 909, 910, 911, 978, 1018], "sec": 425, "second": [1, 17, 61, 62, 63, 64, 65, 66, 67, 144, 147, 153, 158, 171, 219, 241, 363, 579, 609, 632, 655, 805, 914, 917, 947, 1016, 1023], "secondari": [805, 834], "section": [55, 146, 147, 152, 155, 156, 284, 362, 537, 678, 679, 790, 791], "sediment": 71, "see": [1, 54, 55, 56, 60, 67, 79, 95, 104, 106, 107, 108, 109, 111, 112, 124, 125, 137, 138, 142, 145, 146, 147, 151, 153, 154, 155, 157, 158, 201, 245, 247, 248, 266, 284, 299, 302, 326, 352, 361, 362, 373, 396, 419, 424, 447, 471, 477, 501, 527, 536, 537, 556, 571, 574, 579, 596, 602, 615, 616, 632, 645, 650, 655, 670, 676, 677, 678, 679, 680, 681, 682, 685, 776, 787, 788, 789, 796, 798, 800, 801, 805, 807, 813, 848, 858, 873, 874, 932, 953, 1016, 1017, 1023], "seed": [614, 677, 681, 775, 801, 804, 805, 863], "seem": 804, "seen": [145, 148, 805], "segment": 81, "select": [75, 95, 155, 614, 681, 803, 804, 863, 939], "selenocystein": 425, "self": [4, 5, 6, 8, 9, 10, 11, 12, 14, 19, 20, 22, 23, 24, 25, 26, 28, 35, 38, 40, 42, 114, 115, 117, 118, 119, 120, 121, 127, 128, 130, 131, 132, 133, 134, 135, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 177, 178, 179, 180, 181, 193, 194, 195, 196, 203, 205, 206, 207, 209, 221, 223, 224, 225, 227, 229, 233, 235, 236, 237, 239, 243, 250, 252, 253, 254, 256, 268, 270, 271, 272, 274, 286, 288, 289, 290, 292, 309, 310, 312, 314, 316, 354, 364, 366, 367, 368, 380, 381, 383, 385, 387, 431, 432, 434, 436, 438, 484, 485, 487, 489, 491, 529, 543, 544, 546, 548, 550, 577, 578, 581, 582, 583, 584, 586, 588, 600, 601, 630, 631, 634, 635, 636, 637, 639, 640, 648, 649, 653, 654, 657, 658, 659, 660, 662, 664, 674, 675, 688, 689, 691, 692, 693, 694, 695, 696, 699, 700, 702, 703, 704, 705, 706, 707, 710, 711, 713, 714, 715, 716, 717, 718, 721, 722, 724, 725, 726, 727, 728, 729, 732, 733, 735, 736, 737, 738, 739, 740, 743, 744, 746, 747, 748, 749, 750, 751, 754, 755, 757, 758, 759, 760, 761, 762, 765, 766, 768, 769, 770, 771, 772, 773, 778, 779, 781, 782, 783, 784, 785, 809, 812, 814, 815, 816, 817, 820, 824, 828, 839, 845, 847, 848, 851, 860, 863, 869, 872, 876, 877, 878, 879, 882, 883, 885, 887, 888, 889, 890, 891, 892, 894, 895, 898, 899, 900, 901, 904, 905, 906, 907, 924, 925, 926, 927, 933, 934, 935, 940, 941, 942, 945, 946, 947, 948, 949, 951, 952, 963, 964, 967, 968, 969, 970, 971, 974, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1021, 1023], "self_aft": 948, "self_befor": 948, "semi": 151, "semicolon": [146, 149], "semimetr": 796, "send": [141, 142], "sens": [791, 805, 947, 955], "sensit": [146, 155, 346, 413, 465, 521, 566], "sep": 145, "separ": [1, 141, 142, 144, 146, 147, 149, 150, 151, 152, 153, 155, 681, 791, 832, 835], "seq": [0, 29, 39, 44, 50, 52, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 141, 142, 143, 146, 147, 149, 153, 154, 306, 307, 320, 327, 330, 338, 340, 353, 354, 356, 357, 360, 373, 374, 377, 378, 397, 400, 406, 408, 420, 422, 423, 428, 429, 448, 451, 457, 459, 472, 475, 476, 481, 482, 495, 502, 505, 513, 515, 528, 529, 532, 533, 535, 537, 540, 541, 558, 560, 561, 572, 573, 614, 775, 1023], "seq1": [0, 29, 46, 49, 57, 61, 62, 63, 64, 65, 66, 143, 146, 147, 153, 156, 604, 605], "seq2": [0, 29, 46, 49, 57, 61, 62, 63, 64, 65, 66, 146, 147, 156, 604, 605], "seq3": [29, 49, 146, 153], "seq4": 146, "seq5": 146, "seq_1": 149, "seq_2": 149, "seq_gener": [327, 397, 448, 502], "seq_id": 149, "seq_num": [146, 147, 148, 149, 154], "seqid": 149, "seqr": 148, "sequenc": [1, 17, 29, 30, 32, 33, 34, 39, 41, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 113, 122, 126, 141, 142, 143, 144, 145, 147, 148, 149, 154, 157, 219, 229, 241, 614, 628, 683, 775, 805, 1015, 1016, 1023], "sequence1": 67, "sequence2": 67, "sequenceprocessor": 1023, "sequenti": [103, 144, 146, 147, 153, 624, 625, 787, 949], "ser": 425, "seri": [1, 58, 104, 149, 201, 213, 218, 248, 260, 265, 266, 278, 283, 609, 614, 673, 677, 678, 680, 681, 686, 777, 801], "serial": [150, 284, 627, 777, 1016], "serin": 425, "serv": [0, 157, 776, 787], "server": [61, 62, 63, 64, 65, 66, 157], "set": [16, 17, 47, 50, 54, 55, 79, 95, 106, 107, 112, 146, 148, 150, 153, 159, 198, 212, 229, 242, 259, 277, 296, 298, 303, 321, 330, 343, 346, 356, 374, 391, 400, 410, 413, 422, 425, 442, 451, 462, 465, 475, 478, 496, 505, 518, 521, 532, 537, 554, 558, 563, 566, 573, 587, 595, 601, 606, 618, 644, 649, 669, 675, 685, 775, 796, 798, 801, 803, 804, 805, 823, 824, 831, 863, 865, 876, 877, 892, 894, 897, 901, 904, 905, 907, 927, 941, 942, 954, 961, 972, 973, 978, 1018, 1023], "set1": 787, "set_index": 913, "setter": 228, "setup": 1023, "seven": 609, "sever": [79, 151, 153, 801], "sex": [803, 804], "sffaaa": 147, "sfprgfifgagssayqfegavneggrgpsiwdtfthkypekirdgsnaditv": 145, "sframe": [141, 142], "sg": [360, 373, 535], "sgc": [372, 373], "sgi": [141, 142], "shallow": [29, 32, 229, 230, 306, 377, 428, 481, 537, 540], "shannon": [48, 83, 96], "shannon_entropi": 48, "shape": [41, 50, 139, 152, 577, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 653, 679, 792, 795, 806, 807, 833, 834, 867, 874], "share": [17, 52, 53, 55, 70, 298, 321, 338, 340, 391, 406, 408, 442, 457, 459, 496, 513, 515, 537, 554, 560, 561, 776, 1021], "shear": 931, "sheet": 155, "shift": 241, "short": 1023, "short_cicruit": 982, "short_circuit": 981, "short_method_nam": [777, 959], "shorter": 153, "should": [1, 17, 48, 68, 75, 79, 80, 91, 95, 102, 104, 105, 106, 107, 108, 141, 148, 152, 155, 157, 158, 169, 170, 171, 211, 229, 258, 276, 284, 294, 303, 326, 343, 344, 345, 355, 362, 396, 410, 411, 412, 421, 425, 447, 462, 463, 464, 474, 478, 501, 518, 519, 520, 531, 556, 563, 564, 565, 605, 607, 608, 609, 620, 626, 663, 679, 681, 685, 775, 790, 791, 796, 797, 798, 801, 804, 805, 818, 819, 828, 863, 869, 872, 913, 934], "shouldn": 791, "show": [1, 229, 801, 1021], "show_intern": 893, "shown": [219, 609, 790], "shrink": 614, "shtml": 146, "shuffl": 900, "shuffle_f": [900, 939], "shuffled_tre": 939, "shuffler": 939, "sibl": [151, 321, 391, 442, 496, 554], "side": [95, 679, 682, 685], "sigh": 1015, "sign": [155, 609, 959], "signatur": [109, 199, 823, 833, 867], "signific": [1, 155, 609, 614, 677, 679, 680, 681, 682, 685, 804, 805], "significance_test": 609, "significantli": [1, 54, 609, 677, 680, 681], "silent": [79, 106, 107, 839], "silpl": 372, "simd": [17, 67], "similar": [61, 62, 63, 64, 65, 66, 105, 142, 145, 146, 147, 150, 153, 155, 158, 537, 575, 677, 678, 679, 680, 681, 776, 791, 796, 798, 804, 805, 1018, 1021], "similarli": [0, 1, 146, 1018], "simpl": [141, 142, 146, 147, 151, 155, 156, 158, 183, 193, 621, 678, 685, 1016, 1021], "simpler": 0, "simplex": [607, 615, 616, 624], "simpli": [48, 55, 102, 158, 362, 597, 646, 671, 796, 801, 908, 1023], "simplifi": 81, "simpson": [75, 100], "simul": [606, 801, 804, 805], "sinc": [1, 29, 46, 49, 58, 81, 145, 146, 148, 153, 155, 157, 220, 330, 372, 400, 451, 505, 537, 558, 609, 679, 801, 805, 948, 961, 1023], "singl": [1, 29, 46, 49, 57, 79, 85, 86, 94, 106, 107, 109, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 201, 216, 219, 229, 241, 248, 263, 266, 281, 284, 300, 310, 313, 318, 330, 343, 357, 381, 384, 389, 400, 410, 423, 432, 435, 440, 451, 462, 476, 485, 488, 493, 505, 518, 533, 544, 547, 552, 558, 563, 609, 624, 685, 802, 823, 824, 833, 848, 896, 1004, 1016, 1021, 1023], "singleton": [1, 70, 73, 74, 78, 80, 82, 94, 97, 101, 158], "singular": [1, 800, 931, 1004], "sinica": 70, "site": [1, 148, 152, 343, 410, 462, 518, 563, 776, 777, 787, 796], "site0": 152, "site1": [152, 776], "site10": 776, "site2": [152, 776], "site3": [152, 776], "site4": [152, 776], "site5": [152, 776], "site6": [152, 776], "site7": [152, 776], "site8": [152, 776], "site9": [152, 776], "sitemap": 148, "situat": [1, 787, 803], "six": [152, 360, 373, 535, 609], "size": [41, 77, 614, 677, 678, 679, 681, 764, 775, 787, 795, 801, 803, 804, 805, 823, 833, 867, 980], "sk": [155, 216, 263, 281, 300], "skbio": [155, 1015], "skin": [1, 787], "skip": [343, 410, 462, 518, 563, 677, 679, 680, 681, 685, 833], "skip_subregion": 149, "sklearn": 108, "slen": [141, 142], "slice": [36, 310, 328, 329, 343, 353, 381, 398, 399, 410, 420, 432, 449, 450, 462, 472, 485, 503, 504, 518, 528, 544, 557, 563, 572, 579, 627, 632, 655, 810, 880, 1018], "slightli": [61, 84, 681], "slope": 84, "slow": [1, 79, 104, 106, 107, 108], "slower": [0, 956], "sm": [356, 422, 475, 532, 573], "small": [1, 150, 156, 606, 618, 619, 798], "smaller": [102, 343, 410, 462, 518, 563, 682], "smallest": [103, 153, 804, 805, 857], "smith": [0, 17, 64, 65, 66, 67, 685], "snif": 1016, "sniffer": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 185, 190, 191, 194, 195, 1016], "so": [1, 3, 48, 61, 62, 63, 64, 65, 66, 68, 79, 104, 106, 107, 108, 146, 151, 155, 158, 198, 199, 229, 232, 332, 333, 507, 508, 679, 753, 776, 790, 791, 792, 796, 798, 801, 803, 804, 805, 865, 954, 1016, 1021, 1023], "sob": [1, 92, 93, 94], "societi": 95, "softwar": [1, 146, 147, 155, 868, 1015], "sole": [155, 293], "solexa": 147, "solut": 80, "solv": [80, 801], "some": [1, 17, 69, 79, 81, 91, 95, 113, 146, 148, 151, 154, 155, 169, 170, 171, 219, 243, 303, 425, 478, 608, 621, 622, 623, 791, 801, 804, 981, 1021, 1023], "someformat": 1016, "someskbioclass": [158, 1016], "someth": [56, 60, 124, 125, 137, 138, 158, 170, 190, 191, 192, 194, 195, 196, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 683, 788, 789, 828, 858, 873, 932, 953, 1023], "sometim": [75, 146, 148, 155, 791, 1016], "somewhat": [685, 928], "sonnhamm": 156, "soppos": 145, "sort": [50, 55, 110, 111, 220, 229, 232, 327, 330, 356, 397, 400, 422, 448, 451, 475, 502, 505, 532, 558, 573, 720, 753, 775, 823, 862, 863, 941, 946, 947, 954, 1018, 1023], "sort_categori": [686, 687, 709, 720, 753], "sort_f": 861, "sort_index": 58, "sorted_t": 862, "sourc": [29, 30, 31, 32, 33, 34, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 122, 123, 124, 125, 126, 135, 136, 137, 138, 145, 146, 148, 149, 159, 169, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 228, 229, 230, 231, 232, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 697, 698, 708, 709, 719, 720, 730, 731, 741, 742, 752, 753, 763, 764, 774, 775, 777, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 880, 884, 886, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 965, 972, 978, 979, 980, 981, 982, 992, 993, 994, 1004, 1005, 1015], "space": [1, 146, 151, 153, 155, 156, 229, 232, 241, 606, 607, 608, 612, 613, 615, 616, 720, 776, 777, 787, 790, 797, 823], "spaitial": 681, "span": [79, 95, 109, 146, 148, 151, 219, 244, 823], "spars": [140, 615, 616, 625, 790, 798, 807, 810, 826, 833, 843, 844, 845, 865, 867], "sparse_vector": 823, "sparsedatafram": 866, "spatial": [1, 105, 108, 111, 597, 604, 628, 646, 651, 663, 671, 673, 681], "spearman": [1, 678, 679, 682], "spearmanr": [678, 679], "spec": 284, "specfi": 1023, "speci": [1, 70, 79, 82, 84, 89, 95, 102, 103, 152, 157, 614, 621, 776, 791, 796, 798, 875], "special": [17, 150, 158, 833, 867], "speciat": 685, "specie1": 776, "specie2": 776, "specie3": 776, "specie4": 776, "specie5": 776, "specie6": 776, "specie7": 776, "specie8": 776, "specie9": 776, "species0": 152, "species1": 152, "species2": 152, "species3": 152, "species4": 152, "species5": 152, "species6": 152, "species7": 152, "species8": 152, "species_a": 895, "speciesa": 895, "specif": [74, 79, 84, 104, 106, 107, 108, 109, 112, 158, 244, 248, 537, 685, 697, 719, 720, 730, 763, 774, 804, 805, 810, 823, 833, 867, 939, 1016, 1022, 1023], "specifi": [51, 55, 95, 112, 113, 141, 143, 144, 146, 147, 148, 149, 150, 153, 156, 157, 158, 189, 198, 219, 229, 242, 244, 296, 297, 303, 310, 328, 330, 346, 359, 371, 372, 374, 381, 398, 400, 413, 425, 432, 449, 451, 465, 478, 485, 503, 505, 521, 534, 537, 544, 558, 566, 576, 579, 586, 589, 594, 595, 601, 607, 608, 609, 614, 615, 616, 618, 619, 625, 629, 632, 639, 641, 643, 644, 649, 652, 655, 662, 665, 667, 669, 675, 677, 678, 679, 680, 681, 685, 764, 787, 795, 796, 802, 810, 820, 823, 833, 837, 839, 860, 867, 897, 905, 936, 939, 941, 944, 947, 954, 981, 993, 994, 1004, 1023], "speed": [229, 796], "spermatophyta": 145, "sphingobacteria": [914, 947], "split": [146, 147, 153, 156], "spmatrix": [810, 826], "spreadsheet": [150, 155], "sqcup": [79, 95], "sqlite": 296, "sqrt": [78, 88, 89, 90, 624, 798], "squar": [90, 91, 108, 151, 575, 628, 651, 793], "squareform": [628, 673], "sr1": 362, "srava": 156, "ss": [156, 863], "ss_con": 156, "sscinam": [141, 142], "sseq": [141, 142], "sseqid": [141, 142], "sskingdom": [141, 142], "sstart": [141, 142], "sstrand": [141, 142], "ssw": [3, 17, 67], "stabl": [586, 601, 639, 649, 662, 675, 894], "stack": 928, "stackoverflow": 980, "stai": 155, "stale": 229, "stamataki": 895, "stand": [333, 508, 679], "standalon": 146, "standard": [146, 147, 149, 151, 155, 356, 359, 360, 362, 372, 373, 422, 475, 532, 534, 535, 573, 579, 606, 609, 632, 655, 678, 679, 792, 795, 798, 799, 1016, 1018], "standardis": 77, "staphylococcu": 820, "start": [0, 15, 16, 17, 29, 46, 49, 57, 61, 62, 63, 64, 65, 66, 67, 113, 141, 142, 145, 148, 149, 150, 151, 153, 156, 157, 219, 240, 246, 322, 341, 362, 363, 369, 372, 373, 392, 409, 443, 461, 497, 516, 555, 562, 628, 682, 683, 801, 804, 805, 843, 1023], "start_end_posit": 0, "stat": [0, 1, 29, 46, 47, 49, 54, 55, 58, 91, 97, 113, 126, 139, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 303, 310, 320, 321, 324, 327, 354, 358, 359, 360, 362, 372, 373, 374, 381, 391, 394, 397, 425, 432, 442, 445, 448, 478, 485, 495, 496, 499, 502, 529, 530, 534, 535, 537, 544, 554, 575, 586, 595, 601, 603, 857, 1015, 1018], "state": [95, 143, 153, 155, 198, 981, 982, 992, 1004, 1023], "static": [374, 832, 835], "statis": [677, 680], "statist": [1, 70, 73, 78, 84, 91, 607, 609, 614, 677, 679, 680, 681, 682, 685, 776, 790, 791, 795, 801, 804, 805, 1015], "statistica": [70, 81], "statsmodel": 801, "statu": [803, 804], "staxid": [141, 142], "std": [145, 795, 799, 804], "steel": 955, "steep": 790, "step": [1, 29, 46, 49, 57, 79, 104, 106, 107, 108, 153, 158, 794, 801], "still": [151, 152, 198, 228, 609, 614, 618, 679, 681], "stimat": 799, "stitl": [141, 142], "stockholm": [56, 60], "stockholm_format": 156, "stombaugh": [106, 107], "stool": 805, "stop": [29, 46, 49, 57, 70, 113, 126, 144, 153, 322, 341, 359, 360, 362, 372, 373, 392, 409, 425, 443, 460, 461, 497, 516, 534, 535, 555, 562, 807, 874, 895, 982, 1018], "storag": [229, 865], "store": [2, 29, 39, 44, 52, 53, 54, 113, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 219, 229, 284, 301, 303, 338, 340, 374, 406, 408, 425, 457, 459, 478, 513, 515, 537, 560, 561, 597, 627, 628, 646, 651, 671, 682, 698, 731, 742, 777, 790, 791, 796, 798, 823, 833, 867, 875, 1017, 1018], "str": [14, 18, 28, 34, 39, 44, 56, 60, 68, 104, 108, 109, 110, 111, 112, 113, 124, 125, 126, 135, 137, 138, 141, 148, 149, 156, 159, 168, 181, 184, 185, 186, 190, 191, 192, 194, 195, 196, 198, 209, 211, 214, 216, 227, 239, 245, 247, 256, 258, 261, 263, 274, 276, 279, 281, 284, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 305, 313, 318, 319, 322, 326, 327, 328, 329, 330, 341, 342, 344, 346, 347, 348, 349, 350, 352, 353, 355, 356, 361, 362, 370, 376, 384, 389, 390, 392, 396, 397, 398, 399, 400, 409, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 427, 435, 440, 441, 443, 447, 448, 449, 450, 451, 461, 463, 465, 466, 467, 468, 469, 471, 472, 474, 475, 477, 478, 480, 488, 493, 494, 497, 501, 502, 503, 504, 505, 516, 517, 519, 521, 522, 523, 524, 525, 527, 528, 531, 532, 536, 537, 539, 547, 552, 553, 555, 556, 557, 558, 562, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 579, 585, 586, 587, 589, 592, 594, 595, 596, 601, 602, 609, 614, 620, 625, 628, 629, 632, 638, 639, 641, 643, 644, 645, 649, 650, 652, 655, 661, 662, 665, 667, 669, 670, 675, 676, 677, 678, 680, 681, 682, 683, 696, 698, 707, 718, 720, 729, 731, 740, 742, 751, 762, 773, 777, 786, 787, 788, 789, 796, 803, 804, 817, 820, 823, 826, 827, 828, 830, 832, 833, 837, 841, 849, 857, 858, 865, 867, 868, 869, 873, 875, 889, 893, 897, 908, 909, 921, 923, 932, 936, 938, 942, 944, 953, 954, 955, 960, 974, 979, 991, 1003, 1014], "straight": 1, "straightforward": [155, 1018], "strand": [141, 142, 148, 149, 156, 219, 358, 359, 360, 530], "stranded": 148, "strategi": [606, 618, 955], "stream": [146, 149, 1016], "strength": 1, "streptophyta": 145, "strict": [55, 153, 321, 391, 442, 496, 554, 589, 641, 665, 679, 682, 685, 823, 872], "strict_match": [803, 804], "stricter": [151, 958], "strictli": [146, 609, 614, 625, 896], "string": [1, 17, 45, 104, 108, 109, 112, 122, 123, 136, 139, 143, 144, 146, 147, 151, 153, 155, 156, 217, 218, 264, 265, 282, 283, 284, 301, 319, 329, 330, 346, 353, 356, 357, 362, 370, 390, 399, 400, 413, 420, 422, 423, 441, 450, 451, 465, 472, 475, 476, 494, 504, 505, 521, 528, 532, 533, 553, 557, 558, 566, 572, 573, 575, 579, 585, 591, 609, 614, 627, 628, 632, 638, 642, 655, 661, 666, 677, 680, 681, 683, 786, 787, 828, 831, 857, 868, 869, 872, 889, 893, 947, 955, 960, 1021], "stringifi": 817, "stringio": [1, 79, 106, 107, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 198, 627, 832, 835, 954, 955, 1016, 1021], "strip": [895, 899, 900], "stripe": [17, 67], "stripedsmithwaterman": [0, 67], "strong": [1, 303, 677, 679, 685], "struct": [3, 148], "structur": [106, 107, 142, 144, 148, 151, 157, 587, 628, 677, 678, 685, 776, 807, 823, 833, 867, 874, 937, 981, 1015], "studi": [1, 79, 155, 284, 606, 609, 776, 790, 798, 805], "style": [606, 951, 952], "su": 156, "sub": [148, 149, 219, 806], "subclass": [55, 143, 146, 153, 156, 158, 248, 321, 391, 442, 496, 537, 554, 575, 627, 628, 683, 954, 981], "subfold": 979, "subject": [1, 141, 142, 155, 1017, 1023], "subject1": 142, "subject2": 142, "sublist": 805, "submit": [145, 146, 805], "submodul": 158, "suboptim": 17, "subsampl": [91, 775, 801, 804, 805, 806, 900, 1015], "subsample_count": [91, 775], "subsample_paired_pow": 805, "subsample_pow": 801, "subseq": [343, 410, 462, 518, 537, 563], "subsequ": [64, 143, 146, 155, 305, 313, 318, 322, 341, 343, 376, 384, 389, 392, 409, 410, 427, 435, 440, 443, 461, 462, 480, 488, 493, 497, 516, 518, 537, 539, 547, 552, 555, 562, 563, 981, 1018], "subset": [79, 95, 106, 107, 112, 139, 145, 678, 833, 839, 863, 899, 905, 1021], "subset_with_metadata": 833, "subsitut": [356, 422, 475, 532, 573], "substitut": [17, 61, 62, 63, 64, 65, 66, 68, 150, 356, 422, 425, 475, 532, 573, 575, 587, 590, 592, 593, 599, 606, 957, 1018], "substitution_matrix": [17, 61, 62, 63, 64, 65, 66], "substitutionmatrix": [68, 356, 422, 475, 532, 573, 1018], "substract": [61, 62, 63, 64, 65, 66, 794], "substrat": 776, "substrate_cor": 776, "substrate_oth": 776, "substrate_sand": 776, "subtili": 156, "subtract": [17, 764], "subtre": [151, 157, 910, 1021], "success": [957, 982, 1023], "success_callback": [982, 1023], "success_f": 1023, "successfulli": 895, "suffix": 69, "suggest": [17, 170, 190, 191, 194, 195, 804], "suit": 791, "sum": [70, 72, 75, 79, 88, 89, 91, 95, 99, 144, 241, 330, 400, 451, 505, 558, 608, 612, 613, 617, 805, 806, 843, 844, 848, 853, 863, 890, 946, 980], "sum_": [77, 79, 81, 95, 98, 606, 608, 621, 622, 623, 679], "summar": 609, "summari": [45, 585, 609, 638, 661, 853], "super": [141, 142], "superkingdom": 157, "superset": [79, 95, 106, 107, 677, 681], "supplement": 77, "supplementari": [147, 609], "suppli": [17, 141, 146, 154, 190, 194, 293, 326, 396, 447, 501, 556, 603, 805, 823, 905], "support": [1, 2, 48, 56, 60, 81, 124, 125, 137, 138, 198, 201, 245, 247, 266, 284, 293, 299, 302, 303, 352, 361, 419, 424, 425, 471, 477, 478, 527, 536, 571, 574, 575, 587, 596, 602, 645, 650, 670, 676, 679, 777, 788, 789, 796, 801, 810, 823, 850, 858, 873, 875, 895, 932, 950, 953, 954, 961, 981, 1004, 1015, 1019, 1020, 1021, 1022, 1023], "support_attr": 954, "support_valu": 954, "suppos": [141, 142, 145, 146, 147, 148, 151, 154, 156, 621, 801, 805], "suppress": [157, 677, 681, 682], "suppress_sequ": [17, 67], "sure": [666, 805, 1023], "surpass": 153, "surround": [151, 614], "survei": 1, "sv": 145, "svd": 800, "svg": 777, "sw": [17, 803], "swab": 1, "swiss": 145, "switch": 810, "sy": 199, "symbiont": 685, "symbol": [48, 146], "symmetr": [1, 575, 579, 627, 628, 632, 651, 655, 666, 679, 683, 685, 790, 898], "symmetri": [627, 628, 651, 666, 668], "symptom": 805, "syn": 148, "synonym": [1, 157], "synthesi": 156, "synthet": 148, "system": [56, 60, 87, 98, 124, 125, 137, 138, 155, 157, 158, 229, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 804, 839, 858, 873, 932, 953], "systemat": 95, "t": [1, 17, 29, 46, 48, 49, 50, 54, 55, 59, 67, 79, 81, 95, 104, 106, 107, 108, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 169, 171, 199, 219, 220, 297, 303, 308, 317, 322, 326, 330, 332, 333, 334, 335, 336, 339, 347, 348, 349, 350, 358, 372, 379, 388, 392, 396, 400, 402, 403, 404, 407, 414, 415, 416, 417, 425, 430, 439, 443, 447, 451, 453, 454, 455, 458, 466, 467, 468, 469, 478, 483, 492, 497, 501, 505, 507, 508, 509, 510, 511, 514, 522, 523, 524, 525, 530, 537, 542, 551, 555, 556, 558, 567, 568, 569, 570, 575, 593, 607, 609, 614, 615, 616, 620, 621, 625, 682, 790, 791, 796, 798, 800, 801, 803, 805, 806, 820, 828, 833, 834, 850, 857, 867, 870, 899, 900, 937, 938, 946, 954, 955, 956, 1018, 1022, 1023], "t0": [141, 142, 149, 152, 154, 627], "t1": [141, 142, 152, 154, 157, 627, 832], "t10": [149, 152], "t100": [141, 142], "t10596": 142, "t1217": 142, "t1233": 142, "t131567": 157, "t1566": 142, "t161": 141, "t2": [152, 154, 832, 835], "t2130": 142, "t2214": 142, "t3": [154, 832, 835], "t30": [149, 154], "t329": 141, "t330": 141, "t335928": 157, "t34": 154, "t35": 154, "t3e": [141, 142], "t4": 152, "t42": 142, "t44": 142, "t5": 835, "t50": 149, "t5565": 142, "t5587": 142, "t5671": 142, "t6": 835, "t6821": 142, "t6928": 142, "t6e": 142, "t80": 149, "t811": 142, "t8468": 142, "t8552": 142, "t8e": 142, "t9": 152, "t90": 149, "t94": 142, "t96": 149, "t99": 141, "t9e": 141, "t_a": 848, "t_b": 848, "ta": [627, 1018], "taaactatta": 145, "taaactccgg": 145, "taacaatcct": 145, "taacatatac": 147, "taacgtta": [358, 530], "taagactaaa": 145, "taatgaatgg": 145, "tab": [141, 142, 149, 150, 151, 152, 154, 155, 157, 827, 832, 835, 869], "tabl": [1, 104, 108, 140, 147, 148, 155, 157, 296, 359, 360, 362, 371, 372, 373, 534, 535, 609, 614, 776, 790, 791, 797, 798, 981, 1015, 1017, 1018], "table2": 870, "table3": 870, "table_id": [371, 807, 874], "tableexcept": [807, 859, 872, 874], "tabular": [29, 141, 142, 155, 157, 284], "tabularmsa": [0, 61, 62, 63, 64, 65, 66, 67, 143, 147, 153, 156, 229, 1016], "tac": 154, "tacatcgttt": 145, "tacatgtgta": 145, "taccaggcat": 145, "tacccggt": 1018, "tacctaagtt": 145, "tacg": 154, "tacgta": 154, "tae000111": 142, "tae000171": 142, "tae000174": 142, "tae000425": 142, "tag": [149, 156, 327, 357, 397, 423, 448, 476, 502, 533, 624], "tagagattaattgccactgccaaaattctg": 0, "tagattacag": 145, "taggttgatc": 145, "tagtgaatgg": 145, "take": [1, 108, 153, 158, 169, 170, 171, 248, 326, 353, 396, 420, 447, 472, 501, 528, 556, 572, 591, 609, 642, 651, 666, 678, 679, 753, 790, 798, 801, 802, 818, 819, 828, 848, 861, 869, 870, 955, 981, 1021, 1023], "taken": [1, 141, 142, 146, 153, 156, 157, 609, 685, 980], "target": [0, 1, 17, 67, 78, 149, 586, 601, 639, 649, 662, 675], "target_begin": 3, "target_sequ": [0, 3, 17, 18], "task": [957, 1016], "tata": [329, 399, 450, 504, 557], "tataa": [329, 399, 450, 504, 557], "tatattagca": 145, "tatctaactg": 145, "tatgtatata": 147, "tatgtatatataacatatacatatatacatacata": 147, "tau": 609, "tax": 142, "tax_id": [157, 913], "taxa": [1, 70, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 155, 157, 609, 791, 805, 900, 955], "taxdump": 913, "taxdump_readm": 157, "taxid": 157, "taxon": [1, 70, 71, 72, 75, 77, 79, 88, 89, 95, 98, 99, 103, 106, 107, 145, 148, 807, 874, 913, 1021], "taxonom": [1, 106], "taxonomi": [141, 151, 155, 157, 362, 370, 371, 823, 824, 833, 850, 867, 913, 914, 947], "taxonomy_0": [850, 865], "taxonomy_1": [850, 865], "taylor": 84, "tb": [627, 832, 835], "tc": [627, 832, 835], "tcaaaagaaa": 145, "tcatttagga": 154, "tcc": 0, "tccacaaatg": 145, "tccagaaaaa": 145, "tcg": [357, 423, 476, 533], "tcga": [356, 422, 475, 532, 573], "tcggagcagt": 145, "tcgggcasdgca": 154, "tcgggcattgca": 154, "tcgtatagat": 145, "tctacccctctcagaga": 0, "tctataagattccgcatgcgttacttataagatgtctcaacgg": 0, "tctcaatctc": 145, "tctcaga": 0, "tcttaacata": 145, "tcttcagcat": 145, "tcttgctcat": 145, "tctttgcttc": 145, "tdbl": 905, "technic": [98, 151], "techniqu": [1, 80, 606, 790, 791, 1019], "teh": [807, 874], "tell": 609, "temorg": 142, "temperatur": 804, "tempfil": 198, "temporari": 823, "temporaryfil": 198, "ten": 1, "tend": 155, "ter": [425, 791], "term": [1, 48, 75, 93, 95, 140, 148, 213, 248, 260, 278, 284, 685, 776, 955], "termin": [145, 359, 372, 534, 948], "test": [1, 34, 43, 95, 158, 202, 208, 220, 226, 232, 238, 249, 255, 267, 273, 285, 291, 308, 317, 363, 369, 379, 388, 430, 439, 483, 492, 542, 551, 606, 609, 614, 627, 677, 679, 680, 681, 682, 684, 685, 697, 719, 730, 763, 774, 801, 804, 805, 829, 958, 959, 979, 1015], "test_tabl": [832, 835], "texon": 149, "text": [72, 88, 89, 103, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 169, 170, 171, 198, 284, 627, 708, 741, 752], "textiobas": [159, 169, 170, 171, 198], "textiowrapp": 198, "tf": 64, "tgaaggatca": 145, "tgaattcaac": 145, "tgca": 154, "tgene": 149, "tgenu": 157, "tgetaaafhwqaaf": 154, "tgg": [327, 357, 397, 423, 448, 476, 502, 533], "tggaacaatt": 145, "tggattaaaa": 145, "tggattctgc": 219, "tggtgcacct": 145, "tggtgctgga": 145, "tgi": 141, "tgtaataaat": 145, "th": [72, 88, 89, 103, 624], "than": [0, 1, 17, 47, 48, 70, 79, 84, 86, 102, 106, 107, 146, 151, 153, 156, 191, 195, 229, 284, 303, 304, 305, 308, 322, 326, 330, 341, 342, 343, 344, 345, 347, 348, 349, 350, 360, 373, 375, 376, 379, 392, 396, 400, 409, 410, 411, 412, 414, 415, 416, 417, 425, 426, 427, 430, 443, 447, 451, 461, 462, 463, 464, 466, 467, 468, 469, 478, 479, 480, 483, 497, 501, 505, 516, 517, 518, 519, 520, 522, 523, 524, 525, 535, 538, 539, 542, 555, 556, 558, 562, 563, 564, 565, 567, 568, 569, 570, 575, 605, 606, 609, 611, 614, 627, 668, 677, 679, 680, 681, 685, 775, 790, 791, 804, 805, 806, 839, 844, 863, 896, 913, 926, 955, 960, 1016, 1021], "thei": [0, 1, 39, 44, 48, 54, 70, 104, 108, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 246, 303, 308, 317, 320, 343, 363, 379, 388, 410, 430, 439, 462, 478, 483, 492, 495, 518, 542, 551, 563, 577, 589, 606, 630, 641, 653, 665, 677, 678, 679, 680, 681, 682, 686, 786, 787, 790, 796, 801, 824, 833, 867, 900, 907, 956, 958, 1023], "them": [1, 81, 148, 153, 155, 220, 232, 241, 242, 355, 421, 474, 531, 537, 679, 720, 795, 796, 798, 982], "themselv": [1017, 1018], "theorem": [85, 86], "theoret": [96, 100], "theori": [48, 72, 87, 98, 620, 626], "therebi": 776, "therefor": [1, 46, 49, 55, 75, 79, 95, 99, 106, 107, 112, 155, 284, 575, 609], "thermoplasmata": [914, 947], "theta": [95, 609], "thi": [0, 1, 2, 17, 31, 32, 33, 34, 36, 41, 43, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 84, 85, 86, 91, 94, 95, 104, 105, 106, 107, 108, 109, 111, 112, 113, 124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 169, 170, 171, 183, 191, 193, 195, 197, 198, 199, 202, 208, 211, 217, 218, 219, 220, 226, 228, 229, 230, 231, 232, 238, 240, 241, 242, 243, 244, 245, 247, 249, 255, 258, 264, 265, 267, 273, 276, 282, 283, 284, 285, 291, 293, 294, 297, 298, 299, 301, 302, 305, 306, 307, 308, 310, 313, 315, 317, 318, 321, 322, 326, 330, 332, 333, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 356, 357, 360, 361, 362, 371, 372, 373, 374, 376, 377, 378, 379, 381, 384, 386, 388, 389, 391, 392, 396, 400, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 427, 428, 429, 430, 432, 435, 437, 439, 440, 442, 443, 447, 451, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 475, 476, 477, 480, 481, 482, 483, 485, 488, 490, 492, 493, 496, 497, 501, 505, 507, 508, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 532, 533, 535, 536, 537, 539, 540, 541, 542, 544, 547, 549, 551, 552, 554, 555, 556, 558, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 596, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 627, 630, 632, 645, 646, 647, 650, 651, 653, 655, 668, 670, 671, 672, 673, 676, 677, 678, 679, 681, 683, 684, 685, 686, 775, 776, 787, 788, 789, 791, 796, 797, 798, 801, 803, 804, 805, 820, 823, 824, 831, 833, 839, 848, 854, 857, 858, 863, 867, 868, 872, 873, 875, 891, 893, 895, 897, 899, 900, 903, 905, 906, 908, 910, 911, 913, 917, 924, 928, 931, 932, 934, 936, 937, 939, 940, 941, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 979, 980, 981, 982, 992, 1004, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "thing": 1023, "third": [621, 627, 917, 1023], "those": [1, 105, 155, 284, 298, 685, 775, 790, 805, 843, 905, 939, 944, 955, 981, 1018], "though": [81, 146, 147, 153, 154, 155, 609, 663, 677, 681, 845, 955, 1023], "thought": 681, "thr": 425, "thraustochytrium": 371, "three": [1, 29, 94, 153, 157, 621, 627, 651, 682, 776, 787, 804, 805, 823, 824, 870, 900, 1023], "threonin": 425, "threshold": [70, 958], "through": [1, 36, 61, 62, 63, 144, 155, 183, 189, 193, 579, 632, 655, 796, 908, 1023], "throughout": [1, 150, 362, 371, 804, 1022], "throughput": [79, 106, 107, 146, 147, 614, 787, 804], "thrown": [170, 915], "thu": [1, 146, 147, 151, 155, 211, 258, 276, 294, 330, 400, 451, 505, 537, 558, 579, 632, 651, 655, 677, 679, 681, 685, 796], "thymin": [145, 148, 303, 358, 530], "ti": [47, 71, 857, 954], "tid": 149, "tile": 154, "tile_numb": 154, "till": 157, "time": [1, 17, 46, 49, 79, 91, 100, 106, 107, 109, 146, 147, 155, 575, 615, 616, 624, 663, 677, 678, 679, 680, 682, 686, 709, 764, 798, 801, 804, 805, 810, 823, 854, 863, 875, 939, 1023], "timestamp": 867, "tip": [1, 79, 95, 106, 107, 875, 893, 895, 897, 898, 899, 900, 902, 903, 905, 906, 908, 915, 920, 921, 922, 923, 925, 926, 928, 929, 930, 936, 937, 938, 939, 941, 942, 944, 947, 948, 949, 954, 1016, 1021], "tip_": 940, "tip_a": [906, 935], "tip_count": 926, "tip_d": 906, "tip_list": 943, "tip_nam": 897, "tip_subset": 905, "tip_tip_dist": [906, 915], "tipnam": [921, 923], "tissue_typ": 145, "titl": [1, 141, 142, 148, 156, 595, 644, 669, 787], "tjflkafnkkghvm": 154, "tmgc": 371, "tn": 156, "tno": 157, "to_": [586, 639, 662], "to_data_fram": 673, "to_datafram": [218, 265, 283, 284], "to_delet": 931, "to_dict": 50, "to_hdf5": 833, "to_seri": [217, 264, 282], "toarrai": 625, "tobacco": 805, "togeth": [55, 145, 146, 148, 156, 609, 823, 848, 981], "token": 113, "tol": 800, "toler": [800, 958], "tolosana": [606, 624], "ton": 1, "tongu": 1, "too": [86, 796, 820, 890], "tool": [61, 64, 141, 142, 146, 153, 155, 157, 787, 791], "toolkit": 895, "top": [609, 913], "topolog": 894, "topologi": [897, 931, 1021], "total": [71, 72, 78, 79, 80, 82, 87, 88, 89, 90, 91, 103, 139, 141, 155, 330, 400, 451, 505, 558, 678, 823, 905], "totaldescendingbranch": 905, "toward": 891, "tparent": 149, "tr": 905, "traceback": [141, 153, 372, 537, 679], "tracheophyta": 145, "track": [144, 145], "tracker": [146, 170], "tract": 805, "trail": [146, 147, 150], "trajectori": [686, 687, 697, 698, 708, 709, 719, 720, 730, 731, 741, 742, 752, 753, 763, 764, 774], "trajectory_categori": [686, 687, 709, 720, 753], "trajectory_result": 686, "tranform": 870, "tranpos": 865, "transcrib": [145, 148, 359, 360, 530, 1018], "transcript": 219, "transect": 776, "transform": [169, 171, 343, 410, 462, 518, 563, 606, 607, 608, 612, 613, 615, 616, 620, 625, 790, 796, 798, 810, 835, 857], "translat": [145, 148, 151, 157, 198, 358, 360, 362, 373, 530, 535, 1018], "translate_six_fram": [358, 359, 372, 530, 534], "transloc": 804, "transpar": [155, 198], "transpos": 865, "trapezoid": 81, "trascrib": 145, "traver": 1021, "travers": [876, 877, 897, 901, 904, 908, 911, 922, 925, 928, 929, 930, 945, 951, 952, 1021], "tre361": 145, "treat": [46, 47, 48, 49, 146, 150, 155, 284, 303, 346, 355, 413, 421, 425, 465, 474, 478, 521, 531, 537, 566, 604, 804], "treatment": [248, 609, 614, 686, 804, 821], "treatment_stat": 804, "tree": [1, 79, 95, 106, 107, 151, 156, 157, 229, 625, 822, 838, 1015, 1016], "tree1": [898, 899, 900, 1021], "tree2": [898, 899, 900, 1021], "tree3": 1021, "tree_copi": [876, 877, 901, 904], "tree_copy_nod": [876, 877, 901, 904], "tree_nod": [876, 877, 901, 904], "tree_node_class": 954, "treeerror": [936, 937], "treenod": [1, 79, 95, 106, 107, 151, 625, 822, 954, 955, 1016, 1021], "trg": [327, 357, 397, 423, 448, 476, 502, 533], "tri": 845, "triangl": [651, 666, 673, 679, 796, 845], "triangular": 679, "trifoliea": 145, "trifolium": 145, "trifurc": [79, 106, 107, 151], "trim": 372, "tripleton": 1, "trp": 425, "trubbbbrbcefgh": 154, "true": [1, 15, 16, 17, 30, 31, 32, 33, 34, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 63, 73, 74, 79, 80, 95, 102, 104, 106, 107, 108, 109, 112, 113, 126, 141, 144, 145, 146, 147, 148, 149, 151, 154, 169, 170, 171, 190, 194, 198, 199, 212, 215, 219, 229, 241, 246, 259, 262, 277, 280, 293, 303, 304, 305, 307, 308, 310, 317, 320, 321, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 372, 373, 374, 375, 376, 378, 379, 381, 388, 391, 393, 394, 395, 397, 400, 401, 402, 403, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 429, 430, 432, 439, 442, 444, 445, 446, 448, 451, 452, 453, 454, 455, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 485, 492, 495, 496, 498, 499, 500, 502, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 541, 542, 544, 551, 554, 558, 560, 561, 564, 565, 566, 567, 568, 569, 570, 572, 573, 576, 577, 584, 586, 589, 605, 609, 614, 615, 616, 620, 627, 628, 629, 630, 637, 639, 641, 651, 652, 653, 660, 662, 665, 666, 668, 677, 679, 681, 682, 685, 720, 731, 795, 796, 798, 799, 803, 804, 806, 807, 823, 826, 830, 831, 833, 834, 842, 843, 844, 845, 849, 853, 854, 855, 856, 857, 860, 861, 863, 865, 866, 867, 870, 872, 893, 895, 897, 902, 910, 916, 918, 919, 920, 922, 925, 928, 929, 930, 933, 934, 935, 936, 945, 947, 948, 950, 954, 955, 981, 982, 992, 1004, 1018, 1021, 1023], "truncat": [147, 585, 638, 661, 786, 955, 1023], "trust": 147, "truth": [304, 375, 426, 479, 538], "truthi": [304, 375, 426, 479, 538], "try": [805, 806], "tryptophan": [48, 425], "tsuperkingdom": 157, "tsv": [150, 155, 216, 263, 281, 284, 297, 300, 835, 869], "tsv_fh": 835, "tt": [47, 343, 410, 462, 518, 563], "tta": [345, 412, 464, 520, 565], "ttacatatta": 145, "ttacgcttaaac": 146, "ttactattac": 145, "ttactgttcg": 145, "ttagctcatt": 145, "ttattaaaag": 145, "ttattgtagc": 145, "ttattttttt": 145, "ttcaatttgg": 145, "ttcatt": [320, 342, 354, 495, 517, 529], "ttcatttgat": 145, "ttccagtaga": 145, "ttctactctt": 145, "ttctgcaatc": 145, "ttest_ind": [609, 614], "ttest_rel": 609, "ttgaatactt": 145, "ttgagaatac": 145, "ttgg": 823, "ttggccaaga": 145, "ttgtaactct": 145, "ttgttgtacc": 145, "ttjflkafnkkghvm": 154, "tttattggta": 145, "tttcctcgtg": 145, "tttgaattaa": 145, "tttgcaggct": 145, "ttttcattgg": 145, "ttttggactg": 145, "ttttggatta": 145, "tttttaggcc": 145, "tttttttaaaaaaa": 1023, "tupl": [61, 62, 63, 64, 65, 66, 67, 74, 78, 85, 91, 94, 112, 149, 170, 219, 240, 244, 298, 359, 360, 534, 535, 579, 632, 655, 810, 818, 823, 833, 834, 850, 863, 867, 914, 915, 946, 947], "turkei": [146, 153], "turn": [303, 425, 478, 798, 958, 1023], "turnip": 156, "tutori": [155, 158, 216, 263, 281, 284, 297, 300, 1015], "twice": 805, "two": [0, 1, 61, 62, 63, 64, 65, 66, 67, 70, 75, 95, 106, 107, 141, 142, 146, 147, 148, 149, 151, 153, 154, 157, 219, 220, 226, 232, 238, 241, 246, 303, 308, 321, 326, 343, 347, 349, 379, 391, 396, 410, 414, 416, 425, 430, 442, 447, 462, 466, 468, 478, 483, 496, 501, 518, 522, 524, 542, 554, 556, 563, 567, 569, 575, 577, 579, 584, 586, 591, 597, 604, 605, 606, 609, 611, 614, 621, 624, 625, 627, 628, 630, 632, 637, 639, 642, 646, 653, 655, 660, 662, 666, 671, 677, 678, 679, 680, 681, 682, 683, 685, 791, 796, 801, 804, 805, 820, 823, 833, 848, 867, 899, 900, 906, 915, 937, 939, 954, 959, 1016, 1018, 1021], "txt": [145, 155, 157, 216, 263, 281, 300], "tyne": 145, "type": [1, 17, 29, 34, 46, 47, 49, 85, 96, 100, 108, 112, 139, 143, 144, 146, 147, 148, 149, 150, 153, 156, 157, 169, 171, 184, 186, 187, 188, 190, 194, 198, 201, 202, 208, 216, 248, 249, 255, 263, 266, 267, 273, 281, 284, 285, 291, 293, 297, 300, 305, 308, 317, 320, 321, 322, 324, 326, 327, 328, 341, 342, 347, 348, 349, 350, 353, 354, 363, 369, 376, 379, 388, 391, 392, 394, 396, 397, 398, 409, 414, 415, 416, 417, 420, 427, 430, 439, 442, 443, 445, 447, 448, 449, 461, 466, 467, 468, 469, 472, 480, 483, 492, 495, 496, 497, 499, 501, 502, 503, 516, 517, 522, 523, 524, 525, 528, 529, 537, 539, 542, 551, 554, 555, 556, 562, 567, 568, 569, 570, 572, 579, 588, 600, 604, 605, 627, 632, 640, 648, 655, 664, 674, 678, 681, 683, 776, 790, 791, 798, 801, 803, 807, 818, 824, 833, 834, 848, 867, 874, 876, 877, 897, 901, 904, 946, 954, 958, 965, 1015, 1016], "typeerror": [29, 46, 49, 55, 104, 190, 191, 194, 195, 305, 321, 322, 326, 330, 341, 342, 347, 348, 349, 350, 376, 391, 392, 396, 400, 409, 414, 415, 416, 417, 427, 442, 443, 447, 451, 461, 466, 467, 468, 469, 480, 496, 497, 501, 505, 516, 517, 522, 523, 524, 525, 539, 554, 555, 556, 558, 562, 567, 568, 569, 570, 604, 605, 678, 679, 681, 804, 805, 806, 850, 897], "typic": [61, 62, 63, 64, 65, 66, 68, 146, 147, 154, 155, 156, 219, 229, 796, 895, 1017], "tyr": 425, "tyrosin": 425, "u": [1, 63, 66, 79, 85, 88, 106, 107, 145, 146, 148, 157, 308, 313, 317, 318, 358, 379, 384, 388, 389, 425, 430, 435, 439, 440, 478, 483, 488, 492, 493, 530, 542, 547, 551, 552, 609, 612, 613, 625, 679, 800, 805, 822, 1018, 1023], "u1": [1, 79, 106, 107], "u2": [1, 79, 106, 107], "u3": [1, 79, 106, 107], "u4": [1, 79, 106, 107], "u5": [1, 79, 106, 107], "u6": [1, 79, 106, 107], "u7": [1, 79, 106, 107], "u8": [79, 106, 107], "u_count": [79, 106, 107], "u_i": 609, "uaacguua": [358, 530], "uaaguucucgaucucuaaaaucg": 156, "uaaguucucgaucuuuaaaaucg": 156, "uagguugauc": 145, "uc": 1018, "ucagucagucagucagucagucagucagucagucagucagucagucagucagucagucagucag": 362, "uccacaaaug": 145, "uconn": [70, 74], "ugaguucucgaucucuaaaaucg": 156, "ugaguucucuaucucuaaaaucg": 156, "uint8": [146, 147, 154, 303, 305, 322, 326, 341, 342, 347, 348, 349, 350, 356, 376, 392, 396, 409, 414, 415, 416, 417, 422, 425, 427, 443, 447, 461, 466, 467, 468, 469, 475, 478, 480, 497, 501, 516, 517, 522, 523, 524, 525, 532, 537, 539, 555, 556, 562, 567, 568, 569, 570, 573], "uk": [61, 64, 83, 145, 148, 219, 606], "ulcl": 85, "ulcu": 85, "un": 151, "unabl": 159, "unalign": [61, 62, 63, 64, 65, 66, 67, 1018], "unbound": [229, 243], "uncertainti": [48, 614, 685], "unclear": 84, "unconstrain": 791, "uncorrect": [73, 74], "uncov": [85, 86, 1019], "undefin": [155, 803, 804, 900], "under": [81, 108, 146, 303, 425, 478, 537, 609, 720, 804, 823, 1015], "underli": [0, 122, 198, 308, 372, 379, 430, 483, 537, 542, 604, 776, 801, 807, 1018], "underpow": 801, "underscor": [151, 153], "understand": [155, 609], "understood": [56, 60, 124, 125, 137, 138, 151, 190, 191, 192, 194, 195, 196, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 858, 873, 932, 953], "unequ": [70, 363, 575], "unescap": 151, "uneven": 103, "unfortun": [147, 804], "ungap": [343, 410, 462, 518, 563], "ungapped_subsequ": [343, 410, 462, 518, 563], "unicod": [139, 155, 198], "unifi": 614, "uniform": [1, 683], "unifrac": [1, 79, 95, 106, 107, 109, 112, 796], "unimod": [791, 796], "union": [824, 848], "uniprotkb": 145, "uniq": [356, 422, 475, 532, 573], "uniqu": [1, 55, 59, 141, 146, 150, 151, 155, 156, 157, 293, 298, 356, 422, 475, 532, 573, 605, 627, 681, 787, 823, 850, 894, 903, 908], "unit": [1, 106, 148, 158, 575, 796, 798, 799, 958, 959, 1022], "univers": [145, 146, 153, 155, 159], "unix": 157, "unknown": [48, 85, 86, 148, 219, 328, 398, 449, 503, 775, 857], "unknownaxiserror": [818, 820, 826, 827, 831, 838, 840, 841, 844, 845, 846, 847, 849, 850, 851, 859, 860, 870, 872], "unknowniderror": [841, 849], "unless": [17, 29, 54, 73, 154, 982], "unlik": [156, 775], "unmask": 17, "unnam": 1016, "unnecessari": 55, "unobserv": 97, "unpack": 950, "unpack_by_func": 949, "unpair": 151, "unpermut": [677, 679, 680], "unread": 198, "unrecogn": [818, 820, 826, 831, 838, 840, 841, 846, 847, 849, 851, 870, 872], "unrecognizedformaterror": [190, 191, 192, 194, 195, 196], "unresolv": 112, "unroot": [79, 95, 106, 107, 151, 912, 936, 951, 952, 955], "unrooted_copi": [876, 877, 901, 904, 937, 952], "unrooted_deepcopi": [876, 877, 901, 904, 936, 937, 951], "unshar": 55, "unsign": [775, 926], "unsolv": 609, "unstabl": 112, "unsupport": [155, 425], "until": [229, 624, 938], "untouch": [831, 854], "untreat": 804, "unweight": [1, 95, 106, 107, 799], "unweighted_unifrac": [1, 107], "unwrit": 198, "unzip": 856, "up": [48, 68, 143, 153, 155, 156, 198, 229, 241, 534, 535, 579, 611, 618, 619, 621, 622, 623, 632, 655, 679, 775, 805, 823, 892, 897, 900, 931, 937, 1004, 1021], "upd": 95, "upd_": 95, "updat": [145, 146, 157, 229, 243, 537, 872], "updated_t": 872, "upon": 145, "upper": [17, 84, 85, 146, 153, 219, 229, 241, 243, 666, 673, 679, 845], "upper_bound": [74, 78, 85, 229, 241], "upper_quantil": 84, "uppercas": [303, 425, 478, 537], "upsk": 156, "uq": 84, "uracil": [145, 148, 358, 478, 530], "urinari": 805, "url": [56, 60, 124, 125, 137, 138, 190, 191, 192, 194, 195, 196, 198, 245, 247, 299, 302, 352, 361, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 833, 858, 867, 873, 932, 953], "urn": [85, 86], "us": [1, 3, 17, 29, 36, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 61, 62, 63, 73, 74, 75, 79, 80, 83, 84, 91, 94, 95, 98, 104, 106, 107, 108, 109, 112, 113, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 169, 170, 171, 187, 188, 191, 195, 198, 217, 218, 229, 241, 264, 265, 282, 283, 284, 296, 297, 301, 303, 321, 326, 338, 340, 343, 346, 353, 356, 359, 360, 362, 370, 371, 372, 373, 374, 391, 396, 406, 408, 410, 413, 420, 422, 425, 442, 447, 457, 459, 462, 465, 472, 475, 478, 496, 501, 513, 515, 518, 521, 528, 532, 534, 535, 537, 554, 556, 560, 561, 563, 566, 572, 573, 575, 579, 591, 603, 604, 606, 607, 608, 609, 614, 615, 616, 618, 619, 625, 627, 628, 632, 642, 651, 655, 666, 673, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 709, 720, 731, 753, 764, 776, 787, 790, 796, 800, 801, 802, 803, 804, 805, 823, 828, 829, 831, 854, 857, 859, 861, 862, 865, 867, 868, 875, 876, 877, 893, 895, 896, 897, 900, 901, 904, 906, 912, 913, 931, 936, 937, 944, 946, 951, 952, 954, 956, 957, 958, 959, 960, 981, 1004, 1018, 1021, 1022, 1023], "usag": [93, 680], "useabl": 189, "usefulli": 954, "user": [1, 48, 105, 141, 155, 157, 158, 159, 169, 170, 171, 190, 192, 194, 196, 355, 421, 474, 531, 609, 614, 791, 796, 956, 1018], "usrman": 145, "usual": [1, 102, 145, 148, 155, 157, 575, 895], "ut": 1018, "uti": 805, "util": [1, 56, 60, 124, 125, 137, 138, 157, 169, 171, 245, 247, 299, 302, 352, 361, 362, 370, 371, 374, 419, 424, 471, 477, 527, 536, 571, 574, 596, 602, 645, 650, 670, 676, 788, 789, 833, 848, 856, 858, 861, 867, 873, 932, 953, 1015, 1016], "uu": 106, "uuagcucauu": 145, "uuauuguagc": 145, "uuauuuuuuu": 145, "uucuacucuu": 145, "uugagaauac": 145, "uuugaauuaa": 145, "uuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggg": 362, "uuuuuuuuuuuuuuuuccccccccccccccccaaaaaaaaaaaaaaaagggggggggggggggg": 362, "v": [17, 106, 107, 248, 284, 303, 308, 317, 379, 388, 425, 430, 439, 478, 483, 492, 542, 551, 606, 620, 624, 626, 803, 804, 946], "v2": 140, "v_count": [106, 107], "vagin": 805, "vaginali": 805, "val": [425, 831], "val_i": 845, "val_j": 845, "valdar": 48, "valid": [61, 64, 79, 95, 104, 106, 107, 108, 109, 112, 144, 146, 147, 151, 153, 284, 297, 303, 356, 374, 422, 425, 475, 478, 532, 573, 620, 626, 628, 651, 666, 807, 833, 857, 867, 1018, 1023], "valin": 425, "valu": [1, 4, 5, 8, 10, 11, 12, 19, 20, 22, 24, 25, 26, 35, 38, 40, 42, 48, 52, 61, 62, 63, 64, 65, 66, 68, 70, 81, 91, 103, 104, 107, 114, 115, 117, 119, 120, 121, 127, 128, 130, 132, 133, 134, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 155, 156, 160, 161, 163, 165, 166, 167, 173, 174, 176, 178, 179, 180, 198, 202, 203, 205, 206, 207, 208, 210, 212, 213, 214, 215, 217, 218, 221, 223, 224, 225, 228, 233, 235, 236, 237, 240, 244, 248, 249, 250, 252, 253, 254, 255, 257, 259, 260, 261, 262, 264, 265, 267, 268, 270, 271, 272, 273, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 293, 297, 298, 301, 303, 304, 309, 312, 314, 316, 320, 321, 338, 346, 353, 354, 364, 366, 367, 368, 375, 380, 383, 385, 387, 391, 406, 413, 420, 425, 426, 431, 434, 436, 438, 442, 457, 465, 472, 478, 479, 484, 487, 489, 491, 495, 496, 513, 521, 528, 529, 537, 538, 543, 546, 548, 550, 554, 560, 566, 572, 578, 581, 582, 583, 586, 601, 606, 609, 611, 614, 618, 619, 620, 621, 622, 623, 626, 631, 634, 635, 636, 639, 649, 654, 657, 658, 659, 662, 675, 677, 678, 679, 680, 681, 682, 683, 685, 688, 689, 691, 693, 694, 695, 699, 700, 702, 704, 705, 706, 708, 710, 711, 713, 715, 716, 717, 720, 721, 722, 724, 726, 727, 728, 732, 733, 735, 737, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 760, 761, 765, 766, 768, 770, 771, 772, 775, 778, 779, 781, 783, 784, 785, 787, 790, 791, 795, 796, 798, 800, 801, 802, 803, 804, 805, 809, 812, 814, 815, 816, 817, 818, 823, 831, 832, 833, 837, 843, 844, 847, 851, 853, 854, 857, 861, 863, 864, 870, 872, 875, 878, 879, 882, 885, 887, 888, 895, 897, 900, 939, 946, 957, 958, 959, 963, 964, 967, 969, 970, 971, 972, 981, 983, 984, 986, 988, 989, 990, 993, 995, 996, 998, 1000, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1013, 1023], "valueerror": [29, 46, 48, 49, 51, 55, 57, 59, 70, 79, 81, 95, 104, 106, 107, 108, 112, 190, 194, 211, 258, 276, 294, 298, 321, 322, 328, 330, 341, 344, 345, 347, 348, 349, 350, 356, 372, 374, 391, 392, 398, 400, 409, 411, 412, 414, 415, 416, 417, 422, 442, 443, 449, 451, 461, 463, 464, 466, 467, 468, 469, 475, 496, 497, 503, 505, 516, 519, 520, 522, 523, 524, 525, 532, 537, 554, 555, 558, 562, 564, 565, 567, 568, 569, 570, 573, 587, 590, 591, 604, 605, 611, 618, 619, 625, 642, 666, 678, 679, 681, 682, 720, 764, 775, 787, 790, 791, 804, 805, 806, 832, 833, 857, 863, 898, 900, 905, 913, 921, 923, 926, 938, 939, 944, 949, 960], "van": 624, "vanveeeeaw": 144, "var": [678, 865], "vari": [1, 681, 801, 803, 804], "variabl": [81, 139, 353, 420, 472, 528, 537, 572, 609, 678, 681, 776, 777, 787, 791, 796, 797, 798, 801, 803, 804, 981, 1004, 1023], "varianc": [74, 293, 620, 626, 678, 680, 681, 776, 792, 795, 799, 804], "variant": [1, 79, 95, 154, 157, 575], "variat": [70, 679, 791], "varieti": 150, "variou": [1, 152, 284, 627, 777, 801, 1019, 1022], "vazquez": 787, "ve": [1, 146, 147, 805, 1021], "vec": 802, "vector": [51, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 126, 144, 150, 323, 325, 328, 331, 343, 346, 348, 350, 351, 353, 356, 362, 393, 395, 398, 401, 410, 413, 415, 417, 418, 420, 422, 444, 446, 449, 452, 462, 465, 467, 469, 470, 472, 473, 475, 498, 500, 503, 506, 518, 521, 523, 525, 526, 528, 532, 563, 566, 568, 570, 572, 573, 579, 607, 608, 609, 614, 615, 616, 621, 622, 623, 626, 627, 628, 632, 651, 655, 677, 680, 681, 731, 791, 805, 806, 810, 823, 856, 860, 863, 870, 946], "vegan": [677, 678, 679, 680, 681, 790, 791, 798], "vellend": 95, "ver": 142, "verdonschot": 791, "veri": [1, 61, 62, 63, 84, 146, 151, 158, 621, 833, 900], "verifi": [145, 158, 190, 194], "versa": [151, 685, 854], "versatil": 776, "version": [1, 73, 74, 79, 95, 104, 106, 107, 108, 139, 141, 143, 144, 145, 148, 149, 153, 170, 327, 355, 357, 397, 421, 423, 448, 474, 476, 502, 531, 533, 609, 624, 807, 828, 831, 833, 854, 863, 867, 869, 874, 889, 893, 956, 960, 1018], "versu": [96, 100, 106, 107], "veschi": 81, "via": [46, 49, 57, 70, 85, 86, 146, 153, 326, 362, 363, 369, 396, 447, 501, 556, 677, 679, 680, 823, 863], "vice": [151, 685, 854], "viceroi": [70, 74], "view": [145, 856], "viewer": 895, "violat": 614, "viral": 156, "virgilio": 81, "viridiplanta": 145, "virol": 156, "viru": 156, "visit": 929, "visual": [1, 776, 787], "vlen": [833, 867], "vocabulari": [148, 149, 217, 218, 264, 265, 282, 283, 284, 301], "vol": 97, "volatil": 686, "volum": [77, 955], "vqhklrah": 156, "vrt": 157, "w": [17, 48, 70, 71, 78, 91, 95, 103, 141, 142, 143, 198, 303, 425, 478, 609, 624, 867, 869], "wa": [1, 61, 64, 70, 71, 72, 75, 78, 79, 81, 82, 83, 87, 88, 95, 96, 98, 99, 104, 106, 107, 108, 109, 143, 146, 147, 151, 153, 198, 213, 216, 217, 218, 260, 263, 264, 265, 278, 281, 282, 283, 300, 301, 343, 372, 410, 462, 518, 537, 563, 609, 620, 624, 626, 679, 731, 795, 803, 805, 891, 933, 954, 955, 1016, 1021, 1023], "wai": [0, 1, 146, 147, 151, 153, 156, 158, 219, 297, 355, 421, 474, 531, 575, 609, 679, 796, 801, 823, 833, 867, 1016, 1021], "wakefield": 954, "walk": [951, 952, 1021, 1023], "walli": [609, 804, 805], "wan": [17, 67], "want": [61, 62, 63, 145, 148, 229, 801, 803, 804, 805, 899, 900, 1016], "warn": [147, 155, 796, 897, 951, 956, 957, 1015], "washington": [146, 151, 153, 954], "wasn": [29, 147], "water": 64, "waterman": [0, 17, 64, 65, 66, 67], "we": [0, 1, 17, 46, 48, 49, 79, 84, 91, 95, 106, 107, 109, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 199, 219, 229, 330, 343, 353, 372, 400, 410, 420, 451, 462, 472, 505, 518, 528, 537, 558, 563, 572, 609, 614, 620, 626, 627, 677, 678, 679, 681, 682, 685, 686, 776, 787, 790, 798, 800, 801, 803, 804, 805, 820, 833, 863, 900, 954, 1016, 1021, 1023], "weak": 303, "weaker": 685, "web": [17, 61, 64, 67, 143, 157, 677, 678, 679, 680, 681], "webfeat": 148, "webpag": 148, "websit": 48, "week": 805, "weight": [1, 79, 95, 106, 107, 151, 686, 687, 709, 720, 731, 753, 795, 799, 954], "weighted_unifrac": [1, 106], "welcom": 146, "well": [0, 147, 155, 158, 284, 537, 614, 627, 628, 678, 680, 681, 685, 777, 791, 833, 954, 1016, 1021, 1022], "wellcom": 147, "were": [1, 63, 66, 79, 84, 104, 106, 107, 108, 151, 153, 154, 308, 343, 379, 410, 430, 462, 483, 518, 542, 563, 677, 679, 681, 787, 804, 805, 921, 923, 957, 1023], "wf": [147, 1023], "what": [1, 79, 95, 104, 106, 107, 108, 151, 155, 158, 159, 187, 188, 192, 196, 244, 343, 410, 462, 518, 563, 685, 775, 804, 820, 823, 833, 856, 867, 1021, 1023], "whatev": 158, "when": [1, 17, 46, 48, 49, 55, 58, 61, 62, 63, 70, 80, 95, 96, 100, 109, 112, 139, 141, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 169, 170, 171, 190, 191, 192, 194, 195, 196, 198, 229, 241, 284, 293, 297, 321, 328, 329, 332, 333, 346, 391, 398, 399, 413, 442, 449, 450, 465, 496, 503, 504, 507, 508, 521, 537, 554, 557, 566, 604, 609, 627, 677, 679, 680, 681, 683, 685, 708, 741, 752, 790, 798, 801, 802, 803, 804, 805, 806, 807, 823, 833, 863, 874, 900, 934, 951, 952, 955, 959, 960, 981, 1016, 1021, 1023], "whenev": [147, 796], "where": [1, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 108, 109, 112, 139, 144, 146, 150, 151, 152, 155, 156, 158, 296, 323, 325, 329, 331, 341, 343, 348, 350, 351, 353, 393, 395, 399, 401, 409, 410, 415, 417, 418, 420, 444, 446, 450, 452, 461, 462, 467, 469, 470, 472, 473, 498, 500, 504, 506, 516, 518, 523, 525, 526, 528, 557, 562, 563, 568, 570, 572, 575, 579, 607, 608, 609, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 623, 624, 632, 655, 679, 685, 775, 787, 795, 797, 798, 799, 801, 805, 806, 831, 833, 850, 862, 867, 872, 875, 899, 900, 910, 914, 947, 950, 979, 1021, 1023], "where_values_miss": [212, 259, 277], "wherea": [140, 775], "wherev": 799, "whether": [15, 30, 31, 34, 43, 52, 53, 73, 74, 95, 149, 158, 169, 171, 198, 202, 208, 217, 218, 249, 255, 264, 265, 267, 273, 282, 283, 285, 291, 301, 305, 308, 317, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 363, 369, 376, 379, 388, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 427, 430, 439, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 480, 483, 492, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 539, 542, 551, 559, 560, 561, 563, 564, 565, 584, 605, 609, 620, 626, 637, 660, 677, 679, 680, 681, 786, 798, 799, 830, 831, 833, 842, 867, 870], "which": [1, 29, 61, 62, 63, 70, 75, 79, 89, 95, 99, 102, 106, 107, 109, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 169, 170, 171, 172, 184, 186, 187, 188, 189, 190, 194, 284, 303, 321, 322, 333, 341, 343, 346, 356, 372, 391, 392, 409, 410, 413, 422, 425, 442, 443, 461, 462, 465, 475, 478, 496, 497, 508, 516, 518, 521, 532, 537, 554, 555, 562, 563, 566, 573, 586, 606, 607, 608, 609, 614, 628, 639, 662, 677, 680, 681, 685, 791, 795, 796, 801, 802, 803, 804, 805, 821, 822, 823, 824, 828, 831, 847, 850, 851, 853, 859, 860, 864, 867, 869, 900, 903, 934, 935, 946, 947, 952, 954, 955, 965, 982, 1004, 1016, 1018, 1021, 1023], "while": [0, 1, 139, 145, 146, 147, 148, 153, 219, 362, 537, 609, 681, 720, 764, 776, 787, 803, 807, 810, 874, 875, 903, 981, 1017, 1018, 1023], "white": 145, "whitespac": [146, 147, 150, 152, 156], "whitnei": 609, "who": [151, 805], "whole": [156, 794, 802, 827, 847, 851, 853, 860, 864], "whose": [148, 154, 155, 594, 643, 667, 678, 679, 799, 826, 841, 849, 861], "why": 77, "wide": [1, 55, 95, 321, 391, 442, 496, 554], "width": [146, 150, 153], "wiener": [83, 98], "wiki": [146, 147, 153, 156, 955], "wikipedia": [146, 147, 156, 955, 1021], "wilcoxon": 609, "wild": [355, 421, 474, 531], "wildcard": [355, 356, 421, 422, 474, 475, 531, 532, 573], "wildcard_char": [356, 422, 475, 532, 573], "wilei": 606, "william": 80, "window": 764, "window_s": 764, "wish": [155, 1021], "with_mean": [795, 799], "with_replac": 863, "with_std": [795, 799], "within": [1, 48, 95, 103, 109, 139, 142, 146, 147, 151, 153, 155, 156, 284, 303, 425, 478, 537, 586, 614, 639, 662, 681, 682, 742, 776, 777, 787, 803, 804, 823, 852, 875, 917, 958, 961, 1004, 1021, 1023], "within_captur": [357, 423, 476, 533], "without": [46, 49, 55, 57, 91, 107, 142, 151, 153, 155, 156, 216, 263, 281, 300, 537, 606, 775, 787, 805, 806, 828, 845, 863, 869, 906, 915, 947, 980, 981, 1016], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 362, "woman": 805, "women": 805, "won": [1, 79, 104, 106, 107, 108, 147, 220, 791], "word": [0, 145, 146, 148, 151, 156, 244, 345, 412, 464, 520, 565], "work": [1, 17, 109, 146, 153, 155, 158, 284, 303, 425, 478, 627, 679, 791, 805, 839, 848, 1015, 1017, 1018, 1020, 1021], "workflow": 1015, "worri": [151, 807, 874], "worst": 928, "would": [48, 79, 81, 84, 106, 107, 143, 146, 149, 151, 153, 155, 156, 158, 284, 321, 343, 391, 410, 442, 462, 496, 518, 554, 563, 586, 621, 624, 639, 662, 685, 803, 804, 897, 947, 948, 954, 1016], "wprintgc": [362, 370, 371], "wr": [146, 685], "wrap": [3, 153, 156, 1005], "wrapper": [17, 67, 85, 86, 958], "writabl": 198, "write": [56, 124, 137, 140, 143, 144, 145, 147, 149, 150, 151, 153, 156, 158, 171, 188, 189, 198, 245, 299, 352, 419, 471, 527, 571, 596, 627, 645, 670, 708, 741, 752, 788, 858, 867, 868, 869, 889, 932, 960, 1015], "writeabl": 1016, "writer": [60, 125, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 186, 189, 192, 196, 198, 247, 302, 361, 424, 477, 536, 574, 602, 650, 676, 789, 873, 953], "written": [143, 146, 147, 151, 153, 284, 828, 868, 869, 954, 1016, 1021], "wrong": 89, "wu": [95, 107], "wu_dm": 1, "wu_pc": 1, "wunsch": [0, 61, 62, 63], "www": [17, 61, 64, 67, 84, 109, 139, 141, 142, 143, 145, 146, 147, 148, 153, 157, 362, 370, 371, 678], "x": [17, 81, 97, 140, 147, 154, 356, 374, 422, 425, 475, 532, 573, 606, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 621, 622, 623, 624, 626, 679, 682, 685, 776, 777, 787, 790, 791, 792, 798, 801, 804, 805, 823, 831, 835, 844, 849, 854, 859, 861, 865, 867, 869, 870, 874, 900, 910, 931, 934, 946, 950, 955, 980, 1023], "x00": 199, "x01": 199, "x03": 199, "x0c": 199, "x108": 199, "x1c": 199, "x56734": 145, "x86": 199, "x89": 199, "x8b": 199, "x9ah3m": 199, "x9c": 199, "x_": [606, 607, 624, 801, 805], "x_1": [607, 608, 612, 613, 621, 622, 623], "x_d": [607, 608, 612, 613, 621, 622, 623], "x_i": [608, 612, 617, 621, 622, 623, 624], "x_j": 617, "xa6": 199, "xaa": 425, "xb7": 199, "xb9": 199, "xc1": 199, "xc4": 199, "xle": 425, "xx": 145, "xxxxxx": 374, "xyz": 143, "y": [17, 70, 81, 147, 154, 303, 425, 478, 617, 621, 622, 626, 679, 682, 685, 776, 787, 791, 792, 797, 798, 803, 849, 859, 867, 869, 870, 900, 946], "y_": [608, 805], "y_1": [608, 621, 622], "y_2": 608, "y_d": [621, 622], "y_i": 617, "y_j": 617, "yang": 70, "ye": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "yeast": [359, 534], "yeild": 681, "yellow": 156, "yet": [151, 157, 158], "yield": [39, 44, 54, 146, 244, 313, 318, 327, 328, 329, 343, 344, 360, 373, 384, 389, 397, 398, 399, 410, 411, 435, 440, 448, 449, 450, 462, 463, 488, 493, 502, 503, 504, 518, 519, 535, 547, 552, 557, 563, 564, 681, 843, 844, 845, 852, 856, 910, 922, 925, 928, 929, 930, 939, 945, 947, 948, 982, 1016, 1023], "york": 72, "you": [1, 17, 61, 62, 63, 79, 104, 106, 107, 108, 109, 141, 143, 146, 147, 149, 153, 155, 156, 158, 228, 229, 241, 243, 244, 303, 425, 478, 537, 575, 666, 677, 681, 798, 801, 803, 804, 805, 862, 897, 899, 900, 1016, 1018, 1021, 1023], "your": [17, 55, 79, 104, 106, 107, 108, 147, 155, 158, 229, 681, 801, 804, 1016, 1021, 1023], "yy": 147, "z": [17, 55, 78, 155, 425, 682, 787, 843, 900, 946], "z3": [837, 843], "zero": [70, 80, 112, 139, 219, 240, 284, 298, 330, 400, 451, 505, 558, 606, 609, 611, 614, 618, 619, 620, 621, 622, 623, 626, 628, 677, 678, 679, 680, 681, 682, 685, 790, 796, 799, 804, 806, 807, 833, 860, 863, 867, 870, 955, 1023], "zero_index": [17, 67], "zhao": [17, 67], "zip": 827, "zp_02903423": 141, "zscore": 74, "zxx": 147, "\u00e9": 624, "\u00f8": 95}, "titles": ["Sequence Alignments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.alignment</span></code>)", "Community Diversity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity</span></code>)", "Biological Embeddings (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.embedding</span></code>)", "skbio.alignment.AlignmentStructure", "skbio.alignment.AlignmentStructure.__eq__", "skbio.alignment.AlignmentStructure.__ge__", "skbio.alignment.AlignmentStructure.__getitem__", "skbio.alignment.AlignmentStructure.__getstate__", "skbio.alignment.AlignmentStructure.__gt__", "skbio.alignment.AlignmentStructure.__hash__", "skbio.alignment.AlignmentStructure.__le__", "skbio.alignment.AlignmentStructure.__lt__", "skbio.alignment.AlignmentStructure.__ne__", "skbio.alignment.AlignmentStructure.__setstate__", "skbio.alignment.AlignmentStructure.__str__", "skbio.alignment.AlignmentStructure.is_zero_based", "skbio.alignment.AlignmentStructure.set_zero_based", "skbio.alignment.StripedSmithWaterman", "skbio.alignment.StripedSmithWaterman.__call__", "skbio.alignment.StripedSmithWaterman.__eq__", "skbio.alignment.StripedSmithWaterman.__ge__", "skbio.alignment.StripedSmithWaterman.__getstate__", "skbio.alignment.StripedSmithWaterman.__gt__", "skbio.alignment.StripedSmithWaterman.__hash__", "skbio.alignment.StripedSmithWaterman.__le__", "skbio.alignment.StripedSmithWaterman.__lt__", "skbio.alignment.StripedSmithWaterman.__ne__", "skbio.alignment.StripedSmithWaterman.__setstate__", "skbio.alignment.StripedSmithWaterman.__str__", "skbio.alignment.TabularMSA", "skbio.alignment.TabularMSA.__bool__", "skbio.alignment.TabularMSA.__contains__", "skbio.alignment.TabularMSA.__copy__", "skbio.alignment.TabularMSA.__deepcopy__", "skbio.alignment.TabularMSA.__eq__", "skbio.alignment.TabularMSA.__ge__", "skbio.alignment.TabularMSA.__getitem__", "skbio.alignment.TabularMSA.__getstate__", "skbio.alignment.TabularMSA.__gt__", "skbio.alignment.TabularMSA.__iter__", "skbio.alignment.TabularMSA.__le__", "skbio.alignment.TabularMSA.__len__", "skbio.alignment.TabularMSA.__lt__", "skbio.alignment.TabularMSA.__ne__", "skbio.alignment.TabularMSA.__reversed__", "skbio.alignment.TabularMSA.__str__", "skbio.alignment.TabularMSA.append", "skbio.alignment.TabularMSA.consensus", "skbio.alignment.TabularMSA.conservation", "skbio.alignment.TabularMSA.extend", "skbio.alignment.TabularMSA.from_dict", "skbio.alignment.TabularMSA.gap_frequencies", "skbio.alignment.TabularMSA.has_metadata", "skbio.alignment.TabularMSA.has_positional_metadata", "skbio.alignment.TabularMSA.iter_positions", "skbio.alignment.TabularMSA.join", "skbio.alignment.TabularMSA.read", "skbio.alignment.TabularMSA.reassign_index", "skbio.alignment.TabularMSA.sort", "skbio.alignment.TabularMSA.to_dict", "skbio.alignment.TabularMSA.write", "skbio.alignment.global_pairwise_align", "skbio.alignment.global_pairwise_align_nucleotide", "skbio.alignment.global_pairwise_align_protein", "skbio.alignment.local_pairwise_align", "skbio.alignment.local_pairwise_align_nucleotide", "skbio.alignment.local_pairwise_align_protein", "skbio.alignment.local_pairwise_align_ssw", "skbio.alignment.make_identity_substitution_matrix", "Alpha diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.alpha</span></code>)", "skbio.diversity.alpha.ace", "skbio.diversity.alpha.berger_parker_d", "skbio.diversity.alpha.brillouin_d", "skbio.diversity.alpha.chao1", "skbio.diversity.alpha.chao1_ci", "skbio.diversity.alpha.dominance", "skbio.diversity.alpha.doubles", "skbio.diversity.alpha.enspie", "skbio.diversity.alpha.esty_ci", "skbio.diversity.alpha.faith_pd", "skbio.diversity.alpha.fisher_alpha", "skbio.diversity.alpha.gini_index", "skbio.diversity.alpha.goods_coverage", "skbio.diversity.alpha.heip_e", "skbio.diversity.alpha.kempton_taylor_q", "skbio.diversity.alpha.lladser_ci", "skbio.diversity.alpha.lladser_pe", "skbio.diversity.alpha.margalef", "skbio.diversity.alpha.mcintosh_d", "skbio.diversity.alpha.mcintosh_e", "skbio.diversity.alpha.menhinick", "skbio.diversity.alpha.michaelis_menten_fit", "skbio.diversity.alpha.observed_features", "skbio.diversity.alpha.observed_otus", "skbio.diversity.alpha.osd", "skbio.diversity.alpha.phydiv", "skbio.diversity.alpha.pielou_e", "skbio.diversity.alpha.robbins", "skbio.diversity.alpha.shannon", "skbio.diversity.alpha.simpson", "skbio.diversity.alpha.simpson_e", "skbio.diversity.alpha.singles", "skbio.diversity.alpha.sobs", "skbio.diversity.alpha.strong", "skbio.diversity.alpha_diversity", "Beta diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.beta</span></code>)", "skbio.diversity.beta.unweighted_unifrac", "skbio.diversity.beta.weighted_unifrac", "skbio.diversity.beta_diversity", "skbio.diversity.block_beta_diversity", "skbio.diversity.get_alpha_diversity_metrics", "skbio.diversity.get_beta_diversity_metrics", "skbio.diversity.partial_beta_diversity", "skbio.embedding.ProteinEmbedding", "skbio.embedding.ProteinEmbedding.__eq__", "skbio.embedding.ProteinEmbedding.__ge__", "skbio.embedding.ProteinEmbedding.__getstate__", "skbio.embedding.ProteinEmbedding.__gt__", "skbio.embedding.ProteinEmbedding.__hash__", "skbio.embedding.ProteinEmbedding.__le__", "skbio.embedding.ProteinEmbedding.__lt__", "skbio.embedding.ProteinEmbedding.__ne__", "skbio.embedding.ProteinEmbedding.__str__", "skbio.embedding.ProteinEmbedding.bytes", "skbio.embedding.ProteinEmbedding.read", "skbio.embedding.ProteinEmbedding.write", "skbio.embedding.ProteinVector", "skbio.embedding.ProteinVector.__eq__", "skbio.embedding.ProteinVector.__ge__", "skbio.embedding.ProteinVector.__getstate__", "skbio.embedding.ProteinVector.__gt__", "skbio.embedding.ProteinVector.__hash__", "skbio.embedding.ProteinVector.__le__", "skbio.embedding.ProteinVector.__lt__", "skbio.embedding.ProteinVector.__ne__", "skbio.embedding.ProteinVector.__str__", "skbio.embedding.ProteinVector.bytes", "skbio.embedding.ProteinVector.read", "skbio.embedding.ProteinVector.write", "Simple binary dissimilarity matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.binary_dm</span></code>)", "BIOM-Format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.biom</span></code>)", "BLAST+6 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast6</span></code>)", "BLAST+7 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast7</span></code>)", "Clustal format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.clustal</span></code>)", "Embedding format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embed</span></code>).", "EMBL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embl</span></code>)", "FASTA/QUAL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fasta</span></code>)", "FASTQ format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fastq</span></code>)", "GenBank format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.genbank</span></code>)", "GFF3 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.gff3</span></code>)", "Labeled square matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.lsmat</span></code>)", "Newick format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.newick</span></code>)", "Ordination results format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.ordination</span></code>)", "PHYLIP multiple sequence alignment format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.phylip</span></code>)", "QSeq format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.qseq</span></code>)", "Format Support", "Stockholm format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.stockholm</span></code>)", "Taxdump format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.taxdump</span></code>)", "I/O Registry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.registry</span></code>)", "skbio.io.registry.Format", "skbio.io.registry.Format.__eq__", "skbio.io.registry.Format.__ge__", "skbio.io.registry.Format.__getstate__", "skbio.io.registry.Format.__gt__", "skbio.io.registry.Format.__hash__", "skbio.io.registry.Format.__le__", "skbio.io.registry.Format.__lt__", "skbio.io.registry.Format.__ne__", "skbio.io.registry.Format.__str__", "skbio.io.registry.Format.reader", "skbio.io.registry.Format.sniffer", "skbio.io.registry.Format.writer", "skbio.io.registry.IORegistry", "skbio.io.registry.IORegistry.__eq__", "skbio.io.registry.IORegistry.__ge__", "skbio.io.registry.IORegistry.__getstate__", "skbio.io.registry.IORegistry.__gt__", "skbio.io.registry.IORegistry.__hash__", "skbio.io.registry.IORegistry.__le__", "skbio.io.registry.IORegistry.__lt__", "skbio.io.registry.IORegistry.__ne__", "skbio.io.registry.IORegistry.__str__", "skbio.io.registry.IORegistry.add_format", "skbio.io.registry.IORegistry.create_format", "skbio.io.registry.IORegistry.get_reader", "skbio.io.registry.IORegistry.get_sniffer", "skbio.io.registry.IORegistry.get_writer", "skbio.io.registry.IORegistry.list_read_formats", "skbio.io.registry.IORegistry.list_write_formats", "skbio.io.registry.IORegistry.monkey_patch", "skbio.io.registry.IORegistry.read", "skbio.io.registry.IORegistry.sniff", "skbio.io.registry.IORegistry.write", "skbio.io.registry.create_format", "skbio.io.registry.read", "skbio.io.registry.sniff", "skbio.io.registry.write", "I/O utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.util</span></code>)", "skbio.io.util.open", "skbio.io.util.open_file", "skbio.io.util.open_files", "skbio.metadata.CategoricalMetadataColumn", "skbio.metadata.CategoricalMetadataColumn.__eq__", "skbio.metadata.CategoricalMetadataColumn.__ge__", "skbio.metadata.CategoricalMetadataColumn.__getstate__", "skbio.metadata.CategoricalMetadataColumn.__gt__", "skbio.metadata.CategoricalMetadataColumn.__le__", "skbio.metadata.CategoricalMetadataColumn.__lt__", "skbio.metadata.CategoricalMetadataColumn.__ne__", "skbio.metadata.CategoricalMetadataColumn.__str__", "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "skbio.metadata.CategoricalMetadataColumn.filter_ids", "skbio.metadata.CategoricalMetadataColumn.get_ids", "skbio.metadata.CategoricalMetadataColumn.get_missing", "skbio.metadata.CategoricalMetadataColumn.get_value", "skbio.metadata.CategoricalMetadataColumn.has_missing_values", "skbio.metadata.CategoricalMetadataColumn.save", "skbio.metadata.CategoricalMetadataColumn.to_dataframe", "skbio.metadata.CategoricalMetadataColumn.to_series", "skbio.metadata.Interval", "skbio.metadata.Interval.__eq__", "skbio.metadata.Interval.__ge__", "skbio.metadata.Interval.__getstate__", "skbio.metadata.Interval.__gt__", "skbio.metadata.Interval.__le__", "skbio.metadata.Interval.__lt__", "skbio.metadata.Interval.__ne__", "skbio.metadata.Interval.__str__", "skbio.metadata.Interval.drop", "skbio.metadata.IntervalMetadata", "skbio.metadata.IntervalMetadata.__copy__", "skbio.metadata.IntervalMetadata.__deepcopy__", "skbio.metadata.IntervalMetadata.__eq__", "skbio.metadata.IntervalMetadata.__ge__", "skbio.metadata.IntervalMetadata.__getstate__", "skbio.metadata.IntervalMetadata.__gt__", "skbio.metadata.IntervalMetadata.__le__", "skbio.metadata.IntervalMetadata.__lt__", "skbio.metadata.IntervalMetadata.__ne__", "skbio.metadata.IntervalMetadata.__str__", "skbio.metadata.IntervalMetadata.add", "skbio.metadata.IntervalMetadata.concat", "skbio.metadata.IntervalMetadata.drop", "skbio.metadata.IntervalMetadata.merge", "skbio.metadata.IntervalMetadata.query", "skbio.metadata.IntervalMetadata.read", "skbio.metadata.IntervalMetadata.sort", "skbio.metadata.IntervalMetadata.write", "skbio.metadata.MetadataColumn", "skbio.metadata.MetadataColumn.__eq__", "skbio.metadata.MetadataColumn.__ge__", "skbio.metadata.MetadataColumn.__getstate__", "skbio.metadata.MetadataColumn.__gt__", "skbio.metadata.MetadataColumn.__le__", "skbio.metadata.MetadataColumn.__lt__", "skbio.metadata.MetadataColumn.__ne__", "skbio.metadata.MetadataColumn.__str__", "skbio.metadata.MetadataColumn.drop_missing_values", "skbio.metadata.MetadataColumn.filter_ids", "skbio.metadata.MetadataColumn.get_ids", "skbio.metadata.MetadataColumn.get_missing", "skbio.metadata.MetadataColumn.get_value", "skbio.metadata.MetadataColumn.has_missing_values", "skbio.metadata.MetadataColumn.save", "skbio.metadata.MetadataColumn.to_dataframe", "skbio.metadata.MetadataColumn.to_series", "skbio.metadata.NumericMetadataColumn", "skbio.metadata.NumericMetadataColumn.__eq__", "skbio.metadata.NumericMetadataColumn.__ge__", "skbio.metadata.NumericMetadataColumn.__getstate__", "skbio.metadata.NumericMetadataColumn.__gt__", "skbio.metadata.NumericMetadataColumn.__le__", "skbio.metadata.NumericMetadataColumn.__lt__", "skbio.metadata.NumericMetadataColumn.__ne__", "skbio.metadata.NumericMetadataColumn.__str__", "skbio.metadata.NumericMetadataColumn.drop_missing_values", "skbio.metadata.NumericMetadataColumn.filter_ids", "skbio.metadata.NumericMetadataColumn.get_ids", "skbio.metadata.NumericMetadataColumn.get_missing", "skbio.metadata.NumericMetadataColumn.get_value", "skbio.metadata.NumericMetadataColumn.has_missing_values", "skbio.metadata.NumericMetadataColumn.save", "skbio.metadata.NumericMetadataColumn.to_dataframe", "skbio.metadata.NumericMetadataColumn.to_series", "skbio.metadata.SampleMetadata", "skbio.metadata.SampleMetadata.__eq__", "skbio.metadata.SampleMetadata.__ge__", "skbio.metadata.SampleMetadata.__getstate__", "skbio.metadata.SampleMetadata.__gt__", "skbio.metadata.SampleMetadata.__le__", "skbio.metadata.SampleMetadata.__lt__", "skbio.metadata.SampleMetadata.__ne__", "skbio.metadata.SampleMetadata.__str__", "skbio.metadata.SampleMetadata.filter_columns", "skbio.metadata.SampleMetadata.filter_ids", "skbio.metadata.SampleMetadata.get_column", "skbio.metadata.SampleMetadata.get_ids", "skbio.metadata.SampleMetadata.load", "skbio.metadata.SampleMetadata.merge", "skbio.metadata.SampleMetadata.read", "skbio.metadata.SampleMetadata.save", "skbio.metadata.SampleMetadata.to_dataframe", "skbio.metadata.SampleMetadata.write", "skbio.sequence.DNA", "skbio.sequence.DNA.__bool__", "skbio.sequence.DNA.__contains__", "skbio.sequence.DNA.__copy__", "skbio.sequence.DNA.__deepcopy__", "skbio.sequence.DNA.__eq__", "skbio.sequence.DNA.__ge__", "skbio.sequence.DNA.__getitem__", "skbio.sequence.DNA.__getstate__", "skbio.sequence.DNA.__gt__", "skbio.sequence.DNA.__iter__", "skbio.sequence.DNA.__le__", "skbio.sequence.DNA.__len__", "skbio.sequence.DNA.__lt__", "skbio.sequence.DNA.__ne__", "skbio.sequence.DNA.__reversed__", "skbio.sequence.DNA.__str__", "skbio.sequence.DNA.complement", "skbio.sequence.DNA.concat", "skbio.sequence.DNA.count", "skbio.sequence.DNA.definites", "skbio.sequence.DNA.degap", "skbio.sequence.DNA.degenerates", "skbio.sequence.DNA.distance", "skbio.sequence.DNA.expand_degenerates", "skbio.sequence.DNA.find_motifs", "skbio.sequence.DNA.find_with_regex", "skbio.sequence.DNA.frequencies", "skbio.sequence.DNA.gaps", "skbio.sequence.DNA.gc_content", "skbio.sequence.DNA.gc_frequency", "skbio.sequence.DNA.has_definites", "skbio.sequence.DNA.has_degenerates", "skbio.sequence.DNA.has_gaps", "skbio.sequence.DNA.has_interval_metadata", "skbio.sequence.DNA.has_metadata", "skbio.sequence.DNA.has_nondegenerates", "skbio.sequence.DNA.has_positional_metadata", "skbio.sequence.DNA.index", "skbio.sequence.DNA.is_reverse_complement", "skbio.sequence.DNA.iter_contiguous", "skbio.sequence.DNA.iter_kmers", "skbio.sequence.DNA.kmer_frequencies", "skbio.sequence.DNA.lowercase", "skbio.sequence.DNA.match_frequency", "skbio.sequence.DNA.matches", "skbio.sequence.DNA.mismatch_frequency", "skbio.sequence.DNA.mismatches", "skbio.sequence.DNA.nondegenerates", "skbio.sequence.DNA.read", "skbio.sequence.DNA.replace", "skbio.sequence.DNA.reverse_complement", "skbio.sequence.DNA.to_definites", "skbio.sequence.DNA.to_indices", "skbio.sequence.DNA.to_regex", "skbio.sequence.DNA.transcribe", "skbio.sequence.DNA.translate", "skbio.sequence.DNA.translate_six_frames", "skbio.sequence.DNA.write", "skbio.sequence.GeneticCode", "skbio.sequence.GeneticCode.__eq__", "skbio.sequence.GeneticCode.__ge__", "skbio.sequence.GeneticCode.__getstate__", "skbio.sequence.GeneticCode.__gt__", "skbio.sequence.GeneticCode.__le__", "skbio.sequence.GeneticCode.__lt__", "skbio.sequence.GeneticCode.__ne__", "skbio.sequence.GeneticCode.__str__", "skbio.sequence.GeneticCode.from_ncbi", "skbio.sequence.GeneticCode.translate", "skbio.sequence.GeneticCode.translate_six_frames", "skbio.sequence.GrammaredSequence", "skbio.sequence.GrammaredSequence.__bool__", "skbio.sequence.GrammaredSequence.__contains__", "skbio.sequence.GrammaredSequence.__copy__", "skbio.sequence.GrammaredSequence.__deepcopy__", "skbio.sequence.GrammaredSequence.__eq__", "skbio.sequence.GrammaredSequence.__ge__", "skbio.sequence.GrammaredSequence.__getitem__", "skbio.sequence.GrammaredSequence.__getstate__", "skbio.sequence.GrammaredSequence.__gt__", "skbio.sequence.GrammaredSequence.__iter__", "skbio.sequence.GrammaredSequence.__le__", "skbio.sequence.GrammaredSequence.__len__", "skbio.sequence.GrammaredSequence.__lt__", "skbio.sequence.GrammaredSequence.__ne__", "skbio.sequence.GrammaredSequence.__reversed__", "skbio.sequence.GrammaredSequence.__str__", "skbio.sequence.GrammaredSequence.concat", "skbio.sequence.GrammaredSequence.count", "skbio.sequence.GrammaredSequence.definites", "skbio.sequence.GrammaredSequence.degap", "skbio.sequence.GrammaredSequence.degenerates", "skbio.sequence.GrammaredSequence.distance", "skbio.sequence.GrammaredSequence.expand_degenerates", "skbio.sequence.GrammaredSequence.find_motifs", "skbio.sequence.GrammaredSequence.find_with_regex", "skbio.sequence.GrammaredSequence.frequencies", "skbio.sequence.GrammaredSequence.gaps", "skbio.sequence.GrammaredSequence.has_definites", "skbio.sequence.GrammaredSequence.has_degenerates", "skbio.sequence.GrammaredSequence.has_gaps", "skbio.sequence.GrammaredSequence.has_interval_metadata", "skbio.sequence.GrammaredSequence.has_metadata", "skbio.sequence.GrammaredSequence.has_nondegenerates", "skbio.sequence.GrammaredSequence.has_positional_metadata", "skbio.sequence.GrammaredSequence.index", "skbio.sequence.GrammaredSequence.iter_contiguous", "skbio.sequence.GrammaredSequence.iter_kmers", "skbio.sequence.GrammaredSequence.kmer_frequencies", "skbio.sequence.GrammaredSequence.lowercase", "skbio.sequence.GrammaredSequence.match_frequency", "skbio.sequence.GrammaredSequence.matches", "skbio.sequence.GrammaredSequence.mismatch_frequency", "skbio.sequence.GrammaredSequence.mismatches", "skbio.sequence.GrammaredSequence.nondegenerates", "skbio.sequence.GrammaredSequence.read", "skbio.sequence.GrammaredSequence.replace", "skbio.sequence.GrammaredSequence.to_definites", "skbio.sequence.GrammaredSequence.to_indices", "skbio.sequence.GrammaredSequence.to_regex", "skbio.sequence.GrammaredSequence.write", "skbio.sequence.Protein", "skbio.sequence.Protein.__bool__", "skbio.sequence.Protein.__contains__", "skbio.sequence.Protein.__copy__", "skbio.sequence.Protein.__deepcopy__", "skbio.sequence.Protein.__eq__", "skbio.sequence.Protein.__ge__", "skbio.sequence.Protein.__getitem__", "skbio.sequence.Protein.__getstate__", "skbio.sequence.Protein.__gt__", "skbio.sequence.Protein.__iter__", "skbio.sequence.Protein.__le__", "skbio.sequence.Protein.__len__", "skbio.sequence.Protein.__lt__", "skbio.sequence.Protein.__ne__", "skbio.sequence.Protein.__reversed__", "skbio.sequence.Protein.__str__", "skbio.sequence.Protein.concat", "skbio.sequence.Protein.count", "skbio.sequence.Protein.definites", "skbio.sequence.Protein.degap", "skbio.sequence.Protein.degenerates", "skbio.sequence.Protein.distance", "skbio.sequence.Protein.expand_degenerates", "skbio.sequence.Protein.find_motifs", "skbio.sequence.Protein.find_with_regex", "skbio.sequence.Protein.frequencies", "skbio.sequence.Protein.gaps", "skbio.sequence.Protein.has_definites", "skbio.sequence.Protein.has_degenerates", "skbio.sequence.Protein.has_gaps", "skbio.sequence.Protein.has_interval_metadata", "skbio.sequence.Protein.has_metadata", "skbio.sequence.Protein.has_nondegenerates", "skbio.sequence.Protein.has_positional_metadata", "skbio.sequence.Protein.has_stops", "skbio.sequence.Protein.index", "skbio.sequence.Protein.iter_contiguous", "skbio.sequence.Protein.iter_kmers", "skbio.sequence.Protein.kmer_frequencies", "skbio.sequence.Protein.lowercase", "skbio.sequence.Protein.match_frequency", "skbio.sequence.Protein.matches", "skbio.sequence.Protein.mismatch_frequency", "skbio.sequence.Protein.mismatches", "skbio.sequence.Protein.nondegenerates", "skbio.sequence.Protein.read", "skbio.sequence.Protein.replace", "skbio.sequence.Protein.stops", "skbio.sequence.Protein.to_definites", "skbio.sequence.Protein.to_indices", "skbio.sequence.Protein.to_regex", "skbio.sequence.Protein.write", "skbio.sequence.RNA", "skbio.sequence.RNA.__bool__", "skbio.sequence.RNA.__contains__", "skbio.sequence.RNA.__copy__", "skbio.sequence.RNA.__deepcopy__", "skbio.sequence.RNA.__eq__", "skbio.sequence.RNA.__ge__", "skbio.sequence.RNA.__getitem__", "skbio.sequence.RNA.__getstate__", "skbio.sequence.RNA.__gt__", "skbio.sequence.RNA.__iter__", "skbio.sequence.RNA.__le__", "skbio.sequence.RNA.__len__", "skbio.sequence.RNA.__lt__", "skbio.sequence.RNA.__ne__", "skbio.sequence.RNA.__reversed__", "skbio.sequence.RNA.__str__", "skbio.sequence.RNA.complement", "skbio.sequence.RNA.concat", "skbio.sequence.RNA.count", "skbio.sequence.RNA.definites", "skbio.sequence.RNA.degap", "skbio.sequence.RNA.degenerates", "skbio.sequence.RNA.distance", "skbio.sequence.RNA.expand_degenerates", "skbio.sequence.RNA.find_motifs", "skbio.sequence.RNA.find_with_regex", "skbio.sequence.RNA.frequencies", "skbio.sequence.RNA.gaps", "skbio.sequence.RNA.gc_content", "skbio.sequence.RNA.gc_frequency", "skbio.sequence.RNA.has_definites", "skbio.sequence.RNA.has_degenerates", "skbio.sequence.RNA.has_gaps", "skbio.sequence.RNA.has_interval_metadata", "skbio.sequence.RNA.has_metadata", "skbio.sequence.RNA.has_nondegenerates", "skbio.sequence.RNA.has_positional_metadata", "skbio.sequence.RNA.index", "skbio.sequence.RNA.is_reverse_complement", "skbio.sequence.RNA.iter_contiguous", "skbio.sequence.RNA.iter_kmers", "skbio.sequence.RNA.kmer_frequencies", "skbio.sequence.RNA.lowercase", "skbio.sequence.RNA.match_frequency", "skbio.sequence.RNA.matches", "skbio.sequence.RNA.mismatch_frequency", "skbio.sequence.RNA.mismatches", "skbio.sequence.RNA.nondegenerates", "skbio.sequence.RNA.read", "skbio.sequence.RNA.replace", "skbio.sequence.RNA.reverse_complement", "skbio.sequence.RNA.reverse_transcribe", "skbio.sequence.RNA.to_definites", "skbio.sequence.RNA.to_indices", "skbio.sequence.RNA.to_regex", "skbio.sequence.RNA.translate", "skbio.sequence.RNA.translate_six_frames", "skbio.sequence.RNA.write", "skbio.sequence.Sequence", "skbio.sequence.Sequence.__bool__", "skbio.sequence.Sequence.__contains__", "skbio.sequence.Sequence.__copy__", "skbio.sequence.Sequence.__deepcopy__", "skbio.sequence.Sequence.__eq__", "skbio.sequence.Sequence.__ge__", "skbio.sequence.Sequence.__getitem__", "skbio.sequence.Sequence.__getstate__", "skbio.sequence.Sequence.__gt__", "skbio.sequence.Sequence.__iter__", "skbio.sequence.Sequence.__le__", "skbio.sequence.Sequence.__len__", "skbio.sequence.Sequence.__lt__", "skbio.sequence.Sequence.__ne__", "skbio.sequence.Sequence.__reversed__", "skbio.sequence.Sequence.__str__", "skbio.sequence.Sequence.concat", "skbio.sequence.Sequence.count", "skbio.sequence.Sequence.distance", "skbio.sequence.Sequence.find_with_regex", "skbio.sequence.Sequence.frequencies", "skbio.sequence.Sequence.has_interval_metadata", "skbio.sequence.Sequence.has_metadata", "skbio.sequence.Sequence.has_positional_metadata", "skbio.sequence.Sequence.index", "skbio.sequence.Sequence.iter_contiguous", "skbio.sequence.Sequence.iter_kmers", "skbio.sequence.Sequence.kmer_frequencies", "skbio.sequence.Sequence.lowercase", "skbio.sequence.Sequence.match_frequency", "skbio.sequence.Sequence.matches", "skbio.sequence.Sequence.mismatch_frequency", "skbio.sequence.Sequence.mismatches", "skbio.sequence.Sequence.read", "skbio.sequence.Sequence.replace", "skbio.sequence.Sequence.to_indices", "skbio.sequence.Sequence.write", "skbio.sequence.SubstitutionMatrix", "skbio.sequence.SubstitutionMatrix.__contains__", "skbio.sequence.SubstitutionMatrix.__eq__", "skbio.sequence.SubstitutionMatrix.__ge__", "skbio.sequence.SubstitutionMatrix.__getitem__", "skbio.sequence.SubstitutionMatrix.__getstate__", "skbio.sequence.SubstitutionMatrix.__gt__", "skbio.sequence.SubstitutionMatrix.__le__", "skbio.sequence.SubstitutionMatrix.__lt__", "skbio.sequence.SubstitutionMatrix.__ne__", "skbio.sequence.SubstitutionMatrix.__str__", "skbio.sequence.SubstitutionMatrix.between", "skbio.sequence.SubstitutionMatrix.by_name", "skbio.sequence.SubstitutionMatrix.copy", "skbio.sequence.SubstitutionMatrix.filter", "skbio.sequence.SubstitutionMatrix.from_dict", "skbio.sequence.SubstitutionMatrix.from_iterable", "skbio.sequence.SubstitutionMatrix.get_names", "skbio.sequence.SubstitutionMatrix.identity", "skbio.sequence.SubstitutionMatrix.index", "skbio.sequence.SubstitutionMatrix.plot", "skbio.sequence.SubstitutionMatrix.read", "skbio.sequence.SubstitutionMatrix.redundant_form", "skbio.sequence.SubstitutionMatrix.to_data_frame", "skbio.sequence.SubstitutionMatrix.to_dict", "skbio.sequence.SubstitutionMatrix.transpose", "skbio.sequence.SubstitutionMatrix.within", "skbio.sequence.SubstitutionMatrix.write", "Sequence distance metrics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence.distance</span></code>)", "skbio.sequence.distance.hamming", "skbio.sequence.distance.kmer_distance", "Composition Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.composition</span></code>)", "skbio.stats.composition.alr", "skbio.stats.composition.alr_inv", "skbio.stats.composition.ancom", "skbio.stats.composition.centralize", "skbio.stats.composition.closure", "skbio.stats.composition.clr", "skbio.stats.composition.clr_inv", "skbio.stats.composition.dirmult_ttest", "skbio.stats.composition.ilr", "skbio.stats.composition.ilr_inv", "skbio.stats.composition.inner", "skbio.stats.composition.multi_replace", "skbio.stats.composition.multiplicative_replacement", "skbio.stats.composition.pairwise_vlr", "skbio.stats.composition.perturb", "skbio.stats.composition.perturb_inv", "skbio.stats.composition.power", "skbio.stats.composition.sbp_basis", "skbio.stats.composition.tree_basis", "skbio.stats.composition.vlr", "Distance matrix-based statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.distance</span></code>)", "skbio.stats.distance.DissimilarityMatrix", "skbio.stats.distance.DissimilarityMatrix.__contains__", "skbio.stats.distance.DissimilarityMatrix.__eq__", "skbio.stats.distance.DissimilarityMatrix.__ge__", "skbio.stats.distance.DissimilarityMatrix.__getitem__", "skbio.stats.distance.DissimilarityMatrix.__getstate__", "skbio.stats.distance.DissimilarityMatrix.__gt__", "skbio.stats.distance.DissimilarityMatrix.__le__", "skbio.stats.distance.DissimilarityMatrix.__lt__", "skbio.stats.distance.DissimilarityMatrix.__ne__", "skbio.stats.distance.DissimilarityMatrix.__str__", "skbio.stats.distance.DissimilarityMatrix.between", "skbio.stats.distance.DissimilarityMatrix.copy", "skbio.stats.distance.DissimilarityMatrix.filter", "skbio.stats.distance.DissimilarityMatrix.from_iterable", "skbio.stats.distance.DissimilarityMatrix.index", "skbio.stats.distance.DissimilarityMatrix.plot", "skbio.stats.distance.DissimilarityMatrix.read", "skbio.stats.distance.DissimilarityMatrix.redundant_form", "skbio.stats.distance.DissimilarityMatrix.to_data_frame", "skbio.stats.distance.DissimilarityMatrix.transpose", "skbio.stats.distance.DissimilarityMatrix.within", "skbio.stats.distance.DissimilarityMatrix.write", "skbio.stats.distance.DistanceMatrix", "skbio.stats.distance.DistanceMatrix.__contains__", "skbio.stats.distance.DistanceMatrix.__eq__", "skbio.stats.distance.DistanceMatrix.__ge__", "skbio.stats.distance.DistanceMatrix.__getitem__", "skbio.stats.distance.DistanceMatrix.__getstate__", "skbio.stats.distance.DistanceMatrix.__gt__", "skbio.stats.distance.DistanceMatrix.__le__", "skbio.stats.distance.DistanceMatrix.__lt__", "skbio.stats.distance.DistanceMatrix.__ne__", "skbio.stats.distance.DistanceMatrix.__str__", "skbio.stats.distance.DistanceMatrix.between", "skbio.stats.distance.DistanceMatrix.condensed_form", "skbio.stats.distance.DistanceMatrix.copy", "skbio.stats.distance.DistanceMatrix.filter", "skbio.stats.distance.DistanceMatrix.from_iterable", "skbio.stats.distance.DistanceMatrix.index", "skbio.stats.distance.DistanceMatrix.permute", "skbio.stats.distance.DistanceMatrix.plot", "skbio.stats.distance.DistanceMatrix.read", "skbio.stats.distance.DistanceMatrix.redundant_form", "skbio.stats.distance.DistanceMatrix.to_data_frame", "skbio.stats.distance.DistanceMatrix.to_series", "skbio.stats.distance.DistanceMatrix.transpose", "skbio.stats.distance.DistanceMatrix.within", "skbio.stats.distance.DistanceMatrix.write", "skbio.stats.distance.anosim", "skbio.stats.distance.bioenv", "skbio.stats.distance.mantel", "skbio.stats.distance.permanova", "skbio.stats.distance.permdisp", "skbio.stats.distance.pwmantel", "skbio.stats.distance.randdm", "Evolutionary statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.evolve</span></code>)", "skbio.stats.evolve.hommola_cospeciation", "Gradient analyses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.gradient</span></code>)", "skbio.stats.gradient.AverageGradientANOVA", "skbio.stats.gradient.AverageGradientANOVA.__eq__", "skbio.stats.gradient.AverageGradientANOVA.__ge__", "skbio.stats.gradient.AverageGradientANOVA.__getstate__", "skbio.stats.gradient.AverageGradientANOVA.__gt__", "skbio.stats.gradient.AverageGradientANOVA.__hash__", "skbio.stats.gradient.AverageGradientANOVA.__le__", "skbio.stats.gradient.AverageGradientANOVA.__lt__", "skbio.stats.gradient.AverageGradientANOVA.__ne__", "skbio.stats.gradient.AverageGradientANOVA.__str__", "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "skbio.stats.gradient.CategoryResults", "skbio.stats.gradient.CategoryResults.__eq__", "skbio.stats.gradient.CategoryResults.__ge__", "skbio.stats.gradient.CategoryResults.__getstate__", "skbio.stats.gradient.CategoryResults.__gt__", "skbio.stats.gradient.CategoryResults.__hash__", "skbio.stats.gradient.CategoryResults.__le__", "skbio.stats.gradient.CategoryResults.__lt__", "skbio.stats.gradient.CategoryResults.__ne__", "skbio.stats.gradient.CategoryResults.__str__", "skbio.stats.gradient.CategoryResults.to_files", "skbio.stats.gradient.FirstDifferenceGradientANOVA", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVA", "skbio.stats.gradient.GradientANOVA.__eq__", "skbio.stats.gradient.GradientANOVA.__ge__", "skbio.stats.gradient.GradientANOVA.__getstate__", "skbio.stats.gradient.GradientANOVA.__gt__", "skbio.stats.gradient.GradientANOVA.__hash__", "skbio.stats.gradient.GradientANOVA.__le__", "skbio.stats.gradient.GradientANOVA.__lt__", "skbio.stats.gradient.GradientANOVA.__ne__", "skbio.stats.gradient.GradientANOVA.__str__", "skbio.stats.gradient.GradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVAResults", "skbio.stats.gradient.GradientANOVAResults.__eq__", "skbio.stats.gradient.GradientANOVAResults.__ge__", "skbio.stats.gradient.GradientANOVAResults.__getstate__", "skbio.stats.gradient.GradientANOVAResults.__gt__", "skbio.stats.gradient.GradientANOVAResults.__hash__", "skbio.stats.gradient.GradientANOVAResults.__le__", "skbio.stats.gradient.GradientANOVAResults.__lt__", "skbio.stats.gradient.GradientANOVAResults.__ne__", "skbio.stats.gradient.GradientANOVAResults.__str__", "skbio.stats.gradient.GradientANOVAResults.to_files", "skbio.stats.gradient.GroupResults", "skbio.stats.gradient.GroupResults.__eq__", "skbio.stats.gradient.GroupResults.__ge__", "skbio.stats.gradient.GroupResults.__getstate__", "skbio.stats.gradient.GroupResults.__gt__", "skbio.stats.gradient.GroupResults.__hash__", "skbio.stats.gradient.GroupResults.__le__", "skbio.stats.gradient.GroupResults.__lt__", "skbio.stats.gradient.GroupResults.__ne__", "skbio.stats.gradient.GroupResults.__str__", "skbio.stats.gradient.GroupResults.to_files", "skbio.stats.gradient.TrajectoryGradientANOVA", "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "skbio.stats.gradient.WindowDifferenceGradientANOVA", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "skbio.stats.isubsample", "Ordination methods (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.ordination</span></code>)", "skbio.stats.ordination.OrdinationResults", "skbio.stats.ordination.OrdinationResults.__eq__", "skbio.stats.ordination.OrdinationResults.__ge__", "skbio.stats.ordination.OrdinationResults.__getstate__", "skbio.stats.ordination.OrdinationResults.__gt__", "skbio.stats.ordination.OrdinationResults.__hash__", "skbio.stats.ordination.OrdinationResults.__le__", "skbio.stats.ordination.OrdinationResults.__lt__", "skbio.stats.ordination.OrdinationResults.__ne__", "skbio.stats.ordination.OrdinationResults.__str__", "skbio.stats.ordination.OrdinationResults.plot", "skbio.stats.ordination.OrdinationResults.read", "skbio.stats.ordination.OrdinationResults.write", "skbio.stats.ordination.ca", "skbio.stats.ordination.cca", "skbio.stats.ordination.corr", "skbio.stats.ordination.e_matrix", "skbio.stats.ordination.f_matrix", "skbio.stats.ordination.mean_and_std", "skbio.stats.ordination.pcoa", "skbio.stats.ordination.pcoa_biplot", "skbio.stats.ordination.rda", "skbio.stats.ordination.scale", "skbio.stats.ordination.svd_rank", "Empirical Power Estimation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.power</span></code>)", "skbio.stats.power.confidence_bound", "skbio.stats.power.paired_subsamples", "skbio.stats.power.subsample_paired_power", "skbio.stats.power.subsample_power", "skbio.stats.subsample_counts", "skbio.table.Table", "skbio.table.Table.__eq__", "skbio.table.Table.__ge__", "skbio.table.Table.__getitem__", "skbio.table.Table.__getstate__", "skbio.table.Table.__gt__", "skbio.table.Table.__iter__", "skbio.table.Table.__le__", "skbio.table.Table.__lt__", "skbio.table.Table.__ne__", "skbio.table.Table.__str__", "skbio.table.Table.add_group_metadata", "skbio.table.Table.add_metadata", "skbio.table.Table.align_to", "skbio.table.Table.align_to_dataframe", "skbio.table.Table.align_tree", "skbio.table.Table.collapse", "skbio.table.Table.concat", "skbio.table.Table.copy", "skbio.table.Table.data", "skbio.table.Table.del_metadata", "skbio.table.Table.delimited_self", "skbio.table.Table.descriptive_equality", "skbio.table.Table.exists", "skbio.table.Table.filter", "skbio.table.Table.from_adjacency", "skbio.table.Table.from_hdf5", "skbio.table.Table.from_json", "skbio.table.Table.from_tsv", "skbio.table.Table.get_table_density", "skbio.table.Table.get_value_by_ids", "skbio.table.Table.group_metadata", "skbio.table.Table.head", "skbio.table.Table.ids", "skbio.table.Table.index", "skbio.table.Table.is_empty", "skbio.table.Table.iter", "skbio.table.Table.iter_data", "skbio.table.Table.iter_pairwise", "skbio.table.Table.length", "skbio.table.Table.max", "skbio.table.Table.merge", "skbio.table.Table.metadata", "skbio.table.Table.metadata_to_dataframe", "skbio.table.Table.min", "skbio.table.Table.nonzero", "skbio.table.Table.nonzero_counts", "skbio.table.Table.norm", "skbio.table.Table.pa", "skbio.table.Table.partition", "skbio.table.Table.rankdata", "skbio.table.Table.read", "skbio.table.Table.reduce", "skbio.table.Table.remove_empty", "skbio.table.Table.sort", "skbio.table.Table.sort_order", "skbio.table.Table.subsample", "skbio.table.Table.sum", "skbio.table.Table.to_anndata", "skbio.table.Table.to_dataframe", "skbio.table.Table.to_hdf5", "skbio.table.Table.to_json", "skbio.table.Table.to_tsv", "skbio.table.Table.transform", "skbio.table.Table.transpose", "skbio.table.Table.update_ids", "skbio.table.Table.write", "skbio.table.example_table", "skbio.tree.TreeNode", "skbio.tree.TreeNode.__copy__", "skbio.tree.TreeNode.__deepcopy__", "skbio.tree.TreeNode.__eq__", "skbio.tree.TreeNode.__ge__", "skbio.tree.TreeNode.__getitem__", "skbio.tree.TreeNode.__getstate__", "skbio.tree.TreeNode.__gt__", "skbio.tree.TreeNode.__hash__", "skbio.tree.TreeNode.__iter__", "skbio.tree.TreeNode.__le__", "skbio.tree.TreeNode.__len__", "skbio.tree.TreeNode.__lt__", "skbio.tree.TreeNode.__ne__", "skbio.tree.TreeNode.__str__", "skbio.tree.TreeNode.accumulate_to_ancestor", "skbio.tree.TreeNode.ancestors", "skbio.tree.TreeNode.append", "skbio.tree.TreeNode.ascii_art", "skbio.tree.TreeNode.assign_ids", "skbio.tree.TreeNode.assign_supports", "skbio.tree.TreeNode.bifurcate", "skbio.tree.TreeNode.cache_attr", "skbio.tree.TreeNode.compare_rfd", "skbio.tree.TreeNode.compare_subsets", "skbio.tree.TreeNode.compare_tip_distances", "skbio.tree.TreeNode.copy", "skbio.tree.TreeNode.count", "skbio.tree.TreeNode.create_caches", "skbio.tree.TreeNode.deepcopy", "skbio.tree.TreeNode.descending_branch_length", "skbio.tree.TreeNode.distance", "skbio.tree.TreeNode.extend", "skbio.tree.TreeNode.find", "skbio.tree.TreeNode.find_all", "skbio.tree.TreeNode.find_by_func", "skbio.tree.TreeNode.find_by_id", "skbio.tree.TreeNode.from_linkage_matrix", "skbio.tree.TreeNode.from_taxdump", "skbio.tree.TreeNode.from_taxonomy", "skbio.tree.TreeNode.get_max_distance", "skbio.tree.TreeNode.has_children", "skbio.tree.TreeNode.index_tree", "skbio.tree.TreeNode.invalidate_caches", "skbio.tree.TreeNode.is_root", "skbio.tree.TreeNode.is_tip", "skbio.tree.TreeNode.lca", "skbio.tree.TreeNode.levelorder", "skbio.tree.TreeNode.lowest_common_ancestor", "skbio.tree.TreeNode.neighbors", "skbio.tree.TreeNode.non_tips", "skbio.tree.TreeNode.observed_node_counts", "skbio.tree.TreeNode.pop", "skbio.tree.TreeNode.postorder", "skbio.tree.TreeNode.pre_and_postorder", "skbio.tree.TreeNode.preorder", "skbio.tree.TreeNode.prune", "skbio.tree.TreeNode.read", "skbio.tree.TreeNode.remove", "skbio.tree.TreeNode.remove_deleted", "skbio.tree.TreeNode.root", "skbio.tree.TreeNode.root_at", "skbio.tree.TreeNode.root_at_midpoint", "skbio.tree.TreeNode.shear", "skbio.tree.TreeNode.shuffle", "skbio.tree.TreeNode.siblings", "skbio.tree.TreeNode.subset", "skbio.tree.TreeNode.subsets", "skbio.tree.TreeNode.subtree", "skbio.tree.TreeNode.tip_tip_distances", "skbio.tree.TreeNode.tips", "skbio.tree.TreeNode.to_array", "skbio.tree.TreeNode.to_taxonomy", "skbio.tree.TreeNode.traverse", "skbio.tree.TreeNode.unpack", "skbio.tree.TreeNode.unpack_by_func", "skbio.tree.TreeNode.unrooted_copy", "skbio.tree.TreeNode.unrooted_deepcopy", "skbio.tree.TreeNode.write", "skbio.tree.majority_rule", "skbio.tree.nj", "skbio.util.EfficiencyWarning", "skbio.util.RepresentationWarning", "skbio.util.assert_data_frame_almost_equal", "skbio.util.assert_ordination_results_equal", "skbio.util.cardinal_to_ordinal", "skbio.util.classproperty", "skbio.util.classproperty.__delete__", "skbio.util.classproperty.__eq__", "skbio.util.classproperty.__ge__", "skbio.util.classproperty.__get__", "skbio.util.classproperty.__getstate__", "skbio.util.classproperty.__gt__", "skbio.util.classproperty.__hash__", "skbio.util.classproperty.__le__", "skbio.util.classproperty.__lt__", "skbio.util.classproperty.__ne__", "skbio.util.classproperty.__set__", "skbio.util.classproperty.__set_name__", "skbio.util.classproperty.__str__", "skbio.util.classproperty.deleter", "skbio.util.classproperty.getter", "skbio.util.classproperty.setter", "skbio.util.find_duplicates", "skbio.util.get_data_path", "skbio.util.safe_md5", "skbio.workflow.Workflow", "skbio.workflow.Workflow.__call__", "skbio.workflow.Workflow.__eq__", "skbio.workflow.Workflow.__ge__", "skbio.workflow.Workflow.__getstate__", "skbio.workflow.Workflow.__gt__", "skbio.workflow.Workflow.__hash__", "skbio.workflow.Workflow.__le__", "skbio.workflow.Workflow.__lt__", "skbio.workflow.Workflow.__ne__", "skbio.workflow.Workflow.__str__", "skbio.workflow.Workflow.initialize_state", "skbio.workflow.method", "skbio.workflow.method.__call__", "skbio.workflow.method.__eq__", "skbio.workflow.method.__ge__", "skbio.workflow.method.__getstate__", "skbio.workflow.method.__gt__", "skbio.workflow.method.__hash__", "skbio.workflow.method.__le__", "skbio.workflow.method.__lt__", "skbio.workflow.method.__ne__", "skbio.workflow.method.__str__", "skbio.workflow.requires", "skbio.workflow.requires.__call__", "skbio.workflow.requires.__eq__", "skbio.workflow.requires.__ge__", "skbio.workflow.requires.__getstate__", "skbio.workflow.requires.__gt__", "skbio.workflow.requires.__hash__", "skbio.workflow.requires.__le__", "skbio.workflow.requires.__lt__", "skbio.workflow.requires.__ne__", "skbio.workflow.requires.__str__", "Home", "Input and Output (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io</span></code>)", "Metadata (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.metadata</span></code>)", "Biological Sequences (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence</span></code>)", "Multivariate Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats</span></code>)", "Data Table (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.table</span></code>)", "Trees and Phylogenetics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.tree</span></code>)", "Utilities for Developers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.util</span></code>)", "Workflow construction (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.workflow</span></code>)"], "titleterms": {"0": 1015, "1": 1015, "6": [141, 1015], "7": 142, "__bool__": [30, 304, 375, 426, 479, 538], "__call__": [18, 982, 994, 1005], "__contains__": [31, 305, 376, 427, 480, 539, 576, 629, 652], "__copy__": [32, 230, 306, 377, 428, 481, 540, 876], "__deepcopy__": [33, 231, 307, 378, 429, 482, 541, 877], "__delete__": 962, "__eq__": [4, 19, 34, 114, 127, 160, 173, 202, 220, 232, 249, 267, 285, 308, 363, 379, 430, 483, 542, 577, 630, 653, 688, 699, 710, 721, 732, 743, 754, 765, 778, 808, 878, 963, 983, 995, 1006], "__ge__": [5, 20, 35, 115, 128, 161, 174, 203, 221, 233, 250, 268, 286, 309, 364, 380, 431, 484, 543, 578, 631, 654, 689, 700, 711, 722, 733, 744, 755, 766, 779, 809, 879, 964, 984, 996, 1007], "__get__": 965, "__getitem__": [6, 36, 310, 381, 432, 485, 544, 579, 632, 655, 810, 880], "__getstate__": [7, 21, 37, 116, 129, 162, 175, 204, 222, 234, 251, 269, 287, 311, 365, 382, 433, 486, 545, 580, 633, 656, 690, 701, 712, 723, 734, 745, 756, 767, 780, 811, 881, 966, 985, 997, 1008], "__gt__": [8, 22, 38, 117, 130, 163, 176, 205, 223, 235, 252, 270, 288, 312, 366, 383, 434, 487, 546, 581, 634, 657, 691, 702, 713, 724, 735, 746, 757, 768, 781, 812, 882, 967, 986, 998, 1009], "__hash__": [9, 23, 118, 131, 164, 177, 692, 703, 714, 725, 736, 747, 758, 769, 782, 883, 968, 987, 999, 1010], "__iter__": [39, 313, 384, 435, 488, 547, 813, 884], "__le__": [10, 24, 40, 119, 132, 165, 178, 206, 224, 236, 253, 271, 289, 314, 367, 385, 436, 489, 548, 582, 635, 658, 693, 704, 715, 726, 737, 748, 759, 770, 783, 814, 885, 969, 988, 1000, 1011], "__len__": [41, 315, 386, 437, 490, 549, 886], "__lt__": [11, 25, 42, 120, 133, 166, 179, 207, 225, 237, 254, 272, 290, 316, 368, 387, 438, 491, 550, 583, 636, 659, 694, 705, 716, 727, 738, 749, 760, 771, 784, 815, 887, 970, 989, 1001, 1012], "__ne__": [12, 26, 43, 121, 134, 167, 180, 208, 226, 238, 255, 273, 291, 317, 369, 388, 439, 492, 551, 584, 637, 660, 695, 706, 717, 728, 739, 750, 761, 772, 785, 816, 888, 971, 990, 1002, 1013], "__reversed__": [44, 318, 389, 440, 493, 552], "__set__": 972, "__set_name__": 973, "__setstate__": [13, 27], "__str__": [14, 28, 45, 122, 135, 168, 181, 209, 227, 239, 256, 274, 292, 319, 370, 390, 441, 494, 553, 585, 638, 661, 696, 707, 718, 729, 740, 751, 762, 773, 786, 817, 889, 974, 991, 1003, 1014], "ac": 70, "accumulate_to_ancestor": 890, "ad": 151, "add": 240, "add_format": 182, "add_group_metadata": 818, "add_metadata": 819, "advanc": 151, "algorithm": 0, "align": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 143, 153, 156], "align_to": 820, "align_to_datafram": 821, "align_tre": 822, "alignmentstructur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "alpha": [1, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "alpha_divers": 104, "alr": 607, "alr_inv": 608, "analys": 686, "analysi": 776, "ancestor": 891, "ancom": 609, "anosim": 677, "append": [46, 892], "applic": 151, "argument": 158, "ascii_art": 893, "assert_data_frame_almost_equ": 958, "assert_ordination_results_equ": 959, "assign_id": 894, "assign_support": 895, "averagegradientanova": [687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697], "base": 627, "basic": 151, "befor": [145, 148], "berger_parker_d": 71, "beta": [1, 105, 106, 107], "beta_divers": 108, "between": [586, 639, 662], "bifurc": 896, "binari": 139, "binary_dm": 139, "bio": [158, 1015, 1016], "bioenv": 678, "biolog": [2, 1018], "biom": [140, 1020], "blast": [141, 142], "blast6": 141, "blast7": 142, "block_beta_divers": 109, "brillouin_d": 72, "by_nam": 587, "byte": [123, 136], "ca": 790, "cache_attr": 897, "calcul": 1018, "can": 1016, "canon": 776, "cardinal_to_ordin": 960, "categor": 627, "categoricalmetadatacolumn": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "categoryresult": [698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708], "caveat": 151, "cca": 791, "central": 610, "chao1": 73, "chao1_ci": 74, "charact": 155, "class": [158, 627, 686, 1023], "classproperti": [961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977], "closur": 611, "clr": 612, "clr_inv": 613, "clustal": 143, "collaps": 823, "column": [141, 142, 155, 1017], "comment": [151, 155], "commun": 1, "compare_rfd": 898, "compare_subset": 899, "compare_tip_dist": 900, "comparison": 627, "complement": [320, 495], "composit": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 1019], "concat": [241, 321, 391, 442, 496, 554, 824], "condensed_form": 663, "confidence_bound": 802, "consensu": 47, "conserv": 48, "construct": 1023, "continu": 627, "cophylogenet": 684, "copi": [588, 640, 664, 825, 901], "corr": 792, "correspond": 776, "count": [1, 322, 392, 443, 497, 555, 902], "creat": 158, "create_cach": 903, "create_format": [183, 193], "custom": 1016, "data": [0, 146, 627, 826, 1019, 1020], "decor": 1023, "deepcopi": 904, "definit": [323, 393, 444, 498], "degap": [324, 394, 445, 499], "degener": [325, 395, 446, 500], "del_metadata": 827, "delet": 975, "delimited_self": 828, "deprec": 0, "descending_branch_length": 905, "descriptive_equ": 829, "dev": 1015, "develop": [1016, 1022], "dirmult_ttest": 614, "dissimilar": 139, "dissimilaritymatrix": [628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650], "distanc": [326, 396, 447, 501, 556, 603, 604, 605, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 906, 1018, 1019], "distancematrix": [651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676], "divers": [1, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "divis": 157, "dmp": 157, "dna": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "document": 1015, "domin": 75, "doubl": 76, "drop": [228, 242], "drop_missing_valu": [210, 257, 275], "e_matrix": 793, "efficiencywarn": 956, "emb": 144, "embed": [2, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144], "embl": 145, "empir": 801, "empti": 155, "enspi": 77, "estim": 801, "esty_ci": 78, "evolutionari": 684, "evolv": [684, 685], "exampl": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 627, 686, 776, 801, 1020], "example_t": 874, "except": [158, 627, 1016, 1021], "exist": 830, "expand_degener": [327, 397, 448, 502], "explan": 151, "extend": [49, 907], "f_matrix": 794, "faith_pd": 79, "fasta": 146, "fastq": 147, "featur": [145, 148], "fh": 145, "file": [145, 146, 148, 1016], "filter": [589, 641, 665, 831], "filter_column": 293, "filter_id": [211, 258, 276, 294], "find": 908, "find_al": 909, "find_by_func": 910, "find_by_id": 911, "find_dupl": 978, "find_motif": [328, 398, 449, 503], "find_with_regex": [329, 399, 450, 504, 557], "firstdifferencegradientanova": [709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719], "fisher_alpha": 80, "footer": 156, "formal": 151, "format": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 1016], "frequenc": [330, 400, 451, 505, 558], "from": 1016, "from_adjac": 832, "from_dict": [50, 590], "from_hdf5": 833, "from_iter": [591, 642, 666], "from_json": 834, "from_linkage_matrix": 912, "from_ncbi": 371, "from_taxdump": 913, "from_taxonomi": 914, "from_tsv": 835, "ft": 145, "function": [0, 69, 105, 158, 197, 603, 606, 627, 684, 776, 801, 1022], "g": 156, "gap": [331, 401, 452, 506], "gap_frequ": 51, "gc": 156, "gc_content": [332, 507], "gc_frequenc": [333, 508], "genbank": 148, "gencod": 157, "gener": [145, 146, 154], "geneticcod": [362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373], "get_alpha_diversity_metr": 110, "get_beta_diversity_metr": 111, "get_column": 295, "get_data_path": 979, "get_id": [212, 259, 277, 296], "get_max_dist": 915, "get_miss": [213, 260, 278], "get_nam": 592, "get_read": 184, "get_sniff": 185, "get_table_dens": 836, "get_trajectori": [697, 719, 730, 763, 774], "get_valu": [214, 261, 279], "get_value_by_id": 837, "get_writ": 186, "getter": 976, "gf": 156, "gff3": 149, "gini_index": 81, "global_pairwise_align": 61, "global_pairwise_align_nucleotid": 62, "global_pairwise_align_protein": 63, "goods_coverag": 82, "gr": 156, "gradient": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774], "gradientanova": [720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730], "gradientanovaresult": [731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741], "grammar": 151, "grammaredsequ": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "group_metadata": 838, "groupresult": [742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752], "ham": 604, "has_children": 916, "has_definit": [334, 402, 453, 509], "has_degener": [335, 403, 454, 510], "has_gap": [336, 404, 455, 511], "has_interval_metadata": [337, 405, 456, 512, 559], "has_metadata": [52, 338, 406, 457, 513, 560], "has_missing_valu": [215, 262, 280], "has_nondegener": [339, 407, 458, 514], "has_positional_metadata": [53, 340, 408, 459, 515, 561], "has_stop": 460, "head": 839, "header": [145, 146, 153, 156], "heip_": 83, "hommola_cospeci": 685, "i": [158, 197], "id": 840, "ident": 593, "identifi": 155, "ilr": 615, "ilr_inv": 616, "index": [341, 409, 461, 516, 562, 594, 643, 667, 841], "index_tre": 917, "inform": 151, "initialize_st": 992, "inlin": 151, "inner": 617, "input": [1, 1016], "interv": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 1017], "intervalmetadata": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "introduct": 1, "invalidate_cach": 918, "io": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 1016], "ioregistri": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "is_empti": 842, "is_reverse_compl": [342, 517], "is_root": 919, "is_tip": 920, "is_zero_bas": 15, "isubsampl": 775, "iter": 843, "iter_contigu": [343, 410, 462, 518, 563], "iter_data": 844, "iter_km": [344, 411, 463, 519, 564], "iter_pairwis": 845, "iter_posit": 54, "join": 55, "kempton_taylor_q": 84, "keyword": 158, "kind": 1016, "kmer_dist": 605, "kmer_frequ": [345, 412, 464, 520, 565], "label": [150, 151], "lca": 921, "lead": 155, "length": [151, 846], "level": 145, "levelord": 922, "list_read_format": 187, "list_write_format": 188, "lladser_ci": 85, "lladser_p": 86, "load": 297, "local_pairwise_align": 64, "local_pairwise_align_nucleotid": 65, "local_pairwise_align_protein": 66, "local_pairwise_align_ssw": 67, "locat": 148, "lowercas": [346, 413, 465, 521, 566], "lowest_common_ancestor": 923, "lsmat": 150, "majority_rul": 954, "make_identity_substitution_matrix": 68, "mantel": 679, "margalef": 87, "match": [348, 415, 467, 523, 568], "match_frequ": [347, 414, 466, 522, 567], "matrix": [139, 150, 627, 1019], "max": 847, "mcintosh_": 89, "mcintosh_d": 88, "mean_and_std": 795, "measur": [69, 105], "menhinick": 90, "merg": [243, 298, 848], "metadata": [155, 156, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 849, 1017], "metadata_to_datafram": 850, "metadatacolumn": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "method": [684, 776, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1019], "metric": [1, 603], "michaelis_menten_fit": 91, "min": 851, "miscellan": 1022, "mismatch": [350, 417, 469, 525, 570], "mismatch_frequ": [349, 416, 468, 524, 569], "monkey_patch": 189, "multi_replac": 618, "multidimension": 776, "multipl": [153, 156], "multiplicative_replac": 619, "multivari": 1019, "name": 157, "neighbor": 924, "new": 158, "newick": 151, "nj": 955, "node": [151, 157], "non_tip": 925, "nondegener": [351, 418, 470, 526], "nonzero": 852, "nonzero_count": 853, "norm": 854, "number": 155, "numericmetadatacolumn": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "o": [158, 197], "observed_featur": 92, "observed_node_count": 926, "observed_otu": 93, "onli": 154, "open": 198, "open_fil": [199, 200], "oper": 1021, "optim": 0, "ordin": [152, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1019], "ordinationresult": [777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789], "origin": 148, "osd": 94, "other": 1019, "output": 1016, "pa": 855, "paired_subsampl": 803, "pairwise_vlr": 620, "paramet": [141, 143, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157], "partial_beta_divers": 112, "partit": 856, "pcoa": 796, "pcoa_biplot": 797, "permanova": 680, "permdisp": 681, "permut": 668, "perturb": 621, "perturb_inv": 622, "phydiv": 95, "phylip": 153, "phylogenet": 1021, "pielou_": 96, "plot": [595, 644, 669, 787], "pop": 927, "postord": 928, "power": [623, 801, 802, 803, 804, 805], "pre_and_postord": 929, "preorder": 930, "product": 145, "protein": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477], "proteinembed": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "proteinvector": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "prune": 931, "pwmantel": 682, "qseq": 154, "qual": 146, "qualiti": 147, "queri": 244, "randdm": 683, "rankdata": 857, "rda": 798, "read": [56, 124, 137, 145, 146, 148, 190, 194, 245, 299, 352, 419, 471, 527, 571, 596, 645, 670, 788, 858, 932, 1016], "reader": [146, 148, 149, 169], "reassign_index": 57, "recommend": 155, "reconstruct": 1021, "reduc": 859, "redundant_form": [597, 646, 671], "refer": [139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 156, 157, 606, 627, 776], "registri": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "remov": 933, "remove_delet": 934, "remove_empti": 860, "replac": [353, 420, 472, 528, 572], "representationwarn": 957, "requir": [155, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014], "reserv": 158, "result": [152, 776], "reverse_compl": [354, 529], "reverse_transcrib": 530, "rna": [478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "robbin": 97, "root": 935, "root_at": 936, "root_at_midpoint": 937, "row": 155, "rule": 151, "safe_md5": 980, "sampl": 1017, "samplemetadata": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "save": [216, 263, 281, 300], "sbp_basi": 624, "scale": [776, 799], "scikit": [158, 1015, 1016], "score": 147, "section": [143, 145, 148, 153], "sequenc": [0, 146, 153, 156, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 1018], "set_zero_bas": 16, "setter": 977, "shannon": 98, "shear": 938, "shuffl": 939, "sibl": 940, "simpl": 139, "simpson": 99, "simpson_": 100, "singl": 101, "skbio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023], "slow": 0, "sniff": [191, 195], "sniffer": 170, "sob": 102, "sort": [58, 246, 861], "sort_ord": 862, "specif": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "specifi": 1, "sq": 145, "squar": 150, "stat": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 1019], "statist": [606, 627, 684, 1019], "stockholm": 156, "stop": 473, "string": 148, "stripedsmithwaterman": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "strong": 103, "structur": [0, 627, 1021], "subsampl": [863, 1019], "subsample_count": 806, "subsample_paired_pow": 804, "subsample_pow": 805, "subset": [941, 942], "substitutionmatrix": [575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602], "subtre": 943, "sum": 864, "support": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 1016], "svd_rank": 800, "symbol": 151, "tabl": [807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 1020], "tabularmsa": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 146], "taxdump": 157, "test": 1022, "tip": 945, "tip_tip_dist": 944, "to_anndata": 865, "to_arrai": 946, "to_data_fram": [598, 647, 672], "to_datafram": [217, 264, 282, 301, 866], "to_definit": [355, 421, 474, 531], "to_dict": [59, 599], "to_fil": [708, 741, 752], "to_hdf5": 867, "to_indic": [356, 422, 475, 532, 573], "to_json": 868, "to_regex": [357, 423, 476, 533], "to_seri": [218, 265, 283, 673], "to_taxonomi": 947, "to_tsv": 869, "trail": 155, "trajectorygradientanova": [753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763], "transcrib": 358, "transform": 870, "translat": [359, 372, 534], "translate_six_fram": [360, 373, 535], "transpos": [600, 648, 674, 871], "travers": 948, "tree": [875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 1021], "tree_basi": 625, "treenod": [875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953], "tutori": [0, 1, 1016, 1018, 1021, 1023], "type": [2, 141, 142, 155, 1018], "unpack": 949, "unpack_by_func": 950, "unrooted_copi": 951, "unrooted_deepcopi": 952, "unweighted_unifrac": 106, "update_id": 872, "us": [0, 145, 1016], "util": [197, 198, 199, 200, 776, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 1018, 1021, 1022], "valid": [1, 155], "variabl": 627, "variant": 147, "vector": 1, "vlr": 626, "warn": [1016, 1022], "weighted_unifrac": 107, "what": 1016, "whitespac": [151, 155], "windowdifferencegradientanova": [764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774], "within": [601, 649, 675], "workflow": [981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1023], "write": [60, 125, 138, 146, 148, 192, 196, 247, 302, 361, 424, 477, 536, 574, 602, 650, 676, 789, 873, 953, 1016], "writer": [146, 149, 171]}})