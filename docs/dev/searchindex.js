Search.setIndex({"alltitles": {"Adding Node Information": [[230, "adding-node-information"]], "Advanced Label and Length Rules": [[230, "advanced-label-and-length-rules"]], "Alignment Section": [[222, "alignment-section"], [232, "alignment-section"]], "Alignment algorithms": [[0, "alignment-algorithms"]], "Alignment data structure": [[0, "alignment-data-structure"]], "Alignment structure": [[0, "alignment-structure"]], "Alpha diversity": [[1, "alpha-diversity"]], "Alpha diversity measures (skbio.diversity.alpha)": [[106, null]], "Application of Rules": [[230, "application-of-rules"]], "BIOM table": [[1109, "biom-table"]], "BIOM-Format (skbio.io.format.biom)": [[219, null]], "BLAST Column Types": [[220, "blast-column-types"], [221, "blast-column-types"]], "BLAST+6 format (skbio.io.format.blast6)": [[220, null]], "BLAST+7 format (skbio.io.format.blast7)": [[221, null]], "Basic Symbols": [[230, "basic-symbols"]], "Beta diversity": [[1, "beta-diversity"]], "Beta diversity measures (skbio.diversity.beta)": [[147, null]], "Biological Embeddings (skbio.embedding)": [[2, null]], "Biological Sequences (skbio.sequence)": [[1107, null]], "Canonical analysis": [[858, "canonical-analysis"]], "Categorical Variable Stats": [[707, "categorical-variable-stats"]], "Caveats": [[230, "caveats"]], "Classes": [[237, "classes"], [707, "classes"], [768, "classes"], [1112, "classes"]], "Clustal format (skbio.io.format.clustal)": [[222, null]], "Column Types": [[234, "column-types"]], "Comments and Empty Rows": [[234, "comments-and-empty-rows"]], "Community Diversity (skbio.diversity)": [[1, null]], "Composition Statistics (skbio.stats.composition)": [[686, null]], "Composition statistics": [[1108, "composition-statistics"]], "Continuous Variable Stats": [[707, "continuous-variable-stats"]], "Cophylogenetic methods": [[766, "cophylogenetic-methods"]], "Correspondence analysis": [[858, "correspondence-analysis"]], "Count vectors": [[1, "count-vectors"]], "Coverage metrics": [[106, "coverage-metrics"]], "Creating a new format for scikit-bio": [[237, "creating-a-new-format-for-scikit-bio"]], "Data Table (skbio.table)": [[1109, null]], "Data structures": [[707, "data-structures"]], "Data subsampling": [[1108, "data-subsampling"]], "Decorators": [[1112, "decorators"]], "Deprecated functionality": [[0, "deprecated-functionality"]], "Develop custom formats": [[1105, "develop-custom-formats"]], "Developer warnings": [[1111, "developer-warnings"]], "Distance Matrix Comparisons": [[707, "distance-matrix-comparisons"]], "Distance calculation": [[1107, "distance-calculation"]], "Distance matrix statistics": [[1108, "distance-matrix-statistics"]], "Distance matrix-based statistics (skbio.stats.distance)": [[707, null]], "Distance-based statistics": [[707, "distance-based-statistics"]], "Diversity metrics": [[106, "diversity-metrics"]], "Dominance metrics": [[106, "dominance-metrics"]], "EMBL format (skbio.io.format.embl)": [[224, null]], "Embedding format (skbio.io.format.embed).": [[223, null]], "Embedding types": [[2, "embedding-types"]], "Embedding vector types": [[2, "embedding-vector-types"]], "Embedding vector utilities": [[2, "embedding-vector-utilities"]], "Empirical Power Estimation (skbio.stats.power)": [[884, null]], "Evenness metrics": [[106, "evenness-metrics"]], "Evolutionary statistics (skbio.stats.evolve)": [[766, null]], "Example data": [[1109, "example-data"]], "Examples": [[219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [235, "examples"], [236, "examples"], [707, "examples"], [768, "examples"], [858, "examples"], [884, "examples"]], "Exceptions": [[237, "exceptions"], [707, "exceptions"], [1110, "exceptions"]], "Exceptions and warnings": [[1105, "exceptions-and-warnings"]], "Explanation": [[230, "explanation"]], "FASTA Format": [[225, "fasta-format"]], "FASTA/QUAL format (skbio.io.format.fasta)": [[225, null]], "FASTQ format (skbio.io.format.fastq)": [[226, null]], "FEATURES section": [[227, "features-section"]], "FT section": [[224, "ft-section"]], "Feature Level Products": [[224, "feature-level-products"]], "Footer": [[235, "footer"]], "Formal Grammar": [[230, "formal-grammar"]], "Format Parameters": [[220, "format-parameters"], [222, "format-parameters"], [225, "format-parameters"], [226, "format-parameters"], [227, "format-parameters"], [228, "format-parameters"], [229, "format-parameters"], [230, "format-parameters"], [232, "format-parameters"], [233, "format-parameters"], [235, "format-parameters"], [236, "format-parameters"]], "Format Specification": [[218, "format-specification"], [219, "format-specification"], [220, "format-specification"], [221, "format-specification"], [222, "format-specification"], [223, "format-specification"], [224, "format-specification"], [225, "format-specification"], [226, "format-specification"], [227, "format-specification"], [228, "format-specification"], [229, "format-specification"], [230, "format-specification"], [231, "format-specification"], [232, "format-specification"], [233, "format-specification"], [234, "format-specification"], [235, "format-specification"], [236, "format-specification"]], "Format Support": [[218, "format-support"], [219, "format-support"], [220, "format-support"], [221, "format-support"], [222, "format-support"], [223, "format-support"], [224, "format-support"], [225, "format-support"], [226, "format-support"], [227, "format-support"], [228, "format-support"], [229, "format-support"], [230, "format-support"], [231, "format-support"], [232, "format-support"], [233, "format-support"], [234, null], [235, "format-support"], [236, "format-support"]], "Functions": [[147, "functions"], [237, "functions"], [276, "functions"], [683, "functions"], [686, "functions"], [707, "functions"], [766, "functions"], [884, "functions"]], "GC metadata": [[235, "gc-metadata"]], "GF metadata": [[235, "gf-metadata"]], "GFF3 format (skbio.io.format.gff3)": [[228, null]], "GR metadata": [[235, "gr-metadata"]], "GS metadata": [[235, "gs-metadata"]], "GenBank format (skbio.io.format.genbank)": [[227, null]], "Generator and TabularMSA Reader Parameters": [[225, "generator-and-tabularmsa-reader-parameters"]], "Generators Only": [[233, "generators-only"]], "Gradient analyses (skbio.stats.gradient)": [[768, null]], "Header": [[235, "header"]], "Header Section": [[232, "header-section"]], "I/O Registry (skbio.io.registry)": [[237, null]], "I/O utilities (skbio.io.util)": [[276, null]], "Identifier Column": [[234, "identifier-column"]], "Inline Comments": [[230, "inline-comments"]], "Input and Output (skbio.io)": [[1105, null]], "Input validation": [[1, "input-validation"]], "Interval metadata": [[1106, "interval-metadata"]], "Introduction": [[1, "introduction"]], "Labeled square matrix format (skbio.io.format.lsmat)": [[229, null]], "Leading and trailing whitespace characters": [[234, "leading-and-trailing-whitespace-characters"]], "Location string": [[227, "location-string"]], "Metadata": [[235, "metadata"]], "Metadata (skbio.metadata)": [[1106, null]], "Metadata Columns": [[234, "metadata-columns"]], "Metadata Formatting Requirements": [[234, "metadata-formatting-requirements"]], "Metadata Validation": [[234, "metadata-validation"]], "Metadata columns": [[1106, "metadata-columns"]], "Miscellaneous functionality": [[1111, "miscellaneous-functionality"]], "Multidimensional scaling": [[858, "multidimensional-scaling"]], "Multiple Sequence Alignment": [[235, "multiple-sequence-alignment"]], "Multivariate Statistics (skbio.stats)": [[1108, null]], "Newick format (skbio.io.format.newick)": [[230, null]], "Number Formatting": [[234, "number-formatting"]], "ORIGIN section": [[227, "origin-section"]], "Ordination methods": [[1108, "ordination-methods"]], "Ordination methods (skbio.stats.ordination)": [[858, null]], "Ordination results": [[858, "ordination-results"]], "Ordination results format (skbio.io.format.ordination)": [[231, null]], "Other statistical methods": [[1108, "other-statistical-methods"]], "PHYLIP multiple sequence alignment format (skbio.io.format.phylip)": [[232, null]], "Phylogenetic reconstruction": [[1110, "phylogenetic-reconstruction"]], "QSeq format (skbio.io.format.qseq)": [[233, null]], "QUAL File Parameter (Readers and Writers)": [[225, "qual-file-parameter-readers-and-writers"]], "QUAL Format": [[225, "qual-format"]], "Quality Score Variants": [[226, "quality-score-variants"]], "Read/write files": [[1105, "read-write-files"]], "Reader-specific Parameters": [[225, "reader-specific-parameters"], [227, "reader-specific-parameters"], [228, "reader-specific-parameters"]], "Reading EMBL Files": [[224, "reading-embl-files"]], "Reading EMBL Files using generators": [[224, "reading-embl-files-using-generators"]], "Reading and Writing FASTA Files": [[225, "reading-and-writing-fasta-files"]], "Reading and Writing FASTA/QUAL Files": [[225, "reading-and-writing-fasta-qual-files"]], "Reading and Writing GenBank Files": [[227, "reading-and-writing-genbank-files"]], "Reading files into scikit-bio": [[1105, "reading-files-into-scikit-bio"]], "Recommendations for Identifiers": [[234, "recommendations-for-identifiers"]], "References": [[106, "references"], [218, "references"], [219, "references"], [220, "references"], [221, "references"], [222, "references"], [224, "references"], [225, "references"], [226, "references"], [227, "references"], [228, "references"], [230, "references"], [232, "references"], [233, "references"], [235, "references"], [236, "references"], [686, "references"], [707, "references"], [858, "references"]], "Reserved Keyword Arguments": [[237, "reserved-keyword-arguments"]], "Richness metrics": [[106, "richness-metrics"]], "SQ section": [[224, "sq-section"]], "Sample metadata": [[1106, "sample-metadata"]], "Sections before FEATURES": [[227, "sections-before-features"]], "Sections before FH (Feature Header)": [[224, "sections-before-fh-feature-header"]], "Sequence Alignments (skbio.alignment)": [[0, null]], "Sequence Data": [[225, "sequence-data"]], "Sequence Header": [[225, "sequence-header"]], "Sequence Reader Parameters": [[225, "sequence-reader-parameters"]], "Sequence distance metrics (skbio.sequence.distance)": [[683, null]], "Sequence types": [[1107, "sequence-types"]], "Sequence utilities": [[1107, "sequence-utilities"]], "Simple binary dissimilarity matrix format (skbio.io.format.binary_dm)": [[218, null]], "Specifying a diversity metric": [[1, "specifying-a-diversity-metric"]], "Stockholm format (skbio.io.format.stockholm)": [[235, null]], "Supported file formats": [[1105, "supported-file-formats"]], "Taxdump format (skbio.io.format.taxdump)": [[236, null]], "Testing functionality": [[1111, "testing-functionality"]], "Tree Rearrangement": [[1110, "tree-rearrangement"]], "Tree structure and operations": [[1110, "tree-structure-and-operations"]], "Tree utilities": [[1110, "tree-utilities"]], "Trees and Phylogenetics (skbio.tree)": [[1110, null]], "Tutorial": [[0, "tutorial"], [1, "tutorial"], [1105, "tutorial"], [1107, "tutorial"], [1110, "tutorial"], [1112, "tutorial"]], "Using the optimized alignment algorithm": [[0, "using-the-optimized-alignment-algorithm"]], "Using the slow alignment algorithm": [[0, "using-the-slow-alignment-algorithm"]], "Utilities for Developers (skbio.util)": [[1111, null]], "Utility functions": [[858, "utility-functions"]], "What kinds of files scikit-bio can use": [[1105, "what-kinds-of-files-scikit-bio-can-use"]], "Whitespace": [[230, "whitespace"]], "Workflow construction (skbio.workflow)": [[1112, null]], "Writer-specific Parameters": [[225, "writer-specific-parameters"], [228, "writer-specific-parameters"]], "Writing files from scikit-bio": [[1105, "writing-files-from-scikit-bio"]], "division.dmp": [[236, "division-dmp"]], "gencode.dmp": [[236, "gencode-dmp"]], "names.dmp": [[236, "names-dmp"]], "nodes.dmp": [[236, "nodes-dmp"]], "scikit-bio 0.6.3-dev documentation": [[1104, null]], "skbio.alignment.AlignPath": [[3, null]], "skbio.alignment.AlignPath.__eq__": [[4, null]], "skbio.alignment.AlignPath.__ge__": [[5, null]], "skbio.alignment.AlignPath.__getstate__": [[6, null]], "skbio.alignment.AlignPath.__gt__": [[7, null]], "skbio.alignment.AlignPath.__hash__": [[8, null]], "skbio.alignment.AlignPath.__le__": [[9, null]], "skbio.alignment.AlignPath.__lt__": [[10, null]], "skbio.alignment.AlignPath.__ne__": [[11, null]], "skbio.alignment.AlignPath.__str__": [[12, null]], "skbio.alignment.AlignPath.from_bits": [[13, null]], "skbio.alignment.AlignPath.from_coordinates": [[14, null]], "skbio.alignment.AlignPath.from_indices": [[15, null]], "skbio.alignment.AlignPath.from_tabular": [[16, null]], "skbio.alignment.AlignPath.to_bits": [[17, null]], "skbio.alignment.AlignPath.to_coordinates": [[18, null]], "skbio.alignment.AlignPath.to_indices": [[19, null]], "skbio.alignment.AlignmentStructure": [[20, null]], "skbio.alignment.AlignmentStructure.__eq__": [[21, null]], "skbio.alignment.AlignmentStructure.__ge__": [[22, null]], "skbio.alignment.AlignmentStructure.__getitem__": [[23, null]], "skbio.alignment.AlignmentStructure.__getstate__": [[24, null]], "skbio.alignment.AlignmentStructure.__gt__": [[25, null]], "skbio.alignment.AlignmentStructure.__hash__": [[26, null]], "skbio.alignment.AlignmentStructure.__le__": [[27, null]], "skbio.alignment.AlignmentStructure.__lt__": [[28, null]], "skbio.alignment.AlignmentStructure.__ne__": [[29, null]], "skbio.alignment.AlignmentStructure.__setstate__": [[30, null]], "skbio.alignment.AlignmentStructure.__str__": [[31, null]], "skbio.alignment.AlignmentStructure.is_zero_based": [[32, null]], "skbio.alignment.AlignmentStructure.set_zero_based": [[33, null]], "skbio.alignment.PairAlignPath": [[34, null]], "skbio.alignment.PairAlignPath.__eq__": [[35, null]], "skbio.alignment.PairAlignPath.__ge__": [[36, null]], "skbio.alignment.PairAlignPath.__getstate__": [[37, null]], "skbio.alignment.PairAlignPath.__gt__": [[38, null]], "skbio.alignment.PairAlignPath.__hash__": [[39, null]], "skbio.alignment.PairAlignPath.__le__": [[40, null]], "skbio.alignment.PairAlignPath.__lt__": [[41, null]], "skbio.alignment.PairAlignPath.__ne__": [[42, null]], "skbio.alignment.PairAlignPath.__str__": [[43, null]], "skbio.alignment.PairAlignPath.from_bits": [[44, null]], "skbio.alignment.PairAlignPath.from_cigar": [[45, null]], "skbio.alignment.PairAlignPath.from_coordinates": [[46, null]], "skbio.alignment.PairAlignPath.from_indices": [[47, null]], "skbio.alignment.PairAlignPath.from_tabular": [[48, null]], "skbio.alignment.PairAlignPath.to_bits": [[49, null]], "skbio.alignment.PairAlignPath.to_cigar": [[50, null]], "skbio.alignment.PairAlignPath.to_coordinates": [[51, null]], "skbio.alignment.PairAlignPath.to_indices": [[52, null]], "skbio.alignment.StripedSmithWaterman": [[53, null]], "skbio.alignment.StripedSmithWaterman.__call__": [[54, null]], "skbio.alignment.StripedSmithWaterman.__eq__": [[55, null]], "skbio.alignment.StripedSmithWaterman.__ge__": [[56, null]], "skbio.alignment.StripedSmithWaterman.__getstate__": [[57, null]], "skbio.alignment.StripedSmithWaterman.__gt__": [[58, null]], "skbio.alignment.StripedSmithWaterman.__hash__": [[59, null]], "skbio.alignment.StripedSmithWaterman.__le__": [[60, null]], "skbio.alignment.StripedSmithWaterman.__lt__": [[61, null]], "skbio.alignment.StripedSmithWaterman.__ne__": [[62, null]], "skbio.alignment.StripedSmithWaterman.__setstate__": [[63, null]], "skbio.alignment.StripedSmithWaterman.__str__": [[64, null]], "skbio.alignment.TabularMSA": [[65, null]], "skbio.alignment.TabularMSA.__bool__": [[66, null]], "skbio.alignment.TabularMSA.__contains__": [[67, null]], "skbio.alignment.TabularMSA.__copy__": [[68, null]], "skbio.alignment.TabularMSA.__deepcopy__": [[69, null]], "skbio.alignment.TabularMSA.__eq__": [[70, null]], "skbio.alignment.TabularMSA.__ge__": [[71, null]], "skbio.alignment.TabularMSA.__getitem__": [[72, null]], "skbio.alignment.TabularMSA.__getstate__": [[73, null]], "skbio.alignment.TabularMSA.__gt__": [[74, null]], "skbio.alignment.TabularMSA.__iter__": [[75, null]], "skbio.alignment.TabularMSA.__le__": [[76, null]], "skbio.alignment.TabularMSA.__len__": [[77, null]], "skbio.alignment.TabularMSA.__lt__": [[78, null]], "skbio.alignment.TabularMSA.__ne__": [[79, null]], "skbio.alignment.TabularMSA.__reversed__": [[80, null]], "skbio.alignment.TabularMSA.__str__": [[81, null]], "skbio.alignment.TabularMSA.append": [[82, null]], "skbio.alignment.TabularMSA.consensus": [[83, null]], "skbio.alignment.TabularMSA.conservation": [[84, null]], "skbio.alignment.TabularMSA.extend": [[85, null]], "skbio.alignment.TabularMSA.from_dict": [[86, null]], "skbio.alignment.TabularMSA.from_path_seqs": [[87, null]], "skbio.alignment.TabularMSA.gap_frequencies": [[88, null]], "skbio.alignment.TabularMSA.has_metadata": [[89, null]], "skbio.alignment.TabularMSA.has_positional_metadata": [[90, null]], "skbio.alignment.TabularMSA.iter_positions": [[91, null]], "skbio.alignment.TabularMSA.join": [[92, null]], "skbio.alignment.TabularMSA.read": [[93, null]], "skbio.alignment.TabularMSA.reassign_index": [[94, null]], "skbio.alignment.TabularMSA.sort": [[95, null]], "skbio.alignment.TabularMSA.to_dict": [[96, null]], "skbio.alignment.TabularMSA.write": [[97, null]], "skbio.alignment.global_pairwise_align": [[98, null]], "skbio.alignment.global_pairwise_align_nucleotide": [[99, null]], "skbio.alignment.global_pairwise_align_protein": [[100, null]], "skbio.alignment.local_pairwise_align": [[101, null]], "skbio.alignment.local_pairwise_align_nucleotide": [[102, null]], "skbio.alignment.local_pairwise_align_protein": [[103, null]], "skbio.alignment.local_pairwise_align_ssw": [[104, null]], "skbio.alignment.make_identity_substitution_matrix": [[105, null]], "skbio.diversity.alpha.ace": [[107, null]], "skbio.diversity.alpha.berger_parker_d": [[108, null]], "skbio.diversity.alpha.brillouin_d": [[109, null]], "skbio.diversity.alpha.chao1": [[110, null]], "skbio.diversity.alpha.chao1_ci": [[111, null]], "skbio.diversity.alpha.dominance": [[112, null]], "skbio.diversity.alpha.doubles": [[113, null]], "skbio.diversity.alpha.enspie": [[114, null]], "skbio.diversity.alpha.esty_ci": [[115, null]], "skbio.diversity.alpha.faith_pd": [[116, null]], "skbio.diversity.alpha.fisher_alpha": [[117, null]], "skbio.diversity.alpha.gini_index": [[118, null]], "skbio.diversity.alpha.goods_coverage": [[119, null]], "skbio.diversity.alpha.heip_e": [[120, null]], "skbio.diversity.alpha.hill": [[121, null]], "skbio.diversity.alpha.inv_simpson": [[122, null]], "skbio.diversity.alpha.kempton_taylor_q": [[123, null]], "skbio.diversity.alpha.lladser_ci": [[124, null]], "skbio.diversity.alpha.lladser_pe": [[125, null]], "skbio.diversity.alpha.margalef": [[126, null]], "skbio.diversity.alpha.mcintosh_d": [[127, null]], "skbio.diversity.alpha.mcintosh_e": [[128, null]], "skbio.diversity.alpha.menhinick": [[129, null]], "skbio.diversity.alpha.michaelis_menten_fit": [[130, null]], "skbio.diversity.alpha.observed_features": [[131, null]], "skbio.diversity.alpha.observed_otus": [[132, null]], "skbio.diversity.alpha.osd": [[133, null]], "skbio.diversity.alpha.phydiv": [[134, null]], "skbio.diversity.alpha.pielou_e": [[135, null]], "skbio.diversity.alpha.renyi": [[136, null]], "skbio.diversity.alpha.robbins": [[137, null]], "skbio.diversity.alpha.shannon": [[138, null]], "skbio.diversity.alpha.simpson": [[139, null]], "skbio.diversity.alpha.simpson_d": [[140, null]], "skbio.diversity.alpha.simpson_e": [[141, null]], "skbio.diversity.alpha.singles": [[142, null]], "skbio.diversity.alpha.sobs": [[143, null]], "skbio.diversity.alpha.strong": [[144, null]], "skbio.diversity.alpha.tsallis": [[145, null]], "skbio.diversity.alpha_diversity": [[146, null]], "skbio.diversity.beta.unweighted_unifrac": [[148, null]], "skbio.diversity.beta.weighted_unifrac": [[149, null]], "skbio.diversity.beta_diversity": [[150, null]], "skbio.diversity.block_beta_diversity": [[151, null]], "skbio.diversity.get_alpha_diversity_metrics": [[152, null]], "skbio.diversity.get_beta_diversity_metrics": [[153, null]], "skbio.diversity.partial_beta_diversity": [[154, null]], "skbio.embedding.Embedding": [[155, null]], "skbio.embedding.Embedding.__eq__": [[156, null]], "skbio.embedding.Embedding.__ge__": [[157, null]], "skbio.embedding.Embedding.__getstate__": [[158, null]], "skbio.embedding.Embedding.__gt__": [[159, null]], "skbio.embedding.Embedding.__hash__": [[160, null]], "skbio.embedding.Embedding.__le__": [[161, null]], "skbio.embedding.Embedding.__lt__": [[162, null]], "skbio.embedding.Embedding.__ne__": [[163, null]], "skbio.embedding.Embedding.__str__": [[164, null]], "skbio.embedding.Embedding.bytes": [[165, null]], "skbio.embedding.ProteinEmbedding": [[166, null]], "skbio.embedding.ProteinEmbedding.__eq__": [[167, null]], "skbio.embedding.ProteinEmbedding.__ge__": [[168, null]], "skbio.embedding.ProteinEmbedding.__getstate__": [[169, null]], "skbio.embedding.ProteinEmbedding.__gt__": [[170, null]], "skbio.embedding.ProteinEmbedding.__hash__": [[171, null]], "skbio.embedding.ProteinEmbedding.__le__": [[172, null]], "skbio.embedding.ProteinEmbedding.__lt__": [[173, null]], "skbio.embedding.ProteinEmbedding.__ne__": [[174, null]], "skbio.embedding.ProteinEmbedding.__str__": [[175, null]], "skbio.embedding.ProteinEmbedding.bytes": [[176, null]], "skbio.embedding.ProteinEmbedding.read": [[177, null]], "skbio.embedding.ProteinEmbedding.write": [[178, null]], "skbio.embedding.ProteinVector": [[179, null]], "skbio.embedding.ProteinVector.__eq__": [[180, null]], "skbio.embedding.ProteinVector.__ge__": [[181, null]], "skbio.embedding.ProteinVector.__getstate__": [[182, null]], "skbio.embedding.ProteinVector.__gt__": [[183, null]], "skbio.embedding.ProteinVector.__hash__": [[184, null]], "skbio.embedding.ProteinVector.__le__": [[185, null]], "skbio.embedding.ProteinVector.__lt__": [[186, null]], "skbio.embedding.ProteinVector.__ne__": [[187, null]], "skbio.embedding.ProteinVector.__str__": [[188, null]], "skbio.embedding.ProteinVector.bytes": [[189, null]], "skbio.embedding.ProteinVector.read": [[190, null]], "skbio.embedding.ProteinVector.write": [[191, null]], "skbio.embedding.SequenceEmbedding": [[192, null]], "skbio.embedding.SequenceEmbedding.__eq__": [[193, null]], "skbio.embedding.SequenceEmbedding.__ge__": [[194, null]], "skbio.embedding.SequenceEmbedding.__getstate__": [[195, null]], "skbio.embedding.SequenceEmbedding.__gt__": [[196, null]], "skbio.embedding.SequenceEmbedding.__hash__": [[197, null]], "skbio.embedding.SequenceEmbedding.__le__": [[198, null]], "skbio.embedding.SequenceEmbedding.__lt__": [[199, null]], "skbio.embedding.SequenceEmbedding.__ne__": [[200, null]], "skbio.embedding.SequenceEmbedding.__str__": [[201, null]], "skbio.embedding.SequenceEmbedding.bytes": [[202, null]], "skbio.embedding.SequenceVector": [[203, null]], "skbio.embedding.SequenceVector.__eq__": [[204, null]], "skbio.embedding.SequenceVector.__ge__": [[205, null]], "skbio.embedding.SequenceVector.__getstate__": [[206, null]], "skbio.embedding.SequenceVector.__gt__": [[207, null]], "skbio.embedding.SequenceVector.__hash__": [[208, null]], "skbio.embedding.SequenceVector.__le__": [[209, null]], "skbio.embedding.SequenceVector.__lt__": [[210, null]], "skbio.embedding.SequenceVector.__ne__": [[211, null]], "skbio.embedding.SequenceVector.__str__": [[212, null]], "skbio.embedding.SequenceVector.bytes": [[213, null]], "skbio.embedding.embed_vec_to_dataframe": [[214, null]], "skbio.embedding.embed_vec_to_distances": [[215, null]], "skbio.embedding.embed_vec_to_numpy": [[216, null]], "skbio.embedding.embed_vec_to_ordination": [[217, null]], "skbio.io.registry.Format": [[238, null]], "skbio.io.registry.Format.__eq__": [[239, null]], "skbio.io.registry.Format.__ge__": [[240, null]], "skbio.io.registry.Format.__getstate__": [[241, null]], "skbio.io.registry.Format.__gt__": [[242, null]], "skbio.io.registry.Format.__hash__": [[243, null]], "skbio.io.registry.Format.__le__": [[244, null]], "skbio.io.registry.Format.__lt__": [[245, null]], "skbio.io.registry.Format.__ne__": [[246, null]], "skbio.io.registry.Format.__str__": [[247, null]], "skbio.io.registry.Format.reader": [[248, null]], "skbio.io.registry.Format.sniffer": [[249, null]], "skbio.io.registry.Format.writer": [[250, null]], "skbio.io.registry.IORegistry": [[251, null]], "skbio.io.registry.IORegistry.__eq__": [[252, null]], "skbio.io.registry.IORegistry.__ge__": [[253, null]], "skbio.io.registry.IORegistry.__getstate__": [[254, null]], "skbio.io.registry.IORegistry.__gt__": [[255, null]], "skbio.io.registry.IORegistry.__hash__": [[256, null]], "skbio.io.registry.IORegistry.__le__": [[257, null]], "skbio.io.registry.IORegistry.__lt__": [[258, null]], "skbio.io.registry.IORegistry.__ne__": [[259, null]], "skbio.io.registry.IORegistry.__str__": [[260, null]], "skbio.io.registry.IORegistry.add_format": [[261, null]], "skbio.io.registry.IORegistry.create_format": [[262, null]], "skbio.io.registry.IORegistry.get_reader": [[263, null]], "skbio.io.registry.IORegistry.get_sniffer": [[264, null]], "skbio.io.registry.IORegistry.get_writer": [[265, null]], "skbio.io.registry.IORegistry.list_read_formats": [[266, null]], "skbio.io.registry.IORegistry.list_write_formats": [[267, null]], "skbio.io.registry.IORegistry.monkey_patch": [[268, null]], "skbio.io.registry.IORegistry.read": [[269, null]], "skbio.io.registry.IORegistry.sniff": [[270, null]], "skbio.io.registry.IORegistry.write": [[271, null]], "skbio.io.registry.create_format": [[272, null]], "skbio.io.registry.read": [[273, null]], "skbio.io.registry.sniff": [[274, null]], "skbio.io.registry.write": [[275, null]], "skbio.io.util.open": [[277, null]], "skbio.io.util.open_file": [[278, null]], "skbio.io.util.open_files": [[279, null]], "skbio.metadata.CategoricalMetadataColumn": [[280, null]], "skbio.metadata.CategoricalMetadataColumn.__eq__": [[281, null]], "skbio.metadata.CategoricalMetadataColumn.__ge__": [[282, null]], "skbio.metadata.CategoricalMetadataColumn.__getstate__": [[283, null]], "skbio.metadata.CategoricalMetadataColumn.__gt__": [[284, null]], "skbio.metadata.CategoricalMetadataColumn.__le__": [[285, null]], "skbio.metadata.CategoricalMetadataColumn.__lt__": [[286, null]], "skbio.metadata.CategoricalMetadataColumn.__ne__": [[287, null]], "skbio.metadata.CategoricalMetadataColumn.__str__": [[288, null]], "skbio.metadata.CategoricalMetadataColumn.drop_missing_values": [[289, null]], "skbio.metadata.CategoricalMetadataColumn.filter_ids": [[290, null]], "skbio.metadata.CategoricalMetadataColumn.get_ids": [[291, null]], "skbio.metadata.CategoricalMetadataColumn.get_missing": [[292, null]], "skbio.metadata.CategoricalMetadataColumn.get_value": [[293, null]], "skbio.metadata.CategoricalMetadataColumn.has_missing_values": [[294, null]], "skbio.metadata.CategoricalMetadataColumn.save": [[295, null]], "skbio.metadata.CategoricalMetadataColumn.to_dataframe": [[296, null]], "skbio.metadata.CategoricalMetadataColumn.to_series": [[297, null]], "skbio.metadata.Interval": [[298, null]], "skbio.metadata.Interval.__eq__": [[299, null]], "skbio.metadata.Interval.__ge__": [[300, null]], "skbio.metadata.Interval.__getstate__": [[301, null]], "skbio.metadata.Interval.__gt__": [[302, null]], "skbio.metadata.Interval.__le__": [[303, null]], "skbio.metadata.Interval.__lt__": [[304, null]], "skbio.metadata.Interval.__ne__": [[305, null]], "skbio.metadata.Interval.__str__": [[306, null]], "skbio.metadata.Interval.drop": [[307, null]], "skbio.metadata.IntervalMetadata": [[308, null]], "skbio.metadata.IntervalMetadata.__copy__": [[309, null]], "skbio.metadata.IntervalMetadata.__deepcopy__": [[310, null]], "skbio.metadata.IntervalMetadata.__eq__": [[311, null]], "skbio.metadata.IntervalMetadata.__ge__": [[312, null]], "skbio.metadata.IntervalMetadata.__getstate__": [[313, null]], "skbio.metadata.IntervalMetadata.__gt__": [[314, null]], "skbio.metadata.IntervalMetadata.__le__": [[315, null]], "skbio.metadata.IntervalMetadata.__lt__": [[316, null]], "skbio.metadata.IntervalMetadata.__ne__": [[317, null]], "skbio.metadata.IntervalMetadata.__str__": [[318, null]], "skbio.metadata.IntervalMetadata.add": [[319, null]], "skbio.metadata.IntervalMetadata.concat": [[320, null]], "skbio.metadata.IntervalMetadata.drop": [[321, null]], "skbio.metadata.IntervalMetadata.merge": [[322, null]], "skbio.metadata.IntervalMetadata.query": [[323, null]], "skbio.metadata.IntervalMetadata.read": [[324, null]], "skbio.metadata.IntervalMetadata.sort": [[325, null]], "skbio.metadata.IntervalMetadata.write": [[326, null]], "skbio.metadata.MetadataColumn": [[327, null]], "skbio.metadata.MetadataColumn.__eq__": [[328, null]], "skbio.metadata.MetadataColumn.__ge__": [[329, null]], "skbio.metadata.MetadataColumn.__getstate__": [[330, null]], "skbio.metadata.MetadataColumn.__gt__": [[331, null]], "skbio.metadata.MetadataColumn.__le__": [[332, null]], "skbio.metadata.MetadataColumn.__lt__": [[333, null]], "skbio.metadata.MetadataColumn.__ne__": [[334, null]], "skbio.metadata.MetadataColumn.__str__": [[335, null]], "skbio.metadata.MetadataColumn.drop_missing_values": [[336, null]], "skbio.metadata.MetadataColumn.filter_ids": [[337, null]], "skbio.metadata.MetadataColumn.get_ids": [[338, null]], "skbio.metadata.MetadataColumn.get_missing": [[339, null]], "skbio.metadata.MetadataColumn.get_value": [[340, null]], "skbio.metadata.MetadataColumn.has_missing_values": [[341, null]], "skbio.metadata.MetadataColumn.save": [[342, null]], "skbio.metadata.MetadataColumn.to_dataframe": [[343, null]], "skbio.metadata.MetadataColumn.to_series": [[344, null]], "skbio.metadata.NumericMetadataColumn": [[345, null]], "skbio.metadata.NumericMetadataColumn.__eq__": [[346, null]], "skbio.metadata.NumericMetadataColumn.__ge__": [[347, null]], "skbio.metadata.NumericMetadataColumn.__getstate__": [[348, null]], "skbio.metadata.NumericMetadataColumn.__gt__": [[349, null]], "skbio.metadata.NumericMetadataColumn.__le__": [[350, null]], "skbio.metadata.NumericMetadataColumn.__lt__": [[351, null]], "skbio.metadata.NumericMetadataColumn.__ne__": [[352, null]], "skbio.metadata.NumericMetadataColumn.__str__": [[353, null]], "skbio.metadata.NumericMetadataColumn.drop_missing_values": [[354, null]], "skbio.metadata.NumericMetadataColumn.filter_ids": [[355, null]], "skbio.metadata.NumericMetadataColumn.get_ids": [[356, null]], "skbio.metadata.NumericMetadataColumn.get_missing": [[357, null]], "skbio.metadata.NumericMetadataColumn.get_value": [[358, null]], "skbio.metadata.NumericMetadataColumn.has_missing_values": [[359, null]], "skbio.metadata.NumericMetadataColumn.save": [[360, null]], "skbio.metadata.NumericMetadataColumn.to_dataframe": [[361, null]], "skbio.metadata.NumericMetadataColumn.to_series": [[362, null]], "skbio.metadata.SampleMetadata": [[363, null]], "skbio.metadata.SampleMetadata.__eq__": [[364, null]], "skbio.metadata.SampleMetadata.__ge__": [[365, null]], "skbio.metadata.SampleMetadata.__getstate__": [[366, null]], "skbio.metadata.SampleMetadata.__gt__": [[367, null]], "skbio.metadata.SampleMetadata.__le__": [[368, null]], "skbio.metadata.SampleMetadata.__lt__": [[369, null]], "skbio.metadata.SampleMetadata.__ne__": [[370, null]], "skbio.metadata.SampleMetadata.__str__": [[371, null]], "skbio.metadata.SampleMetadata.filter_columns": [[372, null]], "skbio.metadata.SampleMetadata.filter_ids": [[373, null]], "skbio.metadata.SampleMetadata.get_column": [[374, null]], "skbio.metadata.SampleMetadata.get_ids": [[375, null]], "skbio.metadata.SampleMetadata.load": [[376, null]], "skbio.metadata.SampleMetadata.merge": [[377, null]], "skbio.metadata.SampleMetadata.read": [[378, null]], "skbio.metadata.SampleMetadata.save": [[379, null]], "skbio.metadata.SampleMetadata.to_dataframe": [[380, null]], "skbio.metadata.SampleMetadata.write": [[381, null]], "skbio.sequence.DNA": [[382, null]], "skbio.sequence.DNA.__bool__": [[383, null]], "skbio.sequence.DNA.__contains__": [[384, null]], "skbio.sequence.DNA.__copy__": [[385, null]], "skbio.sequence.DNA.__deepcopy__": [[386, null]], "skbio.sequence.DNA.__eq__": [[387, null]], "skbio.sequence.DNA.__ge__": [[388, null]], "skbio.sequence.DNA.__getitem__": [[389, null]], "skbio.sequence.DNA.__getstate__": [[390, null]], "skbio.sequence.DNA.__gt__": [[391, null]], "skbio.sequence.DNA.__iter__": [[392, null]], "skbio.sequence.DNA.__le__": [[393, null]], "skbio.sequence.DNA.__len__": [[394, null]], "skbio.sequence.DNA.__lt__": [[395, null]], "skbio.sequence.DNA.__ne__": [[396, null]], "skbio.sequence.DNA.__reversed__": [[397, null]], "skbio.sequence.DNA.__str__": [[398, null]], "skbio.sequence.DNA.complement": [[399, null]], "skbio.sequence.DNA.concat": [[400, null]], "skbio.sequence.DNA.count": [[401, null]], "skbio.sequence.DNA.definites": [[402, null]], "skbio.sequence.DNA.degap": [[403, null]], "skbio.sequence.DNA.degenerates": [[404, null]], "skbio.sequence.DNA.distance": [[405, null]], "skbio.sequence.DNA.expand_degenerates": [[406, null]], "skbio.sequence.DNA.find_motifs": [[407, null]], "skbio.sequence.DNA.find_with_regex": [[408, null]], "skbio.sequence.DNA.frequencies": [[409, null]], "skbio.sequence.DNA.gaps": [[410, null]], "skbio.sequence.DNA.gc_content": [[411, null]], "skbio.sequence.DNA.gc_frequency": [[412, null]], "skbio.sequence.DNA.has_definites": [[413, null]], "skbio.sequence.DNA.has_degenerates": [[414, null]], "skbio.sequence.DNA.has_gaps": [[415, null]], "skbio.sequence.DNA.has_interval_metadata": [[416, null]], "skbio.sequence.DNA.has_metadata": [[417, null]], "skbio.sequence.DNA.has_nondegenerates": [[418, null]], "skbio.sequence.DNA.has_positional_metadata": [[419, null]], "skbio.sequence.DNA.index": [[420, null]], "skbio.sequence.DNA.is_reverse_complement": [[421, null]], "skbio.sequence.DNA.iter_contiguous": [[422, null]], "skbio.sequence.DNA.iter_kmers": [[423, null]], "skbio.sequence.DNA.kmer_frequencies": [[424, null]], "skbio.sequence.DNA.lowercase": [[425, null]], "skbio.sequence.DNA.match_frequency": [[426, null]], "skbio.sequence.DNA.matches": [[427, null]], "skbio.sequence.DNA.mismatch_frequency": [[428, null]], "skbio.sequence.DNA.mismatches": [[429, null]], "skbio.sequence.DNA.nondegenerates": [[430, null]], "skbio.sequence.DNA.read": [[431, null]], "skbio.sequence.DNA.replace": [[432, null]], "skbio.sequence.DNA.reverse_complement": [[433, null]], "skbio.sequence.DNA.to_definites": [[434, null]], "skbio.sequence.DNA.to_indices": [[435, null]], "skbio.sequence.DNA.to_regex": [[436, null]], "skbio.sequence.DNA.transcribe": [[437, null]], "skbio.sequence.DNA.translate": [[438, null]], "skbio.sequence.DNA.translate_six_frames": [[439, null]], "skbio.sequence.DNA.write": [[440, null]], "skbio.sequence.GeneticCode": [[441, null]], "skbio.sequence.GeneticCode.__eq__": [[442, null]], "skbio.sequence.GeneticCode.__ge__": [[443, null]], "skbio.sequence.GeneticCode.__getstate__": [[444, null]], "skbio.sequence.GeneticCode.__gt__": [[445, null]], "skbio.sequence.GeneticCode.__le__": [[446, null]], "skbio.sequence.GeneticCode.__lt__": [[447, null]], "skbio.sequence.GeneticCode.__ne__": [[448, null]], "skbio.sequence.GeneticCode.__str__": [[449, null]], "skbio.sequence.GeneticCode.from_ncbi": [[450, null]], "skbio.sequence.GeneticCode.translate": [[451, null]], "skbio.sequence.GeneticCode.translate_six_frames": [[452, null]], "skbio.sequence.GrammaredSequence": [[453, null]], "skbio.sequence.GrammaredSequence.__bool__": [[454, null]], "skbio.sequence.GrammaredSequence.__contains__": [[455, null]], "skbio.sequence.GrammaredSequence.__copy__": [[456, null]], "skbio.sequence.GrammaredSequence.__deepcopy__": [[457, null]], "skbio.sequence.GrammaredSequence.__eq__": [[458, null]], "skbio.sequence.GrammaredSequence.__ge__": [[459, null]], "skbio.sequence.GrammaredSequence.__getitem__": [[460, null]], "skbio.sequence.GrammaredSequence.__getstate__": [[461, null]], "skbio.sequence.GrammaredSequence.__gt__": [[462, null]], "skbio.sequence.GrammaredSequence.__iter__": [[463, null]], "skbio.sequence.GrammaredSequence.__le__": [[464, null]], "skbio.sequence.GrammaredSequence.__len__": [[465, null]], "skbio.sequence.GrammaredSequence.__lt__": [[466, null]], "skbio.sequence.GrammaredSequence.__ne__": [[467, null]], "skbio.sequence.GrammaredSequence.__reversed__": [[468, null]], "skbio.sequence.GrammaredSequence.__str__": [[469, null]], "skbio.sequence.GrammaredSequence.concat": [[470, null]], "skbio.sequence.GrammaredSequence.count": [[471, null]], "skbio.sequence.GrammaredSequence.definites": [[472, null]], "skbio.sequence.GrammaredSequence.degap": [[473, null]], "skbio.sequence.GrammaredSequence.degenerates": [[474, null]], "skbio.sequence.GrammaredSequence.distance": [[475, null]], "skbio.sequence.GrammaredSequence.expand_degenerates": [[476, null]], "skbio.sequence.GrammaredSequence.find_motifs": [[477, null]], "skbio.sequence.GrammaredSequence.find_with_regex": [[478, null]], "skbio.sequence.GrammaredSequence.frequencies": [[479, null]], "skbio.sequence.GrammaredSequence.gaps": [[480, null]], "skbio.sequence.GrammaredSequence.has_definites": [[481, null]], "skbio.sequence.GrammaredSequence.has_degenerates": [[482, null]], "skbio.sequence.GrammaredSequence.has_gaps": [[483, null]], "skbio.sequence.GrammaredSequence.has_interval_metadata": [[484, null]], "skbio.sequence.GrammaredSequence.has_metadata": [[485, null]], "skbio.sequence.GrammaredSequence.has_nondegenerates": [[486, null]], "skbio.sequence.GrammaredSequence.has_positional_metadata": [[487, null]], "skbio.sequence.GrammaredSequence.index": [[488, null]], "skbio.sequence.GrammaredSequence.iter_contiguous": [[489, null]], "skbio.sequence.GrammaredSequence.iter_kmers": [[490, null]], "skbio.sequence.GrammaredSequence.kmer_frequencies": [[491, null]], "skbio.sequence.GrammaredSequence.lowercase": [[492, null]], "skbio.sequence.GrammaredSequence.match_frequency": [[493, null]], "skbio.sequence.GrammaredSequence.matches": [[494, null]], "skbio.sequence.GrammaredSequence.mismatch_frequency": [[495, null]], "skbio.sequence.GrammaredSequence.mismatches": [[496, null]], "skbio.sequence.GrammaredSequence.nondegenerates": [[497, null]], "skbio.sequence.GrammaredSequence.read": [[498, null]], "skbio.sequence.GrammaredSequence.replace": [[499, null]], "skbio.sequence.GrammaredSequence.to_definites": [[500, null]], "skbio.sequence.GrammaredSequence.to_indices": [[501, null]], "skbio.sequence.GrammaredSequence.to_regex": [[502, null]], "skbio.sequence.GrammaredSequence.write": [[503, null]], "skbio.sequence.Protein": [[504, null]], "skbio.sequence.Protein.__bool__": [[505, null]], "skbio.sequence.Protein.__contains__": [[506, null]], "skbio.sequence.Protein.__copy__": [[507, null]], "skbio.sequence.Protein.__deepcopy__": [[508, null]], "skbio.sequence.Protein.__eq__": [[509, null]], "skbio.sequence.Protein.__ge__": [[510, null]], "skbio.sequence.Protein.__getitem__": [[511, null]], "skbio.sequence.Protein.__getstate__": [[512, null]], "skbio.sequence.Protein.__gt__": [[513, null]], "skbio.sequence.Protein.__iter__": [[514, null]], "skbio.sequence.Protein.__le__": [[515, null]], "skbio.sequence.Protein.__len__": [[516, null]], "skbio.sequence.Protein.__lt__": [[517, null]], "skbio.sequence.Protein.__ne__": [[518, null]], "skbio.sequence.Protein.__reversed__": [[519, null]], "skbio.sequence.Protein.__str__": [[520, null]], "skbio.sequence.Protein.concat": [[521, null]], "skbio.sequence.Protein.count": [[522, null]], "skbio.sequence.Protein.definites": [[523, null]], "skbio.sequence.Protein.degap": [[524, null]], "skbio.sequence.Protein.degenerates": [[525, null]], "skbio.sequence.Protein.distance": [[526, null]], "skbio.sequence.Protein.expand_degenerates": [[527, null]], "skbio.sequence.Protein.find_motifs": [[528, null]], "skbio.sequence.Protein.find_with_regex": [[529, null]], "skbio.sequence.Protein.frequencies": [[530, null]], "skbio.sequence.Protein.gaps": [[531, null]], "skbio.sequence.Protein.has_definites": [[532, null]], "skbio.sequence.Protein.has_degenerates": [[533, null]], "skbio.sequence.Protein.has_gaps": [[534, null]], "skbio.sequence.Protein.has_interval_metadata": [[535, null]], "skbio.sequence.Protein.has_metadata": [[536, null]], "skbio.sequence.Protein.has_nondegenerates": [[537, null]], "skbio.sequence.Protein.has_positional_metadata": [[538, null]], "skbio.sequence.Protein.has_stops": [[539, null]], "skbio.sequence.Protein.index": [[540, null]], "skbio.sequence.Protein.iter_contiguous": [[541, null]], "skbio.sequence.Protein.iter_kmers": [[542, null]], "skbio.sequence.Protein.kmer_frequencies": [[543, null]], "skbio.sequence.Protein.lowercase": [[544, null]], "skbio.sequence.Protein.match_frequency": [[545, null]], "skbio.sequence.Protein.matches": [[546, null]], "skbio.sequence.Protein.mismatch_frequency": [[547, null]], "skbio.sequence.Protein.mismatches": [[548, null]], "skbio.sequence.Protein.nondegenerates": [[549, null]], "skbio.sequence.Protein.read": [[550, null]], "skbio.sequence.Protein.replace": [[551, null]], "skbio.sequence.Protein.stops": [[552, null]], "skbio.sequence.Protein.to_definites": [[553, null]], "skbio.sequence.Protein.to_indices": [[554, null]], "skbio.sequence.Protein.to_regex": [[555, null]], "skbio.sequence.Protein.write": [[556, null]], "skbio.sequence.RNA": [[557, null]], "skbio.sequence.RNA.__bool__": [[558, null]], "skbio.sequence.RNA.__contains__": [[559, null]], "skbio.sequence.RNA.__copy__": [[560, null]], "skbio.sequence.RNA.__deepcopy__": [[561, null]], "skbio.sequence.RNA.__eq__": [[562, null]], "skbio.sequence.RNA.__ge__": [[563, null]], "skbio.sequence.RNA.__getitem__": [[564, null]], "skbio.sequence.RNA.__getstate__": [[565, null]], "skbio.sequence.RNA.__gt__": [[566, null]], "skbio.sequence.RNA.__iter__": [[567, null]], "skbio.sequence.RNA.__le__": [[568, null]], "skbio.sequence.RNA.__len__": [[569, null]], "skbio.sequence.RNA.__lt__": [[570, null]], "skbio.sequence.RNA.__ne__": [[571, null]], "skbio.sequence.RNA.__reversed__": [[572, null]], "skbio.sequence.RNA.__str__": [[573, null]], "skbio.sequence.RNA.complement": [[574, null]], "skbio.sequence.RNA.concat": [[575, null]], "skbio.sequence.RNA.count": [[576, null]], "skbio.sequence.RNA.definites": [[577, null]], "skbio.sequence.RNA.degap": [[578, null]], "skbio.sequence.RNA.degenerates": [[579, null]], "skbio.sequence.RNA.distance": [[580, null]], "skbio.sequence.RNA.expand_degenerates": [[581, null]], "skbio.sequence.RNA.find_motifs": [[582, null]], "skbio.sequence.RNA.find_with_regex": [[583, null]], "skbio.sequence.RNA.frequencies": [[584, null]], "skbio.sequence.RNA.gaps": [[585, null]], "skbio.sequence.RNA.gc_content": [[586, null]], "skbio.sequence.RNA.gc_frequency": [[587, null]], "skbio.sequence.RNA.has_definites": [[588, null]], "skbio.sequence.RNA.has_degenerates": [[589, null]], "skbio.sequence.RNA.has_gaps": [[590, null]], "skbio.sequence.RNA.has_interval_metadata": [[591, null]], "skbio.sequence.RNA.has_metadata": [[592, null]], "skbio.sequence.RNA.has_nondegenerates": [[593, null]], "skbio.sequence.RNA.has_positional_metadata": [[594, null]], "skbio.sequence.RNA.index": [[595, null]], "skbio.sequence.RNA.is_reverse_complement": [[596, null]], "skbio.sequence.RNA.iter_contiguous": [[597, null]], "skbio.sequence.RNA.iter_kmers": [[598, null]], "skbio.sequence.RNA.kmer_frequencies": [[599, null]], "skbio.sequence.RNA.lowercase": [[600, null]], "skbio.sequence.RNA.match_frequency": [[601, null]], "skbio.sequence.RNA.matches": [[602, null]], "skbio.sequence.RNA.mismatch_frequency": [[603, null]], "skbio.sequence.RNA.mismatches": [[604, null]], "skbio.sequence.RNA.nondegenerates": [[605, null]], "skbio.sequence.RNA.read": [[606, null]], "skbio.sequence.RNA.replace": [[607, null]], "skbio.sequence.RNA.reverse_complement": [[608, null]], "skbio.sequence.RNA.reverse_transcribe": [[609, null]], "skbio.sequence.RNA.to_definites": [[610, null]], "skbio.sequence.RNA.to_indices": [[611, null]], "skbio.sequence.RNA.to_regex": [[612, null]], "skbio.sequence.RNA.translate": [[613, null]], "skbio.sequence.RNA.translate_six_frames": [[614, null]], "skbio.sequence.RNA.write": [[615, null]], "skbio.sequence.Sequence": [[616, null]], "skbio.sequence.Sequence.__bool__": [[617, null]], "skbio.sequence.Sequence.__contains__": [[618, null]], "skbio.sequence.Sequence.__copy__": [[619, null]], "skbio.sequence.Sequence.__deepcopy__": [[620, null]], "skbio.sequence.Sequence.__eq__": [[621, null]], "skbio.sequence.Sequence.__ge__": [[622, null]], "skbio.sequence.Sequence.__getitem__": [[623, null]], "skbio.sequence.Sequence.__getstate__": [[624, null]], "skbio.sequence.Sequence.__gt__": [[625, null]], "skbio.sequence.Sequence.__iter__": [[626, null]], "skbio.sequence.Sequence.__le__": [[627, null]], "skbio.sequence.Sequence.__len__": [[628, null]], "skbio.sequence.Sequence.__lt__": [[629, null]], "skbio.sequence.Sequence.__ne__": [[630, null]], "skbio.sequence.Sequence.__reversed__": [[631, null]], "skbio.sequence.Sequence.__str__": [[632, null]], "skbio.sequence.Sequence.concat": [[633, null]], "skbio.sequence.Sequence.count": [[634, null]], "skbio.sequence.Sequence.distance": [[635, null]], "skbio.sequence.Sequence.find_with_regex": [[636, null]], "skbio.sequence.Sequence.frequencies": [[637, null]], "skbio.sequence.Sequence.has_interval_metadata": [[638, null]], "skbio.sequence.Sequence.has_metadata": [[639, null]], "skbio.sequence.Sequence.has_positional_metadata": [[640, null]], "skbio.sequence.Sequence.index": [[641, null]], "skbio.sequence.Sequence.iter_contiguous": [[642, null]], "skbio.sequence.Sequence.iter_kmers": [[643, null]], "skbio.sequence.Sequence.kmer_frequencies": [[644, null]], "skbio.sequence.Sequence.lowercase": [[645, null]], "skbio.sequence.Sequence.match_frequency": [[646, null]], "skbio.sequence.Sequence.matches": [[647, null]], "skbio.sequence.Sequence.mismatch_frequency": [[648, null]], "skbio.sequence.Sequence.mismatches": [[649, null]], "skbio.sequence.Sequence.read": [[650, null]], "skbio.sequence.Sequence.replace": [[651, null]], "skbio.sequence.Sequence.to_indices": [[652, null]], "skbio.sequence.Sequence.write": [[653, null]], "skbio.sequence.SubstitutionMatrix": [[654, null]], "skbio.sequence.SubstitutionMatrix.__contains__": [[655, null]], "skbio.sequence.SubstitutionMatrix.__eq__": [[656, null]], "skbio.sequence.SubstitutionMatrix.__ge__": [[657, null]], "skbio.sequence.SubstitutionMatrix.__getitem__": [[658, null]], "skbio.sequence.SubstitutionMatrix.__getstate__": [[659, null]], "skbio.sequence.SubstitutionMatrix.__gt__": [[660, null]], "skbio.sequence.SubstitutionMatrix.__le__": [[661, null]], "skbio.sequence.SubstitutionMatrix.__lt__": [[662, null]], "skbio.sequence.SubstitutionMatrix.__ne__": [[663, null]], "skbio.sequence.SubstitutionMatrix.__str__": [[664, null]], "skbio.sequence.SubstitutionMatrix.between": [[665, null]], "skbio.sequence.SubstitutionMatrix.by_name": [[666, null]], "skbio.sequence.SubstitutionMatrix.copy": [[667, null]], "skbio.sequence.SubstitutionMatrix.filter": [[668, null]], "skbio.sequence.SubstitutionMatrix.from_dict": [[669, null]], "skbio.sequence.SubstitutionMatrix.from_iterable": [[670, null]], "skbio.sequence.SubstitutionMatrix.get_names": [[671, null]], "skbio.sequence.SubstitutionMatrix.identity": [[672, null]], "skbio.sequence.SubstitutionMatrix.index": [[673, null]], "skbio.sequence.SubstitutionMatrix.plot": [[674, null]], "skbio.sequence.SubstitutionMatrix.read": [[675, null]], "skbio.sequence.SubstitutionMatrix.redundant_form": [[676, null]], "skbio.sequence.SubstitutionMatrix.rename": [[677, null]], "skbio.sequence.SubstitutionMatrix.to_data_frame": [[678, null]], "skbio.sequence.SubstitutionMatrix.to_dict": [[679, null]], "skbio.sequence.SubstitutionMatrix.transpose": [[680, null]], "skbio.sequence.SubstitutionMatrix.within": [[681, null]], "skbio.sequence.SubstitutionMatrix.write": [[682, null]], "skbio.sequence.distance.hamming": [[684, null]], "skbio.sequence.distance.kmer_distance": [[685, null]], "skbio.stats.composition.alr": [[687, null]], "skbio.stats.composition.alr_inv": [[688, null]], "skbio.stats.composition.ancom": [[689, null]], "skbio.stats.composition.centralize": [[690, null]], "skbio.stats.composition.closure": [[691, null]], "skbio.stats.composition.clr": [[692, null]], "skbio.stats.composition.clr_inv": [[693, null]], "skbio.stats.composition.dirmult_ttest": [[694, null]], "skbio.stats.composition.ilr": [[695, null]], "skbio.stats.composition.ilr_inv": [[696, null]], "skbio.stats.composition.inner": [[697, null]], "skbio.stats.composition.multi_replace": [[698, null]], "skbio.stats.composition.multiplicative_replacement": [[699, null]], "skbio.stats.composition.pairwise_vlr": [[700, null]], "skbio.stats.composition.perturb": [[701, null]], "skbio.stats.composition.perturb_inv": [[702, null]], "skbio.stats.composition.power": [[703, null]], "skbio.stats.composition.sbp_basis": [[704, null]], "skbio.stats.composition.tree_basis": [[705, null]], "skbio.stats.composition.vlr": [[706, null]], "skbio.stats.distance.DissimilarityMatrix": [[708, null]], "skbio.stats.distance.DissimilarityMatrix.__contains__": [[709, null]], "skbio.stats.distance.DissimilarityMatrix.__eq__": [[710, null]], "skbio.stats.distance.DissimilarityMatrix.__ge__": [[711, null]], "skbio.stats.distance.DissimilarityMatrix.__getitem__": [[712, null]], "skbio.stats.distance.DissimilarityMatrix.__getstate__": [[713, null]], "skbio.stats.distance.DissimilarityMatrix.__gt__": [[714, null]], "skbio.stats.distance.DissimilarityMatrix.__le__": [[715, null]], "skbio.stats.distance.DissimilarityMatrix.__lt__": [[716, null]], "skbio.stats.distance.DissimilarityMatrix.__ne__": [[717, null]], "skbio.stats.distance.DissimilarityMatrix.__str__": [[718, null]], "skbio.stats.distance.DissimilarityMatrix.between": [[719, null]], "skbio.stats.distance.DissimilarityMatrix.copy": [[720, null]], "skbio.stats.distance.DissimilarityMatrix.filter": [[721, null]], "skbio.stats.distance.DissimilarityMatrix.from_iterable": [[722, null]], "skbio.stats.distance.DissimilarityMatrix.index": [[723, null]], "skbio.stats.distance.DissimilarityMatrix.plot": [[724, null]], "skbio.stats.distance.DissimilarityMatrix.read": [[725, null]], "skbio.stats.distance.DissimilarityMatrix.redundant_form": [[726, null]], "skbio.stats.distance.DissimilarityMatrix.rename": [[727, null]], "skbio.stats.distance.DissimilarityMatrix.to_data_frame": [[728, null]], "skbio.stats.distance.DissimilarityMatrix.transpose": [[729, null]], "skbio.stats.distance.DissimilarityMatrix.within": [[730, null]], "skbio.stats.distance.DissimilarityMatrix.write": [[731, null]], "skbio.stats.distance.DistanceMatrix": [[732, null]], "skbio.stats.distance.DistanceMatrix.__contains__": [[733, null]], "skbio.stats.distance.DistanceMatrix.__eq__": [[734, null]], "skbio.stats.distance.DistanceMatrix.__ge__": [[735, null]], "skbio.stats.distance.DistanceMatrix.__getitem__": [[736, null]], "skbio.stats.distance.DistanceMatrix.__getstate__": [[737, null]], "skbio.stats.distance.DistanceMatrix.__gt__": [[738, null]], "skbio.stats.distance.DistanceMatrix.__le__": [[739, null]], "skbio.stats.distance.DistanceMatrix.__lt__": [[740, null]], "skbio.stats.distance.DistanceMatrix.__ne__": [[741, null]], "skbio.stats.distance.DistanceMatrix.__str__": [[742, null]], "skbio.stats.distance.DistanceMatrix.between": [[743, null]], "skbio.stats.distance.DistanceMatrix.condensed_form": [[744, null]], "skbio.stats.distance.DistanceMatrix.copy": [[745, null]], "skbio.stats.distance.DistanceMatrix.filter": [[746, null]], "skbio.stats.distance.DistanceMatrix.from_iterable": [[747, null]], "skbio.stats.distance.DistanceMatrix.index": [[748, null]], "skbio.stats.distance.DistanceMatrix.permute": [[749, null]], "skbio.stats.distance.DistanceMatrix.plot": [[750, null]], "skbio.stats.distance.DistanceMatrix.read": [[751, null]], "skbio.stats.distance.DistanceMatrix.redundant_form": [[752, null]], "skbio.stats.distance.DistanceMatrix.rename": [[753, null]], "skbio.stats.distance.DistanceMatrix.to_data_frame": [[754, null]], "skbio.stats.distance.DistanceMatrix.to_series": [[755, null]], "skbio.stats.distance.DistanceMatrix.transpose": [[756, null]], "skbio.stats.distance.DistanceMatrix.within": [[757, null]], "skbio.stats.distance.DistanceMatrix.write": [[758, null]], "skbio.stats.distance.anosim": [[759, null]], "skbio.stats.distance.bioenv": [[760, null]], "skbio.stats.distance.mantel": [[761, null]], "skbio.stats.distance.permanova": [[762, null]], "skbio.stats.distance.permdisp": [[763, null]], "skbio.stats.distance.pwmantel": [[764, null]], "skbio.stats.distance.randdm": [[765, null]], "skbio.stats.evolve.hommola_cospeciation": [[767, null]], "skbio.stats.gradient.AverageGradientANOVA": [[769, null]], "skbio.stats.gradient.AverageGradientANOVA.__eq__": [[770, null]], "skbio.stats.gradient.AverageGradientANOVA.__ge__": [[771, null]], "skbio.stats.gradient.AverageGradientANOVA.__getstate__": [[772, null]], "skbio.stats.gradient.AverageGradientANOVA.__gt__": [[773, null]], "skbio.stats.gradient.AverageGradientANOVA.__hash__": [[774, null]], "skbio.stats.gradient.AverageGradientANOVA.__le__": [[775, null]], "skbio.stats.gradient.AverageGradientANOVA.__lt__": [[776, null]], "skbio.stats.gradient.AverageGradientANOVA.__ne__": [[777, null]], "skbio.stats.gradient.AverageGradientANOVA.__str__": [[778, null]], "skbio.stats.gradient.AverageGradientANOVA.get_trajectories": [[779, null]], "skbio.stats.gradient.CategoryResults": [[780, null]], "skbio.stats.gradient.CategoryResults.__eq__": [[781, null]], "skbio.stats.gradient.CategoryResults.__ge__": [[782, null]], "skbio.stats.gradient.CategoryResults.__getstate__": [[783, null]], "skbio.stats.gradient.CategoryResults.__gt__": [[784, null]], "skbio.stats.gradient.CategoryResults.__hash__": [[785, null]], "skbio.stats.gradient.CategoryResults.__le__": [[786, null]], "skbio.stats.gradient.CategoryResults.__lt__": [[787, null]], "skbio.stats.gradient.CategoryResults.__ne__": [[788, null]], "skbio.stats.gradient.CategoryResults.__str__": [[789, null]], "skbio.stats.gradient.CategoryResults.to_files": [[790, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[791, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__": [[792, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__": [[793, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__": [[794, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__": [[795, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__": [[796, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__": [[797, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__": [[798, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__": [[799, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__": [[800, null]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories": [[801, null]], "skbio.stats.gradient.GradientANOVA": [[802, null]], "skbio.stats.gradient.GradientANOVA.__eq__": [[803, null]], "skbio.stats.gradient.GradientANOVA.__ge__": [[804, null]], "skbio.stats.gradient.GradientANOVA.__getstate__": [[805, null]], "skbio.stats.gradient.GradientANOVA.__gt__": [[806, null]], "skbio.stats.gradient.GradientANOVA.__hash__": [[807, null]], "skbio.stats.gradient.GradientANOVA.__le__": [[808, null]], "skbio.stats.gradient.GradientANOVA.__lt__": [[809, null]], "skbio.stats.gradient.GradientANOVA.__ne__": [[810, null]], "skbio.stats.gradient.GradientANOVA.__str__": [[811, null]], "skbio.stats.gradient.GradientANOVA.get_trajectories": [[812, null]], "skbio.stats.gradient.GradientANOVAResults": [[813, null]], "skbio.stats.gradient.GradientANOVAResults.__eq__": [[814, null]], "skbio.stats.gradient.GradientANOVAResults.__ge__": [[815, null]], "skbio.stats.gradient.GradientANOVAResults.__getstate__": [[816, null]], "skbio.stats.gradient.GradientANOVAResults.__gt__": [[817, null]], "skbio.stats.gradient.GradientANOVAResults.__hash__": [[818, null]], "skbio.stats.gradient.GradientANOVAResults.__le__": [[819, null]], "skbio.stats.gradient.GradientANOVAResults.__lt__": [[820, null]], "skbio.stats.gradient.GradientANOVAResults.__ne__": [[821, null]], "skbio.stats.gradient.GradientANOVAResults.__str__": [[822, null]], "skbio.stats.gradient.GradientANOVAResults.to_files": [[823, null]], "skbio.stats.gradient.GroupResults": [[824, null]], "skbio.stats.gradient.GroupResults.__eq__": [[825, null]], "skbio.stats.gradient.GroupResults.__ge__": [[826, null]], "skbio.stats.gradient.GroupResults.__getstate__": [[827, null]], "skbio.stats.gradient.GroupResults.__gt__": [[828, null]], "skbio.stats.gradient.GroupResults.__hash__": [[829, null]], "skbio.stats.gradient.GroupResults.__le__": [[830, null]], "skbio.stats.gradient.GroupResults.__lt__": [[831, null]], "skbio.stats.gradient.GroupResults.__ne__": [[832, null]], "skbio.stats.gradient.GroupResults.__str__": [[833, null]], "skbio.stats.gradient.GroupResults.to_files": [[834, null]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[835, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__": [[836, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__": [[837, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__": [[838, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__": [[839, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__": [[840, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__le__": [[841, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__": [[842, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__": [[843, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.__str__": [[844, null]], "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories": [[845, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[846, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__": [[847, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__": [[848, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__": [[849, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__": [[850, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__": [[851, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__": [[852, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__": [[853, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__": [[854, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__": [[855, null]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories": [[856, null]], "skbio.stats.isubsample": [[857, null]], "skbio.stats.ordination.OrdinationResults": [[859, null]], "skbio.stats.ordination.OrdinationResults.__eq__": [[860, null]], "skbio.stats.ordination.OrdinationResults.__ge__": [[861, null]], "skbio.stats.ordination.OrdinationResults.__getstate__": [[862, null]], "skbio.stats.ordination.OrdinationResults.__gt__": [[863, null]], "skbio.stats.ordination.OrdinationResults.__hash__": [[864, null]], "skbio.stats.ordination.OrdinationResults.__le__": [[865, null]], "skbio.stats.ordination.OrdinationResults.__lt__": [[866, null]], "skbio.stats.ordination.OrdinationResults.__ne__": [[867, null]], "skbio.stats.ordination.OrdinationResults.__str__": [[868, null]], "skbio.stats.ordination.OrdinationResults.plot": [[869, null]], "skbio.stats.ordination.OrdinationResults.read": [[870, null]], "skbio.stats.ordination.OrdinationResults.rename": [[871, null]], "skbio.stats.ordination.OrdinationResults.write": [[872, null]], "skbio.stats.ordination.ca": [[873, null]], "skbio.stats.ordination.cca": [[874, null]], "skbio.stats.ordination.corr": [[875, null]], "skbio.stats.ordination.e_matrix": [[876, null]], "skbio.stats.ordination.f_matrix": [[877, null]], "skbio.stats.ordination.mean_and_std": [[878, null]], "skbio.stats.ordination.pcoa": [[879, null]], "skbio.stats.ordination.pcoa_biplot": [[880, null]], "skbio.stats.ordination.rda": [[881, null]], "skbio.stats.ordination.scale": [[882, null]], "skbio.stats.ordination.svd_rank": [[883, null]], "skbio.stats.power.confidence_bound": [[885, null]], "skbio.stats.power.paired_subsamples": [[886, null]], "skbio.stats.power.subsample_paired_power": [[887, null]], "skbio.stats.power.subsample_power": [[888, null]], "skbio.stats.subsample_counts": [[889, null]], "skbio.table.Table": [[890, null]], "skbio.table.Table.__eq__": [[891, null]], "skbio.table.Table.__ge__": [[892, null]], "skbio.table.Table.__getitem__": [[893, null]], "skbio.table.Table.__getstate__": [[894, null]], "skbio.table.Table.__gt__": [[895, null]], "skbio.table.Table.__iter__": [[896, null]], "skbio.table.Table.__le__": [[897, null]], "skbio.table.Table.__lt__": [[898, null]], "skbio.table.Table.__ne__": [[899, null]], "skbio.table.Table.__str__": [[900, null]], "skbio.table.Table.add_group_metadata": [[901, null]], "skbio.table.Table.add_metadata": [[902, null]], "skbio.table.Table.align_to": [[903, null]], "skbio.table.Table.align_to_dataframe": [[904, null]], "skbio.table.Table.align_tree": [[905, null]], "skbio.table.Table.collapse": [[906, null]], "skbio.table.Table.concat": [[907, null]], "skbio.table.Table.copy": [[908, null]], "skbio.table.Table.data": [[909, null]], "skbio.table.Table.del_metadata": [[910, null]], "skbio.table.Table.delimited_self": [[911, null]], "skbio.table.Table.descriptive_equality": [[912, null]], "skbio.table.Table.exists": [[913, null]], "skbio.table.Table.filter": [[914, null]], "skbio.table.Table.from_adjacency": [[915, null]], "skbio.table.Table.from_hdf5": [[916, null]], "skbio.table.Table.from_json": [[917, null]], "skbio.table.Table.from_tsv": [[918, null]], "skbio.table.Table.get_table_density": [[919, null]], "skbio.table.Table.get_value_by_ids": [[920, null]], "skbio.table.Table.group_metadata": [[921, null]], "skbio.table.Table.head": [[922, null]], "skbio.table.Table.ids": [[923, null]], "skbio.table.Table.index": [[924, null]], "skbio.table.Table.is_empty": [[925, null]], "skbio.table.Table.iter": [[926, null]], "skbio.table.Table.iter_data": [[927, null]], "skbio.table.Table.iter_pairwise": [[928, null]], "skbio.table.Table.length": [[929, null]], "skbio.table.Table.max": [[930, null]], "skbio.table.Table.merge": [[931, null]], "skbio.table.Table.metadata": [[932, null]], "skbio.table.Table.metadata_to_dataframe": [[933, null]], "skbio.table.Table.min": [[934, null]], "skbio.table.Table.nonzero": [[935, null]], "skbio.table.Table.nonzero_counts": [[936, null]], "skbio.table.Table.norm": [[937, null]], "skbio.table.Table.pa": [[938, null]], "skbio.table.Table.partition": [[939, null]], "skbio.table.Table.rankdata": [[940, null]], "skbio.table.Table.read": [[941, null]], "skbio.table.Table.reduce": [[942, null]], "skbio.table.Table.remove_empty": [[943, null]], "skbio.table.Table.sort": [[944, null]], "skbio.table.Table.sort_order": [[945, null]], "skbio.table.Table.subsample": [[946, null]], "skbio.table.Table.sum": [[947, null]], "skbio.table.Table.to_anndata": [[948, null]], "skbio.table.Table.to_dataframe": [[949, null]], "skbio.table.Table.to_hdf5": [[950, null]], "skbio.table.Table.to_json": [[951, null]], "skbio.table.Table.to_tsv": [[952, null]], "skbio.table.Table.transform": [[953, null]], "skbio.table.Table.transpose": [[954, null]], "skbio.table.Table.update_ids": [[955, null]], "skbio.table.Table.write": [[956, null]], "skbio.table.example_table": [[957, null]], "skbio.tree.TreeNode": [[958, null]], "skbio.tree.TreeNode.__copy__": [[959, null]], "skbio.tree.TreeNode.__deepcopy__": [[960, null]], "skbio.tree.TreeNode.__eq__": [[961, null]], "skbio.tree.TreeNode.__ge__": [[962, null]], "skbio.tree.TreeNode.__getitem__": [[963, null]], "skbio.tree.TreeNode.__getstate__": [[964, null]], "skbio.tree.TreeNode.__gt__": [[965, null]], "skbio.tree.TreeNode.__hash__": [[966, null]], "skbio.tree.TreeNode.__iter__": [[967, null]], "skbio.tree.TreeNode.__le__": [[968, null]], "skbio.tree.TreeNode.__len__": [[969, null]], "skbio.tree.TreeNode.__lt__": [[970, null]], "skbio.tree.TreeNode.__ne__": [[971, null]], "skbio.tree.TreeNode.__str__": [[972, null]], "skbio.tree.TreeNode.accumulate_to_ancestor": [[973, null]], "skbio.tree.TreeNode.ancestors": [[974, null]], "skbio.tree.TreeNode.append": [[975, null]], "skbio.tree.TreeNode.ascii_art": [[976, null]], "skbio.tree.TreeNode.assign_ids": [[977, null]], "skbio.tree.TreeNode.assign_supports": [[978, null]], "skbio.tree.TreeNode.bifurcate": [[979, null]], "skbio.tree.TreeNode.cache_attr": [[980, null]], "skbio.tree.TreeNode.compare_rfd": [[981, null]], "skbio.tree.TreeNode.compare_subsets": [[982, null]], "skbio.tree.TreeNode.compare_tip_distances": [[983, null]], "skbio.tree.TreeNode.copy": [[984, null]], "skbio.tree.TreeNode.count": [[985, null]], "skbio.tree.TreeNode.create_caches": [[986, null]], "skbio.tree.TreeNode.deepcopy": [[987, null]], "skbio.tree.TreeNode.descending_branch_length": [[988, null]], "skbio.tree.TreeNode.distance": [[989, null]], "skbio.tree.TreeNode.extend": [[990, null]], "skbio.tree.TreeNode.find": [[991, null]], "skbio.tree.TreeNode.find_all": [[992, null]], "skbio.tree.TreeNode.find_by_func": [[993, null]], "skbio.tree.TreeNode.find_by_id": [[994, null]], "skbio.tree.TreeNode.from_linkage_matrix": [[995, null]], "skbio.tree.TreeNode.from_taxdump": [[996, null]], "skbio.tree.TreeNode.from_taxonomy": [[997, null]], "skbio.tree.TreeNode.get_max_distance": [[998, null]], "skbio.tree.TreeNode.has_children": [[999, null]], "skbio.tree.TreeNode.index_tree": [[1000, null]], "skbio.tree.TreeNode.insert": [[1001, null]], "skbio.tree.TreeNode.invalidate_caches": [[1002, null]], "skbio.tree.TreeNode.is_root": [[1003, null]], "skbio.tree.TreeNode.is_tip": [[1004, null]], "skbio.tree.TreeNode.lca": [[1005, null]], "skbio.tree.TreeNode.levelorder": [[1006, null]], "skbio.tree.TreeNode.lowest_common_ancestor": [[1007, null]], "skbio.tree.TreeNode.neighbors": [[1008, null]], "skbio.tree.TreeNode.non_tips": [[1009, null]], "skbio.tree.TreeNode.observed_node_counts": [[1010, null]], "skbio.tree.TreeNode.pop": [[1011, null]], "skbio.tree.TreeNode.postorder": [[1012, null]], "skbio.tree.TreeNode.pre_and_postorder": [[1013, null]], "skbio.tree.TreeNode.preorder": [[1014, null]], "skbio.tree.TreeNode.prune": [[1015, null]], "skbio.tree.TreeNode.read": [[1016, null]], "skbio.tree.TreeNode.remove": [[1017, null]], "skbio.tree.TreeNode.remove_deleted": [[1018, null]], "skbio.tree.TreeNode.root": [[1019, null]], "skbio.tree.TreeNode.root_at": [[1020, null]], "skbio.tree.TreeNode.root_at_midpoint": [[1021, null]], "skbio.tree.TreeNode.root_by_outgroup": [[1022, null]], "skbio.tree.TreeNode.shear": [[1023, null]], "skbio.tree.TreeNode.shuffle": [[1024, null]], "skbio.tree.TreeNode.siblings": [[1025, null]], "skbio.tree.TreeNode.subset": [[1026, null]], "skbio.tree.TreeNode.subsets": [[1027, null]], "skbio.tree.TreeNode.subtree": [[1028, null]], "skbio.tree.TreeNode.tip_tip_distances": [[1029, null]], "skbio.tree.TreeNode.tips": [[1030, null]], "skbio.tree.TreeNode.to_array": [[1031, null]], "skbio.tree.TreeNode.to_taxonomy": [[1032, null]], "skbio.tree.TreeNode.traverse": [[1033, null]], "skbio.tree.TreeNode.unpack": [[1034, null]], "skbio.tree.TreeNode.unpack_by_func": [[1035, null]], "skbio.tree.TreeNode.unroot": [[1036, null]], "skbio.tree.TreeNode.unrooted_copy": [[1037, null]], "skbio.tree.TreeNode.unrooted_deepcopy": [[1038, null]], "skbio.tree.TreeNode.unrooted_move": [[1039, null]], "skbio.tree.TreeNode.write": [[1040, null]], "skbio.tree.gme": [[1041, null]], "skbio.tree.majority_rule": [[1042, null]], "skbio.tree.nj": [[1043, null]], "skbio.tree.nni": [[1044, null]], "skbio.util.EfficiencyWarning": [[1045, null]], "skbio.util.RepresentationWarning": [[1046, null]], "skbio.util.assert_data_frame_almost_equal": [[1047, null]], "skbio.util.assert_ordination_results_equal": [[1048, null]], "skbio.util.cardinal_to_ordinal": [[1049, null]], "skbio.util.classproperty": [[1050, null]], "skbio.util.classproperty.__delete__": [[1051, null]], "skbio.util.classproperty.__eq__": [[1052, null]], "skbio.util.classproperty.__ge__": [[1053, null]], "skbio.util.classproperty.__get__": [[1054, null]], "skbio.util.classproperty.__getstate__": [[1055, null]], "skbio.util.classproperty.__gt__": [[1056, null]], "skbio.util.classproperty.__hash__": [[1057, null]], "skbio.util.classproperty.__le__": [[1058, null]], "skbio.util.classproperty.__lt__": [[1059, null]], "skbio.util.classproperty.__ne__": [[1060, null]], "skbio.util.classproperty.__set__": [[1061, null]], "skbio.util.classproperty.__set_name__": [[1062, null]], "skbio.util.classproperty.__str__": [[1063, null]], "skbio.util.classproperty.deleter": [[1064, null]], "skbio.util.classproperty.getter": [[1065, null]], "skbio.util.classproperty.setter": [[1066, null]], "skbio.util.find_duplicates": [[1067, null]], "skbio.util.get_data_path": [[1068, null]], "skbio.util.safe_md5": [[1069, null]], "skbio.workflow.Workflow": [[1070, null]], "skbio.workflow.Workflow.__call__": [[1071, null]], "skbio.workflow.Workflow.__eq__": [[1072, null]], "skbio.workflow.Workflow.__ge__": [[1073, null]], "skbio.workflow.Workflow.__getstate__": [[1074, null]], "skbio.workflow.Workflow.__gt__": [[1075, null]], "skbio.workflow.Workflow.__hash__": [[1076, null]], "skbio.workflow.Workflow.__le__": [[1077, null]], "skbio.workflow.Workflow.__lt__": [[1078, null]], "skbio.workflow.Workflow.__ne__": [[1079, null]], "skbio.workflow.Workflow.__str__": [[1080, null]], "skbio.workflow.Workflow.initialize_state": [[1081, null]], "skbio.workflow.method": [[1082, null]], "skbio.workflow.method.__call__": [[1083, null]], "skbio.workflow.method.__eq__": [[1084, null]], "skbio.workflow.method.__ge__": [[1085, null]], "skbio.workflow.method.__getstate__": [[1086, null]], "skbio.workflow.method.__gt__": [[1087, null]], "skbio.workflow.method.__hash__": [[1088, null]], "skbio.workflow.method.__le__": [[1089, null]], "skbio.workflow.method.__lt__": [[1090, null]], "skbio.workflow.method.__ne__": [[1091, null]], "skbio.workflow.method.__str__": [[1092, null]], "skbio.workflow.requires": [[1093, null]], "skbio.workflow.requires.__call__": [[1094, null]], "skbio.workflow.requires.__eq__": [[1095, null]], "skbio.workflow.requires.__ge__": [[1096, null]], "skbio.workflow.requires.__getstate__": [[1097, null]], "skbio.workflow.requires.__gt__": [[1098, null]], "skbio.workflow.requires.__hash__": [[1099, null]], "skbio.workflow.requires.__le__": [[1100, null]], "skbio.workflow.requires.__lt__": [[1101, null]], "skbio.workflow.requires.__ne__": [[1102, null]], "skbio.workflow.requires.__str__": [[1103, null]]}, "docnames": ["alignment", "diversity", "embedding", "generated/skbio.alignment.AlignPath", "generated/skbio.alignment.AlignPath.__eq__", "generated/skbio.alignment.AlignPath.__ge__", "generated/skbio.alignment.AlignPath.__getstate__", "generated/skbio.alignment.AlignPath.__gt__", "generated/skbio.alignment.AlignPath.__hash__", "generated/skbio.alignment.AlignPath.__le__", "generated/skbio.alignment.AlignPath.__lt__", "generated/skbio.alignment.AlignPath.__ne__", "generated/skbio.alignment.AlignPath.__str__", "generated/skbio.alignment.AlignPath.from_bits", "generated/skbio.alignment.AlignPath.from_coordinates", "generated/skbio.alignment.AlignPath.from_indices", "generated/skbio.alignment.AlignPath.from_tabular", "generated/skbio.alignment.AlignPath.to_bits", "generated/skbio.alignment.AlignPath.to_coordinates", "generated/skbio.alignment.AlignPath.to_indices", "generated/skbio.alignment.AlignmentStructure", "generated/skbio.alignment.AlignmentStructure.__eq__", "generated/skbio.alignment.AlignmentStructure.__ge__", "generated/skbio.alignment.AlignmentStructure.__getitem__", "generated/skbio.alignment.AlignmentStructure.__getstate__", "generated/skbio.alignment.AlignmentStructure.__gt__", "generated/skbio.alignment.AlignmentStructure.__hash__", "generated/skbio.alignment.AlignmentStructure.__le__", "generated/skbio.alignment.AlignmentStructure.__lt__", "generated/skbio.alignment.AlignmentStructure.__ne__", "generated/skbio.alignment.AlignmentStructure.__setstate__", "generated/skbio.alignment.AlignmentStructure.__str__", "generated/skbio.alignment.AlignmentStructure.is_zero_based", "generated/skbio.alignment.AlignmentStructure.set_zero_based", "generated/skbio.alignment.PairAlignPath", "generated/skbio.alignment.PairAlignPath.__eq__", "generated/skbio.alignment.PairAlignPath.__ge__", "generated/skbio.alignment.PairAlignPath.__getstate__", "generated/skbio.alignment.PairAlignPath.__gt__", "generated/skbio.alignment.PairAlignPath.__hash__", "generated/skbio.alignment.PairAlignPath.__le__", "generated/skbio.alignment.PairAlignPath.__lt__", "generated/skbio.alignment.PairAlignPath.__ne__", "generated/skbio.alignment.PairAlignPath.__str__", "generated/skbio.alignment.PairAlignPath.from_bits", "generated/skbio.alignment.PairAlignPath.from_cigar", "generated/skbio.alignment.PairAlignPath.from_coordinates", "generated/skbio.alignment.PairAlignPath.from_indices", "generated/skbio.alignment.PairAlignPath.from_tabular", "generated/skbio.alignment.PairAlignPath.to_bits", "generated/skbio.alignment.PairAlignPath.to_cigar", "generated/skbio.alignment.PairAlignPath.to_coordinates", "generated/skbio.alignment.PairAlignPath.to_indices", "generated/skbio.alignment.StripedSmithWaterman", "generated/skbio.alignment.StripedSmithWaterman.__call__", "generated/skbio.alignment.StripedSmithWaterman.__eq__", "generated/skbio.alignment.StripedSmithWaterman.__ge__", "generated/skbio.alignment.StripedSmithWaterman.__getstate__", "generated/skbio.alignment.StripedSmithWaterman.__gt__", "generated/skbio.alignment.StripedSmithWaterman.__hash__", "generated/skbio.alignment.StripedSmithWaterman.__le__", "generated/skbio.alignment.StripedSmithWaterman.__lt__", "generated/skbio.alignment.StripedSmithWaterman.__ne__", "generated/skbio.alignment.StripedSmithWaterman.__setstate__", "generated/skbio.alignment.StripedSmithWaterman.__str__", "generated/skbio.alignment.TabularMSA", "generated/skbio.alignment.TabularMSA.__bool__", "generated/skbio.alignment.TabularMSA.__contains__", "generated/skbio.alignment.TabularMSA.__copy__", "generated/skbio.alignment.TabularMSA.__deepcopy__", "generated/skbio.alignment.TabularMSA.__eq__", "generated/skbio.alignment.TabularMSA.__ge__", "generated/skbio.alignment.TabularMSA.__getitem__", "generated/skbio.alignment.TabularMSA.__getstate__", "generated/skbio.alignment.TabularMSA.__gt__", "generated/skbio.alignment.TabularMSA.__iter__", "generated/skbio.alignment.TabularMSA.__le__", "generated/skbio.alignment.TabularMSA.__len__", "generated/skbio.alignment.TabularMSA.__lt__", "generated/skbio.alignment.TabularMSA.__ne__", "generated/skbio.alignment.TabularMSA.__reversed__", "generated/skbio.alignment.TabularMSA.__str__", "generated/skbio.alignment.TabularMSA.append", "generated/skbio.alignment.TabularMSA.consensus", "generated/skbio.alignment.TabularMSA.conservation", "generated/skbio.alignment.TabularMSA.extend", "generated/skbio.alignment.TabularMSA.from_dict", "generated/skbio.alignment.TabularMSA.from_path_seqs", "generated/skbio.alignment.TabularMSA.gap_frequencies", "generated/skbio.alignment.TabularMSA.has_metadata", "generated/skbio.alignment.TabularMSA.has_positional_metadata", "generated/skbio.alignment.TabularMSA.iter_positions", "generated/skbio.alignment.TabularMSA.join", "generated/skbio.alignment.TabularMSA.read", "generated/skbio.alignment.TabularMSA.reassign_index", "generated/skbio.alignment.TabularMSA.sort", "generated/skbio.alignment.TabularMSA.to_dict", "generated/skbio.alignment.TabularMSA.write", "generated/skbio.alignment.global_pairwise_align", "generated/skbio.alignment.global_pairwise_align_nucleotide", "generated/skbio.alignment.global_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align", "generated/skbio.alignment.local_pairwise_align_nucleotide", "generated/skbio.alignment.local_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align_ssw", "generated/skbio.alignment.make_identity_substitution_matrix", "generated/skbio.diversity.alpha", "generated/skbio.diversity.alpha.ace", "generated/skbio.diversity.alpha.berger_parker_d", "generated/skbio.diversity.alpha.brillouin_d", "generated/skbio.diversity.alpha.chao1", "generated/skbio.diversity.alpha.chao1_ci", "generated/skbio.diversity.alpha.dominance", "generated/skbio.diversity.alpha.doubles", "generated/skbio.diversity.alpha.enspie", "generated/skbio.diversity.alpha.esty_ci", "generated/skbio.diversity.alpha.faith_pd", "generated/skbio.diversity.alpha.fisher_alpha", "generated/skbio.diversity.alpha.gini_index", "generated/skbio.diversity.alpha.goods_coverage", "generated/skbio.diversity.alpha.heip_e", "generated/skbio.diversity.alpha.hill", "generated/skbio.diversity.alpha.inv_simpson", "generated/skbio.diversity.alpha.kempton_taylor_q", "generated/skbio.diversity.alpha.lladser_ci", "generated/skbio.diversity.alpha.lladser_pe", "generated/skbio.diversity.alpha.margalef", "generated/skbio.diversity.alpha.mcintosh_d", "generated/skbio.diversity.alpha.mcintosh_e", "generated/skbio.diversity.alpha.menhinick", "generated/skbio.diversity.alpha.michaelis_menten_fit", "generated/skbio.diversity.alpha.observed_features", "generated/skbio.diversity.alpha.observed_otus", "generated/skbio.diversity.alpha.osd", "generated/skbio.diversity.alpha.phydiv", "generated/skbio.diversity.alpha.pielou_e", "generated/skbio.diversity.alpha.renyi", "generated/skbio.diversity.alpha.robbins", "generated/skbio.diversity.alpha.shannon", "generated/skbio.diversity.alpha.simpson", "generated/skbio.diversity.alpha.simpson_d", "generated/skbio.diversity.alpha.simpson_e", "generated/skbio.diversity.alpha.singles", "generated/skbio.diversity.alpha.sobs", "generated/skbio.diversity.alpha.strong", "generated/skbio.diversity.alpha.tsallis", "generated/skbio.diversity.alpha_diversity", "generated/skbio.diversity.beta", "generated/skbio.diversity.beta.unweighted_unifrac", "generated/skbio.diversity.beta.weighted_unifrac", "generated/skbio.diversity.beta_diversity", "generated/skbio.diversity.block_beta_diversity", "generated/skbio.diversity.get_alpha_diversity_metrics", "generated/skbio.diversity.get_beta_diversity_metrics", "generated/skbio.diversity.partial_beta_diversity", "generated/skbio.embedding.Embedding", "generated/skbio.embedding.Embedding.__eq__", "generated/skbio.embedding.Embedding.__ge__", "generated/skbio.embedding.Embedding.__getstate__", "generated/skbio.embedding.Embedding.__gt__", "generated/skbio.embedding.Embedding.__hash__", "generated/skbio.embedding.Embedding.__le__", "generated/skbio.embedding.Embedding.__lt__", "generated/skbio.embedding.Embedding.__ne__", "generated/skbio.embedding.Embedding.__str__", "generated/skbio.embedding.Embedding.bytes", "generated/skbio.embedding.ProteinEmbedding", "generated/skbio.embedding.ProteinEmbedding.__eq__", "generated/skbio.embedding.ProteinEmbedding.__ge__", "generated/skbio.embedding.ProteinEmbedding.__getstate__", "generated/skbio.embedding.ProteinEmbedding.__gt__", "generated/skbio.embedding.ProteinEmbedding.__hash__", "generated/skbio.embedding.ProteinEmbedding.__le__", "generated/skbio.embedding.ProteinEmbedding.__lt__", "generated/skbio.embedding.ProteinEmbedding.__ne__", "generated/skbio.embedding.ProteinEmbedding.__str__", "generated/skbio.embedding.ProteinEmbedding.bytes", "generated/skbio.embedding.ProteinEmbedding.read", "generated/skbio.embedding.ProteinEmbedding.write", "generated/skbio.embedding.ProteinVector", "generated/skbio.embedding.ProteinVector.__eq__", "generated/skbio.embedding.ProteinVector.__ge__", "generated/skbio.embedding.ProteinVector.__getstate__", "generated/skbio.embedding.ProteinVector.__gt__", "generated/skbio.embedding.ProteinVector.__hash__", "generated/skbio.embedding.ProteinVector.__le__", "generated/skbio.embedding.ProteinVector.__lt__", "generated/skbio.embedding.ProteinVector.__ne__", "generated/skbio.embedding.ProteinVector.__str__", "generated/skbio.embedding.ProteinVector.bytes", "generated/skbio.embedding.ProteinVector.read", "generated/skbio.embedding.ProteinVector.write", "generated/skbio.embedding.SequenceEmbedding", "generated/skbio.embedding.SequenceEmbedding.__eq__", "generated/skbio.embedding.SequenceEmbedding.__ge__", "generated/skbio.embedding.SequenceEmbedding.__getstate__", "generated/skbio.embedding.SequenceEmbedding.__gt__", "generated/skbio.embedding.SequenceEmbedding.__hash__", "generated/skbio.embedding.SequenceEmbedding.__le__", "generated/skbio.embedding.SequenceEmbedding.__lt__", "generated/skbio.embedding.SequenceEmbedding.__ne__", "generated/skbio.embedding.SequenceEmbedding.__str__", "generated/skbio.embedding.SequenceEmbedding.bytes", "generated/skbio.embedding.SequenceVector", "generated/skbio.embedding.SequenceVector.__eq__", "generated/skbio.embedding.SequenceVector.__ge__", "generated/skbio.embedding.SequenceVector.__getstate__", "generated/skbio.embedding.SequenceVector.__gt__", "generated/skbio.embedding.SequenceVector.__hash__", "generated/skbio.embedding.SequenceVector.__le__", "generated/skbio.embedding.SequenceVector.__lt__", "generated/skbio.embedding.SequenceVector.__ne__", "generated/skbio.embedding.SequenceVector.__str__", "generated/skbio.embedding.SequenceVector.bytes", "generated/skbio.embedding.embed_vec_to_dataframe", "generated/skbio.embedding.embed_vec_to_distances", "generated/skbio.embedding.embed_vec_to_numpy", "generated/skbio.embedding.embed_vec_to_ordination", "generated/skbio.io.format.binary_dm", "generated/skbio.io.format.biom", "generated/skbio.io.format.blast6", "generated/skbio.io.format.blast7", "generated/skbio.io.format.clustal", "generated/skbio.io.format.embed", "generated/skbio.io.format.embl", "generated/skbio.io.format.fasta", "generated/skbio.io.format.fastq", "generated/skbio.io.format.genbank", "generated/skbio.io.format.gff3", "generated/skbio.io.format.lsmat", "generated/skbio.io.format.newick", "generated/skbio.io.format.ordination", "generated/skbio.io.format.phylip", "generated/skbio.io.format.qseq", "generated/skbio.io.format.sample_metadata", "generated/skbio.io.format.stockholm", "generated/skbio.io.format.taxdump", "generated/skbio.io.registry", "generated/skbio.io.registry.Format", "generated/skbio.io.registry.Format.__eq__", "generated/skbio.io.registry.Format.__ge__", "generated/skbio.io.registry.Format.__getstate__", "generated/skbio.io.registry.Format.__gt__", "generated/skbio.io.registry.Format.__hash__", "generated/skbio.io.registry.Format.__le__", "generated/skbio.io.registry.Format.__lt__", "generated/skbio.io.registry.Format.__ne__", "generated/skbio.io.registry.Format.__str__", "generated/skbio.io.registry.Format.reader", "generated/skbio.io.registry.Format.sniffer", "generated/skbio.io.registry.Format.writer", "generated/skbio.io.registry.IORegistry", "generated/skbio.io.registry.IORegistry.__eq__", "generated/skbio.io.registry.IORegistry.__ge__", "generated/skbio.io.registry.IORegistry.__getstate__", "generated/skbio.io.registry.IORegistry.__gt__", "generated/skbio.io.registry.IORegistry.__hash__", "generated/skbio.io.registry.IORegistry.__le__", "generated/skbio.io.registry.IORegistry.__lt__", "generated/skbio.io.registry.IORegistry.__ne__", "generated/skbio.io.registry.IORegistry.__str__", "generated/skbio.io.registry.IORegistry.add_format", "generated/skbio.io.registry.IORegistry.create_format", "generated/skbio.io.registry.IORegistry.get_reader", "generated/skbio.io.registry.IORegistry.get_sniffer", "generated/skbio.io.registry.IORegistry.get_writer", "generated/skbio.io.registry.IORegistry.list_read_formats", "generated/skbio.io.registry.IORegistry.list_write_formats", "generated/skbio.io.registry.IORegistry.monkey_patch", "generated/skbio.io.registry.IORegistry.read", "generated/skbio.io.registry.IORegistry.sniff", "generated/skbio.io.registry.IORegistry.write", "generated/skbio.io.registry.create_format", "generated/skbio.io.registry.read", "generated/skbio.io.registry.sniff", "generated/skbio.io.registry.write", "generated/skbio.io.util", "generated/skbio.io.util.open", "generated/skbio.io.util.open_file", "generated/skbio.io.util.open_files", "generated/skbio.metadata.CategoricalMetadataColumn", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__", "generated/skbio.metadata.CategoricalMetadataColumn.__le__", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__", "generated/skbio.metadata.CategoricalMetadataColumn.__str__", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing", "generated/skbio.metadata.CategoricalMetadataColumn.get_value", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.save", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe", "generated/skbio.metadata.CategoricalMetadataColumn.to_series", "generated/skbio.metadata.Interval", "generated/skbio.metadata.Interval.__eq__", "generated/skbio.metadata.Interval.__ge__", "generated/skbio.metadata.Interval.__getstate__", "generated/skbio.metadata.Interval.__gt__", "generated/skbio.metadata.Interval.__le__", "generated/skbio.metadata.Interval.__lt__", "generated/skbio.metadata.Interval.__ne__", "generated/skbio.metadata.Interval.__str__", "generated/skbio.metadata.Interval.drop", "generated/skbio.metadata.IntervalMetadata", "generated/skbio.metadata.IntervalMetadata.__copy__", "generated/skbio.metadata.IntervalMetadata.__deepcopy__", "generated/skbio.metadata.IntervalMetadata.__eq__", "generated/skbio.metadata.IntervalMetadata.__ge__", "generated/skbio.metadata.IntervalMetadata.__getstate__", "generated/skbio.metadata.IntervalMetadata.__gt__", "generated/skbio.metadata.IntervalMetadata.__le__", "generated/skbio.metadata.IntervalMetadata.__lt__", "generated/skbio.metadata.IntervalMetadata.__ne__", "generated/skbio.metadata.IntervalMetadata.__str__", "generated/skbio.metadata.IntervalMetadata.add", "generated/skbio.metadata.IntervalMetadata.concat", "generated/skbio.metadata.IntervalMetadata.drop", "generated/skbio.metadata.IntervalMetadata.merge", "generated/skbio.metadata.IntervalMetadata.query", "generated/skbio.metadata.IntervalMetadata.read", "generated/skbio.metadata.IntervalMetadata.sort", "generated/skbio.metadata.IntervalMetadata.write", "generated/skbio.metadata.MetadataColumn", "generated/skbio.metadata.MetadataColumn.__eq__", "generated/skbio.metadata.MetadataColumn.__ge__", "generated/skbio.metadata.MetadataColumn.__getstate__", "generated/skbio.metadata.MetadataColumn.__gt__", "generated/skbio.metadata.MetadataColumn.__le__", "generated/skbio.metadata.MetadataColumn.__lt__", "generated/skbio.metadata.MetadataColumn.__ne__", "generated/skbio.metadata.MetadataColumn.__str__", "generated/skbio.metadata.MetadataColumn.drop_missing_values", "generated/skbio.metadata.MetadataColumn.filter_ids", "generated/skbio.metadata.MetadataColumn.get_ids", "generated/skbio.metadata.MetadataColumn.get_missing", "generated/skbio.metadata.MetadataColumn.get_value", "generated/skbio.metadata.MetadataColumn.has_missing_values", "generated/skbio.metadata.MetadataColumn.save", "generated/skbio.metadata.MetadataColumn.to_dataframe", "generated/skbio.metadata.MetadataColumn.to_series", "generated/skbio.metadata.NumericMetadataColumn", "generated/skbio.metadata.NumericMetadataColumn.__eq__", "generated/skbio.metadata.NumericMetadataColumn.__ge__", "generated/skbio.metadata.NumericMetadataColumn.__getstate__", "generated/skbio.metadata.NumericMetadataColumn.__gt__", "generated/skbio.metadata.NumericMetadataColumn.__le__", "generated/skbio.metadata.NumericMetadataColumn.__lt__", "generated/skbio.metadata.NumericMetadataColumn.__ne__", "generated/skbio.metadata.NumericMetadataColumn.__str__", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values", "generated/skbio.metadata.NumericMetadataColumn.filter_ids", "generated/skbio.metadata.NumericMetadataColumn.get_ids", "generated/skbio.metadata.NumericMetadataColumn.get_missing", "generated/skbio.metadata.NumericMetadataColumn.get_value", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values", "generated/skbio.metadata.NumericMetadataColumn.save", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe", "generated/skbio.metadata.NumericMetadataColumn.to_series", "generated/skbio.metadata.SampleMetadata", "generated/skbio.metadata.SampleMetadata.__eq__", "generated/skbio.metadata.SampleMetadata.__ge__", "generated/skbio.metadata.SampleMetadata.__getstate__", "generated/skbio.metadata.SampleMetadata.__gt__", "generated/skbio.metadata.SampleMetadata.__le__", "generated/skbio.metadata.SampleMetadata.__lt__", "generated/skbio.metadata.SampleMetadata.__ne__", "generated/skbio.metadata.SampleMetadata.__str__", "generated/skbio.metadata.SampleMetadata.filter_columns", "generated/skbio.metadata.SampleMetadata.filter_ids", "generated/skbio.metadata.SampleMetadata.get_column", "generated/skbio.metadata.SampleMetadata.get_ids", "generated/skbio.metadata.SampleMetadata.load", "generated/skbio.metadata.SampleMetadata.merge", "generated/skbio.metadata.SampleMetadata.read", "generated/skbio.metadata.SampleMetadata.save", "generated/skbio.metadata.SampleMetadata.to_dataframe", "generated/skbio.metadata.SampleMetadata.write", "generated/skbio.sequence.DNA", "generated/skbio.sequence.DNA.__bool__", "generated/skbio.sequence.DNA.__contains__", "generated/skbio.sequence.DNA.__copy__", "generated/skbio.sequence.DNA.__deepcopy__", "generated/skbio.sequence.DNA.__eq__", "generated/skbio.sequence.DNA.__ge__", "generated/skbio.sequence.DNA.__getitem__", "generated/skbio.sequence.DNA.__getstate__", "generated/skbio.sequence.DNA.__gt__", "generated/skbio.sequence.DNA.__iter__", "generated/skbio.sequence.DNA.__le__", "generated/skbio.sequence.DNA.__len__", "generated/skbio.sequence.DNA.__lt__", "generated/skbio.sequence.DNA.__ne__", "generated/skbio.sequence.DNA.__reversed__", "generated/skbio.sequence.DNA.__str__", "generated/skbio.sequence.DNA.complement", "generated/skbio.sequence.DNA.concat", "generated/skbio.sequence.DNA.count", "generated/skbio.sequence.DNA.definites", "generated/skbio.sequence.DNA.degap", "generated/skbio.sequence.DNA.degenerates", "generated/skbio.sequence.DNA.distance", "generated/skbio.sequence.DNA.expand_degenerates", "generated/skbio.sequence.DNA.find_motifs", "generated/skbio.sequence.DNA.find_with_regex", "generated/skbio.sequence.DNA.frequencies", "generated/skbio.sequence.DNA.gaps", "generated/skbio.sequence.DNA.gc_content", "generated/skbio.sequence.DNA.gc_frequency", "generated/skbio.sequence.DNA.has_definites", "generated/skbio.sequence.DNA.has_degenerates", "generated/skbio.sequence.DNA.has_gaps", "generated/skbio.sequence.DNA.has_interval_metadata", "generated/skbio.sequence.DNA.has_metadata", "generated/skbio.sequence.DNA.has_nondegenerates", "generated/skbio.sequence.DNA.has_positional_metadata", "generated/skbio.sequence.DNA.index", "generated/skbio.sequence.DNA.is_reverse_complement", "generated/skbio.sequence.DNA.iter_contiguous", "generated/skbio.sequence.DNA.iter_kmers", "generated/skbio.sequence.DNA.kmer_frequencies", "generated/skbio.sequence.DNA.lowercase", "generated/skbio.sequence.DNA.match_frequency", "generated/skbio.sequence.DNA.matches", "generated/skbio.sequence.DNA.mismatch_frequency", "generated/skbio.sequence.DNA.mismatches", "generated/skbio.sequence.DNA.nondegenerates", "generated/skbio.sequence.DNA.read", "generated/skbio.sequence.DNA.replace", "generated/skbio.sequence.DNA.reverse_complement", "generated/skbio.sequence.DNA.to_definites", "generated/skbio.sequence.DNA.to_indices", "generated/skbio.sequence.DNA.to_regex", "generated/skbio.sequence.DNA.transcribe", "generated/skbio.sequence.DNA.translate", "generated/skbio.sequence.DNA.translate_six_frames", "generated/skbio.sequence.DNA.write", "generated/skbio.sequence.GeneticCode", "generated/skbio.sequence.GeneticCode.__eq__", "generated/skbio.sequence.GeneticCode.__ge__", "generated/skbio.sequence.GeneticCode.__getstate__", "generated/skbio.sequence.GeneticCode.__gt__", "generated/skbio.sequence.GeneticCode.__le__", "generated/skbio.sequence.GeneticCode.__lt__", "generated/skbio.sequence.GeneticCode.__ne__", "generated/skbio.sequence.GeneticCode.__str__", "generated/skbio.sequence.GeneticCode.from_ncbi", "generated/skbio.sequence.GeneticCode.translate", "generated/skbio.sequence.GeneticCode.translate_six_frames", "generated/skbio.sequence.GrammaredSequence", "generated/skbio.sequence.GrammaredSequence.__bool__", "generated/skbio.sequence.GrammaredSequence.__contains__", "generated/skbio.sequence.GrammaredSequence.__copy__", "generated/skbio.sequence.GrammaredSequence.__deepcopy__", "generated/skbio.sequence.GrammaredSequence.__eq__", "generated/skbio.sequence.GrammaredSequence.__ge__", "generated/skbio.sequence.GrammaredSequence.__getitem__", "generated/skbio.sequence.GrammaredSequence.__getstate__", "generated/skbio.sequence.GrammaredSequence.__gt__", "generated/skbio.sequence.GrammaredSequence.__iter__", "generated/skbio.sequence.GrammaredSequence.__le__", "generated/skbio.sequence.GrammaredSequence.__len__", "generated/skbio.sequence.GrammaredSequence.__lt__", "generated/skbio.sequence.GrammaredSequence.__ne__", "generated/skbio.sequence.GrammaredSequence.__reversed__", "generated/skbio.sequence.GrammaredSequence.__str__", "generated/skbio.sequence.GrammaredSequence.concat", "generated/skbio.sequence.GrammaredSequence.count", "generated/skbio.sequence.GrammaredSequence.definites", "generated/skbio.sequence.GrammaredSequence.degap", "generated/skbio.sequence.GrammaredSequence.degenerates", "generated/skbio.sequence.GrammaredSequence.distance", "generated/skbio.sequence.GrammaredSequence.expand_degenerates", "generated/skbio.sequence.GrammaredSequence.find_motifs", "generated/skbio.sequence.GrammaredSequence.find_with_regex", "generated/skbio.sequence.GrammaredSequence.frequencies", "generated/skbio.sequence.GrammaredSequence.gaps", "generated/skbio.sequence.GrammaredSequence.has_definites", "generated/skbio.sequence.GrammaredSequence.has_degenerates", "generated/skbio.sequence.GrammaredSequence.has_gaps", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata", "generated/skbio.sequence.GrammaredSequence.has_metadata", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata", "generated/skbio.sequence.GrammaredSequence.index", "generated/skbio.sequence.GrammaredSequence.iter_contiguous", "generated/skbio.sequence.GrammaredSequence.iter_kmers", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies", "generated/skbio.sequence.GrammaredSequence.lowercase", "generated/skbio.sequence.GrammaredSequence.match_frequency", "generated/skbio.sequence.GrammaredSequence.matches", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency", "generated/skbio.sequence.GrammaredSequence.mismatches", "generated/skbio.sequence.GrammaredSequence.nondegenerates", "generated/skbio.sequence.GrammaredSequence.read", "generated/skbio.sequence.GrammaredSequence.replace", "generated/skbio.sequence.GrammaredSequence.to_definites", "generated/skbio.sequence.GrammaredSequence.to_indices", "generated/skbio.sequence.GrammaredSequence.to_regex", "generated/skbio.sequence.GrammaredSequence.write", "generated/skbio.sequence.Protein", "generated/skbio.sequence.Protein.__bool__", "generated/skbio.sequence.Protein.__contains__", "generated/skbio.sequence.Protein.__copy__", "generated/skbio.sequence.Protein.__deepcopy__", "generated/skbio.sequence.Protein.__eq__", "generated/skbio.sequence.Protein.__ge__", "generated/skbio.sequence.Protein.__getitem__", "generated/skbio.sequence.Protein.__getstate__", "generated/skbio.sequence.Protein.__gt__", "generated/skbio.sequence.Protein.__iter__", "generated/skbio.sequence.Protein.__le__", "generated/skbio.sequence.Protein.__len__", "generated/skbio.sequence.Protein.__lt__", "generated/skbio.sequence.Protein.__ne__", "generated/skbio.sequence.Protein.__reversed__", "generated/skbio.sequence.Protein.__str__", "generated/skbio.sequence.Protein.concat", "generated/skbio.sequence.Protein.count", "generated/skbio.sequence.Protein.definites", "generated/skbio.sequence.Protein.degap", "generated/skbio.sequence.Protein.degenerates", "generated/skbio.sequence.Protein.distance", "generated/skbio.sequence.Protein.expand_degenerates", "generated/skbio.sequence.Protein.find_motifs", "generated/skbio.sequence.Protein.find_with_regex", "generated/skbio.sequence.Protein.frequencies", "generated/skbio.sequence.Protein.gaps", "generated/skbio.sequence.Protein.has_definites", "generated/skbio.sequence.Protein.has_degenerates", "generated/skbio.sequence.Protein.has_gaps", "generated/skbio.sequence.Protein.has_interval_metadata", "generated/skbio.sequence.Protein.has_metadata", "generated/skbio.sequence.Protein.has_nondegenerates", "generated/skbio.sequence.Protein.has_positional_metadata", "generated/skbio.sequence.Protein.has_stops", "generated/skbio.sequence.Protein.index", "generated/skbio.sequence.Protein.iter_contiguous", "generated/skbio.sequence.Protein.iter_kmers", "generated/skbio.sequence.Protein.kmer_frequencies", "generated/skbio.sequence.Protein.lowercase", "generated/skbio.sequence.Protein.match_frequency", "generated/skbio.sequence.Protein.matches", "generated/skbio.sequence.Protein.mismatch_frequency", "generated/skbio.sequence.Protein.mismatches", "generated/skbio.sequence.Protein.nondegenerates", "generated/skbio.sequence.Protein.read", "generated/skbio.sequence.Protein.replace", "generated/skbio.sequence.Protein.stops", "generated/skbio.sequence.Protein.to_definites", "generated/skbio.sequence.Protein.to_indices", "generated/skbio.sequence.Protein.to_regex", "generated/skbio.sequence.Protein.write", "generated/skbio.sequence.RNA", "generated/skbio.sequence.RNA.__bool__", "generated/skbio.sequence.RNA.__contains__", "generated/skbio.sequence.RNA.__copy__", "generated/skbio.sequence.RNA.__deepcopy__", "generated/skbio.sequence.RNA.__eq__", "generated/skbio.sequence.RNA.__ge__", "generated/skbio.sequence.RNA.__getitem__", "generated/skbio.sequence.RNA.__getstate__", "generated/skbio.sequence.RNA.__gt__", "generated/skbio.sequence.RNA.__iter__", "generated/skbio.sequence.RNA.__le__", "generated/skbio.sequence.RNA.__len__", "generated/skbio.sequence.RNA.__lt__", "generated/skbio.sequence.RNA.__ne__", "generated/skbio.sequence.RNA.__reversed__", "generated/skbio.sequence.RNA.__str__", "generated/skbio.sequence.RNA.complement", "generated/skbio.sequence.RNA.concat", "generated/skbio.sequence.RNA.count", "generated/skbio.sequence.RNA.definites", "generated/skbio.sequence.RNA.degap", "generated/skbio.sequence.RNA.degenerates", "generated/skbio.sequence.RNA.distance", "generated/skbio.sequence.RNA.expand_degenerates", "generated/skbio.sequence.RNA.find_motifs", "generated/skbio.sequence.RNA.find_with_regex", "generated/skbio.sequence.RNA.frequencies", "generated/skbio.sequence.RNA.gaps", "generated/skbio.sequence.RNA.gc_content", "generated/skbio.sequence.RNA.gc_frequency", "generated/skbio.sequence.RNA.has_definites", "generated/skbio.sequence.RNA.has_degenerates", "generated/skbio.sequence.RNA.has_gaps", "generated/skbio.sequence.RNA.has_interval_metadata", "generated/skbio.sequence.RNA.has_metadata", "generated/skbio.sequence.RNA.has_nondegenerates", "generated/skbio.sequence.RNA.has_positional_metadata", "generated/skbio.sequence.RNA.index", "generated/skbio.sequence.RNA.is_reverse_complement", "generated/skbio.sequence.RNA.iter_contiguous", "generated/skbio.sequence.RNA.iter_kmers", "generated/skbio.sequence.RNA.kmer_frequencies", "generated/skbio.sequence.RNA.lowercase", "generated/skbio.sequence.RNA.match_frequency", "generated/skbio.sequence.RNA.matches", "generated/skbio.sequence.RNA.mismatch_frequency", "generated/skbio.sequence.RNA.mismatches", "generated/skbio.sequence.RNA.nondegenerates", "generated/skbio.sequence.RNA.read", "generated/skbio.sequence.RNA.replace", "generated/skbio.sequence.RNA.reverse_complement", "generated/skbio.sequence.RNA.reverse_transcribe", "generated/skbio.sequence.RNA.to_definites", "generated/skbio.sequence.RNA.to_indices", "generated/skbio.sequence.RNA.to_regex", "generated/skbio.sequence.RNA.translate", "generated/skbio.sequence.RNA.translate_six_frames", "generated/skbio.sequence.RNA.write", "generated/skbio.sequence.Sequence", "generated/skbio.sequence.Sequence.__bool__", "generated/skbio.sequence.Sequence.__contains__", "generated/skbio.sequence.Sequence.__copy__", "generated/skbio.sequence.Sequence.__deepcopy__", "generated/skbio.sequence.Sequence.__eq__", "generated/skbio.sequence.Sequence.__ge__", "generated/skbio.sequence.Sequence.__getitem__", "generated/skbio.sequence.Sequence.__getstate__", "generated/skbio.sequence.Sequence.__gt__", "generated/skbio.sequence.Sequence.__iter__", "generated/skbio.sequence.Sequence.__le__", "generated/skbio.sequence.Sequence.__len__", "generated/skbio.sequence.Sequence.__lt__", "generated/skbio.sequence.Sequence.__ne__", "generated/skbio.sequence.Sequence.__reversed__", "generated/skbio.sequence.Sequence.__str__", "generated/skbio.sequence.Sequence.concat", "generated/skbio.sequence.Sequence.count", "generated/skbio.sequence.Sequence.distance", "generated/skbio.sequence.Sequence.find_with_regex", "generated/skbio.sequence.Sequence.frequencies", "generated/skbio.sequence.Sequence.has_interval_metadata", "generated/skbio.sequence.Sequence.has_metadata", "generated/skbio.sequence.Sequence.has_positional_metadata", "generated/skbio.sequence.Sequence.index", "generated/skbio.sequence.Sequence.iter_contiguous", "generated/skbio.sequence.Sequence.iter_kmers", "generated/skbio.sequence.Sequence.kmer_frequencies", "generated/skbio.sequence.Sequence.lowercase", "generated/skbio.sequence.Sequence.match_frequency", "generated/skbio.sequence.Sequence.matches", "generated/skbio.sequence.Sequence.mismatch_frequency", "generated/skbio.sequence.Sequence.mismatches", "generated/skbio.sequence.Sequence.read", "generated/skbio.sequence.Sequence.replace", "generated/skbio.sequence.Sequence.to_indices", "generated/skbio.sequence.Sequence.write", "generated/skbio.sequence.SubstitutionMatrix", "generated/skbio.sequence.SubstitutionMatrix.__contains__", "generated/skbio.sequence.SubstitutionMatrix.__eq__", "generated/skbio.sequence.SubstitutionMatrix.__ge__", "generated/skbio.sequence.SubstitutionMatrix.__getitem__", "generated/skbio.sequence.SubstitutionMatrix.__getstate__", "generated/skbio.sequence.SubstitutionMatrix.__gt__", "generated/skbio.sequence.SubstitutionMatrix.__le__", "generated/skbio.sequence.SubstitutionMatrix.__lt__", "generated/skbio.sequence.SubstitutionMatrix.__ne__", "generated/skbio.sequence.SubstitutionMatrix.__str__", "generated/skbio.sequence.SubstitutionMatrix.between", "generated/skbio.sequence.SubstitutionMatrix.by_name", "generated/skbio.sequence.SubstitutionMatrix.copy", "generated/skbio.sequence.SubstitutionMatrix.filter", "generated/skbio.sequence.SubstitutionMatrix.from_dict", "generated/skbio.sequence.SubstitutionMatrix.from_iterable", "generated/skbio.sequence.SubstitutionMatrix.get_names", "generated/skbio.sequence.SubstitutionMatrix.identity", "generated/skbio.sequence.SubstitutionMatrix.index", "generated/skbio.sequence.SubstitutionMatrix.plot", "generated/skbio.sequence.SubstitutionMatrix.read", "generated/skbio.sequence.SubstitutionMatrix.redundant_form", "generated/skbio.sequence.SubstitutionMatrix.rename", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame", "generated/skbio.sequence.SubstitutionMatrix.to_dict", "generated/skbio.sequence.SubstitutionMatrix.transpose", "generated/skbio.sequence.SubstitutionMatrix.within", "generated/skbio.sequence.SubstitutionMatrix.write", "generated/skbio.sequence.distance", "generated/skbio.sequence.distance.hamming", "generated/skbio.sequence.distance.kmer_distance", "generated/skbio.stats.composition", "generated/skbio.stats.composition.alr", "generated/skbio.stats.composition.alr_inv", "generated/skbio.stats.composition.ancom", "generated/skbio.stats.composition.centralize", "generated/skbio.stats.composition.closure", "generated/skbio.stats.composition.clr", "generated/skbio.stats.composition.clr_inv", "generated/skbio.stats.composition.dirmult_ttest", "generated/skbio.stats.composition.ilr", "generated/skbio.stats.composition.ilr_inv", "generated/skbio.stats.composition.inner", "generated/skbio.stats.composition.multi_replace", "generated/skbio.stats.composition.multiplicative_replacement", "generated/skbio.stats.composition.pairwise_vlr", "generated/skbio.stats.composition.perturb", "generated/skbio.stats.composition.perturb_inv", "generated/skbio.stats.composition.power", "generated/skbio.stats.composition.sbp_basis", "generated/skbio.stats.composition.tree_basis", "generated/skbio.stats.composition.vlr", "generated/skbio.stats.distance", "generated/skbio.stats.distance.DissimilarityMatrix", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__", "generated/skbio.stats.distance.DissimilarityMatrix.__le__", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__", "generated/skbio.stats.distance.DissimilarityMatrix.__str__", "generated/skbio.stats.distance.DissimilarityMatrix.between", "generated/skbio.stats.distance.DissimilarityMatrix.copy", "generated/skbio.stats.distance.DissimilarityMatrix.filter", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable", "generated/skbio.stats.distance.DissimilarityMatrix.index", "generated/skbio.stats.distance.DissimilarityMatrix.plot", "generated/skbio.stats.distance.DissimilarityMatrix.read", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form", "generated/skbio.stats.distance.DissimilarityMatrix.rename", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame", "generated/skbio.stats.distance.DissimilarityMatrix.transpose", "generated/skbio.stats.distance.DissimilarityMatrix.within", "generated/skbio.stats.distance.DissimilarityMatrix.write", "generated/skbio.stats.distance.DistanceMatrix", "generated/skbio.stats.distance.DistanceMatrix.__contains__", "generated/skbio.stats.distance.DistanceMatrix.__eq__", "generated/skbio.stats.distance.DistanceMatrix.__ge__", "generated/skbio.stats.distance.DistanceMatrix.__getitem__", "generated/skbio.stats.distance.DistanceMatrix.__getstate__", "generated/skbio.stats.distance.DistanceMatrix.__gt__", "generated/skbio.stats.distance.DistanceMatrix.__le__", "generated/skbio.stats.distance.DistanceMatrix.__lt__", "generated/skbio.stats.distance.DistanceMatrix.__ne__", "generated/skbio.stats.distance.DistanceMatrix.__str__", "generated/skbio.stats.distance.DistanceMatrix.between", "generated/skbio.stats.distance.DistanceMatrix.condensed_form", "generated/skbio.stats.distance.DistanceMatrix.copy", "generated/skbio.stats.distance.DistanceMatrix.filter", "generated/skbio.stats.distance.DistanceMatrix.from_iterable", "generated/skbio.stats.distance.DistanceMatrix.index", "generated/skbio.stats.distance.DistanceMatrix.permute", "generated/skbio.stats.distance.DistanceMatrix.plot", "generated/skbio.stats.distance.DistanceMatrix.read", "generated/skbio.stats.distance.DistanceMatrix.redundant_form", "generated/skbio.stats.distance.DistanceMatrix.rename", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame", "generated/skbio.stats.distance.DistanceMatrix.to_series", "generated/skbio.stats.distance.DistanceMatrix.transpose", "generated/skbio.stats.distance.DistanceMatrix.within", "generated/skbio.stats.distance.DistanceMatrix.write", "generated/skbio.stats.distance.anosim", "generated/skbio.stats.distance.bioenv", "generated/skbio.stats.distance.mantel", "generated/skbio.stats.distance.permanova", "generated/skbio.stats.distance.permdisp", "generated/skbio.stats.distance.pwmantel", "generated/skbio.stats.distance.randdm", "generated/skbio.stats.evolve", "generated/skbio.stats.evolve.hommola_cospeciation", "generated/skbio.stats.gradient", "generated/skbio.stats.gradient.AverageGradientANOVA", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.CategoryResults", "generated/skbio.stats.gradient.CategoryResults.__eq__", "generated/skbio.stats.gradient.CategoryResults.__ge__", "generated/skbio.stats.gradient.CategoryResults.__getstate__", "generated/skbio.stats.gradient.CategoryResults.__gt__", "generated/skbio.stats.gradient.CategoryResults.__hash__", "generated/skbio.stats.gradient.CategoryResults.__le__", "generated/skbio.stats.gradient.CategoryResults.__lt__", "generated/skbio.stats.gradient.CategoryResults.__ne__", "generated/skbio.stats.gradient.CategoryResults.__str__", "generated/skbio.stats.gradient.CategoryResults.to_files", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVA", "generated/skbio.stats.gradient.GradientANOVA.__eq__", "generated/skbio.stats.gradient.GradientANOVA.__ge__", "generated/skbio.stats.gradient.GradientANOVA.__getstate__", "generated/skbio.stats.gradient.GradientANOVA.__gt__", "generated/skbio.stats.gradient.GradientANOVA.__hash__", "generated/skbio.stats.gradient.GradientANOVA.__le__", "generated/skbio.stats.gradient.GradientANOVA.__lt__", "generated/skbio.stats.gradient.GradientANOVA.__ne__", "generated/skbio.stats.gradient.GradientANOVA.__str__", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVAResults", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__", "generated/skbio.stats.gradient.GradientANOVAResults.__le__", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__", "generated/skbio.stats.gradient.GradientANOVAResults.__str__", "generated/skbio.stats.gradient.GradientANOVAResults.to_files", "generated/skbio.stats.gradient.GroupResults", "generated/skbio.stats.gradient.GroupResults.__eq__", "generated/skbio.stats.gradient.GroupResults.__ge__", "generated/skbio.stats.gradient.GroupResults.__getstate__", "generated/skbio.stats.gradient.GroupResults.__gt__", "generated/skbio.stats.gradient.GroupResults.__hash__", "generated/skbio.stats.gradient.GroupResults.__le__", "generated/skbio.stats.gradient.GroupResults.__lt__", "generated/skbio.stats.gradient.GroupResults.__ne__", "generated/skbio.stats.gradient.GroupResults.__str__", "generated/skbio.stats.gradient.GroupResults.to_files", "generated/skbio.stats.gradient.TrajectoryGradientANOVA", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.isubsample", "generated/skbio.stats.ordination", "generated/skbio.stats.ordination.OrdinationResults", "generated/skbio.stats.ordination.OrdinationResults.__eq__", "generated/skbio.stats.ordination.OrdinationResults.__ge__", "generated/skbio.stats.ordination.OrdinationResults.__getstate__", "generated/skbio.stats.ordination.OrdinationResults.__gt__", "generated/skbio.stats.ordination.OrdinationResults.__hash__", "generated/skbio.stats.ordination.OrdinationResults.__le__", "generated/skbio.stats.ordination.OrdinationResults.__lt__", "generated/skbio.stats.ordination.OrdinationResults.__ne__", "generated/skbio.stats.ordination.OrdinationResults.__str__", "generated/skbio.stats.ordination.OrdinationResults.plot", "generated/skbio.stats.ordination.OrdinationResults.read", "generated/skbio.stats.ordination.OrdinationResults.rename", "generated/skbio.stats.ordination.OrdinationResults.write", "generated/skbio.stats.ordination.ca", "generated/skbio.stats.ordination.cca", "generated/skbio.stats.ordination.corr", "generated/skbio.stats.ordination.e_matrix", "generated/skbio.stats.ordination.f_matrix", "generated/skbio.stats.ordination.mean_and_std", "generated/skbio.stats.ordination.pcoa", "generated/skbio.stats.ordination.pcoa_biplot", "generated/skbio.stats.ordination.rda", "generated/skbio.stats.ordination.scale", "generated/skbio.stats.ordination.svd_rank", "generated/skbio.stats.power", "generated/skbio.stats.power.confidence_bound", "generated/skbio.stats.power.paired_subsamples", "generated/skbio.stats.power.subsample_paired_power", "generated/skbio.stats.power.subsample_power", "generated/skbio.stats.subsample_counts", "generated/skbio.table.Table", "generated/skbio.table.Table.__eq__", "generated/skbio.table.Table.__ge__", "generated/skbio.table.Table.__getitem__", "generated/skbio.table.Table.__getstate__", "generated/skbio.table.Table.__gt__", "generated/skbio.table.Table.__iter__", "generated/skbio.table.Table.__le__", "generated/skbio.table.Table.__lt__", "generated/skbio.table.Table.__ne__", "generated/skbio.table.Table.__str__", "generated/skbio.table.Table.add_group_metadata", "generated/skbio.table.Table.add_metadata", "generated/skbio.table.Table.align_to", "generated/skbio.table.Table.align_to_dataframe", "generated/skbio.table.Table.align_tree", "generated/skbio.table.Table.collapse", "generated/skbio.table.Table.concat", "generated/skbio.table.Table.copy", "generated/skbio.table.Table.data", "generated/skbio.table.Table.del_metadata", "generated/skbio.table.Table.delimited_self", "generated/skbio.table.Table.descriptive_equality", "generated/skbio.table.Table.exists", "generated/skbio.table.Table.filter", "generated/skbio.table.Table.from_adjacency", "generated/skbio.table.Table.from_hdf5", "generated/skbio.table.Table.from_json", "generated/skbio.table.Table.from_tsv", "generated/skbio.table.Table.get_table_density", "generated/skbio.table.Table.get_value_by_ids", "generated/skbio.table.Table.group_metadata", "generated/skbio.table.Table.head", "generated/skbio.table.Table.ids", "generated/skbio.table.Table.index", "generated/skbio.table.Table.is_empty", "generated/skbio.table.Table.iter", "generated/skbio.table.Table.iter_data", "generated/skbio.table.Table.iter_pairwise", "generated/skbio.table.Table.length", "generated/skbio.table.Table.max", "generated/skbio.table.Table.merge", "generated/skbio.table.Table.metadata", "generated/skbio.table.Table.metadata_to_dataframe", "generated/skbio.table.Table.min", "generated/skbio.table.Table.nonzero", "generated/skbio.table.Table.nonzero_counts", "generated/skbio.table.Table.norm", "generated/skbio.table.Table.pa", "generated/skbio.table.Table.partition", "generated/skbio.table.Table.rankdata", "generated/skbio.table.Table.read", "generated/skbio.table.Table.reduce", "generated/skbio.table.Table.remove_empty", "generated/skbio.table.Table.sort", "generated/skbio.table.Table.sort_order", "generated/skbio.table.Table.subsample", "generated/skbio.table.Table.sum", "generated/skbio.table.Table.to_anndata", "generated/skbio.table.Table.to_dataframe", "generated/skbio.table.Table.to_hdf5", "generated/skbio.table.Table.to_json", "generated/skbio.table.Table.to_tsv", "generated/skbio.table.Table.transform", "generated/skbio.table.Table.transpose", "generated/skbio.table.Table.update_ids", "generated/skbio.table.Table.write", "generated/skbio.table.example_table", "generated/skbio.tree.TreeNode", "generated/skbio.tree.TreeNode.__copy__", "generated/skbio.tree.TreeNode.__deepcopy__", "generated/skbio.tree.TreeNode.__eq__", "generated/skbio.tree.TreeNode.__ge__", "generated/skbio.tree.TreeNode.__getitem__", "generated/skbio.tree.TreeNode.__getstate__", "generated/skbio.tree.TreeNode.__gt__", "generated/skbio.tree.TreeNode.__hash__", "generated/skbio.tree.TreeNode.__iter__", "generated/skbio.tree.TreeNode.__le__", "generated/skbio.tree.TreeNode.__len__", "generated/skbio.tree.TreeNode.__lt__", "generated/skbio.tree.TreeNode.__ne__", "generated/skbio.tree.TreeNode.__str__", "generated/skbio.tree.TreeNode.accumulate_to_ancestor", "generated/skbio.tree.TreeNode.ancestors", "generated/skbio.tree.TreeNode.append", "generated/skbio.tree.TreeNode.ascii_art", "generated/skbio.tree.TreeNode.assign_ids", "generated/skbio.tree.TreeNode.assign_supports", "generated/skbio.tree.TreeNode.bifurcate", "generated/skbio.tree.TreeNode.cache_attr", "generated/skbio.tree.TreeNode.compare_rfd", "generated/skbio.tree.TreeNode.compare_subsets", "generated/skbio.tree.TreeNode.compare_tip_distances", "generated/skbio.tree.TreeNode.copy", "generated/skbio.tree.TreeNode.count", "generated/skbio.tree.TreeNode.create_caches", "generated/skbio.tree.TreeNode.deepcopy", "generated/skbio.tree.TreeNode.descending_branch_length", "generated/skbio.tree.TreeNode.distance", "generated/skbio.tree.TreeNode.extend", "generated/skbio.tree.TreeNode.find", "generated/skbio.tree.TreeNode.find_all", "generated/skbio.tree.TreeNode.find_by_func", "generated/skbio.tree.TreeNode.find_by_id", "generated/skbio.tree.TreeNode.from_linkage_matrix", "generated/skbio.tree.TreeNode.from_taxdump", "generated/skbio.tree.TreeNode.from_taxonomy", "generated/skbio.tree.TreeNode.get_max_distance", "generated/skbio.tree.TreeNode.has_children", "generated/skbio.tree.TreeNode.index_tree", "generated/skbio.tree.TreeNode.insert", "generated/skbio.tree.TreeNode.invalidate_caches", "generated/skbio.tree.TreeNode.is_root", "generated/skbio.tree.TreeNode.is_tip", "generated/skbio.tree.TreeNode.lca", "generated/skbio.tree.TreeNode.levelorder", "generated/skbio.tree.TreeNode.lowest_common_ancestor", "generated/skbio.tree.TreeNode.neighbors", "generated/skbio.tree.TreeNode.non_tips", "generated/skbio.tree.TreeNode.observed_node_counts", "generated/skbio.tree.TreeNode.pop", "generated/skbio.tree.TreeNode.postorder", "generated/skbio.tree.TreeNode.pre_and_postorder", "generated/skbio.tree.TreeNode.preorder", "generated/skbio.tree.TreeNode.prune", "generated/skbio.tree.TreeNode.read", "generated/skbio.tree.TreeNode.remove", "generated/skbio.tree.TreeNode.remove_deleted", "generated/skbio.tree.TreeNode.root", "generated/skbio.tree.TreeNode.root_at", "generated/skbio.tree.TreeNode.root_at_midpoint", "generated/skbio.tree.TreeNode.root_by_outgroup", "generated/skbio.tree.TreeNode.shear", "generated/skbio.tree.TreeNode.shuffle", "generated/skbio.tree.TreeNode.siblings", "generated/skbio.tree.TreeNode.subset", "generated/skbio.tree.TreeNode.subsets", "generated/skbio.tree.TreeNode.subtree", "generated/skbio.tree.TreeNode.tip_tip_distances", "generated/skbio.tree.TreeNode.tips", "generated/skbio.tree.TreeNode.to_array", "generated/skbio.tree.TreeNode.to_taxonomy", "generated/skbio.tree.TreeNode.traverse", "generated/skbio.tree.TreeNode.unpack", "generated/skbio.tree.TreeNode.unpack_by_func", "generated/skbio.tree.TreeNode.unroot", "generated/skbio.tree.TreeNode.unrooted_copy", "generated/skbio.tree.TreeNode.unrooted_deepcopy", "generated/skbio.tree.TreeNode.unrooted_move", "generated/skbio.tree.TreeNode.write", "generated/skbio.tree.gme", "generated/skbio.tree.majority_rule", "generated/skbio.tree.nj", "generated/skbio.tree.nni", "generated/skbio.util.EfficiencyWarning", "generated/skbio.util.RepresentationWarning", "generated/skbio.util.assert_data_frame_almost_equal", "generated/skbio.util.assert_ordination_results_equal", "generated/skbio.util.cardinal_to_ordinal", "generated/skbio.util.classproperty", "generated/skbio.util.classproperty.__delete__", "generated/skbio.util.classproperty.__eq__", "generated/skbio.util.classproperty.__ge__", "generated/skbio.util.classproperty.__get__", "generated/skbio.util.classproperty.__getstate__", "generated/skbio.util.classproperty.__gt__", "generated/skbio.util.classproperty.__hash__", "generated/skbio.util.classproperty.__le__", "generated/skbio.util.classproperty.__lt__", "generated/skbio.util.classproperty.__ne__", "generated/skbio.util.classproperty.__set__", "generated/skbio.util.classproperty.__set_name__", "generated/skbio.util.classproperty.__str__", "generated/skbio.util.classproperty.deleter", "generated/skbio.util.classproperty.getter", "generated/skbio.util.classproperty.setter", "generated/skbio.util.find_duplicates", "generated/skbio.util.get_data_path", "generated/skbio.util.safe_md5", "generated/skbio.workflow.Workflow", "generated/skbio.workflow.Workflow.__call__", "generated/skbio.workflow.Workflow.__eq__", "generated/skbio.workflow.Workflow.__ge__", "generated/skbio.workflow.Workflow.__getstate__", "generated/skbio.workflow.Workflow.__gt__", "generated/skbio.workflow.Workflow.__hash__", "generated/skbio.workflow.Workflow.__le__", "generated/skbio.workflow.Workflow.__lt__", "generated/skbio.workflow.Workflow.__ne__", "generated/skbio.workflow.Workflow.__str__", "generated/skbio.workflow.Workflow.initialize_state", "generated/skbio.workflow.method", "generated/skbio.workflow.method.__call__", "generated/skbio.workflow.method.__eq__", "generated/skbio.workflow.method.__ge__", "generated/skbio.workflow.method.__getstate__", "generated/skbio.workflow.method.__gt__", "generated/skbio.workflow.method.__hash__", "generated/skbio.workflow.method.__le__", "generated/skbio.workflow.method.__lt__", "generated/skbio.workflow.method.__ne__", "generated/skbio.workflow.method.__str__", "generated/skbio.workflow.requires", "generated/skbio.workflow.requires.__call__", "generated/skbio.workflow.requires.__eq__", "generated/skbio.workflow.requires.__ge__", "generated/skbio.workflow.requires.__getstate__", "generated/skbio.workflow.requires.__gt__", "generated/skbio.workflow.requires.__hash__", "generated/skbio.workflow.requires.__le__", "generated/skbio.workflow.requires.__lt__", "generated/skbio.workflow.requires.__ne__", "generated/skbio.workflow.requires.__str__", "index", "io", "metadata", "sequence", "stats", "table", "tree", "util", "workflow"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["alignment.rst", "diversity.rst", "embedding.rst", "generated/skbio.alignment.AlignPath.rst", "generated/skbio.alignment.AlignPath.__eq__.rst", "generated/skbio.alignment.AlignPath.__ge__.rst", "generated/skbio.alignment.AlignPath.__getstate__.rst", "generated/skbio.alignment.AlignPath.__gt__.rst", "generated/skbio.alignment.AlignPath.__hash__.rst", "generated/skbio.alignment.AlignPath.__le__.rst", "generated/skbio.alignment.AlignPath.__lt__.rst", "generated/skbio.alignment.AlignPath.__ne__.rst", "generated/skbio.alignment.AlignPath.__str__.rst", "generated/skbio.alignment.AlignPath.from_bits.rst", "generated/skbio.alignment.AlignPath.from_coordinates.rst", "generated/skbio.alignment.AlignPath.from_indices.rst", "generated/skbio.alignment.AlignPath.from_tabular.rst", "generated/skbio.alignment.AlignPath.to_bits.rst", "generated/skbio.alignment.AlignPath.to_coordinates.rst", "generated/skbio.alignment.AlignPath.to_indices.rst", "generated/skbio.alignment.AlignmentStructure.rst", "generated/skbio.alignment.AlignmentStructure.__eq__.rst", "generated/skbio.alignment.AlignmentStructure.__ge__.rst", "generated/skbio.alignment.AlignmentStructure.__getitem__.rst", "generated/skbio.alignment.AlignmentStructure.__getstate__.rst", "generated/skbio.alignment.AlignmentStructure.__gt__.rst", "generated/skbio.alignment.AlignmentStructure.__hash__.rst", "generated/skbio.alignment.AlignmentStructure.__le__.rst", "generated/skbio.alignment.AlignmentStructure.__lt__.rst", "generated/skbio.alignment.AlignmentStructure.__ne__.rst", "generated/skbio.alignment.AlignmentStructure.__setstate__.rst", "generated/skbio.alignment.AlignmentStructure.__str__.rst", "generated/skbio.alignment.AlignmentStructure.is_zero_based.rst", "generated/skbio.alignment.AlignmentStructure.set_zero_based.rst", "generated/skbio.alignment.PairAlignPath.rst", "generated/skbio.alignment.PairAlignPath.__eq__.rst", "generated/skbio.alignment.PairAlignPath.__ge__.rst", "generated/skbio.alignment.PairAlignPath.__getstate__.rst", "generated/skbio.alignment.PairAlignPath.__gt__.rst", "generated/skbio.alignment.PairAlignPath.__hash__.rst", "generated/skbio.alignment.PairAlignPath.__le__.rst", "generated/skbio.alignment.PairAlignPath.__lt__.rst", "generated/skbio.alignment.PairAlignPath.__ne__.rst", "generated/skbio.alignment.PairAlignPath.__str__.rst", "generated/skbio.alignment.PairAlignPath.from_bits.rst", "generated/skbio.alignment.PairAlignPath.from_cigar.rst", "generated/skbio.alignment.PairAlignPath.from_coordinates.rst", "generated/skbio.alignment.PairAlignPath.from_indices.rst", "generated/skbio.alignment.PairAlignPath.from_tabular.rst", "generated/skbio.alignment.PairAlignPath.to_bits.rst", "generated/skbio.alignment.PairAlignPath.to_cigar.rst", "generated/skbio.alignment.PairAlignPath.to_coordinates.rst", "generated/skbio.alignment.PairAlignPath.to_indices.rst", "generated/skbio.alignment.StripedSmithWaterman.rst", "generated/skbio.alignment.StripedSmithWaterman.__call__.rst", "generated/skbio.alignment.StripedSmithWaterman.__eq__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ge__.rst", "generated/skbio.alignment.StripedSmithWaterman.__getstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__gt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__hash__.rst", "generated/skbio.alignment.StripedSmithWaterman.__le__.rst", "generated/skbio.alignment.StripedSmithWaterman.__lt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ne__.rst", "generated/skbio.alignment.StripedSmithWaterman.__setstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__str__.rst", "generated/skbio.alignment.TabularMSA.rst", "generated/skbio.alignment.TabularMSA.__bool__.rst", "generated/skbio.alignment.TabularMSA.__contains__.rst", "generated/skbio.alignment.TabularMSA.__copy__.rst", "generated/skbio.alignment.TabularMSA.__deepcopy__.rst", "generated/skbio.alignment.TabularMSA.__eq__.rst", "generated/skbio.alignment.TabularMSA.__ge__.rst", "generated/skbio.alignment.TabularMSA.__getitem__.rst", "generated/skbio.alignment.TabularMSA.__getstate__.rst", "generated/skbio.alignment.TabularMSA.__gt__.rst", "generated/skbio.alignment.TabularMSA.__iter__.rst", "generated/skbio.alignment.TabularMSA.__le__.rst", "generated/skbio.alignment.TabularMSA.__len__.rst", "generated/skbio.alignment.TabularMSA.__lt__.rst", "generated/skbio.alignment.TabularMSA.__ne__.rst", "generated/skbio.alignment.TabularMSA.__reversed__.rst", "generated/skbio.alignment.TabularMSA.__str__.rst", "generated/skbio.alignment.TabularMSA.append.rst", "generated/skbio.alignment.TabularMSA.consensus.rst", "generated/skbio.alignment.TabularMSA.conservation.rst", "generated/skbio.alignment.TabularMSA.extend.rst", "generated/skbio.alignment.TabularMSA.from_dict.rst", "generated/skbio.alignment.TabularMSA.from_path_seqs.rst", "generated/skbio.alignment.TabularMSA.gap_frequencies.rst", "generated/skbio.alignment.TabularMSA.has_metadata.rst", "generated/skbio.alignment.TabularMSA.has_positional_metadata.rst", "generated/skbio.alignment.TabularMSA.iter_positions.rst", "generated/skbio.alignment.TabularMSA.join.rst", "generated/skbio.alignment.TabularMSA.read.rst", "generated/skbio.alignment.TabularMSA.reassign_index.rst", "generated/skbio.alignment.TabularMSA.sort.rst", "generated/skbio.alignment.TabularMSA.to_dict.rst", "generated/skbio.alignment.TabularMSA.write.rst", "generated/skbio.alignment.global_pairwise_align.rst", "generated/skbio.alignment.global_pairwise_align_nucleotide.rst", "generated/skbio.alignment.global_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align.rst", "generated/skbio.alignment.local_pairwise_align_nucleotide.rst", "generated/skbio.alignment.local_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align_ssw.rst", "generated/skbio.alignment.make_identity_substitution_matrix.rst", "generated/skbio.diversity.alpha.rst", "generated/skbio.diversity.alpha.ace.rst", "generated/skbio.diversity.alpha.berger_parker_d.rst", "generated/skbio.diversity.alpha.brillouin_d.rst", "generated/skbio.diversity.alpha.chao1.rst", "generated/skbio.diversity.alpha.chao1_ci.rst", "generated/skbio.diversity.alpha.dominance.rst", "generated/skbio.diversity.alpha.doubles.rst", "generated/skbio.diversity.alpha.enspie.rst", "generated/skbio.diversity.alpha.esty_ci.rst", "generated/skbio.diversity.alpha.faith_pd.rst", "generated/skbio.diversity.alpha.fisher_alpha.rst", "generated/skbio.diversity.alpha.gini_index.rst", "generated/skbio.diversity.alpha.goods_coverage.rst", "generated/skbio.diversity.alpha.heip_e.rst", "generated/skbio.diversity.alpha.hill.rst", "generated/skbio.diversity.alpha.inv_simpson.rst", "generated/skbio.diversity.alpha.kempton_taylor_q.rst", "generated/skbio.diversity.alpha.lladser_ci.rst", "generated/skbio.diversity.alpha.lladser_pe.rst", "generated/skbio.diversity.alpha.margalef.rst", "generated/skbio.diversity.alpha.mcintosh_d.rst", "generated/skbio.diversity.alpha.mcintosh_e.rst", "generated/skbio.diversity.alpha.menhinick.rst", "generated/skbio.diversity.alpha.michaelis_menten_fit.rst", "generated/skbio.diversity.alpha.observed_features.rst", "generated/skbio.diversity.alpha.observed_otus.rst", "generated/skbio.diversity.alpha.osd.rst", "generated/skbio.diversity.alpha.phydiv.rst", "generated/skbio.diversity.alpha.pielou_e.rst", "generated/skbio.diversity.alpha.renyi.rst", "generated/skbio.diversity.alpha.robbins.rst", "generated/skbio.diversity.alpha.shannon.rst", "generated/skbio.diversity.alpha.simpson.rst", "generated/skbio.diversity.alpha.simpson_d.rst", "generated/skbio.diversity.alpha.simpson_e.rst", "generated/skbio.diversity.alpha.singles.rst", "generated/skbio.diversity.alpha.sobs.rst", "generated/skbio.diversity.alpha.strong.rst", "generated/skbio.diversity.alpha.tsallis.rst", "generated/skbio.diversity.alpha_diversity.rst", "generated/skbio.diversity.beta.rst", "generated/skbio.diversity.beta.unweighted_unifrac.rst", "generated/skbio.diversity.beta.weighted_unifrac.rst", "generated/skbio.diversity.beta_diversity.rst", "generated/skbio.diversity.block_beta_diversity.rst", "generated/skbio.diversity.get_alpha_diversity_metrics.rst", "generated/skbio.diversity.get_beta_diversity_metrics.rst", "generated/skbio.diversity.partial_beta_diversity.rst", "generated/skbio.embedding.Embedding.rst", "generated/skbio.embedding.Embedding.__eq__.rst", "generated/skbio.embedding.Embedding.__ge__.rst", "generated/skbio.embedding.Embedding.__getstate__.rst", "generated/skbio.embedding.Embedding.__gt__.rst", "generated/skbio.embedding.Embedding.__hash__.rst", "generated/skbio.embedding.Embedding.__le__.rst", "generated/skbio.embedding.Embedding.__lt__.rst", "generated/skbio.embedding.Embedding.__ne__.rst", "generated/skbio.embedding.Embedding.__str__.rst", "generated/skbio.embedding.Embedding.bytes.rst", "generated/skbio.embedding.ProteinEmbedding.rst", "generated/skbio.embedding.ProteinEmbedding.__eq__.rst", "generated/skbio.embedding.ProteinEmbedding.__ge__.rst", "generated/skbio.embedding.ProteinEmbedding.__getstate__.rst", "generated/skbio.embedding.ProteinEmbedding.__gt__.rst", "generated/skbio.embedding.ProteinEmbedding.__hash__.rst", "generated/skbio.embedding.ProteinEmbedding.__le__.rst", "generated/skbio.embedding.ProteinEmbedding.__lt__.rst", "generated/skbio.embedding.ProteinEmbedding.__ne__.rst", "generated/skbio.embedding.ProteinEmbedding.__str__.rst", "generated/skbio.embedding.ProteinEmbedding.bytes.rst", "generated/skbio.embedding.ProteinEmbedding.read.rst", "generated/skbio.embedding.ProteinEmbedding.write.rst", "generated/skbio.embedding.ProteinVector.rst", "generated/skbio.embedding.ProteinVector.__eq__.rst", "generated/skbio.embedding.ProteinVector.__ge__.rst", "generated/skbio.embedding.ProteinVector.__getstate__.rst", "generated/skbio.embedding.ProteinVector.__gt__.rst", "generated/skbio.embedding.ProteinVector.__hash__.rst", "generated/skbio.embedding.ProteinVector.__le__.rst", "generated/skbio.embedding.ProteinVector.__lt__.rst", "generated/skbio.embedding.ProteinVector.__ne__.rst", "generated/skbio.embedding.ProteinVector.__str__.rst", "generated/skbio.embedding.ProteinVector.bytes.rst", "generated/skbio.embedding.ProteinVector.read.rst", "generated/skbio.embedding.ProteinVector.write.rst", "generated/skbio.embedding.SequenceEmbedding.rst", "generated/skbio.embedding.SequenceEmbedding.__eq__.rst", "generated/skbio.embedding.SequenceEmbedding.__ge__.rst", "generated/skbio.embedding.SequenceEmbedding.__getstate__.rst", "generated/skbio.embedding.SequenceEmbedding.__gt__.rst", "generated/skbio.embedding.SequenceEmbedding.__hash__.rst", "generated/skbio.embedding.SequenceEmbedding.__le__.rst", "generated/skbio.embedding.SequenceEmbedding.__lt__.rst", "generated/skbio.embedding.SequenceEmbedding.__ne__.rst", "generated/skbio.embedding.SequenceEmbedding.__str__.rst", "generated/skbio.embedding.SequenceEmbedding.bytes.rst", "generated/skbio.embedding.SequenceVector.rst", "generated/skbio.embedding.SequenceVector.__eq__.rst", "generated/skbio.embedding.SequenceVector.__ge__.rst", "generated/skbio.embedding.SequenceVector.__getstate__.rst", "generated/skbio.embedding.SequenceVector.__gt__.rst", "generated/skbio.embedding.SequenceVector.__hash__.rst", "generated/skbio.embedding.SequenceVector.__le__.rst", "generated/skbio.embedding.SequenceVector.__lt__.rst", "generated/skbio.embedding.SequenceVector.__ne__.rst", "generated/skbio.embedding.SequenceVector.__str__.rst", "generated/skbio.embedding.SequenceVector.bytes.rst", "generated/skbio.embedding.embed_vec_to_dataframe.rst", "generated/skbio.embedding.embed_vec_to_distances.rst", "generated/skbio.embedding.embed_vec_to_numpy.rst", "generated/skbio.embedding.embed_vec_to_ordination.rst", "generated/skbio.io.format.binary_dm.rst", "generated/skbio.io.format.biom.rst", "generated/skbio.io.format.blast6.rst", "generated/skbio.io.format.blast7.rst", "generated/skbio.io.format.clustal.rst", "generated/skbio.io.format.embed.rst", "generated/skbio.io.format.embl.rst", "generated/skbio.io.format.fasta.rst", "generated/skbio.io.format.fastq.rst", "generated/skbio.io.format.genbank.rst", "generated/skbio.io.format.gff3.rst", "generated/skbio.io.format.lsmat.rst", "generated/skbio.io.format.newick.rst", "generated/skbio.io.format.ordination.rst", "generated/skbio.io.format.phylip.rst", "generated/skbio.io.format.qseq.rst", "generated/skbio.io.format.sample_metadata.rst", "generated/skbio.io.format.stockholm.rst", "generated/skbio.io.format.taxdump.rst", "generated/skbio.io.registry.rst", "generated/skbio.io.registry.Format.rst", "generated/skbio.io.registry.Format.__eq__.rst", "generated/skbio.io.registry.Format.__ge__.rst", "generated/skbio.io.registry.Format.__getstate__.rst", "generated/skbio.io.registry.Format.__gt__.rst", "generated/skbio.io.registry.Format.__hash__.rst", "generated/skbio.io.registry.Format.__le__.rst", "generated/skbio.io.registry.Format.__lt__.rst", "generated/skbio.io.registry.Format.__ne__.rst", "generated/skbio.io.registry.Format.__str__.rst", "generated/skbio.io.registry.Format.reader.rst", "generated/skbio.io.registry.Format.sniffer.rst", "generated/skbio.io.registry.Format.writer.rst", "generated/skbio.io.registry.IORegistry.rst", "generated/skbio.io.registry.IORegistry.__eq__.rst", "generated/skbio.io.registry.IORegistry.__ge__.rst", "generated/skbio.io.registry.IORegistry.__getstate__.rst", "generated/skbio.io.registry.IORegistry.__gt__.rst", "generated/skbio.io.registry.IORegistry.__hash__.rst", "generated/skbio.io.registry.IORegistry.__le__.rst", "generated/skbio.io.registry.IORegistry.__lt__.rst", "generated/skbio.io.registry.IORegistry.__ne__.rst", "generated/skbio.io.registry.IORegistry.__str__.rst", "generated/skbio.io.registry.IORegistry.add_format.rst", "generated/skbio.io.registry.IORegistry.create_format.rst", "generated/skbio.io.registry.IORegistry.get_reader.rst", "generated/skbio.io.registry.IORegistry.get_sniffer.rst", "generated/skbio.io.registry.IORegistry.get_writer.rst", "generated/skbio.io.registry.IORegistry.list_read_formats.rst", "generated/skbio.io.registry.IORegistry.list_write_formats.rst", "generated/skbio.io.registry.IORegistry.monkey_patch.rst", "generated/skbio.io.registry.IORegistry.read.rst", "generated/skbio.io.registry.IORegistry.sniff.rst", "generated/skbio.io.registry.IORegistry.write.rst", "generated/skbio.io.registry.create_format.rst", "generated/skbio.io.registry.read.rst", "generated/skbio.io.registry.sniff.rst", "generated/skbio.io.registry.write.rst", "generated/skbio.io.util.rst", "generated/skbio.io.util.open.rst", "generated/skbio.io.util.open_file.rst", "generated/skbio.io.util.open_files.rst", "generated/skbio.metadata.CategoricalMetadataColumn.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__le__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__str__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_value.rst", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.save.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_series.rst", "generated/skbio.metadata.Interval.rst", "generated/skbio.metadata.Interval.__eq__.rst", "generated/skbio.metadata.Interval.__ge__.rst", "generated/skbio.metadata.Interval.__getstate__.rst", "generated/skbio.metadata.Interval.__gt__.rst", "generated/skbio.metadata.Interval.__le__.rst", "generated/skbio.metadata.Interval.__lt__.rst", "generated/skbio.metadata.Interval.__ne__.rst", "generated/skbio.metadata.Interval.__str__.rst", "generated/skbio.metadata.Interval.drop.rst", "generated/skbio.metadata.IntervalMetadata.rst", "generated/skbio.metadata.IntervalMetadata.__copy__.rst", "generated/skbio.metadata.IntervalMetadata.__deepcopy__.rst", "generated/skbio.metadata.IntervalMetadata.__eq__.rst", "generated/skbio.metadata.IntervalMetadata.__ge__.rst", "generated/skbio.metadata.IntervalMetadata.__getstate__.rst", "generated/skbio.metadata.IntervalMetadata.__gt__.rst", "generated/skbio.metadata.IntervalMetadata.__le__.rst", "generated/skbio.metadata.IntervalMetadata.__lt__.rst", "generated/skbio.metadata.IntervalMetadata.__ne__.rst", "generated/skbio.metadata.IntervalMetadata.__str__.rst", "generated/skbio.metadata.IntervalMetadata.add.rst", "generated/skbio.metadata.IntervalMetadata.concat.rst", "generated/skbio.metadata.IntervalMetadata.drop.rst", "generated/skbio.metadata.IntervalMetadata.merge.rst", "generated/skbio.metadata.IntervalMetadata.query.rst", "generated/skbio.metadata.IntervalMetadata.read.rst", "generated/skbio.metadata.IntervalMetadata.sort.rst", "generated/skbio.metadata.IntervalMetadata.write.rst", "generated/skbio.metadata.MetadataColumn.rst", "generated/skbio.metadata.MetadataColumn.__eq__.rst", "generated/skbio.metadata.MetadataColumn.__ge__.rst", "generated/skbio.metadata.MetadataColumn.__getstate__.rst", "generated/skbio.metadata.MetadataColumn.__gt__.rst", "generated/skbio.metadata.MetadataColumn.__le__.rst", "generated/skbio.metadata.MetadataColumn.__lt__.rst", "generated/skbio.metadata.MetadataColumn.__ne__.rst", "generated/skbio.metadata.MetadataColumn.__str__.rst", "generated/skbio.metadata.MetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.MetadataColumn.filter_ids.rst", "generated/skbio.metadata.MetadataColumn.get_ids.rst", "generated/skbio.metadata.MetadataColumn.get_missing.rst", "generated/skbio.metadata.MetadataColumn.get_value.rst", "generated/skbio.metadata.MetadataColumn.has_missing_values.rst", "generated/skbio.metadata.MetadataColumn.save.rst", "generated/skbio.metadata.MetadataColumn.to_dataframe.rst", "generated/skbio.metadata.MetadataColumn.to_series.rst", "generated/skbio.metadata.NumericMetadataColumn.rst", "generated/skbio.metadata.NumericMetadataColumn.__eq__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ge__.rst", "generated/skbio.metadata.NumericMetadataColumn.__getstate__.rst", "generated/skbio.metadata.NumericMetadataColumn.__gt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__le__.rst", "generated/skbio.metadata.NumericMetadataColumn.__lt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ne__.rst", "generated/skbio.metadata.NumericMetadataColumn.__str__.rst", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.filter_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_missing.rst", "generated/skbio.metadata.NumericMetadataColumn.get_value.rst", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.save.rst", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.NumericMetadataColumn.to_series.rst", "generated/skbio.metadata.SampleMetadata.rst", "generated/skbio.metadata.SampleMetadata.__eq__.rst", "generated/skbio.metadata.SampleMetadata.__ge__.rst", "generated/skbio.metadata.SampleMetadata.__getstate__.rst", "generated/skbio.metadata.SampleMetadata.__gt__.rst", "generated/skbio.metadata.SampleMetadata.__le__.rst", "generated/skbio.metadata.SampleMetadata.__lt__.rst", "generated/skbio.metadata.SampleMetadata.__ne__.rst", "generated/skbio.metadata.SampleMetadata.__str__.rst", "generated/skbio.metadata.SampleMetadata.filter_columns.rst", "generated/skbio.metadata.SampleMetadata.filter_ids.rst", "generated/skbio.metadata.SampleMetadata.get_column.rst", "generated/skbio.metadata.SampleMetadata.get_ids.rst", "generated/skbio.metadata.SampleMetadata.load.rst", "generated/skbio.metadata.SampleMetadata.merge.rst", "generated/skbio.metadata.SampleMetadata.read.rst", "generated/skbio.metadata.SampleMetadata.save.rst", "generated/skbio.metadata.SampleMetadata.to_dataframe.rst", "generated/skbio.metadata.SampleMetadata.write.rst", "generated/skbio.sequence.DNA.rst", "generated/skbio.sequence.DNA.__bool__.rst", "generated/skbio.sequence.DNA.__contains__.rst", "generated/skbio.sequence.DNA.__copy__.rst", "generated/skbio.sequence.DNA.__deepcopy__.rst", "generated/skbio.sequence.DNA.__eq__.rst", "generated/skbio.sequence.DNA.__ge__.rst", "generated/skbio.sequence.DNA.__getitem__.rst", "generated/skbio.sequence.DNA.__getstate__.rst", "generated/skbio.sequence.DNA.__gt__.rst", "generated/skbio.sequence.DNA.__iter__.rst", "generated/skbio.sequence.DNA.__le__.rst", "generated/skbio.sequence.DNA.__len__.rst", "generated/skbio.sequence.DNA.__lt__.rst", "generated/skbio.sequence.DNA.__ne__.rst", "generated/skbio.sequence.DNA.__reversed__.rst", "generated/skbio.sequence.DNA.__str__.rst", "generated/skbio.sequence.DNA.complement.rst", "generated/skbio.sequence.DNA.concat.rst", "generated/skbio.sequence.DNA.count.rst", "generated/skbio.sequence.DNA.definites.rst", "generated/skbio.sequence.DNA.degap.rst", "generated/skbio.sequence.DNA.degenerates.rst", "generated/skbio.sequence.DNA.distance.rst", "generated/skbio.sequence.DNA.expand_degenerates.rst", "generated/skbio.sequence.DNA.find_motifs.rst", "generated/skbio.sequence.DNA.find_with_regex.rst", "generated/skbio.sequence.DNA.frequencies.rst", "generated/skbio.sequence.DNA.gaps.rst", "generated/skbio.sequence.DNA.gc_content.rst", "generated/skbio.sequence.DNA.gc_frequency.rst", "generated/skbio.sequence.DNA.has_definites.rst", "generated/skbio.sequence.DNA.has_degenerates.rst", "generated/skbio.sequence.DNA.has_gaps.rst", "generated/skbio.sequence.DNA.has_interval_metadata.rst", "generated/skbio.sequence.DNA.has_metadata.rst", "generated/skbio.sequence.DNA.has_nondegenerates.rst", "generated/skbio.sequence.DNA.has_positional_metadata.rst", "generated/skbio.sequence.DNA.index.rst", "generated/skbio.sequence.DNA.is_reverse_complement.rst", "generated/skbio.sequence.DNA.iter_contiguous.rst", "generated/skbio.sequence.DNA.iter_kmers.rst", "generated/skbio.sequence.DNA.kmer_frequencies.rst", "generated/skbio.sequence.DNA.lowercase.rst", "generated/skbio.sequence.DNA.match_frequency.rst", "generated/skbio.sequence.DNA.matches.rst", "generated/skbio.sequence.DNA.mismatch_frequency.rst", "generated/skbio.sequence.DNA.mismatches.rst", "generated/skbio.sequence.DNA.nondegenerates.rst", "generated/skbio.sequence.DNA.read.rst", "generated/skbio.sequence.DNA.replace.rst", "generated/skbio.sequence.DNA.reverse_complement.rst", "generated/skbio.sequence.DNA.to_definites.rst", "generated/skbio.sequence.DNA.to_indices.rst", "generated/skbio.sequence.DNA.to_regex.rst", "generated/skbio.sequence.DNA.transcribe.rst", "generated/skbio.sequence.DNA.translate.rst", "generated/skbio.sequence.DNA.translate_six_frames.rst", "generated/skbio.sequence.DNA.write.rst", "generated/skbio.sequence.GeneticCode.rst", "generated/skbio.sequence.GeneticCode.__eq__.rst", "generated/skbio.sequence.GeneticCode.__ge__.rst", "generated/skbio.sequence.GeneticCode.__getstate__.rst", "generated/skbio.sequence.GeneticCode.__gt__.rst", "generated/skbio.sequence.GeneticCode.__le__.rst", "generated/skbio.sequence.GeneticCode.__lt__.rst", "generated/skbio.sequence.GeneticCode.__ne__.rst", "generated/skbio.sequence.GeneticCode.__str__.rst", "generated/skbio.sequence.GeneticCode.from_ncbi.rst", "generated/skbio.sequence.GeneticCode.translate.rst", "generated/skbio.sequence.GeneticCode.translate_six_frames.rst", "generated/skbio.sequence.GrammaredSequence.rst", "generated/skbio.sequence.GrammaredSequence.__bool__.rst", "generated/skbio.sequence.GrammaredSequence.__contains__.rst", "generated/skbio.sequence.GrammaredSequence.__copy__.rst", "generated/skbio.sequence.GrammaredSequence.__deepcopy__.rst", "generated/skbio.sequence.GrammaredSequence.__eq__.rst", "generated/skbio.sequence.GrammaredSequence.__ge__.rst", "generated/skbio.sequence.GrammaredSequence.__getitem__.rst", "generated/skbio.sequence.GrammaredSequence.__getstate__.rst", "generated/skbio.sequence.GrammaredSequence.__gt__.rst", "generated/skbio.sequence.GrammaredSequence.__iter__.rst", "generated/skbio.sequence.GrammaredSequence.__le__.rst", "generated/skbio.sequence.GrammaredSequence.__len__.rst", "generated/skbio.sequence.GrammaredSequence.__lt__.rst", "generated/skbio.sequence.GrammaredSequence.__ne__.rst", "generated/skbio.sequence.GrammaredSequence.__reversed__.rst", "generated/skbio.sequence.GrammaredSequence.__str__.rst", "generated/skbio.sequence.GrammaredSequence.concat.rst", "generated/skbio.sequence.GrammaredSequence.count.rst", "generated/skbio.sequence.GrammaredSequence.definites.rst", "generated/skbio.sequence.GrammaredSequence.degap.rst", "generated/skbio.sequence.GrammaredSequence.degenerates.rst", "generated/skbio.sequence.GrammaredSequence.distance.rst", "generated/skbio.sequence.GrammaredSequence.expand_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.find_motifs.rst", "generated/skbio.sequence.GrammaredSequence.find_with_regex.rst", "generated/skbio.sequence.GrammaredSequence.frequencies.rst", "generated/skbio.sequence.GrammaredSequence.gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_definites.rst", "generated/skbio.sequence.GrammaredSequence.has_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata.rst", "generated/skbio.sequence.GrammaredSequence.index.rst", "generated/skbio.sequence.GrammaredSequence.iter_contiguous.rst", "generated/skbio.sequence.GrammaredSequence.iter_kmers.rst", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies.rst", "generated/skbio.sequence.GrammaredSequence.lowercase.rst", "generated/skbio.sequence.GrammaredSequence.match_frequency.rst", "generated/skbio.sequence.GrammaredSequence.matches.rst", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency.rst", "generated/skbio.sequence.GrammaredSequence.mismatches.rst", "generated/skbio.sequence.GrammaredSequence.nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.read.rst", "generated/skbio.sequence.GrammaredSequence.replace.rst", "generated/skbio.sequence.GrammaredSequence.to_definites.rst", "generated/skbio.sequence.GrammaredSequence.to_indices.rst", "generated/skbio.sequence.GrammaredSequence.to_regex.rst", "generated/skbio.sequence.GrammaredSequence.write.rst", "generated/skbio.sequence.Protein.rst", "generated/skbio.sequence.Protein.__bool__.rst", "generated/skbio.sequence.Protein.__contains__.rst", "generated/skbio.sequence.Protein.__copy__.rst", "generated/skbio.sequence.Protein.__deepcopy__.rst", "generated/skbio.sequence.Protein.__eq__.rst", "generated/skbio.sequence.Protein.__ge__.rst", "generated/skbio.sequence.Protein.__getitem__.rst", "generated/skbio.sequence.Protein.__getstate__.rst", "generated/skbio.sequence.Protein.__gt__.rst", "generated/skbio.sequence.Protein.__iter__.rst", "generated/skbio.sequence.Protein.__le__.rst", "generated/skbio.sequence.Protein.__len__.rst", "generated/skbio.sequence.Protein.__lt__.rst", "generated/skbio.sequence.Protein.__ne__.rst", "generated/skbio.sequence.Protein.__reversed__.rst", "generated/skbio.sequence.Protein.__str__.rst", "generated/skbio.sequence.Protein.concat.rst", "generated/skbio.sequence.Protein.count.rst", "generated/skbio.sequence.Protein.definites.rst", "generated/skbio.sequence.Protein.degap.rst", "generated/skbio.sequence.Protein.degenerates.rst", "generated/skbio.sequence.Protein.distance.rst", "generated/skbio.sequence.Protein.expand_degenerates.rst", "generated/skbio.sequence.Protein.find_motifs.rst", "generated/skbio.sequence.Protein.find_with_regex.rst", "generated/skbio.sequence.Protein.frequencies.rst", "generated/skbio.sequence.Protein.gaps.rst", "generated/skbio.sequence.Protein.has_definites.rst", "generated/skbio.sequence.Protein.has_degenerates.rst", "generated/skbio.sequence.Protein.has_gaps.rst", "generated/skbio.sequence.Protein.has_interval_metadata.rst", "generated/skbio.sequence.Protein.has_metadata.rst", "generated/skbio.sequence.Protein.has_nondegenerates.rst", "generated/skbio.sequence.Protein.has_positional_metadata.rst", "generated/skbio.sequence.Protein.has_stops.rst", "generated/skbio.sequence.Protein.index.rst", "generated/skbio.sequence.Protein.iter_contiguous.rst", "generated/skbio.sequence.Protein.iter_kmers.rst", "generated/skbio.sequence.Protein.kmer_frequencies.rst", "generated/skbio.sequence.Protein.lowercase.rst", "generated/skbio.sequence.Protein.match_frequency.rst", "generated/skbio.sequence.Protein.matches.rst", "generated/skbio.sequence.Protein.mismatch_frequency.rst", "generated/skbio.sequence.Protein.mismatches.rst", "generated/skbio.sequence.Protein.nondegenerates.rst", "generated/skbio.sequence.Protein.read.rst", "generated/skbio.sequence.Protein.replace.rst", "generated/skbio.sequence.Protein.stops.rst", "generated/skbio.sequence.Protein.to_definites.rst", "generated/skbio.sequence.Protein.to_indices.rst", "generated/skbio.sequence.Protein.to_regex.rst", "generated/skbio.sequence.Protein.write.rst", "generated/skbio.sequence.RNA.rst", "generated/skbio.sequence.RNA.__bool__.rst", "generated/skbio.sequence.RNA.__contains__.rst", "generated/skbio.sequence.RNA.__copy__.rst", "generated/skbio.sequence.RNA.__deepcopy__.rst", "generated/skbio.sequence.RNA.__eq__.rst", "generated/skbio.sequence.RNA.__ge__.rst", "generated/skbio.sequence.RNA.__getitem__.rst", "generated/skbio.sequence.RNA.__getstate__.rst", "generated/skbio.sequence.RNA.__gt__.rst", "generated/skbio.sequence.RNA.__iter__.rst", "generated/skbio.sequence.RNA.__le__.rst", "generated/skbio.sequence.RNA.__len__.rst", "generated/skbio.sequence.RNA.__lt__.rst", "generated/skbio.sequence.RNA.__ne__.rst", "generated/skbio.sequence.RNA.__reversed__.rst", "generated/skbio.sequence.RNA.__str__.rst", "generated/skbio.sequence.RNA.complement.rst", "generated/skbio.sequence.RNA.concat.rst", "generated/skbio.sequence.RNA.count.rst", "generated/skbio.sequence.RNA.definites.rst", "generated/skbio.sequence.RNA.degap.rst", "generated/skbio.sequence.RNA.degenerates.rst", "generated/skbio.sequence.RNA.distance.rst", "generated/skbio.sequence.RNA.expand_degenerates.rst", "generated/skbio.sequence.RNA.find_motifs.rst", "generated/skbio.sequence.RNA.find_with_regex.rst", "generated/skbio.sequence.RNA.frequencies.rst", "generated/skbio.sequence.RNA.gaps.rst", "generated/skbio.sequence.RNA.gc_content.rst", "generated/skbio.sequence.RNA.gc_frequency.rst", "generated/skbio.sequence.RNA.has_definites.rst", "generated/skbio.sequence.RNA.has_degenerates.rst", "generated/skbio.sequence.RNA.has_gaps.rst", "generated/skbio.sequence.RNA.has_interval_metadata.rst", "generated/skbio.sequence.RNA.has_metadata.rst", "generated/skbio.sequence.RNA.has_nondegenerates.rst", "generated/skbio.sequence.RNA.has_positional_metadata.rst", "generated/skbio.sequence.RNA.index.rst", "generated/skbio.sequence.RNA.is_reverse_complement.rst", "generated/skbio.sequence.RNA.iter_contiguous.rst", "generated/skbio.sequence.RNA.iter_kmers.rst", "generated/skbio.sequence.RNA.kmer_frequencies.rst", "generated/skbio.sequence.RNA.lowercase.rst", "generated/skbio.sequence.RNA.match_frequency.rst", "generated/skbio.sequence.RNA.matches.rst", "generated/skbio.sequence.RNA.mismatch_frequency.rst", "generated/skbio.sequence.RNA.mismatches.rst", "generated/skbio.sequence.RNA.nondegenerates.rst", "generated/skbio.sequence.RNA.read.rst", "generated/skbio.sequence.RNA.replace.rst", "generated/skbio.sequence.RNA.reverse_complement.rst", "generated/skbio.sequence.RNA.reverse_transcribe.rst", "generated/skbio.sequence.RNA.to_definites.rst", "generated/skbio.sequence.RNA.to_indices.rst", "generated/skbio.sequence.RNA.to_regex.rst", "generated/skbio.sequence.RNA.translate.rst", "generated/skbio.sequence.RNA.translate_six_frames.rst", "generated/skbio.sequence.RNA.write.rst", "generated/skbio.sequence.Sequence.rst", "generated/skbio.sequence.Sequence.__bool__.rst", "generated/skbio.sequence.Sequence.__contains__.rst", "generated/skbio.sequence.Sequence.__copy__.rst", "generated/skbio.sequence.Sequence.__deepcopy__.rst", "generated/skbio.sequence.Sequence.__eq__.rst", "generated/skbio.sequence.Sequence.__ge__.rst", "generated/skbio.sequence.Sequence.__getitem__.rst", "generated/skbio.sequence.Sequence.__getstate__.rst", "generated/skbio.sequence.Sequence.__gt__.rst", "generated/skbio.sequence.Sequence.__iter__.rst", "generated/skbio.sequence.Sequence.__le__.rst", "generated/skbio.sequence.Sequence.__len__.rst", "generated/skbio.sequence.Sequence.__lt__.rst", "generated/skbio.sequence.Sequence.__ne__.rst", "generated/skbio.sequence.Sequence.__reversed__.rst", "generated/skbio.sequence.Sequence.__str__.rst", "generated/skbio.sequence.Sequence.concat.rst", "generated/skbio.sequence.Sequence.count.rst", "generated/skbio.sequence.Sequence.distance.rst", "generated/skbio.sequence.Sequence.find_with_regex.rst", "generated/skbio.sequence.Sequence.frequencies.rst", "generated/skbio.sequence.Sequence.has_interval_metadata.rst", "generated/skbio.sequence.Sequence.has_metadata.rst", "generated/skbio.sequence.Sequence.has_positional_metadata.rst", "generated/skbio.sequence.Sequence.index.rst", "generated/skbio.sequence.Sequence.iter_contiguous.rst", "generated/skbio.sequence.Sequence.iter_kmers.rst", "generated/skbio.sequence.Sequence.kmer_frequencies.rst", "generated/skbio.sequence.Sequence.lowercase.rst", "generated/skbio.sequence.Sequence.match_frequency.rst", "generated/skbio.sequence.Sequence.matches.rst", "generated/skbio.sequence.Sequence.mismatch_frequency.rst", "generated/skbio.sequence.Sequence.mismatches.rst", "generated/skbio.sequence.Sequence.read.rst", "generated/skbio.sequence.Sequence.replace.rst", "generated/skbio.sequence.Sequence.to_indices.rst", "generated/skbio.sequence.Sequence.write.rst", "generated/skbio.sequence.SubstitutionMatrix.rst", "generated/skbio.sequence.SubstitutionMatrix.__contains__.rst", "generated/skbio.sequence.SubstitutionMatrix.__eq__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ge__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getitem__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getstate__.rst", "generated/skbio.sequence.SubstitutionMatrix.__gt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__le__.rst", "generated/skbio.sequence.SubstitutionMatrix.__lt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ne__.rst", "generated/skbio.sequence.SubstitutionMatrix.__str__.rst", "generated/skbio.sequence.SubstitutionMatrix.between.rst", "generated/skbio.sequence.SubstitutionMatrix.by_name.rst", "generated/skbio.sequence.SubstitutionMatrix.copy.rst", "generated/skbio.sequence.SubstitutionMatrix.filter.rst", "generated/skbio.sequence.SubstitutionMatrix.from_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.from_iterable.rst", "generated/skbio.sequence.SubstitutionMatrix.get_names.rst", "generated/skbio.sequence.SubstitutionMatrix.identity.rst", "generated/skbio.sequence.SubstitutionMatrix.index.rst", "generated/skbio.sequence.SubstitutionMatrix.plot.rst", "generated/skbio.sequence.SubstitutionMatrix.read.rst", "generated/skbio.sequence.SubstitutionMatrix.redundant_form.rst", "generated/skbio.sequence.SubstitutionMatrix.rename.rst", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame.rst", "generated/skbio.sequence.SubstitutionMatrix.to_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.transpose.rst", "generated/skbio.sequence.SubstitutionMatrix.within.rst", "generated/skbio.sequence.SubstitutionMatrix.write.rst", "generated/skbio.sequence.distance.rst", "generated/skbio.sequence.distance.hamming.rst", "generated/skbio.sequence.distance.kmer_distance.rst", "generated/skbio.stats.composition.rst", "generated/skbio.stats.composition.alr.rst", "generated/skbio.stats.composition.alr_inv.rst", "generated/skbio.stats.composition.ancom.rst", "generated/skbio.stats.composition.centralize.rst", "generated/skbio.stats.composition.closure.rst", "generated/skbio.stats.composition.clr.rst", "generated/skbio.stats.composition.clr_inv.rst", "generated/skbio.stats.composition.dirmult_ttest.rst", "generated/skbio.stats.composition.ilr.rst", "generated/skbio.stats.composition.ilr_inv.rst", "generated/skbio.stats.composition.inner.rst", "generated/skbio.stats.composition.multi_replace.rst", "generated/skbio.stats.composition.multiplicative_replacement.rst", "generated/skbio.stats.composition.pairwise_vlr.rst", "generated/skbio.stats.composition.perturb.rst", "generated/skbio.stats.composition.perturb_inv.rst", "generated/skbio.stats.composition.power.rst", "generated/skbio.stats.composition.sbp_basis.rst", "generated/skbio.stats.composition.tree_basis.rst", "generated/skbio.stats.composition.vlr.rst", "generated/skbio.stats.distance.rst", "generated/skbio.stats.distance.DissimilarityMatrix.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__le__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__str__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.between.rst", "generated/skbio.stats.distance.DissimilarityMatrix.copy.rst", "generated/skbio.stats.distance.DissimilarityMatrix.filter.rst", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable.rst", "generated/skbio.stats.distance.DissimilarityMatrix.index.rst", "generated/skbio.stats.distance.DissimilarityMatrix.plot.rst", "generated/skbio.stats.distance.DissimilarityMatrix.read.rst", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form.rst", "generated/skbio.stats.distance.DissimilarityMatrix.rename.rst", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DissimilarityMatrix.transpose.rst", "generated/skbio.stats.distance.DissimilarityMatrix.within.rst", "generated/skbio.stats.distance.DissimilarityMatrix.write.rst", "generated/skbio.stats.distance.DistanceMatrix.rst", "generated/skbio.stats.distance.DistanceMatrix.__contains__.rst", "generated/skbio.stats.distance.DistanceMatrix.__eq__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ge__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getitem__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getstate__.rst", "generated/skbio.stats.distance.DistanceMatrix.__gt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__le__.rst", "generated/skbio.stats.distance.DistanceMatrix.__lt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ne__.rst", "generated/skbio.stats.distance.DistanceMatrix.__str__.rst", "generated/skbio.stats.distance.DistanceMatrix.between.rst", "generated/skbio.stats.distance.DistanceMatrix.condensed_form.rst", "generated/skbio.stats.distance.DistanceMatrix.copy.rst", "generated/skbio.stats.distance.DistanceMatrix.filter.rst", "generated/skbio.stats.distance.DistanceMatrix.from_iterable.rst", "generated/skbio.stats.distance.DistanceMatrix.index.rst", "generated/skbio.stats.distance.DistanceMatrix.permute.rst", "generated/skbio.stats.distance.DistanceMatrix.plot.rst", "generated/skbio.stats.distance.DistanceMatrix.read.rst", "generated/skbio.stats.distance.DistanceMatrix.redundant_form.rst", "generated/skbio.stats.distance.DistanceMatrix.rename.rst", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DistanceMatrix.to_series.rst", "generated/skbio.stats.distance.DistanceMatrix.transpose.rst", "generated/skbio.stats.distance.DistanceMatrix.within.rst", "generated/skbio.stats.distance.DistanceMatrix.write.rst", "generated/skbio.stats.distance.anosim.rst", "generated/skbio.stats.distance.bioenv.rst", "generated/skbio.stats.distance.mantel.rst", "generated/skbio.stats.distance.permanova.rst", "generated/skbio.stats.distance.permdisp.rst", "generated/skbio.stats.distance.pwmantel.rst", "generated/skbio.stats.distance.randdm.rst", "generated/skbio.stats.evolve.rst", "generated/skbio.stats.evolve.hommola_cospeciation.rst", "generated/skbio.stats.gradient.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.CategoryResults.rst", "generated/skbio.stats.gradient.CategoryResults.__eq__.rst", "generated/skbio.stats.gradient.CategoryResults.__ge__.rst", "generated/skbio.stats.gradient.CategoryResults.__getstate__.rst", "generated/skbio.stats.gradient.CategoryResults.__gt__.rst", "generated/skbio.stats.gradient.CategoryResults.__hash__.rst", "generated/skbio.stats.gradient.CategoryResults.__le__.rst", "generated/skbio.stats.gradient.CategoryResults.__lt__.rst", "generated/skbio.stats.gradient.CategoryResults.__ne__.rst", "generated/skbio.stats.gradient.CategoryResults.__str__.rst", "generated/skbio.stats.gradient.CategoryResults.to_files.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVA.rst", "generated/skbio.stats.gradient.GradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVA.__le__.rst", "generated/skbio.stats.gradient.GradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVA.__str__.rst", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVAResults.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__le__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__str__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.to_files.rst", "generated/skbio.stats.gradient.GroupResults.rst", "generated/skbio.stats.gradient.GroupResults.__eq__.rst", "generated/skbio.stats.gradient.GroupResults.__ge__.rst", "generated/skbio.stats.gradient.GroupResults.__getstate__.rst", "generated/skbio.stats.gradient.GroupResults.__gt__.rst", "generated/skbio.stats.gradient.GroupResults.__hash__.rst", "generated/skbio.stats.gradient.GroupResults.__le__.rst", "generated/skbio.stats.gradient.GroupResults.__lt__.rst", "generated/skbio.stats.gradient.GroupResults.__ne__.rst", "generated/skbio.stats.gradient.GroupResults.__str__.rst", "generated/skbio.stats.gradient.GroupResults.to_files.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.isubsample.rst", "generated/skbio.stats.ordination.rst", "generated/skbio.stats.ordination.OrdinationResults.rst", "generated/skbio.stats.ordination.OrdinationResults.__eq__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ge__.rst", "generated/skbio.stats.ordination.OrdinationResults.__getstate__.rst", "generated/skbio.stats.ordination.OrdinationResults.__gt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__hash__.rst", "generated/skbio.stats.ordination.OrdinationResults.__le__.rst", "generated/skbio.stats.ordination.OrdinationResults.__lt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ne__.rst", "generated/skbio.stats.ordination.OrdinationResults.__str__.rst", "generated/skbio.stats.ordination.OrdinationResults.plot.rst", "generated/skbio.stats.ordination.OrdinationResults.read.rst", "generated/skbio.stats.ordination.OrdinationResults.rename.rst", "generated/skbio.stats.ordination.OrdinationResults.write.rst", "generated/skbio.stats.ordination.ca.rst", "generated/skbio.stats.ordination.cca.rst", "generated/skbio.stats.ordination.corr.rst", "generated/skbio.stats.ordination.e_matrix.rst", "generated/skbio.stats.ordination.f_matrix.rst", "generated/skbio.stats.ordination.mean_and_std.rst", "generated/skbio.stats.ordination.pcoa.rst", "generated/skbio.stats.ordination.pcoa_biplot.rst", "generated/skbio.stats.ordination.rda.rst", "generated/skbio.stats.ordination.scale.rst", "generated/skbio.stats.ordination.svd_rank.rst", "generated/skbio.stats.power.rst", "generated/skbio.stats.power.confidence_bound.rst", "generated/skbio.stats.power.paired_subsamples.rst", "generated/skbio.stats.power.subsample_paired_power.rst", "generated/skbio.stats.power.subsample_power.rst", "generated/skbio.stats.subsample_counts.rst", "generated/skbio.table.Table.rst", "generated/skbio.table.Table.__eq__.rst", "generated/skbio.table.Table.__ge__.rst", "generated/skbio.table.Table.__getitem__.rst", "generated/skbio.table.Table.__getstate__.rst", "generated/skbio.table.Table.__gt__.rst", "generated/skbio.table.Table.__iter__.rst", "generated/skbio.table.Table.__le__.rst", "generated/skbio.table.Table.__lt__.rst", "generated/skbio.table.Table.__ne__.rst", "generated/skbio.table.Table.__str__.rst", "generated/skbio.table.Table.add_group_metadata.rst", "generated/skbio.table.Table.add_metadata.rst", "generated/skbio.table.Table.align_to.rst", "generated/skbio.table.Table.align_to_dataframe.rst", "generated/skbio.table.Table.align_tree.rst", "generated/skbio.table.Table.collapse.rst", "generated/skbio.table.Table.concat.rst", "generated/skbio.table.Table.copy.rst", "generated/skbio.table.Table.data.rst", "generated/skbio.table.Table.del_metadata.rst", "generated/skbio.table.Table.delimited_self.rst", "generated/skbio.table.Table.descriptive_equality.rst", "generated/skbio.table.Table.exists.rst", "generated/skbio.table.Table.filter.rst", "generated/skbio.table.Table.from_adjacency.rst", "generated/skbio.table.Table.from_hdf5.rst", "generated/skbio.table.Table.from_json.rst", "generated/skbio.table.Table.from_tsv.rst", "generated/skbio.table.Table.get_table_density.rst", "generated/skbio.table.Table.get_value_by_ids.rst", "generated/skbio.table.Table.group_metadata.rst", "generated/skbio.table.Table.head.rst", "generated/skbio.table.Table.ids.rst", "generated/skbio.table.Table.index.rst", "generated/skbio.table.Table.is_empty.rst", "generated/skbio.table.Table.iter.rst", "generated/skbio.table.Table.iter_data.rst", "generated/skbio.table.Table.iter_pairwise.rst", "generated/skbio.table.Table.length.rst", "generated/skbio.table.Table.max.rst", "generated/skbio.table.Table.merge.rst", "generated/skbio.table.Table.metadata.rst", "generated/skbio.table.Table.metadata_to_dataframe.rst", "generated/skbio.table.Table.min.rst", "generated/skbio.table.Table.nonzero.rst", "generated/skbio.table.Table.nonzero_counts.rst", "generated/skbio.table.Table.norm.rst", "generated/skbio.table.Table.pa.rst", "generated/skbio.table.Table.partition.rst", "generated/skbio.table.Table.rankdata.rst", "generated/skbio.table.Table.read.rst", "generated/skbio.table.Table.reduce.rst", "generated/skbio.table.Table.remove_empty.rst", "generated/skbio.table.Table.sort.rst", "generated/skbio.table.Table.sort_order.rst", "generated/skbio.table.Table.subsample.rst", "generated/skbio.table.Table.sum.rst", "generated/skbio.table.Table.to_anndata.rst", "generated/skbio.table.Table.to_dataframe.rst", "generated/skbio.table.Table.to_hdf5.rst", "generated/skbio.table.Table.to_json.rst", "generated/skbio.table.Table.to_tsv.rst", "generated/skbio.table.Table.transform.rst", "generated/skbio.table.Table.transpose.rst", "generated/skbio.table.Table.update_ids.rst", "generated/skbio.table.Table.write.rst", "generated/skbio.table.example_table.rst", "generated/skbio.tree.TreeNode.rst", "generated/skbio.tree.TreeNode.__copy__.rst", "generated/skbio.tree.TreeNode.__deepcopy__.rst", "generated/skbio.tree.TreeNode.__eq__.rst", "generated/skbio.tree.TreeNode.__ge__.rst", "generated/skbio.tree.TreeNode.__getitem__.rst", "generated/skbio.tree.TreeNode.__getstate__.rst", "generated/skbio.tree.TreeNode.__gt__.rst", "generated/skbio.tree.TreeNode.__hash__.rst", "generated/skbio.tree.TreeNode.__iter__.rst", "generated/skbio.tree.TreeNode.__le__.rst", "generated/skbio.tree.TreeNode.__len__.rst", "generated/skbio.tree.TreeNode.__lt__.rst", "generated/skbio.tree.TreeNode.__ne__.rst", "generated/skbio.tree.TreeNode.__str__.rst", "generated/skbio.tree.TreeNode.accumulate_to_ancestor.rst", "generated/skbio.tree.TreeNode.ancestors.rst", "generated/skbio.tree.TreeNode.append.rst", "generated/skbio.tree.TreeNode.ascii_art.rst", "generated/skbio.tree.TreeNode.assign_ids.rst", "generated/skbio.tree.TreeNode.assign_supports.rst", "generated/skbio.tree.TreeNode.bifurcate.rst", "generated/skbio.tree.TreeNode.cache_attr.rst", "generated/skbio.tree.TreeNode.compare_rfd.rst", "generated/skbio.tree.TreeNode.compare_subsets.rst", "generated/skbio.tree.TreeNode.compare_tip_distances.rst", "generated/skbio.tree.TreeNode.copy.rst", "generated/skbio.tree.TreeNode.count.rst", "generated/skbio.tree.TreeNode.create_caches.rst", "generated/skbio.tree.TreeNode.deepcopy.rst", "generated/skbio.tree.TreeNode.descending_branch_length.rst", "generated/skbio.tree.TreeNode.distance.rst", "generated/skbio.tree.TreeNode.extend.rst", "generated/skbio.tree.TreeNode.find.rst", "generated/skbio.tree.TreeNode.find_all.rst", "generated/skbio.tree.TreeNode.find_by_func.rst", "generated/skbio.tree.TreeNode.find_by_id.rst", "generated/skbio.tree.TreeNode.from_linkage_matrix.rst", "generated/skbio.tree.TreeNode.from_taxdump.rst", "generated/skbio.tree.TreeNode.from_taxonomy.rst", "generated/skbio.tree.TreeNode.get_max_distance.rst", "generated/skbio.tree.TreeNode.has_children.rst", "generated/skbio.tree.TreeNode.index_tree.rst", "generated/skbio.tree.TreeNode.insert.rst", "generated/skbio.tree.TreeNode.invalidate_caches.rst", "generated/skbio.tree.TreeNode.is_root.rst", "generated/skbio.tree.TreeNode.is_tip.rst", "generated/skbio.tree.TreeNode.lca.rst", "generated/skbio.tree.TreeNode.levelorder.rst", "generated/skbio.tree.TreeNode.lowest_common_ancestor.rst", "generated/skbio.tree.TreeNode.neighbors.rst", "generated/skbio.tree.TreeNode.non_tips.rst", "generated/skbio.tree.TreeNode.observed_node_counts.rst", "generated/skbio.tree.TreeNode.pop.rst", "generated/skbio.tree.TreeNode.postorder.rst", "generated/skbio.tree.TreeNode.pre_and_postorder.rst", "generated/skbio.tree.TreeNode.preorder.rst", "generated/skbio.tree.TreeNode.prune.rst", "generated/skbio.tree.TreeNode.read.rst", "generated/skbio.tree.TreeNode.remove.rst", "generated/skbio.tree.TreeNode.remove_deleted.rst", "generated/skbio.tree.TreeNode.root.rst", "generated/skbio.tree.TreeNode.root_at.rst", "generated/skbio.tree.TreeNode.root_at_midpoint.rst", "generated/skbio.tree.TreeNode.root_by_outgroup.rst", "generated/skbio.tree.TreeNode.shear.rst", "generated/skbio.tree.TreeNode.shuffle.rst", "generated/skbio.tree.TreeNode.siblings.rst", "generated/skbio.tree.TreeNode.subset.rst", "generated/skbio.tree.TreeNode.subsets.rst", "generated/skbio.tree.TreeNode.subtree.rst", "generated/skbio.tree.TreeNode.tip_tip_distances.rst", "generated/skbio.tree.TreeNode.tips.rst", "generated/skbio.tree.TreeNode.to_array.rst", "generated/skbio.tree.TreeNode.to_taxonomy.rst", "generated/skbio.tree.TreeNode.traverse.rst", "generated/skbio.tree.TreeNode.unpack.rst", "generated/skbio.tree.TreeNode.unpack_by_func.rst", "generated/skbio.tree.TreeNode.unroot.rst", "generated/skbio.tree.TreeNode.unrooted_copy.rst", "generated/skbio.tree.TreeNode.unrooted_deepcopy.rst", "generated/skbio.tree.TreeNode.unrooted_move.rst", "generated/skbio.tree.TreeNode.write.rst", "generated/skbio.tree.gme.rst", "generated/skbio.tree.majority_rule.rst", "generated/skbio.tree.nj.rst", "generated/skbio.tree.nni.rst", "generated/skbio.util.EfficiencyWarning.rst", "generated/skbio.util.RepresentationWarning.rst", "generated/skbio.util.assert_data_frame_almost_equal.rst", "generated/skbio.util.assert_ordination_results_equal.rst", "generated/skbio.util.cardinal_to_ordinal.rst", "generated/skbio.util.classproperty.rst", "generated/skbio.util.classproperty.__delete__.rst", "generated/skbio.util.classproperty.__eq__.rst", "generated/skbio.util.classproperty.__ge__.rst", "generated/skbio.util.classproperty.__get__.rst", "generated/skbio.util.classproperty.__getstate__.rst", "generated/skbio.util.classproperty.__gt__.rst", "generated/skbio.util.classproperty.__hash__.rst", "generated/skbio.util.classproperty.__le__.rst", "generated/skbio.util.classproperty.__lt__.rst", "generated/skbio.util.classproperty.__ne__.rst", "generated/skbio.util.classproperty.__set__.rst", "generated/skbio.util.classproperty.__set_name__.rst", "generated/skbio.util.classproperty.__str__.rst", "generated/skbio.util.classproperty.deleter.rst", "generated/skbio.util.classproperty.getter.rst", "generated/skbio.util.classproperty.setter.rst", "generated/skbio.util.find_duplicates.rst", "generated/skbio.util.get_data_path.rst", "generated/skbio.util.safe_md5.rst", "generated/skbio.workflow.Workflow.rst", "generated/skbio.workflow.Workflow.__call__.rst", "generated/skbio.workflow.Workflow.__eq__.rst", "generated/skbio.workflow.Workflow.__ge__.rst", "generated/skbio.workflow.Workflow.__getstate__.rst", "generated/skbio.workflow.Workflow.__gt__.rst", "generated/skbio.workflow.Workflow.__hash__.rst", "generated/skbio.workflow.Workflow.__le__.rst", "generated/skbio.workflow.Workflow.__lt__.rst", "generated/skbio.workflow.Workflow.__ne__.rst", "generated/skbio.workflow.Workflow.__str__.rst", "generated/skbio.workflow.Workflow.initialize_state.rst", "generated/skbio.workflow.method.rst", "generated/skbio.workflow.method.__call__.rst", "generated/skbio.workflow.method.__eq__.rst", "generated/skbio.workflow.method.__ge__.rst", "generated/skbio.workflow.method.__getstate__.rst", "generated/skbio.workflow.method.__gt__.rst", "generated/skbio.workflow.method.__hash__.rst", "generated/skbio.workflow.method.__le__.rst", "generated/skbio.workflow.method.__lt__.rst", "generated/skbio.workflow.method.__ne__.rst", "generated/skbio.workflow.method.__str__.rst", "generated/skbio.workflow.requires.rst", "generated/skbio.workflow.requires.__call__.rst", "generated/skbio.workflow.requires.__eq__.rst", "generated/skbio.workflow.requires.__ge__.rst", "generated/skbio.workflow.requires.__getstate__.rst", "generated/skbio.workflow.requires.__gt__.rst", "generated/skbio.workflow.requires.__hash__.rst", "generated/skbio.workflow.requires.__le__.rst", "generated/skbio.workflow.requires.__lt__.rst", "generated/skbio.workflow.requires.__ne__.rst", "generated/skbio.workflow.requires.__str__.rst", "index.rst", "io.rst", "metadata.rst", "sequence.rst", "stats.rst", "table.rst", "tree.rst", "util.rst", "workflow.rst"], "indexentries": {"__bool__() (skbio.alignment.tabularmsa method)": [[66, "skbio.alignment.TabularMSA.__bool__", false]], "__bool__() (skbio.sequence.dna method)": [[383, "skbio.sequence.DNA.__bool__", false]], "__bool__() (skbio.sequence.grammaredsequence method)": [[454, "skbio.sequence.GrammaredSequence.__bool__", false]], "__bool__() (skbio.sequence.protein method)": [[505, "skbio.sequence.Protein.__bool__", false]], "__bool__() (skbio.sequence.rna method)": [[558, "skbio.sequence.RNA.__bool__", false]], "__bool__() (skbio.sequence.sequence method)": [[617, "skbio.sequence.Sequence.__bool__", false]], "__call__() (skbio.alignment.stripedsmithwaterman method)": [[54, "skbio.alignment.StripedSmithWaterman.__call__", false]], "__call__() (skbio.workflow.method method)": [[1083, "skbio.workflow.method.__call__", false]], "__call__() (skbio.workflow.requires method)": [[1094, "skbio.workflow.requires.__call__", false]], "__call__() (skbio.workflow.workflow method)": [[1071, "skbio.workflow.Workflow.__call__", false]], "__contains__() (skbio.alignment.tabularmsa method)": [[67, "skbio.alignment.TabularMSA.__contains__", false]], "__contains__() (skbio.sequence.dna method)": [[384, "skbio.sequence.DNA.__contains__", false]], "__contains__() (skbio.sequence.grammaredsequence method)": [[455, "skbio.sequence.GrammaredSequence.__contains__", false]], "__contains__() (skbio.sequence.protein method)": [[506, "skbio.sequence.Protein.__contains__", false]], "__contains__() (skbio.sequence.rna method)": [[559, "skbio.sequence.RNA.__contains__", false]], "__contains__() (skbio.sequence.sequence method)": [[618, "skbio.sequence.Sequence.__contains__", false]], "__contains__() (skbio.sequence.substitutionmatrix method)": [[655, "skbio.sequence.SubstitutionMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.dissimilaritymatrix method)": [[709, "skbio.stats.distance.DissimilarityMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.distancematrix method)": [[733, "skbio.stats.distance.DistanceMatrix.__contains__", false]], "__copy__() (skbio.alignment.tabularmsa method)": [[68, "skbio.alignment.TabularMSA.__copy__", false]], "__copy__() (skbio.metadata.intervalmetadata method)": [[309, "skbio.metadata.IntervalMetadata.__copy__", false]], "__copy__() (skbio.sequence.dna method)": [[385, "skbio.sequence.DNA.__copy__", false]], "__copy__() (skbio.sequence.grammaredsequence method)": [[456, "skbio.sequence.GrammaredSequence.__copy__", false]], "__copy__() (skbio.sequence.protein method)": [[507, "skbio.sequence.Protein.__copy__", false]], "__copy__() (skbio.sequence.rna method)": [[560, "skbio.sequence.RNA.__copy__", false]], "__copy__() (skbio.sequence.sequence method)": [[619, "skbio.sequence.Sequence.__copy__", false]], "__copy__() (skbio.tree.treenode method)": [[959, "skbio.tree.TreeNode.__copy__", false]], "__deepcopy__() (skbio.alignment.tabularmsa method)": [[69, "skbio.alignment.TabularMSA.__deepcopy__", false]], "__deepcopy__() (skbio.metadata.intervalmetadata method)": [[310, "skbio.metadata.IntervalMetadata.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.dna method)": [[386, "skbio.sequence.DNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.grammaredsequence method)": [[457, "skbio.sequence.GrammaredSequence.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.protein method)": [[508, "skbio.sequence.Protein.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.rna method)": [[561, "skbio.sequence.RNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.sequence method)": [[620, "skbio.sequence.Sequence.__deepcopy__", false]], "__deepcopy__() (skbio.tree.treenode method)": [[960, "skbio.tree.TreeNode.__deepcopy__", false]], "__delete__() (skbio.util.classproperty method)": [[1051, "skbio.util.classproperty.__delete__", false]], "__eq__() (skbio.alignment.alignmentstructure method)": [[21, "skbio.alignment.AlignmentStructure.__eq__", false]], "__eq__() (skbio.alignment.alignpath method)": [[4, "skbio.alignment.AlignPath.__eq__", false]], "__eq__() (skbio.alignment.pairalignpath method)": [[35, "skbio.alignment.PairAlignPath.__eq__", false]], "__eq__() (skbio.alignment.stripedsmithwaterman method)": [[55, "skbio.alignment.StripedSmithWaterman.__eq__", false]], "__eq__() (skbio.alignment.tabularmsa method)": [[70, "skbio.alignment.TabularMSA.__eq__", false]], "__eq__() (skbio.embedding.embedding method)": [[156, "skbio.embedding.Embedding.__eq__", false]], "__eq__() (skbio.embedding.proteinembedding method)": [[167, "skbio.embedding.ProteinEmbedding.__eq__", false]], "__eq__() (skbio.embedding.proteinvector method)": [[180, "skbio.embedding.ProteinVector.__eq__", false]], "__eq__() (skbio.embedding.sequenceembedding method)": [[193, "skbio.embedding.SequenceEmbedding.__eq__", false]], "__eq__() (skbio.embedding.sequencevector method)": [[204, "skbio.embedding.SequenceVector.__eq__", false]], "__eq__() (skbio.io.registry.format method)": [[239, "skbio.io.registry.Format.__eq__", false]], "__eq__() (skbio.io.registry.ioregistry method)": [[252, "skbio.io.registry.IORegistry.__eq__", false]], "__eq__() (skbio.metadata.categoricalmetadatacolumn method)": [[281, "skbio.metadata.CategoricalMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.interval method)": [[299, "skbio.metadata.Interval.__eq__", false]], "__eq__() (skbio.metadata.intervalmetadata method)": [[311, "skbio.metadata.IntervalMetadata.__eq__", false]], "__eq__() (skbio.metadata.metadatacolumn method)": [[328, "skbio.metadata.MetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.numericmetadatacolumn method)": [[346, "skbio.metadata.NumericMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.samplemetadata method)": [[364, "skbio.metadata.SampleMetadata.__eq__", false]], "__eq__() (skbio.sequence.dna method)": [[387, "skbio.sequence.DNA.__eq__", false]], "__eq__() (skbio.sequence.geneticcode method)": [[442, "skbio.sequence.GeneticCode.__eq__", false]], "__eq__() (skbio.sequence.grammaredsequence method)": [[458, "skbio.sequence.GrammaredSequence.__eq__", false]], "__eq__() (skbio.sequence.protein method)": [[509, "skbio.sequence.Protein.__eq__", false]], "__eq__() (skbio.sequence.rna method)": [[562, "skbio.sequence.RNA.__eq__", false]], "__eq__() (skbio.sequence.sequence method)": [[621, "skbio.sequence.Sequence.__eq__", false]], "__eq__() (skbio.sequence.substitutionmatrix method)": [[656, "skbio.sequence.SubstitutionMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.dissimilaritymatrix method)": [[710, "skbio.stats.distance.DissimilarityMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.distancematrix method)": [[734, "skbio.stats.distance.DistanceMatrix.__eq__", false]], "__eq__() (skbio.stats.gradient.averagegradientanova method)": [[770, "skbio.stats.gradient.AverageGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.categoryresults method)": [[781, "skbio.stats.gradient.CategoryResults.__eq__", false]], "__eq__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[792, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanova method)": [[803, "skbio.stats.gradient.GradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanovaresults method)": [[814, "skbio.stats.gradient.GradientANOVAResults.__eq__", false]], "__eq__() (skbio.stats.gradient.groupresults method)": [[825, "skbio.stats.gradient.GroupResults.__eq__", false]], "__eq__() (skbio.stats.gradient.trajectorygradientanova method)": [[836, "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[847, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.ordination.ordinationresults method)": [[860, "skbio.stats.ordination.OrdinationResults.__eq__", false]], "__eq__() (skbio.table.table method)": [[891, "skbio.table.Table.__eq__", false]], "__eq__() (skbio.tree.treenode method)": [[961, "skbio.tree.TreeNode.__eq__", false]], "__eq__() (skbio.util.classproperty method)": [[1052, "skbio.util.classproperty.__eq__", false]], "__eq__() (skbio.workflow.method method)": [[1084, "skbio.workflow.method.__eq__", false]], "__eq__() (skbio.workflow.requires method)": [[1095, "skbio.workflow.requires.__eq__", false]], "__eq__() (skbio.workflow.workflow method)": [[1072, "skbio.workflow.Workflow.__eq__", false]], "__ge__() (skbio.alignment.alignmentstructure method)": [[22, "skbio.alignment.AlignmentStructure.__ge__", false]], "__ge__() (skbio.alignment.alignpath method)": [[5, "skbio.alignment.AlignPath.__ge__", false]], "__ge__() (skbio.alignment.pairalignpath method)": [[36, "skbio.alignment.PairAlignPath.__ge__", false]], "__ge__() (skbio.alignment.stripedsmithwaterman method)": [[56, "skbio.alignment.StripedSmithWaterman.__ge__", false]], "__ge__() (skbio.alignment.tabularmsa method)": [[71, "skbio.alignment.TabularMSA.__ge__", false]], "__ge__() (skbio.embedding.embedding method)": [[157, "skbio.embedding.Embedding.__ge__", false]], "__ge__() (skbio.embedding.proteinembedding method)": [[168, "skbio.embedding.ProteinEmbedding.__ge__", false]], "__ge__() (skbio.embedding.proteinvector method)": [[181, "skbio.embedding.ProteinVector.__ge__", false]], "__ge__() (skbio.embedding.sequenceembedding method)": [[194, "skbio.embedding.SequenceEmbedding.__ge__", false]], "__ge__() (skbio.embedding.sequencevector method)": [[205, "skbio.embedding.SequenceVector.__ge__", false]], "__ge__() (skbio.io.registry.format method)": [[240, "skbio.io.registry.Format.__ge__", false]], "__ge__() (skbio.io.registry.ioregistry method)": [[253, "skbio.io.registry.IORegistry.__ge__", false]], "__ge__() (skbio.metadata.categoricalmetadatacolumn method)": [[282, "skbio.metadata.CategoricalMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.interval method)": [[300, "skbio.metadata.Interval.__ge__", false]], "__ge__() (skbio.metadata.intervalmetadata method)": [[312, "skbio.metadata.IntervalMetadata.__ge__", false]], "__ge__() (skbio.metadata.metadatacolumn method)": [[329, "skbio.metadata.MetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.numericmetadatacolumn method)": [[347, "skbio.metadata.NumericMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.samplemetadata method)": [[365, "skbio.metadata.SampleMetadata.__ge__", false]], "__ge__() (skbio.sequence.dna method)": [[388, "skbio.sequence.DNA.__ge__", false]], "__ge__() (skbio.sequence.geneticcode method)": [[443, "skbio.sequence.GeneticCode.__ge__", false]], "__ge__() (skbio.sequence.grammaredsequence method)": [[459, "skbio.sequence.GrammaredSequence.__ge__", false]], "__ge__() (skbio.sequence.protein method)": [[510, "skbio.sequence.Protein.__ge__", false]], "__ge__() (skbio.sequence.rna method)": [[563, "skbio.sequence.RNA.__ge__", false]], "__ge__() (skbio.sequence.sequence method)": [[622, "skbio.sequence.Sequence.__ge__", false]], "__ge__() (skbio.sequence.substitutionmatrix method)": [[657, "skbio.sequence.SubstitutionMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.dissimilaritymatrix method)": [[711, "skbio.stats.distance.DissimilarityMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.distancematrix method)": [[735, "skbio.stats.distance.DistanceMatrix.__ge__", false]], "__ge__() (skbio.stats.gradient.averagegradientanova method)": [[771, "skbio.stats.gradient.AverageGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.categoryresults method)": [[782, "skbio.stats.gradient.CategoryResults.__ge__", false]], "__ge__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[793, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanova method)": [[804, "skbio.stats.gradient.GradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanovaresults method)": [[815, "skbio.stats.gradient.GradientANOVAResults.__ge__", false]], "__ge__() (skbio.stats.gradient.groupresults method)": [[826, "skbio.stats.gradient.GroupResults.__ge__", false]], "__ge__() (skbio.stats.gradient.trajectorygradientanova method)": [[837, "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[848, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.ordination.ordinationresults method)": [[861, "skbio.stats.ordination.OrdinationResults.__ge__", false]], "__ge__() (skbio.table.table method)": [[892, "skbio.table.Table.__ge__", false]], "__ge__() (skbio.tree.treenode method)": [[962, "skbio.tree.TreeNode.__ge__", false]], "__ge__() (skbio.util.classproperty method)": [[1053, "skbio.util.classproperty.__ge__", false]], "__ge__() (skbio.workflow.method method)": [[1085, "skbio.workflow.method.__ge__", false]], "__ge__() (skbio.workflow.requires method)": [[1096, "skbio.workflow.requires.__ge__", false]], "__ge__() (skbio.workflow.workflow method)": [[1073, "skbio.workflow.Workflow.__ge__", false]], "__get__() (skbio.util.classproperty method)": [[1054, "skbio.util.classproperty.__get__", false]], "__getitem__() (skbio.alignment.alignmentstructure method)": [[23, "skbio.alignment.AlignmentStructure.__getitem__", false]], "__getitem__() (skbio.alignment.tabularmsa method)": [[72, "skbio.alignment.TabularMSA.__getitem__", false]], "__getitem__() (skbio.sequence.dna method)": [[389, "skbio.sequence.DNA.__getitem__", false]], "__getitem__() (skbio.sequence.grammaredsequence method)": [[460, "skbio.sequence.GrammaredSequence.__getitem__", false]], "__getitem__() (skbio.sequence.protein method)": [[511, "skbio.sequence.Protein.__getitem__", false]], "__getitem__() (skbio.sequence.rna method)": [[564, "skbio.sequence.RNA.__getitem__", false]], "__getitem__() (skbio.sequence.sequence method)": [[623, "skbio.sequence.Sequence.__getitem__", false]], "__getitem__() (skbio.sequence.substitutionmatrix method)": [[658, "skbio.sequence.SubstitutionMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.dissimilaritymatrix method)": [[712, "skbio.stats.distance.DissimilarityMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.distancematrix method)": [[736, "skbio.stats.distance.DistanceMatrix.__getitem__", false]], "__getitem__() (skbio.table.table method)": [[893, "skbio.table.Table.__getitem__", false]], "__getitem__() (skbio.tree.treenode method)": [[963, "skbio.tree.TreeNode.__getitem__", false]], "__getstate__() (skbio.alignment.alignmentstructure method)": [[24, "skbio.alignment.AlignmentStructure.__getstate__", false]], "__getstate__() (skbio.alignment.alignpath method)": [[6, "skbio.alignment.AlignPath.__getstate__", false]], "__getstate__() (skbio.alignment.pairalignpath method)": [[37, "skbio.alignment.PairAlignPath.__getstate__", false]], "__getstate__() (skbio.alignment.stripedsmithwaterman method)": [[57, "skbio.alignment.StripedSmithWaterman.__getstate__", false]], "__getstate__() (skbio.alignment.tabularmsa method)": [[73, "skbio.alignment.TabularMSA.__getstate__", false]], "__getstate__() (skbio.embedding.embedding method)": [[158, "skbio.embedding.Embedding.__getstate__", false]], "__getstate__() (skbio.embedding.proteinembedding method)": [[169, "skbio.embedding.ProteinEmbedding.__getstate__", false]], "__getstate__() (skbio.embedding.proteinvector method)": [[182, "skbio.embedding.ProteinVector.__getstate__", false]], "__getstate__() (skbio.embedding.sequenceembedding method)": [[195, "skbio.embedding.SequenceEmbedding.__getstate__", false]], "__getstate__() (skbio.embedding.sequencevector method)": [[206, "skbio.embedding.SequenceVector.__getstate__", false]], "__getstate__() (skbio.io.registry.format method)": [[241, "skbio.io.registry.Format.__getstate__", false]], "__getstate__() (skbio.io.registry.ioregistry method)": [[254, "skbio.io.registry.IORegistry.__getstate__", false]], "__getstate__() (skbio.metadata.categoricalmetadatacolumn method)": [[283, "skbio.metadata.CategoricalMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.interval method)": [[301, "skbio.metadata.Interval.__getstate__", false]], "__getstate__() (skbio.metadata.intervalmetadata method)": [[313, "skbio.metadata.IntervalMetadata.__getstate__", false]], "__getstate__() (skbio.metadata.metadatacolumn method)": [[330, "skbio.metadata.MetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.numericmetadatacolumn method)": [[348, "skbio.metadata.NumericMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.samplemetadata method)": [[366, "skbio.metadata.SampleMetadata.__getstate__", false]], "__getstate__() (skbio.sequence.dna method)": [[390, "skbio.sequence.DNA.__getstate__", false]], "__getstate__() (skbio.sequence.geneticcode method)": [[444, "skbio.sequence.GeneticCode.__getstate__", false]], "__getstate__() (skbio.sequence.grammaredsequence method)": [[461, "skbio.sequence.GrammaredSequence.__getstate__", false]], "__getstate__() (skbio.sequence.protein method)": [[512, "skbio.sequence.Protein.__getstate__", false]], "__getstate__() (skbio.sequence.rna method)": [[565, "skbio.sequence.RNA.__getstate__", false]], "__getstate__() (skbio.sequence.sequence method)": [[624, "skbio.sequence.Sequence.__getstate__", false]], "__getstate__() (skbio.sequence.substitutionmatrix method)": [[659, "skbio.sequence.SubstitutionMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.dissimilaritymatrix method)": [[713, "skbio.stats.distance.DissimilarityMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.distancematrix method)": [[737, "skbio.stats.distance.DistanceMatrix.__getstate__", false]], "__getstate__() (skbio.stats.gradient.averagegradientanova method)": [[772, "skbio.stats.gradient.AverageGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.categoryresults method)": [[783, "skbio.stats.gradient.CategoryResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[794, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanova method)": [[805, "skbio.stats.gradient.GradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanovaresults method)": [[816, "skbio.stats.gradient.GradientANOVAResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.groupresults method)": [[827, "skbio.stats.gradient.GroupResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.trajectorygradientanova method)": [[838, "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[849, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.ordination.ordinationresults method)": [[862, "skbio.stats.ordination.OrdinationResults.__getstate__", false]], "__getstate__() (skbio.table.table method)": [[894, "skbio.table.Table.__getstate__", false]], "__getstate__() (skbio.tree.treenode method)": [[964, "skbio.tree.TreeNode.__getstate__", false]], "__getstate__() (skbio.util.classproperty method)": [[1055, "skbio.util.classproperty.__getstate__", false]], "__getstate__() (skbio.workflow.method method)": [[1086, "skbio.workflow.method.__getstate__", false]], "__getstate__() (skbio.workflow.requires method)": [[1097, "skbio.workflow.requires.__getstate__", false]], "__getstate__() (skbio.workflow.workflow method)": [[1074, "skbio.workflow.Workflow.__getstate__", false]], "__gt__() (skbio.alignment.alignmentstructure method)": [[25, "skbio.alignment.AlignmentStructure.__gt__", false]], "__gt__() (skbio.alignment.alignpath method)": [[7, "skbio.alignment.AlignPath.__gt__", false]], "__gt__() (skbio.alignment.pairalignpath method)": [[38, "skbio.alignment.PairAlignPath.__gt__", false]], "__gt__() (skbio.alignment.stripedsmithwaterman method)": [[58, "skbio.alignment.StripedSmithWaterman.__gt__", false]], "__gt__() (skbio.alignment.tabularmsa method)": [[74, "skbio.alignment.TabularMSA.__gt__", false]], "__gt__() (skbio.embedding.embedding method)": [[159, "skbio.embedding.Embedding.__gt__", false]], "__gt__() (skbio.embedding.proteinembedding method)": [[170, "skbio.embedding.ProteinEmbedding.__gt__", false]], "__gt__() (skbio.embedding.proteinvector method)": [[183, "skbio.embedding.ProteinVector.__gt__", false]], "__gt__() (skbio.embedding.sequenceembedding method)": [[196, "skbio.embedding.SequenceEmbedding.__gt__", false]], "__gt__() (skbio.embedding.sequencevector method)": [[207, "skbio.embedding.SequenceVector.__gt__", false]], "__gt__() (skbio.io.registry.format method)": [[242, "skbio.io.registry.Format.__gt__", false]], "__gt__() (skbio.io.registry.ioregistry method)": [[255, "skbio.io.registry.IORegistry.__gt__", false]], "__gt__() (skbio.metadata.categoricalmetadatacolumn method)": [[284, "skbio.metadata.CategoricalMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.interval method)": [[302, "skbio.metadata.Interval.__gt__", false]], "__gt__() (skbio.metadata.intervalmetadata method)": [[314, "skbio.metadata.IntervalMetadata.__gt__", false]], "__gt__() (skbio.metadata.metadatacolumn method)": [[331, "skbio.metadata.MetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.numericmetadatacolumn method)": [[349, "skbio.metadata.NumericMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.samplemetadata method)": [[367, "skbio.metadata.SampleMetadata.__gt__", false]], "__gt__() (skbio.sequence.dna method)": [[391, "skbio.sequence.DNA.__gt__", false]], "__gt__() (skbio.sequence.geneticcode method)": [[445, "skbio.sequence.GeneticCode.__gt__", false]], "__gt__() (skbio.sequence.grammaredsequence method)": [[462, "skbio.sequence.GrammaredSequence.__gt__", false]], "__gt__() (skbio.sequence.protein method)": [[513, "skbio.sequence.Protein.__gt__", false]], "__gt__() (skbio.sequence.rna method)": [[566, "skbio.sequence.RNA.__gt__", false]], "__gt__() (skbio.sequence.sequence method)": [[625, "skbio.sequence.Sequence.__gt__", false]], "__gt__() (skbio.sequence.substitutionmatrix method)": [[660, "skbio.sequence.SubstitutionMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.dissimilaritymatrix method)": [[714, "skbio.stats.distance.DissimilarityMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.distancematrix method)": [[738, "skbio.stats.distance.DistanceMatrix.__gt__", false]], "__gt__() (skbio.stats.gradient.averagegradientanova method)": [[773, "skbio.stats.gradient.AverageGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.categoryresults method)": [[784, "skbio.stats.gradient.CategoryResults.__gt__", false]], "__gt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[795, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanova method)": [[806, "skbio.stats.gradient.GradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanovaresults method)": [[817, "skbio.stats.gradient.GradientANOVAResults.__gt__", false]], "__gt__() (skbio.stats.gradient.groupresults method)": [[828, "skbio.stats.gradient.GroupResults.__gt__", false]], "__gt__() (skbio.stats.gradient.trajectorygradientanova method)": [[839, "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[850, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.ordination.ordinationresults method)": [[863, "skbio.stats.ordination.OrdinationResults.__gt__", false]], "__gt__() (skbio.table.table method)": [[895, "skbio.table.Table.__gt__", false]], "__gt__() (skbio.tree.treenode method)": [[965, "skbio.tree.TreeNode.__gt__", false]], "__gt__() (skbio.util.classproperty method)": [[1056, "skbio.util.classproperty.__gt__", false]], "__gt__() (skbio.workflow.method method)": [[1087, "skbio.workflow.method.__gt__", false]], "__gt__() (skbio.workflow.requires method)": [[1098, "skbio.workflow.requires.__gt__", false]], "__gt__() (skbio.workflow.workflow method)": [[1075, "skbio.workflow.Workflow.__gt__", false]], "__hash__() (skbio.alignment.alignmentstructure method)": [[26, "skbio.alignment.AlignmentStructure.__hash__", false]], "__hash__() (skbio.alignment.alignpath method)": [[8, "skbio.alignment.AlignPath.__hash__", false]], "__hash__() (skbio.alignment.pairalignpath method)": [[39, "skbio.alignment.PairAlignPath.__hash__", false]], "__hash__() (skbio.alignment.stripedsmithwaterman method)": [[59, "skbio.alignment.StripedSmithWaterman.__hash__", false]], "__hash__() (skbio.embedding.embedding method)": [[160, "skbio.embedding.Embedding.__hash__", false]], "__hash__() (skbio.embedding.proteinembedding method)": [[171, "skbio.embedding.ProteinEmbedding.__hash__", false]], "__hash__() (skbio.embedding.proteinvector method)": [[184, "skbio.embedding.ProteinVector.__hash__", false]], "__hash__() (skbio.embedding.sequenceembedding method)": [[197, "skbio.embedding.SequenceEmbedding.__hash__", false]], "__hash__() (skbio.embedding.sequencevector method)": [[208, "skbio.embedding.SequenceVector.__hash__", false]], "__hash__() (skbio.io.registry.format method)": [[243, "skbio.io.registry.Format.__hash__", false]], "__hash__() (skbio.io.registry.ioregistry method)": [[256, "skbio.io.registry.IORegistry.__hash__", false]], "__hash__() (skbio.stats.gradient.averagegradientanova method)": [[774, "skbio.stats.gradient.AverageGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.categoryresults method)": [[785, "skbio.stats.gradient.CategoryResults.__hash__", false]], "__hash__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[796, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanova method)": [[807, "skbio.stats.gradient.GradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanovaresults method)": [[818, "skbio.stats.gradient.GradientANOVAResults.__hash__", false]], "__hash__() (skbio.stats.gradient.groupresults method)": [[829, "skbio.stats.gradient.GroupResults.__hash__", false]], "__hash__() (skbio.stats.gradient.trajectorygradientanova method)": [[840, "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[851, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.ordination.ordinationresults method)": [[864, "skbio.stats.ordination.OrdinationResults.__hash__", false]], "__hash__() (skbio.tree.treenode method)": [[966, "skbio.tree.TreeNode.__hash__", false]], "__hash__() (skbio.util.classproperty method)": [[1057, "skbio.util.classproperty.__hash__", false]], "__hash__() (skbio.workflow.method method)": [[1088, "skbio.workflow.method.__hash__", false]], "__hash__() (skbio.workflow.requires method)": [[1099, "skbio.workflow.requires.__hash__", false]], "__hash__() (skbio.workflow.workflow method)": [[1076, "skbio.workflow.Workflow.__hash__", false]], "__iter__() (skbio.alignment.tabularmsa method)": [[75, "skbio.alignment.TabularMSA.__iter__", false]], "__iter__() (skbio.sequence.dna method)": [[392, "skbio.sequence.DNA.__iter__", false]], "__iter__() (skbio.sequence.grammaredsequence method)": [[463, "skbio.sequence.GrammaredSequence.__iter__", false]], "__iter__() (skbio.sequence.protein method)": [[514, "skbio.sequence.Protein.__iter__", false]], "__iter__() (skbio.sequence.rna method)": [[567, "skbio.sequence.RNA.__iter__", false]], "__iter__() (skbio.sequence.sequence method)": [[626, "skbio.sequence.Sequence.__iter__", false]], "__iter__() (skbio.table.table method)": [[896, "skbio.table.Table.__iter__", false]], "__iter__() (skbio.tree.treenode method)": [[967, "skbio.tree.TreeNode.__iter__", false]], "__le__() (skbio.alignment.alignmentstructure method)": [[27, "skbio.alignment.AlignmentStructure.__le__", false]], "__le__() (skbio.alignment.alignpath method)": [[9, "skbio.alignment.AlignPath.__le__", false]], "__le__() (skbio.alignment.pairalignpath method)": [[40, "skbio.alignment.PairAlignPath.__le__", false]], "__le__() (skbio.alignment.stripedsmithwaterman method)": [[60, "skbio.alignment.StripedSmithWaterman.__le__", false]], "__le__() (skbio.alignment.tabularmsa method)": [[76, "skbio.alignment.TabularMSA.__le__", false]], "__le__() (skbio.embedding.embedding method)": [[161, "skbio.embedding.Embedding.__le__", false]], "__le__() (skbio.embedding.proteinembedding method)": [[172, "skbio.embedding.ProteinEmbedding.__le__", false]], "__le__() (skbio.embedding.proteinvector method)": [[185, "skbio.embedding.ProteinVector.__le__", false]], "__le__() (skbio.embedding.sequenceembedding method)": [[198, "skbio.embedding.SequenceEmbedding.__le__", false]], "__le__() (skbio.embedding.sequencevector method)": [[209, "skbio.embedding.SequenceVector.__le__", false]], "__le__() (skbio.io.registry.format method)": [[244, "skbio.io.registry.Format.__le__", false]], "__le__() (skbio.io.registry.ioregistry method)": [[257, "skbio.io.registry.IORegistry.__le__", false]], "__le__() (skbio.metadata.categoricalmetadatacolumn method)": [[285, "skbio.metadata.CategoricalMetadataColumn.__le__", false]], "__le__() (skbio.metadata.interval method)": [[303, "skbio.metadata.Interval.__le__", false]], "__le__() (skbio.metadata.intervalmetadata method)": [[315, "skbio.metadata.IntervalMetadata.__le__", false]], "__le__() (skbio.metadata.metadatacolumn method)": [[332, "skbio.metadata.MetadataColumn.__le__", false]], "__le__() (skbio.metadata.numericmetadatacolumn method)": [[350, "skbio.metadata.NumericMetadataColumn.__le__", false]], "__le__() (skbio.metadata.samplemetadata method)": [[368, "skbio.metadata.SampleMetadata.__le__", false]], "__le__() (skbio.sequence.dna method)": [[393, "skbio.sequence.DNA.__le__", false]], "__le__() (skbio.sequence.geneticcode method)": [[446, "skbio.sequence.GeneticCode.__le__", false]], "__le__() (skbio.sequence.grammaredsequence method)": [[464, "skbio.sequence.GrammaredSequence.__le__", false]], "__le__() (skbio.sequence.protein method)": [[515, "skbio.sequence.Protein.__le__", false]], "__le__() (skbio.sequence.rna method)": [[568, "skbio.sequence.RNA.__le__", false]], "__le__() (skbio.sequence.sequence method)": [[627, "skbio.sequence.Sequence.__le__", false]], "__le__() (skbio.sequence.substitutionmatrix method)": [[661, "skbio.sequence.SubstitutionMatrix.__le__", false]], "__le__() (skbio.stats.distance.dissimilaritymatrix method)": [[715, "skbio.stats.distance.DissimilarityMatrix.__le__", false]], "__le__() (skbio.stats.distance.distancematrix method)": [[739, "skbio.stats.distance.DistanceMatrix.__le__", false]], "__le__() (skbio.stats.gradient.averagegradientanova method)": [[775, "skbio.stats.gradient.AverageGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.categoryresults method)": [[786, "skbio.stats.gradient.CategoryResults.__le__", false]], "__le__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[797, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanova method)": [[808, "skbio.stats.gradient.GradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanovaresults method)": [[819, "skbio.stats.gradient.GradientANOVAResults.__le__", false]], "__le__() (skbio.stats.gradient.groupresults method)": [[830, "skbio.stats.gradient.GroupResults.__le__", false]], "__le__() (skbio.stats.gradient.trajectorygradientanova method)": [[841, "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[852, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.ordination.ordinationresults method)": [[865, "skbio.stats.ordination.OrdinationResults.__le__", false]], "__le__() (skbio.table.table method)": [[897, "skbio.table.Table.__le__", false]], "__le__() (skbio.tree.treenode method)": [[968, "skbio.tree.TreeNode.__le__", false]], "__le__() (skbio.util.classproperty method)": [[1058, "skbio.util.classproperty.__le__", false]], "__le__() (skbio.workflow.method method)": [[1089, "skbio.workflow.method.__le__", false]], "__le__() (skbio.workflow.requires method)": [[1100, "skbio.workflow.requires.__le__", false]], "__le__() (skbio.workflow.workflow method)": [[1077, "skbio.workflow.Workflow.__le__", false]], "__len__() (skbio.alignment.tabularmsa method)": [[77, "skbio.alignment.TabularMSA.__len__", false]], "__len__() (skbio.sequence.dna method)": [[394, "skbio.sequence.DNA.__len__", false]], "__len__() (skbio.sequence.grammaredsequence method)": [[465, "skbio.sequence.GrammaredSequence.__len__", false]], "__len__() (skbio.sequence.protein method)": [[516, "skbio.sequence.Protein.__len__", false]], "__len__() (skbio.sequence.rna method)": [[569, "skbio.sequence.RNA.__len__", false]], "__len__() (skbio.sequence.sequence method)": [[628, "skbio.sequence.Sequence.__len__", false]], "__len__() (skbio.tree.treenode method)": [[969, "skbio.tree.TreeNode.__len__", false]], "__lt__() (skbio.alignment.alignmentstructure method)": [[28, "skbio.alignment.AlignmentStructure.__lt__", false]], "__lt__() (skbio.alignment.alignpath method)": [[10, "skbio.alignment.AlignPath.__lt__", false]], "__lt__() (skbio.alignment.pairalignpath method)": [[41, "skbio.alignment.PairAlignPath.__lt__", false]], "__lt__() (skbio.alignment.stripedsmithwaterman method)": [[61, "skbio.alignment.StripedSmithWaterman.__lt__", false]], "__lt__() (skbio.alignment.tabularmsa method)": [[78, "skbio.alignment.TabularMSA.__lt__", false]], "__lt__() (skbio.embedding.embedding method)": [[162, "skbio.embedding.Embedding.__lt__", false]], "__lt__() (skbio.embedding.proteinembedding method)": [[173, "skbio.embedding.ProteinEmbedding.__lt__", false]], "__lt__() (skbio.embedding.proteinvector method)": [[186, "skbio.embedding.ProteinVector.__lt__", false]], "__lt__() (skbio.embedding.sequenceembedding method)": [[199, "skbio.embedding.SequenceEmbedding.__lt__", false]], "__lt__() (skbio.embedding.sequencevector method)": [[210, "skbio.embedding.SequenceVector.__lt__", false]], "__lt__() (skbio.io.registry.format method)": [[245, "skbio.io.registry.Format.__lt__", false]], "__lt__() (skbio.io.registry.ioregistry method)": [[258, "skbio.io.registry.IORegistry.__lt__", false]], "__lt__() (skbio.metadata.categoricalmetadatacolumn method)": [[286, "skbio.metadata.CategoricalMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.interval method)": [[304, "skbio.metadata.Interval.__lt__", false]], "__lt__() (skbio.metadata.intervalmetadata method)": [[316, "skbio.metadata.IntervalMetadata.__lt__", false]], "__lt__() (skbio.metadata.metadatacolumn method)": [[333, "skbio.metadata.MetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.numericmetadatacolumn method)": [[351, "skbio.metadata.NumericMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.samplemetadata method)": [[369, "skbio.metadata.SampleMetadata.__lt__", false]], "__lt__() (skbio.sequence.dna method)": [[395, "skbio.sequence.DNA.__lt__", false]], "__lt__() (skbio.sequence.geneticcode method)": [[447, "skbio.sequence.GeneticCode.__lt__", false]], "__lt__() (skbio.sequence.grammaredsequence method)": [[466, "skbio.sequence.GrammaredSequence.__lt__", false]], "__lt__() (skbio.sequence.protein method)": [[517, "skbio.sequence.Protein.__lt__", false]], "__lt__() (skbio.sequence.rna method)": [[570, "skbio.sequence.RNA.__lt__", false]], "__lt__() (skbio.sequence.sequence method)": [[629, "skbio.sequence.Sequence.__lt__", false]], "__lt__() (skbio.sequence.substitutionmatrix method)": [[662, "skbio.sequence.SubstitutionMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.dissimilaritymatrix method)": [[716, "skbio.stats.distance.DissimilarityMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.distancematrix method)": [[740, "skbio.stats.distance.DistanceMatrix.__lt__", false]], "__lt__() (skbio.stats.gradient.averagegradientanova method)": [[776, "skbio.stats.gradient.AverageGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.categoryresults method)": [[787, "skbio.stats.gradient.CategoryResults.__lt__", false]], "__lt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[798, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanova method)": [[809, "skbio.stats.gradient.GradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanovaresults method)": [[820, "skbio.stats.gradient.GradientANOVAResults.__lt__", false]], "__lt__() (skbio.stats.gradient.groupresults method)": [[831, "skbio.stats.gradient.GroupResults.__lt__", false]], "__lt__() (skbio.stats.gradient.trajectorygradientanova method)": [[842, "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[853, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.ordination.ordinationresults method)": [[866, "skbio.stats.ordination.OrdinationResults.__lt__", false]], "__lt__() (skbio.table.table method)": [[898, "skbio.table.Table.__lt__", false]], "__lt__() (skbio.tree.treenode method)": [[970, "skbio.tree.TreeNode.__lt__", false]], "__lt__() (skbio.util.classproperty method)": [[1059, "skbio.util.classproperty.__lt__", false]], "__lt__() (skbio.workflow.method method)": [[1090, "skbio.workflow.method.__lt__", false]], "__lt__() (skbio.workflow.requires method)": [[1101, "skbio.workflow.requires.__lt__", false]], "__lt__() (skbio.workflow.workflow method)": [[1078, "skbio.workflow.Workflow.__lt__", false]], "__ne__() (skbio.alignment.alignmentstructure method)": [[29, "skbio.alignment.AlignmentStructure.__ne__", false]], "__ne__() (skbio.alignment.alignpath method)": [[11, "skbio.alignment.AlignPath.__ne__", false]], "__ne__() (skbio.alignment.pairalignpath method)": [[42, "skbio.alignment.PairAlignPath.__ne__", false]], "__ne__() (skbio.alignment.stripedsmithwaterman method)": [[62, "skbio.alignment.StripedSmithWaterman.__ne__", false]], "__ne__() (skbio.alignment.tabularmsa method)": [[79, "skbio.alignment.TabularMSA.__ne__", false]], "__ne__() (skbio.embedding.embedding method)": [[163, "skbio.embedding.Embedding.__ne__", false]], "__ne__() (skbio.embedding.proteinembedding method)": [[174, "skbio.embedding.ProteinEmbedding.__ne__", false]], "__ne__() (skbio.embedding.proteinvector method)": [[187, "skbio.embedding.ProteinVector.__ne__", false]], "__ne__() (skbio.embedding.sequenceembedding method)": [[200, "skbio.embedding.SequenceEmbedding.__ne__", false]], "__ne__() (skbio.embedding.sequencevector method)": [[211, "skbio.embedding.SequenceVector.__ne__", false]], "__ne__() (skbio.io.registry.format method)": [[246, "skbio.io.registry.Format.__ne__", false]], "__ne__() (skbio.io.registry.ioregistry method)": [[259, "skbio.io.registry.IORegistry.__ne__", false]], "__ne__() (skbio.metadata.categoricalmetadatacolumn method)": [[287, "skbio.metadata.CategoricalMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.interval method)": [[305, "skbio.metadata.Interval.__ne__", false]], "__ne__() (skbio.metadata.intervalmetadata method)": [[317, "skbio.metadata.IntervalMetadata.__ne__", false]], "__ne__() (skbio.metadata.metadatacolumn method)": [[334, "skbio.metadata.MetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.numericmetadatacolumn method)": [[352, "skbio.metadata.NumericMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.samplemetadata method)": [[370, "skbio.metadata.SampleMetadata.__ne__", false]], "__ne__() (skbio.sequence.dna method)": [[396, "skbio.sequence.DNA.__ne__", false]], "__ne__() (skbio.sequence.geneticcode method)": [[448, "skbio.sequence.GeneticCode.__ne__", false]], "__ne__() (skbio.sequence.grammaredsequence method)": [[467, "skbio.sequence.GrammaredSequence.__ne__", false]], "__ne__() (skbio.sequence.protein method)": [[518, "skbio.sequence.Protein.__ne__", false]], "__ne__() (skbio.sequence.rna method)": [[571, "skbio.sequence.RNA.__ne__", false]], "__ne__() (skbio.sequence.sequence method)": [[630, "skbio.sequence.Sequence.__ne__", false]], "__ne__() (skbio.sequence.substitutionmatrix method)": [[663, "skbio.sequence.SubstitutionMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.dissimilaritymatrix method)": [[717, "skbio.stats.distance.DissimilarityMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.distancematrix method)": [[741, "skbio.stats.distance.DistanceMatrix.__ne__", false]], "__ne__() (skbio.stats.gradient.averagegradientanova method)": [[777, "skbio.stats.gradient.AverageGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.categoryresults method)": [[788, "skbio.stats.gradient.CategoryResults.__ne__", false]], "__ne__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[799, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanova method)": [[810, "skbio.stats.gradient.GradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanovaresults method)": [[821, "skbio.stats.gradient.GradientANOVAResults.__ne__", false]], "__ne__() (skbio.stats.gradient.groupresults method)": [[832, "skbio.stats.gradient.GroupResults.__ne__", false]], "__ne__() (skbio.stats.gradient.trajectorygradientanova method)": [[843, "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[854, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.ordination.ordinationresults method)": [[867, "skbio.stats.ordination.OrdinationResults.__ne__", false]], "__ne__() (skbio.table.table method)": [[899, "skbio.table.Table.__ne__", false]], "__ne__() (skbio.tree.treenode method)": [[971, "skbio.tree.TreeNode.__ne__", false]], "__ne__() (skbio.util.classproperty method)": [[1060, "skbio.util.classproperty.__ne__", false]], "__ne__() (skbio.workflow.method method)": [[1091, "skbio.workflow.method.__ne__", false]], "__ne__() (skbio.workflow.requires method)": [[1102, "skbio.workflow.requires.__ne__", false]], "__ne__() (skbio.workflow.workflow method)": [[1079, "skbio.workflow.Workflow.__ne__", false]], "__reversed__() (skbio.alignment.tabularmsa method)": [[80, "skbio.alignment.TabularMSA.__reversed__", false]], "__reversed__() (skbio.sequence.dna method)": [[397, "skbio.sequence.DNA.__reversed__", false]], "__reversed__() (skbio.sequence.grammaredsequence method)": [[468, "skbio.sequence.GrammaredSequence.__reversed__", false]], "__reversed__() (skbio.sequence.protein method)": [[519, "skbio.sequence.Protein.__reversed__", false]], "__reversed__() (skbio.sequence.rna method)": [[572, "skbio.sequence.RNA.__reversed__", false]], "__reversed__() (skbio.sequence.sequence method)": [[631, "skbio.sequence.Sequence.__reversed__", false]], "__set__() (skbio.util.classproperty method)": [[1061, "skbio.util.classproperty.__set__", false]], "__set_name__() (skbio.util.classproperty method)": [[1062, "skbio.util.classproperty.__set_name__", false]], "__setstate__() (skbio.alignment.alignmentstructure method)": [[30, "skbio.alignment.AlignmentStructure.__setstate__", false]], "__setstate__() (skbio.alignment.stripedsmithwaterman method)": [[63, "skbio.alignment.StripedSmithWaterman.__setstate__", false]], "__str__() (skbio.alignment.alignmentstructure method)": [[31, "skbio.alignment.AlignmentStructure.__str__", false]], "__str__() (skbio.alignment.alignpath method)": [[12, "skbio.alignment.AlignPath.__str__", false]], "__str__() (skbio.alignment.pairalignpath method)": [[43, "skbio.alignment.PairAlignPath.__str__", false]], "__str__() (skbio.alignment.stripedsmithwaterman method)": [[64, "skbio.alignment.StripedSmithWaterman.__str__", false]], "__str__() (skbio.alignment.tabularmsa method)": [[81, "skbio.alignment.TabularMSA.__str__", false]], "__str__() (skbio.embedding.embedding method)": [[164, "skbio.embedding.Embedding.__str__", false]], "__str__() (skbio.embedding.proteinembedding method)": [[175, "skbio.embedding.ProteinEmbedding.__str__", false]], "__str__() (skbio.embedding.proteinvector method)": [[188, "skbio.embedding.ProteinVector.__str__", false]], "__str__() (skbio.embedding.sequenceembedding method)": [[201, "skbio.embedding.SequenceEmbedding.__str__", false]], "__str__() (skbio.embedding.sequencevector method)": [[212, "skbio.embedding.SequenceVector.__str__", false]], "__str__() (skbio.io.registry.format method)": [[247, "skbio.io.registry.Format.__str__", false]], "__str__() (skbio.io.registry.ioregistry method)": [[260, "skbio.io.registry.IORegistry.__str__", false]], "__str__() (skbio.metadata.categoricalmetadatacolumn method)": [[288, "skbio.metadata.CategoricalMetadataColumn.__str__", false]], "__str__() (skbio.metadata.interval method)": [[306, "skbio.metadata.Interval.__str__", false]], "__str__() (skbio.metadata.intervalmetadata method)": [[318, "skbio.metadata.IntervalMetadata.__str__", false]], "__str__() (skbio.metadata.metadatacolumn method)": [[335, "skbio.metadata.MetadataColumn.__str__", false]], "__str__() (skbio.metadata.numericmetadatacolumn method)": [[353, "skbio.metadata.NumericMetadataColumn.__str__", false]], "__str__() (skbio.metadata.samplemetadata method)": [[371, "skbio.metadata.SampleMetadata.__str__", false]], "__str__() (skbio.sequence.dna method)": [[398, "skbio.sequence.DNA.__str__", false]], "__str__() (skbio.sequence.geneticcode method)": [[449, "skbio.sequence.GeneticCode.__str__", false]], "__str__() (skbio.sequence.grammaredsequence method)": [[469, "skbio.sequence.GrammaredSequence.__str__", false]], "__str__() (skbio.sequence.protein method)": [[520, "skbio.sequence.Protein.__str__", false]], "__str__() (skbio.sequence.rna method)": [[573, "skbio.sequence.RNA.__str__", false]], "__str__() (skbio.sequence.sequence method)": [[632, "skbio.sequence.Sequence.__str__", false]], "__str__() (skbio.sequence.substitutionmatrix method)": [[664, "skbio.sequence.SubstitutionMatrix.__str__", false]], "__str__() (skbio.stats.distance.dissimilaritymatrix method)": [[718, "skbio.stats.distance.DissimilarityMatrix.__str__", false]], "__str__() (skbio.stats.distance.distancematrix method)": [[742, "skbio.stats.distance.DistanceMatrix.__str__", false]], "__str__() (skbio.stats.gradient.averagegradientanova method)": [[778, "skbio.stats.gradient.AverageGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.categoryresults method)": [[789, "skbio.stats.gradient.CategoryResults.__str__", false]], "__str__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[800, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanova method)": [[811, "skbio.stats.gradient.GradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanovaresults method)": [[822, "skbio.stats.gradient.GradientANOVAResults.__str__", false]], "__str__() (skbio.stats.gradient.groupresults method)": [[833, "skbio.stats.gradient.GroupResults.__str__", false]], "__str__() (skbio.stats.gradient.trajectorygradientanova method)": [[844, "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[855, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.ordination.ordinationresults method)": [[868, "skbio.stats.ordination.OrdinationResults.__str__", false]], "__str__() (skbio.table.table method)": [[900, "skbio.table.Table.__str__", false]], "__str__() (skbio.tree.treenode method)": [[972, "skbio.tree.TreeNode.__str__", false]], "__str__() (skbio.util.classproperty method)": [[1063, "skbio.util.classproperty.__str__", false]], "__str__() (skbio.workflow.method method)": [[1092, "skbio.workflow.method.__str__", false]], "__str__() (skbio.workflow.requires method)": [[1103, "skbio.workflow.requires.__str__", false]], "__str__() (skbio.workflow.workflow method)": [[1080, "skbio.workflow.Workflow.__str__", false]], "accumulate_to_ancestor() (skbio.tree.treenode method)": [[973, "skbio.tree.TreeNode.accumulate_to_ancestor", false]], "ace() (in module skbio.diversity.alpha)": [[107, "skbio.diversity.alpha.ace", false]], "add() (skbio.metadata.intervalmetadata method)": [[319, "skbio.metadata.IntervalMetadata.add", false]], "add_format() (skbio.io.registry.ioregistry method)": [[261, "skbio.io.registry.IORegistry.add_format", false]], "add_group_metadata() (skbio.table.table method)": [[901, "skbio.table.Table.add_group_metadata", false]], "add_metadata() (skbio.table.table method)": [[902, "skbio.table.Table.add_metadata", false]], "align_to() (skbio.table.table method)": [[903, "skbio.table.Table.align_to", false]], "align_to_dataframe() (skbio.table.table method)": [[904, "skbio.table.Table.align_to_dataframe", false]], "align_tree() (skbio.table.table method)": [[905, "skbio.table.Table.align_tree", false]], "alignmentstructure (class in skbio.alignment)": [[20, "skbio.alignment.AlignmentStructure", false]], "alignpath (class in skbio.alignment)": [[3, "skbio.alignment.AlignPath", false]], "alpha_diversity() (in module skbio.diversity)": [[146, "skbio.diversity.alpha_diversity", false]], "alr() (in module skbio.stats.composition)": [[687, "skbio.stats.composition.alr", false]], "alr_inv() (in module skbio.stats.composition)": [[688, "skbio.stats.composition.alr_inv", false]], "ancestors() (skbio.tree.treenode method)": [[974, "skbio.tree.TreeNode.ancestors", false]], "ancom() (in module skbio.stats.composition)": [[689, "skbio.stats.composition.ancom", false]], "anosim() (in module skbio.stats.distance)": [[759, "skbio.stats.distance.anosim", false]], "append() (skbio.alignment.tabularmsa method)": [[82, "skbio.alignment.TabularMSA.append", false]], "append() (skbio.tree.treenode method)": [[975, "skbio.tree.TreeNode.append", false]], "ascii_art() (skbio.tree.treenode method)": [[976, "skbio.tree.TreeNode.ascii_art", false]], "assert_data_frame_almost_equal() (in module skbio.util)": [[1047, "skbio.util.assert_data_frame_almost_equal", false]], "assert_ordination_results_equal() (in module skbio.util)": [[1048, "skbio.util.assert_ordination_results_equal", false]], "assign_ids() (skbio.tree.treenode method)": [[977, "skbio.tree.TreeNode.assign_ids", false]], "assign_supports() (skbio.tree.treenode method)": [[978, "skbio.tree.TreeNode.assign_supports", false]], "averagegradientanova (class in skbio.stats.gradient)": [[769, "skbio.stats.gradient.AverageGradientANOVA", false]], "berger_parker_d() (in module skbio.diversity.alpha)": [[108, "skbio.diversity.alpha.berger_parker_d", false]], "beta_diversity() (in module skbio.diversity)": [[150, "skbio.diversity.beta_diversity", false]], "between() (skbio.sequence.substitutionmatrix method)": [[665, "skbio.sequence.SubstitutionMatrix.between", false]], "between() (skbio.stats.distance.dissimilaritymatrix method)": [[719, "skbio.stats.distance.DissimilarityMatrix.between", false]], "between() (skbio.stats.distance.distancematrix method)": [[743, "skbio.stats.distance.DistanceMatrix.between", false]], "bifurcate() (skbio.tree.treenode method)": [[979, "skbio.tree.TreeNode.bifurcate", false]], "bioenv() (in module skbio.stats.distance)": [[760, "skbio.stats.distance.bioenv", false]], "block_beta_diversity() (in module skbio.diversity)": [[151, "skbio.diversity.block_beta_diversity", false]], "brillouin_d() (in module skbio.diversity.alpha)": [[109, "skbio.diversity.alpha.brillouin_d", false]], "by_name() (skbio.sequence.substitutionmatrix class method)": [[666, "skbio.sequence.SubstitutionMatrix.by_name", false]], "bytes() (skbio.embedding.embedding method)": [[165, "skbio.embedding.Embedding.bytes", false]], "bytes() (skbio.embedding.proteinembedding method)": [[176, "skbio.embedding.ProteinEmbedding.bytes", false]], "bytes() (skbio.embedding.proteinvector method)": [[189, "skbio.embedding.ProteinVector.bytes", false]], "bytes() (skbio.embedding.sequenceembedding method)": [[202, "skbio.embedding.SequenceEmbedding.bytes", false]], "bytes() (skbio.embedding.sequencevector method)": [[213, "skbio.embedding.SequenceVector.bytes", false]], "ca() (in module skbio.stats.ordination)": [[873, "skbio.stats.ordination.ca", false]], "cache_attr() (skbio.tree.treenode method)": [[980, "skbio.tree.TreeNode.cache_attr", false]], "cardinal_to_ordinal() (in module skbio.util)": [[1049, "skbio.util.cardinal_to_ordinal", false]], "categoricalmetadatacolumn (class in skbio.metadata)": [[280, "skbio.metadata.CategoricalMetadataColumn", false]], "categoryresults (class in skbio.stats.gradient)": [[780, "skbio.stats.gradient.CategoryResults", false]], "cca() (in module skbio.stats.ordination)": [[874, "skbio.stats.ordination.cca", false]], "centralize() (in module skbio.stats.composition)": [[690, "skbio.stats.composition.centralize", false]], "chao1() (in module skbio.diversity.alpha)": [[110, "skbio.diversity.alpha.chao1", false]], "chao1_ci() (in module skbio.diversity.alpha)": [[111, "skbio.diversity.alpha.chao1_ci", false]], "classproperty (class in skbio.util)": [[1050, "skbio.util.classproperty", false]], "closure() (in module skbio.stats.composition)": [[691, "skbio.stats.composition.closure", false]], "clr() (in module skbio.stats.composition)": [[692, "skbio.stats.composition.clr", false]], "clr_inv() (in module skbio.stats.composition)": [[693, "skbio.stats.composition.clr_inv", false]], "collapse() (skbio.table.table method)": [[906, "skbio.table.Table.collapse", false]], "compare_rfd() (skbio.tree.treenode method)": [[981, "skbio.tree.TreeNode.compare_rfd", false]], "compare_subsets() (skbio.tree.treenode method)": [[982, "skbio.tree.TreeNode.compare_subsets", false]], "compare_tip_distances() (skbio.tree.treenode method)": [[983, "skbio.tree.TreeNode.compare_tip_distances", false]], "complement() (skbio.sequence.dna method)": [[399, "skbio.sequence.DNA.complement", false]], "complement() (skbio.sequence.rna method)": [[574, "skbio.sequence.RNA.complement", false]], "concat() (skbio.metadata.intervalmetadata class method)": [[320, "skbio.metadata.IntervalMetadata.concat", false]], "concat() (skbio.sequence.dna class method)": [[400, "skbio.sequence.DNA.concat", false]], "concat() (skbio.sequence.grammaredsequence class method)": [[470, "skbio.sequence.GrammaredSequence.concat", false]], "concat() (skbio.sequence.protein class method)": [[521, "skbio.sequence.Protein.concat", false]], "concat() (skbio.sequence.rna class method)": [[575, "skbio.sequence.RNA.concat", false]], "concat() (skbio.sequence.sequence class method)": [[633, "skbio.sequence.Sequence.concat", false]], "concat() (skbio.table.table method)": [[907, "skbio.table.Table.concat", false]], "condensed_form() (skbio.stats.distance.distancematrix method)": [[744, "skbio.stats.distance.DistanceMatrix.condensed_form", false]], "confidence_bound() (in module skbio.stats.power)": [[885, "skbio.stats.power.confidence_bound", false]], "consensus() (skbio.alignment.tabularmsa method)": [[83, "skbio.alignment.TabularMSA.consensus", false]], "conservation() (skbio.alignment.tabularmsa method)": [[84, "skbio.alignment.TabularMSA.conservation", false]], "copy() (skbio.sequence.substitutionmatrix method)": [[667, "skbio.sequence.SubstitutionMatrix.copy", false]], "copy() (skbio.stats.distance.dissimilaritymatrix method)": [[720, "skbio.stats.distance.DissimilarityMatrix.copy", false]], "copy() (skbio.stats.distance.distancematrix method)": [[745, "skbio.stats.distance.DistanceMatrix.copy", false]], "copy() (skbio.table.table method)": [[908, "skbio.table.Table.copy", false]], "copy() (skbio.tree.treenode method)": [[984, "skbio.tree.TreeNode.copy", false]], "corr() (in module skbio.stats.ordination)": [[875, "skbio.stats.ordination.corr", false]], "count() (skbio.sequence.dna method)": [[401, "skbio.sequence.DNA.count", false]], "count() (skbio.sequence.grammaredsequence method)": [[471, "skbio.sequence.GrammaredSequence.count", false]], "count() (skbio.sequence.protein method)": [[522, "skbio.sequence.Protein.count", false]], "count() (skbio.sequence.rna method)": [[576, "skbio.sequence.RNA.count", false]], "count() (skbio.sequence.sequence method)": [[634, "skbio.sequence.Sequence.count", false]], "count() (skbio.tree.treenode method)": [[985, "skbio.tree.TreeNode.count", false]], "create_caches() (skbio.tree.treenode method)": [[986, "skbio.tree.TreeNode.create_caches", false]], "create_format() (in module skbio.io.registry)": [[272, "skbio.io.registry.create_format", false]], "create_format() (skbio.io.registry.ioregistry method)": [[262, "skbio.io.registry.IORegistry.create_format", false]], "data() (skbio.table.table method)": [[909, "skbio.table.Table.data", false]], "deepcopy() (skbio.tree.treenode method)": [[987, "skbio.tree.TreeNode.deepcopy", false]], "definites() (skbio.sequence.dna method)": [[402, "skbio.sequence.DNA.definites", false]], "definites() (skbio.sequence.grammaredsequence method)": [[472, "skbio.sequence.GrammaredSequence.definites", false]], "definites() (skbio.sequence.protein method)": [[523, "skbio.sequence.Protein.definites", false]], "definites() (skbio.sequence.rna method)": [[577, "skbio.sequence.RNA.definites", false]], "degap() (skbio.sequence.dna method)": [[403, "skbio.sequence.DNA.degap", false]], "degap() (skbio.sequence.grammaredsequence method)": [[473, "skbio.sequence.GrammaredSequence.degap", false]], "degap() (skbio.sequence.protein method)": [[524, "skbio.sequence.Protein.degap", false]], "degap() (skbio.sequence.rna method)": [[578, "skbio.sequence.RNA.degap", false]], "degenerates() (skbio.sequence.dna method)": [[404, "skbio.sequence.DNA.degenerates", false]], "degenerates() (skbio.sequence.grammaredsequence method)": [[474, "skbio.sequence.GrammaredSequence.degenerates", false]], "degenerates() (skbio.sequence.protein method)": [[525, "skbio.sequence.Protein.degenerates", false]], "degenerates() (skbio.sequence.rna method)": [[579, "skbio.sequence.RNA.degenerates", false]], "del_metadata() (skbio.table.table method)": [[910, "skbio.table.Table.del_metadata", false]], "deleter() (skbio.util.classproperty method)": [[1064, "skbio.util.classproperty.deleter", false]], "delimited_self() (skbio.table.table method)": [[911, "skbio.table.Table.delimited_self", false]], "descending_branch_length() (skbio.tree.treenode method)": [[988, "skbio.tree.TreeNode.descending_branch_length", false]], "descriptive_equality() (skbio.table.table method)": [[912, "skbio.table.Table.descriptive_equality", false]], "dirmult_ttest() (in module skbio.stats.composition)": [[694, "skbio.stats.composition.dirmult_ttest", false]], "dissimilaritymatrix (class in skbio.stats.distance)": [[708, "skbio.stats.distance.DissimilarityMatrix", false]], "distance() (skbio.sequence.dna method)": [[405, "skbio.sequence.DNA.distance", false]], "distance() (skbio.sequence.grammaredsequence method)": [[475, "skbio.sequence.GrammaredSequence.distance", false]], "distance() (skbio.sequence.protein method)": [[526, "skbio.sequence.Protein.distance", false]], "distance() (skbio.sequence.rna method)": [[580, "skbio.sequence.RNA.distance", false]], "distance() (skbio.sequence.sequence method)": [[635, "skbio.sequence.Sequence.distance", false]], "distance() (skbio.tree.treenode method)": [[989, "skbio.tree.TreeNode.distance", false]], "distancematrix (class in skbio.stats.distance)": [[732, "skbio.stats.distance.DistanceMatrix", false]], "dna (class in skbio.sequence)": [[382, "skbio.sequence.DNA", false]], "dominance() (in module skbio.diversity.alpha)": [[112, "skbio.diversity.alpha.dominance", false]], "doubles() (in module skbio.diversity.alpha)": [[113, "skbio.diversity.alpha.doubles", false]], "drop() (skbio.metadata.interval method)": [[307, "skbio.metadata.Interval.drop", false]], "drop() (skbio.metadata.intervalmetadata method)": [[321, "skbio.metadata.IntervalMetadata.drop", false]], "drop_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[289, "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.metadatacolumn method)": [[336, "skbio.metadata.MetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[354, "skbio.metadata.NumericMetadataColumn.drop_missing_values", false]], "e_matrix() (in module skbio.stats.ordination)": [[876, "skbio.stats.ordination.e_matrix", false]], "efficiencywarning": [[1045, "skbio.util.EfficiencyWarning", false]], "embed_vec_to_dataframe() (in module skbio.embedding)": [[214, "skbio.embedding.embed_vec_to_dataframe", false]], "embed_vec_to_distances() (in module skbio.embedding)": [[215, "skbio.embedding.embed_vec_to_distances", false]], "embed_vec_to_numpy() (in module skbio.embedding)": [[216, "skbio.embedding.embed_vec_to_numpy", false]], "embed_vec_to_ordination() (in module skbio.embedding)": [[217, "skbio.embedding.embed_vec_to_ordination", false]], "embedding (class in skbio.embedding)": [[155, "skbio.embedding.Embedding", false]], "enspie() (in module skbio.diversity.alpha)": [[114, "skbio.diversity.alpha.enspie", false]], "esty_ci() (in module skbio.diversity.alpha)": [[115, "skbio.diversity.alpha.esty_ci", false]], "example_table (in module skbio.table)": [[957, "skbio.table.example_table", false]], "exists() (skbio.table.table method)": [[913, "skbio.table.Table.exists", false]], "expand_degenerates() (skbio.sequence.dna method)": [[406, "skbio.sequence.DNA.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.grammaredsequence method)": [[476, "skbio.sequence.GrammaredSequence.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.protein method)": [[527, "skbio.sequence.Protein.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.rna method)": [[581, "skbio.sequence.RNA.expand_degenerates", false]], "extend() (skbio.alignment.tabularmsa method)": [[85, "skbio.alignment.TabularMSA.extend", false]], "extend() (skbio.tree.treenode method)": [[990, "skbio.tree.TreeNode.extend", false]], "f_matrix() (in module skbio.stats.ordination)": [[877, "skbio.stats.ordination.f_matrix", false]], "faith_pd() (in module skbio.diversity.alpha)": [[116, "skbio.diversity.alpha.faith_pd", false]], "filter() (skbio.sequence.substitutionmatrix method)": [[668, "skbio.sequence.SubstitutionMatrix.filter", false]], "filter() (skbio.stats.distance.dissimilaritymatrix method)": [[721, "skbio.stats.distance.DissimilarityMatrix.filter", false]], "filter() (skbio.stats.distance.distancematrix method)": [[746, "skbio.stats.distance.DistanceMatrix.filter", false]], "filter() (skbio.table.table method)": [[914, "skbio.table.Table.filter", false]], "filter_columns() (skbio.metadata.samplemetadata method)": [[372, "skbio.metadata.SampleMetadata.filter_columns", false]], "filter_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[290, "skbio.metadata.CategoricalMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.metadatacolumn method)": [[337, "skbio.metadata.MetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.numericmetadatacolumn method)": [[355, "skbio.metadata.NumericMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.samplemetadata method)": [[373, "skbio.metadata.SampleMetadata.filter_ids", false]], "find() (skbio.tree.treenode method)": [[991, "skbio.tree.TreeNode.find", false]], "find_all() (skbio.tree.treenode method)": [[992, "skbio.tree.TreeNode.find_all", false]], "find_by_func() (skbio.tree.treenode method)": [[993, "skbio.tree.TreeNode.find_by_func", false]], "find_by_id() (skbio.tree.treenode method)": [[994, "skbio.tree.TreeNode.find_by_id", false]], "find_duplicates() (in module skbio.util)": [[1067, "skbio.util.find_duplicates", false]], "find_motifs() (skbio.sequence.dna method)": [[407, "skbio.sequence.DNA.find_motifs", false]], "find_motifs() (skbio.sequence.grammaredsequence method)": [[477, "skbio.sequence.GrammaredSequence.find_motifs", false]], "find_motifs() (skbio.sequence.protein method)": [[528, "skbio.sequence.Protein.find_motifs", false]], "find_motifs() (skbio.sequence.rna method)": [[582, "skbio.sequence.RNA.find_motifs", false]], "find_with_regex() (skbio.sequence.dna method)": [[408, "skbio.sequence.DNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.grammaredsequence method)": [[478, "skbio.sequence.GrammaredSequence.find_with_regex", false]], "find_with_regex() (skbio.sequence.protein method)": [[529, "skbio.sequence.Protein.find_with_regex", false]], "find_with_regex() (skbio.sequence.rna method)": [[583, "skbio.sequence.RNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.sequence method)": [[636, "skbio.sequence.Sequence.find_with_regex", false]], "firstdifferencegradientanova (class in skbio.stats.gradient)": [[791, "skbio.stats.gradient.FirstDifferenceGradientANOVA", false]], "fisher_alpha() (in module skbio.diversity.alpha)": [[117, "skbio.diversity.alpha.fisher_alpha", false]], "format (class in skbio.io.registry)": [[238, "skbio.io.registry.Format", false]], "frequencies() (skbio.sequence.dna method)": [[409, "skbio.sequence.DNA.frequencies", false]], "frequencies() (skbio.sequence.grammaredsequence method)": [[479, "skbio.sequence.GrammaredSequence.frequencies", false]], "frequencies() (skbio.sequence.protein method)": [[530, "skbio.sequence.Protein.frequencies", false]], "frequencies() (skbio.sequence.rna method)": [[584, "skbio.sequence.RNA.frequencies", false]], "frequencies() (skbio.sequence.sequence method)": [[637, "skbio.sequence.Sequence.frequencies", false]], "from_adjacency() (skbio.table.table static method)": [[915, "skbio.table.Table.from_adjacency", false]], "from_bits() (skbio.alignment.alignpath class method)": [[13, "skbio.alignment.AlignPath.from_bits", false]], "from_bits() (skbio.alignment.pairalignpath class method)": [[44, "skbio.alignment.PairAlignPath.from_bits", false]], "from_cigar() (skbio.alignment.pairalignpath class method)": [[45, "skbio.alignment.PairAlignPath.from_cigar", false]], "from_coordinates() (skbio.alignment.alignpath class method)": [[14, "skbio.alignment.AlignPath.from_coordinates", false]], "from_coordinates() (skbio.alignment.pairalignpath class method)": [[46, "skbio.alignment.PairAlignPath.from_coordinates", false]], "from_dict() (skbio.alignment.tabularmsa class method)": [[86, "skbio.alignment.TabularMSA.from_dict", false]], "from_dict() (skbio.sequence.substitutionmatrix class method)": [[669, "skbio.sequence.SubstitutionMatrix.from_dict", false]], "from_hdf5() (skbio.table.table class method)": [[916, "skbio.table.Table.from_hdf5", false]], "from_indices() (skbio.alignment.alignpath class method)": [[15, "skbio.alignment.AlignPath.from_indices", false]], "from_indices() (skbio.alignment.pairalignpath class method)": [[47, "skbio.alignment.PairAlignPath.from_indices", false]], "from_iterable() (skbio.sequence.substitutionmatrix class method)": [[670, "skbio.sequence.SubstitutionMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.dissimilaritymatrix class method)": [[722, "skbio.stats.distance.DissimilarityMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.distancematrix class method)": [[747, "skbio.stats.distance.DistanceMatrix.from_iterable", false]], "from_json() (skbio.table.table class method)": [[917, "skbio.table.Table.from_json", false]], "from_linkage_matrix() (skbio.tree.treenode class method)": [[995, "skbio.tree.TreeNode.from_linkage_matrix", false]], "from_ncbi() (skbio.sequence.geneticcode class method)": [[450, "skbio.sequence.GeneticCode.from_ncbi", false]], "from_path_seqs() (skbio.alignment.tabularmsa class method)": [[87, "skbio.alignment.TabularMSA.from_path_seqs", false]], "from_tabular() (skbio.alignment.alignpath class method)": [[16, "skbio.alignment.AlignPath.from_tabular", false]], "from_tabular() (skbio.alignment.pairalignpath class method)": [[48, "skbio.alignment.PairAlignPath.from_tabular", false]], "from_taxdump() (skbio.tree.treenode class method)": [[996, "skbio.tree.TreeNode.from_taxdump", false]], "from_taxonomy() (skbio.tree.treenode class method)": [[997, "skbio.tree.TreeNode.from_taxonomy", false]], "from_tsv() (skbio.table.table static method)": [[918, "skbio.table.Table.from_tsv", false]], "gap_frequencies() (skbio.alignment.tabularmsa method)": [[88, "skbio.alignment.TabularMSA.gap_frequencies", false]], "gaps() (skbio.sequence.dna method)": [[410, "skbio.sequence.DNA.gaps", false]], "gaps() (skbio.sequence.grammaredsequence method)": [[480, "skbio.sequence.GrammaredSequence.gaps", false]], "gaps() (skbio.sequence.protein method)": [[531, "skbio.sequence.Protein.gaps", false]], "gaps() (skbio.sequence.rna method)": [[585, "skbio.sequence.RNA.gaps", false]], "gc_content() (skbio.sequence.dna method)": [[411, "skbio.sequence.DNA.gc_content", false]], "gc_content() (skbio.sequence.rna method)": [[586, "skbio.sequence.RNA.gc_content", false]], "gc_frequency() (skbio.sequence.dna method)": [[412, "skbio.sequence.DNA.gc_frequency", false]], "gc_frequency() (skbio.sequence.rna method)": [[587, "skbio.sequence.RNA.gc_frequency", false]], "geneticcode (class in skbio.sequence)": [[441, "skbio.sequence.GeneticCode", false]], "get_alpha_diversity_metrics() (in module skbio.diversity)": [[152, "skbio.diversity.get_alpha_diversity_metrics", false]], "get_beta_diversity_metrics() (in module skbio.diversity)": [[153, "skbio.diversity.get_beta_diversity_metrics", false]], "get_column() (skbio.metadata.samplemetadata method)": [[374, "skbio.metadata.SampleMetadata.get_column", false]], "get_data_path() (in module skbio.util)": [[1068, "skbio.util.get_data_path", false]], "get_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[291, "skbio.metadata.CategoricalMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.metadatacolumn method)": [[338, "skbio.metadata.MetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.numericmetadatacolumn method)": [[356, "skbio.metadata.NumericMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.samplemetadata method)": [[375, "skbio.metadata.SampleMetadata.get_ids", false]], "get_max_distance() (skbio.tree.treenode method)": [[998, "skbio.tree.TreeNode.get_max_distance", false]], "get_missing() (skbio.metadata.categoricalmetadatacolumn method)": [[292, "skbio.metadata.CategoricalMetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.metadatacolumn method)": [[339, "skbio.metadata.MetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.numericmetadatacolumn method)": [[357, "skbio.metadata.NumericMetadataColumn.get_missing", false]], "get_names() (skbio.sequence.substitutionmatrix class method)": [[671, "skbio.sequence.SubstitutionMatrix.get_names", false]], "get_reader() (skbio.io.registry.ioregistry method)": [[263, "skbio.io.registry.IORegistry.get_reader", false]], "get_sniffer() (skbio.io.registry.ioregistry method)": [[264, "skbio.io.registry.IORegistry.get_sniffer", false]], "get_table_density() (skbio.table.table method)": [[919, "skbio.table.Table.get_table_density", false]], "get_trajectories() (skbio.stats.gradient.averagegradientanova method)": [[779, "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.firstdifferencegradientanova method)": [[801, "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.gradientanova method)": [[812, "skbio.stats.gradient.GradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.trajectorygradientanova method)": [[845, "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.windowdifferencegradientanova method)": [[856, "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", false]], "get_value() (skbio.metadata.categoricalmetadatacolumn method)": [[293, "skbio.metadata.CategoricalMetadataColumn.get_value", false]], "get_value() (skbio.metadata.metadatacolumn method)": [[340, "skbio.metadata.MetadataColumn.get_value", false]], "get_value() (skbio.metadata.numericmetadatacolumn method)": [[358, "skbio.metadata.NumericMetadataColumn.get_value", false]], "get_value_by_ids() (skbio.table.table method)": [[920, "skbio.table.Table.get_value_by_ids", false]], "get_writer() (skbio.io.registry.ioregistry method)": [[265, "skbio.io.registry.IORegistry.get_writer", false]], "getter() (skbio.util.classproperty method)": [[1065, "skbio.util.classproperty.getter", false]], "gini_index() (in module skbio.diversity.alpha)": [[118, "skbio.diversity.alpha.gini_index", false]], "global_pairwise_align() (in module skbio.alignment)": [[98, "skbio.alignment.global_pairwise_align", false]], "global_pairwise_align_nucleotide() (in module skbio.alignment)": [[99, "skbio.alignment.global_pairwise_align_nucleotide", false]], "global_pairwise_align_protein() (in module skbio.alignment)": [[100, "skbio.alignment.global_pairwise_align_protein", false]], "gme() (in module skbio.tree)": [[1041, "skbio.tree.gme", false]], "goods_coverage() (in module skbio.diversity.alpha)": [[119, "skbio.diversity.alpha.goods_coverage", false]], "gradientanova (class in skbio.stats.gradient)": [[802, "skbio.stats.gradient.GradientANOVA", false]], "gradientanovaresults (class in skbio.stats.gradient)": [[813, "skbio.stats.gradient.GradientANOVAResults", false]], "grammaredsequence (class in skbio.sequence)": [[453, "skbio.sequence.GrammaredSequence", false]], "group_metadata() (skbio.table.table method)": [[921, "skbio.table.Table.group_metadata", false]], "groupresults (class in skbio.stats.gradient)": [[824, "skbio.stats.gradient.GroupResults", false]], "hamming() (in module skbio.sequence.distance)": [[684, "skbio.sequence.distance.hamming", false]], "has_children() (skbio.tree.treenode method)": [[999, "skbio.tree.TreeNode.has_children", false]], "has_definites() (skbio.sequence.dna method)": [[413, "skbio.sequence.DNA.has_definites", false]], "has_definites() (skbio.sequence.grammaredsequence method)": [[481, "skbio.sequence.GrammaredSequence.has_definites", false]], "has_definites() (skbio.sequence.protein method)": [[532, "skbio.sequence.Protein.has_definites", false]], "has_definites() (skbio.sequence.rna method)": [[588, "skbio.sequence.RNA.has_definites", false]], "has_degenerates() (skbio.sequence.dna method)": [[414, "skbio.sequence.DNA.has_degenerates", false]], "has_degenerates() (skbio.sequence.grammaredsequence method)": [[482, "skbio.sequence.GrammaredSequence.has_degenerates", false]], "has_degenerates() (skbio.sequence.protein method)": [[533, "skbio.sequence.Protein.has_degenerates", false]], "has_degenerates() (skbio.sequence.rna method)": [[589, "skbio.sequence.RNA.has_degenerates", false]], "has_gaps() (skbio.sequence.dna method)": [[415, "skbio.sequence.DNA.has_gaps", false]], "has_gaps() (skbio.sequence.grammaredsequence method)": [[483, "skbio.sequence.GrammaredSequence.has_gaps", false]], "has_gaps() (skbio.sequence.protein method)": [[534, "skbio.sequence.Protein.has_gaps", false]], "has_gaps() (skbio.sequence.rna method)": [[590, "skbio.sequence.RNA.has_gaps", false]], "has_interval_metadata() (skbio.sequence.dna method)": [[416, "skbio.sequence.DNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.grammaredsequence method)": [[484, "skbio.sequence.GrammaredSequence.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.protein method)": [[535, "skbio.sequence.Protein.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.rna method)": [[591, "skbio.sequence.RNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.sequence method)": [[638, "skbio.sequence.Sequence.has_interval_metadata", false]], "has_metadata() (skbio.alignment.tabularmsa method)": [[89, "skbio.alignment.TabularMSA.has_metadata", false]], "has_metadata() (skbio.sequence.dna method)": [[417, "skbio.sequence.DNA.has_metadata", false]], "has_metadata() (skbio.sequence.grammaredsequence method)": [[485, "skbio.sequence.GrammaredSequence.has_metadata", false]], "has_metadata() (skbio.sequence.protein method)": [[536, "skbio.sequence.Protein.has_metadata", false]], "has_metadata() (skbio.sequence.rna method)": [[592, "skbio.sequence.RNA.has_metadata", false]], "has_metadata() (skbio.sequence.sequence method)": [[639, "skbio.sequence.Sequence.has_metadata", false]], "has_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[294, "skbio.metadata.CategoricalMetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.metadatacolumn method)": [[341, "skbio.metadata.MetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[359, "skbio.metadata.NumericMetadataColumn.has_missing_values", false]], "has_nondegenerates() (skbio.sequence.dna method)": [[418, "skbio.sequence.DNA.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.grammaredsequence method)": [[486, "skbio.sequence.GrammaredSequence.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.protein method)": [[537, "skbio.sequence.Protein.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.rna method)": [[593, "skbio.sequence.RNA.has_nondegenerates", false]], "has_positional_metadata() (skbio.alignment.tabularmsa method)": [[90, "skbio.alignment.TabularMSA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.dna method)": [[419, "skbio.sequence.DNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.grammaredsequence method)": [[487, "skbio.sequence.GrammaredSequence.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.protein method)": [[538, "skbio.sequence.Protein.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.rna method)": [[594, "skbio.sequence.RNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.sequence method)": [[640, "skbio.sequence.Sequence.has_positional_metadata", false]], "has_stops() (skbio.sequence.protein method)": [[539, "skbio.sequence.Protein.has_stops", false]], "head() (skbio.table.table method)": [[922, "skbio.table.Table.head", false]], "heip_e() (in module skbio.diversity.alpha)": [[120, "skbio.diversity.alpha.heip_e", false]], "hill() (in module skbio.diversity.alpha)": [[121, "skbio.diversity.alpha.hill", false]], "hommola_cospeciation() (in module skbio.stats.evolve)": [[767, "skbio.stats.evolve.hommola_cospeciation", false]], "identity() (skbio.sequence.substitutionmatrix class method)": [[672, "skbio.sequence.SubstitutionMatrix.identity", false]], "ids() (skbio.table.table method)": [[923, "skbio.table.Table.ids", false]], "ilr() (in module skbio.stats.composition)": [[695, "skbio.stats.composition.ilr", false]], "ilr_inv() (in module skbio.stats.composition)": [[696, "skbio.stats.composition.ilr_inv", false]], "index() (skbio.sequence.dna method)": [[420, "skbio.sequence.DNA.index", false]], "index() (skbio.sequence.grammaredsequence method)": [[488, "skbio.sequence.GrammaredSequence.index", false]], "index() (skbio.sequence.protein method)": [[540, "skbio.sequence.Protein.index", false]], "index() (skbio.sequence.rna method)": [[595, "skbio.sequence.RNA.index", false]], "index() (skbio.sequence.sequence method)": [[641, "skbio.sequence.Sequence.index", false]], "index() (skbio.sequence.substitutionmatrix method)": [[673, "skbio.sequence.SubstitutionMatrix.index", false]], "index() (skbio.stats.distance.dissimilaritymatrix method)": [[723, "skbio.stats.distance.DissimilarityMatrix.index", false]], "index() (skbio.stats.distance.distancematrix method)": [[748, "skbio.stats.distance.DistanceMatrix.index", false]], "index() (skbio.table.table method)": [[924, "skbio.table.Table.index", false]], "index_tree() (skbio.tree.treenode method)": [[1000, "skbio.tree.TreeNode.index_tree", false]], "initialize_state() (skbio.workflow.workflow method)": [[1081, "skbio.workflow.Workflow.initialize_state", false]], "inner() (in module skbio.stats.composition)": [[697, "skbio.stats.composition.inner", false]], "insert() (skbio.tree.treenode method)": [[1001, "skbio.tree.TreeNode.insert", false]], "interval (class in skbio.metadata)": [[298, "skbio.metadata.Interval", false]], "intervalmetadata (class in skbio.metadata)": [[308, "skbio.metadata.IntervalMetadata", false]], "inv_simpson() (in module skbio.diversity.alpha)": [[122, "skbio.diversity.alpha.inv_simpson", false]], "invalidate_caches() (skbio.tree.treenode method)": [[1002, "skbio.tree.TreeNode.invalidate_caches", false]], "ioregistry (class in skbio.io.registry)": [[251, "skbio.io.registry.IORegistry", false]], "is_empty() (skbio.table.table method)": [[925, "skbio.table.Table.is_empty", false]], "is_reverse_complement() (skbio.sequence.dna method)": [[421, "skbio.sequence.DNA.is_reverse_complement", false]], "is_reverse_complement() (skbio.sequence.rna method)": [[596, "skbio.sequence.RNA.is_reverse_complement", false]], "is_root() (skbio.tree.treenode method)": [[1003, "skbio.tree.TreeNode.is_root", false]], "is_tip() (skbio.tree.treenode method)": [[1004, "skbio.tree.TreeNode.is_tip", false]], "is_zero_based() (skbio.alignment.alignmentstructure method)": [[32, "skbio.alignment.AlignmentStructure.is_zero_based", false]], "isubsample() (in module skbio.stats)": [[857, "skbio.stats.isubsample", false]], "iter() (skbio.table.table method)": [[926, "skbio.table.Table.iter", false]], "iter_contiguous() (skbio.sequence.dna method)": [[422, "skbio.sequence.DNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.grammaredsequence method)": [[489, "skbio.sequence.GrammaredSequence.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.protein method)": [[541, "skbio.sequence.Protein.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.rna method)": [[597, "skbio.sequence.RNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.sequence method)": [[642, "skbio.sequence.Sequence.iter_contiguous", false]], "iter_data() (skbio.table.table method)": [[927, "skbio.table.Table.iter_data", false]], "iter_kmers() (skbio.sequence.dna method)": [[423, "skbio.sequence.DNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.grammaredsequence method)": [[490, "skbio.sequence.GrammaredSequence.iter_kmers", false]], "iter_kmers() (skbio.sequence.protein method)": [[542, "skbio.sequence.Protein.iter_kmers", false]], "iter_kmers() (skbio.sequence.rna method)": [[598, "skbio.sequence.RNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.sequence method)": [[643, "skbio.sequence.Sequence.iter_kmers", false]], "iter_pairwise() (skbio.table.table method)": [[928, "skbio.table.Table.iter_pairwise", false]], "iter_positions() (skbio.alignment.tabularmsa method)": [[91, "skbio.alignment.TabularMSA.iter_positions", false]], "join() (skbio.alignment.tabularmsa method)": [[92, "skbio.alignment.TabularMSA.join", false]], "kempton_taylor_q() (in module skbio.diversity.alpha)": [[123, "skbio.diversity.alpha.kempton_taylor_q", false]], "kmer_distance() (in module skbio.sequence.distance)": [[685, "skbio.sequence.distance.kmer_distance", false]], "kmer_frequencies() (skbio.sequence.dna method)": [[424, "skbio.sequence.DNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.grammaredsequence method)": [[491, "skbio.sequence.GrammaredSequence.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.protein method)": [[543, "skbio.sequence.Protein.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.rna method)": [[599, "skbio.sequence.RNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.sequence method)": [[644, "skbio.sequence.Sequence.kmer_frequencies", false]], "lca() (skbio.tree.treenode method)": [[1005, "skbio.tree.TreeNode.lca", false]], "length() (skbio.table.table method)": [[929, "skbio.table.Table.length", false]], "levelorder() (skbio.tree.treenode method)": [[1006, "skbio.tree.TreeNode.levelorder", false]], "list_read_formats() (skbio.io.registry.ioregistry method)": [[266, "skbio.io.registry.IORegistry.list_read_formats", false]], "list_write_formats() (skbio.io.registry.ioregistry method)": [[267, "skbio.io.registry.IORegistry.list_write_formats", false]], "lladser_ci() (in module skbio.diversity.alpha)": [[124, "skbio.diversity.alpha.lladser_ci", false]], "lladser_pe() (in module skbio.diversity.alpha)": [[125, "skbio.diversity.alpha.lladser_pe", false]], "load() (skbio.metadata.samplemetadata class method)": [[376, "skbio.metadata.SampleMetadata.load", false]], "local_pairwise_align() (in module skbio.alignment)": [[101, "skbio.alignment.local_pairwise_align", false]], "local_pairwise_align_nucleotide() (in module skbio.alignment)": [[102, "skbio.alignment.local_pairwise_align_nucleotide", false]], "local_pairwise_align_protein() (in module skbio.alignment)": [[103, "skbio.alignment.local_pairwise_align_protein", false]], "local_pairwise_align_ssw() (in module skbio.alignment)": [[104, "skbio.alignment.local_pairwise_align_ssw", false]], "lowercase() (skbio.sequence.dna method)": [[425, "skbio.sequence.DNA.lowercase", false]], "lowercase() (skbio.sequence.grammaredsequence method)": [[492, "skbio.sequence.GrammaredSequence.lowercase", false]], "lowercase() (skbio.sequence.protein method)": [[544, "skbio.sequence.Protein.lowercase", false]], "lowercase() (skbio.sequence.rna method)": [[600, "skbio.sequence.RNA.lowercase", false]], "lowercase() (skbio.sequence.sequence method)": [[645, "skbio.sequence.Sequence.lowercase", false]], "lowest_common_ancestor() (skbio.tree.treenode method)": [[1007, "skbio.tree.TreeNode.lowest_common_ancestor", false]], "majority_rule() (in module skbio.tree)": [[1042, "skbio.tree.majority_rule", false]], "make_identity_substitution_matrix() (in module skbio.alignment)": [[105, "skbio.alignment.make_identity_substitution_matrix", false]], "mantel() (in module skbio.stats.distance)": [[761, "skbio.stats.distance.mantel", false]], "margalef() (in module skbio.diversity.alpha)": [[126, "skbio.diversity.alpha.margalef", false]], "match_frequency() (skbio.sequence.dna method)": [[426, "skbio.sequence.DNA.match_frequency", false]], "match_frequency() (skbio.sequence.grammaredsequence method)": [[493, "skbio.sequence.GrammaredSequence.match_frequency", false]], "match_frequency() (skbio.sequence.protein method)": [[545, "skbio.sequence.Protein.match_frequency", false]], "match_frequency() (skbio.sequence.rna method)": [[601, "skbio.sequence.RNA.match_frequency", false]], "match_frequency() (skbio.sequence.sequence method)": [[646, "skbio.sequence.Sequence.match_frequency", false]], "matches() (skbio.sequence.dna method)": [[427, "skbio.sequence.DNA.matches", false]], "matches() (skbio.sequence.grammaredsequence method)": [[494, "skbio.sequence.GrammaredSequence.matches", false]], "matches() (skbio.sequence.protein method)": [[546, "skbio.sequence.Protein.matches", false]], "matches() (skbio.sequence.rna method)": [[602, "skbio.sequence.RNA.matches", false]], "matches() (skbio.sequence.sequence method)": [[647, "skbio.sequence.Sequence.matches", false]], "max() (skbio.table.table method)": [[930, "skbio.table.Table.max", false]], "mcintosh_d() (in module skbio.diversity.alpha)": [[127, "skbio.diversity.alpha.mcintosh_d", false]], "mcintosh_e() (in module skbio.diversity.alpha)": [[128, "skbio.diversity.alpha.mcintosh_e", false]], "mean_and_std() (in module skbio.stats.ordination)": [[878, "skbio.stats.ordination.mean_and_std", false]], "menhinick() (in module skbio.diversity.alpha)": [[129, "skbio.diversity.alpha.menhinick", false]], "merge() (skbio.metadata.intervalmetadata method)": [[322, "skbio.metadata.IntervalMetadata.merge", false]], "merge() (skbio.metadata.samplemetadata method)": [[377, "skbio.metadata.SampleMetadata.merge", false]], "merge() (skbio.table.table method)": [[931, "skbio.table.Table.merge", false]], "metadata() (skbio.table.table method)": [[932, "skbio.table.Table.metadata", false]], "metadata_to_dataframe() (skbio.table.table method)": [[933, "skbio.table.Table.metadata_to_dataframe", false]], "metadatacolumn (class in skbio.metadata)": [[327, "skbio.metadata.MetadataColumn", false]], "method (class in skbio.workflow)": [[1082, "skbio.workflow.method", false]], "michaelis_menten_fit() (in module skbio.diversity.alpha)": [[130, "skbio.diversity.alpha.michaelis_menten_fit", false]], "min() (skbio.table.table method)": [[934, "skbio.table.Table.min", false]], "mismatch_frequency() (skbio.sequence.dna method)": [[428, "skbio.sequence.DNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.grammaredsequence method)": [[495, "skbio.sequence.GrammaredSequence.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.protein method)": [[547, "skbio.sequence.Protein.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.rna method)": [[603, "skbio.sequence.RNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.sequence method)": [[648, "skbio.sequence.Sequence.mismatch_frequency", false]], "mismatches() (skbio.sequence.dna method)": [[429, "skbio.sequence.DNA.mismatches", false]], "mismatches() (skbio.sequence.grammaredsequence method)": [[496, "skbio.sequence.GrammaredSequence.mismatches", false]], "mismatches() (skbio.sequence.protein method)": [[548, "skbio.sequence.Protein.mismatches", false]], "mismatches() (skbio.sequence.rna method)": [[604, "skbio.sequence.RNA.mismatches", false]], "mismatches() (skbio.sequence.sequence method)": [[649, "skbio.sequence.Sequence.mismatches", false]], "module": [[0, "module-skbio.alignment", false], [1, "module-skbio.diversity", false], [2, "module-skbio.embedding", false], [106, "module-skbio.diversity.alpha", false], [147, "module-skbio.diversity.beta", false], [218, "module-skbio.io.format.binary_dm", false], [219, "module-skbio.io.format.biom", false], [220, "module-skbio.io.format.blast6", false], [221, "module-skbio.io.format.blast7", false], [222, "module-skbio.io.format.clustal", false], [223, "module-skbio.io.format.embed", false], [224, "module-skbio.io.format.embl", false], [225, "module-skbio.io.format.fasta", false], [226, "module-skbio.io.format.fastq", false], [227, "module-skbio.io.format.genbank", false], [228, "module-skbio.io.format.gff3", false], [229, "module-skbio.io.format.lsmat", false], [230, "module-skbio.io.format.newick", false], [231, "module-skbio.io.format.ordination", false], [232, "module-skbio.io.format.phylip", false], [233, "module-skbio.io.format.qseq", false], [234, "module-skbio.io.format.sample_metadata", false], [235, "module-skbio.io.format.stockholm", false], [236, "module-skbio.io.format.taxdump", false], [237, "module-skbio.io.registry", false], [276, "module-skbio.io.util", false], [683, "module-skbio.sequence.distance", false], [686, "module-skbio.stats.composition", false], [707, "module-skbio.stats.distance", false], [766, "module-skbio.stats.evolve", false], [768, "module-skbio.stats.gradient", false], [858, "module-skbio.stats.ordination", false], [884, "module-skbio.stats.power", false], [1105, "module-skbio.io", false], [1106, "module-skbio.metadata", false], [1107, "module-skbio.sequence", false], [1108, "module-skbio.stats", false], [1109, "module-skbio.table", false], [1110, "module-skbio.tree", false], [1111, "module-skbio.util", false], [1112, "module-skbio.workflow", false]], "monkey_patch() (skbio.io.registry.ioregistry method)": [[268, "skbio.io.registry.IORegistry.monkey_patch", false]], "multi_replace() (in module skbio.stats.composition)": [[698, "skbio.stats.composition.multi_replace", false]], "multiplicative_replacement() (in module skbio.stats.composition)": [[699, "skbio.stats.composition.multiplicative_replacement", false]], "neighbors() (skbio.tree.treenode method)": [[1008, "skbio.tree.TreeNode.neighbors", false]], "nj() (in module skbio.tree)": [[1043, "skbio.tree.nj", false]], "nni() (in module skbio.tree)": [[1044, "skbio.tree.nni", false]], "non_tips() (skbio.tree.treenode method)": [[1009, "skbio.tree.TreeNode.non_tips", false]], "nondegenerates() (skbio.sequence.dna method)": [[430, "skbio.sequence.DNA.nondegenerates", false]], "nondegenerates() (skbio.sequence.grammaredsequence method)": [[497, "skbio.sequence.GrammaredSequence.nondegenerates", false]], "nondegenerates() (skbio.sequence.protein method)": [[549, "skbio.sequence.Protein.nondegenerates", false]], "nondegenerates() (skbio.sequence.rna method)": [[605, "skbio.sequence.RNA.nondegenerates", false]], "nonzero() (skbio.table.table method)": [[935, "skbio.table.Table.nonzero", false]], "nonzero_counts() (skbio.table.table method)": [[936, "skbio.table.Table.nonzero_counts", false]], "norm() (skbio.table.table method)": [[937, "skbio.table.Table.norm", false]], "numericmetadatacolumn (class in skbio.metadata)": [[345, "skbio.metadata.NumericMetadataColumn", false]], "observed_features() (in module skbio.diversity.alpha)": [[131, "skbio.diversity.alpha.observed_features", false]], "observed_node_counts() (skbio.tree.treenode method)": [[1010, "skbio.tree.TreeNode.observed_node_counts", false]], "observed_otus() (in module skbio.diversity.alpha)": [[132, "skbio.diversity.alpha.observed_otus", false]], "open() (in module skbio.io.util)": [[277, "skbio.io.util.open", false]], "open_file() (in module skbio.io.util)": [[278, "skbio.io.util.open_file", false]], "open_files() (in module skbio.io.util)": [[279, "skbio.io.util.open_files", false]], "ordinationresults (class in skbio.stats.ordination)": [[859, "skbio.stats.ordination.OrdinationResults", false]], "osd() (in module skbio.diversity.alpha)": [[133, "skbio.diversity.alpha.osd", false]], "pa() (skbio.table.table method)": [[938, "skbio.table.Table.pa", false]], "pairalignpath (class in skbio.alignment)": [[34, "skbio.alignment.PairAlignPath", false]], "paired_subsamples() (in module skbio.stats.power)": [[886, "skbio.stats.power.paired_subsamples", false]], "pairwise_vlr() (in module skbio.stats.composition)": [[700, "skbio.stats.composition.pairwise_vlr", false]], "partial_beta_diversity() (in module skbio.diversity)": [[154, "skbio.diversity.partial_beta_diversity", false]], "partition() (skbio.table.table method)": [[939, "skbio.table.Table.partition", false]], "pcoa() (in module skbio.stats.ordination)": [[879, "skbio.stats.ordination.pcoa", false]], "pcoa_biplot() (in module skbio.stats.ordination)": [[880, "skbio.stats.ordination.pcoa_biplot", false]], "permanova() (in module skbio.stats.distance)": [[762, "skbio.stats.distance.permanova", false]], "permdisp() (in module skbio.stats.distance)": [[763, "skbio.stats.distance.permdisp", false]], "permute() (skbio.stats.distance.distancematrix method)": [[749, "skbio.stats.distance.DistanceMatrix.permute", false]], "perturb() (in module skbio.stats.composition)": [[701, "skbio.stats.composition.perturb", false]], "perturb_inv() (in module skbio.stats.composition)": [[702, "skbio.stats.composition.perturb_inv", false]], "phydiv() (in module skbio.diversity.alpha)": [[134, "skbio.diversity.alpha.phydiv", false]], "pielou_e() (in module skbio.diversity.alpha)": [[135, "skbio.diversity.alpha.pielou_e", false]], "plot() (skbio.sequence.substitutionmatrix method)": [[674, "skbio.sequence.SubstitutionMatrix.plot", false]], "plot() (skbio.stats.distance.dissimilaritymatrix method)": [[724, "skbio.stats.distance.DissimilarityMatrix.plot", false]], "plot() (skbio.stats.distance.distancematrix method)": [[750, "skbio.stats.distance.DistanceMatrix.plot", false]], "plot() (skbio.stats.ordination.ordinationresults method)": [[869, "skbio.stats.ordination.OrdinationResults.plot", false]], "pop() (skbio.tree.treenode method)": [[1011, "skbio.tree.TreeNode.pop", false]], "postorder() (skbio.tree.treenode method)": [[1012, "skbio.tree.TreeNode.postorder", false]], "power() (in module skbio.stats.composition)": [[703, "skbio.stats.composition.power", false]], "pre_and_postorder() (skbio.tree.treenode method)": [[1013, "skbio.tree.TreeNode.pre_and_postorder", false]], "preorder() (skbio.tree.treenode method)": [[1014, "skbio.tree.TreeNode.preorder", false]], "protein (class in skbio.sequence)": [[504, "skbio.sequence.Protein", false]], "proteinembedding (class in skbio.embedding)": [[166, "skbio.embedding.ProteinEmbedding", false]], "proteinvector (class in skbio.embedding)": [[179, "skbio.embedding.ProteinVector", false]], "prune() (skbio.tree.treenode method)": [[1015, "skbio.tree.TreeNode.prune", false]], "pwmantel() (in module skbio.stats.distance)": [[764, "skbio.stats.distance.pwmantel", false]], "query() (skbio.metadata.intervalmetadata method)": [[323, "skbio.metadata.IntervalMetadata.query", false]], "randdm() (in module skbio.stats.distance)": [[765, "skbio.stats.distance.randdm", false]], "rankdata() (skbio.table.table method)": [[940, "skbio.table.Table.rankdata", false]], "rda() (in module skbio.stats.ordination)": [[881, "skbio.stats.ordination.rda", false]], "read() (in module skbio.io.registry)": [[273, "skbio.io.registry.read", false]], "read() (skbio.alignment.tabularmsa class method)": [[93, "skbio.alignment.TabularMSA.read", false]], "read() (skbio.embedding.proteinembedding class method)": [[177, "skbio.embedding.ProteinEmbedding.read", false]], "read() (skbio.embedding.proteinvector class method)": [[190, "skbio.embedding.ProteinVector.read", false]], "read() (skbio.io.registry.ioregistry method)": [[269, "skbio.io.registry.IORegistry.read", false]], "read() (skbio.metadata.intervalmetadata class method)": [[324, "skbio.metadata.IntervalMetadata.read", false]], "read() (skbio.metadata.samplemetadata class method)": [[378, "skbio.metadata.SampleMetadata.read", false]], "read() (skbio.sequence.dna class method)": [[431, "skbio.sequence.DNA.read", false]], "read() (skbio.sequence.grammaredsequence class method)": [[498, "skbio.sequence.GrammaredSequence.read", false]], "read() (skbio.sequence.protein class method)": [[550, "skbio.sequence.Protein.read", false]], "read() (skbio.sequence.rna class method)": [[606, "skbio.sequence.RNA.read", false]], "read() (skbio.sequence.sequence class method)": [[650, "skbio.sequence.Sequence.read", false]], "read() (skbio.sequence.substitutionmatrix class method)": [[675, "skbio.sequence.SubstitutionMatrix.read", false]], "read() (skbio.stats.distance.dissimilaritymatrix class method)": [[725, "skbio.stats.distance.DissimilarityMatrix.read", false]], "read() (skbio.stats.distance.distancematrix class method)": [[751, "skbio.stats.distance.DistanceMatrix.read", false]], "read() (skbio.stats.ordination.ordinationresults class method)": [[870, "skbio.stats.ordination.OrdinationResults.read", false]], "read() (skbio.table.table class method)": [[941, "skbio.table.Table.read", false]], "read() (skbio.tree.treenode class method)": [[1016, "skbio.tree.TreeNode.read", false]], "reader() (skbio.io.registry.format method)": [[248, "skbio.io.registry.Format.reader", false]], "reassign_index() (skbio.alignment.tabularmsa method)": [[94, "skbio.alignment.TabularMSA.reassign_index", false]], "reduce() (skbio.table.table method)": [[942, "skbio.table.Table.reduce", false]], "redundant_form() (skbio.sequence.substitutionmatrix method)": [[676, "skbio.sequence.SubstitutionMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.dissimilaritymatrix method)": [[726, "skbio.stats.distance.DissimilarityMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.distancematrix method)": [[752, "skbio.stats.distance.DistanceMatrix.redundant_form", false]], "remove() (skbio.tree.treenode method)": [[1017, "skbio.tree.TreeNode.remove", false]], "remove_deleted() (skbio.tree.treenode method)": [[1018, "skbio.tree.TreeNode.remove_deleted", false]], "remove_empty() (skbio.table.table method)": [[943, "skbio.table.Table.remove_empty", false]], "rename() (skbio.sequence.substitutionmatrix method)": [[677, "skbio.sequence.SubstitutionMatrix.rename", false]], "rename() (skbio.stats.distance.dissimilaritymatrix method)": [[727, "skbio.stats.distance.DissimilarityMatrix.rename", false]], "rename() (skbio.stats.distance.distancematrix method)": [[753, "skbio.stats.distance.DistanceMatrix.rename", false]], "rename() (skbio.stats.ordination.ordinationresults method)": [[871, "skbio.stats.ordination.OrdinationResults.rename", false]], "renyi() (in module skbio.diversity.alpha)": [[136, "skbio.diversity.alpha.renyi", false]], "replace() (skbio.sequence.dna method)": [[432, "skbio.sequence.DNA.replace", false]], "replace() (skbio.sequence.grammaredsequence method)": [[499, "skbio.sequence.GrammaredSequence.replace", false]], "replace() (skbio.sequence.protein method)": [[551, "skbio.sequence.Protein.replace", false]], "replace() (skbio.sequence.rna method)": [[607, "skbio.sequence.RNA.replace", false]], "replace() (skbio.sequence.sequence method)": [[651, "skbio.sequence.Sequence.replace", false]], "representationwarning": [[1046, "skbio.util.RepresentationWarning", false]], "requires (class in skbio.workflow)": [[1093, "skbio.workflow.requires", false]], "reverse_complement() (skbio.sequence.dna method)": [[433, "skbio.sequence.DNA.reverse_complement", false]], "reverse_complement() (skbio.sequence.rna method)": [[608, "skbio.sequence.RNA.reverse_complement", false]], "reverse_transcribe() (skbio.sequence.rna method)": [[609, "skbio.sequence.RNA.reverse_transcribe", false]], "rna (class in skbio.sequence)": [[557, "skbio.sequence.RNA", false]], "robbins() (in module skbio.diversity.alpha)": [[137, "skbio.diversity.alpha.robbins", false]], "root() (skbio.tree.treenode method)": [[1019, "skbio.tree.TreeNode.root", false]], "root_at() (skbio.tree.treenode method)": [[1020, "skbio.tree.TreeNode.root_at", false]], "root_at_midpoint() (skbio.tree.treenode method)": [[1021, "skbio.tree.TreeNode.root_at_midpoint", false]], "root_by_outgroup() (skbio.tree.treenode method)": [[1022, "skbio.tree.TreeNode.root_by_outgroup", false]], "safe_md5() (in module skbio.util)": [[1069, "skbio.util.safe_md5", false]], "samplemetadata (class in skbio.metadata)": [[363, "skbio.metadata.SampleMetadata", false]], "save() (skbio.metadata.categoricalmetadatacolumn method)": [[295, "skbio.metadata.CategoricalMetadataColumn.save", false]], "save() (skbio.metadata.metadatacolumn method)": [[342, "skbio.metadata.MetadataColumn.save", false]], "save() (skbio.metadata.numericmetadatacolumn method)": [[360, "skbio.metadata.NumericMetadataColumn.save", false]], "save() (skbio.metadata.samplemetadata method)": [[379, "skbio.metadata.SampleMetadata.save", false]], "sbp_basis() (in module skbio.stats.composition)": [[704, "skbio.stats.composition.sbp_basis", false]], "scale() (in module skbio.stats.ordination)": [[882, "skbio.stats.ordination.scale", false]], "sequence (class in skbio.sequence)": [[616, "skbio.sequence.Sequence", false]], "sequenceembedding (class in skbio.embedding)": [[192, "skbio.embedding.SequenceEmbedding", false]], "sequencevector (class in skbio.embedding)": [[203, "skbio.embedding.SequenceVector", false]], "set_zero_based() (skbio.alignment.alignmentstructure method)": [[33, "skbio.alignment.AlignmentStructure.set_zero_based", false]], "setter() (skbio.util.classproperty method)": [[1066, "skbio.util.classproperty.setter", false]], "shannon() (in module skbio.diversity.alpha)": [[138, "skbio.diversity.alpha.shannon", false]], "shear() (skbio.tree.treenode method)": [[1023, "skbio.tree.TreeNode.shear", false]], "shuffle() (skbio.tree.treenode method)": [[1024, "skbio.tree.TreeNode.shuffle", false]], "siblings() (skbio.tree.treenode method)": [[1025, "skbio.tree.TreeNode.siblings", false]], "simpson() (in module skbio.diversity.alpha)": [[139, "skbio.diversity.alpha.simpson", false]], "simpson_d() (in module skbio.diversity.alpha)": [[140, "skbio.diversity.alpha.simpson_d", false]], "simpson_e() (in module skbio.diversity.alpha)": [[141, "skbio.diversity.alpha.simpson_e", false]], "singles() (in module skbio.diversity.alpha)": [[142, "skbio.diversity.alpha.singles", false]], "skbio.alignment": [[0, "module-skbio.alignment", false]], "skbio.diversity": [[1, "module-skbio.diversity", false]], "skbio.diversity.alpha": [[106, "module-skbio.diversity.alpha", false]], "skbio.diversity.beta": [[147, "module-skbio.diversity.beta", false]], "skbio.embedding": [[2, "module-skbio.embedding", false]], "skbio.io": [[1105, "module-skbio.io", false]], "skbio.io.format.binary_dm": [[218, "module-skbio.io.format.binary_dm", false]], "skbio.io.format.biom": [[219, "module-skbio.io.format.biom", false]], "skbio.io.format.blast6": [[220, "module-skbio.io.format.blast6", false]], "skbio.io.format.blast7": [[221, "module-skbio.io.format.blast7", false]], "skbio.io.format.clustal": [[222, "module-skbio.io.format.clustal", false]], "skbio.io.format.embed": [[223, "module-skbio.io.format.embed", false]], "skbio.io.format.embl": [[224, "module-skbio.io.format.embl", false]], "skbio.io.format.fasta": [[225, "module-skbio.io.format.fasta", false]], "skbio.io.format.fastq": [[226, "module-skbio.io.format.fastq", false]], "skbio.io.format.genbank": [[227, "module-skbio.io.format.genbank", false]], "skbio.io.format.gff3": [[228, "module-skbio.io.format.gff3", false]], "skbio.io.format.lsmat": [[229, "module-skbio.io.format.lsmat", false]], "skbio.io.format.newick": [[230, "module-skbio.io.format.newick", false]], "skbio.io.format.ordination": [[231, "module-skbio.io.format.ordination", false]], "skbio.io.format.phylip": [[232, "module-skbio.io.format.phylip", false]], "skbio.io.format.qseq": [[233, "module-skbio.io.format.qseq", false]], "skbio.io.format.sample_metadata": [[234, "module-skbio.io.format.sample_metadata", false]], "skbio.io.format.stockholm": [[235, "module-skbio.io.format.stockholm", false]], "skbio.io.format.taxdump": [[236, "module-skbio.io.format.taxdump", false]], "skbio.io.registry": [[237, "module-skbio.io.registry", false]], "skbio.io.util": [[276, "module-skbio.io.util", false]], "skbio.metadata": [[1106, "module-skbio.metadata", false]], "skbio.sequence": [[1107, "module-skbio.sequence", false]], "skbio.sequence.distance": [[683, "module-skbio.sequence.distance", false]], "skbio.stats": [[1108, "module-skbio.stats", false]], "skbio.stats.composition": [[686, "module-skbio.stats.composition", false]], "skbio.stats.distance": [[707, "module-skbio.stats.distance", false]], "skbio.stats.evolve": [[766, "module-skbio.stats.evolve", false]], "skbio.stats.gradient": [[768, "module-skbio.stats.gradient", false]], "skbio.stats.ordination": [[858, "module-skbio.stats.ordination", false]], "skbio.stats.power": [[884, "module-skbio.stats.power", false]], "skbio.table": [[1109, "module-skbio.table", false]], "skbio.tree": [[1110, "module-skbio.tree", false]], "skbio.util": [[1111, "module-skbio.util", false]], "skbio.workflow": [[1112, "module-skbio.workflow", false]], "sniff() (in module skbio.io.registry)": [[274, "skbio.io.registry.sniff", false]], "sniff() (skbio.io.registry.ioregistry method)": [[270, "skbio.io.registry.IORegistry.sniff", false]], "sniffer() (skbio.io.registry.format method)": [[249, "skbio.io.registry.Format.sniffer", false]], "sobs() (in module skbio.diversity.alpha)": [[143, "skbio.diversity.alpha.sobs", false]], "sort() (skbio.alignment.tabularmsa method)": [[95, "skbio.alignment.TabularMSA.sort", false]], "sort() (skbio.metadata.intervalmetadata method)": [[325, "skbio.metadata.IntervalMetadata.sort", false]], "sort() (skbio.table.table method)": [[944, "skbio.table.Table.sort", false]], "sort_order() (skbio.table.table method)": [[945, "skbio.table.Table.sort_order", false]], "stops() (skbio.sequence.protein method)": [[552, "skbio.sequence.Protein.stops", false]], "stripedsmithwaterman (class in skbio.alignment)": [[53, "skbio.alignment.StripedSmithWaterman", false]], "strong() (in module skbio.diversity.alpha)": [[144, "skbio.diversity.alpha.strong", false]], "subsample() (skbio.table.table method)": [[946, "skbio.table.Table.subsample", false]], "subsample_counts() (in module skbio.stats)": [[889, "skbio.stats.subsample_counts", false]], "subsample_paired_power() (in module skbio.stats.power)": [[887, "skbio.stats.power.subsample_paired_power", false]], "subsample_power() (in module skbio.stats.power)": [[888, "skbio.stats.power.subsample_power", false]], "subset() (skbio.tree.treenode method)": [[1026, "skbio.tree.TreeNode.subset", false]], "subsets() (skbio.tree.treenode method)": [[1027, "skbio.tree.TreeNode.subsets", false]], "substitutionmatrix (class in skbio.sequence)": [[654, "skbio.sequence.SubstitutionMatrix", false]], "subtree() (skbio.tree.treenode method)": [[1028, "skbio.tree.TreeNode.subtree", false]], "sum() (skbio.table.table method)": [[947, "skbio.table.Table.sum", false]], "svd_rank() (in module skbio.stats.ordination)": [[883, "skbio.stats.ordination.svd_rank", false]], "table (class in skbio.table)": [[890, "skbio.table.Table", false]], "tabularmsa (class in skbio.alignment)": [[65, "skbio.alignment.TabularMSA", false]], "tip_tip_distances() (skbio.tree.treenode method)": [[1029, "skbio.tree.TreeNode.tip_tip_distances", false]], "tips() (skbio.tree.treenode method)": [[1030, "skbio.tree.TreeNode.tips", false]], "to_anndata() (skbio.table.table method)": [[948, "skbio.table.Table.to_anndata", false]], "to_array() (skbio.tree.treenode method)": [[1031, "skbio.tree.TreeNode.to_array", false]], "to_bits() (skbio.alignment.alignpath method)": [[17, "skbio.alignment.AlignPath.to_bits", false]], "to_bits() (skbio.alignment.pairalignpath method)": [[49, "skbio.alignment.PairAlignPath.to_bits", false]], "to_cigar() (skbio.alignment.pairalignpath method)": [[50, "skbio.alignment.PairAlignPath.to_cigar", false]], "to_coordinates() (skbio.alignment.alignpath method)": [[18, "skbio.alignment.AlignPath.to_coordinates", false]], "to_coordinates() (skbio.alignment.pairalignpath method)": [[51, "skbio.alignment.PairAlignPath.to_coordinates", false]], "to_data_frame() (skbio.sequence.substitutionmatrix method)": [[678, "skbio.sequence.SubstitutionMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.dissimilaritymatrix method)": [[728, "skbio.stats.distance.DissimilarityMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.distancematrix method)": [[754, "skbio.stats.distance.DistanceMatrix.to_data_frame", false]], "to_dataframe() (skbio.metadata.categoricalmetadatacolumn method)": [[296, "skbio.metadata.CategoricalMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.metadatacolumn method)": [[343, "skbio.metadata.MetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.numericmetadatacolumn method)": [[361, "skbio.metadata.NumericMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.samplemetadata method)": [[380, "skbio.metadata.SampleMetadata.to_dataframe", false]], "to_dataframe() (skbio.table.table method)": [[949, "skbio.table.Table.to_dataframe", false]], "to_definites() (skbio.sequence.dna method)": [[434, "skbio.sequence.DNA.to_definites", false]], "to_definites() (skbio.sequence.grammaredsequence method)": [[500, "skbio.sequence.GrammaredSequence.to_definites", false]], "to_definites() (skbio.sequence.protein method)": [[553, "skbio.sequence.Protein.to_definites", false]], "to_definites() (skbio.sequence.rna method)": [[610, "skbio.sequence.RNA.to_definites", false]], "to_dict() (skbio.alignment.tabularmsa method)": [[96, "skbio.alignment.TabularMSA.to_dict", false]], "to_dict() (skbio.sequence.substitutionmatrix method)": [[679, "skbio.sequence.SubstitutionMatrix.to_dict", false]], "to_files() (skbio.stats.gradient.categoryresults method)": [[790, "skbio.stats.gradient.CategoryResults.to_files", false]], "to_files() (skbio.stats.gradient.gradientanovaresults method)": [[823, "skbio.stats.gradient.GradientANOVAResults.to_files", false]], "to_files() (skbio.stats.gradient.groupresults method)": [[834, "skbio.stats.gradient.GroupResults.to_files", false]], "to_hdf5() (skbio.table.table method)": [[950, "skbio.table.Table.to_hdf5", false]], "to_indices() (skbio.alignment.alignpath method)": [[19, "skbio.alignment.AlignPath.to_indices", false]], "to_indices() (skbio.alignment.pairalignpath method)": [[52, "skbio.alignment.PairAlignPath.to_indices", false]], "to_indices() (skbio.sequence.dna method)": [[435, "skbio.sequence.DNA.to_indices", false]], "to_indices() (skbio.sequence.grammaredsequence method)": [[501, "skbio.sequence.GrammaredSequence.to_indices", false]], "to_indices() (skbio.sequence.protein method)": [[554, "skbio.sequence.Protein.to_indices", false]], "to_indices() (skbio.sequence.rna method)": [[611, "skbio.sequence.RNA.to_indices", false]], "to_indices() (skbio.sequence.sequence method)": [[652, "skbio.sequence.Sequence.to_indices", false]], "to_json() (skbio.table.table method)": [[951, "skbio.table.Table.to_json", false]], "to_regex() (skbio.sequence.dna method)": [[436, "skbio.sequence.DNA.to_regex", false]], "to_regex() (skbio.sequence.grammaredsequence method)": [[502, "skbio.sequence.GrammaredSequence.to_regex", false]], "to_regex() (skbio.sequence.protein method)": [[555, "skbio.sequence.Protein.to_regex", false]], "to_regex() (skbio.sequence.rna method)": [[612, "skbio.sequence.RNA.to_regex", false]], "to_series() (skbio.metadata.categoricalmetadatacolumn method)": [[297, "skbio.metadata.CategoricalMetadataColumn.to_series", false]], "to_series() (skbio.metadata.metadatacolumn method)": [[344, "skbio.metadata.MetadataColumn.to_series", false]], "to_series() (skbio.metadata.numericmetadatacolumn method)": [[362, "skbio.metadata.NumericMetadataColumn.to_series", false]], "to_series() (skbio.stats.distance.distancematrix method)": [[755, "skbio.stats.distance.DistanceMatrix.to_series", false]], "to_taxonomy() (skbio.tree.treenode method)": [[1032, "skbio.tree.TreeNode.to_taxonomy", false]], "to_tsv() (skbio.table.table method)": [[952, "skbio.table.Table.to_tsv", false]], "trajectorygradientanova (class in skbio.stats.gradient)": [[835, "skbio.stats.gradient.TrajectoryGradientANOVA", false]], "transcribe() (skbio.sequence.dna method)": [[437, "skbio.sequence.DNA.transcribe", false]], "transform() (skbio.table.table method)": [[953, "skbio.table.Table.transform", false]], "translate() (skbio.sequence.dna method)": [[438, "skbio.sequence.DNA.translate", false]], "translate() (skbio.sequence.geneticcode method)": [[451, "skbio.sequence.GeneticCode.translate", false]], "translate() (skbio.sequence.rna method)": [[613, "skbio.sequence.RNA.translate", false]], "translate_six_frames() (skbio.sequence.dna method)": [[439, "skbio.sequence.DNA.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.geneticcode method)": [[452, "skbio.sequence.GeneticCode.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.rna method)": [[614, "skbio.sequence.RNA.translate_six_frames", false]], "transpose() (skbio.sequence.substitutionmatrix method)": [[680, "skbio.sequence.SubstitutionMatrix.transpose", false]], "transpose() (skbio.stats.distance.dissimilaritymatrix method)": [[729, "skbio.stats.distance.DissimilarityMatrix.transpose", false]], "transpose() (skbio.stats.distance.distancematrix method)": [[756, "skbio.stats.distance.DistanceMatrix.transpose", false]], "transpose() (skbio.table.table method)": [[954, "skbio.table.Table.transpose", false]], "traverse() (skbio.tree.treenode method)": [[1033, "skbio.tree.TreeNode.traverse", false]], "tree_basis() (in module skbio.stats.composition)": [[705, "skbio.stats.composition.tree_basis", false]], "treenode (class in skbio.tree)": [[958, "skbio.tree.TreeNode", false]], "tsallis() (in module skbio.diversity.alpha)": [[145, "skbio.diversity.alpha.tsallis", false]], "unpack() (skbio.tree.treenode method)": [[1034, "skbio.tree.TreeNode.unpack", false]], "unpack_by_func() (skbio.tree.treenode method)": [[1035, "skbio.tree.TreeNode.unpack_by_func", false]], "unroot() (skbio.tree.treenode method)": [[1036, "skbio.tree.TreeNode.unroot", false]], "unrooted_copy() (skbio.tree.treenode method)": [[1037, "skbio.tree.TreeNode.unrooted_copy", false]], "unrooted_deepcopy() (skbio.tree.treenode method)": [[1038, "skbio.tree.TreeNode.unrooted_deepcopy", false]], "unrooted_move() (skbio.tree.treenode method)": [[1039, "skbio.tree.TreeNode.unrooted_move", false]], "unweighted_unifrac() (in module skbio.diversity.beta)": [[148, "skbio.diversity.beta.unweighted_unifrac", false]], "update_ids() (skbio.table.table method)": [[955, "skbio.table.Table.update_ids", false]], "vlr() (in module skbio.stats.composition)": [[706, "skbio.stats.composition.vlr", false]], "weighted_unifrac() (in module skbio.diversity.beta)": [[149, "skbio.diversity.beta.weighted_unifrac", false]], "windowdifferencegradientanova (class in skbio.stats.gradient)": [[846, "skbio.stats.gradient.WindowDifferenceGradientANOVA", false]], "within() (skbio.sequence.substitutionmatrix method)": [[681, "skbio.sequence.SubstitutionMatrix.within", false]], "within() (skbio.stats.distance.dissimilaritymatrix method)": [[730, "skbio.stats.distance.DissimilarityMatrix.within", false]], "within() (skbio.stats.distance.distancematrix method)": [[757, "skbio.stats.distance.DistanceMatrix.within", false]], "workflow (class in skbio.workflow)": [[1070, "skbio.workflow.Workflow", false]], "write() (in module skbio.io.registry)": [[275, "skbio.io.registry.write", false]], "write() (skbio.alignment.tabularmsa method)": [[97, "skbio.alignment.TabularMSA.write", false]], "write() (skbio.embedding.proteinembedding method)": [[178, "skbio.embedding.ProteinEmbedding.write", false]], "write() (skbio.embedding.proteinvector method)": [[191, "skbio.embedding.ProteinVector.write", false]], "write() (skbio.io.registry.ioregistry method)": [[271, "skbio.io.registry.IORegistry.write", false]], "write() (skbio.metadata.intervalmetadata method)": [[326, "skbio.metadata.IntervalMetadata.write", false]], "write() (skbio.metadata.samplemetadata method)": [[381, "skbio.metadata.SampleMetadata.write", false]], "write() (skbio.sequence.dna method)": [[440, "skbio.sequence.DNA.write", false]], "write() (skbio.sequence.grammaredsequence method)": [[503, "skbio.sequence.GrammaredSequence.write", false]], "write() (skbio.sequence.protein method)": [[556, "skbio.sequence.Protein.write", false]], "write() (skbio.sequence.rna method)": [[615, "skbio.sequence.RNA.write", false]], "write() (skbio.sequence.sequence method)": [[653, "skbio.sequence.Sequence.write", false]], "write() (skbio.sequence.substitutionmatrix method)": [[682, "skbio.sequence.SubstitutionMatrix.write", false]], "write() (skbio.stats.distance.dissimilaritymatrix method)": [[731, "skbio.stats.distance.DissimilarityMatrix.write", false]], "write() (skbio.stats.distance.distancematrix method)": [[758, "skbio.stats.distance.DistanceMatrix.write", false]], "write() (skbio.stats.ordination.ordinationresults method)": [[872, "skbio.stats.ordination.OrdinationResults.write", false]], "write() (skbio.table.table method)": [[956, "skbio.table.Table.write", false]], "write() (skbio.tree.treenode method)": [[1040, "skbio.tree.TreeNode.write", false]], "writer() (skbio.io.registry.format method)": [[250, "skbio.io.registry.Format.writer", false]]}, "objects": {"skbio": [[0, 0, 0, "-", "alignment"], [1, 0, 0, "-", "diversity"], [2, 0, 0, "-", "embedding"], [1105, 0, 0, "-", "io"], [1106, 0, 0, "-", "metadata"], [1107, 0, 0, "-", "sequence"], [1108, 0, 0, "-", "stats"], [1109, 0, 0, "-", "table"], [1110, 0, 0, "-", "tree"], [1111, 0, 0, "-", "util"], [1112, 0, 0, "-", "workflow"]], "skbio.alignment": [[3, 1, 1, "", "AlignPath"], [20, 1, 1, "", "AlignmentStructure"], [34, 1, 1, "", "PairAlignPath"], [53, 1, 1, "", "StripedSmithWaterman"], [65, 1, 1, "", "TabularMSA"], [98, 3, 1, "", "global_pairwise_align"], [99, 3, 1, "", "global_pairwise_align_nucleotide"], [100, 3, 1, "", "global_pairwise_align_protein"], [101, 3, 1, "", "local_pairwise_align"], [102, 3, 1, "", "local_pairwise_align_nucleotide"], [103, 3, 1, "", "local_pairwise_align_protein"], [104, 3, 1, "", "local_pairwise_align_ssw"], [105, 3, 1, "", "make_identity_substitution_matrix"]], "skbio.alignment.AlignPath": [[4, 2, 1, "", "__eq__"], [5, 2, 1, "", "__ge__"], [6, 2, 1, "", "__getstate__"], [7, 2, 1, "", "__gt__"], [8, 2, 1, "", "__hash__"], [9, 2, 1, "", "__le__"], [10, 2, 1, "", "__lt__"], [11, 2, 1, "", "__ne__"], [12, 2, 1, "", "__str__"], [13, 2, 1, "", "from_bits"], [14, 2, 1, "", "from_coordinates"], [15, 2, 1, "", "from_indices"], [16, 2, 1, "", "from_tabular"], [17, 2, 1, "", "to_bits"], [18, 2, 1, "", "to_coordinates"], [19, 2, 1, "", "to_indices"]], "skbio.alignment.AlignmentStructure": [[21, 2, 1, "", "__eq__"], [22, 2, 1, "", "__ge__"], [23, 2, 1, "", "__getitem__"], [24, 2, 1, "", "__getstate__"], [25, 2, 1, "", "__gt__"], [26, 2, 1, "", "__hash__"], [27, 2, 1, "", "__le__"], [28, 2, 1, "", "__lt__"], [29, 2, 1, "", "__ne__"], [30, 2, 1, "", "__setstate__"], [31, 2, 1, "", "__str__"], [32, 2, 1, "", "is_zero_based"], [33, 2, 1, "", "set_zero_based"]], "skbio.alignment.PairAlignPath": [[35, 2, 1, "", "__eq__"], [36, 2, 1, "", "__ge__"], [37, 2, 1, "", "__getstate__"], [38, 2, 1, "", "__gt__"], [39, 2, 1, "", "__hash__"], [40, 2, 1, "", "__le__"], [41, 2, 1, "", "__lt__"], [42, 2, 1, "", "__ne__"], [43, 2, 1, "", "__str__"], [44, 2, 1, "", "from_bits"], [45, 2, 1, "", "from_cigar"], [46, 2, 1, "", "from_coordinates"], [47, 2, 1, "", "from_indices"], [48, 2, 1, "", "from_tabular"], [49, 2, 1, "", "to_bits"], [50, 2, 1, "", "to_cigar"], [51, 2, 1, "", "to_coordinates"], [52, 2, 1, "", "to_indices"]], "skbio.alignment.StripedSmithWaterman": [[54, 2, 1, "", "__call__"], [55, 2, 1, "", "__eq__"], [56, 2, 1, "", "__ge__"], [57, 2, 1, "", "__getstate__"], [58, 2, 1, "", "__gt__"], [59, 2, 1, "", "__hash__"], [60, 2, 1, "", "__le__"], [61, 2, 1, "", "__lt__"], [62, 2, 1, "", "__ne__"], [63, 2, 1, "", "__setstate__"], [64, 2, 1, "", "__str__"]], "skbio.alignment.TabularMSA": [[66, 2, 1, "", "__bool__"], [67, 2, 1, "", "__contains__"], [68, 2, 1, "", "__copy__"], [69, 2, 1, "", "__deepcopy__"], [70, 2, 1, "", "__eq__"], [71, 2, 1, "", "__ge__"], [72, 2, 1, "", "__getitem__"], [73, 2, 1, "", "__getstate__"], [74, 2, 1, "", "__gt__"], [75, 2, 1, "", "__iter__"], [76, 2, 1, "", "__le__"], [77, 2, 1, "", "__len__"], [78, 2, 1, "", "__lt__"], [79, 2, 1, "", "__ne__"], [80, 2, 1, "", "__reversed__"], [81, 2, 1, "", "__str__"], [82, 2, 1, "", "append"], [83, 2, 1, "", "consensus"], [84, 2, 1, "", "conservation"], [85, 2, 1, "", "extend"], [86, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_path_seqs"], [88, 2, 1, "", "gap_frequencies"], [89, 2, 1, "", "has_metadata"], [90, 2, 1, "", "has_positional_metadata"], [91, 2, 1, "", "iter_positions"], [92, 2, 1, "", "join"], [93, 2, 1, "", "read"], [94, 2, 1, "", "reassign_index"], [95, 2, 1, "", "sort"], [96, 2, 1, "", "to_dict"], [97, 2, 1, "", "write"]], "skbio.diversity": [[106, 0, 0, "-", "alpha"], [146, 3, 1, "", "alpha_diversity"], [147, 0, 0, "-", "beta"], [150, 3, 1, "", "beta_diversity"], [151, 3, 1, "", "block_beta_diversity"], [152, 3, 1, "", "get_alpha_diversity_metrics"], [153, 3, 1, "", "get_beta_diversity_metrics"], [154, 3, 1, "", "partial_beta_diversity"]], "skbio.diversity.alpha": [[107, 3, 1, "", "ace"], [108, 3, 1, "", "berger_parker_d"], [109, 3, 1, "", "brillouin_d"], [110, 3, 1, "", "chao1"], [111, 3, 1, "", "chao1_ci"], [112, 3, 1, "", "dominance"], [113, 3, 1, "", "doubles"], [114, 3, 1, "", "enspie"], [115, 3, 1, "", "esty_ci"], [116, 3, 1, "", "faith_pd"], [117, 3, 1, "", "fisher_alpha"], [118, 3, 1, "", "gini_index"], [119, 3, 1, "", "goods_coverage"], [120, 3, 1, "", "heip_e"], [121, 3, 1, "", "hill"], [122, 3, 1, "", "inv_simpson"], [123, 3, 1, "", "kempton_taylor_q"], [124, 3, 1, "", "lladser_ci"], [125, 3, 1, "", "lladser_pe"], [126, 3, 1, "", "margalef"], [127, 3, 1, "", "mcintosh_d"], [128, 3, 1, "", "mcintosh_e"], [129, 3, 1, "", "menhinick"], [130, 3, 1, "", "michaelis_menten_fit"], [131, 3, 1, "", "observed_features"], [132, 3, 1, "", "observed_otus"], [133, 3, 1, "", "osd"], [134, 3, 1, "", "phydiv"], [135, 3, 1, "", "pielou_e"], [136, 3, 1, "", "renyi"], [137, 3, 1, "", "robbins"], [138, 3, 1, "", "shannon"], [139, 3, 1, "", "simpson"], [140, 3, 1, "", "simpson_d"], [141, 3, 1, "", "simpson_e"], [142, 3, 1, "", "singles"], [143, 3, 1, "", "sobs"], [144, 3, 1, "", "strong"], [145, 3, 1, "", "tsallis"]], "skbio.diversity.beta": [[148, 3, 1, "", "unweighted_unifrac"], [149, 3, 1, "", "weighted_unifrac"]], "skbio.embedding": [[155, 1, 1, "", "Embedding"], [166, 1, 1, "", "ProteinEmbedding"], [179, 1, 1, "", "ProteinVector"], [192, 1, 1, "", "SequenceEmbedding"], [203, 1, 1, "", "SequenceVector"], [214, 3, 1, "", "embed_vec_to_dataframe"], [215, 3, 1, "", "embed_vec_to_distances"], [216, 3, 1, "", "embed_vec_to_numpy"], [217, 3, 1, "", "embed_vec_to_ordination"]], "skbio.embedding.Embedding": [[156, 2, 1, "", "__eq__"], [157, 2, 1, "", "__ge__"], [158, 2, 1, "", "__getstate__"], [159, 2, 1, "", "__gt__"], [160, 2, 1, "", "__hash__"], [161, 2, 1, "", "__le__"], [162, 2, 1, "", "__lt__"], [163, 2, 1, "", "__ne__"], [164, 2, 1, "", "__str__"], [165, 2, 1, "", "bytes"]], "skbio.embedding.ProteinEmbedding": [[167, 2, 1, "", "__eq__"], [168, 2, 1, "", "__ge__"], [169, 2, 1, "", "__getstate__"], [170, 2, 1, "", "__gt__"], [171, 2, 1, "", "__hash__"], [172, 2, 1, "", "__le__"], [173, 2, 1, "", "__lt__"], [174, 2, 1, "", "__ne__"], [175, 2, 1, "", "__str__"], [176, 2, 1, "", "bytes"], [177, 2, 1, "", "read"], [178, 2, 1, "", "write"]], "skbio.embedding.ProteinVector": [[180, 2, 1, "", "__eq__"], [181, 2, 1, "", "__ge__"], [182, 2, 1, "", "__getstate__"], [183, 2, 1, "", "__gt__"], [184, 2, 1, "", "__hash__"], [185, 2, 1, "", "__le__"], [186, 2, 1, "", "__lt__"], [187, 2, 1, "", "__ne__"], [188, 2, 1, "", "__str__"], [189, 2, 1, "", "bytes"], [190, 2, 1, "", "read"], [191, 2, 1, "", "write"]], "skbio.embedding.SequenceEmbedding": [[193, 2, 1, "", "__eq__"], [194, 2, 1, "", "__ge__"], [195, 2, 1, "", "__getstate__"], [196, 2, 1, "", "__gt__"], [197, 2, 1, "", "__hash__"], [198, 2, 1, "", "__le__"], [199, 2, 1, "", "__lt__"], [200, 2, 1, "", "__ne__"], [201, 2, 1, "", "__str__"], [202, 2, 1, "", "bytes"]], "skbio.embedding.SequenceVector": [[204, 2, 1, "", "__eq__"], [205, 2, 1, "", "__ge__"], [206, 2, 1, "", "__getstate__"], [207, 2, 1, "", "__gt__"], [208, 2, 1, "", "__hash__"], [209, 2, 1, "", "__le__"], [210, 2, 1, "", "__lt__"], [211, 2, 1, "", "__ne__"], [212, 2, 1, "", "__str__"], [213, 2, 1, "", "bytes"]], "skbio.io": [[237, 0, 0, "-", "registry"], [276, 0, 0, "-", "util"]], "skbio.io.format": [[218, 0, 0, "-", "binary_dm"], [219, 0, 0, "-", "biom"], [220, 0, 0, "-", "blast6"], [221, 0, 0, "-", "blast7"], [222, 0, 0, "-", "clustal"], [223, 0, 0, "-", "embed"], [224, 0, 0, "-", "embl"], [225, 0, 0, "-", "fasta"], [226, 0, 0, "-", "fastq"], [227, 0, 0, "-", "genbank"], [228, 0, 0, "-", "gff3"], [229, 0, 0, "-", "lsmat"], [230, 0, 0, "-", "newick"], [231, 0, 0, "-", "ordination"], [232, 0, 0, "-", "phylip"], [233, 0, 0, "-", "qseq"], [234, 0, 0, "-", "sample_metadata"], [235, 0, 0, "-", "stockholm"], [236, 0, 0, "-", "taxdump"]], "skbio.io.registry": [[238, 1, 1, "", "Format"], [251, 1, 1, "", "IORegistry"], [272, 3, 1, "", "create_format"], [273, 3, 1, "", "read"], [274, 3, 1, "", "sniff"], [275, 3, 1, "", "write"]], "skbio.io.registry.Format": [[239, 2, 1, "", "__eq__"], [240, 2, 1, "", "__ge__"], [241, 2, 1, "", "__getstate__"], [242, 2, 1, "", "__gt__"], [243, 2, 1, "", "__hash__"], [244, 2, 1, "", "__le__"], [245, 2, 1, "", "__lt__"], [246, 2, 1, "", "__ne__"], [247, 2, 1, "", "__str__"], [248, 2, 1, "", "reader"], [249, 2, 1, "", "sniffer"], [250, 2, 1, "", "writer"]], "skbio.io.registry.IORegistry": [[252, 2, 1, "", "__eq__"], [253, 2, 1, "", "__ge__"], [254, 2, 1, "", "__getstate__"], [255, 2, 1, "", "__gt__"], [256, 2, 1, "", "__hash__"], [257, 2, 1, "", "__le__"], [258, 2, 1, "", "__lt__"], [259, 2, 1, "", "__ne__"], [260, 2, 1, "", "__str__"], [261, 2, 1, "", "add_format"], [262, 2, 1, "", "create_format"], [263, 2, 1, "", "get_reader"], [264, 2, 1, "", "get_sniffer"], [265, 2, 1, "", "get_writer"], [266, 2, 1, "", "list_read_formats"], [267, 2, 1, "", "list_write_formats"], [268, 2, 1, "", "monkey_patch"], [269, 2, 1, "", "read"], [270, 2, 1, "", "sniff"], [271, 2, 1, "", "write"]], "skbio.io.util": [[277, 3, 1, "", "open"], [278, 3, 1, "", "open_file"], [279, 3, 1, "", "open_files"]], "skbio.metadata": [[280, 1, 1, "", "CategoricalMetadataColumn"], [298, 1, 1, "", "Interval"], [308, 1, 1, "", "IntervalMetadata"], [327, 1, 1, "", "MetadataColumn"], [345, 1, 1, "", "NumericMetadataColumn"], [363, 1, 1, "", "SampleMetadata"]], "skbio.metadata.CategoricalMetadataColumn": [[281, 2, 1, "", "__eq__"], [282, 2, 1, "", "__ge__"], [283, 2, 1, "", "__getstate__"], [284, 2, 1, "", "__gt__"], [285, 2, 1, "", "__le__"], [286, 2, 1, "", "__lt__"], [287, 2, 1, "", "__ne__"], [288, 2, 1, "", "__str__"], [289, 2, 1, "", "drop_missing_values"], [290, 2, 1, "", "filter_ids"], [291, 2, 1, "", "get_ids"], [292, 2, 1, "", "get_missing"], [293, 2, 1, "", "get_value"], [294, 2, 1, "", "has_missing_values"], [295, 2, 1, "", "save"], [296, 2, 1, "", "to_dataframe"], [297, 2, 1, "", "to_series"]], "skbio.metadata.Interval": [[299, 2, 1, "", "__eq__"], [300, 2, 1, "", "__ge__"], [301, 2, 1, "", "__getstate__"], [302, 2, 1, "", "__gt__"], [303, 2, 1, "", "__le__"], [304, 2, 1, "", "__lt__"], [305, 2, 1, "", "__ne__"], [306, 2, 1, "", "__str__"], [307, 2, 1, "", "drop"]], "skbio.metadata.IntervalMetadata": [[309, 2, 1, "", "__copy__"], [310, 2, 1, "", "__deepcopy__"], [311, 2, 1, "", "__eq__"], [312, 2, 1, "", "__ge__"], [313, 2, 1, "", "__getstate__"], [314, 2, 1, "", "__gt__"], [315, 2, 1, "", "__le__"], [316, 2, 1, "", "__lt__"], [317, 2, 1, "", "__ne__"], [318, 2, 1, "", "__str__"], [319, 2, 1, "", "add"], [320, 2, 1, "", "concat"], [321, 2, 1, "", "drop"], [322, 2, 1, "", "merge"], [323, 2, 1, "", "query"], [324, 2, 1, "", "read"], [325, 2, 1, "", "sort"], [326, 2, 1, "", "write"]], "skbio.metadata.MetadataColumn": [[328, 2, 1, "", "__eq__"], [329, 2, 1, "", "__ge__"], [330, 2, 1, "", "__getstate__"], [331, 2, 1, "", "__gt__"], [332, 2, 1, "", "__le__"], [333, 2, 1, "", "__lt__"], [334, 2, 1, "", "__ne__"], [335, 2, 1, "", "__str__"], [336, 2, 1, "", "drop_missing_values"], [337, 2, 1, "", "filter_ids"], [338, 2, 1, "", "get_ids"], [339, 2, 1, "", "get_missing"], [340, 2, 1, "", "get_value"], [341, 2, 1, "", "has_missing_values"], [342, 2, 1, "", "save"], [343, 2, 1, "", "to_dataframe"], [344, 2, 1, "", "to_series"]], "skbio.metadata.NumericMetadataColumn": [[346, 2, 1, "", "__eq__"], [347, 2, 1, "", "__ge__"], [348, 2, 1, "", "__getstate__"], [349, 2, 1, "", "__gt__"], [350, 2, 1, "", "__le__"], [351, 2, 1, "", "__lt__"], [352, 2, 1, "", "__ne__"], [353, 2, 1, "", "__str__"], [354, 2, 1, "", "drop_missing_values"], [355, 2, 1, "", "filter_ids"], [356, 2, 1, "", "get_ids"], [357, 2, 1, "", "get_missing"], [358, 2, 1, "", "get_value"], [359, 2, 1, "", "has_missing_values"], [360, 2, 1, "", "save"], [361, 2, 1, "", "to_dataframe"], [362, 2, 1, "", "to_series"]], "skbio.metadata.SampleMetadata": [[364, 2, 1, "", "__eq__"], [365, 2, 1, "", "__ge__"], [366, 2, 1, "", "__getstate__"], [367, 2, 1, "", "__gt__"], [368, 2, 1, "", "__le__"], [369, 2, 1, "", "__lt__"], [370, 2, 1, "", "__ne__"], [371, 2, 1, "", "__str__"], [372, 2, 1, "", "filter_columns"], [373, 2, 1, "", "filter_ids"], [374, 2, 1, "", "get_column"], [375, 2, 1, "", "get_ids"], [376, 2, 1, "", "load"], [377, 2, 1, "", "merge"], [378, 2, 1, "", "read"], [379, 2, 1, "", "save"], [380, 2, 1, "", "to_dataframe"], [381, 2, 1, "", "write"]], "skbio.sequence": [[382, 1, 1, "", "DNA"], [441, 1, 1, "", "GeneticCode"], [453, 1, 1, "", "GrammaredSequence"], [504, 1, 1, "", "Protein"], [557, 1, 1, "", "RNA"], [616, 1, 1, "", "Sequence"], [654, 1, 1, "", "SubstitutionMatrix"], [683, 0, 0, "-", "distance"]], "skbio.sequence.DNA": [[383, 2, 1, "", "__bool__"], [384, 2, 1, "", "__contains__"], [385, 2, 1, "", "__copy__"], [386, 2, 1, "", "__deepcopy__"], [387, 2, 1, "", "__eq__"], [388, 2, 1, "", "__ge__"], [389, 2, 1, "", "__getitem__"], [390, 2, 1, "", "__getstate__"], [391, 2, 1, "", "__gt__"], [392, 2, 1, "", "__iter__"], [393, 2, 1, "", "__le__"], [394, 2, 1, "", "__len__"], [395, 2, 1, "", "__lt__"], [396, 2, 1, "", "__ne__"], [397, 2, 1, "", "__reversed__"], [398, 2, 1, "", "__str__"], [399, 2, 1, "", "complement"], [400, 2, 1, "", "concat"], [401, 2, 1, "", "count"], [402, 2, 1, "", "definites"], [403, 2, 1, "", "degap"], [404, 2, 1, "", "degenerates"], [405, 2, 1, "", "distance"], [406, 2, 1, "", "expand_degenerates"], [407, 2, 1, "", "find_motifs"], [408, 2, 1, "", "find_with_regex"], [409, 2, 1, "", "frequencies"], [410, 2, 1, "", "gaps"], [411, 2, 1, "", "gc_content"], [412, 2, 1, "", "gc_frequency"], [413, 2, 1, "", "has_definites"], [414, 2, 1, "", "has_degenerates"], [415, 2, 1, "", "has_gaps"], [416, 2, 1, "", "has_interval_metadata"], [417, 2, 1, "", "has_metadata"], [418, 2, 1, "", "has_nondegenerates"], [419, 2, 1, "", "has_positional_metadata"], [420, 2, 1, "", "index"], [421, 2, 1, "", "is_reverse_complement"], [422, 2, 1, "", "iter_contiguous"], [423, 2, 1, "", "iter_kmers"], [424, 2, 1, "", "kmer_frequencies"], [425, 2, 1, "", "lowercase"], [426, 2, 1, "", "match_frequency"], [427, 2, 1, "", "matches"], [428, 2, 1, "", "mismatch_frequency"], [429, 2, 1, "", "mismatches"], [430, 2, 1, "", "nondegenerates"], [431, 2, 1, "", "read"], [432, 2, 1, "", "replace"], [433, 2, 1, "", "reverse_complement"], [434, 2, 1, "", "to_definites"], [435, 2, 1, "", "to_indices"], [436, 2, 1, "", "to_regex"], [437, 2, 1, "", "transcribe"], [438, 2, 1, "", "translate"], [439, 2, 1, "", "translate_six_frames"], [440, 2, 1, "", "write"]], "skbio.sequence.GeneticCode": [[442, 2, 1, "", "__eq__"], [443, 2, 1, "", "__ge__"], [444, 2, 1, "", "__getstate__"], [445, 2, 1, "", "__gt__"], [446, 2, 1, "", "__le__"], [447, 2, 1, "", "__lt__"], [448, 2, 1, "", "__ne__"], [449, 2, 1, "", "__str__"], [450, 2, 1, "", "from_ncbi"], [451, 2, 1, "", "translate"], [452, 2, 1, "", "translate_six_frames"]], "skbio.sequence.GrammaredSequence": [[454, 2, 1, "", "__bool__"], [455, 2, 1, "", "__contains__"], [456, 2, 1, "", "__copy__"], [457, 2, 1, "", "__deepcopy__"], [458, 2, 1, "", "__eq__"], [459, 2, 1, "", "__ge__"], [460, 2, 1, "", "__getitem__"], [461, 2, 1, "", "__getstate__"], [462, 2, 1, "", "__gt__"], [463, 2, 1, "", "__iter__"], [464, 2, 1, "", "__le__"], [465, 2, 1, "", "__len__"], [466, 2, 1, "", "__lt__"], [467, 2, 1, "", "__ne__"], [468, 2, 1, "", "__reversed__"], [469, 2, 1, "", "__str__"], [470, 2, 1, "", "concat"], [471, 2, 1, "", "count"], [472, 2, 1, "", "definites"], [473, 2, 1, "", "degap"], [474, 2, 1, "", "degenerates"], [475, 2, 1, "", "distance"], [476, 2, 1, "", "expand_degenerates"], [477, 2, 1, "", "find_motifs"], [478, 2, 1, "", "find_with_regex"], [479, 2, 1, "", "frequencies"], [480, 2, 1, "", "gaps"], [481, 2, 1, "", "has_definites"], [482, 2, 1, "", "has_degenerates"], [483, 2, 1, "", "has_gaps"], [484, 2, 1, "", "has_interval_metadata"], [485, 2, 1, "", "has_metadata"], [486, 2, 1, "", "has_nondegenerates"], [487, 2, 1, "", "has_positional_metadata"], [488, 2, 1, "", "index"], [489, 2, 1, "", "iter_contiguous"], [490, 2, 1, "", "iter_kmers"], [491, 2, 1, "", "kmer_frequencies"], [492, 2, 1, "", "lowercase"], [493, 2, 1, "", "match_frequency"], [494, 2, 1, "", "matches"], [495, 2, 1, "", "mismatch_frequency"], [496, 2, 1, "", "mismatches"], [497, 2, 1, "", "nondegenerates"], [498, 2, 1, "", "read"], [499, 2, 1, "", "replace"], [500, 2, 1, "", "to_definites"], [501, 2, 1, "", "to_indices"], [502, 2, 1, "", "to_regex"], [503, 2, 1, "", "write"]], "skbio.sequence.Protein": [[505, 2, 1, "", "__bool__"], [506, 2, 1, "", "__contains__"], [507, 2, 1, "", "__copy__"], [508, 2, 1, "", "__deepcopy__"], [509, 2, 1, "", "__eq__"], [510, 2, 1, "", "__ge__"], [511, 2, 1, "", "__getitem__"], [512, 2, 1, "", "__getstate__"], [513, 2, 1, "", "__gt__"], [514, 2, 1, "", "__iter__"], [515, 2, 1, "", "__le__"], [516, 2, 1, "", "__len__"], [517, 2, 1, "", "__lt__"], [518, 2, 1, "", "__ne__"], [519, 2, 1, "", "__reversed__"], [520, 2, 1, "", "__str__"], [521, 2, 1, "", "concat"], [522, 2, 1, "", "count"], [523, 2, 1, "", "definites"], [524, 2, 1, "", "degap"], [525, 2, 1, "", "degenerates"], [526, 2, 1, "", "distance"], [527, 2, 1, "", "expand_degenerates"], [528, 2, 1, "", "find_motifs"], [529, 2, 1, "", "find_with_regex"], [530, 2, 1, "", "frequencies"], [531, 2, 1, "", "gaps"], [532, 2, 1, "", "has_definites"], [533, 2, 1, "", "has_degenerates"], [534, 2, 1, "", "has_gaps"], [535, 2, 1, "", "has_interval_metadata"], [536, 2, 1, "", "has_metadata"], [537, 2, 1, "", "has_nondegenerates"], [538, 2, 1, "", "has_positional_metadata"], [539, 2, 1, "", "has_stops"], [540, 2, 1, "", "index"], [541, 2, 1, "", "iter_contiguous"], [542, 2, 1, "", "iter_kmers"], [543, 2, 1, "", "kmer_frequencies"], [544, 2, 1, "", "lowercase"], [545, 2, 1, "", "match_frequency"], [546, 2, 1, "", "matches"], [547, 2, 1, "", "mismatch_frequency"], [548, 2, 1, "", "mismatches"], [549, 2, 1, "", "nondegenerates"], [550, 2, 1, "", "read"], [551, 2, 1, "", "replace"], [552, 2, 1, "", "stops"], [553, 2, 1, "", "to_definites"], [554, 2, 1, "", "to_indices"], [555, 2, 1, "", "to_regex"], [556, 2, 1, "", "write"]], "skbio.sequence.RNA": [[558, 2, 1, "", "__bool__"], [559, 2, 1, "", "__contains__"], [560, 2, 1, "", "__copy__"], [561, 2, 1, "", "__deepcopy__"], [562, 2, 1, "", "__eq__"], [563, 2, 1, "", "__ge__"], [564, 2, 1, "", "__getitem__"], [565, 2, 1, "", "__getstate__"], [566, 2, 1, "", "__gt__"], [567, 2, 1, "", "__iter__"], [568, 2, 1, "", "__le__"], [569, 2, 1, "", "__len__"], [570, 2, 1, "", "__lt__"], [571, 2, 1, "", "__ne__"], [572, 2, 1, "", "__reversed__"], [573, 2, 1, "", "__str__"], [574, 2, 1, "", "complement"], [575, 2, 1, "", "concat"], [576, 2, 1, "", "count"], [577, 2, 1, "", "definites"], [578, 2, 1, "", "degap"], [579, 2, 1, "", "degenerates"], [580, 2, 1, "", "distance"], [581, 2, 1, "", "expand_degenerates"], [582, 2, 1, "", "find_motifs"], [583, 2, 1, "", "find_with_regex"], [584, 2, 1, "", "frequencies"], [585, 2, 1, "", "gaps"], [586, 2, 1, "", "gc_content"], [587, 2, 1, "", "gc_frequency"], [588, 2, 1, "", "has_definites"], [589, 2, 1, "", "has_degenerates"], [590, 2, 1, "", "has_gaps"], [591, 2, 1, "", "has_interval_metadata"], [592, 2, 1, "", "has_metadata"], [593, 2, 1, "", "has_nondegenerates"], [594, 2, 1, "", "has_positional_metadata"], [595, 2, 1, "", "index"], [596, 2, 1, "", "is_reverse_complement"], [597, 2, 1, "", "iter_contiguous"], [598, 2, 1, "", "iter_kmers"], [599, 2, 1, "", "kmer_frequencies"], [600, 2, 1, "", "lowercase"], [601, 2, 1, "", "match_frequency"], [602, 2, 1, "", "matches"], [603, 2, 1, "", "mismatch_frequency"], [604, 2, 1, "", "mismatches"], [605, 2, 1, "", "nondegenerates"], [606, 2, 1, "", "read"], [607, 2, 1, "", "replace"], [608, 2, 1, "", "reverse_complement"], [609, 2, 1, "", "reverse_transcribe"], [610, 2, 1, "", "to_definites"], [611, 2, 1, "", "to_indices"], [612, 2, 1, "", "to_regex"], [613, 2, 1, "", "translate"], [614, 2, 1, "", "translate_six_frames"], [615, 2, 1, "", "write"]], "skbio.sequence.Sequence": [[617, 2, 1, "", "__bool__"], [618, 2, 1, "", "__contains__"], [619, 2, 1, "", "__copy__"], [620, 2, 1, "", "__deepcopy__"], [621, 2, 1, "", "__eq__"], [622, 2, 1, "", "__ge__"], [623, 2, 1, "", "__getitem__"], [624, 2, 1, "", "__getstate__"], [625, 2, 1, "", "__gt__"], [626, 2, 1, "", "__iter__"], [627, 2, 1, "", "__le__"], [628, 2, 1, "", "__len__"], [629, 2, 1, "", "__lt__"], [630, 2, 1, "", "__ne__"], [631, 2, 1, "", "__reversed__"], [632, 2, 1, "", "__str__"], [633, 2, 1, "", "concat"], [634, 2, 1, "", "count"], [635, 2, 1, "", "distance"], [636, 2, 1, "", "find_with_regex"], [637, 2, 1, "", "frequencies"], [638, 2, 1, "", "has_interval_metadata"], [639, 2, 1, "", "has_metadata"], [640, 2, 1, "", "has_positional_metadata"], [641, 2, 1, "", "index"], [642, 2, 1, "", "iter_contiguous"], [643, 2, 1, "", "iter_kmers"], [644, 2, 1, "", "kmer_frequencies"], [645, 2, 1, "", "lowercase"], [646, 2, 1, "", "match_frequency"], [647, 2, 1, "", "matches"], [648, 2, 1, "", "mismatch_frequency"], [649, 2, 1, "", "mismatches"], [650, 2, 1, "", "read"], [651, 2, 1, "", "replace"], [652, 2, 1, "", "to_indices"], [653, 2, 1, "", "write"]], "skbio.sequence.SubstitutionMatrix": [[655, 2, 1, "", "__contains__"], [656, 2, 1, "", "__eq__"], [657, 2, 1, "", "__ge__"], [658, 2, 1, "", "__getitem__"], [659, 2, 1, "", "__getstate__"], [660, 2, 1, "", "__gt__"], [661, 2, 1, "", "__le__"], [662, 2, 1, "", "__lt__"], [663, 2, 1, "", "__ne__"], [664, 2, 1, "", "__str__"], [665, 2, 1, "", "between"], [666, 2, 1, "", "by_name"], [667, 2, 1, "", "copy"], [668, 2, 1, "", "filter"], [669, 2, 1, "", "from_dict"], [670, 2, 1, "", "from_iterable"], [671, 2, 1, "", "get_names"], [672, 2, 1, "", "identity"], [673, 2, 1, "", "index"], [674, 2, 1, "", "plot"], [675, 2, 1, "", "read"], [676, 2, 1, "", "redundant_form"], [677, 2, 1, "", "rename"], [678, 2, 1, "", "to_data_frame"], [679, 2, 1, "", "to_dict"], [680, 2, 1, "", "transpose"], [681, 2, 1, "", "within"], [682, 2, 1, "", "write"]], "skbio.sequence.distance": [[684, 3, 1, "", "hamming"], [685, 3, 1, "", "kmer_distance"]], "skbio.stats": [[686, 0, 0, "-", "composition"], [707, 0, 0, "-", "distance"], [766, 0, 0, "-", "evolve"], [768, 0, 0, "-", "gradient"], [857, 3, 1, "", "isubsample"], [858, 0, 0, "-", "ordination"], [884, 0, 0, "-", "power"], [889, 3, 1, "", "subsample_counts"]], "skbio.stats.composition": [[687, 3, 1, "", "alr"], [688, 3, 1, "", "alr_inv"], [689, 3, 1, "", "ancom"], [690, 3, 1, "", "centralize"], [691, 3, 1, "", "closure"], [692, 3, 1, "", "clr"], [693, 3, 1, "", "clr_inv"], [694, 3, 1, "", "dirmult_ttest"], [695, 3, 1, "", "ilr"], [696, 3, 1, "", "ilr_inv"], [697, 3, 1, "", "inner"], [698, 3, 1, "", "multi_replace"], [699, 3, 1, "", "multiplicative_replacement"], [700, 3, 1, "", "pairwise_vlr"], [701, 3, 1, "", "perturb"], [702, 3, 1, "", "perturb_inv"], [703, 3, 1, "", "power"], [704, 3, 1, "", "sbp_basis"], [705, 3, 1, "", "tree_basis"], [706, 3, 1, "", "vlr"]], "skbio.stats.distance": [[708, 1, 1, "", "DissimilarityMatrix"], [732, 1, 1, "", "DistanceMatrix"], [759, 3, 1, "", "anosim"], [760, 3, 1, "", "bioenv"], [761, 3, 1, "", "mantel"], [762, 3, 1, "", "permanova"], [763, 3, 1, "", "permdisp"], [764, 3, 1, "", "pwmantel"], [765, 3, 1, "", "randdm"]], "skbio.stats.distance.DissimilarityMatrix": [[709, 2, 1, "", "__contains__"], [710, 2, 1, "", "__eq__"], [711, 2, 1, "", "__ge__"], [712, 2, 1, "", "__getitem__"], [713, 2, 1, "", "__getstate__"], [714, 2, 1, "", "__gt__"], [715, 2, 1, "", "__le__"], [716, 2, 1, "", "__lt__"], [717, 2, 1, "", "__ne__"], [718, 2, 1, "", "__str__"], [719, 2, 1, "", "between"], [720, 2, 1, "", "copy"], [721, 2, 1, "", "filter"], [722, 2, 1, "", "from_iterable"], [723, 2, 1, "", "index"], [724, 2, 1, "", "plot"], [725, 2, 1, "", "read"], [726, 2, 1, "", "redundant_form"], [727, 2, 1, "", "rename"], [728, 2, 1, "", "to_data_frame"], [729, 2, 1, "", "transpose"], [730, 2, 1, "", "within"], [731, 2, 1, "", "write"]], "skbio.stats.distance.DistanceMatrix": [[733, 2, 1, "", "__contains__"], [734, 2, 1, "", "__eq__"], [735, 2, 1, "", "__ge__"], [736, 2, 1, "", "__getitem__"], [737, 2, 1, "", "__getstate__"], [738, 2, 1, "", "__gt__"], [739, 2, 1, "", "__le__"], [740, 2, 1, "", "__lt__"], [741, 2, 1, "", "__ne__"], [742, 2, 1, "", "__str__"], [743, 2, 1, "", "between"], [744, 2, 1, "", "condensed_form"], [745, 2, 1, "", "copy"], [746, 2, 1, "", "filter"], [747, 2, 1, "", "from_iterable"], [748, 2, 1, "", "index"], [749, 2, 1, "", "permute"], [750, 2, 1, "", "plot"], [751, 2, 1, "", "read"], [752, 2, 1, "", "redundant_form"], [753, 2, 1, "", "rename"], [754, 2, 1, "", "to_data_frame"], [755, 2, 1, "", "to_series"], [756, 2, 1, "", "transpose"], [757, 2, 1, "", "within"], [758, 2, 1, "", "write"]], "skbio.stats.evolve": [[767, 3, 1, "", "hommola_cospeciation"]], "skbio.stats.gradient": [[769, 1, 1, "", "AverageGradientANOVA"], [780, 1, 1, "", "CategoryResults"], [791, 1, 1, "", "FirstDifferenceGradientANOVA"], [802, 1, 1, "", "GradientANOVA"], [813, 1, 1, "", "GradientANOVAResults"], [824, 1, 1, "", "GroupResults"], [835, 1, 1, "", "TrajectoryGradientANOVA"], [846, 1, 1, "", "WindowDifferenceGradientANOVA"]], "skbio.stats.gradient.AverageGradientANOVA": [[770, 2, 1, "", "__eq__"], [771, 2, 1, "", "__ge__"], [772, 2, 1, "", "__getstate__"], [773, 2, 1, "", "__gt__"], [774, 2, 1, "", "__hash__"], [775, 2, 1, "", "__le__"], [776, 2, 1, "", "__lt__"], [777, 2, 1, "", "__ne__"], [778, 2, 1, "", "__str__"], [779, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.CategoryResults": [[781, 2, 1, "", "__eq__"], [782, 2, 1, "", "__ge__"], [783, 2, 1, "", "__getstate__"], [784, 2, 1, "", "__gt__"], [785, 2, 1, "", "__hash__"], [786, 2, 1, "", "__le__"], [787, 2, 1, "", "__lt__"], [788, 2, 1, "", "__ne__"], [789, 2, 1, "", "__str__"], [790, 2, 1, "", "to_files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[792, 2, 1, "", "__eq__"], [793, 2, 1, "", "__ge__"], [794, 2, 1, "", "__getstate__"], [795, 2, 1, "", "__gt__"], [796, 2, 1, "", "__hash__"], [797, 2, 1, "", "__le__"], [798, 2, 1, "", "__lt__"], [799, 2, 1, "", "__ne__"], [800, 2, 1, "", "__str__"], [801, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVA": [[803, 2, 1, "", "__eq__"], [804, 2, 1, "", "__ge__"], [805, 2, 1, "", "__getstate__"], [806, 2, 1, "", "__gt__"], [807, 2, 1, "", "__hash__"], [808, 2, 1, "", "__le__"], [809, 2, 1, "", "__lt__"], [810, 2, 1, "", "__ne__"], [811, 2, 1, "", "__str__"], [812, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[814, 2, 1, "", "__eq__"], [815, 2, 1, "", "__ge__"], [816, 2, 1, "", "__getstate__"], [817, 2, 1, "", "__gt__"], [818, 2, 1, "", "__hash__"], [819, 2, 1, "", "__le__"], [820, 2, 1, "", "__lt__"], [821, 2, 1, "", "__ne__"], [822, 2, 1, "", "__str__"], [823, 2, 1, "", "to_files"]], "skbio.stats.gradient.GroupResults": [[825, 2, 1, "", "__eq__"], [826, 2, 1, "", "__ge__"], [827, 2, 1, "", "__getstate__"], [828, 2, 1, "", "__gt__"], [829, 2, 1, "", "__hash__"], [830, 2, 1, "", "__le__"], [831, 2, 1, "", "__lt__"], [832, 2, 1, "", "__ne__"], [833, 2, 1, "", "__str__"], [834, 2, 1, "", "to_files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[836, 2, 1, "", "__eq__"], [837, 2, 1, "", "__ge__"], [838, 2, 1, "", "__getstate__"], [839, 2, 1, "", "__gt__"], [840, 2, 1, "", "__hash__"], [841, 2, 1, "", "__le__"], [842, 2, 1, "", "__lt__"], [843, 2, 1, "", "__ne__"], [844, 2, 1, "", "__str__"], [845, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[847, 2, 1, "", "__eq__"], [848, 2, 1, "", "__ge__"], [849, 2, 1, "", "__getstate__"], [850, 2, 1, "", "__gt__"], [851, 2, 1, "", "__hash__"], [852, 2, 1, "", "__le__"], [853, 2, 1, "", "__lt__"], [854, 2, 1, "", "__ne__"], [855, 2, 1, "", "__str__"], [856, 2, 1, "", "get_trajectories"]], "skbio.stats.ordination": [[859, 1, 1, "", "OrdinationResults"], [873, 3, 1, "", "ca"], [874, 3, 1, "", "cca"], [875, 3, 1, "", "corr"], [876, 3, 1, "", "e_matrix"], [877, 3, 1, "", "f_matrix"], [878, 3, 1, "", "mean_and_std"], [879, 3, 1, "", "pcoa"], [880, 3, 1, "", "pcoa_biplot"], [881, 3, 1, "", "rda"], [882, 3, 1, "", "scale"], [883, 3, 1, "", "svd_rank"]], "skbio.stats.ordination.OrdinationResults": [[860, 2, 1, "", "__eq__"], [861, 2, 1, "", "__ge__"], [862, 2, 1, "", "__getstate__"], [863, 2, 1, "", "__gt__"], [864, 2, 1, "", "__hash__"], [865, 2, 1, "", "__le__"], [866, 2, 1, "", "__lt__"], [867, 2, 1, "", "__ne__"], [868, 2, 1, "", "__str__"], [869, 2, 1, "", "plot"], [870, 2, 1, "", "read"], [871, 2, 1, "", "rename"], [872, 2, 1, "", "write"]], "skbio.stats.power": [[885, 3, 1, "", "confidence_bound"], [886, 3, 1, "", "paired_subsamples"], [887, 3, 1, "", "subsample_paired_power"], [888, 3, 1, "", "subsample_power"]], "skbio.table": [[890, 1, 1, "", "Table"], [957, 4, 1, "", "example_table"]], "skbio.table.Table": [[891, 2, 1, "", "__eq__"], [892, 2, 1, "", "__ge__"], [893, 2, 1, "", "__getitem__"], [894, 2, 1, "", "__getstate__"], [895, 2, 1, "", "__gt__"], [896, 2, 1, "", "__iter__"], [897, 2, 1, "", "__le__"], [898, 2, 1, "", "__lt__"], [899, 2, 1, "", "__ne__"], [900, 2, 1, "", "__str__"], [901, 2, 1, "", "add_group_metadata"], [902, 2, 1, "", "add_metadata"], [903, 2, 1, "", "align_to"], [904, 2, 1, "", "align_to_dataframe"], [905, 2, 1, "", "align_tree"], [906, 2, 1, "", "collapse"], [907, 2, 1, "", "concat"], [908, 2, 1, "", "copy"], [909, 2, 1, "", "data"], [910, 2, 1, "", "del_metadata"], [911, 2, 1, "", "delimited_self"], [912, 2, 1, "", "descriptive_equality"], [913, 2, 1, "", "exists"], [914, 2, 1, "", "filter"], [915, 2, 1, "", "from_adjacency"], [916, 2, 1, "", "from_hdf5"], [917, 2, 1, "", "from_json"], [918, 2, 1, "", "from_tsv"], [919, 2, 1, "", "get_table_density"], [920, 2, 1, "", "get_value_by_ids"], [921, 2, 1, "", "group_metadata"], [922, 2, 1, "", "head"], [923, 2, 1, "", "ids"], [924, 2, 1, "", "index"], [925, 2, 1, "", "is_empty"], [926, 2, 1, "", "iter"], [927, 2, 1, "", "iter_data"], [928, 2, 1, "", "iter_pairwise"], [929, 2, 1, "", "length"], [930, 2, 1, "", "max"], [931, 2, 1, "", "merge"], [932, 2, 1, "", "metadata"], [933, 2, 1, "", "metadata_to_dataframe"], [934, 2, 1, "", "min"], [935, 2, 1, "", "nonzero"], [936, 2, 1, "", "nonzero_counts"], [937, 2, 1, "", "norm"], [938, 2, 1, "", "pa"], [939, 2, 1, "", "partition"], [940, 2, 1, "", "rankdata"], [941, 2, 1, "", "read"], [942, 2, 1, "", "reduce"], [943, 2, 1, "", "remove_empty"], [944, 2, 1, "", "sort"], [945, 2, 1, "", "sort_order"], [946, 2, 1, "", "subsample"], [947, 2, 1, "", "sum"], [948, 2, 1, "", "to_anndata"], [949, 2, 1, "", "to_dataframe"], [950, 2, 1, "", "to_hdf5"], [951, 2, 1, "", "to_json"], [952, 2, 1, "", "to_tsv"], [953, 2, 1, "", "transform"], [954, 2, 1, "", "transpose"], [955, 2, 1, "", "update_ids"], [956, 2, 1, "", "write"]], "skbio.tree": [[958, 1, 1, "", "TreeNode"], [1041, 3, 1, "", "gme"], [1042, 3, 1, "", "majority_rule"], [1043, 3, 1, "", "nj"], [1044, 3, 1, "", "nni"]], "skbio.tree.TreeNode": [[959, 2, 1, "", "__copy__"], [960, 2, 1, "", "__deepcopy__"], [961, 2, 1, "", "__eq__"], [962, 2, 1, "", "__ge__"], [963, 2, 1, "", "__getitem__"], [964, 2, 1, "", "__getstate__"], [965, 2, 1, "", "__gt__"], [966, 2, 1, "", "__hash__"], [967, 2, 1, "", "__iter__"], [968, 2, 1, "", "__le__"], [969, 2, 1, "", "__len__"], [970, 2, 1, "", "__lt__"], [971, 2, 1, "", "__ne__"], [972, 2, 1, "", "__str__"], [973, 2, 1, "", "accumulate_to_ancestor"], [974, 2, 1, "", "ancestors"], [975, 2, 1, "", "append"], [976, 2, 1, "", "ascii_art"], [977, 2, 1, "", "assign_ids"], [978, 2, 1, "", "assign_supports"], [979, 2, 1, "", "bifurcate"], [980, 2, 1, "", "cache_attr"], [981, 2, 1, "", "compare_rfd"], [982, 2, 1, "", "compare_subsets"], [983, 2, 1, "", "compare_tip_distances"], [984, 2, 1, "", "copy"], [985, 2, 1, "", "count"], [986, 2, 1, "", "create_caches"], [987, 2, 1, "", "deepcopy"], [988, 2, 1, "", "descending_branch_length"], [989, 2, 1, "", "distance"], [990, 2, 1, "", "extend"], [991, 2, 1, "", "find"], [992, 2, 1, "", "find_all"], [993, 2, 1, "", "find_by_func"], [994, 2, 1, "", "find_by_id"], [995, 2, 1, "", "from_linkage_matrix"], [996, 2, 1, "", "from_taxdump"], [997, 2, 1, "", "from_taxonomy"], [998, 2, 1, "", "get_max_distance"], [999, 2, 1, "", "has_children"], [1000, 2, 1, "", "index_tree"], [1001, 2, 1, "", "insert"], [1002, 2, 1, "", "invalidate_caches"], [1003, 2, 1, "", "is_root"], [1004, 2, 1, "", "is_tip"], [1005, 2, 1, "", "lca"], [1006, 2, 1, "", "levelorder"], [1007, 2, 1, "", "lowest_common_ancestor"], [1008, 2, 1, "", "neighbors"], [1009, 2, 1, "", "non_tips"], [1010, 2, 1, "", "observed_node_counts"], [1011, 2, 1, "", "pop"], [1012, 2, 1, "", "postorder"], [1013, 2, 1, "", "pre_and_postorder"], [1014, 2, 1, "", "preorder"], [1015, 2, 1, "", "prune"], [1016, 2, 1, "", "read"], [1017, 2, 1, "", "remove"], [1018, 2, 1, "", "remove_deleted"], [1019, 2, 1, "", "root"], [1020, 2, 1, "", "root_at"], [1021, 2, 1, "", "root_at_midpoint"], [1022, 2, 1, "", "root_by_outgroup"], [1023, 2, 1, "", "shear"], [1024, 2, 1, "", "shuffle"], [1025, 2, 1, "", "siblings"], [1026, 2, 1, "", "subset"], [1027, 2, 1, "", "subsets"], [1028, 2, 1, "", "subtree"], [1029, 2, 1, "", "tip_tip_distances"], [1030, 2, 1, "", "tips"], [1031, 2, 1, "", "to_array"], [1032, 2, 1, "", "to_taxonomy"], [1033, 2, 1, "", "traverse"], [1034, 2, 1, "", "unpack"], [1035, 2, 1, "", "unpack_by_func"], [1036, 2, 1, "", "unroot"], [1037, 2, 1, "", "unrooted_copy"], [1038, 2, 1, "", "unrooted_deepcopy"], [1039, 2, 1, "", "unrooted_move"], [1040, 2, 1, "", "write"]], "skbio.util": [[1045, 5, 1, "", "EfficiencyWarning"], [1046, 5, 1, "", "RepresentationWarning"], [1047, 3, 1, "", "assert_data_frame_almost_equal"], [1048, 3, 1, "", "assert_ordination_results_equal"], [1049, 3, 1, "", "cardinal_to_ordinal"], [1050, 1, 1, "", "classproperty"], [1067, 3, 1, "", "find_duplicates"], [1068, 3, 1, "", "get_data_path"], [1069, 3, 1, "", "safe_md5"]], "skbio.util.classproperty": [[1051, 2, 1, "", "__delete__"], [1052, 2, 1, "", "__eq__"], [1053, 2, 1, "", "__ge__"], [1054, 2, 1, "", "__get__"], [1055, 2, 1, "", "__getstate__"], [1056, 2, 1, "", "__gt__"], [1057, 2, 1, "", "__hash__"], [1058, 2, 1, "", "__le__"], [1059, 2, 1, "", "__lt__"], [1060, 2, 1, "", "__ne__"], [1061, 2, 1, "", "__set__"], [1062, 2, 1, "", "__set_name__"], [1063, 2, 1, "", "__str__"], [1064, 2, 1, "", "deleter"], [1065, 2, 1, "", "getter"], [1066, 2, 1, "", "setter"]], "skbio.workflow": [[1070, 1, 1, "", "Workflow"], [1082, 1, 1, "", "method"], [1093, 1, 1, "", "requires"]], "skbio.workflow.Workflow": [[1071, 2, 1, "", "__call__"], [1072, 2, 1, "", "__eq__"], [1073, 2, 1, "", "__ge__"], [1074, 2, 1, "", "__getstate__"], [1075, 2, 1, "", "__gt__"], [1076, 2, 1, "", "__hash__"], [1077, 2, 1, "", "__le__"], [1078, 2, 1, "", "__lt__"], [1079, 2, 1, "", "__ne__"], [1080, 2, 1, "", "__str__"], [1081, 2, 1, "", "initialize_state"]], "skbio.workflow.method": [[1083, 2, 1, "", "__call__"], [1084, 2, 1, "", "__eq__"], [1085, 2, 1, "", "__ge__"], [1086, 2, 1, "", "__getstate__"], [1087, 2, 1, "", "__gt__"], [1088, 2, 1, "", "__hash__"], [1089, 2, 1, "", "__le__"], [1090, 2, 1, "", "__lt__"], [1091, 2, 1, "", "__ne__"], [1092, 2, 1, "", "__str__"]], "skbio.workflow.requires": [[1094, 2, 1, "", "__call__"], [1095, 2, 1, "", "__eq__"], [1096, 2, 1, "", "__ge__"], [1097, 2, 1, "", "__getstate__"], [1098, 2, 1, "", "__gt__"], [1099, 2, 1, "", "__hash__"], [1100, 2, 1, "", "__le__"], [1101, 2, 1, "", "__lt__"], [1102, 2, 1, "", "__ne__"], [1103, 2, 1, "", "__str__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:exception"}, "terms": {"": [0, 1, 3, 44, 53, 65, 82, 83, 84, 85, 89, 90, 91, 92, 94, 98, 99, 100, 103, 107, 109, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 128, 129, 130, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 151, 152, 153, 220, 221, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 296, 297, 298, 308, 320, 343, 344, 361, 362, 363, 375, 376, 380, 382, 384, 387, 389, 392, 394, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 437, 438, 439, 441, 442, 448, 451, 452, 453, 455, 458, 460, 463, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 504, 506, 509, 511, 514, 516, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 557, 559, 562, 564, 567, 569, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 609, 611, 613, 614, 616, 618, 621, 623, 626, 628, 630, 631, 632, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 658, 665, 666, 668, 681, 684, 687, 688, 689, 692, 693, 695, 696, 700, 704, 706, 708, 712, 719, 721, 730, 736, 743, 746, 757, 759, 760, 761, 762, 763, 790, 823, 834, 857, 869, 873, 874, 875, 879, 881, 883, 884, 886, 887, 888, 906, 914, 922, 927, 942, 945, 975, 980, 988, 990, 1000, 1017, 1021, 1036, 1042, 1093, 1105, 1107, 1110, 1112], "0": [0, 1, 3, 13, 14, 15, 17, 18, 19, 32, 33, 34, 44, 45, 46, 47, 50, 51, 52, 53, 65, 77, 82, 83, 85, 88, 91, 92, 94, 104, 105, 107, 112, 116, 117, 118, 120, 121, 123, 124, 132, 134, 135, 136, 138, 145, 148, 149, 154, 166, 179, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 277, 320, 382, 383, 387, 389, 399, 400, 401, 403, 405, 406, 407, 409, 411, 412, 418, 424, 426, 428, 430, 433, 435, 436, 437, 438, 439, 441, 451, 452, 453, 454, 458, 460, 470, 471, 473, 475, 476, 477, 479, 486, 491, 493, 495, 497, 501, 502, 504, 505, 509, 511, 521, 522, 524, 526, 527, 528, 530, 537, 543, 545, 547, 549, 554, 555, 557, 558, 562, 564, 574, 575, 576, 578, 580, 581, 582, 584, 586, 587, 593, 599, 601, 603, 605, 608, 609, 611, 612, 613, 614, 616, 617, 621, 623, 633, 634, 635, 637, 644, 646, 648, 652, 654, 665, 666, 669, 674, 677, 678, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 719, 724, 727, 728, 730, 743, 750, 753, 754, 755, 757, 759, 760, 761, 763, 764, 765, 767, 768, 802, 857, 858, 869, 874, 878, 879, 882, 884, 885, 887, 888, 889, 890, 893, 903, 904, 905, 906, 907, 909, 913, 914, 917, 920, 921, 922, 923, 924, 926, 927, 931, 932, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 973, 978, 981, 982, 983, 984, 987, 988, 989, 992, 998, 1001, 1011, 1017, 1020, 1021, 1022, 1023, 1024, 1029, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1049, 1082, 1105, 1107, 1110, 1112], "00": [1, 220, 221, 225, 228, 231, 400, 437, 470, 521, 575, 609, 633, 1043, 1107], "000": 151, "000000": [1, 1043], "000000e": [220, 221], "000123": 234, "000133446": 983, "000532": 858, "001": [689, 884], "001562": 858, "00193863362662502": 887, "003": 888, "0031": 768, "005": 888, "007022633956606": 768, "007446": 694, "0082138": [53, 104], "01": [231, 884], "0118478282382": 768, "0123": 234, "0123456789": 298, "012631": 858, "015": [700, 706], "016": 884, "02": [231, 236, 689, 1041, 1044], "020131": 694, "0220": [700, 706], "0225": 768, "029747": 858, "03": [231, 763], "0301": 768, "032": 884, "0341": 768, "036910": 694, "0378111988903307": 222, "03t14": 917, "04": [231, 884], "043888": 694, "044": 884, "044805": 858, "048219": 694, "05": [1, 231, 689, 694, 767, 884, 885, 887, 888, 1047], "051": 884, "056": 888, "06": [231, 917], "0625": 698, "0633": 768, "065613": 694, "068310": 694, "07": 231, "0721": 768, "074": 888, "08": [231, 234, 884, 887], "083071": 235, "0874": 768, "088": 887, "0898": 768, "09": 231, "09392265": 1, "09861229": 687, "0i": 689, "0th": [933, 1049], "1": [0, 1, 3, 13, 14, 15, 17, 18, 19, 20, 33, 34, 44, 46, 47, 50, 51, 52, 53, 65, 70, 82, 83, 84, 85, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 298, 308, 320, 323, 325, 382, 387, 389, 399, 400, 401, 407, 409, 422, 423, 424, 428, 433, 434, 435, 438, 439, 441, 442, 449, 450, 451, 452, 453, 458, 460, 470, 471, 477, 479, 489, 490, 491, 495, 500, 501, 504, 509, 511, 521, 522, 528, 530, 541, 542, 543, 547, 553, 554, 557, 562, 564, 574, 575, 576, 582, 584, 597, 598, 599, 603, 608, 610, 611, 613, 614, 616, 621, 623, 633, 634, 637, 642, 643, 644, 648, 652, 654, 665, 666, 669, 672, 674, 676, 677, 678, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 719, 724, 726, 727, 728, 730, 732, 743, 744, 750, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 767, 802, 824, 846, 857, 858, 869, 873, 874, 878, 881, 882, 884, 886, 887, 888, 889, 890, 903, 904, 905, 906, 907, 910, 913, 914, 916, 917, 920, 921, 922, 923, 924, 926, 927, 931, 932, 934, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 950, 952, 953, 955, 957, 973, 978, 981, 983, 988, 989, 992, 996, 997, 998, 1001, 1011, 1021, 1023, 1024, 1029, 1031, 1032, 1034, 1035, 1036, 1041, 1042, 1043, 1044, 1049, 1107, 1110, 1112], "10": [53, 84, 104, 107, 124, 125, 138, 166, 179, 221, 224, 225, 226, 227, 228, 230, 231, 232, 298, 308, 323, 382, 407, 453, 477, 504, 528, 557, 582, 616, 689, 694, 700, 706, 763, 858, 884, 887, 888, 893, 903, 906, 907, 911, 927, 931, 1041, 1043, 1044, 1112], "100": [1, 220, 221, 225, 228, 323, 689, 694, 888, 922, 946, 1112], "1000": [323, 857], "1004": 768, "1004075": [700, 706], "100548": 858, "1007": [224, 700, 706], "101": 694, "10136628": 692, "102": 694, "1024": 223, "103": 694, "104": [235, 694], "1048576": 1069, "104937": 858, "1055": 768, "10596": 221, "106": 1021, "106652702761034136": [1041, 1044], "108": 884, "1089": [1041, 1044], "10915": [100, 103, 666], "10919": [100, 103, 666], "1093": [226, 1043], "10937312": 1, "11": [0, 45, 53, 100, 103, 104, 110, 115, 116, 220, 224, 231, 233, 382, 408, 478, 529, 557, 583, 636, 689, 694, 700, 706, 768, 858, 874, 881, 884, 903, 906, 907, 927, 1043], "110": 694, "1115": 127, "112": 940, "1126": 127, "113": [121, 138], "1131255": 1069, "114": 220, "1154": 768, "116": 768, "1167": 874, "117": 759, "11704769": 695, "117693430600200007": 116, "1179": 874, "11th": 232, "12": [1, 224, 231, 616, 689, 694, 700, 884, 906, 907, 940, 1107], "120": [228, 694], "120492524415": 1110, "1215": 768, "123": [234, 857], "12345": [225, 616], "12487758": [1041, 1044], "126": 226, "127": 887, "128": 694, "13": [0, 111, 135, 141, 221, 225, 231, 233, 382, 453, 504, 557, 616, 689, 694, 858, 906, 907, 950], "131": [135, 141, 981], "131567": 236, "1345": 108, "1347": 108, "135": [221, 700, 706], "1371": [53, 104, 700, 706], "139": 235, "14": [1, 111, 123, 134, 224, 226, 231, 403, 407, 473, 477, 524, 528, 578, 582, 689, 694, 768, 888, 907, 989, 1029], "14092516": 696, "141": [134, 981], "142857": 764, "14285714": 702, "142857142857": 937, "143": 759, "1435": 225, "144": 141, "1457": 767, "1468": 767, "147": 101, "1495": 224, "149855": 225, "1499": 224, "15": [53, 100, 103, 123, 221, 231, 234, 768, 884, 887, 888, 907, 1029], "1535": 978, "1542": [221, 978], "156": 118, "1566": 221, "157": 884, "1576": [148, 149], "15800534": 220, "1585": [148, 149], "16": [1, 114, 134, 222, 225, 226, 227, 231, 232, 399, 408, 433, 478, 529, 574, 583, 608, 636, 694, 869, 884, 888, 903, 907, 998, 1029], "16025641": 1, "161": 220, "16247744": 690, "1627907": 1, "163": [112, 122, 139, 141], "164998": 694, "165": 134, "168": [108, 887], "169": [148, 149], "17": [114, 116, 148, 149, 224, 231, 382, 557, 858, 887, 907], "170768970": 220, "172": [148, 149], "1740": 224, "17445763": 690, "1767": 226, "1771": 226, "1786181": 221, "18": [221, 231, 235, 759, 884, 1041, 1044, 1107], "1800": 224, "1814": 104, "182343": 694, "1859": 224, "1875": 698, "18761279": 690, "19": [1, 224, 231, 884, 906, 1041, 1044], "1907511": 224, "1912": 118, "1913": 105, "192": 235, "19234468": 227, "193": 107, "194": 134, "1943": 117, "1948": 138, "1949": [112, 122, 139, 141], "195": 101, "1953": [106, 119], "1955": 118, "1956": 109, "1958": 126, "1961": 136, "1966": [135, 141], "1967": [127, 761], "1968": 137, "1970": [98, 108], "1971": [114, 139], "1972": 1021, "1973": 121, "1974": [120, 128], "1976": 123, "1978": 666, "1981": [101, 981, 1042], "1983": 115, "1984": [110, 382, 453, 504, 557, 616], "1985": [225, 382, 453, 504, 557, 616], "1986": [225, 230, 232, 874], "1987": [130, 1043], "1988": 145, "199": 227, "1990": [220, 221, 224], "1991": 224, "1992": [100, 103, 107, 116, 134, 666, 707], "1993": [107, 759, 760], "1995": 874, "1997": [116, 235, 1043], "1998": [123, 858, 873, 874, 876, 877, 879, 881], "1d": [88, 138, 146, 166, 179, 192, 203, 382, 384, 389, 401, 402, 404, 405, 407, 408, 410, 420, 421, 422, 426, 427, 428, 429, 430, 432, 435, 455, 460, 471, 472, 474, 475, 477, 478, 480, 488, 489, 493, 494, 495, 496, 497, 499, 501, 504, 506, 511, 522, 523, 525, 526, 528, 529, 531, 540, 541, 545, 546, 547, 548, 549, 551, 552, 554, 557, 559, 564, 576, 577, 579, 580, 582, 583, 585, 595, 596, 597, 601, 602, 603, 604, 605, 607, 611, 616, 618, 623, 634, 635, 636, 641, 642, 646, 647, 648, 649, 651, 652], "1e": [221, 230, 1047], "1e51ca3a5450c43524b9185c236cc5cc": 224, "1e9": 234, "1st": [77, 835, 1049], "1x1": 232, "2": [0, 1, 3, 13, 14, 15, 18, 19, 45, 46, 47, 50, 51, 52, 53, 65, 70, 77, 82, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 106, 107, 110, 112, 114, 116, 118, 121, 122, 123, 124, 125, 127, 128, 130, 134, 136, 138, 139, 141, 145, 148, 149, 150, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 249, 308, 320, 323, 325, 363, 382, 399, 400, 401, 407, 408, 409, 412, 420, 422, 424, 433, 435, 439, 442, 451, 452, 470, 471, 477, 478, 479, 488, 489, 491, 501, 521, 522, 528, 529, 530, 540, 541, 543, 554, 574, 575, 576, 582, 583, 584, 587, 595, 597, 599, 608, 611, 614, 616, 633, 634, 636, 637, 641, 642, 644, 652, 654, 665, 666, 672, 674, 678, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 719, 724, 728, 730, 732, 743, 750, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 767, 768, 857, 858, 869, 873, 874, 876, 879, 881, 884, 886, 887, 888, 889, 890, 903, 904, 905, 906, 907, 910, 911, 914, 916, 917, 922, 929, 930, 931, 934, 937, 940, 946, 948, 949, 950, 953, 955, 957, 973, 978, 981, 983, 984, 987, 988, 989, 994, 996, 997, 998, 1001, 1020, 1021, 1022, 1023, 1024, 1029, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1049, 1105, 1107, 1110, 1112], "20": [0, 3, 231, 504, 689, 694, 869, 876, 884, 887, 888, 922], "200": [227, 694], "2000": [107, 888, 1043], "2001": 762, "2002": [84, 116, 134, 144, 221, 225, 1041, 1044], "2003": [225, 686], "2004": 129, "2005": [148, 224], "2006": [116, 121, 138, 763, 1043], "2007": [134, 148, 149], "2008": [225, 232], "2009": [226, 227, 767], "201": [107, 694], "2010": [116, 148, 149, 226], "2011": [124, 125, 134, 148, 149], "2012": [134, 227, 236, 761, 890, 957], "2013": [53, 104, 114, 134, 704, 869], "2014": [53, 104, 220, 232, 694, 704, 917], "2015": [84, 686, 689, 700, 706], "2016": [134, 700, 706], "2017": 978, "2018": 236, "202": 694, "2020": 236, "2022": 236, "2024": 234, "203": 694, "20309816": 768, "205": 760, "207": 134, "209": [224, 227, 761], "21": [224, 231, 689, 700, 706, 877, 888, 906, 922, 953, 1044], "210": 107, "2106": 134, "2107852473": 697, "2113": 134, "2130": 221, "21383822": 693, "215": [220, 221], "217": 107, "21712454": 869, "2186": 768, "219": [221, 224, 760], "22": [100, 103, 231, 236, 666, 689, 884, 922, 1107], "220": 761, "22054469": 696, "2208": 768, "2214": 221, "224": 884, "226": 888, "227": [107, 225], "229": 884, "23": [1, 231, 234, 235, 450, 689, 906, 922, 1043, 1107], "23059566": 703, "23632778": 693, "2364": 768, "237": [106, 119, 144], "238327": 858, "239": 1042, "23e": 234, "24": [0, 221, 231, 666, 887, 917, 922], "24270353": 1, "245": 763, "246": [107, 144, 235], "24714631": 703, "25": [0, 1, 88, 101, 116, 123, 134, 148, 149, 151, 224, 230, 231, 405, 409, 411, 424, 428, 437, 441, 475, 479, 491, 495, 526, 530, 543, 547, 580, 584, 586, 599, 603, 609, 635, 637, 644, 648, 689, 701, 759, 760, 763, 768, 884, 887, 888, 937, 1107], "2500": 888, "253": 763, "255": [53, 874], "256": [137, 884], "257": 137, "25737316": 703, "259": 235, "25th": 689, "26": [114, 221, 230, 689, 762, 767, 869], "260656459": 227, "26118259": 693, "262": 123, "264": [106, 119], "26433692": 1, "26488486": 703, "265": 110, "27": [0, 116, 138, 148, 149, 221, 504, 700, 761], "270": 110, "272": 888, "2761": 768, "278": 116, "28": [0, 134, 231, 884], "28571429": 702, "28865141": 693, "289": 874, "28ecologi": 106, "29": [106, 224, 226, 227], "293463": 694, "29597001": 768, "29672718": 696, "2_": 107, "2a": 232, "2b": 118, "2d": [53, 98, 99, 100, 101, 102, 103, 122, 146, 150, 151, 154, 179, 203, 654, 669, 679, 697, 765, 875, 882], "2e": 234, "2f_2": 110, "2m5p3d1i": [45, 50], "2nd": [835, 926, 1049], "2nf_2": 115, "2x2": [1, 229, 931, 937], "2x3": [913, 914, 920, 921, 923, 924, 926, 932, 938, 939, 942, 944, 945, 947, 952, 953, 955], "3": [1, 3, 13, 14, 15, 18, 19, 46, 47, 50, 51, 52, 53, 65, 70, 82, 83, 85, 88, 91, 92, 94, 95, 98, 102, 106, 107, 115, 116, 119, 126, 134, 138, 144, 148, 149, 166, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 298, 308, 320, 325, 387, 389, 399, 400, 401, 406, 407, 423, 424, 426, 432, 433, 435, 438, 439, 451, 452, 458, 460, 470, 471, 476, 477, 490, 491, 493, 499, 501, 504, 509, 511, 521, 522, 527, 528, 542, 543, 545, 551, 554, 562, 564, 574, 575, 576, 581, 582, 598, 599, 601, 607, 608, 611, 613, 614, 616, 621, 623, 633, 634, 643, 644, 646, 651, 652, 665, 674, 678, 681, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 697, 700, 701, 702, 703, 706, 708, 719, 724, 728, 730, 743, 750, 754, 755, 757, 759, 760, 761, 763, 764, 765, 767, 768, 769, 791, 802, 835, 858, 859, 869, 873, 874, 879, 884, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 913, 914, 917, 920, 921, 922, 923, 924, 926, 927, 929, 931, 932, 934, 937, 938, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 952, 953, 955, 957, 973, 983, 988, 989, 996, 997, 998, 1021, 1023, 1027, 1029, 1031, 1032, 1034, 1035, 1043, 1049, 1107, 1110, 1112], "30": [0, 221, 227, 228, 231, 233, 887, 888, 927, 1012], "3021": [382, 453, 504, 557, 616], "30216948": 690, "3030": [382, 453, 504, 557, 616], "30409883": 692, "30870431": 1, "30927835": 1, "31": 221, "312": 235, "314": 224, "32": [231, 762], "32495488": 690, "32630": 227, "329": 220, "33": [83, 116, 148, 149, 226, 406, 476, 527, 581, 694, 760, 763, 884, 887, 1107], "330": 220, "332": 884, "33333333333333331": 1, "335928": 236, "34": [227, 233, 978, 1041, 1044], "34180297": 696, "343": 227, "344": 227, "3447015": 1043, "345": 666, "34891526": 690, "34989": 225, "35": [1, 224, 226, 227, 233, 686, 888, 1041, 1044], "3519": 768, "352": 666, "354": 768, "355": [224, 768], "356": 768, "36": [126, 231, 234, 700, 706, 884], "363": [121, 138], "36463": 235, "36514837": 704, "37": [148, 235], "3716": 768, "375": [121, 138, 698], "379": 138, "379593": 1069, "38": [0, 220, 226, 231, 884], "38629436": 687, "3899": 224, "39": [137, 225, 231, 704], "3937": 108, "3e": [220, 221, 884], "3f": 767, "3k1v_a": 227, "3rd": [761, 835, 880, 1049, 1112], "3x": 1012, "3x2": 931, "3x3": [707, 761, 764, 765], "4": [0, 1, 3, 14, 18, 46, 51, 65, 82, 85, 86, 90, 92, 105, 106, 107, 114, 116, 119, 134, 136, 139, 148, 149, 224, 225, 227, 230, 231, 232, 234, 235, 236, 298, 308, 320, 325, 382, 389, 394, 399, 400, 409, 419, 423, 433, 435, 438, 439, 441, 452, 460, 465, 470, 479, 487, 490, 501, 511, 516, 521, 530, 538, 542, 554, 564, 569, 574, 575, 584, 594, 598, 608, 611, 613, 614, 616, 623, 628, 633, 637, 640, 643, 652, 654, 665, 666, 674, 681, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 702, 703, 704, 706, 719, 724, 730, 743, 750, 755, 757, 759, 761, 767, 858, 873, 874, 881, 884, 889, 903, 904, 905, 907, 910, 911, 917, 921, 922, 931, 940, 944, 945, 949, 950, 973, 983, 988, 989, 996, 997, 998, 1001, 1021, 1029, 1031, 1032, 1034, 1035, 1042, 1043, 1107, 1110], "40": [1, 106, 119, 225, 234, 236, 704, 886, 888, 917, 922], "400": 760, "402": 116, "403": [220, 221], "40824829": [704, 705], "41": [225, 231, 922], "410": [220, 221], "4140": 768, "4148": [112, 122, 139, 141], "42": [1, 92, 117, 225, 231, 232, 234, 382, 405, 475, 526, 557, 580, 635, 760, 763, 913, 914, 920, 921, 922, 923, 924, 926, 932, 938, 939, 940, 942, 947, 952, 953, 955], "423": 138, "42512039": 1, "426": 888, "427": 121, "42857143": 702, "43": [92, 130, 231, 922, 942, 947, 1042], "431": 134, "432": 121, "4375": 698, "44": [1, 135, 763, 922, 1042], "443": 98, "444": 134, "45": [1, 231, 234, 888], "450": 760, "456": 873, "45995501": 869, "46": [231, 762, 888, 926, 942, 947], "4603377592": 228, "4603378712": 228, "4604421736": 228, "462339": 694, "466911": 858, "467481": 694, "46774194": 1, "4693": 225, "47": [231, 884, 947], "479": 145, "48": [98, 127], "480232": 694, "484": 884, "487": 145, "49": [0, 228, 231], "4hh": 224, "4x4": [759, 760, 1029], "5": [0, 1, 3, 14, 15, 18, 19, 46, 47, 50, 51, 52, 53, 83, 92, 99, 102, 104, 106, 111, 116, 118, 134, 148, 149, 151, 154, 219, 221, 224, 225, 226, 227, 230, 232, 235, 236, 298, 387, 389, 399, 400, 401, 407, 409, 411, 412, 418, 424, 430, 433, 435, 451, 458, 460, 470, 471, 477, 479, 486, 491, 497, 501, 509, 511, 521, 522, 528, 530, 537, 543, 549, 554, 562, 564, 574, 575, 576, 582, 584, 586, 587, 593, 599, 605, 608, 611, 621, 623, 633, 634, 637, 644, 652, 665, 666, 681, 684, 689, 694, 698, 701, 707, 719, 730, 743, 755, 757, 759, 760, 763, 764, 767, 858, 874, 884, 887, 888, 889, 893, 903, 904, 905, 906, 907, 917, 922, 930, 931, 940, 949, 953, 957, 973, 978, 982, 983, 985, 988, 989, 996, 997, 998, 1001, 1021, 1023, 1024, 1029, 1031, 1032, 1041, 1042, 1043, 1044, 1047, 1110], "50": [1, 100, 103, 225, 228, 231, 400, 470, 521, 575, 633, 689, 694, 768, 869, 887, 888, 914, 1107], "500": [887, 888], "5007512": 869, "50th": [225, 689], "52": [114, 139, 145, 231], "52199973": 768, "528": 887, "528243": 694, "53": [98, 231, 981], "530": 760, "533": 884, "533729": 694, "5338": 116, "54": [120, 121, 149, 1041, 1044], "547": 136, "54772256": 704, "55": [231, 403, 473, 524, 578, 763, 768, 884, 1041, 1043, 1044], "55152525": 235, "555": 120, "556061": 694, "5565": 221, "557": 120, "5587": 221, "56": [134, 403, 473, 524, 578], "560": 128, "562": 136, "5671": 221, "57": [221, 231, 874, 927], "572": 884, "577": [114, 139], "58": [117, 231, 884], "581": 224, "586": [114, 139], "59": 226, "5917809": 692, "594590": 694, "5990": 235, "5996": 235, "5e": 234, "6": [1, 3, 13, 14, 15, 18, 19, 46, 47, 51, 52, 85, 106, 110, 111, 116, 132, 134, 137, 138, 148, 149, 221, 224, 225, 226, 227, 234, 235, 236, 399, 400, 408, 409, 432, 433, 435, 453, 470, 478, 479, 499, 501, 521, 529, 530, 551, 554, 574, 575, 583, 584, 607, 608, 611, 633, 636, 637, 651, 652, 681, 689, 691, 696, 699, 700, 702, 730, 755, 757, 761, 763, 764, 767, 858, 884, 903, 906, 907, 917, 922, 931, 937, 940, 973, 978, 984, 987, 988, 989, 997, 998, 1001, 1020, 1021, 1022, 1029, 1031, 1032, 1036, 1037, 1038, 1039, 1042, 1107], "60": [222, 223, 224, 228, 768, 887, 922], "601": 884, "601277": 694, "6018555": 761, "602": 884, "607": 768, "609": 224, "61": [231, 763, 888, 922], "617": 884, "619": 235, "62": [116, 148, 149, 222, 223, 226, 763, 922, 1041, 1044, 1107], "6212": 235, "6216": 768, "6234": 235, "627677": 694, "63": [221, 231, 922], "634": 768, "64": [1, 151, 226, 234, 441, 442, 922, 1035], "641": 235, "645": 1021, "646": 888, "646e": 884, "65": 768, "65463348": 869, "66": [227, 231, 406, 476, 527, 581, 763, 1107], "664": 884, "6666666666666667": 1110, "668": 1021, "67": [227, 231, 399, 406, 433, 476, 527, 574, 581, 608, 759, 763, 874, 884, 1107], "68": [227, 768, 887], "6821": 221, "68235294": 1, "68339802": 695, "687": [1041, 1044], "688": [112, 122, 139, 141], "69": 231, "6913": 768, "692": 116, "6928": 221, "69314718": 687, "694": 116, "6e": 221, "6x6": [1, 763], "7": [1, 101, 111, 134, 151, 225, 226, 227, 235, 236, 298, 308, 320, 325, 382, 389, 400, 451, 460, 470, 511, 521, 557, 564, 575, 623, 633, 681, 694, 730, 757, 760, 761, 763, 764, 767, 858, 884, 890, 903, 906, 907, 940, 957, 983, 984, 997, 1020, 1021, 1023, 1031, 1032, 1037, 1043, 1048, 1107], "70": 231, "702656": 694, "705": [1041, 1044], "70710678": [704, 705], "707221": 694, "71": [126, 148, 231, 235], "714286": 760, "71597633": 1, "72": 134, "73": [148, 149], "74": 231, "75": [1, 88, 116, 123, 148, 149, 426, 493, 545, 601, 646, 689, 707, 760, 763, 937, 940, 1035], "750792": 694, "7559": 761, "755929": 764, "75th": 689, "76": [129, 134, 231], "77": [129, 763], "7715": 768, "771517": 760, "77549923": 1, "7768362": 695, "779": 884, "78": [231, 1035], "78142077": 1, "783": 884, "78787879": 1, "788": 884, "79": [225, 228, 231], "793": 130, "79451346": 692, "8": [0, 1, 13, 104, 220, 221, 226, 227, 232, 235, 236, 249, 325, 400, 409, 432, 437, 453, 470, 479, 499, 521, 530, 551, 575, 584, 607, 609, 633, 637, 651, 681, 700, 706, 730, 757, 760, 767, 858, 884, 888, 889, 903, 906, 907, 911, 940, 988, 997, 1032, 1043, 1107, 1110], "80": [107, 225, 858, 887, 888, 922, 978, 1035, 1112], "803": 130, "80332382": 869, "806": 888, "81": 922, "810": 760, "811": 221, "81521739": 1, "81649658": [704, 705], "818": 123, "82": [221, 222, 235, 922], "820": 123, "8228": 148, "8235": 148, "824": 888, "82857143": 1, "82967033": 1, "83": [219, 922, 957], "8304": 768, "832": 767, "836": 884, "838": 884, "84": 922, "844": 884, "8468": 221, "848": 884, "85": [224, 231, 888, 1035], "8547619": 1, "8552": 221, "857142857143": 937, "85714286": 1, "86": [382, 557], "86111111": 1, "86666667": 1, "86813187": 1, "87": [107, 231], "87709497": 1, "87777778": 1, "88": [235, 763, 887], "884420": 917, "884498": 694, "89": [100, 103, 227, 666], "89285714": 1, "8e": 221, "9": [1, 220, 221, 222, 225, 228, 231, 234, 235, 277, 298, 308, 382, 403, 407, 453, 473, 477, 504, 524, 528, 557, 578, 582, 616, 689, 694, 767, 768, 858, 873, 874, 876, 877, 879, 880, 881, 884, 903, 906, 907, 985, 988, 997, 1029, 1032, 1041, 1042, 1043, 1044, 1107], "90": [84, 228, 694, 1112], "900": 323, "905": 115, "909": 221, "912": 115, "91769271": 869, "92": 760, "9223489": 235, "922404392093": 1, "9230769230": 685, "928": 884, "93": 226, "932": 884, "939336": 1, "94": [221, 231], "95": [111, 115, 116, 124, 226, 231, 978], "951": 1021, "952": 888, "95224719": 1, "956": 884, "96": [111, 228], "97": [231, 694], "978387": 694, "984": 884, "98435423": 1, "98796148": 1, "99": [220, 221, 224, 231, 759, 763, 767, 940], "991987": 694, "996": [884, 888], "999": [1, 616, 759, 761, 762, 763, 764, 767], "999887756453524252": 235, "9e": 220, "9f": 983, "A": [1, 50, 53, 65, 86, 88, 91, 92, 93, 96, 98, 100, 103, 107, 110, 115, 116, 117, 118, 120, 121, 123, 129, 134, 136, 138, 148, 149, 151, 177, 190, 215, 216, 217, 218, 220, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 262, 266, 267, 272, 279, 280, 298, 319, 323, 324, 345, 363, 378, 382, 403, 409, 415, 431, 435, 442, 448, 453, 473, 479, 483, 498, 501, 504, 524, 530, 534, 550, 554, 557, 578, 584, 590, 606, 611, 616, 637, 650, 652, 654, 665, 666, 670, 672, 674, 675, 677, 680, 681, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 719, 722, 724, 725, 727, 729, 730, 732, 743, 747, 750, 751, 753, 756, 757, 760, 761, 762, 763, 765, 767, 780, 802, 824, 868, 869, 870, 871, 873, 874, 879, 881, 886, 887, 888, 889, 893, 904, 905, 906, 910, 915, 916, 917, 918, 926, 933, 939, 941, 942, 943, 944, 945, 946, 949, 950, 951, 953, 958, 973, 978, 981, 983, 984, 987, 988, 989, 993, 994, 995, 998, 1000, 1008, 1016, 1018, 1020, 1021, 1022, 1027, 1029, 1036, 1037, 1038, 1042, 1093, 1105, 1110, 1112], "AS": 235, "AT": [83, 225, 226, 232], "And": [228, 382, 504, 701, 1107], "As": [1, 224, 227, 230, 234, 616, 676, 726, 752, 761, 763, 874, 991, 1105, 1112], "At": [234, 237, 906], "Be": 616, "But": 1022, "By": [92, 123, 134, 146, 150, 225, 227, 234, 689, 763, 878, 879, 882, 916, 928, 1022, 1029, 1043, 1044, 1071], "For": [1, 65, 84, 93, 97, 104, 134, 177, 178, 190, 191, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 308, 323, 324, 325, 326, 363, 378, 381, 382, 431, 440, 498, 503, 504, 550, 556, 557, 606, 615, 616, 650, 653, 666, 675, 682, 689, 694, 725, 731, 751, 758, 759, 760, 761, 762, 763, 765, 767, 769, 835, 869, 870, 872, 873, 874, 884, 886, 887, 888, 890, 906, 911, 912, 933, 941, 946, 956, 957, 978, 1016, 1040, 1042, 1045, 1046, 1105, 1107, 1110], "IF": 933, "IN": 235, "If": [1, 13, 15, 19, 45, 47, 50, 52, 53, 65, 82, 84, 85, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 107, 110, 111, 112, 114, 116, 117, 118, 122, 124, 130, 134, 138, 139, 140, 146, 148, 149, 150, 151, 154, 166, 177, 190, 214, 215, 216, 217, 220, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 248, 249, 250, 263, 265, 269, 270, 273, 274, 277, 290, 291, 292, 298, 307, 311, 324, 325, 337, 338, 339, 355, 356, 357, 363, 372, 373, 376, 377, 378, 382, 384, 389, 399, 400, 401, 403, 405, 407, 409, 412, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 435, 436, 451, 453, 455, 460, 470, 471, 473, 475, 477, 479, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 502, 504, 506, 511, 521, 522, 524, 526, 528, 530, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 554, 555, 557, 559, 564, 574, 575, 576, 578, 580, 582, 584, 587, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 608, 611, 612, 613, 614, 616, 618, 623, 633, 634, 635, 637, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 658, 665, 666, 668, 669, 670, 673, 674, 675, 677, 681, 684, 685, 689, 691, 694, 695, 696, 698, 699, 705, 708, 712, 719, 721, 722, 723, 724, 725, 727, 730, 736, 743, 746, 747, 748, 749, 750, 751, 753, 757, 759, 760, 761, 762, 763, 764, 765, 767, 802, 813, 846, 857, 868, 869, 870, 871, 873, 874, 875, 878, 879, 882, 884, 885, 886, 887, 888, 889, 893, 901, 903, 906, 907, 909, 910, 911, 914, 915, 916, 917, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 947, 948, 949, 950, 951, 952, 953, 955, 978, 980, 981, 985, 988, 991, 992, 996, 1001, 1002, 1005, 1007, 1010, 1016, 1020, 1021, 1022, 1023, 1024, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1042, 1043, 1047, 1048, 1049, 1050], "In": [1, 3, 53, 84, 116, 134, 136, 148, 149, 151, 225, 226, 227, 228, 230, 232, 236, 363, 382, 412, 451, 504, 557, 587, 654, 686, 689, 694, 707, 760, 761, 767, 857, 873, 874, 879, 884, 888, 903, 958, 978, 991, 1036, 1042, 1105, 1107, 1110, 1112], "It": [1, 3, 53, 105, 106, 112, 116, 117, 119, 121, 122, 123, 130, 134, 136, 138, 139, 143, 145, 219, 220, 222, 225, 226, 227, 228, 230, 232, 234, 236, 249, 298, 308, 311, 319, 320, 322, 323, 325, 382, 418, 430, 486, 497, 504, 537, 549, 557, 593, 605, 609, 689, 692, 694, 698, 707, 749, 761, 762, 767, 790, 791, 823, 834, 846, 873, 874, 878, 881, 884, 887, 888, 914, 953, 958, 1039, 1044, 1047, 1069, 1093, 1107], "Its": [16, 48, 881], "NOT": [53, 277], "No": [66, 111, 220, 221, 224, 233, 236, 308, 398, 469, 520, 573, 632, 761], "Not": [226, 382, 435, 501, 554, 611, 652, 763], "ONE": [53, 104], "OR": 66, "Of": 227, "On": [136, 879], "One": [116, 232, 237, 377, 694, 744, 1043], "That": [135, 141, 230, 425, 492, 544, 600, 645, 984], "The": [0, 1, 3, 13, 14, 15, 16, 44, 45, 46, 47, 48, 50, 53, 54, 82, 83, 84, 85, 86, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 130, 134, 135, 137, 138, 139, 141, 144, 146, 148, 149, 150, 151, 152, 153, 154, 166, 177, 178, 179, 190, 191, 192, 203, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 248, 249, 250, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 290, 295, 296, 297, 298, 299, 308, 309, 310, 319, 320, 321, 322, 323, 324, 326, 327, 337, 342, 343, 344, 355, 360, 361, 362, 363, 372, 373, 375, 376, 377, 378, 379, 380, 381, 384, 387, 389, 394, 399, 400, 401, 403, 405, 409, 417, 419, 420, 422, 423, 424, 431, 433, 435, 439, 440, 441, 450, 451, 452, 455, 458, 460, 465, 470, 471, 473, 475, 479, 485, 487, 488, 489, 490, 491, 498, 501, 503, 506, 509, 511, 516, 521, 522, 524, 526, 530, 536, 538, 540, 541, 542, 543, 550, 554, 556, 557, 559, 562, 564, 569, 574, 575, 576, 578, 580, 584, 592, 594, 595, 597, 598, 599, 606, 608, 611, 614, 615, 616, 618, 621, 623, 628, 633, 634, 635, 637, 639, 640, 641, 642, 643, 644, 650, 652, 653, 654, 658, 665, 670, 675, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 701, 703, 704, 705, 708, 712, 719, 722, 725, 730, 731, 732, 736, 743, 744, 747, 749, 751, 755, 757, 758, 759, 760, 761, 762, 763, 765, 767, 768, 780, 802, 813, 824, 846, 857, 859, 870, 872, 873, 874, 878, 879, 880, 881, 884, 885, 886, 887, 888, 890, 893, 901, 902, 903, 904, 905, 906, 907, 910, 913, 915, 916, 918, 919, 920, 921, 922, 923, 926, 928, 929, 930, 931, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 952, 953, 954, 956, 957, 973, 974, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 991, 992, 994, 995, 996, 997, 998, 1000, 1005, 1007, 1008, 1011, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1029, 1031, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1047, 1050, 1068, 1070, 1071, 1105, 1107, 1110, 1112], "Then": [1, 3, 689, 701, 768, 858], "There": [1, 92, 117, 130, 221, 227, 230, 233, 406, 476, 527, 581, 732, 879, 887, 888, 906, 931, 1036, 1039, 1105, 1110, 1112], "These": [0, 1, 83, 89, 90, 106, 116, 148, 149, 227, 230, 234, 235, 236, 327, 417, 419, 485, 487, 536, 538, 592, 594, 639, 640, 683, 764, 766, 859, 880, 886, 893, 931], "To": [1, 72, 116, 148, 149, 225, 226, 227, 230, 233, 234, 237, 277, 363, 382, 504, 557, 689, 694, 732, 755, 759, 761, 763, 767, 884, 978, 1036, 1105, 1112], "Will": [88, 268, 271, 275, 277, 295, 342, 360, 379, 667, 680, 720, 729, 745, 756, 859, 889], "With": [220, 686, 698], "_": [107, 222, 225, 226, 230, 235, 320, 387, 458, 509, 562, 621, 707, 761, 938], "_1": 230, "__": 227, "____________1______________2_________": 235, "________________": 235, "____________________": 235, "__copy__": [69, 310], "__deepcopy__": [68, 309], "__eq__": [79, 287, 317, 334, 352, 370, 663, 717, 741], "__init__": [237, 248, 250], "__iter__": 91, "__locat": 227, "__ne__": [281, 328, 346, 364], "__reversed__": 91, "_block_comput": 151, "_ci": 106, "_except": 232, "_interval_tre": 308, "_io": [219, 223], "_is_stale_tre": 308, "_leaf_index": 1000, "_myformat_sniff": 237, "_myformat_to_some_skbio_class": 237, "_not_": 906, "_rebuild_tre": 308, "_setup_debug_trac": 1081, "_some_skbio_class_to_myformat": 237, "_tree": 1042, "aT": 226, "a_1": 230, "aa": [91, 225, 227, 232, 441], "aaa": [235, 422, 489, 541, 597, 642], "aaaaaaaaa": 224, "aaaaaaaaaa": 224, "aaaaaaattttttt": 1112, "aaaaaactctctaaactcactaaggctctctacccctcttcagagaagtcga": 0, "aaaaaccgat": 224, "aaaataaata": 224, "aaacaaacca": 224, "aaaccattgc": [225, 232], "aaacccttgc": [225, 232], "aaacccttgccg": 225, "aaacccttgccggtacgcttaaaccattgccggtacgcttaa": 225, "aaacccttgccgttacgcttaaaccgaggccgggacactcat": 225, "aaaccgaggc": [225, 232], "aaagataggc": 224, "aaatatggat": 224, "aaatcctatg": 224, "aac": 233, "aacaaatgca": 224, "aacaacagga": 224, "aacaccaaacttctccacc": 226, "aacaccaaacttctccaccacgtgagctacaaaag": 226, "aaccttatca": 224, "aacgaaggcg": 224, "aactttgtag": 224, "aagaactttc": 224, "aagaggttac": 224, "aagcctggtg": 224, "aagccttggc": 225, "aagccttggcagtgcagggtgagccgtgg": 225, "aagccttggcagtgcagggtgagccgtggccgggcacggtat": 225, "aagctngggc": [225, 232], "aagctngggcatttcagggtgagcccgggcaatacagggtat": 225, "aagga": [389, 460, 511, 564, 623], "aaggaatcaa": 224, "aaggaatttg": 224, "aagtaa": [399, 574], "aagtatttgg": 224, "aagtcttaga": 224, "aagtcttttt": 224, "aagttgttag": 224, "aagucuuuuu": 224, "aata": 233, "aataaac": 233, "aataagtgca": 224, "aatacagggt": [225, 232], "aatataccggttataa": [408, 478, 529, 583, 636], "aatatggatt": 224, "aatgaa": [399, 421, 433, 574, 596, 608], "aatgtt": [421, 596], "aatt": 906, "aattaaataa": 224, "aattctggat": 224, "aattg": 1112, "aattgccggac": 1112, "aattgg": 857, "aauauggauu": 224, "ab": [226, 453], "ab07acbb1e496801937adfa772424bf7": 1069, "ababacac": 453, "abbrevi": [236, 859], "abc": [222, 387, 453, 458, 509, 562, 621], "abcd": 1043, "abcdef": 1, "abil": 230, "abl": [65, 85, 151, 382, 504, 557, 616, 689, 887, 988], "about": [1, 93, 97, 130, 177, 178, 190, 191, 222, 225, 226, 230, 234, 235, 237, 280, 308, 324, 326, 327, 345, 363, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 684, 725, 731, 751, 758, 858, 870, 872, 881, 887, 888, 906, 936, 941, 956, 1016, 1040, 1045, 1046, 1106, 1107], "abov": [0, 1, 3, 92, 112, 225, 227, 231, 232, 233, 234, 235, 237, 248, 250, 382, 504, 557, 616, 707, 759, 761, 763, 767, 1020, 1022, 1107], "absenc": [111, 888, 938], "absent": [435, 501, 554, 611, 652, 879], "absolut": [686, 694, 761, 946, 1068], "abstract": [327, 453], "abund": [1, 106, 107, 108, 116, 118, 121, 123, 130, 134, 144, 146, 148, 149, 150, 151, 154, 219, 689, 694, 858, 873, 874, 880, 881, 888, 940, 946], "abx": 886, "ac": [66, 67, 68, 69, 70, 75, 77, 80, 83, 85, 88, 92, 94, 95, 98, 101, 224, 226, 227, 235, 298, 410, 480, 531, 585, 1107], "aca": [423, 424, 490, 491, 542, 543, 598, 599, 643, 644], "acaatcaaat": 224, "acac": [414, 423, 482, 490, 533, 542, 589, 598, 643], "acacatttatta": [424, 491, 543, 599, 644], "acacgacgtt": [415, 420, 423, 483, 488, 490, 534, 540, 542, 590, 595, 598, 641, 643], "acad": [100, 103], "academ": 109, "academi": 666, "acagaattga": 224, "acaggttggc": [225, 232], "acata": 226, "acatggcaat": 224, "acatgggata": 224, "acc": [0, 221, 1107], "accaatattt": 224, "accaatttga": 224, "acccc": 0, "acceler": 889, "accept": [1, 65, 94, 151, 432, 438, 439, 499, 551, 607, 613, 614, 651, 666, 683, 689, 761, 765, 767, 884, 887, 888, 993, 1024, 1032, 1035, 1093], "acces": 220, "access": [20, 89, 90, 218, 224, 225, 227, 236, 363, 417, 419, 442, 448, 485, 487, 536, 538, 592, 594, 639, 640, 707, 1043, 1050], "accgaat": 382, "accgaau": 557, "accgggta": 1107, "accggttggc": 225, "accggttggccgttcagggtacaggttggccgttcagggtaa": 225, "accgttcg": 235, "accgttgta": [222, 232], "accguuaguc": 1107, "accident": 1045, "accommod": 298, "accompani": [225, 708, 1046], "accomplish": [1, 686, 1105], "accord": [112, 116, 382, 504, 557, 878, 882, 944, 945, 1041], "accordingli": [1037, 1039], "account": [112, 166, 436, 502, 555, 612, 802, 873, 881, 888, 1110], "accumul": [126, 129, 973], "accumulate_to_ancestor": 989, "accur": [112, 118, 124, 125, 1041, 1044], "accuraci": [763, 879], "acdefghikl": [166, 179], "acdfnasanftacgnpnrtesl": [422, 489, 541, 597, 642], "acg": [66, 67, 68, 69, 70, 75, 77, 80, 88, 91, 92, 94, 95, 233, 235, 420, 423, 488, 490, 540, 542, 595, 598, 641, 643], "acga": [82, 85, 387, 396, 458, 467, 509, 518, 562, 571, 621, 630], "acgaactatt": 224, "acggggaggcggag": [407, 477, 528, 582], "acgggu": 1107, "acgt": [65, 82, 85, 86, 89, 90, 96, 383, 387, 396, 400, 411, 412, 417, 419, 421, 425, 454, 458, 467, 470, 485, 487, 492, 505, 509, 518, 521, 536, 538, 544, 558, 562, 571, 575, 586, 587, 592, 594, 596, 600, 616, 617, 621, 630, 633, 639, 640, 645, 654, 672], "acgta": 233, "acgtac": 233, "acgtacgt": [411, 586], "acgtgagctacaaaag": 226, "acgtgccta": 0, "acgtgcctaggtacgcaag": 0, "acgtggaa": [400, 470, 521, 575, 633], "acgtn": [435, 501, 554, 611, 652], "acgtu": 105, "achiev": [134, 1020, 1021, 1037, 1107], "acid": [98, 100, 103, 224, 225, 226, 229, 232, 236, 382, 435, 441, 451, 453, 501, 504, 554, 557, 611, 616, 652, 654, 666], "acquir": 887, "across": [16, 48, 88, 134, 225, 226, 232, 308, 377, 689, 694, 761, 887, 907, 1022, 1042], "act": [0, 92, 248, 249, 250], "actaaggctc": 0, "actaaggctcctaacccccttttctcaga": 0, "actaaggctctct": 0, "actaaggctctctacccctctcagaga": 0, "actacattcg": 224, "actatacgga": 224, "actcat": 225, "action": 327, "activ": 1104, "acttagtt": [411, 586], "actual": [135, 141, 234, 237, 268, 761], "acwgn": [402, 404, 430, 472, 474, 497, 523, 525, 549, 577, 579, 605], "ad": [53, 98, 99, 100, 101, 102, 103, 225, 235, 319, 616, 689, 694, 874, 877, 906, 931, 984, 1001, 1020, 1021, 1022, 1036, 1037, 1039, 1070, 1110], "adapt": 1042, "adata": 948, "add": [1, 99, 102, 234, 235, 237, 261, 298, 308, 320, 322, 387, 458, 509, 562, 616, 621, 691, 698, 699, 701, 702, 703, 901, 902, 906, 926, 947, 975, 988, 990], "add_format": [248, 250], "addit": [1, 104, 105, 116, 147, 148, 149, 153, 224, 225, 226, 227, 228, 232, 233, 234, 295, 342, 360, 363, 379, 382, 504, 557, 654, 686, 687, 688, 689, 707, 732, 958, 979, 991, 992, 1042, 1070, 1105], "addition": [1, 219, 230, 277, 308, 945, 1036, 1107, 1110], "additon": 225, "address": [689, 1105], "adenin": [382, 557], "adequ": 887, "adher": 234, "adiv_faith_pd": 1, "adiv_sob": 1, "adjac": [422, 489, 541, 597, 642, 915], "adjust": 134, "adoni": 762, "adopt": [134, 435, 501, 554, 611, 652], "advanc": 1, "advantag": [134, 732, 1070], "advis": [148, 149, 154], "ae000111": 221, "ae000171": 221, "ae000174": 221, "ae000394": 221, "ae000425": 221, "af031394": 221, "af035635": 235, "af178031": 221, "af178032": 221, "af178033": 221, "affect": [225, 230, 441, 442, 448, 616, 759, 763, 1036], "aforement": 236, "after": [53, 82, 85, 98, 99, 100, 225, 226, 234, 235, 236, 237, 311, 322, 377, 694, 700, 701, 760, 761, 764, 767, 873, 888, 1013, 1015, 1033], "ag": [65, 82, 85, 88, 707, 886, 887], "agaagacc": [409, 479, 530, 584, 637], "agaagctatg": 224, "agaagctctt": 224, "agaagcuaug": 224, "agacatcacg": 224, "agagcatgcg": 224, "agaggttcta": 227, "agagguucua": 227, "agagttgaag": 232, "agagttgaaggtatct": [222, 232], "again": [1, 225, 226, 363, 704, 937, 1043], "against": [70, 79, 98, 101, 226, 299, 305, 311, 317, 387, 396, 442, 448, 458, 467, 509, 518, 562, 571, 621, 630, 689, 767, 904, 905, 981], "agatataaag": 224, "agatcttttg": 224, "agatgagtat": 224, "agctttctgc": 224, "agg": 1107, "aggaccttat": 224, "aggctc": 0, "aggctcccttctacccctctcagaga": 0, "agggaaagtt": 224, "agggctggct": 224, "agggga": 1107, "agggta": 684, "aggreg": 1112, "aggtacccta": 224, "aggtgcagta": 224, "agre": [269, 273], "agtactctaa": 224, "agtgcagggt": [225, 232], "aguauucugccacuguaagaa": 451, "aguc": [405, 426, 428, 475, 493, 495, 526, 545, 547, 580, 601, 603, 635, 646, 648], "ahead": 1112, "aiacaqkm": 235, "aim": 858, "ainsworth": 760, "aitchison": [686, 687, 688, 692, 693, 695, 696, 704], "aitchson": 697, "al": [689, 694, 767, 890, 957], "ala": 504, "alanin": [84, 504], "aldex2": 694, "alexandro": 978, "algorithm": [98, 101, 227, 759, 760, 761, 763, 768, 769, 780, 791, 802, 813, 824, 835, 846, 873, 874, 881, 981, 1041, 1043, 1044, 1045], "alia": [20, 114, 116, 131, 132, 134, 140, 148, 149, 228, 676, 689, 699, 726, 752, 1005, 1007], "alic": 616, "alig": 33, "align": [220, 221, 225, 226, 298, 308, 616, 654, 903, 904, 905, 1104, 1105, 1107], "aligned_query_sequ": 0, "aligned_target_sequ": 0, "alignmentstructur": 54, "alignpath": [43, 46, 47, 48, 51, 52], "all": [1, 53, 65, 66, 83, 84, 89, 90, 92, 98, 99, 100, 105, 107, 116, 117, 118, 130, 134, 135, 141, 144, 146, 148, 149, 150, 151, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 262, 272, 291, 298, 308, 311, 320, 322, 323, 338, 356, 375, 377, 382, 400, 403, 406, 409, 417, 419, 422, 432, 436, 451, 470, 473, 476, 479, 485, 487, 489, 499, 502, 504, 521, 524, 527, 530, 536, 538, 541, 551, 555, 557, 575, 578, 581, 584, 592, 594, 597, 607, 612, 616, 633, 637, 639, 640, 642, 651, 654, 665, 666, 670, 672, 677, 681, 689, 691, 694, 698, 699, 701, 702, 703, 704, 707, 719, 722, 727, 730, 743, 747, 753, 755, 757, 759, 760, 761, 762, 763, 764, 791, 802, 846, 857, 858, 869, 871, 878, 879, 887, 888, 889, 906, 907, 910, 914, 947, 955, 958, 974, 977, 978, 979, 984, 988, 991, 992, 993, 1005, 1007, 1008, 1011, 1018, 1024, 1025, 1027, 1029, 1036, 1037, 1039, 1042, 1070, 1071, 1110], "all_char": 230, "allow": [220, 225, 226, 230, 232, 233, 234, 237, 248, 250, 277, 308, 382, 400, 409, 470, 479, 504, 521, 530, 557, 575, 584, 633, 637, 658, 665, 686, 712, 719, 736, 743, 759, 760, 762, 763, 764, 768, 879, 890, 906, 957, 988, 1032, 1041, 1071, 1112], "allow_edge_estim": [1041, 1044], "allow_empti": 1032, "allow_overlap": [665, 719, 743], "allvltkt": 235, "almost": 1047, "alon": [230, 760], "along": [229, 869, 878, 879, 923, 944, 955], "alpha": [146, 152, 689, 884, 885, 889], "alpha_divers": [1, 106, 116, 134, 150, 152], "alpha_pwr": [884, 887, 888], "alphabet": [0, 95, 105, 152, 153, 220, 225, 382, 435, 441, 453, 501, 504, 554, 557, 611, 616, 652, 654, 666, 669, 672, 684, 1107], "alphanumer": 234, "alr": 688, "alreadi": [230, 235, 237, 248, 249, 250, 616, 708, 761, 1020, 1022, 1036], "also": [0, 1, 83, 84, 112, 116, 139, 147, 148, 149, 150, 179, 203, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 308, 363, 412, 422, 432, 435, 451, 489, 499, 501, 541, 551, 554, 587, 597, 607, 611, 616, 642, 651, 652, 654, 689, 704, 705, 707, 759, 760, 761, 763, 767, 858, 874, 881, 884, 887, 888, 911, 916, 928, 1037, 1044, 1047, 1093, 1105, 1107, 1112], "alter": 1046, "altern": [94, 114, 139, 236, 237, 434, 451, 500, 553, 610, 670, 686, 700, 706, 722, 747, 761, 763, 764, 767, 879, 884, 996, 1024], "although": [134, 767, 887, 907, 978], "altschul": [220, 221], "alwai": [1, 53, 224, 227, 230, 232, 234, 249, 277, 295, 298, 319, 342, 360, 363, 377, 379, 451, 931, 988, 1001, 1020, 1021, 1022, 1050, 1112], "amar": 227, "ambigu": [270, 274], "amen": 687, "american": [107, 1021], "amino": [98, 100, 103, 224, 225, 229, 382, 435, 441, 451, 501, 504, 554, 611, 652, 654, 666], "amino_acid": [441, 442, 448], "among": [1, 112, 134, 215, 227, 681, 730, 757, 769, 874, 881, 1108], "amount": [764, 958, 1112], "amplicon": [1, 903], "amsterdam": [858, 873, 874, 881], "an": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 46, 47, 48, 49, 51, 52, 53, 65, 67, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 104, 114, 116, 117, 119, 127, 130, 131, 132, 136, 137, 140, 145, 146, 148, 149, 150, 154, 178, 191, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 248, 249, 250, 263, 265, 266, 267, 269, 271, 273, 275, 277, 278, 292, 293, 298, 308, 319, 320, 322, 323, 325, 326, 339, 340, 357, 358, 363, 377, 381, 389, 400, 407, 416, 417, 419, 426, 428, 432, 435, 440, 441, 451, 453, 460, 470, 477, 484, 485, 487, 493, 495, 499, 501, 503, 511, 521, 528, 535, 536, 538, 545, 547, 551, 554, 556, 557, 564, 575, 582, 591, 592, 594, 601, 603, 607, 611, 615, 616, 623, 633, 638, 639, 640, 646, 648, 651, 652, 653, 654, 658, 665, 668, 670, 672, 676, 681, 682, 689, 692, 693, 695, 696, 699, 701, 704, 705, 707, 712, 719, 721, 722, 726, 730, 731, 736, 743, 744, 746, 747, 752, 757, 758, 759, 761, 762, 763, 767, 779, 801, 812, 824, 845, 856, 857, 858, 868, 872, 878, 879, 884, 886, 887, 888, 889, 890, 893, 901, 902, 903, 909, 910, 913, 914, 915, 916, 921, 923, 924, 926, 929, 930, 931, 932, 934, 936, 937, 947, 950, 953, 954, 955, 956, 957, 973, 976, 978, 980, 984, 986, 987, 991, 994, 995, 1005, 1007, 1010, 1020, 1021, 1022, 1024, 1029, 1031, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1054, 1061, 1067, 1068, 1069, 1071, 1093, 1105, 1107, 1110, 1112], "analog": 134, "analogu": 763, "analys": [116, 148, 149, 759, 1108], "analysi": [1, 116, 130, 148, 149, 225, 232, 686, 687, 689, 694, 704, 759, 762, 763, 768, 769, 790, 791, 823, 834, 835, 846, 869, 873, 874, 879, 880, 881, 884, 887, 888], "analyt": 117, "analyz": [1, 686, 874, 887], "ancacwwgacgtt": [413, 414, 418, 481, 482, 486, 532, 533, 537, 588, 589, 593], "ancestor": [116, 134, 400, 470, 521, 575, 633, 973, 1005, 1007, 1022], "ancestr": 116, "ancom_df": 689, "anderson": [762, 763], "ani": [1, 19, 52, 53, 83, 84, 92, 94, 104, 105, 108, 143, 144, 225, 227, 229, 230, 234, 235, 248, 249, 250, 270, 274, 277, 290, 295, 298, 308, 322, 323, 337, 342, 355, 360, 363, 373, 376, 379, 382, 504, 557, 616, 654, 684, 689, 691, 694, 761, 764, 768, 802, 824, 873, 878, 884, 886, 887, 911, 916, 940, 950, 952, 975, 978, 979, 980, 990, 998, 1029, 1031, 1042, 1070, 1071, 1081, 1093, 1110, 1112], "anim": 117, "ann": [115, 137], "anndata": 948, "annot": [224, 227, 228, 234, 308], "announc": 234, "anosim": [1, 762, 763], "anoth": [1, 70, 79, 82, 92, 116, 148, 149, 227, 229, 230, 281, 287, 299, 305, 308, 311, 317, 322, 325, 328, 334, 346, 352, 364, 370, 387, 396, 405, 427, 429, 442, 448, 458, 467, 475, 494, 496, 509, 518, 526, 546, 548, 562, 571, 580, 602, 604, 616, 621, 630, 635, 647, 649, 654, 656, 710, 734, 767, 903], "anova": [689, 762, 779, 780, 801, 812, 845, 856], "answer": 1069, "anti": [1, 759], "antibiot": [701, 886], "anticip": 1112, "anyon": 234, "anyth": [1, 225, 226, 233, 237, 616, 950, 1070, 1081, 1093, 1112], "anytim": 234, "anywher": [229, 230, 234, 689], "apart": 1021, "api": [225, 363, 683], "app": 233, "appear": [1, 107, 220, 232, 234, 235, 668, 721, 746, 760, 873, 874, 879, 884, 893, 1036], "append": [0, 85, 232, 237, 616, 990, 1001], "appl": [148, 149], "appli": [0, 1, 53, 65, 84, 89, 90, 146, 149, 150, 151, 154, 224, 225, 230, 234, 236, 308, 327, 382, 417, 419, 485, 487, 504, 536, 538, 557, 592, 594, 616, 639, 640, 654, 670, 686, 722, 747, 749, 761, 764, 768, 873, 887, 910, 931, 937, 940, 946, 953, 984, 1043, 1071, 1112], "applic": [53, 84, 98, 104, 363, 858, 983, 1112], "approach": [694, 761, 887, 984, 987], "appropri": [1, 218, 229, 277, 400, 470, 521, 575, 633, 689, 1105, 1110], "approx": 884, "approxim": [881, 884], "aqfvdhwkel": 223, "aquat": 874, "ar": [0, 1, 3, 53, 65, 66, 70, 75, 79, 80, 83, 84, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 116, 117, 123, 124, 125, 134, 146, 148, 149, 150, 151, 153, 154, 177, 178, 190, 191, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 248, 249, 250, 262, 269, 272, 273, 277, 281, 287, 290, 291, 298, 299, 305, 311, 317, 320, 322, 324, 325, 326, 327, 328, 334, 337, 338, 346, 352, 355, 356, 363, 364, 370, 372, 373, 375, 376, 377, 378, 381, 382, 387, 389, 396, 399, 400, 406, 409, 413, 414, 415, 418, 426, 427, 428, 429, 431, 432, 435, 437, 438, 439, 440, 441, 442, 448, 450, 451, 452, 453, 458, 460, 467, 470, 476, 479, 481, 482, 483, 486, 493, 494, 495, 496, 498, 499, 501, 503, 504, 509, 511, 518, 521, 527, 530, 532, 533, 534, 537, 539, 545, 546, 547, 548, 550, 551, 554, 556, 557, 562, 564, 571, 574, 575, 581, 584, 588, 589, 590, 593, 601, 602, 603, 604, 606, 607, 609, 611, 613, 614, 615, 616, 621, 623, 630, 633, 637, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 663, 666, 669, 670, 675, 676, 681, 682, 684, 685, 686, 687, 689, 691, 694, 695, 696, 698, 699, 701, 702, 703, 704, 707, 708, 710, 712, 717, 722, 725, 726, 730, 731, 732, 734, 736, 741, 747, 749, 751, 752, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 780, 802, 846, 857, 858, 859, 868, 869, 870, 872, 873, 874, 877, 878, 879, 881, 882, 884, 886, 887, 888, 890, 893, 906, 907, 910, 912, 916, 922, 931, 933, 941, 943, 944, 945, 946, 948, 949, 950, 955, 956, 957, 958, 978, 981, 984, 986, 996, 1001, 1008, 1010, 1011, 1015, 1016, 1020, 1021, 1022, 1024, 1025, 1029, 1031, 1032, 1033, 1036, 1037, 1039, 1040, 1042, 1044, 1045, 1047, 1048, 1050, 1067, 1070, 1071, 1082, 1093, 1105, 1107, 1110, 1112], "arang": [922, 927], "arbitrari": [65, 83, 86, 229, 234, 235, 382, 504, 557, 616, 857, 916, 950, 1070, 1107], "arbitrarili": [1042, 1112], "archaea": [996, 997, 1032], "archiv": [236, 1069], "area": [1, 118], "arg": [237, 262, 272, 438, 439, 504, 613, 614, 893], "arginin": 504, "argument": [53, 65, 93, 94, 97, 104, 177, 178, 190, 191, 229, 248, 249, 250, 262, 269, 270, 271, 272, 273, 274, 275, 324, 326, 378, 381, 425, 431, 438, 439, 440, 492, 498, 503, 544, 550, 556, 600, 606, 613, 614, 615, 645, 650, 653, 654, 670, 675, 682, 687, 722, 725, 731, 747, 751, 758, 765, 870, 872, 893, 941, 956, 1016, 1040, 1070, 1093], "argumentoverridewarn": [269, 273], "aris": [1031, 1042], "around": [124, 125, 151, 225, 232, 235, 654, 690, 761, 885, 1110], "arrai": [1, 3, 13, 14, 15, 17, 18, 19, 44, 46, 47, 49, 51, 52, 53, 84, 88, 116, 134, 148, 149, 179, 203, 216, 225, 231, 382, 399, 402, 404, 410, 427, 429, 430, 433, 435, 472, 474, 480, 494, 496, 497, 501, 504, 523, 525, 531, 546, 548, 549, 552, 554, 557, 574, 577, 579, 585, 602, 604, 605, 608, 611, 616, 647, 649, 652, 654, 656, 664, 669, 672, 676, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 707, 710, 718, 726, 734, 742, 744, 752, 767, 768, 802, 824, 846, 858, 878, 882, 884, 885, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 923, 926, 930, 934, 936, 940, 942, 946, 947, 950, 953, 1000, 1031, 1042, 1107], "arrang": 858, "array_lik": [1, 3, 13, 14, 15, 34, 44, 45, 46, 47, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 155, 166, 179, 192, 203, 389, 407, 408, 422, 432, 460, 477, 478, 489, 499, 511, 528, 529, 541, 551, 564, 582, 583, 597, 607, 623, 636, 642, 651, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 759, 761, 762, 763, 764, 767, 875, 878, 882, 885, 888, 889], "articl": [53, 104, 222], "artifact": [91, 98, 99, 100], "artifici": [227, 858], "asarrai": [708, 913, 914, 920, 921, 923, 924, 926, 931, 932, 937, 938, 939, 942, 944, 945, 947, 952, 953, 955], "ascend": [95, 325], "ascii": [226, 233, 234, 237, 435, 501, 554, 611, 652, 976, 1110], "ascii_art": [230, 905, 979, 996, 997, 1001, 1020, 1021, 1022, 1036, 1041, 1043, 1044, 1110], "ask": 249, "asn": 504, "asp": 504, "asparagin": 504, "aspart": 504, "aspect": 1071, "ass": 120, "assai": 887, "assembl": 224, "assert": 1048, "assert_frame_equ": 1047, "assertionerror": [1047, 1048], "assess": [134, 144, 759, 761, 762, 763, 767], "assign": [84, 94, 105, 146, 150, 232, 234, 299, 432, 499, 551, 607, 616, 651, 672, 689, 694, 759, 762, 763, 857, 888, 977, 978, 979, 1041, 1044], "assign_support": 1035, "assist": [234, 1112], "associ": [1, 72, 107, 134, 226, 234, 235, 236, 263, 264, 265, 291, 293, 298, 319, 321, 323, 338, 340, 356, 358, 363, 382, 504, 557, 616, 760, 767, 857, 878, 882, 885, 886, 887, 906, 909, 916, 931, 948, 950, 988, 994, 1029, 1105], "asst": [411, 412, 586, 587], "assum": [1, 107, 116, 118, 126, 129, 148, 149, 222, 225, 226, 229, 231, 248, 250, 363, 389, 437, 438, 439, 460, 511, 564, 623, 658, 694, 707, 708, 712, 736, 747, 767, 768, 874, 878, 884, 885, 887, 888, 946, 1037, 1039], "assumpt": [130, 230, 684, 689, 694, 991, 992, 1046], "asv": 1, "asx": 504, "asymmetr": [654, 658, 712, 736], "asymptot": 130, "ataaatcacg": 224, "ataacgttgg": 224, "ataagggatg": 224, "atacaaccat": 224, "atactcccaa": 224, "atagacc": 1112, "atagcatacc": 224, "atagttacac": 224, "atatatacat": 226, "atatatat": 857, "atatatgttt": 224, "atatgaacaaa": 1112, "atattacaac": 224, "atcaaaaggg": 224, "atcaccgcta": 224, "atcactgaaa": 224, "atcataacta": 224, "atccatatat": 224, "atcggcgat": 685, "atgagccatg": 224, "atgc": 910, "atgcactagg": 224, "atgcatgcat": 228, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 228, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 228, "atgccactttaa": [438, 439], "atgccccttc": 224, "atggca": 857, "atggcc": 857, "atggcg": 857, "atggct": 857, "atggtatgaa": 224, "atgtgtatttga": 1107, "atgttgtagt": 224, "atl": [439, 452, 614], "atla": 666, "atom": [916, 950], "att": [403, 473, 524, 578], "attach": [248, 250, 978, 1036], "attagaaaga": 224, "attcgttgtg": 224, "attctggaac": 224, "attempt": [93, 177, 190, 225, 234, 277, 324, 378, 431, 498, 550, 606, 650, 675, 725, 751, 870, 941, 978, 991, 1016], "attr": [228, 916, 950, 1002, 1031], "attr_1": 1031, "attr_n": 1031, "attribut": [3, 20, 34, 65, 94, 155, 166, 179, 192, 203, 218, 223, 224, 225, 227, 228, 231, 233, 234, 235, 238, 280, 298, 307, 308, 323, 327, 345, 363, 382, 387, 435, 441, 453, 458, 501, 504, 509, 554, 557, 562, 611, 616, 621, 652, 654, 665, 681, 708, 719, 730, 732, 743, 757, 780, 813, 824, 859, 868, 880, 887, 890, 916, 950, 957, 958, 973, 977, 980, 984, 1001, 1002, 1020, 1021, 1022, 1031, 1037, 1039, 1042, 1048, 1050, 1051, 1054, 1061, 1082, 1107], "attribute_nam": 1031, "attributeerror": [616, 1050], "atttcagggt": [225, 232], "aucauaacua": 224, "aug": 225, "augccacuuuaa": [441, 452, 613, 614], "auguguauuu": 1107, "austral": 762, "australian": 759, "auth": 237, "author": [134, 227, 235, 616, 689], "auto": [277, 435, 501, 554, 611, 652], "automat": [53, 82, 85, 92, 93, 97, 177, 178, 190, 191, 229, 233, 234, 262, 272, 298, 324, 326, 378, 381, 425, 431, 440, 492, 498, 503, 544, 550, 556, 600, 606, 615, 645, 650, 653, 675, 682, 707, 725, 731, 751, 758, 859, 870, 872, 941, 956, 983, 1001, 1016, 1020, 1021, 1022, 1040, 1105], "auxilari": 237, "av": 768, "avail": [1, 150, 220, 225, 226, 227, 231, 234, 236, 266, 267, 435, 441, 450, 501, 554, 611, 652, 666, 732, 759, 760, 761, 762, 763, 802, 884, 888, 916, 950, 1036, 1045, 1105, 1112], "averag": [690, 694, 768, 769, 878, 882, 940, 1012, 1042], "averagegradientanova": 768, "avg": 768, "avoid": [53, 223, 234, 235, 237, 322, 858, 882, 1036], "aw": [0, 134], "awar": [84, 134, 234, 616], "awesom": 1112, "awgh": 0, "ax": [769, 791, 802, 835, 858, 869, 873, 874, 893, 903, 910, 931], "axes3d": 869, "axi": [72, 88, 118, 155, 229, 654, 802, 846, 859, 869, 878, 885, 888, 893, 901, 902, 903, 904, 905, 906, 907, 909, 910, 913, 914, 916, 921, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 939, 940, 942, 943, 944, 945, 946, 947, 950, 953, 955, 1048], "axis_label": [1, 869], "b": [1, 53, 86, 92, 94, 95, 96, 116, 117, 118, 130, 134, 138, 154, 226, 229, 230, 234, 278, 382, 504, 557, 616, 658, 665, 666, 669, 674, 677, 678, 681, 705, 707, 712, 719, 724, 727, 728, 730, 736, 743, 750, 753, 754, 755, 757, 760, 761, 857, 869, 886, 887, 904, 906, 907, 910, 914, 939, 950, 972, 973, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 991, 992, 993, 994, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1069, 1105, 1107, 1110], "b1": [689, 694], "b2": [689, 694], "b3": [689, 694], "b4": [689, 694], "b5": [689, 694], "b6": [689, 694], "b7": [689, 694], "b_b": 230, "b_i": [144, 704], "ba": 235, "babp": 53, "bacilli": [997, 1032], "bacillu": 235, "back": [134, 223, 225, 228, 271, 275, 296, 297, 343, 344, 361, 362, 380, 974, 1110], "backward": [116, 134, 148, 149, 234, 689], "bacteri": 689, "bacteria": [888, 933, 996, 997, 1032], "bacteroidet": [933, 996, 997, 1032], "baeza": 869, "baker": 116, "balanc": [134, 704], "band": 53, "bar": [234, 907, 932, 942, 952, 953, 1069, 1112], "barcod": [904, 906, 910], "barker": 134, "barlow": 704, "basal": 1036, "base": [1, 3, 13, 34, 45, 92, 99, 102, 106, 107, 110, 111, 115, 116, 123, 129, 130, 134, 135, 136, 138, 141, 148, 149, 219, 220, 225, 227, 231, 233, 234, 298, 319, 327, 363, 374, 382, 422, 453, 489, 504, 541, 557, 597, 616, 642, 658, 708, 712, 736, 759, 761, 762, 763, 767, 802, 873, 874, 881, 884, 886, 887, 888, 890, 906, 914, 946, 957, 981, 993, 994, 1041, 1042, 1044, 1069, 1107, 1108, 1110, 1112], "base1": 441, "base2": 441, "base3": 441, "basi": [695, 696, 704, 705], "basic": [98, 118, 220, 221, 767, 859, 869, 916, 950], "baz": [907, 1069], "bb": 886, "bbb": 226, "bbf": 226, "bbx": 226, "bc_dm": 1, "bct": 236, "becam": 230, "becaus": [1, 84, 91, 92, 116, 148, 149, 220, 225, 226, 227, 230, 232, 233, 234, 237, 363, 387, 422, 451, 458, 489, 509, 541, 562, 597, 616, 621, 642, 689, 761, 874, 879, 881, 883, 886, 983, 986, 1032], "becom": [1, 3, 117, 225, 226, 230, 234, 308, 906, 933, 1020, 1037, 1039], "been": [0, 98, 99, 100, 105, 106, 154, 225, 226, 227, 232, 268, 270, 274, 277, 363, 376, 418, 422, 430, 486, 489, 497, 537, 541, 549, 593, 597, 605, 616, 642, 689, 761, 767, 889, 916, 950, 955, 1015], "befor": [1, 84, 225, 229, 234, 235, 411, 412, 451, 586, 587, 701, 760, 761, 888, 906, 1013, 1020, 1021, 1022, 1033, 1043, 1110, 1112], "begin": [53, 224, 225, 226, 227, 231, 234, 235, 249, 298, 363, 451, 888], "behav": [382, 504, 557, 761], "behavior": [89, 90, 92, 98, 99, 100, 225, 226, 227, 234, 277, 417, 419, 435, 451, 485, 487, 501, 536, 538, 554, 592, 594, 611, 616, 639, 640, 652, 759, 761, 763, 982, 987, 1020, 1021, 1022, 1037, 1112], "being": [1, 53, 82, 84, 85, 98, 99, 100, 116, 146, 150, 225, 226, 232, 236, 363, 377, 704, 763, 767, 857, 887, 906, 950, 980, 1021, 1105, 1107], "bell": 138, "belong": [53, 108, 112, 139, 228, 689, 694, 759, 762, 763, 906], "below": [222, 225, 226, 230, 232, 234, 235, 236, 363, 441, 453, 616, 760, 761, 869, 887, 916, 946, 950, 958, 984], "benefit": 694, "benjamini": [689, 694], "berger": [108, 121], "berkelei": 136, "besid": 1044, "best": [53, 98, 99, 100, 101, 102, 103, 124, 125, 686, 760, 873, 1046], "beta": [150, 151, 153, 224], "beta_divers": [1, 146, 148, 149, 151, 153, 154], "betadisp": 763, "bethesda": 225, "better": [225, 873, 874, 1105], "between": [1, 3, 53, 99, 102, 117, 118, 121, 124, 135, 136, 144, 145, 148, 149, 150, 154, 218, 225, 226, 227, 229, 232, 235, 236, 311, 325, 400, 405, 426, 427, 428, 429, 470, 475, 493, 494, 495, 496, 521, 526, 545, 546, 547, 548, 575, 580, 601, 602, 603, 604, 633, 635, 646, 647, 648, 649, 654, 658, 670, 683, 684, 685, 689, 694, 704, 707, 708, 712, 722, 732, 736, 747, 759, 760, 761, 762, 763, 764, 766, 767, 802, 873, 874, 875, 881, 884, 887, 888, 893, 931, 958, 973, 981, 982, 983, 984, 989, 998, 1001, 1009, 1020, 1022, 1029, 1030, 1041, 1043, 1044, 1107, 1110], "bf00039495": 224, "bh": [689, 694], "bia": [110, 111, 694], "bias": [110, 111, 694], "bias_correct": [110, 111], "bifurc": [230, 705, 995], "bigoplu": 696, "bin": [857, 906, 939], "bin_": 857, "bin_f": [857, 906], "binari": [237, 238, 248, 249, 250, 277, 704, 705, 767, 873, 881, 936, 1033, 1044, 1069], "binary_dm": [675, 682, 725, 731, 751, 758], "binomi": [887, 888], "bio": [0, 1, 89, 90, 93, 97, 98, 101, 104, 105, 116, 148, 149, 150, 151, 152, 153, 154, 177, 178, 190, 191, 219, 220, 221, 222, 224, 225, 226, 230, 231, 232, 233, 235, 236, 324, 326, 378, 381, 417, 419, 431, 438, 439, 440, 441, 451, 452, 485, 487, 498, 503, 536, 538, 550, 556, 592, 594, 606, 613, 614, 615, 639, 640, 650, 653, 675, 682, 683, 725, 731, 751, 758, 760, 858, 870, 872, 941, 956, 1016, 1036, 1040, 1045, 1107, 1111], "biocor": [148, 149, 869], "biodivers": [1, 106, 114, 116, 134], "bioinformat": [116, 134, 226, 232, 234, 978], "biol": [98, 101, 116, 120, 134, 220, 221, 224, 227, 700, 706, 1041, 1044], "biolog": [1, 91, 98, 99, 100, 129, 134, 135, 141, 143, 155, 192, 203, 225, 226, 228, 230, 233, 298, 402, 403, 404, 406, 407, 410, 413, 414, 415, 418, 430, 472, 473, 474, 476, 477, 480, 481, 482, 483, 486, 497, 523, 524, 525, 527, 528, 531, 532, 533, 534, 537, 549, 577, 578, 579, 581, 582, 585, 588, 589, 590, 593, 605, 616, 654, 887, 890, 917, 957, 1043, 1104, 1108, 1109], "biologi": [134, 135, 141, 451, 767, 978, 991, 1042, 1043], "biom": [234, 890, 896, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957], "biom_format": [890, 957], "biom_open": [916, 950], "biometr": [130, 763], "biometrika": [106, 107, 119], "bioperl": [226, 232], "biopython": [3, 226], "biosci": [700, 706], "bioscienc": 981, "biotechnologi": [225, 236], "biotit": 3, "biowulf": 233, "biplot": [231, 873, 881], "biplot_scor": [859, 1048], "bit": [3, 13, 17, 34, 44, 49, 220, 221, 234], "bit_arr": 13, "bitscor": [220, 221], "bitting": 134, "biz": 907, "blackwel": 129, "blank": [225, 226, 230, 231, 232, 234, 280, 295, 327, 342, 345, 360, 363, 376, 379, 674, 724, 750], "blast": [99, 100, 102, 103, 225], "blast6": 221, "blastcgihelp": 225, "blastedbio": 220, "blastn": 221, "blastp": 221, "block": [100, 103, 151, 666, 1069], "block_siz": 1069, "blocksiz": 151, "blogspot": 220, "blosum": [100, 103, 504, 654, 666], "blosum45": 666, "blosum50": 666, "blosum62": [654, 666], "blosum80": 666, "blosum90": 666, "bmi": 888, "bob": 616, "bodi": [1, 869], "body_sit": [1, 869], "boilerpl": 237, "bologna": 118, "boltzmann": 145, "bone": 887, "bonferroni": [689, 694], "boniferroni": [689, 694], "boogaart": 704, "book": [220, 221, 225], "bool": [32, 53, 66, 67, 70, 79, 82, 85, 88, 89, 90, 91, 95, 98, 99, 100, 110, 111, 112, 114, 116, 122, 134, 138, 139, 140, 146, 148, 149, 150, 151, 154, 166, 214, 215, 216, 217, 248, 249, 250, 269, 273, 281, 287, 291, 294, 296, 297, 298, 299, 305, 311, 317, 319, 321, 325, 328, 334, 338, 341, 343, 344, 346, 352, 356, 359, 361, 362, 364, 370, 372, 380, 382, 383, 384, 387, 389, 396, 399, 400, 402, 404, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 442, 448, 454, 455, 458, 460, 467, 470, 472, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 509, 511, 518, 521, 523, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 559, 562, 564, 571, 574, 575, 577, 579, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 610, 611, 612, 616, 617, 618, 621, 623, 630, 633, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 651, 652, 655, 656, 663, 665, 668, 677, 685, 689, 695, 696, 700, 706, 708, 709, 710, 717, 719, 721, 727, 733, 734, 741, 743, 746, 749, 753, 761, 764, 767, 802, 813, 871, 878, 879, 881, 882, 886, 887, 889, 906, 909, 913, 914, 916, 917, 925, 926, 927, 928, 936, 937, 938, 939, 940, 943, 948, 949, 950, 953, 955, 976, 981, 982, 984, 985, 999, 1002, 1003, 1004, 1006, 1009, 1012, 1013, 1014, 1017, 1020, 1021, 1022, 1030, 1032, 1033, 1037, 1041, 1043, 1044, 1048, 1070], "boolean": [66, 149, 225, 228, 233, 382, 389, 402, 404, 407, 410, 422, 425, 427, 429, 430, 432, 460, 472, 474, 477, 480, 489, 492, 494, 496, 497, 499, 504, 511, 523, 525, 528, 531, 541, 544, 546, 548, 549, 551, 552, 557, 564, 577, 579, 582, 585, 597, 600, 602, 604, 605, 607, 616, 623, 642, 645, 647, 649, 651, 747, 914, 946], "bootstrap": 958, "both": [65, 83, 92, 94, 105, 110, 111, 112, 116, 134, 218, 219, 220, 221, 223, 225, 226, 232, 234, 236, 269, 273, 323, 451, 670, 692, 693, 695, 696, 707, 722, 747, 749, 755, 760, 761, 762, 763, 879, 893, 903, 906, 910, 916, 931, 946, 950, 982, 983, 1024, 1033, 1105, 1107], "bound": [123, 124, 227, 228, 237, 298, 299, 307, 308, 311, 319, 320, 322, 323, 616, 689, 694, 885, 888, 983, 1024], "bound_moieti": 227, "bowden": [382, 453, 504, 557, 616], "boxplot": 1, "bp": [224, 227], "braak": 874, "bracket": [144, 230], "brai": 1, "branch": [1, 116, 134, 149, 705, 958, 978, 979, 988, 1001, 1020, 1021, 1022, 1031, 1034, 1036, 1037, 1039, 1041, 1043, 1110], "branch_attr": [1001, 1020, 1021, 1022, 1037, 1039], "braycurti": 1, "break": [382, 504, 557], "bren": 704, "brillouin": 109, "broader": 858, "broadinstitut": 225, "broken": [83, 1042], "brows": 224, "bsd": 1104, "bt": [226, 927], "btop": [220, 221], "buf_siz": 857, "buffer": [237, 277, 857], "buffer_s": 237, "bufferedrandom": 277, "bufferedread": [238, 248, 249, 277], "bufferedwrit": [238, 250, 277], "bui": 1104, "build": [45, 308, 704, 951], "buildilrbas": 704, "built": [3, 20, 34, 53, 65, 155, 166, 179, 192, 203, 238, 251, 280, 298, 308, 327, 345, 363, 382, 441, 453, 504, 557, 616, 654, 708, 732, 769, 780, 791, 802, 813, 824, 835, 846, 859, 890, 958, 1050, 1070, 1082, 1093, 1105], "bulletin": 1042, "busi": 237, "bwpd_": 134, "by_id": 946, "by_nam": [435, 501, 554, 611, 652, 654, 671], "bypass": [116, 146, 148, 149, 150], "byte": [3, 277, 432, 499, 551, 607, 651], "byteio": [219, 223], "bytesio": [219, 223, 277, 278, 1069], "bz2": 277, "bzh91ai": 278, "b\u00e4hler": [700, 706], "c": [1, 17, 20, 53, 65, 83, 91, 92, 94, 95, 104, 107, 116, 117, 118, 119, 120, 134, 135, 138, 141, 145, 148, 149, 154, 224, 225, 226, 230, 232, 234, 235, 236, 250, 382, 392, 397, 403, 409, 411, 412, 463, 468, 473, 479, 504, 514, 519, 524, 530, 557, 567, 572, 578, 584, 586, 587, 616, 626, 631, 637, 654, 665, 669, 672, 674, 678, 681, 686, 688, 693, 700, 701, 702, 703, 705, 706, 707, 719, 724, 728, 730, 743, 750, 754, 755, 757, 760, 761, 869, 880, 886, 887, 904, 906, 907, 972, 973, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 991, 992, 993, 994, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1107, 1110], "c_": 107, "ca": [3, 17, 84, 231, 859, 874, 881], "caa40058": 224, "caaatgtgaa": 224, "caacgtggcc": 224, "caaggaagat": 224, "caagggctgc": 224, "cabcacc": 226, "cac": [415, 423, 483, 490, 534, 542, 590, 598, 643], "cacaattact": 224, "cacaauuacu": 224, "cach": [975, 980, 986, 990, 991, 992, 994, 1002, 1011, 1015], "cache_attr": [986, 1002], "cache_attrnam": 980, "cache_typ": 980, "cag": 3, "caggcc": 1112, "cagttgaagc": 224, "cagtttgatg": 224, "caguugaagc": 224, "caguuugaug": 224, "cajo": 874, "calcul": [3, 53, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 154, 215, 218, 411, 412, 586, 587, 689, 694, 697, 705, 706, 759, 760, 761, 762, 763, 767, 791, 802, 846, 878, 882, 885, 887, 888, 930, 934, 946, 981, 988, 1029], "california": 136, "call": [1, 92, 116, 117, 124, 125, 148, 149, 222, 225, 232, 235, 237, 277, 298, 400, 408, 411, 432, 451, 470, 478, 499, 521, 529, 551, 575, 583, 586, 607, 616, 633, 636, 651, 749, 760, 761, 857, 874, 884, 914, 974, 976, 977, 980, 991, 992, 994, 1008, 1009, 1015, 1025, 1030, 1036, 1038, 1068, 1070, 1071, 1081, 1105, 1112], "callabl": [53, 65, 82, 85, 94, 146, 150, 151, 154, 215, 670, 677, 689, 722, 727, 747, 753, 871], "callback": [1071, 1112], "caller": [93, 97, 177, 178, 190, 191, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 790, 823, 834, 870, 872, 941, 954, 956, 1016, 1040], "calucul": 763, "can": [0, 1, 15, 47, 53, 65, 91, 94, 98, 99, 100, 104, 105, 106, 112, 116, 117, 134, 137, 139, 146, 148, 149, 150, 152, 153, 154, 166, 179, 203, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 277, 298, 307, 308, 323, 363, 400, 405, 407, 422, 432, 470, 475, 477, 489, 499, 521, 526, 528, 541, 551, 575, 580, 582, 597, 607, 616, 633, 635, 642, 651, 654, 658, 666, 683, 686, 689, 694, 704, 707, 708, 712, 732, 736, 759, 760, 761, 763, 764, 765, 768, 858, 869, 873, 878, 879, 880, 881, 884, 886, 887, 888, 893, 903, 907, 916, 928, 931, 940, 950, 953, 958, 979, 981, 989, 1020, 1021, 1022, 1024, 1031, 1037, 1042, 1043, 1045, 1049, 1050, 1070, 1093, 1107, 1110, 1112], "cancer": 761, "candid": [441, 888], "cannot": [15, 47, 53, 65, 82, 85, 225, 226, 229, 230, 234, 269, 270, 273, 274, 277, 363, 400, 453, 470, 521, 575, 633, 689, 759, 760, 761, 762, 763, 857, 869, 886, 888, 991, 994, 1024, 1105], "canon": [382, 434, 500, 504, 553, 557, 610, 654, 874, 881, 890, 957, 1104], "captur": [436, 502, 555, 612], "cardin": 1049, "care": [1, 84, 225, 227, 763], "carlo": 884, "carol": 616, "casava": 233, "casava_ug_15011196b": 233, "case": [1, 84, 98, 99, 100, 108, 136, 145, 151, 219, 223, 225, 230, 232, 234, 236, 238, 363, 377, 382, 412, 425, 435, 492, 501, 544, 554, 557, 587, 600, 611, 645, 652, 666, 689, 694, 708, 761, 767, 873, 878, 880, 888, 978, 1012, 1036, 1042, 1070, 1071, 1105, 1110], "cast": [1, 230, 363, 400, 470, 521, 575, 633, 707, 708, 765, 869, 932], "cat": [424, 491, 543, 599, 644, 886, 887], "catacctca": 3, "catatttgct": 224, "catcgatcgatcgatgcatgcatgcatg": 225, "catcgtc": 225, "categor": [234, 280, 363, 372, 376, 380, 759, 762, 858, 869], "categori": [1, 234, 235, 768, 769, 779, 780, 790, 801, 802, 812, 813, 824, 834, 835, 845, 846, 856, 858, 869, 884, 886, 887, 901, 906, 950, 1106], "categoricalmetadatacolumn": [327, 363, 374], "categoryresult": 813, "catttagga": 233, "catttgaaaa": 224, "cauauuugcu": 224, "caugcaucguacguacgcaugac": 222, "caus": [53, 234, 277, 451], "caution": 154, "cauucguacguacgcaugac": 222, "caveat": [225, 686], "cb": [235, 886], "cc": [235, 432, 441, 499, 551, 607, 651], "cca": [231, 858, 859, 873, 881], "cca1": 858, "cca2": 858, "cca3": 858, "cca4": 858, "cca5": 858, "cca6": 858, "cca7": 858, "cca8": 858, "cca9": 858, "ccaatggtac": 224, "ccaggtcgat": 224, "ccc": [384, 455, 506, 559, 618], "cccataaata": 224, "cccc": [422, 489, 541, 597, 642], "ccccchhhhhhhhhhhhh": 235, "ccchhhhhhhhhhhhhhh": 235, "cccttaggtc": 224, "ccg": 94, "ccggac": 1112, "ccgggcacggtat": 225, "ccgwllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 441, "ccora": 874, "ccyt": 226, "cd": [98, 224, 227, 451], "cde": 236, "ceil": 946, "cell": [234, 887], "cell_lin": 887, "center": [225, 236, 690, 760, 873, 875, 879, 882], "centr": [686, 692, 693, 877], "centroid": 763, "cepa": 978, "certain": [116, 127, 146, 148, 149, 150, 269, 271, 273, 275, 363, 382, 504, 557, 684, 1035], "cg": [83, 432, 499, 551, 607, 616, 651], "cga": [423, 490, 542, 598, 643], "cgac": 222, "cgagc": [389, 460, 511, 564, 623], "cgaggccgggac": 225, "cgatgtc": 225, "cgatgtcgatcgatcgatcgatcag": 225, "cgau": 222, "cgcgaugcaugcau": 222, "cgggacactc": [225, 232], "cgggcacggt": [225, 232], "cgggcasdgca": 233, "cgggcattgca": 233, "cggtacgctt": [225, 232], "cggtcgtaacgcgta": 3, "cggtcgtcac": 3, "cgi": [99, 100, 102, 103, 441, 449, 450], "cgt": [423, 490, 542, 598, 643], "cgtcacttat": 224, "cgtcgt": 17, "cgtcgtgc": 17, "cgttacgctt": [225, 232], "cgttcagggt": [225, 232], "cgttta": 684, "cgugcaugcau": 222, "chain": 227, "challeng": 116, "chanc": [654, 767, 946], "chang": [123, 138, 225, 307, 308, 451, 616, 666, 689, 694, 759, 857, 953, 980, 984, 1015, 1020, 1021, 1037, 1112], "chao": [107, 110, 134], "chao1": 111, "chao1_ci": 110, "chapter": [225, 880], "char": [409, 436, 479, 502, 530, 555, 584, 612, 637], "charact": [3, 13, 15, 17, 19, 34, 44, 47, 52, 53, 70, 83, 84, 88, 92, 105, 166, 179, 192, 203, 220, 221, 222, 225, 226, 229, 230, 231, 232, 233, 235, 236, 237, 363, 382, 387, 389, 392, 394, 396, 397, 398, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 418, 425, 430, 432, 434, 435, 441, 451, 453, 458, 460, 463, 465, 467, 468, 469, 472, 473, 474, 477, 479, 480, 481, 482, 483, 486, 492, 497, 499, 500, 501, 504, 509, 511, 514, 516, 518, 519, 520, 523, 524, 525, 528, 530, 531, 532, 533, 534, 537, 539, 544, 549, 551, 552, 553, 554, 557, 562, 564, 567, 569, 571, 572, 573, 577, 578, 579, 582, 584, 585, 586, 587, 588, 589, 590, 593, 600, 605, 607, 610, 611, 616, 621, 623, 626, 628, 630, 631, 632, 637, 645, 651, 652, 654, 669, 672, 684, 916, 950, 1107], "character": 694, "charg": [225, 232], "charlson": 134, "chase": 114, "check": [53, 226, 249, 269, 273, 299, 308, 311, 322, 655, 656, 695, 696, 707, 708, 709, 710, 732, 733, 734, 768, 873, 874, 887, 913, 925, 1047, 1048, 1068, 1112], "check_length": 1112, "checksum": 1069, "chemic": [654, 888], "chen": [107, 134], "chf": [439, 452, 614], "chi": [873, 874], "chichest": 686, "chicken": [1041, 1044], "child": [230, 308, 400, 470, 521, 575, 633, 704, 958, 975, 979, 1011, 1015, 1034, 1036, 1110], "child1": [975, 990], "child2": [975, 990], "child_index": 1031, "children": [230, 705, 958, 963, 967, 975, 979, 990, 992, 999, 1004, 1011, 1015, 1017, 1020, 1025, 1036], "chimp": [225, 232], "chisquar": 888, "chiu": 134, "choic": [82, 85, 229, 879, 1036], "choos": [116, 234, 874, 884], "chosen": [432, 499, 551, 607, 651, 698, 760, 869, 881, 889], "christoph": 226, "chunk": 232, "ci": [106, 124, 694], "ci_typ": 124, "cigar": [3, 20, 45, 50, 53], "circuit": 1112, "circumst": [118, 504, 887], "citat": 236, "ciufo": 236, "cl": [248, 250, 263, 265, 266, 267, 453, 1054], "clade": [1018, 1022, 1026, 1042, 1110], "cladogenesi": 767, "claim": [270, 274], "clarifi": 116, "clariti": 230, "clark": [759, 760], "class": [3, 20, 34, 53, 65, 89, 90, 105, 107, 110, 155, 166, 179, 192, 203, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 248, 250, 251, 263, 265, 266, 267, 268, 280, 298, 308, 327, 345, 363, 382, 400, 417, 419, 441, 453, 470, 485, 487, 504, 521, 536, 538, 557, 575, 592, 594, 616, 633, 639, 640, 654, 689, 708, 732, 769, 780, 791, 802, 813, 824, 835, 846, 859, 890, 911, 914, 937, 952, 957, 958, 980, 1042, 1050, 1070, 1082, 1093, 1105, 1107], "classic": 236, "classif": [236, 869], "classmethod": [13, 14, 15, 16, 44, 45, 46, 47, 48, 86, 87, 93, 177, 190, 320, 324, 376, 378, 400, 431, 450, 470, 498, 521, 550, 575, 606, 633, 650, 666, 669, 670, 671, 672, 675, 722, 725, 747, 751, 870, 916, 917, 941, 995, 996, 997, 1016], "classproperti": 453, "claus": 375, "clean": [277, 1015], "clear": 233, "clinic": [888, 1106], "clip_head": 166, "clip_tail": 166, "clone": 224, "clone_lib": 224, "close": [93, 97, 106, 117, 177, 178, 190, 191, 225, 226, 230, 232, 235, 277, 278, 324, 326, 363, 378, 381, 431, 440, 451, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 689, 725, 731, 751, 758, 790, 823, 834, 870, 872, 941, 956, 1016, 1040, 1069], "closeabl": 277, "closefd": 237, "closer": [1, 1112], "clostridia": [997, 1032], "closur": [688, 701, 702, 703], "clover": 224, "clr": [686, 693, 694, 705], "clustal": [93, 97, 1105], "clustal_f": 222, "clustalw": 222, "cluster": [1, 761, 763, 995, 1107], "cmap": [1, 674, 724, 750, 869], "cnt": 887, "co": 767, "co2": 887, "cock": 226, "cocryst": 227, "code": [222, 225, 226, 227, 236, 323, 382, 435, 437, 438, 439, 441, 442, 448, 449, 450, 451, 452, 501, 504, 554, 557, 609, 611, 613, 614, 652, 767, 889, 946, 981, 1042, 1045, 1107], "codon": [227, 236, 438, 441, 451, 452, 613, 654], "codon_start": 227, "coeff": 761, "coeffici": [107, 760, 761, 767, 859, 881, 884, 983], "coercion": [400, 470, 521, 575, 633], "cogent": 988, "col": [708, 900, 911, 926, 952], "col1": [92, 234], "col2": [92, 234], "col3": [92, 234], "collabor": 227, "collaps": [234, 979], "collapse_f": 906, "collapsed_id": [906, 916, 950], "collat": 764, "collect": [53, 135, 141, 143, 277, 363, 665, 704, 719, 743, 857], "collinear": [858, 874], "collis": 136, "colon": 230, "color": [1, 124, 125, 674, 724, 750, 869], "colorbar": [674, 724, 750, 869], "colormap": [674, 724, 750, 869], "colormaps_refer": 869, "column": [1, 19, 52, 53, 65, 90, 91, 92, 150, 214, 218, 219, 225, 227, 228, 231, 232, 235, 236, 280, 281, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 327, 328, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 372, 374, 375, 376, 377, 379, 380, 400, 419, 425, 470, 487, 492, 521, 538, 544, 575, 594, 600, 616, 633, 640, 645, 654, 658, 673, 678, 687, 688, 689, 694, 695, 696, 707, 712, 723, 728, 736, 748, 749, 754, 759, 760, 761, 762, 763, 764, 765, 767, 802, 846, 858, 869, 873, 874, 875, 877, 881, 882, 886, 887, 893, 904, 906, 911, 916, 917, 922, 926, 927, 928, 933, 942, 943, 948, 949, 950, 952, 996, 1000, 1047, 1048], "column_missing_schem": [363, 376], "column_typ": [372, 376], "columnwis": 875, "com": [123, 220, 221, 222, 760, 1069], "comb": 1012, "combin": [53, 65, 82, 85, 106, 227, 694, 760, 859, 874, 928], "come": [235, 767, 1020, 1027], "comma": [228, 229, 230], "command": [234, 236, 451], "comment": [224, 225, 227, 228, 229, 235, 236, 363], "comment_char": 230, "commit": 884, "common": [83, 89, 90, 101, 116, 134, 220, 225, 226, 227, 234, 235, 236, 417, 419, 485, 487, 536, 538, 592, 594, 639, 640, 687, 708, 802, 904, 905, 958, 983, 991, 1005, 1007, 1022, 1031, 1032, 1036, 1043, 1107, 1110, 1111], "commonli": [230, 234, 654, 763, 881, 1110], "commun": [106, 107, 112, 116, 121, 130, 134, 138, 144, 148, 149, 694, 707, 759, 760, 762, 763, 858, 869, 874, 881, 888, 1104], "compact": 976, "compani": 887, "compar": [1, 128, 148, 154, 220, 221, 325, 421, 426, 427, 428, 429, 432, 493, 494, 495, 496, 499, 545, 546, 547, 548, 551, 596, 601, 602, 603, 604, 607, 646, 647, 648, 649, 651, 656, 663, 689, 707, 710, 717, 734, 741, 761, 767, 886, 887, 888, 981, 982, 983, 1012, 1047, 1048, 1107, 1110], "compare_rfd": [982, 983], "compare_subset": [981, 983, 1026, 1027, 1110], "compare_tip_dist": [981, 982, 989, 998, 1029, 1110], "comparison": [148, 149, 689, 694, 767, 886, 981, 1047, 1110], "compat": [116, 134, 148, 149, 234, 236, 441, 689], "compil": [408, 436, 478, 502, 529, 555, 583, 612, 636, 889], "complement": [421, 433, 451, 596, 608, 1107], "complement_map": [399, 574], "complet": [104, 106, 112, 124, 125, 226, 227, 230, 884, 1046, 1105], "complex": [230, 1112], "compliant": [382, 504, 557], "complic": [654, 1105], "compon": [686, 688, 698, 699, 700, 701, 702, 703, 835, 859, 873, 879, 1112], "compos": [84, 226, 233, 363], "composit": [112, 116, 134, 277, 874], "compound": 694, "comprehens": 236, "compress": [219, 237, 277, 916, 926, 927, 928, 950], "compresslevel": [237, 277], "comput": [0, 1, 83, 84, 88, 107, 110, 116, 125, 144, 146, 147, 148, 149, 150, 151, 154, 308, 405, 409, 475, 479, 526, 530, 580, 584, 635, 637, 670, 683, 684, 685, 689, 694, 700, 704, 705, 706, 707, 722, 747, 759, 760, 761, 762, 763, 764, 767, 768, 769, 779, 801, 802, 812, 813, 824, 835, 845, 846, 856, 858, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 989, 1027, 1029, 1041, 1042, 1044, 1069, 1107, 1110], "computation": 53, "concat": [91, 92], "concaten": [91, 235, 320, 400, 470, 521, 575, 633, 907], "concentr": [106, 112, 888], "concept": [3, 127, 704], "conceptu": [226, 762], "concern": [53, 229], "concis": 689, "conclud": 689, "concret": 327, "condens": [732, 744, 749, 755], "condensed_form": [732, 749, 755], "condit": [1, 124, 125, 887, 946], "confid": [1, 106, 111, 115, 124, 694, 884, 885, 958, 978], "confirm": [1, 759, 763, 888], "conflict": 986, "conform": 453, "confus": 874, "conjunct": 763, "connect": [116, 118, 134, 230, 958, 1001, 1008, 1015, 1020, 1021, 1022, 1036], "consens": 1042, "consensu": 1042, "consensus_tre": 1042, "consequ": 121, "conserv": [116, 123, 124, 134, 222, 400, 470, 521, 575, 633, 689, 707], "consid": [3, 84, 106, 107, 116, 123, 134, 148, 149, 225, 230, 363, 387, 422, 458, 489, 509, 541, 562, 597, 621, 642, 684, 686, 701, 763, 764, 857, 886, 887, 888, 1001, 1020, 1021, 1022, 1036, 1037, 1039, 1047, 1070], "consider": [123, 134, 327, 363, 887], "consist": [3, 15, 47, 138, 221, 225, 226, 228, 231, 232, 234, 235, 236, 372, 435, 501, 554, 611, 616, 652, 654, 887, 1009, 1030, 1041], "constant": [115, 686, 689, 744, 761, 886], "constitut": [1, 654, 672], "constrain": [859, 874], "constraint": [231, 859, 874, 881], "construct": [86, 96, 227, 236, 292, 296, 297, 298, 299, 327, 339, 343, 344, 357, 361, 362, 363, 380, 654, 669, 672, 679, 700, 707, 858, 903, 904, 905, 906, 907, 922, 931, 937, 939, 940, 944, 945, 952, 953, 986, 996, 997, 1041, 1043, 1104, 1105, 1110], "constructor": [65, 82, 85, 94, 222, 225, 226, 227, 232, 233, 235, 249, 262, 272, 382, 425, 441, 492, 504, 544, 557, 600, 616, 645, 654, 765], "consum": [65, 85, 250, 382, 441, 504, 557, 616], "consumpt": [764, 879, 906], "contain": [1, 3, 53, 65, 83, 85, 92, 98, 99, 100, 101, 102, 103, 104, 107, 146, 147, 150, 151, 154, 214, 218, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 268, 280, 290, 292, 296, 297, 337, 339, 343, 344, 345, 355, 357, 361, 362, 363, 372, 373, 377, 380, 382, 384, 389, 402, 404, 409, 410, 413, 414, 415, 418, 422, 423, 424, 430, 432, 435, 441, 455, 460, 472, 474, 479, 480, 481, 482, 483, 486, 489, 490, 491, 497, 499, 501, 504, 506, 511, 523, 525, 530, 531, 532, 533, 534, 537, 539, 541, 542, 543, 549, 551, 552, 554, 557, 559, 564, 577, 579, 584, 585, 588, 589, 590, 593, 597, 598, 599, 605, 607, 611, 618, 623, 637, 642, 643, 644, 651, 652, 668, 670, 674, 677, 683, 684, 689, 704, 705, 707, 721, 722, 724, 727, 746, 747, 750, 753, 755, 759, 760, 761, 762, 763, 764, 766, 768, 858, 869, 871, 874, 906, 916, 917, 946, 950, 976, 980, 988, 1019, 1041, 1042, 1043, 1044, 1068, 1071, 1093, 1107, 1110], "content": [65, 83, 224, 225, 226, 227, 228, 230, 234, 237, 248, 249, 250, 377, 382, 399, 400, 403, 406, 433, 437, 470, 473, 476, 521, 524, 527, 557, 574, 575, 578, 581, 608, 609, 633, 1107], "context": [1, 53, 138, 278, 279, 684, 869, 1043], "contextu": 1070, "contigu": [228, 298, 422, 489, 541, 597, 642], "conting": [694, 881, 890, 954], "continu": [98, 99, 100, 858], "contrast": [134, 704, 1036], "contribut": [83, 134, 136, 767, 873, 878], "control": [92, 225, 759, 761, 762, 768, 881, 884, 886, 887, 888, 904, 914, 931], "control_cat": [886, 887], "controversi": 130, "conveni": [0, 53, 93, 97, 133, 177, 178, 190, 191, 271, 275, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040, 1111], "convent": [116, 148, 149, 220, 224, 227], "convers": [3, 226, 277, 744, 931], "convert": [1, 3, 16, 48, 214, 215, 216, 217, 220, 222, 224, 225, 227, 230, 232, 235, 277, 296, 297, 327, 343, 344, 361, 362, 380, 382, 405, 434, 435, 475, 500, 501, 504, 526, 553, 554, 557, 580, 610, 611, 616, 635, 652, 708, 749, 760, 933, 938, 940, 948, 949, 978, 1036, 1049], "convert_underscor": 230, "convienc": [1005, 1007], "coo_matrix": 705, "coord": [14, 46, 768, 769, 791, 802, 835, 846], "coord_data": 768, "coordin": [1, 3, 14, 18, 46, 51, 166, 192, 227, 233, 298, 308, 311, 319, 320, 325, 694, 705, 763, 768, 802, 835, 846, 859, 869, 873, 879, 880, 881], "copi": [65, 68, 69, 225, 232, 235, 308, 309, 310, 385, 386, 432, 456, 457, 499, 507, 508, 551, 560, 561, 607, 616, 619, 620, 651, 676, 680, 708, 726, 729, 752, 756, 882, 889, 954, 959, 960, 987, 1020, 1028, 1037, 1038, 1044, 1064, 1065, 1066], "copy_from": 308, "copyright": [225, 232], "corbet": 117, "cornish": [382, 453, 504, 557, 616], "cornwel": 134, "corr": 1, "corr_coeff": [761, 767], "correct": [110, 111, 112, 114, 118, 122, 139, 140, 225, 689, 694, 1015, 1020, 1021, 1022, 1105], "correl": [1, 700, 706, 707, 760, 761, 764, 766, 767, 859, 874, 875, 881, 884, 888, 983, 1110], "correspond": [1, 15, 47, 91, 106, 116, 134, 148, 149, 166, 192, 216, 223, 225, 226, 228, 233, 235, 270, 274, 293, 340, 358, 363, 412, 425, 441, 451, 492, 544, 587, 600, 613, 614, 645, 658, 689, 704, 712, 736, 859, 873, 874, 877, 888, 906, 911, 916, 918, 920, 921, 932, 933, 950, 952, 953, 958, 991, 996, 1000, 1010, 1032, 1042], "cospeci": 767, "cost": [700, 706], "costli": 0, "could": [1, 65, 125, 223, 225, 226, 233, 237, 269, 271, 273, 275, 689, 694, 708, 759, 761, 762, 763, 764, 767, 869, 886, 945, 1005, 1007, 1045, 1046, 1105], "count": [0, 3, 65, 82, 85, 88, 92, 95, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 219, 222, 225, 226, 232, 235, 409, 411, 412, 424, 426, 428, 479, 491, 493, 495, 530, 543, 545, 547, 584, 586, 587, 599, 601, 603, 637, 644, 646, 648, 685, 686, 689, 694, 767, 874, 880, 887, 888, 889, 906, 920, 936, 940, 946, 982, 983, 1010, 1042, 1105], "counts2": 888, "counts_001": 884, "counts_010": 884, "counts_100": 884, "counts_interv": [884, 887, 888], "coupl": 308, "covari": [134, 875], "cover": [308, 666, 1110], "coverag": [107, 115, 119, 125, 220, 221], "cprofil": 1112, "cran": [704, 759, 760, 761, 762, 763], "crd": 225, "creat": [1, 3, 13, 14, 15, 16, 34, 44, 45, 46, 47, 48, 53, 65, 82, 85, 86, 87, 91, 93, 94, 95, 96, 177, 190, 224, 225, 228, 230, 232, 234, 251, 262, 272, 277, 278, 296, 297, 298, 308, 319, 320, 324, 343, 344, 361, 362, 378, 380, 382, 431, 432, 453, 498, 499, 504, 550, 551, 557, 606, 607, 616, 650, 651, 669, 670, 672, 674, 675, 678, 679, 689, 698, 699, 707, 722, 724, 725, 728, 747, 750, 751, 754, 755, 765, 767, 802, 858, 869, 870, 890, 906, 913, 914, 920, 921, 923, 924, 926, 931, 932, 937, 938, 939, 941, 942, 944, 945, 947, 952, 953, 955, 957, 979, 980, 1002, 1016, 1020, 1022, 1043, 1107, 1110, 1112], "create_cach": 1002, "create_d": [890, 957], "create_format": [237, 248, 249, 250], "creation": [916, 950, 951], "creation_d": [950, 951], "credibl": 694, "criteria": [291, 323, 338, 356, 375, 886, 1035], "critic": [884, 885, 887, 888, 978], "critiqu": [114, 139], "crop": 236, "cross": 227, "cross_refer": 224, "csc": [893, 950], "csc_matrix": 950, "csr": [893, 950], "csr_matrix": 950, "csv": [220, 229, 1105], "ctaa": 227, "ctaacccccttttctcaga": 0, "ctagctagta": 224, "ctataaaaaa": 227, "ctattatact": 224, "ctc": [435, 501, 554, 611, 652], "ctcaaaagtc": [435, 501, 554, 611, 652], "ctcaaaattc": 224, "ctcttctagt": 224, "ctgtttgtta": 224, "cttcatgtat": 224, "cttccaattt": 224, "cttgacatag": 224, "cttgatgata": 224, "cuaa": 227, "cual": 234, "cuauaaaaaa": 227, "cug": 451, "cuguuuguua": 224, "cultur": 887, "cumbersom": 234, "cumul": [123, 144, 222, 223], "cuppini": 118, "curat": 236, "current": [137, 218, 220, 223, 224, 225, 226, 227, 232, 234, 235, 236, 308, 322, 363, 372, 439, 452, 614, 666, 677, 689, 727, 753, 761, 846, 871, 873, 879, 916, 950, 980, 984, 987, 993, 1003, 1004, 1009, 1104], "curti": 1, "curv": [118, 123, 130, 874, 884, 887, 888], "custom": [0, 1, 138, 236, 382, 405, 441, 442, 453, 475, 504, 526, 557, 580, 635, 869, 916, 944, 950, 1022, 1107], "custom_metr": [405, 475, 526, 580, 635], "customsequ": 453, "cutoff": [689, 1042], "cuucauguau": 224, "cuugacauag": 224, "cw": 235, "cy": 504, "cyanogen": 224, "cystein": 504, "cytokin": 887, "cytophagia": [997, 1032], "cytosin": [382, 557], "czech": 978, "d": [1, 53, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 220, 221, 227, 230, 231, 382, 504, 557, 665, 669, 674, 681, 686, 687, 688, 689, 692, 693, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 719, 724, 730, 743, 750, 755, 757, 759, 760, 761, 762, 763, 767, 802, 824, 846, 859, 869, 878, 887, 888, 889, 890, 907, 922, 923, 943, 957, 973, 974, 976, 978, 979, 980, 981, 982, 984, 985, 988, 989, 991, 992, 993, 994, 998, 1001, 1005, 1006, 1007, 1008, 1009, 1015, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1105, 1107, 1110, 1112], "d1": [236, 1107], "d136": 236, "d143": 236, "d2": 1107, "d3": 1107, "d_": [129, 141], "d_a": 931, "d_b": 931, "d_d": 230, "d_w": 144, "d_x": 761, "d_y": 761, "daili": 236, "danger": 1, "dash": 234, "data": [1, 3, 92, 116, 118, 130, 134, 146, 148, 149, 150, 151, 154, 214, 217, 219, 220, 223, 224, 226, 228, 229, 231, 233, 234, 235, 236, 277, 280, 327, 345, 363, 372, 382, 453, 504, 557, 616, 656, 658, 676, 686, 687, 688, 689, 690, 693, 694, 696, 698, 700, 704, 706, 708, 710, 712, 726, 732, 734, 736, 752, 760, 767, 768, 790, 823, 834, 857, 858, 869, 871, 873, 874, 878, 884, 886, 887, 888, 890, 891, 893, 900, 901, 903, 906, 911, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 932, 935, 937, 938, 939, 940, 942, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 996, 1029, 1033, 1043, 1068, 1071, 1104, 1105, 1106, 1107, 1112], "data_fh": 915, "data_fram": 760, "data_pump": 917, "data_typ": [916, 950], "databas": [220, 221, 224, 227, 234, 236, 298, 996], "datafram": [1, 65, 90, 150, 214, 220, 221, 236, 296, 327, 343, 361, 363, 380, 382, 419, 487, 504, 538, 557, 594, 616, 640, 665, 678, 681, 689, 694, 719, 728, 730, 743, 754, 757, 759, 760, 762, 763, 764, 768, 802, 846, 858, 859, 869, 873, 874, 880, 881, 886, 887, 904, 933, 949, 996, 997, 1047, 1107], "datapoint": 130, "dataset": [151, 218, 223, 686, 694, 763, 858, 874, 879, 916, 950], "datatyp": [218, 857], "date": [224, 916, 917, 950, 951], "datetim": [950, 951], "dayhoff": 666, "db": 225, "db_xref": [224, 227], "dbsourc": 224, "dbxref": [227, 228], "ddbj": 227, "ddl": [916, 950], "ddof": [700, 706, 878, 882], "de": [224, 235], "deal": [223, 224, 276, 686, 698, 879, 1105], "debug": [107, 1070, 1081, 1112], "debug_post_st": 1112, "debug_pre_st": 1112, "debug_runtim": 1112, "debug_trac": 1112, "decemb": 226, "decid": [879, 1112], "decim": [230, 234, 1048], "declar": [231, 234], "decod": [226, 277], "decomposit": [134, 151, 217], "decompress": 277, "decor": [237, 248, 249, 250, 308, 453, 980, 1042, 1050, 1070, 1082, 1083, 1093], "decreas": 857, "deem": 874, "deep": [69, 108, 310, 385, 386, 456, 457, 507, 508, 560, 561, 616, 619, 620, 667, 680, 720, 729, 745, 756, 960, 984, 987, 1037], "deepcopi": [69, 1038], "deeper": [148, 149], "def": [222, 237, 248, 249, 250, 405, 453, 475, 526, 580, 635, 888, 1112], "default": [0, 1, 15, 19, 47, 52, 53, 65, 82, 83, 85, 92, 94, 97, 98, 99, 100, 102, 103, 107, 111, 121, 123, 130, 134, 135, 136, 138, 145, 146, 150, 178, 191, 220, 225, 227, 228, 229, 230, 232, 233, 234, 237, 238, 248, 250, 263, 265, 291, 323, 326, 327, 338, 356, 363, 375, 381, 405, 422, 434, 435, 438, 439, 440, 441, 451, 452, 475, 489, 500, 501, 503, 526, 541, 553, 554, 556, 580, 597, 610, 611, 613, 614, 615, 635, 642, 652, 653, 665, 670, 674, 677, 682, 687, 688, 689, 694, 695, 696, 698, 699, 708, 719, 722, 724, 727, 731, 743, 747, 750, 753, 758, 760, 761, 763, 764, 765, 802, 857, 869, 871, 872, 878, 879, 881, 882, 889, 900, 906, 911, 914, 916, 921, 923, 926, 927, 928, 930, 931, 934, 936, 937, 938, 939, 940, 944, 946, 950, 951, 952, 953, 955, 956, 983, 984, 987, 1009, 1020, 1021, 1022, 1029, 1037, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1068, 1071, 1093, 1105, 1107, 1110, 1112], "default_column": 220, "default_gap_char": [83, 84, 92, 453], "default_missing_schem": [363, 376], "default_write_format": 250, "defaultdict": 932, "defer": 308, "defin": [1, 14, 18, 46, 51, 65, 92, 94, 100, 103, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 144, 145, 154, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 298, 308, 322, 363, 387, 405, 423, 424, 434, 435, 441, 442, 449, 450, 458, 475, 490, 491, 500, 501, 509, 526, 542, 543, 553, 554, 562, 580, 598, 599, 610, 611, 621, 635, 643, 644, 652, 654, 666, 671, 674, 685, 687, 688, 692, 693, 695, 696, 697, 701, 702, 703, 708, 724, 750, 761, 764, 869, 884, 914, 916, 931, 939, 950, 955, 1038, 1041, 1043, 1044, 1047, 1081, 1105, 1107, 1110, 1112], "definit": [1, 83, 112, 166, 179, 223, 224, 225, 226, 227, 228, 236, 382, 399, 400, 403, 404, 406, 413, 414, 418, 430, 433, 436, 437, 438, 439, 441, 451, 452, 453, 470, 473, 474, 476, 481, 482, 486, 497, 502, 504, 521, 524, 525, 527, 532, 533, 537, 549, 555, 557, 574, 575, 578, 579, 581, 588, 589, 593, 605, 608, 609, 612, 613, 614, 633, 666, 916, 950, 1043, 1107, 1111, 1112], "definite_char": 453, "deflin": 225, "degap": [411, 412, 586, 587, 1107], "degener": [83, 84, 166, 179, 223, 224, 225, 226, 227, 228, 382, 399, 400, 402, 403, 406, 411, 412, 413, 414, 418, 430, 433, 434, 436, 437, 438, 439, 441, 451, 452, 453, 470, 472, 473, 476, 481, 482, 486, 497, 500, 502, 504, 521, 523, 524, 527, 532, 533, 537, 549, 553, 555, 557, 574, 575, 577, 578, 581, 586, 587, 588, 589, 593, 605, 608, 609, 610, 612, 613, 614, 633, 666, 1107], "degenerate_map": [406, 453, 476, 527, 581, 1107], "degenerate_mod": 84, "degre": [106, 112, 134, 222, 694, 700, 706, 878, 885, 887], "deiman": 235, "del": [15, 19, 47, 52, 229, 434, 500, 553, 610, 858], "deleg": 963, "delet": [19, 52, 308, 1002, 1018, 1051], "deleteri": 1046, "delgado": [686, 704], "delim": 911, "delimit": [228, 229, 231, 233, 236, 295, 342, 360, 379, 707, 911, 915, 918, 952], "delta": [134, 698, 699, 878], "demograph": 1106, "demonstr": [89, 90, 237, 417, 419, 485, 487, 536, 538, 592, 594, 639, 640], "dempqsv": [435, 501, 554, 611, 652], "demultiplex": 857, "den": 704, "denomin": [687, 704], "denominator_col": 687, "denominator_idx": [687, 688], "denot": [112, 134, 139, 143, 144, 225, 689, 694, 759, 762, 763], "dens": [219, 906, 909, 914, 917, 926, 927, 928, 937, 948, 949, 957], "densiti": 953, "dep": 884, "depend": [20, 111, 114, 115, 116, 121, 134, 146, 148, 149, 150, 225, 226, 235, 248, 249, 250, 277, 412, 587, 658, 712, 736, 761, 763, 765, 824, 879, 916, 983, 1033, 1042, 1070, 1081, 1105, 1110, 1112], "deprec": [104, 105, 116, 132, 134, 148, 149, 154, 418, 430, 486, 497, 537, 549, 593, 605, 689, 699, 987, 1038], "depth": [134, 858, 884, 887, 888, 1033, 1110], "deriv": [99, 100, 102, 103, 114, 224, 422, 489, 541, 597, 616, 642, 695, 696, 704, 887, 1043], "derives_from": 228, "desc": 616, "descend": [95, 134, 325, 958, 984, 988, 1000, 1009, 1018, 1026, 1027, 1030, 1033, 1044, 1110], "describ": [0, 1, 84, 98, 101, 106, 108, 109, 112, 115, 116, 119, 120, 122, 124, 125, 126, 127, 128, 134, 135, 139, 148, 149, 154, 219, 224, 225, 226, 227, 228, 231, 232, 234, 235, 295, 342, 360, 363, 376, 379, 422, 425, 489, 492, 541, 544, 597, 600, 616, 642, 645, 676, 700, 706, 707, 726, 744, 752, 761, 767, 880, 906, 912, 916, 950, 951, 1000, 1021, 1041, 1043, 1044, 1106, 1107, 1110], "descript": [53, 107, 116, 123, 129, 141, 146, 148, 149, 150, 218, 220, 225, 226, 227, 228, 230, 232, 234, 236, 280, 327, 345, 658, 712, 736, 950, 981, 1042, 1107, 1110], "description_newline_replac": [225, 226], "descriptor": [227, 880, 1064, 1065, 1066], "deseri": [707, 859], "design": [1, 151, 218, 219, 224, 234, 363, 707, 886], "desir": [118, 124, 220, 229, 879, 933, 945, 1023, 1112], "desper": [1041, 1044], "destin": 616, "detach": 3, "detail": [53, 91, 92, 104, 105, 134, 151, 153, 154, 224, 225, 226, 227, 228, 232, 233, 235, 236, 237, 280, 327, 345, 363, 452, 616, 658, 712, 736, 760, 764, 869, 873, 874, 881, 1043, 1105], "detect": [225, 227, 234, 270, 274, 689, 761, 888, 903], "determin": [1, 67, 70, 79, 89, 90, 116, 121, 134, 136, 146, 148, 149, 150, 229, 237, 266, 267, 277, 281, 287, 290, 294, 328, 334, 337, 341, 346, 352, 355, 359, 363, 364, 370, 372, 373, 384, 387, 396, 413, 414, 415, 416, 417, 418, 419, 421, 442, 448, 455, 458, 467, 481, 482, 483, 484, 485, 486, 487, 506, 509, 518, 532, 533, 534, 535, 536, 537, 538, 539, 559, 562, 571, 588, 589, 590, 591, 592, 593, 594, 596, 618, 621, 630, 638, 639, 640, 663, 689, 717, 741, 763, 767, 857, 879, 884, 886, 887, 891, 906, 1042, 1112], "determinist": [117, 759, 763], "develop": [1, 20, 151, 154, 224, 234, 248, 249, 250, 689, 1043, 1104, 1112], "deviat": [760, 878, 881, 882, 885], "df": [220, 221, 236, 678, 694, 728, 754, 759, 760, 763, 869, 885, 949], "di": [118, 1107], "diag": 928, "diagnos": 1112, "diagon": [218, 747, 755, 928], "diagram": 298, "dict": [53, 65, 86, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 177, 178, 190, 191, 224, 227, 249, 269, 270, 271, 273, 274, 275, 298, 319, 323, 324, 326, 363, 376, 378, 381, 382, 409, 424, 431, 438, 439, 440, 479, 491, 498, 503, 504, 530, 543, 550, 556, 557, 584, 599, 606, 613, 614, 615, 616, 637, 644, 650, 653, 654, 669, 675, 677, 679, 682, 725, 727, 731, 751, 753, 758, 761, 764, 824, 870, 871, 872, 901, 902, 916, 917, 918, 921, 931, 932, 939, 941, 950, 955, 956, 996, 997, 1000, 1010, 1016, 1031, 1040, 1070, 1107, 1112], "dict_of_metadata": 902, "dictionari": [86, 89, 94, 96, 105, 235, 236, 298, 309, 310, 319, 323, 417, 485, 536, 592, 616, 639, 669, 677, 679, 727, 753, 761, 871, 914, 996], "did": [107, 225, 233, 269, 273, 278, 1112], "didn": [225, 1112], "diet": 886, "differ": [0, 1, 70, 83, 84, 86, 98, 99, 100, 111, 116, 123, 135, 139, 141, 148, 149, 221, 223, 225, 226, 232, 235, 236, 237, 327, 384, 387, 396, 400, 401, 405, 420, 421, 426, 427, 428, 429, 432, 438, 441, 448, 455, 458, 467, 470, 471, 475, 488, 493, 494, 495, 496, 499, 506, 509, 518, 521, 522, 526, 540, 545, 546, 547, 548, 551, 559, 562, 571, 575, 576, 580, 595, 596, 601, 602, 603, 604, 607, 613, 618, 621, 630, 633, 634, 635, 641, 646, 647, 648, 649, 651, 658, 684, 689, 694, 707, 712, 736, 759, 762, 763, 767, 791, 846, 858, 873, 874, 879, 887, 888, 953, 981, 982, 1047, 1048, 1064, 1065, 1066, 1107, 1110], "differenti": [689, 694], "difficult": 1, "digit": 234, "dim": 223, "dimens": [77, 166, 179, 223, 231, 232, 664, 687, 691, 695, 696, 718, 742, 763, 859, 868, 869, 879, 880], "dimension": [1, 216, 223, 676, 688, 701, 702, 703, 708, 726, 744, 752, 858, 873, 880, 881, 887, 888, 942, 1108], "direct": [234, 236, 295, 342, 360, 379, 874, 958, 1037, 1038, 1039], "direct_io": [911, 951, 952], "direction": 1048, "directli": [65, 82, 85, 234, 382, 441, 504, 557, 616, 683, 689, 767, 951, 952, 1036, 1070, 1112], "dirichilet": 694, "dirichlet": 694, "disabl": [1, 116, 146, 148, 149, 150, 1112], "disallow": [230, 235, 761], "disallow_negative_branch_length": 1043, "discard": [227, 761, 914], "discov": [1, 137, 986], "discoveri": 1, "discrep": 112, "discret": 143, "discuss": [134, 138, 148, 149, 234, 1112], "diseas": [689, 761, 904], "disjoint": [907, 1042], "disjointiderror": [903, 907], "disk": [225, 363, 708], "dism": 700, "disperison": 763, "dispers": 763, "displai": [224, 409, 432, 441, 479, 499, 530, 551, 584, 607, 637, 651, 764, 859], "disrupt": [407, 477, 528, 582, 1107], "dissimilar": [147, 150, 229, 655, 656, 658, 663, 664, 665, 667, 668, 670, 673, 674, 676, 677, 680, 681, 700, 707, 708, 709, 710, 712, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 729, 730, 733, 734, 736, 741, 742, 743, 745, 746, 748, 750, 752, 753, 756, 757], "dissimilaritymatrix": [218, 229, 654, 656, 658, 663, 665, 667, 668, 670, 674, 675, 678, 680, 681, 682, 700, 707, 732, 734, 736, 741, 743, 745, 746, 750, 754, 756, 757, 765], "dist": [983, 998], "dist_f": 983, "distanc": [1, 53, 134, 147, 148, 149, 150, 151, 153, 154, 215, 218, 229, 230, 426, 428, 493, 495, 545, 547, 601, 603, 646, 648, 654, 665, 668, 674, 676, 681, 687, 700, 766, 767, 869, 873, 874, 876, 879, 881, 958, 972, 973, 981, 983, 998, 1001, 1020, 1021, 1022, 1029, 1041, 1043, 1044, 1110], "distance_filt": 53, "distance_from_r": 983, "distance_from_r_squar": 983, "distance_matrix": [759, 760, 762, 763, 876, 879], "distancematrix": [150, 151, 154, 215, 218, 229, 677, 678, 683, 700, 707, 708, 727, 728, 759, 760, 761, 762, 763, 764, 765, 767, 869, 879, 1029, 1041, 1043, 1044], "distant": 998, "distantli": 1022, "distinct": [83, 131, 132, 143, 684, 707, 984], "distinguish": [50, 112, 134], "distort": 686, "distribut": [106, 115, 123, 224, 694, 701, 765, 879, 884, 885, 887, 888, 946], "div": 236, "diverg": 1, "divers": [707, 889, 1104], "divid": [222, 704, 876, 878, 882, 906], "divis": [441, 704, 882], "dj": 225, "dm": [218, 658, 665, 674, 677, 678, 681, 707, 712, 719, 724, 727, 728, 730, 736, 743, 750, 753, 754, 755, 757, 759, 760, 763, 764, 869, 1041, 1043, 1044], "dm1": 764, "dm2": 764, "dm_fh": 707, "dm_from_np": 707, "dmp": 996, "dna": [0, 3, 17, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 85, 86, 88, 90, 91, 92, 94, 95, 96, 99, 102, 104, 222, 224, 225, 226, 227, 228, 232, 233, 235, 441, 453, 470, 472, 473, 474, 476, 477, 480, 481, 482, 483, 486, 487, 489, 497, 501, 502, 521, 523, 524, 525, 527, 528, 531, 532, 533, 534, 537, 538, 541, 549, 554, 555, 557, 574, 575, 577, 578, 579, 581, 582, 585, 586, 587, 588, 589, 590, 593, 594, 596, 597, 605, 608, 609, 611, 612, 616, 633, 640, 642, 652, 708, 1105, 1107], "dna_seq": [224, 225, 227], "dnaful": 666, "do": [1, 82, 85, 130, 216, 218, 223, 225, 232, 234, 237, 277, 382, 387, 429, 458, 496, 504, 509, 548, 557, 562, 604, 616, 621, 649, 684, 689, 761, 764, 802, 881, 893, 914, 937, 946, 978, 991, 1023, 1024, 1110, 1112], "do_someth": 1112, "do_something_awesom": 1112, "do_something_els": 1112, "doc": [150, 222, 224, 225, 232, 234, 295, 298, 342, 360, 363, 376, 379, 676, 708, 726, 732, 744, 752, 950, 1042], "docstr": [280, 327, 345], "doctest": 916, "document": [1, 72, 153, 219, 225, 227, 232, 233, 268, 689, 869, 890, 916, 950, 957, 958, 1105, 1109], "doe": [65, 82, 83, 85, 92, 95, 104, 116, 134, 220, 222, 223, 225, 226, 228, 230, 232, 235, 277, 290, 337, 355, 373, 400, 441, 442, 448, 451, 470, 521, 575, 633, 666, 676, 677, 684, 707, 726, 727, 749, 752, 753, 759, 761, 763, 802, 871, 879, 887, 888, 910, 932, 933, 950, 974, 983, 994, 1008, 1029, 1032, 1036, 1042, 1044, 1047, 1105], "doesn": [92, 225, 234, 376, 451, 701, 705, 873, 879, 883, 1020, 1021, 1022, 1037, 1045, 1111], "doi": [53, 104, 224, 226, 700, 706, 1041, 1043, 1044], "domain": [235, 504, 996, 1032], "domin": [108, 114, 121, 122, 127, 139, 140, 141, 144], "dominance_": 106, "domrachev": 236, "don": [1, 53, 92, 225, 234, 411, 412, 586, 587, 687, 689, 764, 881, 884, 888, 982, 983, 1021, 1043], "done": [84, 689, 763, 790, 823, 834, 893], "doubl": [107, 110, 125, 133, 269, 273, 873, 879], "doubleton": [1, 110, 111, 113, 115, 133], "doubt": 234, "download": [224, 227, 236], "dqyhrykedvgimkdqnmdsyrfsiswprilpkgklsgginhegikyynnli": 224, "dr": 224, "draw": [694, 884, 886, 887, 888, 976], "draw_mod": [884, 888], "drawn": [694, 765, 884, 887, 888], "driver": [1, 114], "drop": [308, 372, 389, 460, 511, 564, 623, 764, 858, 874, 914, 1018, 1042], "drop_all_miss": 372, "drop_all_uniqu": 372, "drop_missing_valu": [291, 294, 338, 341, 356, 359], "drop_zero_vari": 372, "dt": 224, "dt_rich": 906, "dtype": [0, 1, 17, 65, 70, 82, 83, 84, 85, 88, 91, 92, 94, 95, 222, 223, 225, 226, 232, 233, 235, 363, 380, 399, 400, 402, 403, 404, 410, 427, 429, 430, 433, 435, 470, 472, 473, 474, 480, 494, 496, 497, 501, 521, 523, 524, 525, 531, 546, 548, 549, 552, 554, 574, 575, 577, 578, 579, 585, 602, 604, 605, 608, 611, 616, 633, 647, 649, 652, 689, 708, 755, 759, 763, 858, 890, 930, 934, 948, 957, 1031, 1107], "due": [106, 132, 230, 322, 698, 699, 760, 763, 874, 887], "dump": [236, 1110, 1112], "dunn": 224, "duplic": [92, 154, 226, 234, 235, 322, 435, 501, 554, 611, 652, 668, 721, 746, 1067], "duplicatenodeerror": [116, 134, 146, 148, 149, 150, 986], "duplicateregistrationerror": [248, 249, 250], "dure": [92, 225, 299, 400, 470, 521, 575, 633, 763, 931, 951, 952, 1037, 1039, 1068], "dx": 118, "e": [0, 1, 53, 66, 77, 84, 88, 89, 95, 112, 117, 118, 119, 120, 121, 122, 123, 128, 129, 134, 135, 136, 137, 138, 139, 141, 143, 148, 149, 150, 151, 154, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 298, 321, 327, 363, 376, 377, 400, 408, 409, 417, 451, 470, 478, 479, 485, 504, 521, 529, 530, 536, 539, 552, 575, 583, 584, 592, 609, 616, 633, 636, 637, 639, 654, 658, 665, 674, 681, 684, 689, 694, 704, 705, 707, 708, 712, 719, 724, 730, 732, 736, 743, 750, 755, 757, 759, 760, 761, 762, 763, 869, 876, 877, 886, 887, 889, 907, 911, 916, 933, 946, 950, 958, 973, 974, 976, 978, 979, 980, 984, 985, 988, 989, 991, 992, 993, 994, 998, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1015, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1042, 1043, 1048, 1067, 1070, 1105, 1107, 1110, 1112], "e1004075": [700, 706], "e157": 134, "e_": [695, 696], "e_1": [695, 696], "e_d": 141, "e_h": 135, "e_i": 696, "e_matrix": 877, "each": [0, 1, 3, 13, 14, 15, 18, 34, 45, 46, 47, 51, 53, 65, 75, 80, 83, 84, 88, 91, 94, 98, 99, 100, 101, 102, 103, 104, 116, 130, 146, 148, 149, 150, 151, 154, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 298, 309, 310, 319, 363, 377, 382, 392, 397, 400, 406, 409, 422, 424, 439, 452, 463, 468, 470, 476, 479, 489, 491, 504, 514, 519, 521, 527, 530, 541, 543, 567, 572, 575, 581, 584, 597, 599, 614, 616, 626, 631, 633, 637, 642, 644, 654, 658, 668, 670, 684, 689, 691, 694, 698, 699, 701, 702, 703, 704, 707, 712, 721, 722, 736, 746, 747, 759, 760, 761, 762, 763, 764, 767, 768, 769, 779, 780, 791, 801, 802, 812, 813, 835, 845, 846, 856, 857, 858, 859, 869, 874, 875, 877, 878, 879, 881, 884, 887, 888, 906, 914, 916, 927, 933, 935, 947, 950, 953, 984, 1020, 1021, 1022, 1033, 1037, 1042, 1105, 1107, 1112], "earlier": 1112, "earth": 151, "earthmicrobiom": 151, "easi": [225, 226, 234], "easier": [298, 654], "easili": [229, 1107], "ebi": [98, 101, 224, 227, 298], "ec_numb": 224, "ecoli": [221, 903], "ecolog": [1, 114, 858, 874, 879], "ecologi": [1, 114, 116, 117, 121, 126, 127, 139, 144, 689, 759, 760, 761, 762, 858, 873, 874, 879, 880, 881], "ecologist": 873, "ed": [118, 223], "edg": [230, 767, 873, 976, 1031, 1041, 1044], "edit": [234, 761, 880], "editor": 225, "edu": [107, 111, 222, 225, 230, 232, 1042], "educ": [0, 886], "edward": 227, "eeb": [107, 111], "eeeee": 235, "eeeeeeee": 235, "eeeeeeeeeeh": 235, "eeeeeeeehhh": 235, "effect": [53, 104, 106, 112, 114, 121, 122, 138, 148, 149, 234, 277, 435, 501, 554, 611, 652, 665, 719, 743, 884, 886, 887, 888], "effici": [0, 3, 229, 749], "efficiencywarn": 889, "effort": 227, "egozcu": [686, 695, 696, 700, 704, 706], "eh": 116, "eifcyilkinitilqfsitengmnefndatlpveeallntyridyyyrhlyi": 224, "eigendecomposit": [763, 879], "eigenvalu": [763, 859, 873, 879, 881], "eigenvector": [763, 874, 879], "eigh": [763, 879], "eight": 888, "eigval": [231, 859], "either": [1, 65, 72, 92, 94, 98, 99, 100, 134, 220, 234, 235, 248, 249, 250, 363, 412, 422, 453, 489, 541, 587, 597, 642, 685, 761, 763, 857, 869, 871, 873, 878, 886, 888, 904, 905, 931, 939, 947, 1020, 1042], "elem": [916, 950], "element": [15, 47, 53, 229, 277, 658, 670, 691, 695, 696, 712, 722, 736, 747, 846, 869, 873, 877, 878, 882, 885, 887, 888, 889, 890, 893, 916, 919, 935, 950, 1067], "elementwis": 876, "elev": [760, 1036], "ellaps": 958, "elong": 1034, "els": [32, 33, 230, 237, 249, 269, 273, 383, 436, 454, 502, 505, 555, 558, 612, 616, 617, 875, 914, 938, 953, 980], "elsevi": [761, 858, 873, 874, 881], "elsewher": [116, 146, 148, 149, 150], "emb": [177, 178, 190, 191], "embed": [858, 1104], "embedding_ptr": 223, "embeddingvector": [203, 214, 215, 216, 217], "embl": [227, 236, 298, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653], "embl_gen": 224, "embl_str": 224, "emboss": [98, 101], "emboss_needl": 98, "emboss_wat": 101, "embptr": 223, "embryophyta": 224, "emdptr": 223, "emorg": 221, "emperor": 869, "emploi": 111, "empti": [20, 66, 89, 117, 221, 225, 228, 232, 266, 267, 409, 417, 479, 485, 530, 536, 584, 592, 637, 639, 668, 689, 721, 746, 886, 893, 925, 939, 942, 943, 980, 1032, 1047, 1105], "en": [106, 114, 121, 122, 225, 226, 235, 1043], "ena": [224, 227], "enabl": [3, 950, 1070, 1112], "encod": [3, 19, 52, 165, 176, 189, 202, 213, 218, 225, 226, 233, 237, 238, 277, 363, 704, 858], "encode_miss": [296, 297, 343, 344, 361, 362, 380], "encount": [1, 114, 139, 234, 989, 991, 998], "encourag": 887, "end": [0, 53, 98, 99, 100, 101, 102, 103, 104, 166, 220, 221, 224, 225, 226, 227, 228, 235, 236, 298, 308, 319, 325, 401, 420, 451, 471, 488, 522, 540, 576, 595, 634, 641, 1021], "endpoint": [888, 1029], "enforc": [225, 363, 616], "engel": 128, "engin": 1071, "english": [230, 761], "enough": [114, 225, 230, 888], "enrol": 888, "ens_": 114, "ens_pi": 114, "ensur": [1, 53, 84, 116, 148, 149, 237, 382, 504, 557, 656, 691, 694, 698, 710, 732, 734, 946, 979, 1047], "entail": [116, 146, 148, 149, 150], "entir": [1, 15, 16, 47, 48, 53, 65, 382, 504, 557, 616, 893, 950, 954, 984], "entiti": [143, 298, 950], "entrez": 236, "entri": [118, 218, 219, 224, 236, 857, 911, 914, 936, 937, 952, 953, 957], "entropi": [84, 121, 136, 138, 145], "enumer": 53, "env": [760, 910], "environ": [107, 148, 149, 701, 874, 948], "environment": [134, 760, 858, 874, 879, 880], "enzym": 130, "eq": [876, 877], "equal": [1, 3, 15, 47, 70, 79, 84, 105, 106, 107, 121, 143, 148, 149, 150, 225, 281, 287, 299, 305, 311, 317, 328, 334, 346, 352, 364, 370, 387, 396, 442, 448, 458, 467, 509, 518, 562, 571, 616, 621, 630, 654, 656, 663, 684, 701, 710, 717, 734, 741, 759, 761, 762, 763, 765, 767, 857, 873, 878, 879, 882, 887, 888, 889, 891, 912, 981, 1042, 1047, 1048], "equat": [110, 111, 117, 130, 761], "equit": [106, 135, 141], "equival": [77, 114, 116, 121, 122, 134, 136, 138, 226, 234, 385, 386, 409, 411, 432, 433, 439, 452, 456, 457, 479, 499, 507, 508, 530, 551, 560, 561, 584, 586, 607, 608, 614, 619, 620, 637, 651, 665, 681, 684, 689, 719, 730, 743, 757, 761, 858, 987, 1107], "erb": [700, 706], "eredi": 118, "erik": [53, 104], "error": [1, 84, 116, 130, 134, 146, 148, 149, 150, 225, 226, 232, 234, 237, 277, 322, 363, 377, 435, 501, 554, 611, 652, 759, 761, 763, 884, 888, 955, 1049, 1105], "escap": 230, "especi": [218, 225, 234, 767, 881], "essenti": 227, "esti": 115, "estim": [53, 106, 107, 110, 111, 115, 117, 119, 123, 124, 125, 130, 137, 694, 878, 886, 887, 888, 1021, 1041, 1044], "estrang": 230, "esty_ci": 119, "et": [689, 694, 767, 890, 957], "etc": [93, 97, 118, 177, 178, 190, 191, 225, 226, 234, 269, 270, 271, 273, 274, 275, 295, 298, 324, 326, 342, 360, 378, 379, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 654, 675, 682, 725, 731, 751, 758, 870, 872, 879, 881, 933, 941, 956, 958, 1016, 1040, 1106, 1107], "euclidean": [215, 686, 707, 760, 873, 879, 881], "euclidian": 879, "eudicotyledon": 224, "eukaryota": 224, "euryarchaeota": [997, 1032], "evalu": [116, 134, 220, 221, 389, 460, 511, 564, 623, 707, 760, 857, 884, 980, 1018, 1021, 1110, 1112], "evaul": 237, "even": [98, 99, 100, 120, 121, 128, 135, 141, 225, 230, 451, 759, 763, 888, 1033], "evenli": [701, 869], "everi": [107, 234, 236, 372, 677, 688, 701, 702, 703, 704, 705, 727, 753, 764, 871, 979, 994, 1000, 1036], "evid": [224, 230], "evmltdiprlhindpimk": 235, "evoltuion": 1041, "evolut": [225, 230, 232, 766, 767, 978, 1041, 1042, 1043, 1044], "evolutionari": [116, 654, 666, 958, 1043], "ex": 1112, "exact": [116, 134, 146, 148, 149, 150, 234, 298, 400, 470, 521, 575, 633, 763, 879, 1105], "exactli": [65, 82, 85, 91, 101, 102, 103, 225, 226, 232, 237, 296, 343, 361, 363, 387, 396, 442, 458, 467, 509, 518, 562, 571, 621, 630, 705, 869, 976, 1036], "examin": [1071, 1112], "exampl": [0, 1, 3, 13, 14, 15, 17, 18, 19, 45, 46, 47, 50, 51, 52, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 116, 148, 149, 150, 166, 179, 229, 234, 237, 248, 249, 250, 278, 298, 308, 320, 325, 363, 382, 383, 384, 387, 389, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 441, 442, 450, 451, 452, 453, 454, 455, 458, 460, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 504, 505, 506, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 557, 558, 559, 562, 564, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 621, 623, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 654, 665, 666, 669, 672, 674, 677, 678, 681, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 708, 719, 724, 727, 728, 730, 743, 750, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 857, 869, 879, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 911, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 952, 953, 955, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1069, 1105, 1106, 1107, 1108, 1110, 1112], "example_protein_embed": 223, "example_t": [219, 909, 928, 929, 930, 933, 934, 948, 949], "exce": [225, 232, 1001], "exceed": 234, "excel": [226, 234], "except": [1, 225, 230, 231, 232, 234, 249, 451, 668, 721, 746, 762, 874, 986, 1042, 1045, 1046, 1081, 1111], "exchang": 1044, "excit": 1112, "exclud": [233, 704, 747, 755, 1025], "exclude_absent_taxa": 982, "exclus": [237, 298, 308, 319, 401, 420, 471, 488, 522, 540, 576, 595, 634, 641, 689], "execut": [237, 780, 824, 1071, 1093, 1112], "exercis": 886, "exhibit": 873, "exist": [0, 94, 107, 112, 219, 230, 237, 248, 249, 250, 266, 267, 451, 654, 666, 670, 707, 722, 747, 761, 764, 869, 910, 916, 922, 958, 975, 983, 988, 990, 1023, 1037, 1068, 1093, 1107], "exon": [228, 298, 425, 492, 544, 557, 600, 616, 645], "exp": [121, 138, 688, 693, 700, 706], "expand": [767, 933, 1032], "expect": [1, 151, 220, 237, 265, 382, 504, 557, 694, 695, 696, 707, 767, 873, 874, 881, 906, 915, 916, 931, 950, 1031, 1112], "expens": 893, "experi": [0, 137, 224, 227, 234, 689, 694, 887], "experienc": 888, "experiment": [224, 763, 1106], "explain": [227, 228, 231, 768, 802, 846, 858, 859, 873, 879, 881], "explan": [873, 874], "explanatori": [767, 858, 859, 874, 881], "explicit": 226, "explicitli": [134, 232, 234, 435, 501, 554, 611, 652, 858], "explor": [1, 147, 858], "exploratori": 1, "expon": [136, 145, 230, 703], "exponenti": [121, 138], "export": 234, "expos": 916, "express": [144, 408, 436, 478, 502, 529, 555, 583, 612, 636, 694, 700, 706, 887, 1107], "ext": [295, 342, 360, 379], "extend": [0, 53, 82, 92, 98, 99, 100, 101, 102, 103, 116, 887, 975, 988, 1042, 1105], "extens": [224, 234, 295, 342, 360, 379], "extern": 230, "extinct": 116, "extra": [236, 237, 759, 760, 762, 763, 824], "extract": [658, 694, 707, 708, 712, 736, 759, 763, 874, 978, 1107], "extrapol": [124, 125, 884], "extrem": 761, "f": [1, 53, 92, 108, 124, 134, 151, 219, 220, 221, 223, 226, 230, 233, 235, 236, 278, 504, 761, 762, 763, 874, 877, 884, 887, 905, 906, 916, 939, 942, 950, 952, 953, 973, 974, 976, 978, 979, 980, 984, 985, 988, 989, 991, 992, 993, 994, 998, 1005, 1006, 1007, 1008, 1009, 1015, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1029, 1030, 1034, 1035, 1036, 1037, 1039, 1042, 1110], "f_1": [107, 110, 115, 119, 137], "f_2": [110, 115], "f_i": 107, "f_onewai": 689, "fabacea": 224, "fabal": 224, "fabid": 224, "facilit": [116, 148, 149, 151, 218, 732, 858, 884, 986, 1043], "fact": 451, "factor": [134, 148, 149, 759, 762, 767, 874, 888], "factori": [237, 248, 249, 250, 262, 272], "fail": [116, 117, 134, 146, 148, 149, 150, 322, 763, 884, 1070, 1071, 1112], "fail_callback": [1071, 1112], "fail_f": 1112, "failur": [107, 1071, 1112], "fairli": 767, "faith": [1, 116, 134, 707], "faith_pd": [1, 134], "fall": [118, 123, 134, 149, 857], "fals": [1, 32, 33, 53, 66, 67, 68, 69, 70, 82, 83, 85, 88, 89, 90, 91, 95, 98, 99, 100, 110, 111, 112, 114, 116, 122, 134, 138, 139, 140, 146, 148, 149, 150, 166, 179, 220, 223, 224, 225, 226, 227, 228, 230, 233, 248, 249, 250, 277, 278, 291, 294, 296, 297, 298, 308, 320, 321, 338, 341, 343, 344, 356, 359, 361, 362, 372, 380, 382, 383, 384, 385, 387, 389, 396, 399, 400, 402, 403, 404, 406, 409, 410, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 451, 452, 453, 454, 455, 456, 458, 460, 467, 470, 472, 473, 474, 476, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 511, 518, 521, 523, 524, 525, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 562, 564, 571, 574, 575, 577, 578, 579, 581, 584, 585, 587, 588, 589, 590, 592, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 623, 630, 633, 637, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 655, 656, 663, 665, 677, 689, 694, 700, 706, 709, 710, 717, 719, 727, 733, 734, 741, 743, 747, 749, 753, 761, 764, 767, 768, 769, 791, 802, 835, 871, 879, 881, 884, 886, 887, 889, 906, 913, 914, 917, 925, 926, 927, 928, 936, 937, 939, 943, 946, 948, 949, 950, 953, 955, 976, 981, 982, 984, 985, 993, 999, 1003, 1004, 1009, 1017, 1020, 1021, 1022, 1030, 1032, 1033, 1035, 1037, 1041, 1044, 1048, 1070, 1093, 1107, 1110, 1112], "famili": 1, "far": 873, "farri": 1021, "farthest": 1021, "fasffbf": 226, "fast": [116, 148, 149, 768, 879, 931, 1041, 1044], "fasta": [93, 97, 226, 228, 233, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 1105], "fasta_fl": 225, "fasta_format": 225, "faster": [1, 116, 148, 149, 151, 409, 439, 452, 479, 530, 584, 614, 637, 763, 879, 1012], "fastnni": 1044, "fastq": [93, 97, 233, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 1105], "fastq_format": 226, "favor": [104, 699], "fc": 694, "fd": [116, 1069], "fdr_bh": [689, 694], "featur": [1, 118, 131, 217, 219, 225, 228, 234, 235, 298, 308, 311, 320, 322, 323, 325, 363, 382, 504, 557, 616, 686, 689, 694, 704, 859, 868, 871, 873, 874, 880, 881, 946, 1048, 1106, 1107, 1108], "feature_t": 227, "fecal": 888, "federhen": 236, "fee": [225, 232], "felsenstein": [225, 232, 1110], "fernand": 694, "fernandez": [686, 698], "ferr": 227, "fetch": [308, 946, 1110], "fetureid": 234, "few": [106, 116, 148, 149, 151, 916, 950, 1105, 1110, 1112], "fewer": [107, 232, 887, 888], "fff": 226, "ffffx": 226, "ffllssssyi": 441, "fglfmeqlttgdysksmrrivknrlpkfskfesslvngsfdfiginyysssi": 224, "fh": [220, 221, 222, 225, 226, 227, 228, 232, 233, 235, 236, 237, 248, 249, 250], "field": [1, 221, 226, 233, 441, 858, 916, 950], "fifth": 225, "fig": [1, 674, 724, 750, 869], "figur": [674, 724, 750, 869], "file": [93, 97, 177, 178, 190, 191, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 249, 262, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 295, 324, 326, 342, 360, 363, 376, 378, 379, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 674, 675, 682, 689, 707, 724, 725, 731, 750, 751, 758, 790, 823, 834, 869, 870, 872, 886, 890, 903, 904, 905, 906, 907, 911, 915, 916, 918, 922, 931, 937, 939, 940, 941, 944, 945, 950, 951, 952, 953, 956, 957, 978, 1016, 1040, 1068, 1069, 1110], "fileformaterror": 237, "filehandl": [93, 97, 177, 178, 190, 191, 237, 248, 249, 250, 269, 270, 271, 273, 274, 275, 277, 278, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040], "filenam": 1068, "filepath": [93, 97, 177, 178, 190, 191, 269, 270, 271, 273, 274, 275, 277, 295, 324, 326, 342, 360, 376, 378, 379, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 764, 870, 872, 941, 956, 1016, 1040], "filesentinel": [237, 248, 250], "filter": [53, 84, 104, 233, 289, 290, 336, 337, 354, 355, 363, 372, 373, 403, 473, 524, 578, 764, 904, 905, 946, 1032, 1112], "filter_column": 373, "filter_f": 1032, "filter_fn": 914, "filter_id": [291, 338, 356, 372, 375], "final": [235, 767, 906, 951, 952, 1112], "find": [0, 117, 402, 404, 407, 410, 420, 422, 427, 429, 430, 472, 474, 477, 480, 488, 489, 494, 496, 497, 523, 525, 528, 531, 540, 541, 546, 548, 549, 552, 577, 579, 582, 585, 595, 597, 602, 604, 605, 641, 642, 647, 649, 760, 763, 767, 874, 888, 927, 973, 974, 986, 988, 989, 992, 993, 994, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1015, 1019, 1025, 1034, 1037, 1039, 1044, 1067], "find_al": [991, 993, 994], "find_by_func": [991, 992, 994], "find_by_id": [991, 992, 993], "find_motif": [422, 489, 541, 597, 642, 1107], "find_with_regex": [422, 489, 541, 597, 642, 1107], "fine": 953, "finit": [112, 114, 122, 139, 140], "firmicut": [933, 996, 997, 1032], "first": [1, 3, 50, 53, 98, 99, 100, 101, 102, 103, 104, 107, 116, 148, 149, 155, 166, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 250, 320, 325, 420, 422, 438, 439, 451, 488, 489, 540, 541, 595, 597, 613, 616, 641, 642, 658, 687, 688, 689, 694, 701, 712, 736, 759, 761, 791, 846, 858, 875, 884, 887, 911, 922, 952, 978, 982, 991, 992, 1000, 1032, 1033, 1036, 1081, 1105, 1110, 1112], "fish": 858, "fisher": 117, "fit": [130, 694, 857, 859, 881, 1111], "five": [225, 236, 674, 689, 724, 750, 1041, 1043, 1044], "fix": [124, 229, 232], "fl": 225, "flag": [236, 1110], "flat": [227, 422, 489, 541, 597, 642], "flatfil": 224, "flatten": 878, "float": [84, 88, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 148, 149, 150, 151, 154, 218, 220, 227, 229, 230, 234, 363, 380, 405, 411, 412, 426, 428, 475, 493, 495, 526, 545, 547, 580, 586, 587, 601, 603, 635, 646, 648, 670, 672, 684, 685, 689, 694, 698, 699, 703, 706, 707, 708, 722, 747, 761, 763, 765, 767, 780, 824, 869, 885, 887, 888, 889, 893, 916, 917, 919, 920, 931, 947, 950, 958, 973, 981, 982, 983, 988, 989, 998, 1001, 1020, 1022, 1031, 1042, 1047], "float32": [218, 223, 763, 948], "float64": [1, 92, 218, 223, 400, 470, 521, 575, 633, 689, 755, 763, 858, 916, 950], "flush": 277, "fmet": 451, "fn": 1068, "focu": 237, "focus": [363, 881], "fold": [694, 1105], "folder": 1068, "follow": [1, 89, 90, 92, 104, 111, 116, 117, 134, 148, 149, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 298, 363, 382, 389, 417, 419, 460, 485, 487, 504, 511, 536, 538, 557, 564, 592, 594, 616, 623, 639, 640, 658, 666, 687, 688, 689, 692, 693, 695, 696, 697, 701, 703, 704, 707, 712, 736, 759, 760, 761, 763, 764, 768, 869, 873, 888, 977, 1015, 1071, 1105, 1110, 1112], "foo": [228, 234, 308, 616, 893, 906, 907, 916, 917, 932, 942, 950, 952, 953, 1069, 1112], "foobar": [907, 1112], "foral": [692, 693], "foraminifera": 108, "ford": 134, "form": [1, 65, 98, 279, 658, 708, 712, 732, 736, 755, 901, 902, 911, 915, 952, 1022, 1031], "formal": [226, 236, 686], "format": [3, 45, 93, 97, 177, 178, 190, 191, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 295, 298, 324, 326, 342, 345, 360, 363, 376, 378, 379, 381, 431, 436, 440, 441, 449, 498, 502, 503, 550, 555, 556, 606, 612, 615, 650, 653, 675, 676, 682, 708, 725, 726, 731, 732, 744, 749, 751, 752, 758, 790, 823, 834, 870, 872, 890, 911, 915, 916, 917, 918, 941, 948, 950, 951, 952, 956, 957, 976, 978, 996, 1016, 1040, 1043, 1109, 1110], "format_f": 950, "format_nam": [263, 264, 265], "format_object": 261, "format_url": 917, "format_vers": [219, 890, 916, 950, 957], "formatidentificationwarn": [269, 273], "former": 654, "formula": [118, 763], "forum": 234, "forward": [1, 439, 451, 452, 614], "fould": 981, "found": [53, 143, 219, 221, 224, 225, 226, 227, 230, 232, 235, 269, 271, 273, 275, 435, 501, 554, 611, 652, 668, 721, 746, 760, 761, 763, 888, 916, 950, 981, 991, 992, 993, 994, 1005, 1007, 1024, 1042], "foundat": 226, "four": [65, 226, 235, 382, 504, 557, 689, 869], "fourth": [3, 136], "fr": 1042, "frac": [107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 135, 136, 137, 141, 144, 145, 687, 688, 692, 697, 698, 699, 701, 702, 703, 704, 761, 881], "fraction": [108, 685, 888, 919, 982, 1110], "fraction_diff": [405, 475, 526, 580, 635], "fraction_sam": [405, 475, 526, 580, 635], "frame": [214, 220, 221, 439, 451, 452, 614, 694, 760, 996], "framework": [134, 686, 1041], "free": [236, 1070, 1112], "freedom": [694, 700, 706, 878, 885], "freq": [409, 424, 479, 491, 530, 543, 584, 599, 637, 644], "frequenc": [1, 84, 88, 106, 107, 119, 411, 412, 424, 426, 428, 491, 493, 495, 543, 545, 547, 586, 587, 599, 601, 603, 644, 646, 648, 884, 886, 888, 958, 978], "frequent": [893, 958, 980], "friedman": 689, "friedmanchisquar": 689, "from": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 44, 45, 46, 47, 48, 50, 51, 52, 53, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 112, 114, 116, 123, 134, 138, 143, 144, 148, 149, 166, 177, 179, 190, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 248, 249, 250, 269, 273, 289, 296, 297, 298, 307, 308, 320, 321, 324, 327, 336, 343, 344, 354, 361, 362, 363, 376, 377, 378, 380, 382, 383, 384, 387, 389, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 451, 452, 453, 454, 455, 458, 460, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504, 505, 506, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 557, 558, 559, 562, 564, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 621, 623, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 658, 665, 666, 669, 670, 672, 674, 675, 677, 678, 679, 681, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 712, 719, 722, 724, 725, 727, 728, 730, 736, 743, 747, 750, 751, 753, 754, 755, 757, 759, 760, 761, 763, 764, 765, 767, 768, 769, 857, 858, 869, 870, 873, 874, 876, 877, 879, 884, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 955, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1049, 1069, 1071, 1107, 1110, 1112], "from_": [665, 719, 743], "from_dict": [96, 759, 763, 768, 869, 886, 887], "from_hdf5": 950, "from_iter": 683, "from_ncbi": [441, 442, 451, 452, 613, 614], "from_path_seq": [16, 48], "from_tabular": [3, 17], "from_taxdump": 997, "from_taxonomi": [996, 1032], "front": [325, 704], "frontier": 134, "frozenset": [980, 1026, 1027], "fsvd": [763, 879], "ft_current": 298, "ftp": [224, 236, 298], "full": [124, 125, 222, 223, 689, 893, 906, 928, 994, 1068], "full_genome_avail": [914, 939], "fulli": [3, 134, 227, 1105], "fun": 1112, "func": [918, 942, 980, 993, 1018, 1024, 1035, 1050, 1083, 1094], "function": [1, 98, 99, 100, 106, 116, 117, 124, 125, 130, 133, 148, 149, 150, 151, 154, 225, 226, 233, 248, 249, 250, 263, 264, 265, 268, 298, 308, 320, 382, 405, 441, 475, 504, 526, 557, 580, 635, 654, 670, 677, 684, 687, 688, 689, 692, 693, 694, 695, 696, 699, 704, 722, 727, 747, 753, 760, 761, 762, 763, 764, 765, 768, 857, 871, 874, 883, 886, 887, 888, 890, 906, 911, 914, 916, 918, 931, 939, 942, 944, 950, 951, 952, 953, 957, 976, 980, 983, 988, 993, 1018, 1024, 1032, 1035, 1043, 1045, 1047, 1048, 1049, 1050, 1068, 1070, 1082, 1083, 1093, 1094, 1105, 1106, 1107, 1110], "further": [237, 363, 887, 1110], "futher": 237, "futur": [116, 134, 148, 149, 225], "fuzzi": [228, 298, 299, 307, 308, 319, 320, 616], "g": [0, 1, 53, 70, 84, 85, 92, 100, 103, 118, 123, 130, 134, 151, 154, 220, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 298, 327, 363, 376, 382, 389, 392, 397, 400, 401, 408, 409, 410, 411, 412, 422, 460, 463, 468, 470, 471, 478, 479, 480, 489, 504, 511, 514, 519, 521, 522, 529, 530, 531, 541, 557, 564, 567, 572, 575, 576, 583, 584, 585, 586, 587, 597, 616, 623, 626, 631, 633, 634, 636, 637, 642, 654, 658, 666, 672, 684, 689, 704, 707, 708, 712, 732, 736, 755, 759, 760, 762, 763, 869, 887, 888, 916, 933, 946, 950, 958, 979, 980, 985, 988, 992, 1020, 1021, 1022, 1023, 1025, 1026, 1032, 1035, 1036, 1037, 1039, 1042, 1070, 1105, 1107, 1110, 1112], "g1": 763, "g2": 763, "g_m": 692, "ga": [616, 1107], "gaa": 1107, "gaagcaatgc": 224, "gaagttgagt": 224, "gaatcaagcc": 224, "gabor": [53, 104], "gac": [423, 490, 542, 598, 643], "gacccgcuuu": 1107, "gacg": [423, 490, 542, 598, 643], "gacgtt": [414, 415, 482, 483, 533, 534, 589, 590], "gag": [435, 501, 554, 611, 652], "gagatagagt": 224, "gagcccgggc": [225, 232], "gagccgtggc": [225, 232], "gagcggaggc": 224, "gaggacttcg": 224, "gaggtattgg": 224, "gagrctc": [435, 501, 554, 611, 652], "gain": [363, 707, 879], "gair": 225, "gairaagccttggc": 232, "gamma": 107, "gap": [0, 3, 13, 15, 17, 19, 34, 44, 47, 52, 53, 83, 84, 88, 92, 98, 99, 100, 101, 102, 103, 166, 179, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 382, 399, 400, 403, 406, 407, 411, 412, 415, 422, 433, 434, 435, 437, 438, 439, 441, 451, 452, 453, 470, 473, 476, 477, 483, 489, 500, 501, 504, 521, 524, 527, 528, 534, 541, 553, 554, 557, 574, 575, 578, 581, 582, 586, 587, 590, 597, 608, 609, 610, 611, 613, 614, 616, 633, 642, 652, 684, 1032, 1107, 1112], "gap_char": [403, 453, 473, 524, 578], "gap_charact": [435, 501, 554, 611, 652], "gap_extend_penalti": [53, 98, 99, 100, 101, 102, 103], "gap_mod": 84, "gap_open_penalti": [53, 98, 99, 100, 101, 102, 103], "gapopen": [220, 221], "garbag": 277, "gardnerella": 888, "garrison": [53, 104], "gascuel": [1041, 1043, 1044], "gaston": 116, "gataccttca": 224, "gatcacttga": 224, "gatcttcccc": 224, "gatgcaacac": 224, "gather": [681, 730, 757, 1110], "gattattcta": 224, "gattttcgag": 224, "gauu": [427, 429, 494, 496, 546, 548, 602, 604, 647, 649], "gb": [221, 227], "gb_str": 227, "gbk": 227, "gc": [83, 224, 225, 226, 227, 228, 236, 382, 399, 400, 403, 406, 412, 433, 437, 442, 452, 470, 473, 476, 521, 524, 527, 557, 574, 575, 578, 581, 587, 608, 609, 633, 1107], "gc_content": [412, 587], "gc_frequenc": [411, 586], "gcaattttca": 224, "gcacatccct": 227, "gcacaucccu": 227, "gcagaagctg": 224, "gcagatgtg": 685, "gcatgcatgc": 228, "gcatggtcat": 224, "gcaugcaucugcauacguacguacgcaugca": 222, "gcaugcaucugcauacguacguacgcaugcagucgauacauacguacgucgguacgu": 222, "gcaugcaucugcauacguacguacgcaugcauca": 222, "gccaaaccca": 224, "gcccagtagcttcccaatatgagagcatcaattgtagatcgggcc": 0, "gccccccuuu": 1107, "gcgtatagtt": 224, "gcgtgcctaaggtatgcaag": 0, "gctaactaggctcccttctacccctctcagaga": 0, "gctgccgaga": 224, "gctgttattt": 224, "gcttcatctt": 224, "gen": [228, 1112], "gen1": 228, "gen2": 228, "gena": 298, "genbank": [224, 228, 236, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653], "gender": [707, 886, 887], "gene": [1, 228, 298, 308, 320, 323, 382, 616, 694, 700, 706, 890, 957, 1106], "gene_nam": 298, "genea": 903, "geneb": 903, "gener": [1, 14, 18, 19, 46, 50, 51, 52, 82, 85, 98, 104, 105, 106, 121, 126, 134, 136, 145, 151, 223, 226, 227, 228, 230, 235, 236, 248, 250, 263, 265, 269, 273, 276, 408, 422, 423, 478, 489, 490, 529, 541, 542, 583, 597, 598, 616, 636, 642, 643, 654, 694, 707, 759, 760, 761, 765, 857, 859, 869, 873, 884, 887, 888, 889, 916, 926, 927, 935, 939, 950, 1038, 1105, 1107, 1111], "generated_bi": [890, 917, 950, 951, 957], "generatortyp": [926, 928, 939], "genet": [225, 230, 232, 236, 438, 439, 441, 442, 448, 449, 450, 451, 452, 613, 614, 766, 1042, 1107], "genetic_cod": [613, 614], "geneticcod": [439, 613, 614, 1107], "genom": [1, 308], "genpept": 227, "gentil": 704, "genu": [1, 236], "geologi": 686, "geometr": [690, 692, 694, 704, 763], "geometri": [686, 688, 692, 693, 696], "geq": 881, "gerald": 704, "get": [105, 219, 223, 234, 277, 278, 307, 308, 441, 450, 707, 761, 857, 874, 914, 921, 922, 923, 924, 930, 932, 934, 936, 937, 955, 985, 1026], "get_alpha_diversity_metr": [1, 146, 153], "get_beta_diversity_metr": [1, 150, 152, 154], "get_column": 375, "get_id": [289, 290, 294, 336, 337, 341, 354, 355, 359, 373, 374], "get_max_dist": 989, "get_nam": 666, "get_trajectori": 768, "get_value_by_id": 909, "getaaafhwqaaf": 233, "getvalu": [222, 225, 226, 227, 228, 232, 235, 707], "gff": 228, "gff3": [227, 324, 326, 431, 440, 498, 503, 650, 653], "gff_str": 228, "gfgmvinn": 235, "gfp": 1107, "gfv": 235, "gg": [401, 407, 471, 477, 522, 528, 576, 582, 634], "gg_otu_1": [916, 917], "gg_otu_2": 917, "gg_otu_3": 917, "gg_otu_4": 917, "gg_otu_5": 917, "gga": 1107, "ggaa": [400, 470, 521, 575, 633], "ggacugaa": 1107, "ggag": [407, 477, 528, 582], "ggattgttta": 224, "ggca": 0, "ggctaacggt": 224, "ggg": 1107, "ggggagg": [407, 477, 528, 582], "gggtttttac": 224, "ggt": [235, 432, 499, 551, 607, 651], "ggta": 0, "ggtaccaacg": [432, 499, 551, 607, 651], "ggtacgcaag": 0, "ggtc": [403, 473, 524, 578], "ggtccattc": [403, 473, 524, 578], "ggtggtttct": 224, "ggtgtttagc": 224, "ggtt": 910, "ggu": [384, 455, 506, 559, 618], "gguc": [392, 394, 397, 405, 426, 427, 428, 429, 463, 465, 468, 475, 493, 494, 495, 496, 514, 516, 519, 526, 545, 546, 547, 548, 567, 569, 572, 580, 601, 602, 603, 604, 626, 628, 631, 635, 646, 647, 648, 649], "ggucg": [389, 401, 460, 471, 511, 522, 564, 576, 623, 634], "ggucguaaagga": [398, 469, 520, 573, 632], "ggucgugaag": 616, "ggucgugaagga": [384, 389, 455, 460, 506, 511, 559, 564, 616, 618, 623], "gi": [220, 221, 227], "gibb": 145, "gigasci": [869, 890, 957], "gilk": 767, "gini": [118, 139], "gish": [220, 221], "github": 869, "give": [1, 230, 873, 874, 881, 890, 957, 983, 1020], "given": [1, 13, 14, 15, 45, 46, 47, 93, 97, 107, 118, 121, 123, 130, 137, 141, 145, 146, 150, 151, 154, 177, 178, 190, 191, 215, 225, 226, 230, 231, 234, 248, 250, 266, 267, 269, 270, 273, 274, 321, 324, 326, 378, 381, 431, 435, 440, 498, 501, 503, 550, 554, 556, 606, 611, 615, 650, 652, 653, 670, 675, 682, 704, 722, 725, 731, 747, 751, 758, 760, 761, 764, 870, 872, 874, 878, 883, 885, 887, 921, 923, 931, 939, 941, 955, 956, 958, 993, 1016, 1020, 1022, 1037, 1038, 1039, 1040, 1041, 1069, 1070, 1082, 1112], "gkp1137": 226, "glahn": [686, 700, 706], "gln": 504, "global": [0, 98, 99, 100], "global_pairwise_align": [99, 100, 101, 102, 103], "global_pairwise_align_nucelotid": [98, 100, 101, 102, 103], "global_pairwise_align_nucleotid": 0, "global_pairwise_align_protein": [98, 99, 101, 102, 103], "glossari": 84, "glu": 504, "glucosidas": 224, "glutam": 504, "glutamin": 504, "glx": 504, "gly": 504, "glycin": [84, 504], "glycosyl": [422, 489, 528, 541, 597, 642, 1107], "go": [888, 946, 1110, 1112], "goa": 224, "goal": [234, 1105], "goldman": 134, "gonzalez": 869, "good": [106, 115, 119, 879], "goodrich": 981, "goods_coverag": [115, 137], "googl": 234, "gorilla": [225, 232], "gorlick": 235, "goto": 226, "gouet": [124, 125], "gov": [84, 99, 100, 102, 103, 220, 221, 225, 227, 233, 236, 441, 449, 450], "gracilibacteria": 441, "gradient": [118, 858, 873, 874, 879, 881], "gradientanova": [769, 791, 835, 846], "gradientanovaresult": [779, 801, 812, 845, 856], "graft": 1034, "gram": [695, 696], "grammar": [453, 616], "grammaredsequ": [65, 75, 80, 82, 85, 86, 98, 101, 222, 225, 232, 235, 382, 403, 406, 434, 504, 524, 527, 553, 557, 578, 581, 610, 1107], "grand": 958, "grant": [225, 232], "great": 106, "greater": [225, 308, 383, 454, 505, 558, 617, 694, 759, 761, 762, 763, 764, 767, 887, 888, 889, 922], "greedi": 1041, "grei": 869, "group": [1, 143, 234, 436, 502, 555, 612, 665, 689, 694, 704, 719, 743, 759, 762, 763, 768, 769, 779, 780, 801, 812, 824, 834, 835, 845, 856, 858, 886, 887, 888, 901, 916, 921, 939, 950, 1070, 1106, 1110], "group1": 759, "group2": 759, "group3": 759, "group_md": 901, "group_observation_md": 921, "groupbi": 887, "groupresult": 780, "growth": [694, 887], "gsi": 704, "gt": [17, 91, 119], "gt10": 224, "gtaacctgag": 224, "gtaag": 3, "gtacct": [222, 232], "gtagaggacc": 224, "gtagct": [222, 232], "gtatct": 232, "gtcgaa": [222, 232], "gtt": [423, 490, 542, 598, 643], "gttaatgcca": 224, "gttactcaac": 224, "gttcggcctc": 224, "gttgaccaat": 224, "gttgggatta": 224, "gtttatccaa": 224, "guaaccugag": 224, "guanin": [382, 557], "guarante": [92, 125, 234, 382, 406, 476, 504, 527, 557, 581, 708, 765, 988], "guc": [389, 460, 511, 564, 623], "gucgauacauacguacgucgguacgu": 222, "gucgauacauacguacgucguacguacgu": 222, "guess": [93, 130, 177, 190, 225, 269, 273, 324, 378, 431, 498, 550, 606, 650, 675, 725, 751, 870, 941, 1016, 1046], "gunnerida": 224, "gut": [1, 234, 869], "gytai": 235, "gzip": [277, 950], "h": [53, 107, 108, 112, 114, 120, 121, 122, 134, 135, 137, 138, 139, 141, 145, 225, 232, 235, 278, 382, 504, 557, 979, 980, 985, 988, 1020, 1021, 1023, 1026, 1027, 1036, 1037, 1039, 1042, 1110], "h5grp": [916, 950], "h5py": [916, 950], "h_": 689, "h_0": 118, "h_b": 109, "h_i": 118, "h_n": 118, "ha": [1, 3, 53, 65, 83, 89, 90, 98, 99, 100, 105, 154, 166, 179, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 270, 274, 277, 294, 341, 359, 363, 376, 382, 399, 400, 403, 406, 416, 417, 418, 419, 430, 433, 437, 438, 439, 441, 451, 452, 453, 470, 473, 476, 484, 485, 486, 487, 497, 504, 521, 524, 527, 535, 536, 537, 538, 549, 557, 574, 575, 578, 581, 591, 592, 593, 594, 605, 608, 609, 613, 614, 616, 633, 638, 639, 640, 689, 691, 707, 857, 873, 875, 886, 887, 888, 906, 914, 931, 979, 999, 1001, 1003, 1004, 1018, 1020, 1023, 1036, 1039, 1042, 1070, 1107, 1110], "habitat": 874, "had": [116, 148, 149, 759, 763, 888], "half": [123, 701], "halobacteria": [997, 1032], "ham": [405, 475, 526, 580, 635, 707, 1107], "hamadi": [116, 148, 149], "hand": [1, 879], "handbook": 225, "handi": [1070, 1112], "handl": [84, 92, 225, 226, 233, 235, 236, 237, 238, 248, 250, 277, 363, 376, 451, 452, 689, 761, 763, 764, 884, 893, 906, 931, 940, 1033, 1043, 1069, 1112], "handler": [238, 269, 271, 273, 275, 277], "happen": [230, 422, 489, 541, 597, 642, 1042, 1112], "hard": [116, 146, 148, 149, 150], "hardcod": 115, "harm": 701, "has_children": [1003, 1004], "has_definit": [402, 404, 414, 418, 430, 472, 474, 482, 486, 497, 523, 525, 533, 537, 549, 577, 579, 589, 593, 605], "has_degener": [404, 413, 418, 474, 481, 486, 525, 532, 537, 579, 588, 593], "has_gap": [410, 480, 531, 585], "has_missing_valu": [289, 291, 336, 338, 354, 356], "has_nuc_pattern": 1112, "has_stop": 552, "hash": [8, 26, 39, 59, 160, 171, 184, 197, 208, 243, 256, 774, 785, 796, 807, 818, 829, 840, 851, 864, 966, 1057, 1076, 1088, 1099], "hashabl": [65, 67, 857, 1093], "hashlib": 1069, "hasn": [616, 889, 953], "have": [0, 1, 19, 52, 53, 83, 86, 88, 91, 92, 104, 106, 116, 123, 135, 141, 148, 149, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 268, 277, 298, 308, 309, 310, 363, 372, 377, 387, 400, 406, 422, 451, 458, 470, 476, 489, 509, 521, 527, 541, 562, 575, 581, 597, 621, 633, 642, 656, 672, 689, 705, 707, 710, 734, 761, 767, 768, 790, 802, 823, 834, 857, 869, 873, 874, 875, 878, 879, 881, 882, 884, 886, 887, 888, 889, 914, 916, 931, 932, 933, 946, 950, 955, 958, 977, 978, 979, 988, 990, 991, 1015, 1020, 1021, 1022, 1029, 1031, 1032, 1036, 1037, 1041, 1044, 1045, 1047, 1110, 1112], "hcdt": 145, "hdf5": [218, 219, 223, 890, 916, 950, 957], "hdfgroup": 218, "hdist": 767, "he": 0, "header": [220, 221, 222, 226, 227, 229, 231, 234, 281, 287, 328, 334, 346, 352, 363, 364, 370, 375, 911, 915], "header_kei": [911, 952], "header_valu": [911, 952], "heagawghe": 0, "health": [689, 886, 887], "healthi": [886, 887, 888], "heatmap": [674, 724, 750], "heip": [120, 128], "heip_": 135, "held": 946, "hello": [398, 469, 520, 573, 632], "help": [234, 236, 1022], "helper": [6, 24, 37, 57, 73, 158, 169, 182, 195, 206, 241, 254, 283, 301, 313, 330, 348, 366, 390, 444, 461, 512, 565, 624, 659, 713, 737, 772, 783, 794, 805, 816, 827, 838, 849, 862, 894, 964, 1047, 1048, 1055, 1074, 1086, 1097, 1110], "henc": 761, "henikoff": [100, 103, 666], "here": [0, 1, 84, 107, 111, 116, 123, 130, 141, 146, 147, 148, 149, 150, 151, 152, 153, 219, 223, 224, 227, 232, 237, 248, 250, 278, 422, 489, 541, 597, 642, 689, 694, 767, 879, 881, 916, 950, 1033, 1043, 1110], "hernand": 704, "heterogen": 880, "heuer": 226, "heurist": [53, 763, 879], "hexdigest": 1069, "hgc": 236, "hi": 504, "hidden": 236, "hierarch": [236, 704], "hierarchi": [906, 995, 996, 1110], "high": [116, 148, 149, 225, 226, 694, 858, 869, 873, 879, 997, 1108], "higher": [84, 106, 654, 689, 694, 1082], "highest": [53, 230], "highli": [3, 84], "highlight": 226, "hill": [122, 134, 136, 138], "histidin": 504, "histor": [1, 132, 441], "histori": [116, 888], "hit": 221, "hoc": 884, "hochberg": [689, 694], "hoffmann": 134, "hold": [732, 779, 801, 812, 845, 856, 857, 879, 886, 947, 986, 1093], "hollow": [150, 218, 708, 747, 749, 765], "holm": [689, 694], "hommola": 767, "homogen": [763, 873, 881], "homolog": 654, "horizont": 92, "host": [236, 767], "host_dist": 767, "hot": 858, "hotton": 236, "hous": 886, "how": [80, 91, 92, 130, 225, 227, 234, 277, 327, 363, 400, 422, 434, 451, 452, 470, 489, 500, 521, 541, 553, 575, 597, 610, 633, 642, 700, 706, 761, 879, 884, 886, 887, 888, 890, 912, 931, 957, 1105, 1112], "howev": [1, 116, 117, 134, 146, 148, 149, 150, 225, 229, 230, 234, 236, 382, 504, 557, 616, 686, 694, 763, 767, 858, 879, 893, 953, 989, 1050], "hsp": [220, 221], "hstack": [886, 887], "htm": 760, "html": [84, 123, 219, 220, 222, 225, 227, 230, 232, 235, 298, 676, 708, 726, 732, 744, 752, 759, 760, 761, 762, 763, 869, 890, 916, 950, 957, 1042], "http": [53, 84, 98, 99, 100, 101, 102, 103, 104, 106, 107, 111, 123, 151, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 295, 342, 360, 363, 376, 379, 441, 449, 450, 676, 700, 704, 706, 708, 726, 732, 744, 752, 759, 760, 761, 762, 763, 869, 890, 916, 917, 950, 957, 1042, 1043, 1069], "huerta": 978, "hugh": 224, "human": [218, 225, 226, 229, 230, 231, 1041, 1044, 1049], "hundr": [1, 151], "hurlbert": [114, 139], "hwang": 107, "hydrogenosom": 236, "hypothesi": [686, 689, 694, 761, 764, 767, 884], "hypothet": 298, "h\u00e9bert": 704, "i": [0, 1, 3, 15, 19, 20, 47, 50, 52, 53, 65, 66, 67, 68, 69, 70, 72, 77, 79, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 177, 178, 190, 191, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 248, 249, 250, 262, 263, 265, 269, 270, 271, 272, 273, 274, 275, 277, 281, 287, 295, 298, 299, 305, 307, 308, 311, 317, 319, 320, 321, 322, 324, 326, 327, 328, 334, 342, 346, 352, 360, 363, 364, 370, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 451, 452, 453, 454, 455, 456, 457, 458, 460, 467, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 518, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 623, 630, 633, 634, 635, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 663, 665, 668, 673, 674, 675, 676, 680, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 717, 719, 721, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 736, 741, 743, 744, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 767, 790, 802, 823, 834, 835, 846, 857, 858, 868, 869, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 893, 900, 903, 906, 907, 910, 911, 913, 914, 915, 916, 922, 925, 926, 927, 928, 931, 932, 933, 939, 940, 941, 942, 943, 946, 947, 950, 951, 952, 953, 954, 955, 956, 957, 958, 963, 973, 976, 978, 980, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 998, 1000, 1001, 1003, 1004, 1005, 1007, 1009, 1010, 1012, 1015, 1016, 1020, 1021, 1022, 1024, 1026, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1054, 1067, 1068, 1069, 1070, 1071, 1081, 1082, 1093, 1104, 1105, 1107, 1110, 1111, 1112], "id": [0, 1, 65, 70, 89, 94, 95, 116, 134, 146, 148, 149, 150, 151, 154, 155, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 281, 287, 290, 291, 293, 296, 297, 328, 334, 337, 338, 340, 343, 344, 346, 352, 355, 356, 358, 361, 362, 363, 364, 370, 372, 373, 375, 377, 380, 387, 396, 398, 417, 438, 439, 441, 450, 451, 452, 458, 467, 469, 485, 509, 518, 520, 536, 562, 571, 573, 592, 613, 614, 616, 621, 630, 632, 639, 655, 656, 658, 664, 665, 668, 670, 673, 677, 678, 681, 700, 707, 708, 709, 710, 712, 718, 719, 721, 722, 723, 727, 728, 730, 732, 733, 734, 736, 742, 743, 746, 747, 748, 749, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 802, 846, 859, 868, 869, 871, 886, 887, 888, 891, 900, 902, 903, 904, 905, 906, 907, 909, 910, 911, 913, 914, 915, 916, 917, 920, 922, 924, 926, 931, 932, 933, 937, 939, 940, 944, 945, 946, 949, 950, 952, 953, 954, 955, 977, 984, 994, 996, 997, 1000, 1029, 1031, 1043, 1107], "id1": 234, "id2": 234, "id3": 234, "id_": [906, 914, 939, 953], "id_head": [296, 297, 343, 344, 361, 362, 375, 377, 380], "id_i": 928, "id_index": 1031, "id_j": 928, "id_list": 995, "id_map": 955, "id_pair": 154, "id_whitespace_replac": [225, 226], "idea": 887, "ideal": 237, "ident": [1, 220, 221, 230, 234, 658, 712, 732, 736, 767, 983, 1017, 1037, 1110], "identif": 101, "identifi": [95, 146, 150, 151, 154, 218, 222, 225, 226, 227, 228, 229, 232, 235, 236, 323, 363, 407, 528, 582, 707, 764, 884, 888, 924, 932, 955, 1105], "idptr": 223, "ids_to_keep": [290, 337, 355, 373, 914], "idx": [435, 501, 554, 611, 652], "ie": [412, 587], "igkeeiqqrl": 223, "ignor": [53, 84, 107, 116, 148, 149, 221, 222, 224, 225, 226, 229, 230, 234, 237, 372, 407, 408, 451, 452, 477, 478, 528, 529, 582, 583, 636, 668, 721, 746, 759, 760, 761, 762, 763, 879, 886, 887, 939, 950, 988, 1008, 1048, 1070, 1071, 1107, 1110, 1112], "ignore_axis_label": 1048, "ignore_direction": 1048, "ignore_metadata": 91, "ignore_method_nam": 1048, "ignore_non": 939, "ii": 884, "iii": 124, "ij": 761, "il": 504, "illumina": [226, 233], "illumina1": [226, 233], "illumina_1": 233, "illustr": [616, 759, 763], "iloc": 72, "ilr": [686, 696, 705], "ilr_inv": 705, "im": [228, 308, 320], "im1": 320, "im2": 320, "imagin": 230, "immedi": [225, 232, 1000], "immut": [616, 1107], "implement": [0, 1, 98, 101, 106, 107, 111, 116, 123, 141, 147, 148, 149, 152, 153, 226, 230, 234, 237, 248, 249, 250, 251, 277, 363, 704, 858, 873, 874, 879, 880, 951, 952, 981, 1042, 1044, 1045], "impli": [84, 277, 767], "implicit": 931, "implicitli": [219, 223], "import": [0, 1, 3, 13, 14, 15, 17, 18, 19, 45, 46, 47, 50, 51, 52, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 112, 116, 134, 148, 149, 166, 179, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 248, 249, 250, 298, 308, 320, 382, 383, 384, 387, 389, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 441, 451, 452, 453, 454, 455, 458, 460, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 504, 505, 506, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 557, 558, 559, 562, 564, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 621, 623, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 654, 665, 666, 669, 672, 674, 677, 678, 681, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 719, 724, 727, 728, 730, 743, 750, 753, 754, 755, 757, 759, 760, 761, 763, 764, 767, 768, 857, 858, 869, 884, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 952, 953, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1044, 1049, 1069, 1105, 1107, 1110, 1112], "import_modul": 237, "impos": [116, 148, 149], "improv": [91, 230, 232, 382, 504, 557, 747], "impur": 139, "imput": [686, 698], "incid": 767, "includ": [1, 84, 91, 93, 97, 105, 106, 116, 134, 136, 145, 148, 149, 153, 154, 177, 178, 190, 191, 222, 223, 224, 225, 226, 229, 230, 231, 232, 234, 235, 280, 295, 324, 326, 327, 342, 345, 360, 363, 364, 370, 375, 377, 378, 379, 381, 389, 398, 403, 411, 412, 422, 431, 435, 437, 438, 439, 440, 451, 452, 460, 469, 473, 489, 498, 501, 503, 511, 520, 524, 541, 550, 554, 556, 557, 564, 573, 578, 586, 587, 597, 606, 609, 611, 613, 614, 615, 623, 632, 642, 650, 652, 653, 654, 664, 666, 675, 677, 682, 689, 707, 718, 725, 727, 731, 742, 747, 751, 753, 755, 758, 759, 760, 762, 763, 764, 768, 868, 869, 870, 871, 872, 874, 879, 880, 884, 888, 906, 911, 941, 948, 949, 954, 956, 973, 974, 976, 1001, 1006, 1008, 1009, 1012, 1013, 1014, 1016, 1020, 1021, 1022, 1030, 1032, 1033, 1040, 1105, 1106, 1107, 1108, 1110, 1111], "include_collapsed_metadata": 906, "include_self": [980, 1006, 1009, 1012, 1013, 1014, 1030, 1033, 1110], "inclus": [277, 298, 319, 401, 420, 471, 488, 522, 540, 576, 595, 634, 641, 760], "incom": 978, "incomplet": [106, 382, 453, 504, 557, 616], "inconsist": 669, "incorpor": [1, 134, 685], "incorrect": 1, "incorrectli": 915, "increas": [694, 707, 708, 764, 765, 767, 857, 884, 887, 906, 953], "incub": 887, "ind": [884, 888], "inde": 767, "independ": [138, 439, 452, 614, 767, 779, 780, 801, 812, 845, 856, 931, 1033], "index": [0, 1, 14, 15, 18, 46, 47, 51, 65, 67, 70, 72, 79, 82, 85, 86, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 112, 114, 118, 120, 121, 122, 123, 126, 127, 129, 135, 136, 138, 139, 140, 141, 144, 145, 146, 155, 214, 222, 223, 225, 232, 233, 235, 292, 296, 297, 339, 343, 344, 357, 361, 362, 363, 380, 389, 419, 460, 487, 511, 538, 564, 594, 623, 640, 655, 658, 678, 687, 688, 689, 694, 707, 709, 712, 728, 733, 736, 754, 755, 759, 760, 761, 762, 763, 768, 802, 846, 859, 869, 886, 893, 904, 906, 916, 932, 933, 936, 949, 950, 1000, 1011, 1012, 1031, 1042, 1047], "indexerror": [893, 922], "indic": [1, 3, 15, 19, 33, 47, 52, 66, 67, 70, 79, 89, 90, 107, 110, 111, 128, 134, 154, 218, 225, 226, 234, 237, 281, 287, 298, 299, 305, 308, 311, 317, 328, 334, 346, 352, 363, 364, 370, 384, 387, 389, 396, 402, 404, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 422, 427, 429, 430, 432, 435, 441, 442, 448, 455, 458, 460, 467, 472, 474, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 489, 494, 496, 497, 499, 501, 506, 509, 511, 518, 523, 525, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 546, 548, 549, 551, 552, 554, 559, 562, 564, 571, 577, 579, 582, 583, 585, 588, 589, 590, 591, 592, 593, 594, 597, 602, 604, 605, 607, 611, 618, 621, 623, 630, 636, 638, 639, 640, 642, 647, 649, 651, 652, 654, 689, 694, 705, 759, 761, 762, 763, 767, 857, 868, 869, 886, 916, 950, 993, 995, 1035, 1082, 1093, 1110, 1112], "indicatd": 1112, "indirectli": 1021, "indiscern": 732, "individu": [1, 3, 106, 107, 108, 109, 112, 115, 116, 117, 119, 123, 126, 127, 128, 129, 130, 135, 137, 139, 141, 144, 148, 149, 218, 223, 225, 363, 654, 689, 886, 893, 1112], "indptr": [916, 950], "ineffici": [893, 1045], "inekmtlva": 223, "ineleg": 1012, "inequ": [79, 287, 305, 317, 334, 352, 370, 396, 448, 467, 518, 571, 630, 732, 879], "inf": [19, 52, 117, 234, 1024], "infeas": 225, "infect": 888, "infer": [227, 234, 269, 273, 295, 342, 360, 376, 379, 1068, 1105], "infern": 235, "infin": [121, 136, 145, 234], "infinit": [112, 1024], "infinitum": 230, "influenc": 121, "info": [53, 104, 308, 768, 824], "inform": [53, 84, 93, 97, 109, 126, 134, 136, 138, 177, 178, 190, 191, 220, 221, 222, 224, 225, 226, 227, 233, 234, 236, 298, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 780, 824, 858, 870, 872, 881, 887, 888, 890, 906, 941, 956, 957, 1016, 1040, 1070, 1106, 1107, 1112], "infti": [121, 136, 145], "ingroup": 1022, "inher": [686, 767], "inherit": [236, 453, 616, 907], "inidic": [32, 53], "initi": [130, 225, 887, 1006, 1009, 1012, 1013, 1014, 1030, 1033, 1043, 1044, 1081], "initialize_st": 1112, "inlin": 234, "inner": [92, 230, 377, 400, 470, 521, 575, 633, 669], "inord": 1033, "inosin": 382, "inplac": [879, 914, 937, 938, 940, 943, 953, 955, 1024, 1044], "input": [98, 99, 100, 101, 102, 103, 104, 116, 134, 146, 148, 149, 150, 236, 248, 250, 277, 278, 308, 320, 405, 432, 451, 452, 475, 499, 526, 551, 580, 607, 635, 651, 683, 689, 694, 705, 708, 760, 761, 857, 869, 873, 874, 876, 880, 889, 915, 1034, 1041, 1042, 1043, 1044, 1104, 1107], "input_is_dens": 917, "ins": [3, 20, 34, 53, 65, 155, 166, 179, 192, 203, 238, 251, 280, 298, 308, 327, 345, 363, 382, 441, 453, 504, 557, 616, 654, 708, 732, 769, 780, 791, 802, 813, 824, 835, 846, 859, 890, 958, 1050, 1070, 1082, 1093], "insdc": [224, 227, 298, 327, 363, 376], "insensit": [234, 666, 689, 694], "insert": [230, 319, 979, 1020, 1022], "insert_length": 979, "insid": [227, 230], "insight": [148, 149], "insignific": 1, "instal": 1045, "instanc": [93, 97, 177, 178, 190, 191, 223, 237, 250, 263, 265, 266, 267, 269, 273, 308, 323, 324, 326, 378, 381, 400, 431, 440, 470, 498, 503, 521, 550, 556, 575, 606, 615, 633, 650, 653, 656, 666, 675, 682, 684, 685, 694, 708, 710, 725, 731, 732, 734, 749, 751, 758, 761, 763, 764, 765, 779, 801, 812, 845, 856, 869, 870, 872, 888, 889, 903, 907, 933, 941, 956, 958, 974, 1016, 1040, 1042, 1050, 1051, 1054, 1061, 1110, 1112], "instanti": [53, 224, 237, 453, 1112], "instead": [1, 88, 136, 224, 225, 227, 234, 237, 238, 248, 249, 250, 292, 321, 327, 339, 357, 409, 422, 424, 426, 428, 435, 479, 489, 491, 493, 495, 501, 530, 541, 543, 545, 547, 554, 584, 597, 599, 601, 603, 611, 637, 642, 644, 646, 648, 652, 708, 759, 761, 763, 878, 887, 888, 948, 949, 983, 984, 987, 1020, 1021, 1037, 1038, 1043, 1045, 1105], "institut": 226, "instruct": 1109, "instrument": 225, "int": [3, 13, 14, 15, 18, 19, 34, 45, 46, 47, 51, 52, 53, 77, 88, 95, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 154, 220, 227, 228, 233, 249, 277, 298, 308, 319, 323, 363, 389, 394, 401, 407, 408, 412, 420, 422, 423, 424, 426, 428, 432, 450, 460, 465, 471, 477, 478, 488, 489, 490, 491, 493, 495, 499, 511, 516, 522, 528, 529, 540, 541, 542, 543, 545, 547, 551, 564, 569, 576, 582, 583, 587, 595, 597, 598, 599, 601, 603, 607, 613, 614, 623, 628, 634, 636, 641, 642, 643, 644, 646, 648, 651, 672, 673, 685, 687, 688, 694, 700, 706, 723, 748, 759, 761, 762, 763, 764, 765, 767, 802, 846, 857, 869, 874, 878, 879, 881, 882, 885, 887, 888, 889, 906, 916, 922, 924, 946, 950, 958, 979, 983, 985, 994, 1000, 1001, 1010, 1011, 1020, 1022, 1024, 1036, 1042, 1048, 1049, 1069, 1082], "int32": [916, 950], "int64": [65, 83, 92, 399, 403, 433, 473, 524, 574, 578, 608, 616, 916, 950, 1107], "integ": [1, 53, 146, 150, 218, 220, 223, 225, 226, 229, 230, 231, 232, 233, 363, 389, 460, 511, 564, 623, 689, 694, 707, 708, 759, 762, 763, 764, 765, 846, 889], "intend": [1, 124, 125, 234, 382, 453, 504, 857, 869, 1047, 1048], "intens": 887, "interablemetadata": 320, "interact": [767, 1109], "interchang": [1041, 1043, 1044], "interest": [1, 234, 616, 689, 707, 767, 873, 881, 887, 1005, 1007, 1022, 1112], "interfac": [89, 90, 147, 234, 417, 419, 485, 487, 536, 538, 592, 594, 639, 640, 654, 759, 760, 761, 762, 1042, 1105], "interleav": [232, 235], "intermedi": 979, "intern": [95, 219, 227, 230, 705, 976, 978, 980, 986, 988, 991, 1000, 1010, 1015, 1032, 1034, 1035, 1036, 1105, 1110], "internet": [225, 236], "interpret": [1, 84, 112, 116, 137, 139, 146, 148, 149, 150, 218, 230, 234, 327, 363, 686, 873, 874, 881, 917], "interpro": 224, "interquantil": 123, "interrog": 1070, "intersect": [400, 470, 521, 575, 633, 931, 984], "interspecif": [114, 139], "interv": [106, 111, 115, 124, 224, 227, 228, 308, 309, 310, 311, 317, 319, 320, 321, 322, 323, 325, 382, 387, 399, 416, 437, 458, 484, 504, 509, 535, 557, 562, 574, 591, 616, 621, 638, 694, 885], "interval_metadata": [227, 228, 298, 308, 320, 323, 382, 387, 389, 416, 453, 458, 460, 484, 504, 509, 511, 535, 557, 562, 564, 591, 616, 621, 623, 638], "intervalmetadata": [228, 298, 307, 382, 504, 557, 616], "intracellular": 235, "introduc": [107, 118, 222, 225, 686], "intron": [425, 492, 544, 557, 600, 645], "intvl": 308, "inv_simpson": [114, 121, 136], "invalid": [1, 88, 92, 116, 134, 146, 148, 149, 150, 225, 376, 382, 504, 557, 760, 761, 869, 890, 957, 975, 980, 990, 1002, 1011, 1015], "invalidate_cach": [980, 986], "invent": 226, "invers": [84, 112, 114, 121, 122, 136, 688, 693, 696, 702], "inverse_shannon_uncertainti": 84, "invert": [422, 489, 541, 597, 642, 914], "investig": 1, "involv": [106, 134, 687], "inward": 123, "io": [1, 93, 97, 116, 148, 149, 177, 178, 190, 191, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 707, 725, 731, 751, 758, 869, 870, 872, 915, 918, 941, 956, 996, 1016, 1040, 1042, 1069, 1104, 1110], "io_registri": 237, "ionom": 704, "ioregistri": [237, 248, 250], "ipr001360": 224, "ipr013781": 224, "ipr017853": 224, "ipr033132": 224, "ipyparallel": 151, "ipython": 859, "irrelev": [98, 99, 100], "irsairagsnvkgfyawsfldcnewfagftvrfglnfvd": 224, "is_circular": 228, "is_reverse_compl": [433, 608], "is_root": [999, 1004, 1110], "is_tip": [980, 999, 1003, 1110], "is_zero_bas": 33, "ism": [116, 148, 149], "isn": [65, 82, 85, 92, 118, 234, 235, 248, 250, 278, 298, 695, 696, 889, 933], "isnapshgnakpsystnpmtnisfekhgiplgpraasiwiyvypymfiqedf": 224, "iso": [916, 950], "isoleucin": 504, "isometr": [686, 687, 688, 695, 696], "isometri": [692, 693, 695, 696], "isomorph": [230, 692, 693, 695, 696], "issu": [224, 225, 226, 234, 249, 1043, 1105], "isubsampl": 889, "item": [98, 99, 100, 101, 102, 103, 104, 235, 409, 432, 479, 499, 530, 551, 584, 607, 616, 637, 651, 665, 681, 719, 730, 743, 757, 857, 889, 910, 946, 980, 1024, 1031, 1032, 1070, 1071, 1081, 1112], "iter": [65, 75, 80, 85, 91, 98, 99, 100, 101, 102, 103, 104, 105, 146, 150, 151, 154, 214, 215, 216, 217, 223, 233, 290, 298, 319, 320, 321, 323, 337, 355, 373, 389, 392, 397, 400, 408, 422, 432, 435, 460, 463, 468, 470, 478, 489, 499, 501, 511, 514, 519, 521, 529, 541, 551, 554, 564, 567, 572, 575, 583, 597, 607, 611, 623, 626, 631, 633, 636, 642, 651, 652, 654, 665, 668, 670, 672, 681, 689, 719, 721, 722, 730, 743, 746, 747, 757, 760, 763, 764, 857, 869, 887, 888, 896, 906, 907, 914, 915, 916, 927, 928, 931, 939, 945, 953, 967, 984, 987, 988, 997, 1001, 1005, 1006, 1007, 1009, 1012, 1013, 1014, 1020, 1021, 1022, 1023, 1024, 1030, 1033, 1067, 1069, 1071, 1093, 1110, 1112], "iter_": [928, 1071], "iter_km": [409, 479, 530, 584, 637], "its": [1, 15, 47, 65, 82, 83, 85, 86, 89, 90, 91, 92, 98, 99, 100, 121, 132, 224, 225, 226, 227, 230, 231, 235, 237, 250, 277, 298, 308, 363, 377, 409, 416, 417, 419, 424, 479, 484, 485, 487, 491, 530, 535, 536, 538, 543, 584, 591, 592, 594, 599, 616, 637, 638, 639, 640, 644, 658, 666, 690, 712, 736, 760, 868, 873, 875, 878, 883, 914, 958, 980, 984, 1001, 1011, 1012, 1020, 1021, 1022, 1027, 1032, 1033, 1036, 1042, 1043, 1068, 1105, 1110], "itself": [166, 179, 192, 203, 225, 232, 236, 278, 298, 382, 441, 504, 557, 616, 654, 767, 859, 914, 938, 953, 958, 1107], "itypeerror": 150, "iupac": [225, 226, 232, 233, 382, 412, 441, 451, 504, 557, 587, 616, 1107], "iv": [123, 134], "j": [98, 100, 101, 103, 106, 114, 116, 119, 120, 130, 134, 135, 148, 149, 218, 220, 221, 225, 226, 227, 235, 236, 504, 665, 666, 681, 686, 695, 696, 697, 698, 700, 704, 706, 719, 730, 743, 757, 761, 762, 763, 874, 928, 988, 1021, 1036, 1041, 1042, 1044], "j00123": 227, "j04373": 235, "jag": 933, "jaim": 978, "januari": 136, "je": 767, "jet": 1, "jim": 226, "jj": [700, 706], "joe": 232, "join": [91, 220, 221, 226, 233, 235, 236, 377, 400, 470, 521, 575, 633, 907, 1032, 1041, 1042, 1043], "joint": 227, "joseph": [225, 232, 1110], "jost": [121, 134, 138], "journal": [53, 104, 107, 110, 117, 134, 135, 138, 141, 145, 227, 700, 706, 759], "json": [890, 917, 951, 957], "json_obj": 917, "json_tabl": 917, "juli": [53, 104], "julia": 981, "june": 230, "jupyt": 869, "just": [123, 124, 125, 130, 237, 900, 911, 928, 931, 952, 1023, 1036, 1105, 1110, 1112], "justif": 123, "jyzox": 226, "k": [53, 106, 107, 112, 119, 122, 134, 135, 136, 138, 139, 140, 141, 145, 151, 382, 409, 423, 424, 479, 490, 491, 504, 530, 542, 543, 557, 584, 598, 599, 637, 643, 644, 654, 666, 685, 704, 760, 767, 988, 1024, 1031, 1036, 1042], "k_": 884, "k__a": 906, "ka": 226, "kan": 236, "kannan": 236, "karsch": 236, "keemei": 234, "keep": [223, 227, 234, 321, 389, 460, 511, 564, 623, 857, 904, 905, 914, 926, 931, 1023], "kegg_pathwai": [916, 933, 950], "kei": [23, 65, 82, 85, 86, 89, 94, 105, 224, 225, 227, 235, 319, 323, 382, 406, 417, 425, 432, 476, 485, 492, 499, 504, 527, 536, 544, 551, 557, 581, 592, 600, 607, 616, 639, 645, 651, 670, 722, 747, 906, 910, 933, 955, 1010, 1031, 1042, 1112], "kellei": [148, 149], "kempton": 123, "kendalltau": 761, "kept": 227, "kestrel": 235, "keto": 382, "keyerror": [763, 933], "keyword": [93, 97, 104, 177, 178, 190, 191, 224, 227, 229, 249, 269, 270, 271, 273, 274, 275, 323, 324, 326, 378, 381, 425, 431, 438, 439, 440, 492, 498, 503, 544, 550, 556, 600, 606, 613, 614, 615, 645, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040], "khovanskaya": 236, "kill": 701, "kind": 873, "kinet": 130, "kingdom": [220, 221, 236], "kit": 1104, "kj": 116, "klein": 227, "kmer": [423, 424, 490, 491, 542, 543, 598, 599, 643, 644, 685], "kmer_frequ": [409, 479, 530, 584, 637], "knight": [114, 116, 148, 149, 869], "know": [1, 53, 116, 148, 149, 222, 225, 232, 235, 237, 689, 884, 1045, 1105], "knowledg": [1020, 1105], "known": [107, 139, 230, 269, 273, 704, 705, 874, 879, 1107], "kortlev": 235, "kqlaaargqr": 223, "kr": 759, "kruskal": [689, 887, 888], "kuo": 107, "kva": [439, 452, 614], "kw": 224, "kwarg": [93, 97, 104, 146, 150, 151, 154, 155, 166, 177, 178, 179, 190, 191, 192, 203, 248, 250, 262, 269, 270, 271, 272, 273, 274, 275, 278, 279, 324, 326, 378, 381, 431, 438, 439, 440, 498, 503, 550, 556, 606, 613, 614, 615, 650, 653, 654, 675, 682, 725, 731, 751, 758, 846, 870, 872, 890, 918, 941, 956, 1016, 1040, 1070, 1105], "kwarg1": 237, "kz": 226, "l": [53, 108, 109, 116, 121, 123, 124, 134, 138, 144, 224, 226, 236, 451, 504, 704, 761, 858, 873, 874, 881, 1032], "l1": 67, "l2": 67, "l3": 67, "lab": [869, 887], "label": [65, 67, 70, 72, 82, 85, 86, 92, 94, 95, 96, 222, 225, 227, 232, 234, 235, 674, 704, 707, 724, 750, 759, 760, 762, 763, 764, 859, 869, 939, 978, 1048], "labor": 887, "lack": 973, "lafond": 704, "lahaeavhvyktkyqayqkgkigitlvsnwlmplddnsipdikaaersldfq": 224, "lambda": [224, 857, 884, 887, 888, 906, 914, 918, 939, 942, 944, 953, 980, 993, 1015, 1018, 1024, 1035, 1042, 1043, 1112], "lane": 233, "lane_numb": 233, "langl": [695, 697], "languag": [2, 166, 223], "lapoint": 704, "larg": [53, 117, 123, 148, 149, 218, 225, 232, 698, 699, 760, 881, 887, 916, 976, 983], "larger": [84, 121, 887], "largest": [53, 144, 927, 940], "last": [83, 166, 224, 232, 422, 451, 489, 541, 597, 616, 642, 761, 858, 1112], "latent": [166, 192, 216, 217], "later": [226, 886], "latter": [1, 106, 654, 987], "law": 115, "layout": 227, "lb": 226, "lca": [116, 134, 978, 1007, 1022], "ldot": [687, 688, 692, 693, 695, 696, 701, 702, 703], "lead": [116, 146, 148, 149, 150, 225, 226, 229], "leaf": [1041, 1043, 1044], "learn": [890, 957], "least": [89, 90, 130, 230, 234, 363, 407, 416, 417, 419, 477, 484, 485, 487, 528, 535, 536, 538, 582, 591, 592, 594, 638, 639, 640, 689, 761, 869, 887, 888, 1041, 1046, 1112], "leav": [123, 224, 434, 500, 553, 610, 914, 937], "lee": [53, 104, 107], "leesleyqqf": 223, "left": [92, 107, 138, 230, 295, 342, 360, 377, 379, 687, 688, 692, 697, 701, 702, 703, 704, 978, 1000, 1047, 1048, 1110], "left_child_id": 1031, "leftmost": 236, "legaci": [220, 221, 225], "legal": 277, "legend": 869, "legendr": [761, 858, 873, 874, 876, 877, 879, 880, 881], "len": [53, 65, 77, 394, 465, 516, 569, 628, 666, 765, 888, 984, 1027, 1042, 1112], "length": [0, 1, 3, 13, 14, 15, 18, 19, 34, 46, 47, 50, 51, 52, 53, 65, 82, 83, 85, 91, 98, 99, 100, 116, 134, 148, 149, 166, 179, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 308, 320, 382, 383, 389, 394, 399, 400, 401, 403, 406, 409, 411, 412, 422, 423, 424, 426, 427, 428, 429, 433, 434, 435, 437, 438, 439, 441, 451, 452, 453, 454, 460, 465, 470, 471, 473, 476, 479, 489, 490, 491, 493, 494, 495, 496, 500, 501, 504, 505, 511, 516, 521, 522, 524, 527, 530, 541, 542, 543, 545, 546, 547, 548, 553, 554, 557, 558, 564, 569, 574, 575, 576, 578, 581, 584, 586, 587, 597, 598, 599, 601, 602, 603, 604, 608, 609, 610, 611, 613, 614, 616, 617, 623, 628, 633, 634, 637, 642, 643, 644, 646, 647, 648, 649, 652, 670, 684, 685, 689, 694, 722, 747, 759, 762, 763, 767, 878, 879, 887, 888, 916, 950, 958, 973, 979, 988, 989, 998, 1001, 1020, 1021, 1022, 1029, 1031, 1034, 1035, 1036, 1037, 1039, 1041, 1043, 1044, 1107, 1110, 1112], "lengtherror": 1021, "leq": 686, "less": [53, 107, 116, 125, 148, 149, 151, 232, 234, 423, 424, 490, 491, 542, 543, 598, 599, 643, 644, 685, 761, 764, 857, 873, 889, 906, 946, 1010, 1049], "lesser": 134, "let": [1, 225, 226, 228, 232, 233, 235, 298, 308, 432, 499, 551, 607, 616, 651, 689, 761, 857, 883, 884, 887, 888, 927, 1045, 1107, 1110, 1112], "letter": [114, 116, 225, 227, 504], "leu": 504, "leucin": 504, "level": [95, 124, 230, 277, 363, 689, 886, 887, 996, 1050, 1107], "levelord": [1009, 1012, 1013, 1014, 1030, 1033], "leven": 763, "lewi": 134, "lexicon": [225, 226, 232], "lfc_result": 694, "li": 134, "librari": [53, 104, 148, 149, 225, 1104, 1105], "libreria": 118, "licens": 1104, "life": 116, "like": [1, 98, 99, 100, 151, 225, 227, 228, 229, 231, 234, 237, 425, 492, 544, 600, 645, 654, 707, 767, 790, 802, 823, 824, 834, 846, 879, 881, 887, 888, 911, 915, 918, 922, 951, 952, 1069, 1105, 1112], "likelihood": 654, "likelyhood": [878, 882], "likewis": [92, 134, 235], "limit": [1, 115, 220, 230, 231, 232, 886, 887, 1043], "limits_": [692, 693, 696, 697, 704], "linalg": 883, "linamaras": 224, "line": [118, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 277, 887, 915, 918, 976], "lineag": [236, 887, 997, 1032], "lineage_map": 997, "linear": [118, 224, 227, 859, 874], "link": [150, 307, 363, 760, 767, 958], "linkag": [888, 995], "linkage_matrix": 995, "linnean": 134, "linux": 922, "lipman": [220, 221, 225], "list": [1, 50, 104, 116, 134, 148, 149, 152, 153, 214, 220, 224, 226, 227, 228, 231, 234, 235, 236, 237, 248, 250, 266, 267, 277, 308, 432, 499, 551, 607, 616, 651, 664, 668, 671, 705, 707, 718, 721, 742, 746, 761, 763, 764, 780, 802, 813, 835, 868, 884, 886, 887, 888, 906, 910, 914, 915, 916, 918, 927, 933, 939, 944, 945, 950, 958, 974, 980, 988, 990, 992, 995, 1005, 1007, 1008, 1024, 1025, 1029, 1031, 1032, 1042, 1043, 1105, 1112], "liter": 230, "literatur": [1, 112, 138, 888], "live": [1, 322], "lkwh": [439, 452, 614], "ll": [1, 116, 148, 149, 760, 761, 764, 858, 884, 887, 888, 1110, 1112], "lladser": [124, 125, 148, 149], "lladser_ci": 125, "lladser_p": 124, "ln": [109, 117, 123, 126, 687, 689, 692, 697, 704], "load": [0, 223, 225, 226, 231, 233, 234, 295, 342, 360, 363, 379, 666, 689, 707, 708, 759, 760, 763, 764, 916, 1068, 1069, 1105], "loc": [72, 616, 689, 887], "local": [0, 101, 102, 103, 220, 221, 227], "local_pairwise_align": [98, 99, 100, 102, 103], "local_pairwise_align_nucleotid": [98, 99, 100, 101, 103], "local_pairwise_align_protein": [0, 98, 99, 100, 101, 102], "local_pairwise_align_ssw": [0, 98, 99, 100, 101, 102, 103], "locat": [53, 93, 97, 177, 178, 190, 191, 224, 230, 235, 263, 264, 265, 298, 324, 326, 378, 381, 407, 408, 431, 440, 477, 478, 498, 503, 528, 529, 550, 556, 582, 583, 606, 615, 636, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 935, 941, 956, 1016, 1020, 1022, 1040, 1047, 1111], "loci": 53, "locu": [224, 227, 236], "log": [126, 135, 136, 686, 687, 688, 689, 692, 693, 694, 695, 696, 700, 706], "log2": 694, "log_b": [136, 138], "logarithm": [135, 136, 138, 689], "logic": [3, 237, 1070], "logratio": 686, "long": [222, 225, 232, 234, 407, 477, 528, 582, 687, 760, 846, 873], "long_method_nam": [859, 1048], "longer": [225, 232, 686, 888], "look": [105, 229, 231, 232, 237, 323, 432, 499, 551, 607, 613, 614, 651, 658, 689, 712, 736, 869, 886, 887, 888, 911, 980, 1093, 1110, 1112], "lookup": [98, 99, 100, 101, 102, 103, 263, 264, 265, 658, 712, 736, 761, 764, 975, 986, 990, 1000, 1002, 1011, 1015, 1031, 1070], "lookup_id": [655, 673, 709, 723, 733, 748], "loop": 225, "loos": [1, 767], "lorenz": 118, "lose": [763, 879], "loss": [116, 767], "lost": [763, 879], "lot": 873, "love": [890, 957], "lovel": [700, 706], "low": [125, 858, 879, 887, 946, 997], "lower": [106, 123, 124, 225, 232, 298, 363, 689, 694, 747, 755, 761, 857, 858, 888], "lower_bound": [111, 115, 124], "lower_quantil": 123, "lowercas": [53, 224, 225, 226, 227, 233, 382, 400, 453, 470, 504, 521, 557, 575, 616, 633], "lowest": [116, 134, 1005, 1007, 1022, 1041], "lowest_common_ancestor": 1005, "lozupon": [116, 148, 149], "lq": 123, "lsmat": [675, 682, 725, 731, 751, 758], "luca": 978, "ly": 504, "lysin": 504, "m": [50, 53, 101, 107, 114, 116, 121, 134, 148, 149, 220, 221, 224, 226, 232, 236, 382, 441, 442, 451, 504, 557, 666, 760, 763, 767, 869, 873, 874, 880, 881, 883, 886, 916, 922, 950, 1023, 1043], "m1": 983, "m2": 983, "m24803": 235, "m24804": 235, "m_shape": 883, "ma": [15, 19, 47, 52, 107, 435, 501, 554, 611, 652], "machin": 233, "machine_nam": 233, "macrophag": 887, "madden": 225, "made": [65, 130, 616, 689, 708, 732, 857, 906, 974, 991, 992, 1015, 1046], "magnitud": [130, 694, 761, 763, 879, 1045], "magnoliophyta": 224, "magnuson": 134, "magurran": [123, 129], "mai": [1, 20, 53, 84, 94, 112, 116, 125, 138, 221, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 249, 266, 267, 277, 298, 322, 363, 375, 376, 382, 409, 453, 479, 504, 530, 557, 584, 616, 637, 654, 658, 668, 684, 689, 707, 712, 721, 736, 746, 761, 763, 767, 857, 873, 884, 886, 887, 888, 889, 906, 996, 1036, 1045, 1068, 1070, 1105, 1107], "main": 327, "mainli": [768, 858], "maintain": [225, 230, 237, 749, 873, 874, 884, 887], "major": [83, 106, 138, 686, 755, 916, 950, 1042], "make": [84, 92, 121, 225, 230, 234, 237, 295, 342, 360, 363, 379, 442, 658, 684, 712, 736, 759, 763, 888, 1028, 1031, 1032, 1043, 1050, 1070, 1112], "mam": 236, "manag": [277, 278, 279], "mandal": 689, "mani": [1, 107, 133, 153, 230, 234, 654, 686, 689, 767, 873, 879, 887, 888, 906, 1112], "manipul": [0, 89, 90, 234, 363, 417, 419, 485, 487, 536, 538, 592, 594, 616, 639, 640, 686, 707, 916, 1036, 1039, 1044], "mann": 689, "manner": [83, 225, 232, 389, 403, 460, 473, 511, 524, 564, 578, 623, 761, 879], "mannwhitneyu": 689, "mantel": [1, 707, 764, 767], "manual": [107, 111, 123, 234, 1042], "map": [1, 86, 94, 151, 251, 363, 376, 677, 727, 753, 761, 764, 767, 768, 802, 846, 869, 871, 886, 888, 906, 939, 955, 997, 1000, 1107], "map_async": 151, "map_f": 151, "mapper": [677, 727, 753, 871], "mar": [98, 101, 120], "marchand": 704, "margalef": 129, "marguerat": [700, 706], "margush": 1042, "marin": 760, "mark": [224, 227, 235, 1112], "marrow": 887, "marth": [53, 104], "marti": [762, 763], "martin": [686, 698], "mask": [15, 19, 47, 52, 53, 435, 501, 554, 611, 652, 700, 706], "mask_auto": 53, "mask_gap": [435, 501, 554, 611, 652], "mask_length": 53, "maskedarrai": [15, 19, 47, 52], "mat": [654, 666, 669, 672, 687, 688, 690, 691, 692, 693, 695, 696, 698, 699, 700, 1029], "match": [0, 50, 53, 82, 85, 92, 99, 102, 105, 220, 225, 226, 234, 277, 278, 291, 296, 297, 338, 343, 344, 356, 361, 362, 363, 375, 377, 380, 387, 407, 408, 426, 428, 429, 436, 451, 458, 477, 478, 493, 495, 496, 502, 509, 528, 529, 545, 547, 548, 555, 562, 582, 583, 601, 603, 604, 612, 621, 636, 646, 648, 649, 672, 708, 759, 761, 763, 764, 884, 886, 887, 888, 982, 983, 992, 994, 1107, 1112], "match_frequ": [428, 495, 547, 603, 648, 1107], "match_scor": [53, 99, 102, 105], "matevz": 704, "math": 137, "mathbb": [687, 688, 689, 692, 693, 695, 696], "mathemat": [112, 136, 138, 148, 686, 858, 978, 981, 1042], "mathemt": 149, "matplotlib": [674, 724, 750, 859, 869], "matric": [1, 100, 103, 218, 229, 504, 654, 656, 663, 666, 671, 707, 708, 710, 717, 734, 741, 760, 761, 764, 766, 767, 875, 879, 983, 1021], "matrix": [1, 53, 105, 146, 150, 151, 154, 155, 215, 435, 501, 554, 611, 652, 654, 655, 656, 658, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 677, 679, 680, 681, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 717, 718, 719, 720, 721, 722, 723, 724, 727, 729, 730, 732, 733, 734, 736, 741, 742, 743, 745, 746, 747, 748, 749, 750, 753, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 767, 858, 869, 871, 873, 875, 876, 877, 879, 880, 881, 883, 885, 890, 891, 893, 906, 916, 917, 920, 935, 942, 946, 948, 949, 950, 957, 995, 1029, 1041, 1043, 1044, 1109], "matrix_data": [890, 957], "matrix_element_typ": 917, "matrix_rank": 883, "matsen": 134, "matter": [234, 299, 320, 658, 712, 736], "matthew": 1042, "matto": 704, "max": [53, 107, 108, 121, 130, 136, 887, 888, 927, 998], "max_count": [884, 887, 888], "max_i": 144, "max_sample_count": 927, "max_width": 225, "maxim": [53, 134, 760, 874], "maxima": 930, "maximum": [135, 144, 225, 226, 689, 694, 760, 802, 857, 874, 878, 882, 887, 888, 930, 983], "mccoi": 134, "mcdonald": [890, 957], "mcentyr": 225, "mci": 1107, "mcintosh": [127, 128], "mcintosh_": 127, "mcintosh_d": 128, "mcmorri": 1042, "md": [225, 902, 910, 914, 939, 953], "md5": [224, 1069], "md_i": 928, "md_j": 928, "mdfivaifalfvissftitstnaveastlldignlsr": 224, "mean": [228, 230, 237, 277, 308, 323, 382, 411, 412, 586, 587, 665, 681, 686, 689, 692, 694, 704, 719, 730, 743, 757, 824, 846, 873, 877, 878, 879, 882, 884, 885, 887, 888, 916, 950, 1105, 1110], "meaning": [53, 82, 85, 92, 879, 1107], "measur": [1, 112, 114, 120, 121, 122, 123, 124, 125, 128, 129, 133, 134, 135, 136, 138, 139, 141, 148, 149, 654, 689, 700, 706, 707, 873, 886, 887, 958, 978, 1106], "mechan": [1070, 1112], "media": 887, "median": [689, 763], "medic": 224, "medlin": 235, "meepqsdpsv": [435, 501, 554, 611, 652], "meet": [104, 234, 323, 375, 376, 1035], "member": [269, 273, 1070, 1093, 1112], "membership": 237, "meme_v4": 222, "memo": [69, 310, 386, 457, 508, 561, 620, 960], "memori": [3, 118, 222, 223, 225, 226, 227, 232, 233, 235, 363, 707, 764, 857, 879, 890, 957, 1069, 1105], "mengyao": [53, 104], "menhinick": 126, "menopaus": 888, "menten": 130, "mention": 230, "merg": 363, "merged_t": 931, "messag": [1, 116, 146, 148, 149, 150, 780, 824, 1049, 1105], "met": [1, 504, 1093], "met_neg": 888, "met_po": 888, "meta": [234, 886, 887], "metabolit": [1, 888, 890, 957, 1106], "metabolite_test": 888, "metadata": [0, 1, 65, 70, 79, 82, 83, 85, 89, 90, 91, 92, 94, 95, 219, 222, 224, 225, 226, 227, 228, 232, 233, 382, 387, 389, 396, 398, 399, 400, 403, 406, 416, 417, 419, 425, 432, 433, 437, 438, 439, 441, 451, 452, 453, 458, 460, 467, 469, 470, 473, 476, 484, 485, 487, 492, 499, 504, 509, 511, 518, 520, 521, 524, 527, 535, 536, 538, 544, 551, 557, 562, 564, 571, 573, 574, 575, 578, 581, 591, 592, 594, 600, 607, 608, 609, 613, 614, 616, 621, 623, 630, 632, 633, 638, 639, 640, 645, 651, 670, 722, 747, 760, 768, 780, 802, 813, 824, 846, 869, 881, 884, 886, 887, 888, 891, 901, 902, 904, 905, 906, 910, 911, 914, 916, 917, 918, 921, 926, 931, 933, 939, 948, 949, 950, 952, 953, 954, 1104, 1107, 1108], "metadata_f": 906, "metadata_field": [916, 950], "metadata_formatt": [911, 952], "metadata_i": 928, "metadata_j": 928, "metadata_map": [768, 769, 791, 802, 835, 846], "metadatacolumn": [280, 281, 287, 289, 290, 345, 346, 352, 354, 355, 363, 374], "metadatafileerror": 376, "metag": 903, "metagenom": 903, "metatdata": 224, "metdata": [616, 931], "methionin": [451, 504], "method": [0, 1, 3, 19, 20, 34, 52, 53, 65, 72, 84, 92, 93, 97, 98, 118, 146, 148, 150, 151, 154, 155, 166, 177, 178, 179, 190, 191, 192, 203, 219, 223, 231, 234, 238, 248, 250, 251, 268, 280, 298, 308, 319, 324, 326, 327, 345, 363, 378, 381, 382, 385, 386, 400, 409, 431, 433, 439, 440, 441, 450, 452, 453, 456, 457, 470, 479, 498, 503, 504, 507, 508, 521, 530, 550, 556, 557, 560, 561, 575, 584, 606, 608, 614, 615, 616, 619, 620, 633, 637, 650, 653, 654, 675, 682, 686, 689, 694, 698, 704, 707, 708, 725, 731, 732, 749, 751, 758, 759, 760, 761, 762, 763, 764, 769, 780, 790, 791, 802, 813, 823, 824, 834, 835, 846, 857, 859, 869, 870, 872, 873, 874, 879, 890, 940, 941, 950, 956, 958, 976, 978, 979, 980, 983, 984, 986, 988, 989, 991, 993, 994, 1015, 1016, 1021, 1022, 1024, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1050, 1062, 1069, 1070, 1071, 1081, 1093, 1107, 1110, 1112], "metodologica": 118, "metric": [84, 107, 112, 116, 117, 121, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 215, 226, 405, 475, 526, 580, 635, 670, 685, 722, 732, 747, 958, 1107], "metricspac": 732, "mgc": 236, "mi": 50, "micha": 130, "michael": 226, "microbi": [116, 124, 125, 134, 148, 149, 689, 759, 760, 762, 763, 869], "microbiol": [148, 149], "microbiom": [1, 134, 151, 689, 694, 879], "microsoft": 234, "mid": 1021, "middl": [123, 322], "midpoint": [1001, 1020, 1021, 1022, 1043], "mieadkvahvqvgnnleh": 235, "might": [1, 118, 229, 231, 760, 886, 887, 888, 983, 1105], "miller": [220, 221], "million": 151, "min": [134, 136, 141, 888], "min_count": [884, 887, 888], "min_group_s": 906, "min_length": [407, 422, 477, 489, 528, 541, 582, 597, 642, 1107], "minim": [230, 1044], "minima": 934, "minimize_scalar": 117, "minimum": [116, 134, 141, 236, 412, 422, 489, 541, 587, 597, 642, 689, 763, 857, 887, 888, 906, 934, 1041, 1043, 1044], "mininum": 694, "minor": [221, 916, 950], "minter": [0, 65, 70, 82, 85, 94, 95, 222, 232], "minu": [84, 145, 227, 235, 835], "mirror": 694, "misc_bind": 227, "mislead": [84, 154], "mismatch": [0, 50, 53, 99, 102, 105, 220, 221, 426, 427, 428, 493, 494, 495, 545, 546, 547, 601, 602, 603, 646, 647, 648, 672, 761, 982], "mismatch_frequ": [426, 493, 545, 601, 646, 1107], "mismatch_scor": [53, 99, 102, 105], "miss": [220, 225, 234, 235, 289, 291, 292, 294, 296, 297, 327, 336, 338, 339, 341, 343, 344, 354, 356, 357, 359, 361, 362, 363, 372, 376, 380, 400, 470, 521, 575, 633, 686, 698, 760, 869, 886, 887, 1112], "missing_schem": [280, 327, 345], "missingiderror": [658, 665, 668, 673, 681, 712, 719, 721, 723, 730, 736, 743, 746, 748, 757], "missingnodeerror": [116, 134, 146, 148, 149, 150, 991, 992, 994, 1010, 1024], "mit": 222, "mitochondri": [236, 438, 450, 613], "mix": 234, "mizrachi": 236, "ml": 130, "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm": 441, "mn": 129, "moac": 220, "mode": [84, 237, 277, 451, 677, 727, 753, 871, 888, 906, 1070], "model": [2, 123, 124, 125, 130, 166, 223, 666, 686, 694, 707, 888], "moder": 761, "modif": [308, 767], "modifi": [95, 225, 227, 235, 268, 382, 504, 557, 616, 749, 846, 880, 914, 953, 1024, 1036], "modul": [0, 1, 2, 223, 235, 237, 276, 683, 686, 707, 768, 858, 884, 1068, 1069, 1105, 1106, 1107, 1108, 1109, 1110, 1112], "mol": [98, 101, 220, 221, 224, 227], "mol_typ": [224, 227], "molbev": 1043, "molecul": [224, 225, 227, 616, 654, 1107], "molecular": [101, 767, 978, 1043, 1107], "moment": [224, 761, 1112], "monkei": [268, 1041, 1044], "monkey_patch": [248, 250], "monophylet": 1022, "monoton": [707, 708, 764, 765], "mont": 884, "month": 236, "mooer": 134, "more": [0, 1, 83, 84, 85, 93, 97, 98, 104, 107, 112, 118, 121, 146, 153, 177, 178, 190, 191, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 270, 274, 294, 324, 326, 341, 359, 363, 377, 378, 381, 413, 414, 415, 418, 431, 440, 481, 482, 483, 486, 498, 503, 504, 532, 533, 534, 537, 539, 550, 556, 588, 589, 590, 593, 606, 615, 650, 653, 658, 675, 682, 686, 689, 691, 694, 707, 712, 725, 731, 736, 749, 751, 758, 759, 760, 761, 762, 763, 764, 767, 779, 801, 812, 845, 856, 857, 869, 870, 872, 873, 874, 881, 887, 888, 890, 906, 922, 941, 956, 957, 979, 996, 1016, 1036, 1040, 1042, 1105, 1110, 1111], "mosaic": 235, "most": [83, 106, 108, 117, 134, 218, 222, 225, 226, 229, 230, 232, 234, 236, 451, 616, 761, 857, 881, 884, 998, 1000, 1036, 1042, 1110], "mostli": [234, 235], "motif": [407, 477, 528, 582, 1107], "motif_slic": [407, 477, 528, 582], "motif_typ": [407, 477, 528, 582], "motiv": 151, "mpl": [438, 439, 441, 451, 452, 613, 614], "mpr": 1021, "mpt": [438, 613], "mqhvsapvfvfectrlai": 235, "mrna": 224, "msa": [0, 3, 16, 17, 48, 65, 66, 67, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 222, 225, 226, 232, 235], "msa1": 92, "msa2": 92, "msa_copi": [68, 69], "msl072": 1043, "mt19937": [983, 1024], "mtcraqliavprassla": 235, "mu": 884, "mu_": 884, "much": [0, 1, 116, 148, 149, 230, 1105], "mullikin": 226, "multi": 689, "multi_replac": [689, 699], "multifurc": [230, 1110], "multiindex": [95, 755], "multimod": 873, "multinomi": [694, 946], "multipl": [0, 65, 91, 116, 121, 136, 148, 149, 222, 224, 225, 226, 227, 228, 230, 236, 298, 320, 616, 654, 686, 689, 694, 698, 767, 858, 881, 887, 906, 1032, 1042, 1105, 1110], "multiple_comparisons_correct": 689, "multipletest": [689, 694], "multipli": 134, "multivari": [687, 759, 760, 762, 763, 873, 874, 1104], "must": [15, 47, 53, 65, 82, 85, 92, 93, 97, 116, 118, 134, 148, 149, 150, 151, 154, 177, 178, 190, 191, 215, 220, 222, 225, 226, 229, 230, 231, 232, 234, 235, 249, 323, 324, 326, 363, 375, 377, 378, 381, 382, 400, 405, 425, 431, 438, 440, 470, 475, 492, 498, 503, 504, 521, 526, 544, 550, 556, 557, 575, 580, 600, 606, 613, 615, 616, 633, 635, 645, 650, 653, 668, 675, 677, 682, 689, 694, 705, 708, 721, 725, 727, 731, 746, 751, 753, 758, 759, 760, 761, 762, 763, 765, 767, 790, 823, 834, 857, 869, 870, 871, 872, 873, 878, 887, 888, 889, 906, 914, 915, 922, 931, 939, 941, 951, 952, 953, 956, 980, 1001, 1016, 1022, 1024, 1032, 1036, 1040, 1042, 1043, 1047, 1049, 1069, 1070, 1093, 1112], "mutabl": [118, 616, 1050, 1107], "mutant": 227, "mutat": [654, 666, 958], "my": 1107, "my_obj": 1105, "myeloid": 887, "myer": [220, 221], "myformat": [237, 248, 249, 250], "myformat2": [248, 249, 250], "myformat_read": [248, 250], "myformat_sniff": 249, "myobject": [248, 250], "n": [1, 53, 108, 109, 112, 115, 117, 118, 119, 123, 126, 127, 128, 129, 130, 134, 137, 144, 218, 220, 221, 222, 225, 226, 227, 231, 232, 233, 235, 236, 237, 248, 249, 250, 277, 278, 382, 422, 435, 489, 501, 504, 528, 541, 554, 557, 597, 611, 642, 652, 698, 699, 707, 761, 764, 767, 857, 873, 874, 875, 878, 880, 881, 882, 884, 888, 889, 916, 922, 946, 950, 972, 980, 984, 993, 998, 1000, 1008, 1024, 1025, 1032, 1042, 1043, 1049, 1107], "n1": 918, "n4": 918, "n_": [107, 108, 123], "n_compon": [687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706], "n_composit": [687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703], "n_featur": [216, 704], "n_i": [109, 112, 127, 128], "n_ob": 948, "n_object": 216, "n_pack": 3, "n_partit": 704, "n_posit": [13, 15, 17, 19, 44, 47, 52], "n_segment": [3, 14, 18, 34, 46, 51], "n_seq": [13, 14, 15, 17, 18, 19, 44, 46, 47, 51, 52], "n_sequenc": [3, 13], "n_var": 948, "na": [234, 915], "naess": 704, "name": [1, 93, 97, 116, 134, 148, 149, 177, 178, 190, 191, 220, 221, 226, 227, 228, 230, 231, 233, 234, 235, 237, 238, 263, 264, 265, 270, 274, 281, 287, 296, 297, 298, 324, 326, 328, 334, 343, 344, 346, 352, 361, 362, 363, 364, 370, 374, 376, 377, 378, 380, 381, 425, 431, 440, 441, 442, 448, 450, 492, 498, 503, 544, 550, 556, 600, 606, 615, 645, 650, 653, 654, 666, 671, 675, 682, 689, 694, 700, 705, 725, 731, 751, 758, 759, 760, 762, 763, 768, 780, 824, 859, 869, 870, 872, 906, 911, 941, 949, 952, 956, 958, 972, 974, 975, 976, 978, 980, 981, 982, 983, 986, 990, 991, 992, 993, 994, 996, 998, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1040, 1042, 1062, 1068, 1105, 1110], "name_txt": 236, "named_gc": 442, "namedtemporaryfil": 277, "nan": [19, 52, 84, 88, 92, 125, 220, 234, 291, 292, 294, 296, 297, 327, 338, 339, 341, 343, 344, 356, 357, 359, 361, 362, 363, 372, 380, 400, 409, 470, 479, 521, 530, 575, 584, 633, 637, 684, 685, 759, 760, 761, 762, 763, 764, 767, 869, 886, 887, 1031, 1047], "nan_length_valu": 1031, "nanmean": 888, "naohisa": 226, "nar": 226, "nasanfta": [422, 489, 541, 597, 642], "nat": 227, "natal": 704, "nation": [225, 236, 666], "nativ": [1, 676, 726, 752, 879], "natl": [100, 103], "natsort": 944, "natur": [112, 122, 123, 139, 141, 363, 944, 1041], "naturalist": 1021, "nb": 278, "nbk21097": 225, "nbk279675": 220, "nbk279682": 221, "nc": 278, "ncbi": [99, 100, 102, 103, 220, 221, 225, 227, 236, 438, 439, 441, 442, 449, 450, 451, 452, 613, 614, 996, 1107], "ncbiinsight": 236, "ncifcrf": 84, "ncrna": 616, "nd": 915, "ndarrai": [17, 18, 19, 51, 52, 88, 150, 166, 179, 192, 203, 216, 382, 384, 401, 402, 404, 405, 410, 420, 421, 426, 427, 428, 429, 430, 435, 455, 471, 472, 474, 475, 480, 488, 493, 494, 495, 496, 497, 501, 504, 506, 522, 523, 525, 526, 531, 540, 545, 546, 547, 548, 549, 552, 554, 557, 559, 576, 577, 579, 580, 585, 595, 596, 601, 602, 603, 604, 605, 611, 616, 618, 634, 635, 641, 646, 647, 648, 649, 652, 658, 676, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 701, 702, 703, 704, 708, 712, 726, 736, 744, 749, 752, 765, 767, 882, 889, 909, 948, 995], "ne2": 224, "nearbi": 53, "nearest": [1041, 1043, 1044], "nearli": [98, 99, 100], "necessari": [92, 220, 232, 308, 616, 708, 759, 760, 761, 790, 823, 834, 983, 1068, 1105], "necessarili": [82, 85, 92, 231, 409, 479, 530, 584, 616, 637, 889], "nee": 116, "need": [1, 82, 85, 91, 116, 148, 149, 151, 218, 223, 228, 230, 237, 248, 250, 277, 308, 323, 453, 689, 694, 695, 696, 705, 759, 760, 762, 763, 764, 857, 858, 874, 881, 884, 887, 888, 916, 980, 983, 1041, 1047, 1048, 1070, 1112], "needl": 98, "needleman": [0, 98, 99, 100], "neg": [1, 53, 99, 102, 105, 118, 234, 451, 691, 698, 699, 732, 873, 874, 879, 884, 888, 1043], "negat": 321, "neglig": 1, "nei": 1043, "neighbor": [227, 1025, 1041, 1043, 1044], "neighbour_join": 1043, "neither": [65, 94, 278, 871, 942, 1024, 1033], "nellangiqpfvtlfhwdlpqvledeyggflnsgvindfrdytdlcfkefgd": 224, "neq": 884, "nest": [230, 707, 761, 933, 948, 1027, 1110], "never": [225, 235], "new": [0, 82, 85, 93, 94, 95, 109, 120, 124, 125, 137, 148, 177, 190, 236, 248, 249, 250, 262, 272, 308, 324, 377, 378, 389, 400, 403, 431, 432, 460, 470, 473, 498, 499, 511, 521, 524, 550, 551, 564, 575, 578, 606, 607, 616, 623, 633, 650, 651, 675, 677, 725, 727, 749, 751, 753, 761, 762, 764, 870, 871, 874, 882, 914, 937, 938, 940, 941, 943, 945, 953, 954, 955, 984, 987, 1015, 1016, 1020, 1021, 1022, 1037, 1038, 1039, 1041, 1043, 1044, 1107, 1110, 1112], "new_fasta_fh": 225, "new_fh": 226, "new_qual_fh": 225, "new_root": 1039, "new_tabl": [914, 937, 944], "new_taxdump": 236, "new_tre": 1037, "newcastl": 224, "newick": [116, 148, 149, 916, 921, 950, 972, 978, 1016, 1040, 1043, 1105, 1110], "newick_doc": 230, "newick_str": 1043, "newicktre": 230, "newlin": [225, 230, 232, 237, 238, 269, 270, 273, 274, 277], "next": [1, 116, 124, 125, 148, 149, 224, 230, 237, 616, 689, 846, 873, 1042, 1110, 1112], "nh": 235, "nhx": 235, "nich": 874, "nident": [220, 221], "nih": [99, 100, 102, 103, 220, 221, 225, 227, 233, 236, 441, 449, 450], "nlm": [99, 100, 102, 103, 220, 221, 225, 227, 236, 441, 449, 450], "nnz": [890, 916, 950, 957], "no_gap": [422, 489, 541, 597, 642], "node": [1, 116, 148, 149, 705, 958, 963, 967, 973, 974, 975, 977, 978, 979, 980, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1105, 1110], "node_c": 1008, "node_id": [994, 1000, 1031], "node_info": 230, "nodes_new": 236, "nodes_slim": 236, "nolengtherror": [973, 989, 998], "nomenclatur": [382, 453, 504, 557, 616], "non": [65, 110, 118, 220, 222, 224, 228, 234, 298, 382, 418, 430, 434, 486, 497, 500, 504, 537, 549, 553, 593, 605, 610, 654, 686, 687, 688, 689, 691, 694, 698, 699, 701, 702, 703, 732, 759, 762, 763, 767, 873, 879, 884, 890, 916, 931, 950, 953, 982, 983, 988, 1107], "non_tip": [1006, 1012, 1013, 1014, 1030, 1033, 1042, 1110], "noncanon": [434, 500, 553, 610], "nonconcept": [114, 139], "none": [13, 45, 50, 53, 65, 82, 84, 85, 93, 94, 95, 99, 100, 102, 103, 104, 116, 130, 134, 135, 136, 138, 146, 148, 149, 150, 151, 177, 190, 220, 225, 229, 237, 238, 248, 250, 263, 264, 265, 269, 273, 277, 295, 298, 308, 319, 321, 323, 324, 342, 360, 363, 372, 375, 376, 378, 379, 382, 401, 405, 407, 408, 409, 420, 431, 435, 436, 453, 471, 475, 477, 478, 479, 488, 498, 501, 502, 504, 522, 526, 528, 529, 530, 540, 550, 554, 555, 557, 576, 580, 582, 583, 584, 595, 606, 611, 612, 616, 634, 635, 636, 637, 641, 650, 652, 670, 674, 675, 689, 694, 695, 696, 698, 699, 700, 708, 722, 724, 725, 732, 747, 750, 751, 759, 760, 761, 762, 763, 764, 765, 769, 791, 802, 835, 857, 859, 869, 870, 875, 878, 879, 882, 883, 885, 886, 887, 888, 889, 890, 906, 910, 911, 916, 917, 918, 921, 926, 931, 932, 939, 941, 942, 946, 950, 951, 952, 953, 957, 958, 978, 979, 983, 986, 988, 996, 1001, 1006, 1008, 1011, 1012, 1013, 1014, 1016, 1020, 1021, 1022, 1024, 1028, 1029, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1042, 1043, 1070, 1071, 1093, 1107, 1110, 1112], "nonlinear": 130, "nonmatch": [761, 764], "nonneg": 225, "nonparametr": [115, 686, 698], "nontip": 1009, "nonzero": [219, 914, 919, 930, 934, 936, 937, 953, 957], "noparenterror": [973, 1001], "noqa": 916, "nor": [65, 82, 85, 94, 229, 232, 708, 871, 942, 1024], "norm": [769, 791, 835, 846, 906], "normal": [115, 149, 226, 227, 327, 363, 759, 763, 879, 880, 881, 884, 885, 887, 888, 906, 937, 980], "not_non": [1093, 1112], "notabl": 226, "notat": [121, 230, 234, 504], "note": [3, 15, 16, 20, 47, 48, 50, 53, 65, 72, 77, 82, 83, 84, 85, 86, 88, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 149, 151, 153, 219, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 298, 308, 309, 310, 322, 375, 377, 382, 385, 386, 389, 400, 403, 406, 409, 411, 422, 433, 435, 437, 438, 439, 441, 442, 449, 450, 451, 452, 453, 456, 457, 460, 470, 473, 476, 479, 489, 501, 504, 507, 508, 511, 521, 524, 527, 530, 541, 554, 557, 560, 561, 564, 575, 578, 581, 584, 586, 597, 608, 609, 611, 613, 614, 616, 619, 620, 623, 633, 637, 642, 652, 654, 658, 665, 666, 676, 680, 681, 684, 685, 689, 694, 695, 696, 698, 700, 704, 705, 706, 708, 712, 719, 726, 729, 730, 732, 736, 743, 744, 749, 752, 756, 757, 759, 760, 761, 762, 763, 764, 767, 857, 869, 873, 874, 879, 881, 882, 887, 888, 889, 890, 893, 906, 907, 915, 916, 922, 931, 933, 946, 948, 949, 950, 957, 975, 976, 978, 979, 980, 981, 983, 984, 986, 987, 988, 990, 991, 994, 996, 1011, 1020, 1021, 1022, 1024, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1047, 1049, 1068, 1069, 1107, 1110, 1112], "notebook": 859, "noth": [95, 277, 377, 436, 502, 555, 612, 1070], "notic": [1, 225, 230, 232, 888, 1041, 1043, 1112], "notifi": 761, "notimplementederror": [873, 874], "notion": [136, 761], "notredam": [700, 706], "notstart": 234, "nov": [100, 103, 224, 869], "novel": 689, "novemb": 1043, "now": [1, 123, 224, 225, 227, 232, 616, 686, 689, 760, 857, 858, 884, 887, 888, 953, 1110, 1112], "np": [13, 14, 15, 19, 46, 47, 52, 84, 88, 116, 125, 134, 148, 149, 166, 179, 220, 291, 294, 338, 341, 356, 359, 363, 372, 382, 384, 401, 402, 404, 405, 409, 410, 420, 421, 426, 427, 428, 429, 430, 435, 455, 471, 472, 474, 475, 479, 480, 488, 493, 494, 495, 496, 497, 501, 504, 506, 522, 523, 525, 526, 530, 531, 540, 545, 546, 547, 548, 549, 552, 554, 557, 559, 576, 577, 579, 580, 584, 585, 595, 596, 601, 602, 603, 604, 605, 611, 616, 618, 634, 635, 637, 641, 646, 647, 648, 649, 652, 654, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 706, 707, 759, 761, 762, 763, 764, 767, 768, 857, 858, 869, 883, 884, 886, 887, 888, 889, 903, 904, 905, 906, 907, 909, 910, 913, 914, 920, 921, 922, 923, 924, 926, 927, 930, 931, 932, 934, 937, 938, 939, 940, 942, 944, 945, 946, 947, 948, 952, 953, 955, 1000, 1024, 1042, 1047], "np_286546": 220, "npd": 134, "nrte": [422, 489, 541, 597, 642], "ns_": 130, "nt": 298, "nuc": [435, 501, 554, 611, 652, 654, 666], "nuc_pattern": 1112, "nuccor": 227, "nucl": 226, "nucleic": [232, 236, 382, 453, 504, 557, 616], "nucleobas": [382, 557], "nucleotid": [0, 53, 99, 102, 221, 224, 225, 226, 227, 382, 399, 421, 433, 435, 501, 554, 557, 574, 596, 608, 611, 652, 654, 666, 1112], "nucleotidemixin": [399, 433, 574, 608], "null": [230, 689, 694, 767, 884, 953], "num_it": [884, 887, 888], "num_object": 765, "num_repeat": 130, "num_run": [887, 888], "number": [1, 65, 77, 82, 85, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 218, 220, 222, 224, 225, 227, 230, 232, 233, 235, 236, 277, 298, 319, 363, 394, 401, 409, 426, 428, 465, 471, 479, 493, 495, 516, 522, 530, 545, 547, 569, 576, 584, 601, 603, 628, 634, 637, 646, 648, 654, 669, 688, 689, 694, 698, 699, 701, 702, 703, 704, 708, 759, 760, 761, 762, 763, 764, 765, 767, 802, 846, 857, 874, 878, 879, 881, 882, 884, 885, 887, 888, 889, 890, 906, 916, 920, 922, 936, 946, 950, 978, 985, 1020, 1022, 1024, 1047, 1048], "number_of_dimens": [763, 879], "numer": [1, 19, 52, 117, 123, 220, 229, 234, 236, 345, 363, 372, 376, 380, 704, 760, 761, 802, 858, 869, 873, 874, 880, 881, 888, 1048], "numeric_onli": 1, "numericmetadatacolumn": [327, 363, 374], "numpi": [1, 13, 14, 15, 46, 47, 150, 166, 179, 216, 658, 676, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 703, 704, 706, 707, 708, 712, 726, 736, 744, 752, 759, 763, 765, 767, 768, 802, 824, 846, 857, 858, 884, 886, 887, 888, 889, 903, 904, 905, 906, 907, 910, 913, 914, 920, 921, 922, 923, 924, 926, 927, 931, 932, 936, 937, 938, 939, 940, 942, 944, 945, 946, 947, 950, 952, 953, 1107], "nutrient": 704, "nwnnnnnn": [413, 418, 481, 486, 532, 537, 588, 593], "o": [92, 93, 97, 121, 134, 177, 178, 190, 191, 224, 225, 226, 233, 235, 324, 326, 378, 381, 431, 440, 498, 503, 504, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 922, 941, 956, 1016, 1040, 1041, 1043, 1044, 1105, 1111], "o1": [904, 905, 907, 910, 913, 914, 920, 921, 922, 923, 924, 926, 927, 931, 932, 933, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 952, 953, 955], "o2": [904, 905, 907, 910, 913, 914, 920, 921, 922, 923, 924, 926, 927, 931, 932, 933, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 952, 953, 955], "o3": [904, 905, 907, 913, 922, 927, 931, 940], "o31698": 235, "o31699": 235, "o4": [904, 905, 907, 922, 940], "o5": [907, 922], "o83071": 235, "ob": [1, 110, 121, 143, 145, 948], "obesrvation_metadata_f": 931, "obf": 226, "obj": [237, 250, 271, 275, 1061, 1112], "object": [0, 1, 2, 3, 16, 48, 53, 65, 68, 69, 70, 79, 82, 85, 86, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 151, 154, 155, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 269, 271, 273, 275, 280, 281, 287, 290, 293, 298, 299, 305, 307, 308, 309, 310, 311, 317, 319, 320, 321, 322, 323, 327, 328, 334, 337, 340, 345, 346, 352, 355, 358, 363, 364, 370, 373, 376, 377, 380, 382, 384, 387, 389, 400, 401, 405, 408, 409, 416, 417, 419, 420, 421, 426, 427, 428, 429, 436, 455, 458, 460, 470, 471, 475, 478, 479, 484, 485, 487, 488, 493, 494, 495, 496, 502, 504, 506, 509, 511, 521, 522, 526, 529, 530, 535, 536, 538, 540, 545, 546, 547, 548, 555, 557, 559, 562, 564, 575, 576, 580, 583, 584, 591, 592, 594, 595, 596, 601, 602, 603, 604, 612, 616, 618, 621, 623, 633, 634, 635, 636, 637, 638, 639, 640, 641, 646, 647, 648, 649, 658, 668, 670, 674, 683, 684, 689, 707, 708, 712, 721, 722, 724, 732, 736, 746, 747, 750, 759, 760, 762, 763, 764, 765, 790, 823, 834, 873, 874, 879, 880, 881, 890, 893, 905, 915, 916, 917, 918, 943, 948, 950, 951, 952, 955, 958, 984, 991, 1020, 1029, 1031, 1037, 1039, 1041, 1043, 1044, 1047, 1048, 1069, 1070, 1093, 1105, 1107, 1110, 1112], "obs_id": [920, 922, 927], "obs_map": 918, "obs_phi": 906, "observ": [1, 106, 116, 119, 121, 130, 133, 143, 145, 148, 149, 154, 219, 409, 435, 479, 501, 530, 554, 584, 611, 637, 652, 689, 767, 858, 884, 887, 888, 890, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 957, 1010, 1042, 1109, 1112], "observation_column_nam": [911, 952], "observation_group_metadata": [890, 921], "observation_id": [890, 927, 935, 940], "observation_index": 890, "observation_metadata": 890, "observation_metadata_f": 931, "observed_char": [409, 479, 530, 584, 637], "observed_featur": 143, "obsolet": 232, "obtain": [117, 363, 389, 460, 511, 564, 616, 623, 665, 666, 681, 689, 707, 719, 730, 743, 755, 757, 759, 761, 763, 1064, 1065, 1066], "obviou": 230, "oc": 224, "occur": [53, 221, 225, 226, 229, 230, 270, 274, 277, 420, 488, 540, 595, 616, 641, 888, 982], "occurr": [113, 142, 401, 413, 414, 415, 418, 471, 481, 482, 483, 486, 522, 532, 533, 534, 537, 539, 576, 588, 589, 590, 593, 634, 991], "oct": [225, 227], "odot": [696, 703], "off": [123, 382, 504, 557, 701, 887, 981, 1042, 1047, 1112], "offer": 1070, "offici": 219, "offset": [226, 227], "often": [1, 116, 146, 150, 224, 225, 227, 707, 767, 874, 879, 884, 1068], "oh": 1104, "oiko": [121, 138], "ol": [116, 1041, 1044], "old": 955, "older": 232, "om": [890, 957], "omic": 686, "ominu": 702, "omit": [13, 45, 230, 363, 376, 707, 946, 996, 1032, 1034, 1042, 1105], "ommit": 233, "onc": [119, 225, 237, 1033], "one": [0, 1, 82, 83, 84, 85, 89, 90, 92, 98, 99, 100, 106, 116, 117, 118, 120, 123, 134, 135, 146, 148, 149, 179, 203, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 249, 270, 274, 294, 296, 320, 323, 325, 341, 343, 359, 361, 363, 392, 397, 400, 413, 414, 415, 416, 417, 418, 419, 451, 463, 468, 470, 481, 482, 483, 484, 485, 486, 487, 504, 514, 519, 521, 532, 533, 534, 535, 536, 537, 538, 539, 567, 572, 575, 588, 589, 590, 591, 592, 593, 594, 626, 631, 633, 638, 639, 640, 654, 658, 670, 689, 708, 712, 722, 736, 747, 755, 760, 761, 763, 764, 767, 768, 769, 858, 875, 878, 879, 886, 887, 888, 903, 906, 931, 942, 973, 976, 982, 996, 1010, 1015, 1020, 1021, 1022, 1024, 1036, 1037, 1105, 1110, 1112], "one_to_mani": 906, "one_to_many_md_kei": 906, "one_to_many_mod": 906, "ones": [13, 17, 44, 874, 887, 931], "onli": [0, 1, 53, 92, 119, 120, 124, 134, 135, 154, 179, 203, 222, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 277, 291, 292, 308, 323, 338, 339, 356, 357, 363, 372, 377, 382, 400, 407, 441, 470, 477, 504, 521, 528, 557, 575, 582, 616, 633, 654, 668, 677, 686, 689, 701, 721, 727, 732, 746, 747, 749, 753, 755, 759, 763, 764, 857, 858, 871, 874, 879, 881, 886, 887, 888, 904, 905, 906, 914, 916, 928, 953, 979, 982, 983, 984, 985, 988, 991, 1015, 1024, 1029, 1033, 1050, 1093, 1110, 1112], "onlin": [123, 226], "ons": 234, "onto": [237, 268, 880, 1042], "ontologi": 228, "ontology_term": 228, "oo": 1105, "open": [0, 93, 97, 98, 99, 100, 101, 102, 103, 151, 177, 178, 190, 191, 220, 221, 226, 237, 248, 250, 269, 270, 271, 273, 274, 275, 278, 279, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 916, 941, 952, 956, 1016, 1040, 1069, 1104, 1105], "open_fil": 1069, "open_filehandl": 1105, "oper": [1, 3, 82, 85, 92, 148, 220, 225, 230, 321, 382, 411, 412, 504, 557, 586, 587, 616, 686, 688, 701, 702, 703, 707, 708, 744, 761, 762, 879, 901, 902, 904, 905, 906, 910, 916, 929, 933, 942, 943, 944, 945, 946, 947, 950, 953, 996, 1020, 1021, 1022, 1037, 1039, 1042, 1071, 1105, 1107], "operon": 298, "opinion": 118, "oplu": 701, "oppos": [764, 1112], "optim": [1, 53, 117, 146, 148, 149, 150, 763, 989, 1045], "option": [13, 15, 19, 34, 45, 47, 52, 53, 65, 82, 84, 85, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 110, 111, 112, 114, 116, 121, 122, 123, 124, 125, 130, 134, 135, 136, 138, 139, 140, 145, 146, 148, 149, 150, 151, 154, 166, 177, 178, 190, 191, 214, 215, 216, 217, 222, 223, 225, 226, 231, 232, 234, 235, 236, 238, 248, 249, 250, 269, 270, 271, 273, 274, 275, 277, 291, 295, 296, 297, 298, 308, 319, 323, 324, 325, 326, 338, 342, 343, 344, 356, 360, 361, 362, 363, 372, 375, 376, 378, 379, 380, 381, 382, 387, 399, 400, 401, 405, 407, 408, 409, 412, 420, 422, 423, 424, 426, 428, 431, 434, 435, 440, 441, 450, 451, 452, 458, 470, 471, 475, 477, 478, 479, 488, 489, 490, 491, 493, 495, 498, 500, 501, 503, 504, 509, 521, 522, 526, 528, 529, 530, 540, 541, 542, 543, 545, 547, 550, 553, 554, 556, 557, 562, 574, 575, 576, 580, 582, 583, 584, 587, 595, 597, 598, 599, 601, 603, 606, 610, 611, 613, 614, 615, 616, 621, 633, 634, 635, 636, 637, 641, 642, 643, 644, 646, 648, 650, 652, 653, 665, 668, 670, 674, 675, 677, 682, 685, 689, 694, 695, 696, 698, 699, 708, 719, 721, 722, 724, 725, 727, 731, 743, 746, 747, 749, 750, 751, 753, 758, 759, 760, 761, 762, 763, 764, 765, 767, 802, 857, 869, 870, 871, 872, 874, 875, 878, 879, 881, 882, 885, 886, 887, 888, 889, 901, 902, 903, 906, 907, 909, 910, 913, 914, 916, 921, 922, 923, 926, 927, 928, 929, 930, 931, 934, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 958, 979, 984, 996, 1001, 1002, 1016, 1020, 1021, 1022, 1024, 1031, 1032, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1069, 1070, 1071, 1093, 1107, 1112], "or_f": 231, "oral": 1, "orcutt": 666, "ord_r": 231, "order": [1, 53, 75, 80, 86, 91, 92, 95, 121, 122, 136, 138, 145, 146, 150, 218, 220, 225, 229, 230, 231, 232, 235, 290, 295, 320, 337, 342, 355, 360, 363, 364, 370, 373, 377, 379, 382, 397, 406, 409, 435, 439, 441, 452, 468, 476, 479, 501, 504, 519, 527, 530, 554, 557, 572, 581, 584, 611, 614, 631, 637, 652, 656, 658, 665, 668, 681, 689, 694, 705, 710, 712, 719, 721, 730, 734, 736, 743, 746, 749, 755, 757, 759, 760, 761, 762, 763, 764, 767, 873, 882, 886, 887, 916, 936, 944, 945, 950, 1009, 1029, 1030, 1031, 1042, 1045, 1047, 1110, 1112], "ordin": [1, 217, 763, 1048, 1049], "ordinari": 1041, "ordination_result": 858, "ordinationresult": [217, 231, 763, 873, 874, 879, 880, 881, 1048], "org": [53, 104, 106, 151, 218, 219, 225, 226, 227, 232, 234, 235, 295, 342, 360, 363, 376, 379, 676, 700, 704, 706, 708, 726, 732, 744, 752, 759, 760, 761, 762, 763, 869, 890, 916, 917, 950, 957, 1043], "organ": [1, 224, 227, 236], "organis": 227, "orient": [768, 869, 886, 916, 950, 1020, 1105], "origin": [1, 3, 15, 18, 19, 47, 51, 52, 98, 100, 101, 103, 108, 109, 112, 115, 116, 119, 120, 121, 122, 126, 127, 128, 134, 135, 136, 138, 139, 145, 148, 149, 151, 222, 223, 225, 230, 232, 233, 292, 296, 297, 339, 343, 344, 357, 361, 362, 380, 400, 470, 521, 575, 616, 633, 759, 760, 761, 762, 763, 767, 873, 881, 889, 906, 914, 937, 953, 981, 984, 1020, 1021, 1022, 1042, 1043, 1110, 1112], "orthogon": [695, 696, 704], "ortholog": [890, 957], "orthonorm": [695, 696, 704, 705], "orthornorm": 695, "ostel": 225, "other": [0, 1, 15, 47, 53, 70, 79, 89, 90, 92, 116, 133, 138, 151, 224, 225, 226, 227, 229, 230, 232, 234, 235, 236, 277, 281, 287, 299, 305, 311, 317, 322, 328, 334, 346, 352, 363, 364, 370, 377, 382, 387, 396, 405, 411, 412, 417, 419, 421, 426, 427, 428, 429, 432, 442, 448, 458, 467, 475, 485, 487, 493, 494, 495, 496, 499, 504, 509, 518, 526, 536, 538, 545, 546, 547, 548, 551, 557, 562, 571, 580, 586, 587, 592, 594, 596, 601, 602, 603, 604, 607, 616, 621, 630, 635, 639, 640, 646, 647, 648, 649, 651, 654, 656, 663, 683, 689, 694, 707, 710, 717, 732, 734, 741, 763, 858, 869, 873, 874, 879, 886, 888, 891, 899, 903, 907, 912, 927, 931, 958, 981, 982, 983, 989, 991, 992, 1036, 1037, 1039, 1047, 1070, 1081, 1105, 1106, 1107, 1110, 1112], "other_vertebr": 221, "otherwis": [50, 53, 66, 82, 85, 95, 110, 111, 225, 227, 230, 233, 234, 277, 294, 327, 341, 359, 435, 501, 554, 611, 652, 655, 656, 658, 663, 668, 709, 710, 712, 717, 721, 733, 734, 736, 741, 746, 749, 764, 893, 909, 913, 925, 931, 937, 940, 1017, 1107], "otu": [1, 132, 234, 890, 903, 904, 905, 906, 907, 911, 915, 916, 917, 922, 927, 931, 937, 939, 940, 944, 945, 950, 952, 953, 957], "otu1": 911, "otu2": 911, "otu_id": [116, 134, 148, 149], "otuid": 234, "our": [1, 118, 226, 234, 237, 249, 278, 422, 489, 541, 597, 642, 858, 884, 887, 888, 889, 1107, 1112], "out": [84, 223, 233, 234, 237, 289, 336, 354, 869, 914, 946, 982, 983, 1112], "out_f": [790, 823, 834], "out_fh": 707, "outcom": [137, 887, 1036], "outer": [91, 92, 400, 470, 521, 575, 633, 669], "outfmt": [220, 221], "outgroup": 1022, "output": [2, 92, 220, 221, 223, 230, 232, 233, 235, 425, 492, 544, 600, 645, 694, 759, 763, 764, 802, 874, 900, 906, 911, 951, 952, 1032, 1043, 1104, 1112], "outsid": [226, 298, 322, 409, 479, 530, 584, 637], "over": [75, 80, 91, 151, 225, 226, 233, 234, 235, 392, 397, 463, 468, 514, 519, 567, 572, 626, 631, 654, 694, 765, 779, 801, 812, 845, 856, 884, 885, 893, 903, 906, 907, 926, 927, 928, 930, 933, 934, 939, 942, 946, 953, 967, 1006, 1009, 1012, 1013, 1014, 1027, 1030, 1033, 1110], "overal": [890, 957], "overhead": [857, 916], "overlap": [123, 323, 377, 423, 424, 490, 491, 542, 543, 598, 599, 643, 644, 665, 685, 694, 719, 743, 931, 982], "overrid": [53, 99, 102, 134, 238, 248, 249, 250, 269, 273, 376, 1015, 1112], "overridden": [53, 65, 227, 1043], "override_skip_babp": 53, "overriden": [248, 249, 250], "overview": 1043, "own": [82, 85, 92, 218, 225, 231, 235, 237, 884], "owner": 1054, "oxfordjourn": 226, "oxtobi": 224, "p": [1, 53, 104, 116, 121, 127, 128, 134, 136, 504, 689, 694, 704, 707, 759, 761, 762, 763, 764, 767, 858, 873, 874, 875, 881, 884, 887, 888, 946], "p26204": 224, "p__b": 906, "p__c": 906, "p_adjust": [689, 694], "p_i": [112, 114, 121, 122, 136, 138, 139, 145], "p_valu": [1, 761, 767], "pack": 3, "packag": [53, 104, 106, 147, 222, 225, 230, 232, 694, 704, 707, 759, 760, 761, 762, 763, 766, 873, 874, 881, 884, 1110, 1111], "pad": [92, 232, 400, 470, 521, 575, 633], "page": [118, 689, 1043, 1110], "pair": [0, 1, 50, 89, 98, 99, 100, 102, 105, 148, 149, 150, 154, 224, 226, 227, 228, 230, 235, 319, 323, 417, 485, 536, 592, 639, 654, 658, 665, 681, 685, 689, 712, 719, 730, 736, 743, 747, 755, 757, 764, 884, 998, 1029, 1107], "pairwis": [34, 44, 45, 50, 150, 151, 154, 215, 670, 689, 700, 722, 747, 764, 767, 906, 928, 989, 1029, 1110], "pairwise_dist": 150, "pairwise_func": 150, "pam": [504, 654, 666], "pam250": 666, "pam30": 666, "pam70": 666, "pancoro": 224, "panda": [1, 65, 90, 95, 150, 214, 220, 221, 236, 296, 297, 327, 343, 344, 361, 362, 363, 380, 382, 419, 487, 504, 538, 557, 594, 640, 678, 689, 694, 728, 754, 755, 759, 760, 762, 763, 764, 768, 802, 846, 858, 869, 886, 887, 904, 933, 949, 996, 1047, 1107], "paper": 234, "papilionoidea": 224, "par_dist": 767, "parallel": [118, 151], "paramet": [1, 3, 13, 14, 15, 16, 19, 20, 34, 44, 45, 46, 47, 48, 50, 52, 53, 54, 65, 67, 70, 79, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 166, 177, 178, 179, 190, 191, 192, 203, 214, 215, 216, 217, 237, 238, 248, 249, 250, 261, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 277, 281, 287, 290, 291, 293, 295, 296, 297, 298, 299, 305, 308, 311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 337, 338, 340, 342, 343, 344, 346, 352, 355, 356, 358, 360, 361, 362, 363, 364, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 389, 396, 399, 400, 401, 405, 407, 408, 409, 412, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 448, 450, 451, 452, 455, 458, 460, 467, 470, 471, 475, 477, 478, 479, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 509, 511, 518, 521, 522, 526, 528, 529, 530, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 557, 559, 562, 564, 571, 574, 575, 576, 580, 582, 583, 584, 587, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 610, 611, 612, 613, 614, 615, 616, 618, 621, 623, 630, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 663, 665, 666, 668, 669, 670, 672, 673, 674, 675, 677, 681, 682, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 717, 719, 721, 722, 723, 724, 725, 727, 730, 731, 733, 734, 736, 741, 743, 746, 747, 748, 749, 750, 751, 753, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 790, 802, 823, 834, 846, 857, 869, 870, 871, 872, 873, 874, 875, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 893, 901, 902, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 958, 973, 975, 976, 979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1049, 1050, 1067, 1068, 1069, 1070, 1071, 1081, 1082, 1093, 1112], "parametr": [110, 686, 689, 759, 762], "params_guess": 130, "parasit": 767, "pardi": 134, "parent": [224, 228, 230, 236, 616, 704, 958, 975, 978, 990, 993, 1001, 1003, 1011, 1015, 1020, 1021, 1022, 1025, 1031, 1034, 1037, 1038, 1039, 1110], "parent_tax_id": [236, 996], "parenthes": 1110, "parenthesi": 230, "parker": [108, 121], "pars": [225, 226, 227, 229, 237, 915, 916, 917, 918, 1105], "parse_biom_t": 916, "parse_f": 916, "parser": [228, 230, 1105], "part": [220, 225, 227, 230, 233, 683, 687, 704, 857, 939, 1009, 1070, 1110], "partial": [53, 134, 322, 893], "partial_beta_divers": 151, "partialdistancematrix": 151, "particip": 888, "particuarli": 225, "particular": [1, 958, 1046, 1112], "particularli": 980, "partit": [704, 705, 906], "pass": [1, 65, 72, 85, 93, 94, 97, 104, 146, 150, 151, 152, 153, 177, 178, 190, 191, 220, 222, 225, 227, 232, 233, 235, 248, 249, 250, 262, 268, 269, 270, 271, 272, 273, 274, 275, 277, 324, 326, 378, 381, 382, 405, 407, 409, 431, 432, 440, 451, 475, 477, 479, 498, 499, 503, 504, 526, 528, 530, 550, 551, 556, 557, 580, 582, 584, 606, 607, 615, 616, 635, 637, 650, 651, 653, 658, 675, 682, 712, 725, 731, 736, 747, 749, 751, 758, 761, 764, 802, 870, 872, 887, 927, 940, 941, 956, 1005, 1007, 1016, 1040, 1043, 1093, 1110, 1112], "passthrough": 95, "password": 237, "patch": 268, "path": [3, 13, 14, 15, 16, 17, 18, 19, 34, 44, 45, 46, 47, 48, 50, 51, 52, 87, 219, 223, 225, 226, 233, 277, 295, 342, 360, 376, 379, 906, 974, 1068], "pathwai": [890, 906, 957], "pattern": [236, 408, 436, 478, 502, 529, 555, 583, 612, 636, 858, 1107, 1112], "paw": [504, 539, 552], "pawhea": 0, "pawlowski": [686, 700, 706], "pc": [1, 768, 869], "pca": [873, 879, 881], "pcbi": [700, 706], "pcoa": [1, 231, 763, 859, 869, 880], "pcoa_result": 869, "pcr": 888, "pd": [1, 65, 85, 90, 95, 116, 134, 146, 214, 220, 221, 236, 327, 419, 487, 538, 594, 616, 640, 665, 678, 681, 689, 694, 707, 719, 728, 730, 743, 754, 755, 757, 759, 760, 763, 768, 858, 859, 869, 873, 881, 886, 887, 904, 933, 949, 996, 997, 1047], "pd_": 134, "pdf": 233, "pdist": [1, 147, 150, 153, 215, 767], "pearson": [225, 761, 764, 767, 983], "pearsonr": [761, 767, 884], "peerj": 134, "penal": [98, 99, 100], "penalize_terminal_gap": [98, 99, 100], "penalti": [0, 53, 98, 99, 100, 101, 102, 103], "pentapetala": 224, "per": [3, 34, 92, 220, 221, 233, 235, 382, 504, 557, 616, 694, 764, 767, 857, 881, 887, 888, 947, 976, 1069], "percent": [220, 1107], "percentag": [220, 686], "percentil": 689, "percentile_df": 689, "perfect": [858, 874], "perform": [0, 1, 3, 53, 91, 92, 104, 116, 130, 146, 148, 149, 150, 151, 217, 225, 226, 234, 299, 377, 382, 439, 452, 504, 557, 614, 616, 656, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 706, 708, 710, 732, 734, 744, 747, 763, 764, 767, 768, 769, 791, 835, 846, 858, 879, 881, 882, 888, 889, 893, 906, 937, 940, 946, 984, 994, 1006, 1012, 1013, 1014, 1020, 1021, 1022, 1024, 1037, 1038, 1041, 1043, 1044, 1047, 1105], "period": [234, 295, 342, 360, 379], "periton": 887, "perm_stat": 767, "permanova": [759, 763], "permdisp2": 763, "permiss": [225, 230, 232], "permit": [3, 230, 249], "permut": [1, 299, 759, 761, 762, 763, 764, 767], "perplex": [121, 138], "perspect": [134, 1036], "pertain": 766, "perturb": [686, 702], "petchei": 116, "peter": 226, "pfam": 235, "pgc": 236, "ph": 760, "phagocyt": 887, "phase": [227, 228], "phe": 504, "phenylalanin": 504, "php": 225, "phred": [225, 226], "phred_offset": [226, 233], "phydiv": 116, "phylip": [93, 97, 225, 230, 1042, 1105, 1110], "phylip_multiple_alignment_format": 232, "phylipformaterror": 232, "phylo": 232, "phylochip": [116, 148, 149], "phylogenet": [1, 116, 134, 148, 149, 230, 232, 707, 767, 958, 981, 991, 1021, 1036, 1041, 1043, 1044, 1104, 1107], "phylogeni": [232, 766, 767, 1041, 1044], "phylum": 996, "physic": [145, 880, 888], "pick": [53, 887], "pickl": [6, 24, 37, 57, 73, 158, 169, 182, 195, 206, 241, 254, 283, 301, 313, 330, 348, 366, 390, 444, 461, 512, 565, 624, 659, 713, 737, 772, 783, 794, 805, 816, 827, 838, 849, 862, 894, 964, 1055, 1074, 1086, 1097], "pident": [220, 221], "pie": [114, 139], "piec": 1112, "pielou": [135, 141], "pielou_": 120, "piet": 874, "pig": [1041, 1044], "pii": 222, "ping": [53, 104], "pipe": 236, "pirrung": 869, "pisc": 123, "pitfal": 84, "pizetti": 118, "place": [95, 230, 235, 377, 451, 857, 879, 882, 914, 937, 940, 950, 953, 1000, 1022, 1034, 1036, 1039, 1044, 1048], "placebo": [689, 694], "plain": [222, 225, 226, 227, 230, 232, 233], "plan": 234, "planetmath": 732, "plankton": 108, "plant": [144, 224, 704], "plastid": 236, "pleas": [72, 93, 97, 177, 178, 190, 191, 225, 233, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040, 1109], "pleij": 235, "plm": [2, 223], "pln": [224, 236], "plo": [53, 104, 124, 125, 700, 706], "ploson": [53, 104], "plot": [1, 859], "plu": [236, 382, 504, 557], "plugin": 234, "plural": [1, 279], "pm": 115, "pmid": [235, 761, 1041, 1043, 1044], "png": 859, "point": [84, 118, 123, 125, 218, 222, 234, 237, 249, 298, 363, 425, 432, 435, 492, 499, 501, 544, 551, 554, 600, 607, 611, 645, 651, 652, 666, 763, 769, 791, 846, 858, 869, 887, 888, 1001, 1021, 1047, 1068], "poisson": [124, 125], "polymeras": 235, "pone": [53, 104], "pool": 107, "poorli": [767, 879], "pop": [1015, 1017, 1018, 1023], "popul": [106, 110, 117, 119, 143, 233, 235, 425, 492, 544, 600, 645, 701, 765, 884, 888], "port": 234, "portal": 236, "portion": 761, "pos_rat": 888, "posit": [0, 3, 13, 14, 15, 16, 18, 34, 45, 46, 47, 48, 51, 53, 65, 66, 70, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 220, 221, 222, 225, 226, 227, 230, 232, 233, 234, 235, 382, 387, 389, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 419, 420, 422, 425, 426, 427, 428, 429, 430, 432, 433, 437, 438, 439, 451, 452, 458, 460, 463, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 480, 487, 488, 489, 492, 493, 494, 495, 496, 497, 499, 504, 509, 511, 514, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 531, 538, 540, 541, 544, 545, 546, 547, 548, 549, 551, 552, 557, 562, 564, 567, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 585, 594, 595, 597, 600, 601, 602, 603, 604, 605, 607, 608, 609, 613, 614, 616, 621, 623, 626, 630, 631, 632, 633, 634, 636, 640, 641, 642, 645, 646, 647, 648, 649, 651, 687, 688, 689, 698, 761, 767, 846, 859, 884, 885, 887, 888, 893, 920, 933, 1011, 1020, 1036, 1037, 1039, 1107], "positional_metadata": [65, 70, 83, 90, 91, 92, 225, 235, 382, 387, 399, 400, 403, 419, 425, 432, 433, 453, 458, 470, 473, 487, 492, 499, 504, 509, 521, 524, 538, 544, 551, 557, 562, 574, 575, 578, 594, 600, 607, 608, 616, 621, 633, 640, 645, 651, 1107], "possibl": [1, 53, 72, 135, 141, 145, 225, 226, 234, 235, 322, 406, 439, 452, 476, 527, 581, 614, 760, 764, 887, 983, 1033, 1042], "post": [232, 884, 888], "posterior": [694, 958], "postmenopaus": 888, "postord": [988, 991, 1006, 1009, 1013, 1014, 1030, 1033, 1110], "potenti": [225, 422, 489, 541, 597, 642, 857, 1018, 1045, 1112], "pound": [234, 363], "power": [686, 694, 890, 957, 1105], "pp": [117, 129, 136, 874], "ppo": [220, 221], "practic": [1, 92, 134, 225, 226, 233, 857, 986, 991], "pre": [408, 436, 478, 502, 529, 555, 583, 612, 636, 654, 666, 671, 888], "pre_and_postord": [1006, 1009, 1012, 1014, 1030, 1033], "pre_rat": 888, "prealloc": 1070, "preced": [53, 222, 230, 232], "precomput": 883, "predefin": [228, 405, 475, 526, 580, 635], "predict": [124, 125, 235, 887], "prefer": [84, 146, 150, 226, 295, 342, 360, 379, 873, 874], "prefer_self": 931, "prefix": 236, "preliminari": 887, "premenopaus": 888, "preorder": [1006, 1009, 1012, 1013, 1030, 1033, 1110], "prepar": 234, "preq1": 227, "presenc": [111, 134, 442, 451, 888, 938], "present": [83, 84, 116, 148, 149, 220, 223, 225, 231, 234, 235, 309, 310, 363, 382, 399, 402, 403, 404, 409, 410, 420, 430, 433, 451, 472, 473, 474, 479, 480, 488, 497, 504, 523, 524, 525, 530, 531, 540, 549, 552, 557, 574, 577, 578, 579, 584, 585, 595, 605, 608, 637, 641, 668, 689, 721, 746, 759, 760, 762, 763, 802, 868, 879, 888, 889, 906, 915, 916, 955, 982, 1042, 1043, 1046, 1110], "preserv": [230, 363, 858, 873, 874, 879], "press": [109, 136], "presum": 225, "prevent": 53, "previou": [1, 98, 99, 100, 101, 102, 103, 387, 458, 509, 562, 621, 759, 761, 763], "previous": [0, 425, 432, 492, 499, 544, 551, 600, 607, 645, 651, 1112], "pri": 236, "primari": [237, 1107], "primer": 760, "princip": [1, 763, 869, 873, 879, 880], "principl": [884, 1041, 1044], "print": [0, 1, 91, 116, 148, 149, 222, 225, 226, 227, 228, 230, 232, 233, 235, 406, 422, 435, 439, 452, 476, 489, 501, 527, 541, 554, 581, 597, 611, 614, 616, 642, 652, 677, 707, 727, 753, 761, 767, 768, 857, 884, 888, 903, 904, 905, 906, 907, 910, 914, 920, 922, 923, 927, 928, 929, 930, 931, 934, 937, 938, 939, 940, 944, 945, 946, 952, 953, 955, 975, 976, 979, 980, 983, 984, 985, 988, 990, 991, 992, 994, 996, 997, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1018, 1020, 1021, 1022, 1023, 1024, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1041, 1042, 1043, 1044, 1107, 1110, 1112], "printabl": [226, 233], "prior": [451, 761, 764, 946, 996, 1022, 1071, 1081, 1112], "prioriti": [134, 1082, 1083, 1112], "privat": [227, 976], "prng": 857, "pro": 504, "prob": [65, 70, 83, 91], "probabl": [112, 114, 124, 125, 136, 137, 139, 694, 768, 780, 857, 873, 884, 888, 958], "problem": [234, 689, 879, 1044], "problemat": [234, 1031], "proc": [100, 103], "procedur": [763, 1105], "proceed": [136, 666], "process": [151, 225, 235, 322, 694, 881, 951, 952, 1046, 1071, 1112], "process_func": 918, "processor": 1112, "prod": [692, 704], "prod_": 138, "produc": [106, 220, 221, 232, 233, 248, 422, 489, 541, 597, 642, 873, 881], "product": [0, 298, 697, 761], "program": [229, 230, 234, 236], "progress": 760, "prohibit": [1037, 1038, 1039], "project": [151, 226, 687, 704, 759, 760, 761, 762, 763, 880], "prolin": 504, "promis": 689, "pronounc": [890, 957, 1104], "prop_expl": [768, 769, 791, 802, 835, 846], "propag": 616, "proper": 1022, "properli": [230, 277], "properti": [222, 232, 236, 377, 442, 448, 453, 654, 670, 722, 732, 747, 884, 978, 1015, 1050, 1062, 1064, 1065, 1066, 1106], "proport": [106, 112, 114, 118, 119, 121, 122, 130, 134, 136, 138, 139, 145, 231, 412, 587, 684, 686, 687, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 759, 761, 762, 768, 802, 846, 859, 873, 879, 881, 981], "proportion": [700, 706], "proportion_explain": [858, 859], "propos": [106, 138, 1043], "prot": 224, "protein": [0, 2, 53, 65, 84, 98, 100, 103, 104, 166, 179, 220, 222, 223, 224, 225, 226, 227, 232, 233, 235, 422, 435, 438, 439, 441, 451, 452, 453, 489, 501, 597, 611, 613, 614, 616, 642, 652, 666, 887, 1107], "protein_from_dna": 1107, "protein_from_rna": 1107, "protein_id": 224, "proteinembed": 223, "proteinvector": 223, "provid": [0, 1, 2, 44, 50, 53, 65, 82, 84, 85, 93, 94, 99, 102, 104, 106, 116, 123, 134, 146, 147, 148, 149, 150, 177, 190, 220, 223, 225, 226, 230, 232, 234, 235, 236, 237, 248, 250, 269, 270, 273, 274, 276, 278, 293, 295, 324, 340, 342, 358, 360, 363, 376, 377, 378, 379, 387, 409, 422, 425, 431, 435, 458, 479, 489, 492, 498, 501, 509, 530, 541, 544, 550, 554, 557, 562, 584, 597, 600, 606, 611, 616, 621, 637, 642, 645, 650, 652, 654, 670, 675, 681, 686, 694, 707, 708, 722, 725, 730, 747, 751, 757, 759, 760, 761, 762, 763, 765, 768, 802, 857, 858, 859, 869, 870, 875, 884, 886, 887, 889, 890, 901, 909, 911, 914, 916, 921, 923, 924, 929, 930, 932, 934, 939, 940, 941, 946, 950, 951, 953, 955, 957, 980, 988, 991, 996, 1010, 1016, 1020, 1024, 1031, 1036, 1042, 1043, 1044, 1071, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112], "proxim": 858, "prune": [979, 1023, 1034, 1035, 1036], "psa": [98, 101], "pseudo": [762, 884], "pseudocount": [686, 689, 694], "pseudoknot": 235, "pub": [224, 236, 298], "public": [134, 226, 869], "publish": [226, 235], "pubm": [224, 227, 616], "pull": 225, "pure": [0, 1045], "purin": [382, 407, 477, 528, 582, 1107], "purpos": [0, 1, 104, 107, 234, 236, 441, 884, 1112], "put": [121, 384, 455, 506, 559, 618], "pvalu": 694, "pwmantel": 761, "pwr": 887, "pwr_001": 884, "pwr_010": 884, "pwr_100": 884, "pwr_est": 888, "pwr_est2": 888, "py": [226, 237], "pycog": [116, 148, 149, 1042], "pyl": 504, "pyrimidin": [382, 407, 582], "pyrosequenc": [116, 148, 149], "pyrrolysin": 504, "python": [0, 1, 20, 616, 707, 732, 761, 1045, 1050, 1104, 1105, 1107], "q": [53, 121, 123, 136, 145, 221, 504, 874, 875], "q2": 234, "q2cli": 234, "qacc": [220, 221], "qaccver": [220, 221], "qcov": [220, 221], "qcovhsp": [220, 221], "qd": 121, "qend": [220, 221], "qframe": [220, 221], "qgi": [220, 221], "qh": [136, 145], "qiim": [116, 148, 149, 234, 363], "qiime2": [234, 295, 342, 360, 363, 376, 379], "qiita": 234, "qiu": 767, "qlen": [220, 221], "qseq": [220, 221, 431, 498, 550, 606, 650], "qseqid": [220, 221], "qstart": [220, 221], "quadrat": 136, "qual": 226, "qual_fl": 225, "qualifi": [224, 227], "qualit": [148, 149, 869], "qualiti": [90, 225, 233, 382, 387, 399, 403, 419, 433, 458, 473, 487, 504, 509, 524, 538, 557, 562, 574, 578, 594, 608, 616, 621, 640, 869, 1107], "quantifi": 1, "quantil": [123, 694], "quantit": [134, 148, 149, 873, 888], "quantiti": 149, "quartil": 123, "queri": [0, 50, 53, 104, 220, 221, 308, 375, 616], "query1": 221, "query_begin": 20, "query_sequ": [0, 20, 53, 54], "quick": [658, 712, 736, 744, 869, 873], "quit": 1112, "quot": 230, "qvalu": 694, "r": [1, 53, 116, 117, 123, 124, 125, 126, 127, 134, 148, 149, 226, 227, 236, 277, 382, 504, 557, 666, 686, 687, 688, 692, 693, 694, 695, 696, 704, 759, 760, 761, 762, 763, 767, 869, 873, 874, 881, 905, 980, 1023, 1041, 1044], "r1": 1107, "r2": 1107, "r3": 1107, "r4": 1107, "r5": 1107, "r_i": 704, "r_m": 761, "ra": [224, 235], "raaijmak": 130, "raimon": 704, "rais": [65, 82, 84, 85, 88, 92, 94, 96, 107, 116, 117, 118, 134, 146, 148, 149, 150, 154, 216, 225, 226, 232, 237, 248, 249, 250, 269, 270, 271, 273, 274, 275, 290, 322, 337, 355, 373, 376, 377, 384, 400, 401, 405, 407, 409, 420, 421, 423, 424, 426, 427, 428, 429, 435, 451, 453, 455, 470, 471, 475, 477, 479, 488, 490, 491, 493, 494, 495, 496, 501, 506, 521, 522, 526, 528, 530, 540, 542, 543, 545, 546, 547, 548, 554, 559, 575, 576, 580, 582, 584, 595, 596, 598, 599, 601, 602, 603, 604, 611, 618, 633, 634, 635, 637, 641, 643, 644, 646, 647, 648, 649, 652, 658, 665, 666, 668, 669, 670, 673, 677, 681, 684, 685, 691, 698, 699, 705, 712, 719, 721, 722, 723, 727, 730, 736, 743, 746, 747, 748, 753, 757, 759, 760, 761, 763, 764, 802, 846, 857, 869, 871, 873, 874, 879, 887, 888, 889, 890, 893, 901, 903, 907, 909, 910, 914, 915, 916, 921, 922, 923, 924, 927, 928, 929, 930, 932, 933, 934, 940, 942, 943, 946, 953, 955, 957, 973, 980, 981, 983, 986, 988, 989, 991, 992, 994, 996, 998, 1001, 1005, 1007, 1010, 1021, 1022, 1023, 1024, 1029, 1034, 1047, 1048, 1049, 1050], "rand": [166, 179, 765], "randint": 884, "randn": [884, 887, 888], "random": [115, 117, 130, 166, 179, 218, 694, 759, 763, 765, 857, 874, 884, 886, 887, 888, 889, 946], "random_fn": 765, "randomli": [112, 139, 749, 759, 761, 762, 765, 857, 889, 946, 983, 1024], "randomst": [983, 1024], "rang": [90, 112, 121, 123, 135, 136, 145, 149, 226, 227, 234, 399, 403, 409, 419, 422, 433, 473, 479, 487, 489, 524, 530, 538, 541, 574, 578, 584, 594, 597, 608, 637, 640, 642, 759, 760, 869, 888, 922, 927, 946, 1000, 1020, 1112], "rangeindex": [65, 82, 85, 94, 232], "rangle_a": [695, 697], "rank": [1, 123, 144, 236, 689, 759, 760, 761, 883, 940, 996, 997], "rapid": [218, 225, 1000], "rapidli": 1112, "rare": [107, 121, 888], "rare_threshold": 107, "rarefact": [130, 946], "rat": [1041, 1044], "rate": [107, 654, 884], "rather": [1, 123, 230, 654, 686, 767, 984, 1043], "ratio": [124, 135, 141, 686, 687, 688, 689, 692, 693, 695, 696, 700, 706, 888], "rational": 883, "raw": [220, 790, 823], "raw_f": [790, 823, 834], "raxml": 232, "rbwpd_": 134, "rc": [235, 399, 574, 674, 724, 750, 869], "rda": [231, 859, 873, 874], "re": [0, 1, 82, 85, 92, 116, 146, 148, 149, 150, 219, 222, 225, 226, 232, 235, 382, 408, 436, 453, 478, 502, 504, 529, 555, 557, 583, 612, 616, 636, 764, 873, 881, 883, 884, 888, 903, 946, 1031, 1036, 1037, 1039, 1041, 1043, 1110, 1112], "reach": 232, "read": [1, 53, 97, 116, 148, 149, 178, 191, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 266, 268, 270, 274, 277, 278, 326, 376, 381, 382, 439, 440, 451, 452, 503, 504, 556, 557, 614, 615, 616, 653, 682, 705, 707, 731, 758, 764, 872, 905, 956, 972, 973, 974, 976, 978, 979, 980, 981, 982, 983, 984, 985, 988, 989, 991, 992, 993, 994, 996, 998, 999, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1050, 1110], "read_numb": 233, "read_sequ": 20, "readabl": [218, 225, 226, 229, 230, 231, 232, 277, 1049], "reader": [93, 177, 190, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 263, 268, 269, 270, 273, 274, 324, 378, 431, 498, 550, 606, 650, 675, 725, 751, 870, 941, 1016], "readi": [0, 237], "reading_fram": [439, 451, 452, 614], "readlin": [248, 277], "real": [91, 225, 226, 233, 686, 687, 688, 692, 693, 695, 696, 701, 702, 703], "realli": 1, "rearrang": [1039, 1044], "rearranged": 1044, "reason": [1, 117, 130, 224, 230, 887, 916], "reassign": [94, 232, 761], "reassign_index": [65, 82, 85, 95, 96, 232], "reca": 323, "recal": 230, "recapitul": 767, "recaptur": 107, "receiv": [237, 238, 249, 409, 479, 530, 584, 637, 1042], "recent": [232, 451, 616, 761], "receptor": 887, "reciproc": [122, 888], "recod": 84, "recogn": [234, 933, 943], "recommend": [1, 123, 134, 232, 235, 382, 453, 504, 557, 616, 689, 707, 869, 873, 881, 887], "recomput": [82, 85, 92], "reconstruct": [1015, 1041, 1043, 1044, 1107], "record": [221, 224, 225, 226, 227, 228, 233], "rectangl": 118, "recurs": [230, 976, 1037, 1038, 1039], "red": [674, 724, 750], "redefin": [761, 1050], "reduc": [151, 295, 342, 360, 379, 763, 857, 879, 906], "reduce_f": 151, "reduct": 858, "redund": [676, 708, 726, 732, 752, 881, 1038], "redundant_form": 700, "reeder": [124, 125], "ref": 220, "refer": [1, 50, 53, 72, 84, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 144, 145, 148, 149, 151, 298, 382, 441, 449, 450, 453, 504, 557, 616, 654, 666, 676, 687, 688, 689, 694, 698, 700, 704, 706, 708, 726, 732, 744, 752, 759, 760, 761, 762, 763, 767, 869, 873, 874, 881, 890, 916, 950, 957, 978, 981, 984, 1011, 1021, 1039, 1041, 1042, 1043, 1044, 1109], "reference_sequ": 20, "reflect": [277, 767, 1015, 1020], "regard": 694, "regardless": [53, 83, 91, 92, 235, 363, 377, 451, 672, 765], "regex": [408, 436, 478, 502, 529, 555, 583, 612, 636], "region": [228, 298, 308, 422, 489, 541, 597, 642], "regist": [97, 178, 191, 237, 238, 248, 249, 250, 262, 268, 270, 272, 274, 326, 381, 440, 503, 556, 615, 653, 682, 731, 758, 872, 956, 1040], "registri": [93, 97, 177, 178, 190, 191, 219, 223, 225, 226, 233, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040, 1105], "regress": [686, 761, 881, 888], "regsistri": [262, 272], "regular": [219, 223, 230, 408, 436, 478, 502, 529, 555, 583, 612, 636, 1107], "reject": [689, 694, 884], "rel": [88, 106, 134, 219, 224, 227, 290, 337, 355, 373, 377, 409, 411, 412, 424, 426, 428, 479, 491, 493, 495, 530, 543, 545, 547, 584, 586, 587, 599, 601, 603, 637, 644, 646, 648, 700, 706, 744, 1025, 1047, 1082, 1107], "relat": [1, 116, 117, 127, 134, 148, 149, 151, 224, 225, 229, 235, 707, 755, 873, 874, 881, 916, 950, 1022], "relationship": [1, 134, 230, 873, 874, 881, 884, 888, 906, 1041, 1043, 1108], "relax": 232, "releas": [116, 134, 148, 149, 224, 236], "relev": [1, 53, 227, 694, 887, 906, 916, 950, 1043, 1107], "reli": [133, 234, 295, 342, 360, 379, 382, 504, 557], "reliabl": 694, "reload": 226, "remain": [94, 225, 1022, 1039], "remaind": [225, 906], "rememb": [234, 298], "remot": 227, "remov": [84, 104, 116, 134, 148, 149, 166, 225, 229, 232, 289, 321, 336, 354, 403, 434, 473, 500, 524, 553, 578, 610, 910, 939, 943, 975, 990, 1011, 1015, 1018, 1020, 1021, 1022, 1023, 1034, 1036, 1037, 1107], "remove_delet": [1011, 1015, 1017, 1023], "remove_empti": 939, "renam": [227, 418, 430, 486, 497, 537, 549, 593, 605, 689, 1037], "render": 1043, "renyi": [121, 145], "reorder": [761, 764, 979, 983], "repeat": [1, 226, 884, 1067], "repeatedli": 884, "repect": 225, "repen": 224, "replac": [1, 19, 52, 105, 112, 130, 225, 382, 434, 437, 500, 504, 553, 557, 609, 610, 654, 686, 689, 698, 699, 857, 882, 889, 946, 953, 1031], "replic": 988, "report": [134, 234, 249, 694, 767, 881], "repres": [1, 3, 13, 15, 17, 34, 44, 47, 50, 83, 106, 112, 114, 116, 119, 121, 122, 130, 136, 138, 139, 145, 148, 149, 151, 166, 179, 192, 203, 215, 218, 219, 220, 221, 224, 225, 229, 230, 232, 234, 235, 236, 298, 319, 327, 363, 382, 435, 501, 504, 554, 557, 611, 616, 652, 654, 658, 665, 670, 681, 695, 696, 704, 705, 712, 719, 722, 730, 736, 743, 747, 757, 767, 858, 869, 884, 893, 906, 917, 942, 947, 951, 958, 1027, 1032, 1041, 1042, 1043, 1107, 1110], "represent": [0, 1, 12, 43, 165, 175, 176, 179, 189, 201, 202, 203, 213, 218, 219, 225, 230, 234, 308, 425, 449, 492, 544, 600, 645, 664, 705, 718, 742, 766, 859, 868, 890, 893, 906, 916, 952, 957, 958, 972, 1031, 1032, 1105, 1110], "representationwarn": 1029, "reprint": 118, "reproduc": [92, 116, 148, 149], "reproduct": 888, "request": [225, 374, 665, 681, 719, 730, 743, 757, 903, 910, 922, 933, 988, 1068, 1105], "requir": [53, 116, 124, 125, 134, 148, 149, 218, 221, 222, 225, 228, 232, 235, 236, 323, 363, 376, 438, 451, 452, 613, 705, 707, 732, 761, 767, 857, 878, 886, 893, 906, 915, 980, 986, 1021, 1022, 1043, 1044, 1046, 1070, 1105, 1107, 1112], "reroot": [1020, 1021, 1022], "rerrang": 1039, "rerun": 761, "res_metadata": 904, "res_tabl": [904, 905], "res_tre": 905, "resampl": 946, "research": [1, 236, 761, 879], "resembl": 225, "reserv": [232, 234], "reset": [82, 85, 94, 1020, 1021, 1022], "reset_index": [82, 85], "reshap": [922, 927], "resid": 857, "residu": [84, 166, 223, 881], "resolv": [151, 154, 234, 767], "resourc": [134, 234, 236, 277], "respect": [1, 65, 110, 225, 228, 231, 234, 236, 248, 249, 250, 268, 269, 271, 273, 275, 277, 363, 409, 479, 530, 584, 616, 637, 665, 670, 672, 681, 689, 704, 719, 722, 730, 743, 747, 755, 757, 767, 858, 859, 904, 905, 926, 927, 928, 947], "respons": [93, 97, 177, 178, 190, 191, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 790, 823, 834, 858, 870, 872, 874, 881, 941, 956, 1016, 1040], "restrict": [72, 116, 148, 149, 232, 327, 363, 1107], "result": [1, 20, 53, 54, 84, 86, 92, 98, 99, 100, 116, 117, 123, 137, 146, 148, 149, 150, 154, 217, 220, 221, 225, 234, 237, 277, 320, 375, 377, 382, 399, 400, 403, 433, 435, 470, 473, 501, 504, 521, 524, 554, 557, 574, 575, 578, 608, 611, 633, 652, 689, 694, 697, 698, 701, 747, 759, 761, 762, 763, 764, 765, 768, 779, 780, 790, 791, 801, 812, 813, 823, 824, 834, 835, 845, 856, 857, 859, 868, 869, 873, 874, 879, 881, 884, 889, 906, 907, 928, 931, 939, 946, 950, 952, 991, 1008, 1023, 1031, 1032, 1036, 1042, 1043, 1048, 1105, 1107, 1112], "result_constructor": 1043, "retain": [92, 290, 337, 355, 372, 373, 400, 432, 470, 499, 521, 551, 575, 607, 633, 651, 668, 721, 746, 857, 906, 946, 955], "retriev": [291, 293, 338, 340, 356, 358, 363, 374, 375, 616, 732, 916, 920, 922], "return": [0, 1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 193, 194, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 228, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 767, 770, 771, 773, 774, 775, 776, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 792, 793, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 818, 819, 820, 821, 822, 825, 826, 828, 829, 830, 831, 832, 833, 836, 837, 839, 840, 841, 842, 843, 844, 845, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 873, 874, 875, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 892, 893, 895, 897, 898, 899, 904, 905, 906, 908, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 959, 960, 961, 962, 965, 966, 968, 970, 971, 972, 973, 974, 976, 980, 981, 982, 983, 984, 985, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1067, 1068, 1069, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1107, 1112], "return_cod": [435, 501, 554, 611, 652], "reus": [53, 883], "rev": 1024, "reveal": [858, 1043], "revers": [80, 91, 95, 237, 397, 399, 421, 433, 439, 451, 452, 468, 519, 572, 574, 596, 608, 609, 614, 631, 759, 763, 944, 1024, 1107, 1112], "reverse_compl": [399, 421, 574, 596, 1107], "reverse_transcrib": 438, "review": 978, "revisit": 704, "rf": [439, 452, 614], "rfam": 235, "rho": 760, "riboswitch": [227, 298], "rice": 226, "rich": [1, 110, 116, 121, 126, 129, 130, 134, 143, 145], "rich_sparse_otu_table_hdf5": 916, "right": [92, 107, 138, 230, 377, 686, 687, 688, 692, 697, 701, 702, 703, 704, 1000, 1047, 1048, 1112], "right_child_id": 1031, "rightarrow": [687, 688, 692, 693, 695, 696], "risk": 888, "rl": [224, 235], "rm": [235, 769, 835], "rn": [224, 235], "rna": [0, 65, 70, 99, 102, 104, 222, 224, 225, 226, 227, 232, 233, 235, 382, 400, 437, 438, 439, 441, 451, 452, 453, 470, 521, 616, 633, 694, 1107], "rna_seq": [224, 227], "robbin": 119, "robinson": 981, "robust": [134, 234, 700, 706, 763, 767], "role": [235, 654, 887], "rome": 118, "root": [1, 3, 116, 129, 134, 148, 149, 230, 236, 705, 973, 974, 975, 976, 978, 979, 980, 984, 988, 989, 990, 993, 994, 996, 998, 1003, 1005, 1007, 1008, 1015, 1020, 1021, 1022, 1025, 1027, 1029, 1031, 1032, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1110], "root_at": [1021, 1036, 1038, 1039], "root_at_midpoint": [1020, 1043], "root_nam": [1020, 1021, 1022, 1037], "rosid": 224, "roughli": 130, "round": [116, 123, 130, 148, 149, 761, 884, 887, 888, 988], "roundtrip": [219, 223], "roundtripp": [295, 342, 360, 363, 379], "routin": 732, "row": [1, 65, 146, 150, 151, 154, 166, 179, 192, 203, 214, 218, 219, 223, 232, 298, 363, 654, 658, 673, 688, 689, 691, 694, 695, 696, 698, 699, 701, 702, 703, 704, 707, 708, 712, 723, 736, 748, 749, 755, 759, 760, 761, 762, 763, 764, 765, 767, 859, 873, 874, 877, 881, 887, 888, 893, 900, 911, 916, 917, 922, 926, 927, 928, 942, 943, 950, 952, 1047], "rozan": 704, "rp": 224, "rpd": 134, "rpd_": 134, "rrna": [1, 694], "rt": [224, 235], "rtol": 1047, "rubbbbrbcefgh": 233, "rule": [107, 225, 232, 234, 235, 1042], "run": [1, 3, 116, 146, 148, 149, 150, 226, 233, 234, 407, 477, 528, 582, 689, 759, 760, 761, 763, 764, 767, 779, 801, 812, 845, 856, 869, 1107, 1112], "run_numb": 233, "runtim": [225, 382, 504, 557, 1070, 1112], "runtimeerror": 117, "rvrywstlnepwvfsnsgyalgtnapgrcsasnvakpgdsgtgpyivthnqi": 224, "rvsrv": 235, "rx": 224, "rykmbdhvn": [411, 412, 586, 587], "r\u00e9nyi": 136, "s1": [0, 1, 382, 384, 400, 401, 405, 420, 421, 426, 427, 428, 429, 455, 470, 471, 475, 488, 493, 494, 495, 496, 504, 506, 521, 522, 526, 540, 545, 546, 547, 548, 557, 559, 575, 576, 580, 595, 596, 601, 602, 603, 604, 616, 618, 633, 634, 635, 641, 646, 647, 648, 649, 689, 694, 759, 763, 903, 904, 905, 907, 909, 910, 913, 914, 920, 921, 922, 923, 924, 926, 928, 931, 932, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 952, 953, 955], "s12064": [700, 706], "s2": [0, 1, 400, 405, 470, 475, 521, 526, 575, 580, 633, 635, 689, 694, 759, 763, 903, 904, 905, 907, 910, 913, 914, 920, 921, 922, 923, 924, 926, 928, 931, 932, 937, 938, 939, 940, 942, 944, 945, 946, 947, 949, 952, 953, 955], "s3": [689, 694, 759, 763, 903, 904, 905, 907, 913, 914, 921, 922, 923, 924, 928, 931, 932, 938, 939, 940, 942, 944, 945, 946, 947, 949, 952, 953, 955], "s4": [689, 694, 759, 763, 904, 905, 907, 913, 922], "s46826": 224, "s5": [689, 694, 759, 763, 907, 922], "s6": [689, 694, 763, 907], "s7": [763, 907], "s8": 907, "s9": 907, "s_": [1, 107, 110, 121, 123, 130, 143, 145], "s_i": 704, "sa": 235, "sacc": [220, 221], "saccver": [220, 221], "safe": [1, 116, 146, 148, 149, 150, 234, 879, 976], "safe_char": 230, "saga": [308, 320, 616], "sagb": [308, 320], "sagc": 308, "sai": [298, 308, 888], "saitou": 1043, "sallacc": [220, 221], "sallgi": [220, 221], "sallseqid": [220, 221], "salltitl": [220, 221], "salmo": [225, 232], "salvemini": 118, "sam_id": 927, "same": [1, 65, 83, 84, 85, 88, 92, 94, 106, 112, 116, 121, 123, 134, 135, 141, 148, 149, 214, 215, 216, 217, 223, 225, 226, 227, 228, 230, 233, 235, 237, 290, 311, 325, 327, 337, 355, 372, 373, 377, 387, 389, 396, 399, 400, 403, 405, 406, 422, 426, 427, 428, 429, 433, 434, 438, 441, 442, 451, 458, 460, 467, 470, 473, 475, 476, 489, 493, 494, 495, 496, 500, 509, 511, 518, 521, 524, 526, 527, 541, 545, 546, 547, 548, 553, 562, 564, 571, 574, 575, 578, 580, 581, 597, 601, 602, 603, 604, 608, 610, 613, 616, 621, 623, 630, 633, 635, 642, 646, 647, 648, 649, 656, 658, 666, 667, 668, 670, 677, 680, 684, 685, 689, 694, 710, 712, 720, 721, 722, 727, 729, 734, 736, 745, 746, 747, 749, 753, 756, 759, 760, 761, 762, 763, 764, 767, 857, 871, 873, 874, 878, 879, 881, 887, 888, 889, 893, 906, 914, 937, 953, 992, 1024, 1039, 1042, 1047, 1107, 1110], "samp_id": [920, 922], "sampl": [1, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 217, 218, 219, 234, 363, 686, 689, 694, 708, 759, 760, 762, 763, 769, 802, 835, 846, 857, 859, 868, 869, 871, 873, 874, 879, 880, 881, 884, 886, 887, 888, 901, 902, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 916, 918, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 983, 1048, 1108], "sample1": [911, 917], "sample2": [911, 917], "sample3": 917, "sample4": 917, "sample5": 917, "sample6": 917, "sample_constraint": 859, "sample_count": [887, 888], "sample_gen": 927, "sample_group_metadata": 890, "sample_id": [890, 927, 935, 940], "sample_index": 890, "sample_map": 918, "sample_md": 1, "sample_metadata": [234, 378, 381, 890, 910], "sample_metadata_f": 931, "sample_nam": 234, "sample_typ": [914, 939], "samplea": 857, "sampleb": 857, "samplec": 857, "sampleid": [234, 915], "samplemetadata": 234, "samplerecord": 227, "sanger": 226, "sapien": 225, "sapiensaccggttggc": 232, "satisfi": [237, 323, 886, 1093], "save": [53, 308, 363, 376, 708, 790, 823, 834, 1012], "sb": 98, "sbc": 235, "sbjct": 221, "sbjctframe": 221, "sblastnam": [220, 221], "sbp": 704, "scalar": [111, 435, 501, 554, 611, 652, 654, 658, 697, 703, 707, 712, 736, 869, 930, 934], "scale": [114, 760, 873, 874, 875, 881], "scale_i": 881, "scandinavian": 110, "scatter": 869, "scatterplot": [859, 869], "scenario": [223, 689, 1036], "scheme": [236, 277, 292, 296, 297, 339, 343, 344, 357, 361, 362, 363, 376, 380, 674, 724, 750], "schmidt": [695, 696], "schneider": 84, "schoch": 236, "school": 224, "schwartz": 666, "sci": [100, 103, 221, 704], "scienc": [108, 109, 116, 222, 225, 666, 874], "sciencedirect": 222, "scientif": [220, 234, 732, 858], "sciki": 225, "scikit": [0, 1, 89, 90, 93, 97, 98, 101, 104, 105, 116, 148, 149, 150, 151, 152, 153, 154, 177, 178, 190, 191, 219, 220, 221, 222, 224, 225, 226, 230, 231, 232, 233, 235, 236, 324, 326, 378, 381, 417, 419, 431, 438, 439, 440, 441, 451, 452, 485, 487, 498, 503, 536, 538, 550, 556, 592, 594, 606, 613, 614, 615, 639, 640, 650, 653, 675, 682, 683, 725, 731, 751, 758, 858, 870, 872, 941, 956, 1016, 1036, 1040, 1045, 1107, 1111], "scipi": [1, 117, 147, 150, 153, 215, 676, 684, 689, 694, 705, 708, 726, 732, 744, 752, 755, 760, 761, 763, 767, 879, 884, 887, 888, 909, 940, 950, 995], "scomnam": [220, 221], "scope": [116, 1112], "score": [0, 53, 84, 98, 99, 100, 101, 102, 103, 104, 105, 111, 220, 221, 225, 227, 228, 233, 616, 654, 669, 672, 859, 881, 1107], "score_filt": 53, "score_onli": 53, "score_s": 53, "sdbl": 988, "sdr": 123, "sdrhelp": 123, "se": 235, "sea": 108, "search": [67, 98, 220, 221, 225, 291, 323, 338, 356, 375, 407, 420, 477, 488, 528, 540, 582, 595, 641, 655, 709, 733, 874, 909, 921, 924, 932, 955, 986, 991, 992, 993, 994, 1067, 1107], "sec": 504, "second": [1, 50, 53, 98, 99, 100, 101, 102, 103, 104, 223, 226, 232, 237, 250, 298, 320, 442, 658, 689, 712, 736, 888, 1000, 1032, 1105, 1112], "secondari": [888, 917], "section": [92, 225, 226, 231, 234, 235, 363, 441, 616, 760, 761, 873, 874], "sediment": 108, "see": [1, 91, 92, 93, 97, 104, 116, 134, 146, 148, 149, 150, 151, 153, 154, 177, 178, 190, 191, 221, 224, 225, 226, 230, 232, 233, 234, 236, 237, 280, 324, 326, 327, 345, 363, 378, 381, 405, 431, 440, 441, 452, 475, 498, 503, 526, 550, 556, 580, 606, 615, 616, 635, 650, 653, 658, 675, 682, 695, 696, 712, 725, 731, 736, 751, 758, 759, 760, 761, 762, 763, 764, 767, 858, 869, 870, 872, 879, 881, 883, 884, 888, 890, 896, 931, 941, 956, 957, 1016, 1040, 1105, 1106, 1112], "seed": [694, 759, 763, 857, 884, 887, 888, 889, 946], "seem": 887, "seen": [224, 227, 888], "segment": [3, 14, 18, 34, 46, 51, 118], "select": [112, 134, 139, 234, 694, 763, 886, 887, 946, 1024, 1041], "selenocystein": 504, "self": [4, 5, 7, 8, 9, 10, 11, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 36, 38, 39, 40, 41, 42, 55, 56, 58, 59, 60, 61, 62, 64, 71, 74, 76, 78, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 180, 181, 183, 184, 185, 186, 187, 188, 193, 194, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 210, 211, 212, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 258, 259, 260, 272, 273, 274, 275, 282, 284, 285, 286, 288, 300, 302, 303, 304, 306, 308, 312, 314, 315, 316, 318, 322, 329, 331, 332, 333, 335, 347, 349, 350, 351, 353, 365, 367, 368, 369, 371, 388, 389, 391, 393, 395, 433, 443, 445, 446, 447, 459, 460, 462, 464, 466, 510, 511, 513, 515, 517, 563, 564, 566, 568, 570, 608, 622, 623, 625, 627, 629, 656, 657, 660, 661, 662, 663, 665, 667, 680, 681, 710, 711, 714, 715, 716, 717, 719, 720, 729, 730, 734, 735, 738, 739, 740, 741, 743, 745, 756, 757, 770, 771, 773, 774, 775, 776, 777, 778, 781, 782, 784, 785, 786, 787, 788, 789, 792, 793, 795, 796, 797, 798, 799, 800, 803, 804, 806, 807, 808, 809, 810, 811, 814, 815, 817, 818, 819, 820, 821, 822, 825, 826, 828, 829, 830, 831, 832, 833, 836, 837, 839, 840, 841, 842, 843, 844, 847, 848, 850, 851, 852, 853, 854, 855, 860, 861, 863, 864, 865, 866, 867, 871, 892, 895, 897, 898, 899, 900, 903, 907, 911, 922, 928, 930, 931, 934, 943, 946, 952, 955, 961, 962, 965, 966, 968, 970, 971, 972, 973, 974, 975, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 1001, 1008, 1009, 1010, 1011, 1017, 1018, 1019, 1020, 1025, 1026, 1027, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1063, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1110, 1112], "self_aft": 1033, "self_befor": 1033, "semi": 230, "semicolon": [225, 228], "semimetr": 879, "send": [220, 221], "sens": [874, 888, 1032, 1043], "sensit": [225, 234, 425, 492, 544, 600, 645], "sep": 224, "separ": [1, 220, 221, 223, 225, 226, 228, 229, 230, 231, 232, 234, 763, 874, 915, 918], "seq": [0, 3, 17, 50, 65, 75, 80, 86, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 220, 221, 222, 225, 226, 228, 232, 233, 385, 386, 399, 406, 409, 417, 419, 432, 433, 435, 436, 439, 452, 453, 456, 457, 476, 479, 485, 487, 499, 501, 502, 507, 508, 527, 530, 536, 538, 551, 554, 555, 560, 561, 574, 581, 584, 592, 594, 607, 608, 611, 612, 614, 616, 619, 620, 637, 639, 640, 651, 652, 694, 857, 1112], "seq1": [0, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 222, 225, 226, 232, 235, 684, 685], "seq2": [0, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 225, 226, 235, 684, 685], "seq3": [65, 85, 225, 232], "seq4": 225, "seq5": 225, "seq_1": 228, "seq_2": 228, "seq_gener": [406, 476, 527, 581], "seq_id": 228, "seq_num": [225, 226, 227, 228, 233], "seqid": 228, "seqr": 227, "sequenc": [1, 3, 13, 14, 15, 18, 19, 34, 45, 46, 47, 50, 51, 52, 53, 65, 66, 68, 69, 70, 75, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 166, 175, 179, 192, 201, 203, 220, 221, 222, 223, 224, 226, 227, 228, 233, 236, 298, 308, 320, 694, 708, 765, 857, 888, 1104, 1105, 1112], "sequence1": 104, "sequence2": 104, "sequenceprocessor": 1112, "sequencevector": [179, 214], "sequenti": [144, 223, 225, 226, 232, 704, 705, 869, 1034], "ser": 504, "seri": [1, 95, 146, 228, 280, 292, 297, 327, 339, 344, 345, 357, 362, 689, 694, 755, 759, 760, 762, 763, 768, 859, 884], "serial": [229, 363, 707, 859, 1105], "serin": 504, "serv": [0, 236, 858, 869, 1020, 1022], "server": [98, 99, 100, 101, 102, 103, 236], "set": [13, 33, 45, 53, 83, 86, 91, 92, 116, 134, 148, 149, 154, 225, 227, 229, 232, 238, 277, 291, 308, 321, 338, 356, 375, 377, 382, 400, 409, 422, 425, 435, 453, 470, 479, 489, 492, 501, 504, 521, 530, 541, 544, 554, 557, 575, 584, 597, 600, 611, 616, 633, 637, 642, 645, 652, 666, 674, 681, 686, 698, 724, 730, 750, 757, 767, 857, 879, 881, 884, 886, 887, 888, 906, 907, 914, 946, 948, 975, 977, 980, 984, 988, 990, 1011, 1020, 1021, 1022, 1026, 1027, 1037, 1039, 1042, 1050, 1061, 1062, 1067, 1107, 1112], "set1": 869, "set_index": 996, "setter": 307, "setup": 1112, "seven": 689, "sever": [116, 230, 232, 884], "sex": [886, 887], "sffaaa": 226, "sfprgfifgagssayqfegavneggrgpsiwdtfthkypekirdgsnaditv": 224, "sframe": [220, 221], "sg": [439, 452, 614], "sgc": [451, 452], "sgi": [220, 221], "shallow": [65, 68, 308, 309, 385, 456, 507, 560, 616, 619, 959, 984, 1037], "shannon": [84, 120, 121, 135, 136, 145], "shannon_entropi": 84, "shape": [3, 13, 14, 15, 17, 18, 19, 34, 44, 45, 46, 47, 51, 52, 77, 86, 216, 218, 231, 656, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 710, 734, 761, 875, 878, 889, 890, 916, 917, 950, 957], "share": [53, 89, 90, 92, 107, 377, 400, 417, 419, 470, 485, 487, 521, 536, 538, 575, 592, 594, 616, 633, 639, 640, 858, 1110], "shear": 1015, "sheet": 234, "shift": 320, "short": 1112, "short_cicruit": 1071, "short_circuit": 1070, "short_method_nam": [859, 1048], "shorter": 232, "should": [1, 53, 84, 105, 106, 112, 116, 117, 130, 134, 143, 146, 147, 148, 149, 150, 220, 227, 231, 234, 236, 237, 248, 249, 250, 290, 308, 337, 355, 363, 373, 382, 405, 422, 423, 424, 434, 441, 475, 489, 490, 491, 500, 504, 526, 541, 542, 543, 553, 557, 580, 597, 598, 599, 610, 635, 642, 643, 644, 685, 687, 688, 689, 700, 706, 744, 761, 763, 767, 857, 873, 874, 879, 880, 881, 884, 887, 888, 901, 902, 911, 946, 952, 955, 996, 1001, 1018, 1020, 1021, 1022, 1037, 1039], "shouldn": 874, "show": [1, 308, 884, 1110], "show_intern": 976, "shown": [298, 689, 873], "shrink": 694, "shtml": 225, "shuffl": 983, "shuffle_f": [983, 1024], "shuffled_tre": 1024, "shuffler": 1024, "sibl": [230, 400, 470, 521, 575, 633], "side": [134, 761, 764, 767, 1036], "sigh": 1104, "sign": [234, 689, 1048], "signatur": [151, 278, 906, 916, 950], "signific": [1, 234, 689, 694, 759, 761, 762, 763, 764, 767, 887, 888], "significance_test": 689, "significantli": [1, 91, 689, 759, 762, 763], "silent": [116, 148, 149, 922], "silpl": 451, "simd": [53, 104], "similar": [98, 99, 100, 101, 102, 103, 147, 221, 224, 225, 226, 229, 232, 234, 237, 616, 654, 759, 760, 761, 762, 763, 858, 874, 879, 881, 887, 888, 1107, 1110], "similarli": [0, 1, 225, 1107], "simpl": [220, 221, 225, 226, 230, 234, 235, 237, 262, 272, 701, 760, 767, 1105, 1110], "simpler": 0, "simplex": [687, 695, 696, 704], "simpli": [84, 92, 143, 237, 441, 676, 726, 752, 879, 884, 991, 1112], "simplifi": 118, "simpson": [112, 114, 121, 122, 136, 140, 141, 145], "simpson_": 140, "simul": [686, 884, 887, 888], "sinc": [1, 65, 82, 85, 95, 118, 224, 225, 227, 232, 234, 236, 299, 409, 451, 479, 530, 584, 616, 637, 689, 761, 884, 888, 1033, 1050, 1112], "singl": [1, 65, 82, 85, 94, 116, 124, 125, 133, 148, 149, 151, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 280, 295, 298, 308, 320, 327, 342, 345, 360, 363, 379, 389, 392, 397, 409, 422, 436, 460, 463, 468, 479, 489, 502, 511, 514, 519, 530, 541, 555, 564, 567, 572, 584, 597, 612, 623, 626, 631, 637, 642, 689, 704, 767, 885, 906, 907, 916, 931, 979, 1022, 1093, 1105, 1110, 1112], "singleton": [1, 107, 110, 111, 115, 117, 119, 133, 137, 142, 237], "singular": [1, 217, 883, 1015, 1093], "sinica": 107, "site": [1, 227, 231, 422, 489, 541, 597, 642, 858, 859, 869, 879], "site0": 231, "site1": [231, 858], "site10": 858, "site2": [231, 858], "site3": [231, 858], "site4": [231, 858], "site5": [231, 858], "site6": [231, 858], "site7": [231, 858], "site8": [231, 858], "site9": [231, 858], "sitemap": 227, "situat": [1, 869, 886], "six": [231, 439, 452, 614, 689], "size": [77, 114, 694, 759, 760, 761, 763, 846, 857, 869, 878, 884, 886, 887, 888, 906, 916, 950, 1069], "sk": [234, 295, 342, 360, 379], "skbio": [234, 1104], "skin": [1, 869], "skip": [422, 489, 541, 597, 642, 759, 761, 762, 763, 767, 916], "skip_subregion": 228, "sklearn": 150, "slen": [220, 221], "slice": [72, 389, 407, 408, 422, 432, 460, 477, 478, 489, 499, 511, 528, 529, 541, 551, 564, 582, 583, 597, 607, 623, 636, 642, 651, 658, 707, 712, 736, 893, 963, 1107], "slightli": [98, 123, 763], "slope": 123, "slow": [1, 116, 146, 148, 149, 150], "slower": [0, 1045], "sm": [435, 501, 554, 611, 652], "small": [1, 112, 229, 235, 686, 698, 699, 881], "smaller": [121, 143, 422, 489, 541, 597, 642, 764], "smallest": [144, 232, 887, 888, 940], "smith": [0, 53, 101, 102, 103, 104, 767], "snif": 1105, "sniffer": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 264, 269, 270, 273, 274, 1105], "so": [1, 3, 20, 84, 98, 99, 100, 101, 102, 103, 105, 116, 146, 148, 149, 150, 225, 230, 234, 237, 277, 278, 308, 311, 411, 412, 586, 587, 761, 835, 858, 873, 874, 875, 879, 881, 884, 886, 887, 888, 948, 1042, 1043, 1105, 1110, 1112], "sob": [1, 106, 121, 131, 132, 133, 145], "societi": 134, "softwar": [1, 225, 226, 234, 951, 1104], "sole": [234, 372], "solexa": 226, "solut": 117, "solv": [117, 884], "some": [1, 53, 106, 116, 118, 130, 134, 166, 225, 227, 230, 233, 234, 248, 249, 250, 298, 322, 382, 504, 557, 688, 701, 702, 703, 874, 884, 887, 1070, 1110, 1112], "someformat": 1105, "someskbioclass": [237, 1105], "someth": [93, 97, 177, 178, 190, 191, 237, 249, 269, 270, 271, 273, 274, 275, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 765, 870, 872, 911, 941, 956, 1016, 1040, 1112], "sometim": [112, 225, 227, 234, 874, 1105], "somewhat": [767, 1012], "sonnhamm": 235, "soppos": 224, "sort": [86, 92, 152, 153, 299, 308, 311, 406, 409, 435, 476, 479, 501, 527, 530, 554, 581, 584, 611, 637, 652, 802, 835, 857, 906, 945, 946, 1026, 1031, 1032, 1042, 1107, 1112], "sort_categori": [768, 769, 791, 802, 835], "sort_f": 944, "sort_index": 95, "sorted_t": 945, "sourc": [3, 12, 13, 14, 15, 16, 17, 18, 19, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 66, 67, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 166, 175, 176, 177, 178, 179, 188, 189, 190, 191, 192, 201, 202, 203, 212, 213, 214, 215, 216, 217, 224, 225, 227, 228, 238, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 311, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 712, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 769, 779, 780, 790, 791, 801, 802, 812, 813, 823, 824, 834, 835, 845, 846, 856, 857, 859, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 893, 896, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 963, 967, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1054, 1061, 1067, 1068, 1069, 1070, 1071, 1081, 1082, 1083, 1093, 1094, 1104], "space": [1, 216, 225, 230, 232, 234, 235, 308, 311, 320, 686, 687, 688, 692, 693, 695, 696, 802, 858, 859, 869, 873, 880, 906], "spaitial": 763, "span": [16, 48, 116, 134, 151, 225, 227, 230, 298, 323, 906, 1022], "spars": [219, 695, 696, 705, 873, 881, 890, 893, 909, 916, 926, 927, 928, 948, 950], "sparse_vector": 906, "sparsedatafram": 949, "spatial": [1, 147, 150, 153, 215, 676, 684, 708, 726, 732, 744, 752, 755, 763], "spearman": [1, 760, 761, 764], "spearmanr": [760, 761], "spec": 363, "specfi": 1112, "speci": [1, 106, 107, 114, 116, 119, 121, 122, 123, 128, 134, 138, 139, 143, 144, 145, 231, 236, 694, 701, 858, 874, 879, 881, 958], "special": [53, 136, 145, 229, 237, 916, 950], "speciat": 767, "specie1": 858, "specie2": 858, "specie3": 858, "specie4": 858, "specie5": 858, "specie6": 858, "specie7": 858, "specie8": 858, "specie9": 858, "species0": 231, "species1": 231, "species2": 231, "species3": 231, "species4": 231, "species5": 231, "species6": 231, "species7": 231, "species8": 231, "species_a": 978, "species_divers": 106, "species_even": 106, "species_rich": 106, "speciesa": 978, "specif": [111, 116, 123, 146, 148, 149, 150, 151, 154, 237, 323, 327, 616, 767, 779, 801, 802, 812, 845, 856, 887, 888, 893, 906, 916, 950, 1024, 1036, 1105, 1111, 1112], "specifi": [88, 92, 134, 154, 166, 220, 222, 223, 225, 226, 227, 228, 229, 232, 235, 236, 237, 268, 277, 298, 308, 321, 323, 375, 376, 382, 389, 407, 409, 425, 438, 450, 451, 453, 460, 477, 479, 492, 504, 511, 528, 530, 544, 557, 564, 582, 584, 600, 613, 616, 623, 637, 645, 655, 658, 665, 668, 673, 674, 677, 681, 687, 688, 689, 694, 695, 696, 698, 699, 705, 709, 712, 719, 721, 723, 724, 727, 730, 733, 736, 743, 746, 748, 750, 753, 757, 759, 760, 761, 762, 763, 767, 846, 869, 871, 878, 879, 885, 893, 903, 906, 916, 920, 922, 943, 950, 980, 988, 1001, 1020, 1021, 1024, 1026, 1029, 1032, 1037, 1038, 1039, 1042, 1070, 1082, 1083, 1093, 1112], "speed": [308, 879], "spermatophyta": 224, "sphingobacteria": [997, 1032], "split": [225, 226, 232, 235], "spmatrix": [893, 909], "spreadsheet": [229, 234], "sqcup": [116, 134], "sqlite": 375, "sqrt": [115, 127, 128, 129, 704, 881], "squar": [129, 130, 150, 230, 654, 708, 732, 876, 1041], "squareform": [708, 755], "sr1": 441, "srava": 235, "ss": [235, 946], "ss_con": 235, "sscinam": [220, 221], "sseq": [220, 221], "sseqid": [220, 221], "sskingdom": [220, 221], "sstart": [220, 221], "sstrand": [220, 221], "ssw": [20, 53, 104], "stabl": [665, 681, 719, 730, 743, 757, 977], "stack": 1012, "stackoverflow": 1069, "stai": 234, "stale": 308, "stamataki": 978, "stand": [412, 587, 761], "standalon": 225, "standard": [225, 226, 228, 230, 234, 435, 438, 439, 441, 451, 452, 501, 554, 611, 613, 614, 652, 658, 686, 689, 712, 736, 760, 761, 875, 878, 881, 882, 1105, 1107], "standardis": 114, "staphylococcu": 903, "start": [0, 3, 13, 14, 15, 16, 18, 19, 32, 33, 34, 45, 46, 47, 48, 50, 51, 52, 53, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 104, 166, 220, 221, 224, 227, 228, 229, 230, 232, 235, 236, 298, 319, 325, 401, 420, 441, 442, 448, 451, 452, 471, 488, 522, 540, 576, 595, 634, 641, 708, 764, 765, 884, 887, 888, 926, 1039, 1112], "start_end_posit": 0, "stat": [0, 1, 3, 65, 82, 83, 85, 91, 92, 95, 130, 166, 179, 215, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 382, 389, 399, 400, 403, 406, 433, 437, 438, 439, 441, 451, 452, 453, 460, 470, 473, 476, 504, 511, 521, 524, 527, 557, 564, 574, 575, 578, 581, 608, 609, 613, 614, 616, 623, 633, 654, 665, 674, 681, 683, 940, 1104, 1107], "state": [3, 13, 14, 15, 17, 18, 19, 34, 46, 47, 49, 50, 51, 52, 134, 222, 232, 234, 277, 1070, 1071, 1081, 1093, 1112], "static": [453, 915, 918], "statis": [759, 762], "statist": [1, 107, 110, 115, 123, 130, 136, 137, 145, 687, 689, 694, 759, 761, 762, 763, 764, 767, 858, 873, 874, 878, 884, 887, 888, 1041, 1104], "statistica": [107, 118], "statsmodel": [689, 694, 884], "statu": [3, 34, 886, 887], "staxid": [220, 221], "std": [224, 878, 882, 887], "steel": 1043, "steep": 873, "step": [1, 65, 82, 85, 94, 116, 146, 148, 149, 150, 232, 237, 877, 884], "still": [230, 231, 277, 307, 689, 694, 698, 761, 763, 1036], "stimat": 882, "stitl": [220, 221], "stockholm": [93, 97], "stockholm_format": 235, "stombaugh": [148, 149], "stool": 888, "stop": [65, 82, 85, 94, 107, 166, 179, 223, 232, 401, 420, 438, 439, 441, 451, 452, 471, 488, 504, 522, 539, 540, 576, 595, 613, 614, 634, 641, 890, 957, 978, 1071, 1107], "storag": [308, 948], "store": [2, 65, 75, 80, 89, 90, 91, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 298, 308, 363, 380, 382, 417, 419, 453, 485, 487, 504, 536, 538, 557, 592, 594, 616, 639, 640, 676, 707, 708, 726, 732, 752, 764, 780, 813, 824, 859, 873, 874, 879, 881, 906, 916, 950, 958, 1106, 1107], "str": [31, 45, 50, 54, 64, 70, 75, 80, 93, 97, 105, 146, 150, 151, 152, 153, 154, 164, 166, 177, 178, 179, 188, 190, 191, 192, 203, 212, 215, 220, 227, 228, 235, 238, 247, 260, 263, 264, 265, 269, 270, 271, 273, 274, 275, 277, 288, 290, 293, 295, 306, 318, 324, 326, 335, 337, 340, 342, 353, 355, 358, 360, 363, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 384, 392, 397, 398, 401, 405, 406, 407, 408, 409, 420, 421, 423, 425, 426, 427, 428, 429, 431, 432, 434, 435, 440, 441, 449, 455, 463, 468, 469, 471, 475, 476, 477, 478, 479, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 506, 514, 519, 520, 522, 526, 527, 528, 529, 530, 540, 542, 544, 545, 546, 547, 548, 550, 551, 553, 554, 556, 557, 559, 567, 572, 573, 576, 580, 581, 582, 583, 584, 595, 596, 598, 600, 601, 602, 603, 604, 606, 607, 610, 611, 615, 616, 618, 626, 631, 632, 634, 635, 636, 637, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 658, 664, 665, 666, 668, 671, 673, 674, 675, 681, 682, 689, 694, 700, 705, 708, 709, 712, 718, 719, 721, 723, 724, 725, 730, 731, 733, 736, 742, 743, 746, 748, 750, 751, 757, 758, 759, 760, 762, 763, 764, 765, 778, 780, 789, 800, 802, 811, 813, 822, 824, 833, 844, 855, 859, 868, 869, 870, 871, 872, 879, 886, 887, 900, 903, 906, 909, 910, 911, 913, 915, 916, 920, 924, 932, 940, 941, 948, 950, 951, 952, 956, 958, 972, 976, 980, 991, 992, 1001, 1005, 1007, 1016, 1020, 1021, 1022, 1023, 1027, 1029, 1037, 1039, 1040, 1042, 1043, 1049, 1063, 1068, 1080, 1092, 1103], "straight": 1, "straightforward": [234, 1107], "strand": [220, 221, 227, 228, 235, 298, 437, 438, 439, 609], "stranded": 227, "strategi": [686, 698, 1043], "stream": [225, 228, 1105], "strength": 1, "streptophyta": 224, "strict": [92, 232, 400, 470, 521, 575, 633, 668, 677, 721, 727, 746, 753, 761, 764, 767, 871, 906, 955], "strict_match": [886, 887], "stricter": [230, 1047], "strictli": [225, 689, 694, 705, 979], "string": [1, 12, 43, 45, 50, 53, 81, 146, 150, 151, 154, 165, 175, 176, 189, 201, 202, 213, 218, 222, 223, 225, 226, 230, 232, 234, 235, 296, 297, 343, 344, 361, 362, 363, 380, 398, 408, 409, 425, 432, 435, 436, 441, 449, 469, 478, 479, 492, 499, 501, 502, 520, 529, 530, 544, 551, 554, 555, 573, 583, 584, 600, 607, 611, 612, 632, 636, 637, 645, 651, 652, 654, 658, 664, 670, 689, 694, 707, 708, 712, 718, 722, 736, 742, 747, 759, 762, 763, 765, 868, 869, 911, 914, 940, 951, 952, 955, 972, 976, 1032, 1043, 1049, 1110], "stringifi": 900, "stringio": [1, 116, 148, 149, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 277, 707, 915, 918, 1042, 1043, 1105, 1110], "strip": [978, 982, 983], "stripe": [53, 104], "stripedsmithwaterman": [0, 104], "strong": [1, 382, 759, 761, 767], "struct": [20, 227], "structur": [3, 148, 149, 221, 223, 227, 230, 236, 666, 708, 759, 760, 767, 858, 890, 906, 916, 950, 957, 1070], "studi": [1, 116, 234, 363, 686, 689, 858, 873, 881, 888, 1022], "style": [686, 1037, 1038, 1039], "su": 235, "sub": [227, 228, 298, 889], "subclass": [92, 214, 215, 216, 217, 222, 225, 232, 235, 237, 327, 400, 470, 521, 575, 616, 633, 654, 707, 708, 765, 1042, 1070], "subfold": 1068, "subject": [1, 220, 221, 234, 1020, 1021, 1037, 1106, 1112], "subject1": 221, "subject2": 221, "sublist": 888, "submit": [224, 225, 888], "submodul": 237, "suboptim": 53, "subsampl": [130, 857, 884, 887, 888, 889, 983], "subsample_count": [130, 857], "subsample_paired_pow": 888, "subsample_pow": 884, "subseq": [422, 489, 541, 597, 616, 642], "subsequ": [101, 222, 225, 234, 384, 392, 397, 401, 420, 422, 455, 463, 468, 471, 488, 489, 506, 514, 519, 522, 540, 541, 559, 567, 572, 576, 595, 597, 616, 618, 626, 631, 634, 641, 642, 1070, 1107], "subset": [116, 134, 148, 149, 154, 218, 224, 760, 916, 922, 946, 982, 988, 1022, 1110], "subset_with_metadata": 916, "subsitut": [435, 501, 554, 611, 652], "substitut": [53, 98, 99, 100, 101, 102, 103, 105, 229, 435, 501, 504, 554, 611, 652, 654, 666, 669, 671, 672, 679, 686, 1046, 1107], "substitution_matrix": [53, 98, 99, 100, 101, 102, 103], "substitutionmatrix": [105, 435, 501, 554, 611, 652, 1107], "substract": [98, 99, 100, 101, 102, 103, 877], "substrat": 858, "substrate_cor": 858, "substrate_oth": 858, "substrate_sand": 858, "subtili": 235, "subtract": [53, 846], "subtre": [230, 236, 984, 993, 1044, 1110], "success": [1046, 1071, 1112], "success_callback": [1071, 1112], "success_f": 1112, "successfulli": 978, "suffix": 106, "suggest": [53, 249, 269, 270, 273, 274, 887], "suit": 874, "sum": [107, 116, 127, 128, 130, 134, 223, 320, 409, 479, 530, 584, 637, 688, 692, 693, 697, 888, 889, 926, 927, 931, 936, 946, 973, 1031, 1041, 1069], "sum_": [109, 112, 114, 116, 118, 121, 122, 134, 136, 138, 139, 145, 686, 688, 701, 702, 703, 761], "summar": 689, "summari": [81, 664, 689, 718, 742, 936], "super": [220, 221], "superkingdom": 236, "superset": [116, 134, 148, 149, 759, 763], "supplementari": [226, 689], "suppli": [53, 220, 225, 233, 269, 273, 372, 405, 475, 526, 580, 635, 683, 888, 906, 988], "support": [1, 2, 84, 93, 97, 118, 177, 178, 190, 191, 277, 280, 324, 326, 345, 363, 372, 378, 381, 382, 431, 440, 498, 503, 504, 550, 556, 557, 606, 615, 650, 653, 654, 666, 675, 682, 689, 694, 725, 731, 751, 758, 761, 859, 870, 872, 879, 884, 893, 906, 933, 941, 956, 958, 978, 1001, 1016, 1020, 1021, 1022, 1035, 1037, 1039, 1040, 1042, 1050, 1070, 1093, 1108, 1109, 1110, 1111, 1112], "support_attr": 1042, "support_valu": 1042, "suppos": [220, 221, 224, 225, 226, 227, 230, 233, 235, 701, 884, 888], "suppress": [236, 759, 763, 764], "suppress_sequ": [53, 104], "sure": [747, 888, 1112], "surpass": 232, "surround": [230, 694], "survei": 1, "sv": 224, "svd": [217, 883], "svg": 859, "sw": [53, 886], "swab": 1, "swiss": 224, "switch": 893, "sy": 278, "symbiont": 767, "symbol": [84, 225], "symmetr": [1, 654, 658, 707, 708, 712, 732, 736, 747, 761, 765, 767, 873, 981], "symmetri": [707, 708, 732, 747, 749], "symposium": 136, "symptom": 888, "syn": 227, "synonym": [1, 236], "synthesi": 235, "synthet": 227, "system": [93, 97, 126, 138, 177, 178, 190, 191, 234, 236, 237, 308, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 887, 922, 941, 956, 1016, 1040], "systemat": 134, "t": [1, 17, 53, 65, 82, 84, 85, 86, 91, 92, 96, 104, 114, 116, 118, 134, 146, 148, 149, 150, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 248, 250, 278, 298, 299, 376, 382, 387, 396, 401, 405, 409, 411, 412, 413, 414, 415, 418, 426, 427, 428, 429, 437, 451, 458, 467, 471, 475, 479, 481, 482, 483, 486, 493, 494, 495, 496, 504, 509, 518, 522, 526, 530, 532, 533, 534, 537, 545, 546, 547, 548, 557, 562, 571, 576, 580, 584, 586, 587, 588, 589, 590, 593, 601, 602, 603, 604, 609, 616, 621, 630, 634, 635, 637, 646, 647, 648, 649, 654, 672, 687, 689, 694, 695, 696, 700, 701, 705, 764, 873, 874, 879, 881, 883, 884, 886, 888, 889, 903, 911, 916, 917, 933, 940, 950, 953, 982, 983, 1020, 1021, 1022, 1023, 1031, 1037, 1042, 1043, 1045, 1107, 1111, 1112], "t0": [220, 221, 228, 231, 233, 707], "t1": [220, 221, 231, 233, 236, 707, 915, 1020], "t10": [228, 231], "t100": [220, 221], "t10596": 221, "t1217": 221, "t1233": 221, "t131567": 236, "t1566": 221, "t161": 220, "t2": [231, 233, 915, 918, 1020], "t2130": 221, "t2214": 221, "t3": [233, 915, 918], "t30": [228, 233], "t329": 220, "t330": 220, "t335928": 236, "t34": 233, "t35": 233, "t3e": [220, 221], "t4": 231, "t42": 221, "t44": 221, "t5": 918, "t50": 228, "t5565": 221, "t5587": 221, "t5671": 221, "t6": 918, "t6821": 221, "t6928": 221, "t6e": 221, "t80": 228, "t811": 221, "t8468": 221, "t8552": 221, "t8e": 221, "t9": 231, "t90": 228, "t94": 221, "t96": 228, "t99": 220, "t9e": 220, "t_a": 931, "t_b": 931, "ta": [707, 1107], "taaactatta": 224, "taaactccgg": 224, "taacaatcct": 224, "taacatatac": 226, "taacgtta": [437, 609], "taagactaaa": 224, "taatgaatgg": 224, "tab": [220, 221, 228, 229, 230, 231, 233, 234, 236, 910, 915, 918, 952], "tabl": [1, 146, 150, 219, 226, 227, 234, 236, 375, 438, 439, 441, 450, 451, 452, 613, 614, 689, 694, 858, 873, 874, 880, 881, 986, 1070, 1104, 1106, 1107], "table2": 953, "table3": 953, "table_id": [450, 890, 957], "tableexcept": [890, 942, 955, 957], "tabular": [3, 16, 48, 65, 87, 220, 221, 234, 236, 363], "tabularmsa": [0, 3, 16, 17, 34, 48, 98, 99, 100, 101, 102, 103, 104, 222, 226, 232, 235, 308, 1105], "tac": 233, "tacatcgttt": 224, "tacatgtgta": 224, "taccaggcat": 224, "tacccggt": 1107, "tacctaagtt": 224, "tacg": 233, "tacgta": 233, "tae000111": 221, "tae000171": 221, "tae000174": 221, "tae000425": 221, "tag": [228, 235, 406, 436, 476, 502, 527, 555, 581, 612, 704], "tagagattaattgccactgccaaaattctg": 0, "tagattacag": 224, "taggttgatc": 224, "tagtgaatgg": 224, "take": [1, 150, 232, 237, 248, 249, 250, 327, 405, 432, 475, 499, 526, 551, 580, 607, 635, 651, 670, 689, 722, 732, 747, 760, 761, 835, 873, 881, 884, 885, 901, 902, 911, 931, 944, 952, 953, 1043, 1070, 1110, 1112], "taken": [1, 220, 221, 225, 232, 235, 236, 689, 767, 1069], "target": [0, 1, 53, 104, 115, 228, 665, 681, 719, 730, 743, 757, 1020], "target_begin": 20, "target_sequ": [0, 20, 53, 54], "task": [1046, 1105], "tata": [408, 478, 529, 583, 636], "tataa": [408, 478, 529, 583, 636], "tatattagca": 224, "tatctaactg": 224, "tatgtatata": 226, "tatgtatatataacatatacatatatacatacata": 226, "tau": 689, "tax": 221, "tax_id": [236, 996], "taxa": [1, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 234, 236, 689, 874, 888, 983, 1022, 1041, 1043, 1044], "taxdump": 996, "taxdump_readm": 236, "taxid": 236, "taxon": [1, 107, 108, 109, 112, 114, 116, 120, 121, 122, 127, 128, 134, 135, 136, 137, 138, 139, 144, 145, 148, 149, 224, 227, 890, 957, 996, 997, 1022, 1110], "taxonom": [1, 148, 997], "taxonomi": [220, 230, 234, 236, 441, 449, 450, 906, 907, 916, 933, 950, 996, 997, 1032], "taxonomy_0": [933, 948], "taxonomy_1": [933, 948], "taylor": 123, "tb": [707, 915, 918], "tc": [707, 915, 918], "tcaaaagaaa": 224, "tcatttagga": 233, "tcc": 0, "tccacaaatg": 224, "tccagaaaaa": 224, "tcg": [436, 502, 555, 612], "tcga": [435, 501, 554, 611, 652], "tcggagcagt": 224, "tcgggcasdgca": 233, "tcgggcattgca": 233, "tcgtatagat": 224, "tctacccctctcagaga": 0, "tctataagattccgcatgcgttacttataagatgtctcaacgg": 0, "tctcaatctc": 224, "tctcaga": 0, "tcttaacata": 224, "tcttcagcat": 224, "tcttgctcat": 224, "tctttgcttc": 224, "tdbl": 988, "technic": [138, 230], "techniqu": [1, 117, 686, 873, 874, 1108], "teh": [890, 957], "tell": 689, "temorg": 221, "temperatur": 887, "tempfil": 277, "temporari": 906, "temporaryfil": 277, "ten": 1, "tend": 234, "ter": [504, 874], "term": [1, 84, 106, 112, 132, 134, 219, 227, 292, 327, 339, 357, 363, 767, 858, 1043], "termin": [224, 438, 451, 613, 1033], "test": [1, 70, 79, 134, 237, 281, 287, 299, 305, 311, 317, 328, 334, 346, 352, 364, 370, 387, 396, 442, 448, 458, 467, 509, 518, 562, 571, 621, 630, 686, 689, 694, 707, 759, 761, 762, 763, 764, 766, 767, 779, 801, 812, 845, 856, 884, 887, 888, 912, 1047, 1048, 1068], "test_tabl": [915, 918], "texon": 228, "text": [109, 112, 127, 128, 144, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 248, 249, 250, 277, 363, 707, 790, 823, 834], "textiobas": [238, 248, 249, 250, 277], "textiowrapp": 277, "tf": 101, "tgaaggatca": 224, "tgaattcaac": 224, "tgca": 233, "tgene": 228, "tgenu": 236, "tgetaaafhwqaaf": 233, "tgg": [406, 436, 476, 502, 527, 555, 581, 612], "tggaacaatt": 224, "tggattaaaa": 224, "tggattctgc": 298, "tggtgcacct": 224, "tggtgctgga": 224, "tgi": 220, "tgtaataaat": 224, "tgtacacta": 3, "th": [109, 112, 127, 128, 137, 144, 704], "than": [0, 1, 53, 83, 84, 106, 107, 116, 123, 125, 143, 148, 149, 225, 230, 232, 235, 270, 274, 308, 363, 382, 383, 384, 387, 401, 405, 409, 420, 421, 422, 423, 424, 426, 427, 428, 429, 439, 452, 454, 455, 458, 471, 475, 479, 488, 489, 490, 491, 493, 494, 495, 496, 504, 505, 506, 509, 522, 526, 530, 540, 541, 542, 543, 545, 546, 547, 548, 557, 558, 559, 562, 576, 580, 584, 595, 596, 597, 598, 599, 601, 602, 603, 604, 614, 617, 618, 621, 634, 635, 637, 641, 642, 643, 644, 646, 647, 648, 649, 654, 685, 686, 689, 691, 694, 707, 749, 759, 761, 762, 763, 767, 857, 873, 874, 887, 888, 889, 922, 927, 946, 979, 984, 996, 1010, 1036, 1037, 1043, 1049, 1105, 1110], "thei": [0, 1, 75, 80, 84, 91, 107, 146, 150, 220, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 325, 382, 387, 396, 399, 422, 442, 458, 467, 489, 509, 518, 541, 557, 562, 571, 574, 597, 621, 630, 642, 656, 668, 686, 710, 721, 734, 746, 759, 760, 761, 762, 763, 764, 768, 868, 869, 873, 879, 884, 907, 916, 950, 978, 983, 990, 1001, 1020, 1021, 1022, 1045, 1047, 1112], "them": [1, 50, 118, 227, 232, 234, 299, 311, 320, 321, 434, 500, 553, 610, 616, 761, 802, 878, 879, 881, 1071], "themselv": [1106, 1107], "theorem": [124, 125], "theoret": [135, 141], "theori": [84, 109, 126, 136, 138, 700, 706], "therebi": 858, "therefor": [1, 82, 85, 92, 112, 114, 116, 123, 134, 139, 148, 149, 154, 234, 363, 654, 689], "thermoplasmata": [997, 1032], "theta": [134, 689], "thi": [0, 1, 2, 3, 12, 19, 43, 52, 53, 67, 68, 69, 70, 72, 77, 79, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 116, 117, 118, 123, 124, 125, 130, 133, 134, 146, 147, 148, 149, 150, 151, 153, 154, 166, 177, 178, 190, 191, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 248, 249, 250, 262, 270, 272, 274, 276, 277, 278, 281, 287, 290, 296, 297, 298, 299, 305, 307, 308, 309, 310, 311, 317, 319, 320, 321, 322, 323, 324, 326, 328, 334, 337, 343, 344, 346, 352, 355, 361, 362, 363, 364, 370, 372, 373, 376, 377, 378, 380, 381, 384, 385, 386, 387, 389, 392, 394, 396, 397, 400, 401, 405, 409, 411, 412, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 433, 435, 436, 439, 440, 441, 450, 451, 452, 453, 455, 456, 457, 458, 460, 463, 465, 467, 468, 470, 471, 475, 479, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 501, 502, 503, 506, 507, 508, 509, 511, 514, 516, 518, 519, 521, 522, 526, 530, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 554, 555, 556, 559, 560, 561, 562, 564, 567, 569, 571, 572, 575, 576, 580, 584, 586, 587, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 611, 612, 614, 615, 616, 618, 619, 620, 621, 623, 626, 628, 630, 631, 633, 634, 635, 637, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 675, 676, 678, 682, 683, 684, 685, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 707, 710, 712, 725, 726, 728, 731, 732, 734, 736, 749, 751, 752, 754, 755, 758, 759, 760, 761, 763, 765, 766, 767, 768, 857, 858, 869, 870, 872, 874, 879, 880, 881, 884, 886, 887, 888, 903, 906, 907, 914, 916, 922, 931, 937, 940, 941, 946, 950, 951, 955, 956, 958, 974, 976, 978, 980, 982, 983, 984, 986, 988, 989, 991, 993, 994, 996, 1000, 1008, 1012, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1068, 1069, 1070, 1071, 1081, 1093, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112], "thing": 1112, "third": [701, 707, 1000, 1112], "those": [1, 147, 234, 363, 377, 767, 857, 873, 888, 926, 988, 1024, 1029, 1041, 1043, 1070, 1107], "though": [118, 225, 226, 232, 233, 234, 689, 744, 759, 763, 928, 1043, 1112], "thought": 763, "thr": 504, "thraustochytrium": 450, "three": [1, 3, 65, 133, 232, 236, 701, 707, 732, 764, 858, 869, 887, 888, 906, 907, 953, 983, 1020, 1036, 1112], "threonin": 504, "threshold": [107, 1047], "through": [1, 72, 98, 99, 100, 223, 234, 262, 268, 272, 658, 712, 736, 879, 991, 1112], "throughout": [1, 229, 441, 450, 887, 1111], "throughput": [116, 148, 149, 225, 226, 694, 869, 887], "thrown": [249, 998], "thu": [1, 225, 226, 230, 234, 290, 337, 355, 373, 409, 479, 530, 584, 616, 637, 658, 712, 732, 736, 759, 761, 763, 767, 879], "thymin": [224, 227, 382, 437, 609], "ti": [83, 108, 940, 1042], "tid": 228, "tile": 233, "tile_numb": 233, "till": 236, "time": [1, 53, 82, 85, 116, 130, 141, 148, 149, 151, 225, 226, 234, 654, 695, 696, 704, 744, 759, 760, 761, 762, 764, 768, 791, 846, 881, 884, 887, 888, 893, 906, 937, 946, 958, 1024, 1112], "timestamp": 950, "tip": [1, 116, 134, 148, 149, 958, 976, 978, 980, 981, 982, 983, 985, 986, 988, 989, 991, 998, 1004, 1005, 1006, 1007, 1009, 1010, 1012, 1013, 1014, 1021, 1023, 1024, 1026, 1027, 1029, 1032, 1033, 1034, 1036, 1042, 1105, 1110], "tip_": 1025, "tip_a": [989, 1019], "tip_count": 1010, "tip_d": 989, "tip_list": 1028, "tip_nam": 980, "tip_subset": 988, "tip_tip_dist": [989, 998], "tipnam": [1005, 1007], "tissue_typ": 224, "titl": [1, 220, 221, 227, 235, 674, 724, 750, 869], "tjflkafnkkghvm": 233, "tmgc": 450, "tn": 235, "tno": 236, "to_": [665, 719, 743], "to_data_fram": 755, "to_datafram": [297, 344, 362, 363], "to_delet": 1015, "to_dict": 86, "to_hdf5": 916, "to_seri": [296, 343, 361], "toarrai": 705, "tobacco": 888, "togeth": [92, 224, 225, 227, 235, 689, 906, 931, 1070], "token": 166, "tol": 883, "toler": [883, 1047], "tolosana": [686, 704], "ton": 1, "tongu": 1, "too": [125, 879, 903, 973], "tool": [98, 101, 220, 221, 225, 232, 234, 236, 869, 874], "toolkit": 978, "top": [689, 996], "topolog": 977, "topologi": [980, 1015, 1036, 1037, 1039, 1041, 1044, 1110], "total": [108, 109, 112, 115, 116, 117, 119, 121, 126, 127, 128, 129, 130, 137, 144, 218, 220, 234, 409, 479, 530, 584, 637, 760, 906, 988], "totaldescendingbranch": 988, "toward": 974, "tparent": 228, "tr": 988, "traceback": [220, 232, 451, 616, 761], "tracheophyta": 224, "track": [223, 224], "tracker": [225, 249], "tract": 888, "trail": [225, 226, 229], "trajectori": [768, 769, 779, 780, 790, 791, 801, 802, 812, 813, 823, 824, 834, 835, 845, 846, 856], "trajectory_categori": [768, 769, 791, 802, 835], "trajectory_result": 768, "tranform": 953, "tranpos": 948, "transcrib": [224, 227, 438, 439, 609, 1107], "transcript": 298, "transect": 858, "transfer": [1001, 1036], "transform": [248, 250, 422, 489, 541, 597, 642, 686, 687, 688, 692, 693, 695, 696, 700, 705, 873, 879, 881, 893, 918, 940], "translat": [224, 227, 230, 236, 277, 437, 439, 441, 452, 609, 614, 1107], "translate_six_fram": [437, 438, 451, 609, 613], "transloc": 887, "transpar": [234, 277], "transpos": 948, "trapezoid": 118, "trascrib": 224, "traver": 1110, "travers": [980, 984, 991, 994, 1006, 1009, 1012, 1013, 1014, 1030, 1110], "tre361": 224, "treat": [82, 83, 84, 85, 225, 229, 234, 363, 382, 425, 434, 492, 500, 504, 544, 553, 557, 600, 610, 616, 645, 684, 887], "treatment": [327, 689, 694, 768, 887, 904], "treatment_stat": 887, "tree": [1, 116, 134, 148, 149, 230, 235, 236, 308, 705, 905, 921, 1104, 1105], "tree1": [981, 982, 983, 1110], "tree2": [981, 982, 983, 1110], "tree3": 1110, "tree_copi": 984, "tree_copy_nod": 984, "tree_nod": 984, "tree_node_class": 1042, "treeerror": [1021, 1022], "treenod": [1, 116, 134, 148, 149, 230, 705, 905, 1041, 1042, 1043, 1044, 1105, 1110], "trg": [406, 436, 476, 502, 527, 555, 581, 612], "tri": 928, "triangl": [732, 747, 755, 761, 879, 928], "triangular": 761, "trifoliea": 224, "trifolium": 224, "trifuc": 1036, "trifurc": [116, 148, 149, 230], "trim": 451, "tripleton": 1, "trp": 504, "trubbbbrbcefgh": 233, "true": [1, 32, 33, 53, 66, 67, 68, 69, 70, 82, 83, 85, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 106, 110, 111, 112, 114, 116, 117, 121, 122, 130, 134, 138, 139, 140, 143, 146, 148, 149, 150, 151, 154, 166, 179, 214, 215, 216, 217, 220, 223, 224, 225, 226, 227, 228, 230, 233, 248, 249, 250, 269, 273, 277, 278, 291, 294, 298, 308, 320, 325, 338, 341, 356, 359, 372, 382, 383, 384, 386, 387, 389, 396, 399, 400, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 451, 452, 453, 454, 455, 457, 458, 460, 467, 470, 472, 473, 474, 476, 479, 480, 481, 482, 483, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 508, 509, 511, 518, 521, 523, 524, 525, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 559, 561, 562, 564, 571, 574, 575, 577, 578, 579, 581, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 596, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 620, 621, 623, 630, 633, 637, 639, 640, 643, 644, 645, 646, 647, 648, 649, 651, 652, 655, 656, 663, 665, 668, 677, 685, 689, 694, 695, 696, 700, 707, 708, 709, 710, 717, 719, 721, 727, 732, 733, 734, 741, 743, 746, 747, 749, 753, 759, 761, 763, 764, 767, 802, 813, 871, 878, 879, 881, 882, 886, 887, 889, 890, 906, 909, 913, 914, 916, 917, 925, 926, 927, 928, 932, 936, 937, 938, 939, 940, 943, 944, 946, 948, 949, 950, 953, 955, 976, 978, 980, 984, 985, 987, 993, 999, 1002, 1003, 1004, 1006, 1009, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1030, 1032, 1033, 1035, 1037, 1041, 1042, 1043, 1044, 1070, 1071, 1081, 1093, 1107, 1110, 1112], "truncat": [226, 664, 718, 742, 868, 1043, 1112], "trust": 226, "truth": [383, 454, 505, 558, 617], "truthi": [383, 454, 505, 558, 617], "try": [888, 889], "tryptophan": [84, 504], "tsalli": 136, "tsuperkingdom": 236, "tsv": [229, 234, 295, 342, 360, 363, 376, 379, 918, 952], "tsv_fh": 918, "tt": [83, 422, 489, 541, 597, 642], "tta": [424, 491, 543, 599, 644], "ttacatatta": 224, "ttacgcttaaac": 225, "ttactattac": 224, "ttactgttcg": 224, "ttagctcatt": 224, "ttattaaaag": 224, "ttattgtagc": 224, "ttattttttt": 224, "ttcaatttgg": 224, "ttcatt": [399, 421, 433, 574, 596, 608], "ttcatttgat": 224, "ttccagtaga": 224, "ttctactctt": 224, "ttctgcaatc": 224, "ttest_ind": [689, 694], "ttest_rel": 689, "ttgaatactt": 224, "ttgagaatac": 224, "ttgg": 906, "ttggccaaga": 224, "ttgtaactct": 224, "ttgttgtacc": 224, "ttjflkafnkkghvm": 233, "tttattggta": 224, "tttcctcgtg": 224, "tttgaattaa": 224, "tttgcaggct": 224, "ttttcattgg": 224, "ttttggactg": 224, "ttttggatta": 224, "tttttaggcc": 224, "tttttttaaaaaaa": 1112, "tupl": [98, 99, 100, 101, 102, 103, 104, 111, 115, 124, 130, 133, 154, 228, 249, 298, 319, 323, 377, 438, 439, 613, 614, 658, 712, 736, 893, 901, 906, 916, 917, 933, 946, 950, 997, 998, 1031, 1032], "ture": 119, "turkei": [225, 232], "turn": [3, 382, 504, 557, 881, 1047, 1112], "turnip": 235, "tutori": [234, 237, 295, 342, 360, 363, 376, 379], "twice": 888, "two": [0, 1, 3, 98, 99, 100, 101, 102, 103, 104, 107, 112, 134, 139, 148, 149, 220, 221, 225, 226, 227, 228, 230, 232, 233, 236, 298, 299, 305, 311, 317, 320, 325, 382, 387, 400, 405, 422, 426, 428, 458, 470, 475, 489, 493, 495, 504, 509, 521, 526, 541, 545, 547, 557, 562, 575, 580, 597, 601, 603, 621, 633, 635, 642, 646, 648, 654, 656, 658, 663, 665, 670, 676, 684, 685, 686, 689, 691, 694, 701, 704, 705, 707, 708, 710, 712, 717, 719, 722, 726, 734, 736, 741, 743, 747, 752, 759, 760, 761, 762, 763, 764, 765, 767, 874, 879, 884, 887, 888, 903, 906, 916, 931, 950, 979, 982, 983, 989, 998, 1020, 1021, 1024, 1036, 1042, 1048, 1105, 1107, 1110], "txt": [224, 234, 236, 295, 342, 360, 379], "tyne": 224, "type": [1, 53, 65, 70, 82, 83, 85, 124, 135, 141, 150, 154, 214, 215, 216, 217, 218, 222, 223, 225, 226, 227, 228, 229, 232, 235, 236, 248, 250, 263, 265, 266, 267, 269, 273, 277, 280, 281, 287, 295, 327, 328, 334, 342, 345, 346, 352, 360, 363, 364, 370, 372, 376, 379, 384, 387, 396, 399, 400, 401, 403, 405, 406, 407, 420, 421, 426, 427, 428, 429, 432, 433, 442, 448, 455, 458, 467, 470, 471, 473, 475, 476, 477, 488, 493, 494, 495, 496, 499, 506, 509, 518, 521, 522, 524, 526, 527, 528, 540, 545, 546, 547, 548, 551, 559, 562, 571, 574, 575, 576, 578, 580, 581, 582, 595, 596, 601, 602, 603, 604, 607, 608, 616, 618, 621, 630, 633, 634, 635, 641, 646, 647, 648, 649, 651, 658, 667, 680, 684, 685, 707, 712, 720, 729, 736, 745, 756, 760, 763, 765, 858, 873, 874, 881, 884, 886, 890, 901, 907, 916, 917, 931, 950, 957, 980, 1031, 1042, 1047, 1054, 1105], "typeerror": [65, 82, 85, 92, 146, 269, 270, 273, 274, 384, 400, 401, 405, 409, 420, 421, 426, 427, 428, 429, 455, 470, 471, 475, 479, 488, 493, 494, 495, 496, 506, 521, 522, 526, 530, 540, 545, 546, 547, 548, 559, 575, 576, 580, 584, 595, 596, 601, 602, 603, 604, 618, 633, 634, 635, 637, 641, 646, 647, 648, 649, 684, 685, 760, 761, 763, 887, 888, 933, 980], "typic": [98, 99, 100, 101, 102, 103, 105, 179, 203, 225, 226, 233, 234, 235, 298, 308, 879, 1020, 1106], "tyr": 504, "tyrosin": 504, "u": [1, 100, 103, 116, 124, 127, 148, 149, 224, 225, 227, 236, 387, 392, 396, 397, 437, 458, 463, 467, 468, 504, 509, 514, 518, 519, 557, 562, 567, 571, 572, 609, 621, 626, 630, 631, 689, 692, 693, 705, 761, 883, 888, 905, 1107, 1112], "u1": [1, 116, 148, 149], "u2": [1, 116, 148, 149], "u3": [1, 116, 148, 149], "u4": [1, 116, 148, 149], "u5": [1, 116, 148, 149], "u6": [1, 116, 148, 149], "u7": [1, 116, 148, 149], "u8": [116, 148, 149], "u_count": [116, 148, 149], "u_i": 689, "uaacguua": [437, 609], "uaaguucucgaucucuaaaaucg": 235, "uaaguucucgaucuuuaaaaucg": 235, "uagguugauc": 224, "uc": 1107, "ucagucagucagucagucagucagucagucagucagucagucagucagucagucagucagucag": 441, "uccacaaaug": 224, "uconn": [107, 111], "ugaguucucgaucucuaaaaucg": 235, "ugaguucucuaucucuaaaaucg": 235, "uint8": [3, 17, 34, 225, 226, 233, 382, 384, 401, 405, 420, 421, 426, 427, 428, 429, 435, 455, 471, 475, 488, 493, 494, 495, 496, 501, 504, 506, 522, 526, 540, 545, 546, 547, 548, 554, 557, 559, 576, 580, 595, 596, 601, 602, 603, 604, 611, 616, 618, 634, 635, 641, 646, 647, 648, 649, 652], "uk": [98, 101, 120, 224, 227, 298, 686], "ulcl": 124, "ulcu": 124, "un": 230, "unabl": 238, "unalign": [98, 99, 100, 101, 102, 103, 104, 1107], "unbound": [308, 322], "uncertainti": [84, 694, 767], "unclear": 123, "unconstrain": 874, "uncorrect": [110, 111], "uncov": [124, 125, 1108], "undefin": [234, 886, 887, 983], "under": [118, 150, 225, 382, 504, 557, 616, 689, 802, 887, 906, 1104], "underli": [0, 3, 175, 201, 277, 387, 451, 458, 509, 562, 616, 621, 684, 858, 884, 890, 1107], "underlii": 3, "underpow": 884, "underscor": [230, 232], "understand": [234, 689], "understood": [93, 97, 177, 178, 190, 191, 230, 269, 270, 271, 273, 274, 275, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 941, 956, 1016, 1040], "unequ": [107, 442, 654], "unescap": 230, "uneven": [106, 144], "unfortun": [226, 887], "ungap": [422, 489, 541, 597, 642], "ungapped_subsequ": [422, 489, 541, 597, 642], "unicod": [218, 234, 277], "unifi": [121, 694], "uniform": [1, 765], "uniformli": [16, 48, 50], "unifrac": [1, 116, 134, 148, 149, 151, 154, 879], "unimod": [874, 879], "union": [907, 931], "uniprotkb": 224, "uniq": [435, 501, 554, 611, 652], "uniqu": [1, 92, 96, 220, 225, 229, 230, 234, 235, 236, 372, 377, 435, 501, 554, 611, 652, 685, 707, 763, 869, 906, 933, 977, 986, 991, 1044], "unit": [1, 3, 148, 227, 237, 654, 879, 881, 882, 997, 1047, 1048, 1111], "univers": [136, 224, 225, 232, 234, 238], "unix": 236, "unknown": [84, 124, 125, 227, 298, 407, 477, 528, 582, 857, 940], "unknownaxiserror": [901, 903, 909, 910, 914, 921, 923, 924, 927, 928, 929, 930, 932, 933, 934, 942, 943, 953, 955], "unknowniderror": [924, 932], "unless": [53, 65, 91, 110, 233, 1071], "unlik": [235, 857, 1041, 1043], "unmask": 53, "unnam": 1105, "unnecessari": 92, "unobserv": [106, 137], "unpack": [17, 49, 1035], "unpack_by_func": 1034, "unpair": 230, "unpermut": [759, 761, 762], "unread": 277, "unrecogn": [901, 903, 909, 914, 921, 923, 924, 929, 930, 932, 934, 953, 955], "unrecognizedformaterror": [269, 270, 271, 273, 274, 275], "unresolv": 154, "unroot": [116, 134, 148, 149, 230, 995, 1020, 1037, 1038, 1039, 1043], "unrooted_copi": [984, 1020, 1021, 1038, 1039], "unrooted_mov": 1037, "unshar": 92, "unsign": [857, 1010], "unsolv": 689, "unstabl": 154, "unsupport": [234, 504], "until": [308, 704, 1023], "untouch": [914, 937], "untreat": 887, "unweight": [1, 134, 148, 149, 882], "unweighted_unifrac": [1, 149], "unwrit": 277, "unzip": 939, "up": [84, 105, 222, 232, 234, 235, 277, 308, 320, 613, 614, 658, 691, 698, 699, 701, 702, 703, 712, 736, 761, 857, 888, 906, 980, 983, 1015, 1021, 1093, 1110], "upd": 134, "upd_": 134, "updat": [224, 225, 236, 308, 322, 616, 955], "updated_t": 955, "upon": 224, "upper": [53, 123, 124, 225, 232, 298, 308, 320, 322, 747, 755, 761, 928], "upper_bound": [111, 115, 124, 308, 320], "upper_quantil": 123, "uppercas": [382, 504, 557, 616], "upsk": 235, "uq": 123, "uracil": [224, 227, 437, 557, 609], "urinari": 888, "url": [93, 97, 177, 178, 190, 191, 269, 270, 271, 273, 274, 275, 277, 324, 326, 378, 381, 431, 440, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 916, 941, 950, 956, 1016, 1040], "urn": [124, 125], "us": [1, 15, 20, 45, 47, 53, 65, 72, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 98, 99, 100, 110, 111, 112, 116, 117, 123, 130, 133, 134, 135, 136, 138, 146, 148, 149, 150, 151, 154, 166, 215, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 248, 249, 250, 266, 267, 270, 274, 277, 296, 297, 308, 320, 343, 344, 361, 362, 363, 375, 376, 380, 382, 400, 405, 417, 419, 422, 425, 432, 435, 438, 439, 441, 449, 450, 451, 452, 453, 470, 475, 485, 487, 489, 492, 499, 501, 504, 521, 526, 536, 538, 541, 544, 551, 554, 557, 575, 580, 592, 594, 597, 600, 607, 611, 613, 614, 616, 633, 635, 639, 640, 642, 645, 651, 652, 654, 658, 670, 683, 684, 686, 687, 688, 689, 694, 695, 696, 698, 699, 705, 707, 708, 712, 722, 732, 736, 747, 755, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 791, 802, 813, 835, 846, 858, 869, 873, 879, 883, 884, 885, 886, 887, 888, 906, 911, 912, 914, 937, 940, 942, 944, 945, 948, 950, 951, 958, 976, 978, 979, 980, 983, 984, 987, 989, 995, 996, 1015, 1020, 1029, 1031, 1038, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1070, 1093, 1107, 1110, 1111, 1112], "usag": [132, 762], "useabl": 268, "usefulli": 1042, "user": [1, 84, 147, 220, 234, 236, 237, 238, 248, 249, 250, 269, 271, 273, 275, 434, 500, 553, 610, 689, 694, 874, 879, 889, 1045, 1107], "usrman": 224, "usual": [1, 106, 143, 224, 227, 234, 236, 654, 978, 1020, 1021, 1022, 1037], "ut": 1107, "uti": 888, "util": [1, 93, 97, 177, 178, 190, 191, 236, 248, 250, 324, 326, 378, 381, 431, 440, 441, 449, 450, 453, 498, 503, 550, 556, 606, 615, 650, 653, 675, 682, 725, 731, 751, 758, 870, 872, 916, 931, 939, 941, 944, 950, 956, 1016, 1040, 1041, 1104, 1105], "uu": 148, "uuagcucauu": 224, "uuauuguagc": 224, "uuauuuuuuu": 224, "uucuacucuu": 224, "uugagaauac": 224, "uuugaauuaa": 224, "uuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggg": 441, "uuuuuuuuuuuuuuuuccccccccccccccccaaaaaaaaaaaaaaaagggggggggggggggg": 441, "v": [53, 148, 149, 327, 363, 382, 387, 396, 458, 467, 504, 509, 518, 557, 562, 571, 621, 630, 686, 700, 704, 706, 886, 887, 1031], "v2": 219, "v_count": [148, 149], "vagin": 888, "vaginali": 888, "val": [504, 914], "val_i": 928, "val_j": 928, "valdar": 84, "valid": [98, 101, 116, 134, 146, 148, 149, 150, 151, 154, 214, 215, 216, 217, 223, 225, 226, 230, 232, 363, 376, 382, 435, 453, 501, 504, 554, 557, 611, 652, 700, 706, 708, 732, 747, 890, 916, 940, 950, 1107, 1112], "valin": 504, "valu": [1, 3, 4, 5, 7, 9, 10, 11, 14, 15, 18, 19, 21, 22, 25, 27, 28, 29, 35, 36, 38, 40, 41, 42, 46, 47, 51, 52, 55, 56, 58, 60, 61, 62, 71, 74, 76, 78, 84, 89, 98, 99, 100, 101, 102, 103, 105, 107, 118, 120, 130, 135, 138, 144, 146, 149, 156, 157, 159, 161, 162, 163, 167, 168, 170, 172, 173, 174, 180, 181, 183, 185, 186, 187, 193, 194, 196, 198, 199, 200, 204, 205, 207, 209, 210, 211, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 234, 235, 239, 240, 242, 244, 245, 246, 252, 253, 255, 257, 258, 259, 277, 281, 282, 284, 285, 286, 287, 289, 291, 292, 293, 294, 296, 297, 300, 302, 303, 304, 307, 312, 314, 315, 316, 319, 323, 327, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 346, 347, 349, 350, 351, 352, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 376, 377, 380, 382, 383, 388, 391, 393, 395, 399, 400, 417, 425, 432, 433, 443, 445, 446, 447, 454, 459, 462, 464, 466, 470, 485, 492, 499, 504, 505, 510, 513, 515, 517, 521, 536, 544, 551, 557, 558, 563, 566, 568, 570, 574, 575, 592, 600, 607, 608, 616, 617, 622, 625, 627, 629, 633, 639, 645, 651, 657, 660, 661, 662, 665, 681, 686, 689, 691, 694, 698, 699, 700, 701, 702, 703, 706, 711, 714, 715, 716, 719, 730, 735, 738, 739, 740, 743, 757, 759, 760, 761, 762, 763, 764, 765, 767, 770, 771, 773, 775, 776, 777, 781, 782, 784, 786, 787, 788, 790, 792, 793, 795, 797, 798, 799, 802, 803, 804, 806, 808, 809, 810, 814, 815, 817, 819, 820, 821, 823, 825, 826, 828, 830, 831, 832, 834, 836, 837, 839, 841, 842, 843, 847, 848, 850, 852, 853, 854, 857, 860, 861, 863, 865, 866, 867, 869, 873, 874, 878, 879, 881, 883, 884, 885, 886, 887, 888, 892, 895, 897, 898, 899, 900, 901, 906, 914, 915, 916, 920, 926, 927, 930, 934, 936, 937, 940, 944, 946, 947, 953, 955, 958, 961, 962, 965, 968, 970, 971, 978, 980, 983, 984, 1020, 1021, 1024, 1031, 1036, 1039, 1041, 1044, 1046, 1047, 1048, 1052, 1053, 1056, 1058, 1059, 1060, 1061, 1070, 1072, 1073, 1075, 1077, 1078, 1079, 1082, 1084, 1085, 1087, 1089, 1090, 1091, 1093, 1095, 1096, 1098, 1100, 1101, 1102, 1112], "valueerror": [65, 82, 84, 85, 88, 92, 94, 96, 107, 116, 118, 134, 146, 148, 149, 150, 154, 216, 269, 273, 290, 337, 355, 373, 377, 400, 401, 407, 409, 420, 423, 424, 426, 427, 428, 429, 435, 451, 453, 470, 471, 477, 479, 488, 490, 491, 493, 494, 495, 496, 501, 521, 522, 528, 530, 540, 542, 543, 545, 546, 547, 548, 554, 575, 576, 582, 584, 595, 598, 599, 601, 602, 603, 604, 611, 616, 633, 634, 637, 641, 643, 644, 646, 647, 648, 649, 652, 666, 669, 670, 677, 684, 685, 691, 698, 699, 705, 722, 727, 747, 753, 760, 761, 763, 764, 802, 846, 857, 869, 871, 873, 874, 887, 888, 889, 915, 916, 940, 946, 981, 983, 988, 996, 1001, 1005, 1007, 1010, 1023, 1024, 1029, 1034, 1049], "van": 704, "vanveeeeaw": 223, "var": [760, 948], "vari": [1, 763, 884, 886, 887], "variabl": [118, 217, 218, 432, 499, 551, 607, 616, 651, 689, 760, 763, 858, 859, 869, 874, 879, 880, 881, 884, 886, 887, 1070, 1093, 1112], "varianc": [111, 372, 700, 706, 760, 762, 763, 858, 875, 878, 882, 887], "variant": [1, 116, 134, 233, 236, 654], "variat": [107, 761, 874], "varieti": 229, "variou": [1, 3, 106, 231, 363, 707, 859, 884, 1108, 1111], "vazquez": 869, "ve": [1, 225, 226, 888, 1110], "vec": 885, "vector": [3, 88, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 166, 179, 192, 203, 214, 215, 216, 217, 223, 229, 402, 404, 407, 410, 422, 425, 427, 429, 430, 432, 435, 441, 472, 474, 477, 480, 489, 492, 494, 496, 497, 499, 501, 523, 525, 528, 531, 541, 544, 546, 548, 549, 551, 552, 554, 577, 579, 582, 585, 597, 600, 602, 604, 605, 607, 611, 642, 645, 647, 649, 651, 652, 658, 687, 688, 689, 694, 695, 696, 701, 702, 703, 706, 707, 708, 712, 732, 736, 759, 762, 763, 813, 874, 888, 889, 893, 906, 939, 943, 946, 953, 1031], "vegan": [759, 760, 761, 762, 763, 873, 874, 881], "vellend": 134, "ver": 221, "verdonschot": 874, "veri": [1, 98, 99, 100, 123, 225, 230, 237, 701, 916, 983], "verifi": [224, 237, 269, 273], "versa": [230, 767, 937], "versatil": 858, "version": [1, 110, 111, 116, 134, 138, 146, 148, 149, 150, 218, 220, 222, 223, 224, 227, 228, 232, 249, 406, 434, 436, 476, 500, 502, 527, 553, 555, 581, 610, 612, 689, 704, 890, 911, 914, 916, 937, 946, 950, 952, 957, 972, 976, 984, 1001, 1020, 1021, 1022, 1036, 1037, 1039, 1045, 1049, 1107], "versu": [135, 141, 148, 149], "veschi": 118, "via": [82, 85, 94, 107, 124, 125, 225, 232, 405, 441, 442, 448, 475, 526, 580, 635, 759, 761, 762, 906, 946], "vice": [230, 767, 937], "viceroi": [107, 111], "view": [224, 939], "viewer": 978, "violat": 694, "viral": 235, "virgilio": 118, "viridiplanta": 224, "virol": 235, "viru": 235, "visit": [1013, 1037], "visual": [1, 858, 869], "vlen": [916, 950], "vocabulari": [227, 228, 296, 297, 343, 344, 361, 362, 363, 380], "vol": 136, "volatil": 768, "volum": [136, 1043], "vqhklrah": 235, "vrt": 236, "w": [53, 84, 107, 108, 115, 130, 134, 144, 220, 221, 222, 277, 382, 504, 557, 689, 704, 950, 952], "wa": [1, 98, 101, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 126, 127, 128, 134, 135, 136, 138, 139, 145, 146, 148, 149, 150, 151, 222, 225, 226, 230, 232, 277, 292, 295, 296, 297, 339, 342, 343, 344, 357, 360, 361, 362, 379, 380, 422, 451, 489, 541, 597, 616, 642, 689, 700, 704, 706, 761, 813, 878, 886, 888, 974, 1017, 1021, 1042, 1043, 1105, 1110, 1112], "wai": [0, 1, 225, 226, 230, 232, 235, 237, 298, 376, 434, 500, 553, 610, 654, 689, 761, 879, 884, 906, 916, 950, 1105, 1110], "wakefield": 1042, "walk": [1037, 1038, 1039, 1110, 1112], "walli": [689, 887, 888], "wan": [53, 104], "want": [98, 99, 100, 224, 227, 308, 884, 886, 887, 888, 982, 983, 1105], "warn": [226, 234, 879, 980, 1045, 1046], "washington": [225, 230, 232, 1042], "wasn": [65, 226], "water": 101, "waterman": [0, 53, 101, 102, 103, 104], "we": [0, 1, 53, 82, 84, 85, 116, 123, 130, 134, 148, 149, 151, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 278, 298, 308, 409, 422, 432, 451, 479, 489, 499, 530, 541, 551, 584, 597, 607, 616, 637, 642, 651, 689, 694, 700, 706, 707, 759, 760, 761, 763, 764, 767, 768, 858, 869, 873, 881, 883, 884, 886, 887, 888, 903, 916, 946, 983, 1042, 1105, 1110, 1112], "weak": 382, "weaker": 767, "web": [53, 98, 101, 104, 222, 236, 759, 760, 761, 762, 763], "webfeat": 227, "webpag": 227, "websit": 84, "week": 888, "weight": [1, 116, 121, 134, 148, 149, 230, 768, 769, 791, 802, 813, 835, 878, 882, 1042], "weighted_unifrac": [1, 148], "welcom": 225, "well": [0, 226, 234, 237, 363, 616, 694, 707, 708, 760, 762, 763, 767, 859, 874, 916, 1042, 1105, 1110, 1111], "wellcom": 226, "were": [1, 100, 103, 116, 123, 146, 148, 149, 150, 230, 232, 233, 387, 422, 458, 489, 509, 541, 562, 597, 621, 642, 759, 761, 763, 869, 887, 888, 1005, 1007, 1046, 1112], "wf": [226, 1112], "what": [1, 116, 134, 146, 148, 149, 150, 230, 234, 237, 238, 266, 267, 271, 275, 323, 422, 489, 541, 597, 642, 767, 857, 887, 903, 906, 916, 939, 950, 1110, 1112], "whatev": 237, "when": [1, 53, 82, 84, 85, 92, 95, 98, 99, 100, 107, 112, 117, 120, 122, 134, 135, 139, 141, 151, 154, 218, 220, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 248, 249, 250, 269, 270, 271, 273, 274, 275, 277, 308, 320, 363, 372, 376, 400, 407, 408, 411, 412, 425, 470, 477, 478, 492, 521, 528, 529, 544, 575, 582, 583, 586, 587, 600, 616, 633, 636, 645, 684, 689, 707, 759, 761, 762, 763, 765, 767, 790, 823, 834, 873, 881, 884, 885, 886, 887, 888, 889, 890, 906, 916, 946, 957, 983, 1018, 1043, 1048, 1049, 1070, 1105, 1110, 1112], "whenev": [226, 879], "where": [1, 3, 14, 18, 46, 51, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 144, 145, 150, 151, 154, 155, 216, 218, 223, 225, 229, 230, 231, 234, 235, 237, 375, 402, 404, 408, 410, 420, 422, 427, 429, 430, 432, 472, 474, 478, 480, 488, 489, 494, 496, 497, 499, 523, 525, 529, 531, 540, 541, 546, 548, 549, 551, 552, 577, 579, 583, 585, 595, 597, 602, 604, 605, 607, 636, 641, 642, 647, 649, 651, 654, 658, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 712, 736, 761, 767, 857, 869, 878, 880, 881, 882, 884, 888, 889, 914, 916, 933, 945, 950, 955, 958, 982, 983, 993, 1020, 1022, 1032, 1035, 1036, 1039, 1068, 1110, 1112], "where_values_miss": [291, 338, 356], "wherea": [219, 677, 727, 753, 857, 871, 1001, 1037, 1039], "wherev": 882, "whether": [32, 66, 67, 70, 79, 89, 90, 110, 111, 134, 228, 237, 248, 250, 277, 281, 287, 296, 297, 328, 334, 343, 344, 346, 352, 361, 362, 364, 370, 380, 384, 387, 396, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 442, 448, 455, 458, 467, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 506, 509, 518, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 559, 562, 571, 588, 589, 590, 591, 592, 593, 594, 597, 598, 599, 618, 621, 630, 638, 639, 640, 642, 643, 644, 663, 685, 689, 700, 706, 717, 741, 759, 761, 762, 763, 868, 881, 882, 913, 914, 916, 925, 950, 953, 984, 1020, 1021, 1022, 1037, 1041, 1044], "which": [1, 3, 13, 15, 17, 44, 47, 65, 98, 99, 100, 107, 112, 116, 121, 134, 139, 143, 148, 149, 151, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 248, 249, 250, 251, 263, 265, 266, 267, 268, 269, 273, 363, 382, 400, 401, 412, 420, 422, 425, 435, 451, 470, 471, 488, 489, 492, 501, 504, 521, 522, 540, 541, 544, 554, 557, 575, 576, 587, 595, 597, 600, 611, 616, 633, 634, 641, 642, 645, 652, 665, 686, 687, 688, 689, 694, 708, 719, 743, 759, 762, 763, 767, 871, 874, 878, 879, 884, 885, 886, 887, 888, 904, 905, 906, 907, 911, 914, 930, 933, 934, 936, 942, 943, 947, 950, 952, 983, 987, 1018, 1019, 1022, 1031, 1032, 1036, 1038, 1042, 1043, 1054, 1071, 1093, 1105, 1107, 1110, 1112], "while": [0, 1, 218, 224, 225, 226, 227, 232, 298, 441, 616, 689, 763, 802, 846, 858, 869, 886, 890, 893, 957, 958, 986, 1070, 1106, 1107, 1112], "white": 224, "whitespac": [225, 226, 229, 231, 235], "whitnei": 689, "who": [230, 888], "whole": [235, 877, 885, 910, 930, 934, 936, 943, 947], "whose": [227, 233, 234, 673, 723, 748, 760, 761, 882, 909, 924, 932, 944, 986], "why": 114, "wide": [1, 92, 134, 400, 470, 521, 575, 633], "width": [225, 229, 232], "wiener": 138, "wiki": [106, 225, 226, 232, 235, 1043], "wikipedia": [106, 225, 226, 235, 1043, 1110], "wilcoxon": 689, "wild": [434, 500, 553, 610], "wildcard": [434, 435, 500, 501, 553, 554, 610, 611, 652], "wildcard_char": [435, 501, 554, 611, 652], "wilei": 686, "william": 117, "window": 846, "window_s": 846, "wish": [234, 1110], "with_mean": [878, 882], "with_replac": 946, "with_std": [878, 882], "within": [1, 84, 106, 134, 144, 151, 218, 221, 225, 226, 230, 232, 234, 235, 363, 382, 504, 557, 616, 665, 694, 719, 743, 763, 764, 824, 858, 859, 869, 886, 887, 906, 935, 958, 1000, 1022, 1047, 1050, 1093, 1110, 1112], "within_captur": [436, 502, 555, 612], "without": [82, 85, 92, 94, 112, 130, 149, 221, 230, 232, 234, 235, 295, 342, 360, 379, 616, 686, 857, 869, 888, 889, 911, 928, 946, 952, 989, 998, 1032, 1041, 1044, 1069, 1070, 1105], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 441, "woman": 888, "women": 888, "won": [1, 116, 146, 148, 149, 150, 226, 299, 874], "word": [0, 224, 225, 227, 230, 235, 323, 424, 491, 543, 599, 644], "work": [1, 53, 151, 225, 232, 234, 237, 363, 382, 504, 557, 707, 761, 874, 888, 922, 931, 1104, 1106, 1107, 1109, 1110], "workflow": 1104, "worri": [230, 890, 957], "worst": 1012, "would": [3, 84, 116, 118, 121, 123, 148, 149, 222, 225, 228, 230, 232, 234, 235, 237, 363, 400, 422, 470, 489, 521, 541, 575, 597, 633, 642, 665, 701, 704, 719, 743, 767, 886, 887, 980, 1032, 1033, 1042, 1105], "wprintgc": [441, 449, 450], "wr": [225, 767], "wrap": [20, 232, 235, 1094], "wrapper": [53, 104, 124, 125, 1047], "writabl": 277, "write": [93, 177, 190, 219, 222, 223, 224, 226, 228, 229, 230, 232, 235, 237, 250, 267, 268, 277, 324, 378, 431, 498, 550, 606, 650, 675, 707, 725, 751, 790, 823, 834, 870, 941, 950, 951, 952, 972, 1016, 1049], "writeabl": 1105, "writer": [97, 178, 191, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 265, 268, 271, 275, 277, 326, 381, 440, 503, 556, 615, 653, 682, 731, 758, 872, 956, 1040], "written": [222, 225, 226, 230, 232, 363, 911, 951, 952, 1042, 1105, 1110], "wu": [134, 149], "wu_dm": 1, "wu_pc": 1, "wunsch": [0, 98, 99, 100], "www": [53, 98, 101, 104, 123, 151, 218, 220, 221, 222, 224, 225, 226, 227, 232, 236, 441, 449, 450, 760], "x": [50, 53, 118, 219, 226, 233, 435, 453, 501, 504, 554, 611, 652, 677, 686, 687, 688, 690, 691, 692, 693, 695, 696, 697, 698, 701, 702, 703, 704, 706, 727, 753, 761, 764, 767, 858, 859, 869, 873, 874, 875, 881, 884, 887, 888, 906, 914, 918, 927, 932, 937, 942, 944, 948, 950, 952, 953, 957, 983, 993, 1001, 1015, 1018, 1031, 1035, 1043, 1069, 1112], "x00": 278, "x01": 278, "x03": 278, "x0c": 278, "x108": 278, "x1c": 278, "x56734": 224, "x86": 278, "x89": 278, "x8b": 278, "x9ah3m": 278, "x9c": 278, "x_": [686, 687, 704, 884, 888], "x_1": [687, 688, 692, 693, 701, 702, 703], "x_d": [687, 688, 692, 693, 701, 702, 703], "x_i": [688, 692, 697, 701, 702, 703, 704], "x_j": 697, "xa6": 278, "xaa": 504, "xb7": 278, "xb9": 278, "xc1": 278, "xc4": 278, "xle": 504, "xx": 224, "xxxxxx": 453, "xyz": 222, "y": [53, 107, 118, 226, 233, 382, 504, 557, 677, 697, 701, 702, 706, 727, 753, 761, 764, 767, 858, 869, 874, 875, 880, 881, 886, 932, 942, 950, 952, 953, 983, 1031], "y_": [688, 888], "y_1": [688, 701, 702], "y_2": 688, "y_d": [701, 702], "y_i": 697, "y_j": 697, "yang": 107, "ye": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "yeast": [438, 613], "yeild": 763, "yellow": 235, "yet": [230, 236, 237], "yield": [75, 80, 91, 225, 323, 392, 397, 406, 407, 408, 422, 423, 439, 452, 463, 468, 476, 477, 478, 489, 490, 514, 519, 527, 528, 529, 541, 542, 567, 572, 581, 582, 583, 597, 598, 614, 626, 631, 636, 642, 643, 763, 926, 927, 928, 935, 939, 993, 1006, 1009, 1012, 1013, 1014, 1024, 1030, 1032, 1033, 1071, 1105, 1112], "york": 109, "you": [1, 53, 98, 99, 100, 116, 146, 148, 149, 150, 151, 220, 222, 225, 226, 228, 232, 234, 235, 237, 307, 308, 320, 322, 323, 382, 504, 557, 616, 654, 747, 759, 763, 881, 884, 886, 887, 888, 945, 980, 982, 983, 1105, 1107, 1110, 1112], "your": [53, 92, 116, 146, 148, 149, 150, 226, 234, 237, 308, 763, 884, 887, 1105, 1110, 1112], "yy": 226, "z": [53, 92, 115, 234, 504, 764, 869, 926, 983, 1031], "z3": [920, 926], "zero": [3, 13, 16, 17, 44, 45, 48, 107, 117, 154, 218, 298, 319, 363, 377, 409, 479, 530, 584, 637, 686, 689, 691, 694, 698, 699, 700, 701, 702, 703, 706, 708, 759, 760, 761, 762, 763, 764, 767, 873, 879, 882, 887, 889, 890, 916, 943, 946, 950, 953, 1043, 1112], "zero_index": [53, 104], "zhao": [53, 104], "zip": 910, "zp_02903423": 220, "zscore": 111, "zxx": 226, "\u00e9": 704, "\u00f8": 134}, "titles": ["Sequence Alignments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.alignment</span></code>)", "Community Diversity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity</span></code>)", "Biological Embeddings (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.embedding</span></code>)", "skbio.alignment.AlignPath", "skbio.alignment.AlignPath.__eq__", "skbio.alignment.AlignPath.__ge__", "skbio.alignment.AlignPath.__getstate__", "skbio.alignment.AlignPath.__gt__", "skbio.alignment.AlignPath.__hash__", "skbio.alignment.AlignPath.__le__", "skbio.alignment.AlignPath.__lt__", "skbio.alignment.AlignPath.__ne__", "skbio.alignment.AlignPath.__str__", "skbio.alignment.AlignPath.from_bits", "skbio.alignment.AlignPath.from_coordinates", "skbio.alignment.AlignPath.from_indices", "skbio.alignment.AlignPath.from_tabular", "skbio.alignment.AlignPath.to_bits", "skbio.alignment.AlignPath.to_coordinates", "skbio.alignment.AlignPath.to_indices", "skbio.alignment.AlignmentStructure", "skbio.alignment.AlignmentStructure.__eq__", "skbio.alignment.AlignmentStructure.__ge__", "skbio.alignment.AlignmentStructure.__getitem__", "skbio.alignment.AlignmentStructure.__getstate__", "skbio.alignment.AlignmentStructure.__gt__", "skbio.alignment.AlignmentStructure.__hash__", "skbio.alignment.AlignmentStructure.__le__", "skbio.alignment.AlignmentStructure.__lt__", "skbio.alignment.AlignmentStructure.__ne__", "skbio.alignment.AlignmentStructure.__setstate__", "skbio.alignment.AlignmentStructure.__str__", "skbio.alignment.AlignmentStructure.is_zero_based", "skbio.alignment.AlignmentStructure.set_zero_based", "skbio.alignment.PairAlignPath", "skbio.alignment.PairAlignPath.__eq__", "skbio.alignment.PairAlignPath.__ge__", "skbio.alignment.PairAlignPath.__getstate__", "skbio.alignment.PairAlignPath.__gt__", "skbio.alignment.PairAlignPath.__hash__", "skbio.alignment.PairAlignPath.__le__", "skbio.alignment.PairAlignPath.__lt__", "skbio.alignment.PairAlignPath.__ne__", "skbio.alignment.PairAlignPath.__str__", "skbio.alignment.PairAlignPath.from_bits", "skbio.alignment.PairAlignPath.from_cigar", "skbio.alignment.PairAlignPath.from_coordinates", "skbio.alignment.PairAlignPath.from_indices", "skbio.alignment.PairAlignPath.from_tabular", "skbio.alignment.PairAlignPath.to_bits", "skbio.alignment.PairAlignPath.to_cigar", "skbio.alignment.PairAlignPath.to_coordinates", "skbio.alignment.PairAlignPath.to_indices", "skbio.alignment.StripedSmithWaterman", "skbio.alignment.StripedSmithWaterman.__call__", "skbio.alignment.StripedSmithWaterman.__eq__", "skbio.alignment.StripedSmithWaterman.__ge__", "skbio.alignment.StripedSmithWaterman.__getstate__", "skbio.alignment.StripedSmithWaterman.__gt__", "skbio.alignment.StripedSmithWaterman.__hash__", "skbio.alignment.StripedSmithWaterman.__le__", "skbio.alignment.StripedSmithWaterman.__lt__", "skbio.alignment.StripedSmithWaterman.__ne__", "skbio.alignment.StripedSmithWaterman.__setstate__", "skbio.alignment.StripedSmithWaterman.__str__", "skbio.alignment.TabularMSA", "skbio.alignment.TabularMSA.__bool__", "skbio.alignment.TabularMSA.__contains__", "skbio.alignment.TabularMSA.__copy__", "skbio.alignment.TabularMSA.__deepcopy__", "skbio.alignment.TabularMSA.__eq__", "skbio.alignment.TabularMSA.__ge__", "skbio.alignment.TabularMSA.__getitem__", "skbio.alignment.TabularMSA.__getstate__", "skbio.alignment.TabularMSA.__gt__", "skbio.alignment.TabularMSA.__iter__", "skbio.alignment.TabularMSA.__le__", "skbio.alignment.TabularMSA.__len__", "skbio.alignment.TabularMSA.__lt__", "skbio.alignment.TabularMSA.__ne__", "skbio.alignment.TabularMSA.__reversed__", "skbio.alignment.TabularMSA.__str__", "skbio.alignment.TabularMSA.append", "skbio.alignment.TabularMSA.consensus", "skbio.alignment.TabularMSA.conservation", "skbio.alignment.TabularMSA.extend", "skbio.alignment.TabularMSA.from_dict", "skbio.alignment.TabularMSA.from_path_seqs", "skbio.alignment.TabularMSA.gap_frequencies", "skbio.alignment.TabularMSA.has_metadata", "skbio.alignment.TabularMSA.has_positional_metadata", "skbio.alignment.TabularMSA.iter_positions", "skbio.alignment.TabularMSA.join", "skbio.alignment.TabularMSA.read", "skbio.alignment.TabularMSA.reassign_index", "skbio.alignment.TabularMSA.sort", "skbio.alignment.TabularMSA.to_dict", "skbio.alignment.TabularMSA.write", "skbio.alignment.global_pairwise_align", "skbio.alignment.global_pairwise_align_nucleotide", "skbio.alignment.global_pairwise_align_protein", "skbio.alignment.local_pairwise_align", "skbio.alignment.local_pairwise_align_nucleotide", "skbio.alignment.local_pairwise_align_protein", "skbio.alignment.local_pairwise_align_ssw", "skbio.alignment.make_identity_substitution_matrix", "Alpha diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.alpha</span></code>)", "skbio.diversity.alpha.ace", "skbio.diversity.alpha.berger_parker_d", "skbio.diversity.alpha.brillouin_d", "skbio.diversity.alpha.chao1", "skbio.diversity.alpha.chao1_ci", "skbio.diversity.alpha.dominance", "skbio.diversity.alpha.doubles", "skbio.diversity.alpha.enspie", "skbio.diversity.alpha.esty_ci", "skbio.diversity.alpha.faith_pd", "skbio.diversity.alpha.fisher_alpha", "skbio.diversity.alpha.gini_index", "skbio.diversity.alpha.goods_coverage", "skbio.diversity.alpha.heip_e", "skbio.diversity.alpha.hill", "skbio.diversity.alpha.inv_simpson", "skbio.diversity.alpha.kempton_taylor_q", "skbio.diversity.alpha.lladser_ci", "skbio.diversity.alpha.lladser_pe", "skbio.diversity.alpha.margalef", "skbio.diversity.alpha.mcintosh_d", "skbio.diversity.alpha.mcintosh_e", "skbio.diversity.alpha.menhinick", "skbio.diversity.alpha.michaelis_menten_fit", "skbio.diversity.alpha.observed_features", "skbio.diversity.alpha.observed_otus", "skbio.diversity.alpha.osd", "skbio.diversity.alpha.phydiv", "skbio.diversity.alpha.pielou_e", "skbio.diversity.alpha.renyi", "skbio.diversity.alpha.robbins", "skbio.diversity.alpha.shannon", "skbio.diversity.alpha.simpson", "skbio.diversity.alpha.simpson_d", "skbio.diversity.alpha.simpson_e", "skbio.diversity.alpha.singles", "skbio.diversity.alpha.sobs", "skbio.diversity.alpha.strong", "skbio.diversity.alpha.tsallis", "skbio.diversity.alpha_diversity", "Beta diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.beta</span></code>)", "skbio.diversity.beta.unweighted_unifrac", "skbio.diversity.beta.weighted_unifrac", "skbio.diversity.beta_diversity", "skbio.diversity.block_beta_diversity", "skbio.diversity.get_alpha_diversity_metrics", "skbio.diversity.get_beta_diversity_metrics", "skbio.diversity.partial_beta_diversity", "skbio.embedding.Embedding", "skbio.embedding.Embedding.__eq__", "skbio.embedding.Embedding.__ge__", "skbio.embedding.Embedding.__getstate__", "skbio.embedding.Embedding.__gt__", "skbio.embedding.Embedding.__hash__", "skbio.embedding.Embedding.__le__", "skbio.embedding.Embedding.__lt__", "skbio.embedding.Embedding.__ne__", "skbio.embedding.Embedding.__str__", "skbio.embedding.Embedding.bytes", "skbio.embedding.ProteinEmbedding", "skbio.embedding.ProteinEmbedding.__eq__", "skbio.embedding.ProteinEmbedding.__ge__", "skbio.embedding.ProteinEmbedding.__getstate__", "skbio.embedding.ProteinEmbedding.__gt__", "skbio.embedding.ProteinEmbedding.__hash__", "skbio.embedding.ProteinEmbedding.__le__", "skbio.embedding.ProteinEmbedding.__lt__", "skbio.embedding.ProteinEmbedding.__ne__", "skbio.embedding.ProteinEmbedding.__str__", "skbio.embedding.ProteinEmbedding.bytes", "skbio.embedding.ProteinEmbedding.read", "skbio.embedding.ProteinEmbedding.write", "skbio.embedding.ProteinVector", "skbio.embedding.ProteinVector.__eq__", "skbio.embedding.ProteinVector.__ge__", "skbio.embedding.ProteinVector.__getstate__", "skbio.embedding.ProteinVector.__gt__", "skbio.embedding.ProteinVector.__hash__", "skbio.embedding.ProteinVector.__le__", "skbio.embedding.ProteinVector.__lt__", "skbio.embedding.ProteinVector.__ne__", "skbio.embedding.ProteinVector.__str__", "skbio.embedding.ProteinVector.bytes", "skbio.embedding.ProteinVector.read", "skbio.embedding.ProteinVector.write", "skbio.embedding.SequenceEmbedding", "skbio.embedding.SequenceEmbedding.__eq__", "skbio.embedding.SequenceEmbedding.__ge__", "skbio.embedding.SequenceEmbedding.__getstate__", "skbio.embedding.SequenceEmbedding.__gt__", "skbio.embedding.SequenceEmbedding.__hash__", "skbio.embedding.SequenceEmbedding.__le__", "skbio.embedding.SequenceEmbedding.__lt__", "skbio.embedding.SequenceEmbedding.__ne__", "skbio.embedding.SequenceEmbedding.__str__", "skbio.embedding.SequenceEmbedding.bytes", "skbio.embedding.SequenceVector", "skbio.embedding.SequenceVector.__eq__", "skbio.embedding.SequenceVector.__ge__", "skbio.embedding.SequenceVector.__getstate__", "skbio.embedding.SequenceVector.__gt__", "skbio.embedding.SequenceVector.__hash__", "skbio.embedding.SequenceVector.__le__", "skbio.embedding.SequenceVector.__lt__", "skbio.embedding.SequenceVector.__ne__", "skbio.embedding.SequenceVector.__str__", "skbio.embedding.SequenceVector.bytes", "skbio.embedding.embed_vec_to_dataframe", "skbio.embedding.embed_vec_to_distances", "skbio.embedding.embed_vec_to_numpy", "skbio.embedding.embed_vec_to_ordination", "Simple binary dissimilarity matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.binary_dm</span></code>)", "BIOM-Format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.biom</span></code>)", "BLAST+6 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast6</span></code>)", "BLAST+7 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast7</span></code>)", "Clustal format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.clustal</span></code>)", "Embedding format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embed</span></code>).", "EMBL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embl</span></code>)", "FASTA/QUAL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fasta</span></code>)", "FASTQ format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fastq</span></code>)", "GenBank format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.genbank</span></code>)", "GFF3 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.gff3</span></code>)", "Labeled square matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.lsmat</span></code>)", "Newick format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.newick</span></code>)", "Ordination results format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.ordination</span></code>)", "PHYLIP multiple sequence alignment format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.phylip</span></code>)", "QSeq format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.qseq</span></code>)", "Format Support", "Stockholm format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.stockholm</span></code>)", "Taxdump format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.taxdump</span></code>)", "I/O Registry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.registry</span></code>)", "skbio.io.registry.Format", "skbio.io.registry.Format.__eq__", "skbio.io.registry.Format.__ge__", "skbio.io.registry.Format.__getstate__", "skbio.io.registry.Format.__gt__", "skbio.io.registry.Format.__hash__", "skbio.io.registry.Format.__le__", "skbio.io.registry.Format.__lt__", "skbio.io.registry.Format.__ne__", "skbio.io.registry.Format.__str__", "skbio.io.registry.Format.reader", "skbio.io.registry.Format.sniffer", "skbio.io.registry.Format.writer", "skbio.io.registry.IORegistry", "skbio.io.registry.IORegistry.__eq__", "skbio.io.registry.IORegistry.__ge__", "skbio.io.registry.IORegistry.__getstate__", "skbio.io.registry.IORegistry.__gt__", "skbio.io.registry.IORegistry.__hash__", "skbio.io.registry.IORegistry.__le__", "skbio.io.registry.IORegistry.__lt__", "skbio.io.registry.IORegistry.__ne__", "skbio.io.registry.IORegistry.__str__", "skbio.io.registry.IORegistry.add_format", "skbio.io.registry.IORegistry.create_format", "skbio.io.registry.IORegistry.get_reader", "skbio.io.registry.IORegistry.get_sniffer", "skbio.io.registry.IORegistry.get_writer", "skbio.io.registry.IORegistry.list_read_formats", "skbio.io.registry.IORegistry.list_write_formats", "skbio.io.registry.IORegistry.monkey_patch", "skbio.io.registry.IORegistry.read", "skbio.io.registry.IORegistry.sniff", "skbio.io.registry.IORegistry.write", "skbio.io.registry.create_format", "skbio.io.registry.read", "skbio.io.registry.sniff", "skbio.io.registry.write", "I/O utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.util</span></code>)", "skbio.io.util.open", "skbio.io.util.open_file", "skbio.io.util.open_files", "skbio.metadata.CategoricalMetadataColumn", "skbio.metadata.CategoricalMetadataColumn.__eq__", "skbio.metadata.CategoricalMetadataColumn.__ge__", "skbio.metadata.CategoricalMetadataColumn.__getstate__", "skbio.metadata.CategoricalMetadataColumn.__gt__", "skbio.metadata.CategoricalMetadataColumn.__le__", "skbio.metadata.CategoricalMetadataColumn.__lt__", "skbio.metadata.CategoricalMetadataColumn.__ne__", "skbio.metadata.CategoricalMetadataColumn.__str__", "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "skbio.metadata.CategoricalMetadataColumn.filter_ids", "skbio.metadata.CategoricalMetadataColumn.get_ids", "skbio.metadata.CategoricalMetadataColumn.get_missing", "skbio.metadata.CategoricalMetadataColumn.get_value", "skbio.metadata.CategoricalMetadataColumn.has_missing_values", "skbio.metadata.CategoricalMetadataColumn.save", "skbio.metadata.CategoricalMetadataColumn.to_dataframe", "skbio.metadata.CategoricalMetadataColumn.to_series", "skbio.metadata.Interval", "skbio.metadata.Interval.__eq__", "skbio.metadata.Interval.__ge__", "skbio.metadata.Interval.__getstate__", "skbio.metadata.Interval.__gt__", "skbio.metadata.Interval.__le__", "skbio.metadata.Interval.__lt__", "skbio.metadata.Interval.__ne__", "skbio.metadata.Interval.__str__", "skbio.metadata.Interval.drop", "skbio.metadata.IntervalMetadata", "skbio.metadata.IntervalMetadata.__copy__", "skbio.metadata.IntervalMetadata.__deepcopy__", "skbio.metadata.IntervalMetadata.__eq__", "skbio.metadata.IntervalMetadata.__ge__", "skbio.metadata.IntervalMetadata.__getstate__", "skbio.metadata.IntervalMetadata.__gt__", "skbio.metadata.IntervalMetadata.__le__", "skbio.metadata.IntervalMetadata.__lt__", "skbio.metadata.IntervalMetadata.__ne__", "skbio.metadata.IntervalMetadata.__str__", "skbio.metadata.IntervalMetadata.add", "skbio.metadata.IntervalMetadata.concat", "skbio.metadata.IntervalMetadata.drop", "skbio.metadata.IntervalMetadata.merge", "skbio.metadata.IntervalMetadata.query", "skbio.metadata.IntervalMetadata.read", "skbio.metadata.IntervalMetadata.sort", "skbio.metadata.IntervalMetadata.write", "skbio.metadata.MetadataColumn", "skbio.metadata.MetadataColumn.__eq__", "skbio.metadata.MetadataColumn.__ge__", "skbio.metadata.MetadataColumn.__getstate__", "skbio.metadata.MetadataColumn.__gt__", "skbio.metadata.MetadataColumn.__le__", "skbio.metadata.MetadataColumn.__lt__", "skbio.metadata.MetadataColumn.__ne__", "skbio.metadata.MetadataColumn.__str__", "skbio.metadata.MetadataColumn.drop_missing_values", "skbio.metadata.MetadataColumn.filter_ids", "skbio.metadata.MetadataColumn.get_ids", "skbio.metadata.MetadataColumn.get_missing", "skbio.metadata.MetadataColumn.get_value", "skbio.metadata.MetadataColumn.has_missing_values", "skbio.metadata.MetadataColumn.save", "skbio.metadata.MetadataColumn.to_dataframe", "skbio.metadata.MetadataColumn.to_series", "skbio.metadata.NumericMetadataColumn", "skbio.metadata.NumericMetadataColumn.__eq__", "skbio.metadata.NumericMetadataColumn.__ge__", "skbio.metadata.NumericMetadataColumn.__getstate__", "skbio.metadata.NumericMetadataColumn.__gt__", "skbio.metadata.NumericMetadataColumn.__le__", "skbio.metadata.NumericMetadataColumn.__lt__", "skbio.metadata.NumericMetadataColumn.__ne__", "skbio.metadata.NumericMetadataColumn.__str__", "skbio.metadata.NumericMetadataColumn.drop_missing_values", "skbio.metadata.NumericMetadataColumn.filter_ids", "skbio.metadata.NumericMetadataColumn.get_ids", "skbio.metadata.NumericMetadataColumn.get_missing", "skbio.metadata.NumericMetadataColumn.get_value", "skbio.metadata.NumericMetadataColumn.has_missing_values", "skbio.metadata.NumericMetadataColumn.save", "skbio.metadata.NumericMetadataColumn.to_dataframe", "skbio.metadata.NumericMetadataColumn.to_series", "skbio.metadata.SampleMetadata", "skbio.metadata.SampleMetadata.__eq__", "skbio.metadata.SampleMetadata.__ge__", "skbio.metadata.SampleMetadata.__getstate__", "skbio.metadata.SampleMetadata.__gt__", "skbio.metadata.SampleMetadata.__le__", "skbio.metadata.SampleMetadata.__lt__", "skbio.metadata.SampleMetadata.__ne__", "skbio.metadata.SampleMetadata.__str__", "skbio.metadata.SampleMetadata.filter_columns", "skbio.metadata.SampleMetadata.filter_ids", "skbio.metadata.SampleMetadata.get_column", "skbio.metadata.SampleMetadata.get_ids", "skbio.metadata.SampleMetadata.load", "skbio.metadata.SampleMetadata.merge", "skbio.metadata.SampleMetadata.read", "skbio.metadata.SampleMetadata.save", "skbio.metadata.SampleMetadata.to_dataframe", "skbio.metadata.SampleMetadata.write", "skbio.sequence.DNA", "skbio.sequence.DNA.__bool__", "skbio.sequence.DNA.__contains__", "skbio.sequence.DNA.__copy__", "skbio.sequence.DNA.__deepcopy__", "skbio.sequence.DNA.__eq__", "skbio.sequence.DNA.__ge__", "skbio.sequence.DNA.__getitem__", "skbio.sequence.DNA.__getstate__", "skbio.sequence.DNA.__gt__", "skbio.sequence.DNA.__iter__", "skbio.sequence.DNA.__le__", "skbio.sequence.DNA.__len__", "skbio.sequence.DNA.__lt__", "skbio.sequence.DNA.__ne__", "skbio.sequence.DNA.__reversed__", "skbio.sequence.DNA.__str__", "skbio.sequence.DNA.complement", "skbio.sequence.DNA.concat", "skbio.sequence.DNA.count", "skbio.sequence.DNA.definites", "skbio.sequence.DNA.degap", "skbio.sequence.DNA.degenerates", "skbio.sequence.DNA.distance", "skbio.sequence.DNA.expand_degenerates", "skbio.sequence.DNA.find_motifs", "skbio.sequence.DNA.find_with_regex", "skbio.sequence.DNA.frequencies", "skbio.sequence.DNA.gaps", "skbio.sequence.DNA.gc_content", "skbio.sequence.DNA.gc_frequency", "skbio.sequence.DNA.has_definites", "skbio.sequence.DNA.has_degenerates", "skbio.sequence.DNA.has_gaps", "skbio.sequence.DNA.has_interval_metadata", "skbio.sequence.DNA.has_metadata", "skbio.sequence.DNA.has_nondegenerates", "skbio.sequence.DNA.has_positional_metadata", "skbio.sequence.DNA.index", "skbio.sequence.DNA.is_reverse_complement", "skbio.sequence.DNA.iter_contiguous", "skbio.sequence.DNA.iter_kmers", "skbio.sequence.DNA.kmer_frequencies", "skbio.sequence.DNA.lowercase", "skbio.sequence.DNA.match_frequency", "skbio.sequence.DNA.matches", "skbio.sequence.DNA.mismatch_frequency", "skbio.sequence.DNA.mismatches", "skbio.sequence.DNA.nondegenerates", "skbio.sequence.DNA.read", "skbio.sequence.DNA.replace", "skbio.sequence.DNA.reverse_complement", "skbio.sequence.DNA.to_definites", "skbio.sequence.DNA.to_indices", "skbio.sequence.DNA.to_regex", "skbio.sequence.DNA.transcribe", "skbio.sequence.DNA.translate", "skbio.sequence.DNA.translate_six_frames", "skbio.sequence.DNA.write", "skbio.sequence.GeneticCode", "skbio.sequence.GeneticCode.__eq__", "skbio.sequence.GeneticCode.__ge__", "skbio.sequence.GeneticCode.__getstate__", "skbio.sequence.GeneticCode.__gt__", "skbio.sequence.GeneticCode.__le__", "skbio.sequence.GeneticCode.__lt__", "skbio.sequence.GeneticCode.__ne__", "skbio.sequence.GeneticCode.__str__", "skbio.sequence.GeneticCode.from_ncbi", "skbio.sequence.GeneticCode.translate", "skbio.sequence.GeneticCode.translate_six_frames", "skbio.sequence.GrammaredSequence", "skbio.sequence.GrammaredSequence.__bool__", "skbio.sequence.GrammaredSequence.__contains__", "skbio.sequence.GrammaredSequence.__copy__", "skbio.sequence.GrammaredSequence.__deepcopy__", "skbio.sequence.GrammaredSequence.__eq__", "skbio.sequence.GrammaredSequence.__ge__", "skbio.sequence.GrammaredSequence.__getitem__", "skbio.sequence.GrammaredSequence.__getstate__", "skbio.sequence.GrammaredSequence.__gt__", "skbio.sequence.GrammaredSequence.__iter__", "skbio.sequence.GrammaredSequence.__le__", "skbio.sequence.GrammaredSequence.__len__", "skbio.sequence.GrammaredSequence.__lt__", "skbio.sequence.GrammaredSequence.__ne__", "skbio.sequence.GrammaredSequence.__reversed__", "skbio.sequence.GrammaredSequence.__str__", "skbio.sequence.GrammaredSequence.concat", "skbio.sequence.GrammaredSequence.count", "skbio.sequence.GrammaredSequence.definites", "skbio.sequence.GrammaredSequence.degap", "skbio.sequence.GrammaredSequence.degenerates", "skbio.sequence.GrammaredSequence.distance", "skbio.sequence.GrammaredSequence.expand_degenerates", "skbio.sequence.GrammaredSequence.find_motifs", "skbio.sequence.GrammaredSequence.find_with_regex", "skbio.sequence.GrammaredSequence.frequencies", "skbio.sequence.GrammaredSequence.gaps", "skbio.sequence.GrammaredSequence.has_definites", "skbio.sequence.GrammaredSequence.has_degenerates", "skbio.sequence.GrammaredSequence.has_gaps", "skbio.sequence.GrammaredSequence.has_interval_metadata", "skbio.sequence.GrammaredSequence.has_metadata", "skbio.sequence.GrammaredSequence.has_nondegenerates", "skbio.sequence.GrammaredSequence.has_positional_metadata", "skbio.sequence.GrammaredSequence.index", "skbio.sequence.GrammaredSequence.iter_contiguous", "skbio.sequence.GrammaredSequence.iter_kmers", "skbio.sequence.GrammaredSequence.kmer_frequencies", "skbio.sequence.GrammaredSequence.lowercase", "skbio.sequence.GrammaredSequence.match_frequency", "skbio.sequence.GrammaredSequence.matches", "skbio.sequence.GrammaredSequence.mismatch_frequency", "skbio.sequence.GrammaredSequence.mismatches", "skbio.sequence.GrammaredSequence.nondegenerates", "skbio.sequence.GrammaredSequence.read", "skbio.sequence.GrammaredSequence.replace", "skbio.sequence.GrammaredSequence.to_definites", "skbio.sequence.GrammaredSequence.to_indices", "skbio.sequence.GrammaredSequence.to_regex", "skbio.sequence.GrammaredSequence.write", "skbio.sequence.Protein", "skbio.sequence.Protein.__bool__", "skbio.sequence.Protein.__contains__", "skbio.sequence.Protein.__copy__", "skbio.sequence.Protein.__deepcopy__", "skbio.sequence.Protein.__eq__", "skbio.sequence.Protein.__ge__", "skbio.sequence.Protein.__getitem__", "skbio.sequence.Protein.__getstate__", "skbio.sequence.Protein.__gt__", "skbio.sequence.Protein.__iter__", "skbio.sequence.Protein.__le__", "skbio.sequence.Protein.__len__", "skbio.sequence.Protein.__lt__", "skbio.sequence.Protein.__ne__", "skbio.sequence.Protein.__reversed__", "skbio.sequence.Protein.__str__", "skbio.sequence.Protein.concat", "skbio.sequence.Protein.count", "skbio.sequence.Protein.definites", "skbio.sequence.Protein.degap", "skbio.sequence.Protein.degenerates", "skbio.sequence.Protein.distance", "skbio.sequence.Protein.expand_degenerates", "skbio.sequence.Protein.find_motifs", "skbio.sequence.Protein.find_with_regex", "skbio.sequence.Protein.frequencies", "skbio.sequence.Protein.gaps", "skbio.sequence.Protein.has_definites", "skbio.sequence.Protein.has_degenerates", "skbio.sequence.Protein.has_gaps", "skbio.sequence.Protein.has_interval_metadata", "skbio.sequence.Protein.has_metadata", "skbio.sequence.Protein.has_nondegenerates", "skbio.sequence.Protein.has_positional_metadata", "skbio.sequence.Protein.has_stops", "skbio.sequence.Protein.index", "skbio.sequence.Protein.iter_contiguous", "skbio.sequence.Protein.iter_kmers", "skbio.sequence.Protein.kmer_frequencies", "skbio.sequence.Protein.lowercase", "skbio.sequence.Protein.match_frequency", "skbio.sequence.Protein.matches", "skbio.sequence.Protein.mismatch_frequency", "skbio.sequence.Protein.mismatches", "skbio.sequence.Protein.nondegenerates", "skbio.sequence.Protein.read", "skbio.sequence.Protein.replace", "skbio.sequence.Protein.stops", "skbio.sequence.Protein.to_definites", "skbio.sequence.Protein.to_indices", "skbio.sequence.Protein.to_regex", "skbio.sequence.Protein.write", "skbio.sequence.RNA", "skbio.sequence.RNA.__bool__", "skbio.sequence.RNA.__contains__", "skbio.sequence.RNA.__copy__", "skbio.sequence.RNA.__deepcopy__", "skbio.sequence.RNA.__eq__", "skbio.sequence.RNA.__ge__", "skbio.sequence.RNA.__getitem__", "skbio.sequence.RNA.__getstate__", "skbio.sequence.RNA.__gt__", "skbio.sequence.RNA.__iter__", "skbio.sequence.RNA.__le__", "skbio.sequence.RNA.__len__", "skbio.sequence.RNA.__lt__", "skbio.sequence.RNA.__ne__", "skbio.sequence.RNA.__reversed__", "skbio.sequence.RNA.__str__", "skbio.sequence.RNA.complement", "skbio.sequence.RNA.concat", "skbio.sequence.RNA.count", "skbio.sequence.RNA.definites", "skbio.sequence.RNA.degap", "skbio.sequence.RNA.degenerates", "skbio.sequence.RNA.distance", "skbio.sequence.RNA.expand_degenerates", "skbio.sequence.RNA.find_motifs", "skbio.sequence.RNA.find_with_regex", "skbio.sequence.RNA.frequencies", "skbio.sequence.RNA.gaps", "skbio.sequence.RNA.gc_content", "skbio.sequence.RNA.gc_frequency", "skbio.sequence.RNA.has_definites", "skbio.sequence.RNA.has_degenerates", "skbio.sequence.RNA.has_gaps", "skbio.sequence.RNA.has_interval_metadata", "skbio.sequence.RNA.has_metadata", "skbio.sequence.RNA.has_nondegenerates", "skbio.sequence.RNA.has_positional_metadata", "skbio.sequence.RNA.index", "skbio.sequence.RNA.is_reverse_complement", "skbio.sequence.RNA.iter_contiguous", "skbio.sequence.RNA.iter_kmers", "skbio.sequence.RNA.kmer_frequencies", "skbio.sequence.RNA.lowercase", "skbio.sequence.RNA.match_frequency", "skbio.sequence.RNA.matches", "skbio.sequence.RNA.mismatch_frequency", "skbio.sequence.RNA.mismatches", "skbio.sequence.RNA.nondegenerates", "skbio.sequence.RNA.read", "skbio.sequence.RNA.replace", "skbio.sequence.RNA.reverse_complement", "skbio.sequence.RNA.reverse_transcribe", "skbio.sequence.RNA.to_definites", "skbio.sequence.RNA.to_indices", "skbio.sequence.RNA.to_regex", "skbio.sequence.RNA.translate", "skbio.sequence.RNA.translate_six_frames", "skbio.sequence.RNA.write", "skbio.sequence.Sequence", "skbio.sequence.Sequence.__bool__", "skbio.sequence.Sequence.__contains__", "skbio.sequence.Sequence.__copy__", "skbio.sequence.Sequence.__deepcopy__", "skbio.sequence.Sequence.__eq__", "skbio.sequence.Sequence.__ge__", "skbio.sequence.Sequence.__getitem__", "skbio.sequence.Sequence.__getstate__", "skbio.sequence.Sequence.__gt__", "skbio.sequence.Sequence.__iter__", "skbio.sequence.Sequence.__le__", "skbio.sequence.Sequence.__len__", "skbio.sequence.Sequence.__lt__", "skbio.sequence.Sequence.__ne__", "skbio.sequence.Sequence.__reversed__", "skbio.sequence.Sequence.__str__", "skbio.sequence.Sequence.concat", "skbio.sequence.Sequence.count", "skbio.sequence.Sequence.distance", "skbio.sequence.Sequence.find_with_regex", "skbio.sequence.Sequence.frequencies", "skbio.sequence.Sequence.has_interval_metadata", "skbio.sequence.Sequence.has_metadata", "skbio.sequence.Sequence.has_positional_metadata", "skbio.sequence.Sequence.index", "skbio.sequence.Sequence.iter_contiguous", "skbio.sequence.Sequence.iter_kmers", "skbio.sequence.Sequence.kmer_frequencies", "skbio.sequence.Sequence.lowercase", "skbio.sequence.Sequence.match_frequency", "skbio.sequence.Sequence.matches", "skbio.sequence.Sequence.mismatch_frequency", "skbio.sequence.Sequence.mismatches", "skbio.sequence.Sequence.read", "skbio.sequence.Sequence.replace", "skbio.sequence.Sequence.to_indices", "skbio.sequence.Sequence.write", "skbio.sequence.SubstitutionMatrix", "skbio.sequence.SubstitutionMatrix.__contains__", "skbio.sequence.SubstitutionMatrix.__eq__", "skbio.sequence.SubstitutionMatrix.__ge__", "skbio.sequence.SubstitutionMatrix.__getitem__", "skbio.sequence.SubstitutionMatrix.__getstate__", "skbio.sequence.SubstitutionMatrix.__gt__", "skbio.sequence.SubstitutionMatrix.__le__", "skbio.sequence.SubstitutionMatrix.__lt__", "skbio.sequence.SubstitutionMatrix.__ne__", "skbio.sequence.SubstitutionMatrix.__str__", "skbio.sequence.SubstitutionMatrix.between", "skbio.sequence.SubstitutionMatrix.by_name", "skbio.sequence.SubstitutionMatrix.copy", "skbio.sequence.SubstitutionMatrix.filter", "skbio.sequence.SubstitutionMatrix.from_dict", "skbio.sequence.SubstitutionMatrix.from_iterable", "skbio.sequence.SubstitutionMatrix.get_names", "skbio.sequence.SubstitutionMatrix.identity", "skbio.sequence.SubstitutionMatrix.index", "skbio.sequence.SubstitutionMatrix.plot", "skbio.sequence.SubstitutionMatrix.read", "skbio.sequence.SubstitutionMatrix.redundant_form", "skbio.sequence.SubstitutionMatrix.rename", "skbio.sequence.SubstitutionMatrix.to_data_frame", "skbio.sequence.SubstitutionMatrix.to_dict", "skbio.sequence.SubstitutionMatrix.transpose", "skbio.sequence.SubstitutionMatrix.within", "skbio.sequence.SubstitutionMatrix.write", "Sequence distance metrics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence.distance</span></code>)", "skbio.sequence.distance.hamming", "skbio.sequence.distance.kmer_distance", "Composition Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.composition</span></code>)", "skbio.stats.composition.alr", "skbio.stats.composition.alr_inv", "skbio.stats.composition.ancom", "skbio.stats.composition.centralize", "skbio.stats.composition.closure", "skbio.stats.composition.clr", "skbio.stats.composition.clr_inv", "skbio.stats.composition.dirmult_ttest", "skbio.stats.composition.ilr", "skbio.stats.composition.ilr_inv", "skbio.stats.composition.inner", "skbio.stats.composition.multi_replace", "skbio.stats.composition.multiplicative_replacement", "skbio.stats.composition.pairwise_vlr", "skbio.stats.composition.perturb", "skbio.stats.composition.perturb_inv", "skbio.stats.composition.power", "skbio.stats.composition.sbp_basis", "skbio.stats.composition.tree_basis", "skbio.stats.composition.vlr", "Distance matrix-based statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.distance</span></code>)", "skbio.stats.distance.DissimilarityMatrix", "skbio.stats.distance.DissimilarityMatrix.__contains__", "skbio.stats.distance.DissimilarityMatrix.__eq__", "skbio.stats.distance.DissimilarityMatrix.__ge__", "skbio.stats.distance.DissimilarityMatrix.__getitem__", "skbio.stats.distance.DissimilarityMatrix.__getstate__", "skbio.stats.distance.DissimilarityMatrix.__gt__", "skbio.stats.distance.DissimilarityMatrix.__le__", "skbio.stats.distance.DissimilarityMatrix.__lt__", "skbio.stats.distance.DissimilarityMatrix.__ne__", "skbio.stats.distance.DissimilarityMatrix.__str__", "skbio.stats.distance.DissimilarityMatrix.between", "skbio.stats.distance.DissimilarityMatrix.copy", "skbio.stats.distance.DissimilarityMatrix.filter", "skbio.stats.distance.DissimilarityMatrix.from_iterable", "skbio.stats.distance.DissimilarityMatrix.index", "skbio.stats.distance.DissimilarityMatrix.plot", "skbio.stats.distance.DissimilarityMatrix.read", "skbio.stats.distance.DissimilarityMatrix.redundant_form", "skbio.stats.distance.DissimilarityMatrix.rename", "skbio.stats.distance.DissimilarityMatrix.to_data_frame", "skbio.stats.distance.DissimilarityMatrix.transpose", "skbio.stats.distance.DissimilarityMatrix.within", "skbio.stats.distance.DissimilarityMatrix.write", "skbio.stats.distance.DistanceMatrix", "skbio.stats.distance.DistanceMatrix.__contains__", "skbio.stats.distance.DistanceMatrix.__eq__", "skbio.stats.distance.DistanceMatrix.__ge__", "skbio.stats.distance.DistanceMatrix.__getitem__", "skbio.stats.distance.DistanceMatrix.__getstate__", "skbio.stats.distance.DistanceMatrix.__gt__", "skbio.stats.distance.DistanceMatrix.__le__", "skbio.stats.distance.DistanceMatrix.__lt__", "skbio.stats.distance.DistanceMatrix.__ne__", "skbio.stats.distance.DistanceMatrix.__str__", "skbio.stats.distance.DistanceMatrix.between", "skbio.stats.distance.DistanceMatrix.condensed_form", "skbio.stats.distance.DistanceMatrix.copy", "skbio.stats.distance.DistanceMatrix.filter", "skbio.stats.distance.DistanceMatrix.from_iterable", "skbio.stats.distance.DistanceMatrix.index", "skbio.stats.distance.DistanceMatrix.permute", "skbio.stats.distance.DistanceMatrix.plot", "skbio.stats.distance.DistanceMatrix.read", "skbio.stats.distance.DistanceMatrix.redundant_form", "skbio.stats.distance.DistanceMatrix.rename", "skbio.stats.distance.DistanceMatrix.to_data_frame", "skbio.stats.distance.DistanceMatrix.to_series", "skbio.stats.distance.DistanceMatrix.transpose", "skbio.stats.distance.DistanceMatrix.within", "skbio.stats.distance.DistanceMatrix.write", "skbio.stats.distance.anosim", "skbio.stats.distance.bioenv", "skbio.stats.distance.mantel", "skbio.stats.distance.permanova", "skbio.stats.distance.permdisp", "skbio.stats.distance.pwmantel", "skbio.stats.distance.randdm", "Evolutionary statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.evolve</span></code>)", "skbio.stats.evolve.hommola_cospeciation", "Gradient analyses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.gradient</span></code>)", "skbio.stats.gradient.AverageGradientANOVA", "skbio.stats.gradient.AverageGradientANOVA.__eq__", "skbio.stats.gradient.AverageGradientANOVA.__ge__", "skbio.stats.gradient.AverageGradientANOVA.__getstate__", "skbio.stats.gradient.AverageGradientANOVA.__gt__", "skbio.stats.gradient.AverageGradientANOVA.__hash__", "skbio.stats.gradient.AverageGradientANOVA.__le__", "skbio.stats.gradient.AverageGradientANOVA.__lt__", "skbio.stats.gradient.AverageGradientANOVA.__ne__", "skbio.stats.gradient.AverageGradientANOVA.__str__", "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "skbio.stats.gradient.CategoryResults", "skbio.stats.gradient.CategoryResults.__eq__", "skbio.stats.gradient.CategoryResults.__ge__", "skbio.stats.gradient.CategoryResults.__getstate__", "skbio.stats.gradient.CategoryResults.__gt__", "skbio.stats.gradient.CategoryResults.__hash__", "skbio.stats.gradient.CategoryResults.__le__", "skbio.stats.gradient.CategoryResults.__lt__", "skbio.stats.gradient.CategoryResults.__ne__", "skbio.stats.gradient.CategoryResults.__str__", "skbio.stats.gradient.CategoryResults.to_files", "skbio.stats.gradient.FirstDifferenceGradientANOVA", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVA", "skbio.stats.gradient.GradientANOVA.__eq__", "skbio.stats.gradient.GradientANOVA.__ge__", "skbio.stats.gradient.GradientANOVA.__getstate__", "skbio.stats.gradient.GradientANOVA.__gt__", "skbio.stats.gradient.GradientANOVA.__hash__", "skbio.stats.gradient.GradientANOVA.__le__", "skbio.stats.gradient.GradientANOVA.__lt__", "skbio.stats.gradient.GradientANOVA.__ne__", "skbio.stats.gradient.GradientANOVA.__str__", "skbio.stats.gradient.GradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVAResults", "skbio.stats.gradient.GradientANOVAResults.__eq__", "skbio.stats.gradient.GradientANOVAResults.__ge__", "skbio.stats.gradient.GradientANOVAResults.__getstate__", "skbio.stats.gradient.GradientANOVAResults.__gt__", "skbio.stats.gradient.GradientANOVAResults.__hash__", "skbio.stats.gradient.GradientANOVAResults.__le__", "skbio.stats.gradient.GradientANOVAResults.__lt__", "skbio.stats.gradient.GradientANOVAResults.__ne__", "skbio.stats.gradient.GradientANOVAResults.__str__", "skbio.stats.gradient.GradientANOVAResults.to_files", "skbio.stats.gradient.GroupResults", "skbio.stats.gradient.GroupResults.__eq__", "skbio.stats.gradient.GroupResults.__ge__", "skbio.stats.gradient.GroupResults.__getstate__", "skbio.stats.gradient.GroupResults.__gt__", "skbio.stats.gradient.GroupResults.__hash__", "skbio.stats.gradient.GroupResults.__le__", "skbio.stats.gradient.GroupResults.__lt__", "skbio.stats.gradient.GroupResults.__ne__", "skbio.stats.gradient.GroupResults.__str__", "skbio.stats.gradient.GroupResults.to_files", "skbio.stats.gradient.TrajectoryGradientANOVA", "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "skbio.stats.gradient.WindowDifferenceGradientANOVA", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "skbio.stats.isubsample", "Ordination methods (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.ordination</span></code>)", "skbio.stats.ordination.OrdinationResults", "skbio.stats.ordination.OrdinationResults.__eq__", "skbio.stats.ordination.OrdinationResults.__ge__", "skbio.stats.ordination.OrdinationResults.__getstate__", "skbio.stats.ordination.OrdinationResults.__gt__", "skbio.stats.ordination.OrdinationResults.__hash__", "skbio.stats.ordination.OrdinationResults.__le__", "skbio.stats.ordination.OrdinationResults.__lt__", "skbio.stats.ordination.OrdinationResults.__ne__", "skbio.stats.ordination.OrdinationResults.__str__", "skbio.stats.ordination.OrdinationResults.plot", "skbio.stats.ordination.OrdinationResults.read", "skbio.stats.ordination.OrdinationResults.rename", "skbio.stats.ordination.OrdinationResults.write", "skbio.stats.ordination.ca", "skbio.stats.ordination.cca", "skbio.stats.ordination.corr", "skbio.stats.ordination.e_matrix", "skbio.stats.ordination.f_matrix", "skbio.stats.ordination.mean_and_std", "skbio.stats.ordination.pcoa", "skbio.stats.ordination.pcoa_biplot", "skbio.stats.ordination.rda", "skbio.stats.ordination.scale", "skbio.stats.ordination.svd_rank", "Empirical Power Estimation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.power</span></code>)", "skbio.stats.power.confidence_bound", "skbio.stats.power.paired_subsamples", "skbio.stats.power.subsample_paired_power", "skbio.stats.power.subsample_power", "skbio.stats.subsample_counts", "skbio.table.Table", "skbio.table.Table.__eq__", "skbio.table.Table.__ge__", "skbio.table.Table.__getitem__", "skbio.table.Table.__getstate__", "skbio.table.Table.__gt__", "skbio.table.Table.__iter__", "skbio.table.Table.__le__", "skbio.table.Table.__lt__", "skbio.table.Table.__ne__", "skbio.table.Table.__str__", "skbio.table.Table.add_group_metadata", "skbio.table.Table.add_metadata", "skbio.table.Table.align_to", "skbio.table.Table.align_to_dataframe", "skbio.table.Table.align_tree", "skbio.table.Table.collapse", "skbio.table.Table.concat", "skbio.table.Table.copy", "skbio.table.Table.data", "skbio.table.Table.del_metadata", "skbio.table.Table.delimited_self", "skbio.table.Table.descriptive_equality", "skbio.table.Table.exists", "skbio.table.Table.filter", "skbio.table.Table.from_adjacency", "skbio.table.Table.from_hdf5", "skbio.table.Table.from_json", "skbio.table.Table.from_tsv", "skbio.table.Table.get_table_density", "skbio.table.Table.get_value_by_ids", "skbio.table.Table.group_metadata", "skbio.table.Table.head", "skbio.table.Table.ids", "skbio.table.Table.index", "skbio.table.Table.is_empty", "skbio.table.Table.iter", "skbio.table.Table.iter_data", "skbio.table.Table.iter_pairwise", "skbio.table.Table.length", "skbio.table.Table.max", "skbio.table.Table.merge", "skbio.table.Table.metadata", "skbio.table.Table.metadata_to_dataframe", "skbio.table.Table.min", "skbio.table.Table.nonzero", "skbio.table.Table.nonzero_counts", "skbio.table.Table.norm", "skbio.table.Table.pa", "skbio.table.Table.partition", "skbio.table.Table.rankdata", "skbio.table.Table.read", "skbio.table.Table.reduce", "skbio.table.Table.remove_empty", "skbio.table.Table.sort", "skbio.table.Table.sort_order", "skbio.table.Table.subsample", "skbio.table.Table.sum", "skbio.table.Table.to_anndata", "skbio.table.Table.to_dataframe", "skbio.table.Table.to_hdf5", "skbio.table.Table.to_json", "skbio.table.Table.to_tsv", "skbio.table.Table.transform", "skbio.table.Table.transpose", "skbio.table.Table.update_ids", "skbio.table.Table.write", "skbio.table.example_table", "skbio.tree.TreeNode", "skbio.tree.TreeNode.__copy__", "skbio.tree.TreeNode.__deepcopy__", "skbio.tree.TreeNode.__eq__", "skbio.tree.TreeNode.__ge__", "skbio.tree.TreeNode.__getitem__", "skbio.tree.TreeNode.__getstate__", "skbio.tree.TreeNode.__gt__", "skbio.tree.TreeNode.__hash__", "skbio.tree.TreeNode.__iter__", "skbio.tree.TreeNode.__le__", "skbio.tree.TreeNode.__len__", "skbio.tree.TreeNode.__lt__", "skbio.tree.TreeNode.__ne__", "skbio.tree.TreeNode.__str__", "skbio.tree.TreeNode.accumulate_to_ancestor", "skbio.tree.TreeNode.ancestors", "skbio.tree.TreeNode.append", "skbio.tree.TreeNode.ascii_art", "skbio.tree.TreeNode.assign_ids", "skbio.tree.TreeNode.assign_supports", "skbio.tree.TreeNode.bifurcate", "skbio.tree.TreeNode.cache_attr", "skbio.tree.TreeNode.compare_rfd", "skbio.tree.TreeNode.compare_subsets", "skbio.tree.TreeNode.compare_tip_distances", "skbio.tree.TreeNode.copy", "skbio.tree.TreeNode.count", "skbio.tree.TreeNode.create_caches", "skbio.tree.TreeNode.deepcopy", "skbio.tree.TreeNode.descending_branch_length", "skbio.tree.TreeNode.distance", "skbio.tree.TreeNode.extend", "skbio.tree.TreeNode.find", "skbio.tree.TreeNode.find_all", "skbio.tree.TreeNode.find_by_func", "skbio.tree.TreeNode.find_by_id", "skbio.tree.TreeNode.from_linkage_matrix", "skbio.tree.TreeNode.from_taxdump", "skbio.tree.TreeNode.from_taxonomy", "skbio.tree.TreeNode.get_max_distance", "skbio.tree.TreeNode.has_children", "skbio.tree.TreeNode.index_tree", "skbio.tree.TreeNode.insert", "skbio.tree.TreeNode.invalidate_caches", "skbio.tree.TreeNode.is_root", "skbio.tree.TreeNode.is_tip", "skbio.tree.TreeNode.lca", "skbio.tree.TreeNode.levelorder", "skbio.tree.TreeNode.lowest_common_ancestor", "skbio.tree.TreeNode.neighbors", "skbio.tree.TreeNode.non_tips", "skbio.tree.TreeNode.observed_node_counts", "skbio.tree.TreeNode.pop", "skbio.tree.TreeNode.postorder", "skbio.tree.TreeNode.pre_and_postorder", "skbio.tree.TreeNode.preorder", "skbio.tree.TreeNode.prune", "skbio.tree.TreeNode.read", "skbio.tree.TreeNode.remove", "skbio.tree.TreeNode.remove_deleted", "skbio.tree.TreeNode.root", "skbio.tree.TreeNode.root_at", "skbio.tree.TreeNode.root_at_midpoint", "skbio.tree.TreeNode.root_by_outgroup", "skbio.tree.TreeNode.shear", "skbio.tree.TreeNode.shuffle", "skbio.tree.TreeNode.siblings", "skbio.tree.TreeNode.subset", "skbio.tree.TreeNode.subsets", "skbio.tree.TreeNode.subtree", "skbio.tree.TreeNode.tip_tip_distances", "skbio.tree.TreeNode.tips", "skbio.tree.TreeNode.to_array", "skbio.tree.TreeNode.to_taxonomy", "skbio.tree.TreeNode.traverse", "skbio.tree.TreeNode.unpack", "skbio.tree.TreeNode.unpack_by_func", "skbio.tree.TreeNode.unroot", "skbio.tree.TreeNode.unrooted_copy", "skbio.tree.TreeNode.unrooted_deepcopy", "skbio.tree.TreeNode.unrooted_move", "skbio.tree.TreeNode.write", "skbio.tree.gme", "skbio.tree.majority_rule", "skbio.tree.nj", "skbio.tree.nni", "skbio.util.EfficiencyWarning", "skbio.util.RepresentationWarning", "skbio.util.assert_data_frame_almost_equal", "skbio.util.assert_ordination_results_equal", "skbio.util.cardinal_to_ordinal", "skbio.util.classproperty", "skbio.util.classproperty.__delete__", "skbio.util.classproperty.__eq__", "skbio.util.classproperty.__ge__", "skbio.util.classproperty.__get__", "skbio.util.classproperty.__getstate__", "skbio.util.classproperty.__gt__", "skbio.util.classproperty.__hash__", "skbio.util.classproperty.__le__", "skbio.util.classproperty.__lt__", "skbio.util.classproperty.__ne__", "skbio.util.classproperty.__set__", "skbio.util.classproperty.__set_name__", "skbio.util.classproperty.__str__", "skbio.util.classproperty.deleter", "skbio.util.classproperty.getter", "skbio.util.classproperty.setter", "skbio.util.find_duplicates", "skbio.util.get_data_path", "skbio.util.safe_md5", "skbio.workflow.Workflow", "skbio.workflow.Workflow.__call__", "skbio.workflow.Workflow.__eq__", "skbio.workflow.Workflow.__ge__", "skbio.workflow.Workflow.__getstate__", "skbio.workflow.Workflow.__gt__", "skbio.workflow.Workflow.__hash__", "skbio.workflow.Workflow.__le__", "skbio.workflow.Workflow.__lt__", "skbio.workflow.Workflow.__ne__", "skbio.workflow.Workflow.__str__", "skbio.workflow.Workflow.initialize_state", "skbio.workflow.method", "skbio.workflow.method.__call__", "skbio.workflow.method.__eq__", "skbio.workflow.method.__ge__", "skbio.workflow.method.__getstate__", "skbio.workflow.method.__gt__", "skbio.workflow.method.__hash__", "skbio.workflow.method.__le__", "skbio.workflow.method.__lt__", "skbio.workflow.method.__ne__", "skbio.workflow.method.__str__", "skbio.workflow.requires", "skbio.workflow.requires.__call__", "skbio.workflow.requires.__eq__", "skbio.workflow.requires.__ge__", "skbio.workflow.requires.__getstate__", "skbio.workflow.requires.__gt__", "skbio.workflow.requires.__hash__", "skbio.workflow.requires.__le__", "skbio.workflow.requires.__lt__", "skbio.workflow.requires.__ne__", "skbio.workflow.requires.__str__", "Home", "Input and Output (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io</span></code>)", "Metadata (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.metadata</span></code>)", "Biological Sequences (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence</span></code>)", "Multivariate Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats</span></code>)", "Data Table (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.table</span></code>)", "Trees and Phylogenetics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.tree</span></code>)", "Utilities for Developers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.util</span></code>)", "Workflow construction (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.workflow</span></code>)"], "titleterms": {"0": 1104, "3": 1104, "6": [220, 1104], "7": 221, "__bool__": [66, 383, 454, 505, 558, 617], "__call__": [54, 1071, 1083, 1094], "__contains__": [67, 384, 455, 506, 559, 618, 655, 709, 733], "__copy__": [68, 309, 385, 456, 507, 560, 619, 959], "__deepcopy__": [69, 310, 386, 457, 508, 561, 620, 960], "__delete__": 1051, "__eq__": [4, 21, 35, 55, 70, 156, 167, 180, 193, 204, 239, 252, 281, 299, 311, 328, 346, 364, 387, 442, 458, 509, 562, 621, 656, 710, 734, 770, 781, 792, 803, 814, 825, 836, 847, 860, 891, 961, 1052, 1072, 1084, 1095], "__ge__": [5, 22, 36, 56, 71, 157, 168, 181, 194, 205, 240, 253, 282, 300, 312, 329, 347, 365, 388, 443, 459, 510, 563, 622, 657, 711, 735, 771, 782, 793, 804, 815, 826, 837, 848, 861, 892, 962, 1053, 1073, 1085, 1096], "__get__": 1054, "__getitem__": [23, 72, 389, 460, 511, 564, 623, 658, 712, 736, 893, 963], "__getstate__": [6, 24, 37, 57, 73, 158, 169, 182, 195, 206, 241, 254, 283, 301, 313, 330, 348, 366, 390, 444, 461, 512, 565, 624, 659, 713, 737, 772, 783, 794, 805, 816, 827, 838, 849, 862, 894, 964, 1055, 1074, 1086, 1097], "__gt__": [7, 25, 38, 58, 74, 159, 170, 183, 196, 207, 242, 255, 284, 302, 314, 331, 349, 367, 391, 445, 462, 513, 566, 625, 660, 714, 738, 773, 784, 795, 806, 817, 828, 839, 850, 863, 895, 965, 1056, 1075, 1087, 1098], "__hash__": [8, 26, 39, 59, 160, 171, 184, 197, 208, 243, 256, 774, 785, 796, 807, 818, 829, 840, 851, 864, 966, 1057, 1076, 1088, 1099], "__iter__": [75, 392, 463, 514, 567, 626, 896, 967], "__le__": [9, 27, 40, 60, 76, 161, 172, 185, 198, 209, 244, 257, 285, 303, 315, 332, 350, 368, 393, 446, 464, 515, 568, 627, 661, 715, 739, 775, 786, 797, 808, 819, 830, 841, 852, 865, 897, 968, 1058, 1077, 1089, 1100], "__len__": [77, 394, 465, 516, 569, 628, 969], "__lt__": [10, 28, 41, 61, 78, 162, 173, 186, 199, 210, 245, 258, 286, 304, 316, 333, 351, 369, 395, 447, 466, 517, 570, 629, 662, 716, 740, 776, 787, 798, 809, 820, 831, 842, 853, 866, 898, 970, 1059, 1078, 1090, 1101], "__ne__": [11, 29, 42, 62, 79, 163, 174, 187, 200, 211, 246, 259, 287, 305, 317, 334, 352, 370, 396, 448, 467, 518, 571, 630, 663, 717, 741, 777, 788, 799, 810, 821, 832, 843, 854, 867, 899, 971, 1060, 1079, 1091, 1102], "__reversed__": [80, 397, 468, 519, 572, 631], "__set__": 1061, "__set_name__": 1062, "__setstate__": [30, 63], "__str__": [12, 31, 43, 64, 81, 164, 175, 188, 201, 212, 247, 260, 288, 306, 318, 335, 353, 371, 398, 449, 469, 520, 573, 632, 664, 718, 742, 778, 789, 800, 811, 822, 833, 844, 855, 868, 900, 972, 1063, 1080, 1092, 1103], "ac": 107, "accumulate_to_ancestor": 973, "ad": 230, "add": 319, "add_format": 261, "add_group_metadata": 901, "add_metadata": 902, "advanc": 230, "algorithm": 0, "align": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 222, 232, 235], "align_to": 903, "align_to_datafram": 904, "align_tre": 905, "alignmentstructur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "alignpath": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "alpha": [1, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "alpha_divers": 146, "alr": 687, "alr_inv": 688, "analys": 768, "analysi": 858, "ancestor": 974, "ancom": 689, "anosim": 759, "append": [82, 975], "applic": 230, "argument": 237, "ascii_art": 976, "assert_data_frame_almost_equ": 1047, "assert_ordination_results_equ": 1048, "assign_id": 977, "assign_support": 978, "averagegradientanova": [769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779], "base": 707, "basic": 230, "befor": [224, 227], "berger_parker_d": 108, "beta": [1, 147, 148, 149], "beta_divers": 150, "between": [665, 719, 743], "bifurc": 979, "binari": 218, "binary_dm": 218, "bio": [237, 1104, 1105], "bioenv": 760, "biolog": [2, 1107], "biom": [219, 1109], "blast": [220, 221], "blast6": 220, "blast7": 221, "block_beta_divers": 151, "brillouin_d": 109, "by_nam": 666, "byte": [165, 176, 189, 202, 213], "ca": 873, "cache_attr": 980, "calcul": 1107, "can": 1105, "canon": 858, "cardinal_to_ordin": 1049, "categor": 707, "categoricalmetadatacolumn": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "categoryresult": [780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790], "caveat": 230, "cca": 874, "central": 690, "chao1": 110, "chao1_ci": 111, "charact": 234, "class": [237, 707, 768, 1112], "classproperti": [1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066], "closur": 691, "clr": 692, "clr_inv": 693, "clustal": 222, "collaps": 906, "column": [220, 221, 234, 1106], "comment": [230, 234], "commun": 1, "compare_rfd": 981, "compare_subset": 982, "compare_tip_dist": 983, "comparison": 707, "complement": [399, 574], "composit": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 1108], "concat": [320, 400, 470, 521, 575, 633, 907], "condensed_form": 744, "confidence_bound": 885, "consensu": 83, "conserv": 84, "construct": 1112, "continu": 707, "cophylogenet": 766, "copi": [667, 720, 745, 908, 984], "corr": 875, "correspond": 858, "count": [1, 401, 471, 522, 576, 634, 985], "coverag": 106, "creat": 237, "create_cach": 986, "create_format": [262, 272], "custom": 1105, "data": [0, 225, 707, 909, 1108, 1109], "decor": 1112, "deepcopi": 987, "definit": [402, 472, 523, 577], "degap": [403, 473, 524, 578], "degener": [404, 474, 525, 579], "del_metadata": 910, "delet": 1064, "delimited_self": 911, "deprec": 0, "descending_branch_length": 988, "descriptive_equ": 912, "dev": 1104, "develop": [1105, 1111], "dirmult_ttest": 694, "dissimilar": 218, "dissimilaritymatrix": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731], "distanc": [405, 475, 526, 580, 635, 683, 684, 685, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 989, 1107, 1108], "distancematrix": [732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "divers": [1, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "divis": 236, "dmp": 236, "dna": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "document": 1104, "domin": [106, 112], "doubl": 113, "drop": [307, 321], "drop_missing_valu": [289, 336, 354], "e_matrix": 876, "efficiencywarn": 1045, "emb": 223, "embed": [2, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223], "embed_vec_to_datafram": 214, "embed_vec_to_dist": 215, "embed_vec_to_numpi": 216, "embed_vec_to_ordin": 217, "embl": 224, "empir": 884, "empti": 234, "enspi": 114, "estim": 884, "esty_ci": 115, "even": 106, "evolutionari": 766, "evolv": [766, 767], "exampl": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 707, 768, 858, 884, 1109], "example_t": 957, "except": [237, 707, 1105, 1110], "exist": 913, "expand_degener": [406, 476, 527, 581], "explan": 230, "extend": [85, 990], "f_matrix": 877, "faith_pd": 116, "fasta": 225, "fastq": 226, "featur": [224, 227], "fh": 224, "file": [224, 225, 227, 1105], "filter": [668, 721, 746, 914], "filter_column": 372, "filter_id": [290, 337, 355, 373], "find": 991, "find_al": 992, "find_by_func": 993, "find_by_id": 994, "find_dupl": 1067, "find_motif": [407, 477, 528, 582], "find_with_regex": [408, 478, 529, 583, 636], "firstdifferencegradientanova": [791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801], "fisher_alpha": 117, "footer": 235, "formal": 230, "format": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 1105], "frequenc": [409, 479, 530, 584, 637], "from": 1105, "from_adjac": 915, "from_bit": [13, 44], "from_cigar": 45, "from_coordin": [14, 46], "from_dict": [86, 669], "from_hdf5": 916, "from_indic": [15, 47], "from_iter": [670, 722, 747], "from_json": 917, "from_linkage_matrix": 995, "from_ncbi": 450, "from_path_seq": 87, "from_tabular": [16, 48], "from_taxdump": 996, "from_taxonomi": 997, "from_tsv": 918, "ft": 224, "function": [0, 147, 237, 276, 683, 686, 707, 766, 858, 884, 1111], "g": 235, "gap": [410, 480, 531, 585], "gap_frequ": 88, "gc": 235, "gc_content": [411, 586], "gc_frequenc": [412, 587], "genbank": 227, "gencod": 236, "gener": [224, 225, 233], "geneticcod": [441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "get_alpha_diversity_metr": 152, "get_beta_diversity_metr": 153, "get_column": 374, "get_data_path": 1068, "get_id": [291, 338, 356, 375], "get_max_dist": 998, "get_miss": [292, 339, 357], "get_nam": 671, "get_read": 263, "get_sniff": 264, "get_table_dens": 919, "get_trajectori": [779, 801, 812, 845, 856], "get_valu": [293, 340, 358], "get_value_by_id": 920, "get_writ": 265, "getter": 1065, "gf": 235, "gff3": 228, "gini_index": 118, "global_pairwise_align": 98, "global_pairwise_align_nucleotid": 99, "global_pairwise_align_protein": 100, "gme": 1041, "goods_coverag": 119, "gr": 235, "gradient": [768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856], "gradientanova": [802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812], "gradientanovaresult": [813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823], "grammar": 230, "grammaredsequ": [453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503], "group_metadata": 921, "groupresult": [824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834], "ham": 684, "has_children": 999, "has_definit": [413, 481, 532, 588], "has_degener": [414, 482, 533, 589], "has_gap": [415, 483, 534, 590], "has_interval_metadata": [416, 484, 535, 591, 638], "has_metadata": [89, 417, 485, 536, 592, 639], "has_missing_valu": [294, 341, 359], "has_nondegener": [418, 486, 537, 593], "has_positional_metadata": [90, 419, 487, 538, 594, 640], "has_stop": 539, "head": 922, "header": [224, 225, 232, 235], "heip_": 120, "hill": 121, "hommola_cospeci": 767, "i": [237, 276], "id": 923, "ident": 672, "identifi": 234, "ilr": 695, "ilr_inv": 696, "index": [420, 488, 540, 595, 641, 673, 723, 748, 924], "index_tre": 1000, "inform": 230, "initialize_st": 1081, "inlin": 230, "inner": 697, "input": [1, 1105], "insert": 1001, "interv": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 1106], "intervalmetadata": [308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "introduct": 1, "inv_simpson": 122, "invalidate_cach": 1002, "io": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 1105], "ioregistri": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "is_empti": 925, "is_reverse_compl": [421, 596], "is_root": 1003, "is_tip": 1004, "is_zero_bas": 32, "isubsampl": 857, "iter": 926, "iter_contigu": [422, 489, 541, 597, 642], "iter_data": 927, "iter_km": [423, 490, 542, 598, 643], "iter_pairwis": 928, "iter_posit": 91, "join": 92, "kempton_taylor_q": 123, "keyword": 237, "kind": 1105, "kmer_dist": 685, "kmer_frequ": [424, 491, 543, 599, 644], "label": [229, 230], "lca": 1005, "lead": 234, "length": [230, 929], "level": 224, "levelord": 1006, "list_read_format": 266, "list_write_format": 267, "lladser_ci": 124, "lladser_p": 125, "load": 376, "local_pairwise_align": 101, "local_pairwise_align_nucleotid": 102, "local_pairwise_align_protein": 103, "local_pairwise_align_ssw": 104, "locat": 227, "lowercas": [425, 492, 544, 600, 645], "lowest_common_ancestor": 1007, "lsmat": 229, "majority_rul": 1042, "make_identity_substitution_matrix": 105, "mantel": 761, "margalef": 126, "match": [427, 494, 546, 602, 647], "match_frequ": [426, 493, 545, 601, 646], "matrix": [218, 229, 707, 1108], "max": 930, "mcintosh_": 128, "mcintosh_d": 127, "mean_and_std": 878, "measur": [106, 147], "menhinick": 129, "merg": [322, 377, 931], "metadata": [234, 235, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 932, 1106], "metadata_to_datafram": 933, "metadatacolumn": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "method": [766, 858, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1108], "metric": [1, 106, 683], "michaelis_menten_fit": 130, "min": 934, "miscellan": 1111, "mismatch": [429, 496, 548, 604, 649], "mismatch_frequ": [428, 495, 547, 603, 648], "monkey_patch": 268, "multi_replac": 698, "multidimension": 858, "multipl": [232, 235], "multiplicative_replac": 699, "multivari": 1108, "name": 236, "neighbor": 1008, "new": 237, "newick": 230, "nj": 1043, "nni": 1044, "node": [230, 236], "non_tip": 1009, "nondegener": [430, 497, 549, 605], "nonzero": 935, "nonzero_count": 936, "norm": 937, "number": 234, "numericmetadatacolumn": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "o": [237, 276], "observed_featur": 131, "observed_node_count": 1010, "observed_otu": 132, "onli": 233, "open": 277, "open_fil": [278, 279], "oper": 1110, "optim": 0, "ordin": [231, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 1108], "ordinationresult": [859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "origin": 227, "osd": 133, "other": 1108, "output": 1105, "pa": 938, "pairalignpath": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "paired_subsampl": 886, "pairwise_vlr": 700, "paramet": [220, 222, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236], "partial_beta_divers": 154, "partit": 939, "pcoa": 879, "pcoa_biplot": 880, "permanova": 762, "permdisp": 763, "permut": 749, "perturb": 701, "perturb_inv": 702, "phydiv": 134, "phylip": 232, "phylogenet": 1110, "pielou_": 135, "plot": [674, 724, 750, 869], "pop": 1011, "postord": 1012, "power": [703, 884, 885, 886, 887, 888], "pre_and_postord": 1013, "preorder": 1014, "product": 224, "protein": [504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556], "proteinembed": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "proteinvector": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "prune": 1015, "pwmantel": 764, "qseq": 233, "qual": 225, "qualiti": 226, "queri": 323, "randdm": 765, "rankdata": 940, "rda": 881, "read": [93, 177, 190, 224, 225, 227, 269, 273, 324, 378, 431, 498, 550, 606, 650, 675, 725, 751, 870, 941, 1016, 1105], "reader": [225, 227, 228, 248], "rearrang": 1110, "reassign_index": 94, "recommend": 234, "reconstruct": 1110, "reduc": 942, "redundant_form": [676, 726, 752], "refer": [106, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 235, 236, 686, 707, 858], "registri": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "remov": 1017, "remove_delet": 1018, "remove_empti": 943, "renam": [677, 727, 753, 871], "renyi": 136, "replac": [432, 499, 551, 607, 651], "representationwarn": 1046, "requir": [234, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103], "reserv": 237, "result": [231, 858], "reverse_compl": [433, 608], "reverse_transcrib": 609, "rich": 106, "rna": [557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615], "robbin": 137, "root": 1019, "root_at": 1020, "root_at_midpoint": 1021, "root_by_outgroup": 1022, "row": 234, "rule": 230, "safe_md5": 1069, "sampl": 1106, "samplemetadata": [363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "save": [295, 342, 360, 379], "sbp_basi": 704, "scale": [858, 882], "scikit": [237, 1104, 1105], "score": 226, "section": [222, 224, 227, 232], "sequenc": [0, 225, 232, 235, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 1107], "sequenceembed": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "sequencevector": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "set_zero_bas": 33, "setter": 1066, "shannon": 138, "shear": 1023, "shuffl": 1024, "sibl": 1025, "simpl": 218, "simpson": 139, "simpson_": 141, "simpson_d": 140, "singl": 142, "skbio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112], "slow": 0, "sniff": [270, 274], "sniffer": 249, "sob": 143, "sort": [95, 325, 944], "sort_ord": 945, "specif": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "specifi": 1, "sq": 224, "squar": 229, "stat": [686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 1108], "statist": [686, 707, 766, 1108], "stockholm": 235, "stop": 552, "string": 227, "stripedsmithwaterman": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "strong": 144, "structur": [0, 707, 1110], "subsampl": [946, 1108], "subsample_count": 889, "subsample_paired_pow": 887, "subsample_pow": 888, "subset": [1026, 1027], "substitutionmatrix": [654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682], "subtre": 1028, "sum": 947, "support": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 1105], "svd_rank": 883, "symbol": 230, "tabl": [890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 1109], "tabularmsa": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 225], "taxdump": 236, "test": 1111, "tip": 1030, "tip_tip_dist": 1029, "to_anndata": 948, "to_arrai": 1031, "to_bit": [17, 49], "to_cigar": 50, "to_coordin": [18, 51], "to_data_fram": [678, 728, 754], "to_datafram": [296, 343, 361, 380, 949], "to_definit": [434, 500, 553, 610], "to_dict": [96, 679], "to_fil": [790, 823, 834], "to_hdf5": 950, "to_indic": [19, 52, 435, 501, 554, 611, 652], "to_json": 951, "to_regex": [436, 502, 555, 612], "to_seri": [297, 344, 362, 755], "to_taxonomi": 1032, "to_tsv": 952, "trail": 234, "trajectorygradientanova": [835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845], "transcrib": 437, "transform": 953, "translat": [438, 451, 613], "translate_six_fram": [439, 452, 614], "transpos": [680, 729, 756, 954], "travers": 1033, "tree": [958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1110], "tree_basi": 705, "treenod": [958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040], "tsalli": 145, "tutori": [0, 1, 1105, 1107, 1110, 1112], "type": [2, 220, 221, 234, 1107], "unpack": 1034, "unpack_by_func": 1035, "unroot": 1036, "unrooted_copi": 1037, "unrooted_deepcopi": 1038, "unrooted_mov": 1039, "unweighted_unifrac": 148, "update_id": 955, "us": [0, 224, 1105], "util": [2, 276, 277, 278, 279, 858, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1107, 1110, 1111], "valid": [1, 234], "variabl": 707, "variant": 226, "vector": [1, 2], "vlr": 706, "warn": [1105, 1111], "weighted_unifrac": 149, "what": 1105, "whitespac": [230, 234], "windowdifferencegradientanova": [846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856], "within": [681, 730, 757], "workflow": [1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1112], "write": [97, 178, 191, 225, 227, 271, 275, 326, 381, 440, 503, 556, 615, 653, 682, 731, 758, 872, 956, 1040, 1105], "writer": [225, 228, 250]}})