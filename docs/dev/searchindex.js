Search.setIndex({"alltitles": {"Adding Node Information": [[188, "adding-node-information"]], "Advanced Label and Length Rules": [[188, "advanced-label-and-length-rules"]], "Alignment Section": [[180, "alignment-section"], [190, "alignment-section"]], "Alignment algorithms": [[0, "alignment-algorithms"]], "Alignment data structure": [[0, "alignment-data-structure"]], "Alignment structure": [[0, "alignment-structure"]], "Alpha diversity": [[1, "alpha-diversity"]], "Alpha diversity measures (skbio.diversity.alpha)": [[106, "alpha-diversity-measures-skbio-diversity-alpha"]], "Application of Rules": [[188, "application-of-rules"]], "BIOM table": [[1057, "biom-table"]], "BIOM-Format (skbio.io.format.biom)": [[177, "biom-format-skbio-io-format-biom"]], "BLAST Column Types": [[178, "blast-column-types"], [179, "blast-column-types"]], "BLAST+6 format (skbio.io.format.blast6)": [[178, "blast-6-format-skbio-io-format-blast6"]], "BLAST+7 format (skbio.io.format.blast7)": [[179, "blast-7-format-skbio-io-format-blast7"]], "Basic Symbols": [[188, "basic-symbols"]], "Beta diversity": [[1, "beta-diversity"]], "Beta diversity measures (skbio.diversity.beta)": [[142, "beta-diversity-measures-skbio-diversity-beta"]], "Biological Embeddings (skbio.embedding)": [[2, "biological-embeddings-skbio-embedding"]], "Biological Sequences (skbio.sequence)": [[1055, "biological-sequences-skbio-sequence"]], "Canonical analysis": [[813, "canonical-analysis"]], "Categorical Variable Stats": [[664, "categorical-variable-stats"]], "Caveats": [[188, "caveats"]], "Classes": [[195, "classes"], [664, "classes"], [723, "classes"], [1060, "classes"]], "Clustal format (skbio.io.format.clustal)": [[180, "clustal-format-skbio-io-format-clustal"]], "Column Types": [[192, "column-types"]], "Comments and Empty Rows": [[192, "comments-and-empty-rows"]], "Community Diversity (skbio.diversity)": [[1, "community-diversity-skbio-diversity"]], "Composition Statistics (skbio.stats.composition)": [[643, "composition-statistics-skbio-stats-composition"]], "Composition statistics": [[1056, "composition-statistics"]], "Continuous Variable Stats": [[664, "continuous-variable-stats"]], "Cophylogenetic methods": [[721, "cophylogenetic-methods"]], "Correspondence analysis": [[813, "correspondence-analysis"]], "Count vectors": [[1, "count-vectors"]], "Creating a new format for scikit-bio": [[195, "creating-a-new-format-for-scikit-bio"]], "Data Table (skbio.table)": [[1057, "data-table-skbio-table"]], "Data structures": [[664, "data-structures"]], "Data subsampling": [[1056, "data-subsampling"]], "Decorators": [[1060, "decorators"]], "Deprecated functionality": [[0, "deprecated-functionality"]], "Develop custom formats": [[1053, "develop-custom-formats"]], "Developer warnings": [[1059, "developer-warnings"]], "Distance Matrix Comparisons": [[664, "distance-matrix-comparisons"]], "Distance calculation": [[1055, "distance-calculation"]], "Distance matrix statistics": [[1056, "distance-matrix-statistics"]], "Distance matrix-based statistics (skbio.stats.distance)": [[664, "distance-matrix-based-statistics-skbio-stats-distance"]], "Distance-based statistics": [[664, "distance-based-statistics"]], "EMBL format (skbio.io.format.embl)": [[182, "embl-format-skbio-io-format-embl"]], "Embedding format (skbio.io.format.embed).": [[181, "embedding-format-skbio-io-format-embed"]], "Embedding types": [[2, "embedding-types"]], "Empirical Power Estimation (skbio.stats.power)": [[838, "empirical-power-estimation-skbio-stats-power"]], "Evolutionary statistics (skbio.stats.evolve)": [[721, "evolutionary-statistics-skbio-stats-evolve"]], "Example data": [[1057, "example-data"]], "Examples": [[177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [193, "examples"], [194, "examples"], [664, "examples"], [723, "examples"], [813, "examples"], [838, "examples"]], "Exceptions": [[195, "exceptions"], [664, "exceptions"], [1058, "exceptions"]], "Exceptions and warnings": [[1053, "exceptions-and-warnings"]], "Explanation": [[188, "explanation"]], "FASTA Format": [[183, "fasta-format"]], "FASTA/QUAL format (skbio.io.format.fasta)": [[183, "fasta-qual-format-skbio-io-format-fasta"]], "FASTQ format (skbio.io.format.fastq)": [[184, "fastq-format-skbio-io-format-fastq"]], "FEATURES section": [[185, "features-section"]], "FT section": [[182, "ft-section"]], "Feature Level Products": [[182, "feature-level-products"]], "Footer": [[193, "footer"]], "Formal Grammar": [[188, "formal-grammar"]], "Format Parameters": [[178, "format-parameters"], [180, "format-parameters"], [183, "format-parameters"], [184, "format-parameters"], [185, "format-parameters"], [186, "format-parameters"], [187, "format-parameters"], [188, "format-parameters"], [190, "format-parameters"], [191, "format-parameters"], [193, "format-parameters"], [194, "format-parameters"]], "Format Specification": [[176, "format-specification"], [177, "format-specification"], [178, "format-specification"], [179, "format-specification"], [180, "format-specification"], [181, "format-specification"], [182, "format-specification"], [183, "format-specification"], [184, "format-specification"], [185, "format-specification"], [186, "format-specification"], [187, "format-specification"], [188, "format-specification"], [189, "format-specification"], [190, "format-specification"], [191, "format-specification"], [192, "format-specification"], [193, "format-specification"], [194, "format-specification"]], "Format Support": [[176, "format-support"], [177, "format-support"], [178, "format-support"], [179, "format-support"], [180, "format-support"], [181, "format-support"], [182, "format-support"], [183, "format-support"], [184, "format-support"], [185, "format-support"], [186, "format-support"], [187, "format-support"], [188, "format-support"], [189, "format-support"], [190, "format-support"], [191, "format-support"], [192, "format-support"], [193, "format-support"], [194, "format-support"]], "Functions": [[106, "functions"], [142, "functions"], [195, "functions"], [234, "functions"], [640, "functions"], [643, "functions"], [664, "functions"], [721, "functions"], [838, "functions"]], "GC metadata": [[193, "gc-metadata"]], "GF metadata": [[193, "gf-metadata"]], "GFF3 format (skbio.io.format.gff3)": [[186, "gff3-format-skbio-io-format-gff3"]], "GR metadata": [[193, "gr-metadata"]], "GS metadata": [[193, "gs-metadata"]], "GenBank format (skbio.io.format.genbank)": [[185, "genbank-format-skbio-io-format-genbank"]], "Generator and TabularMSA Reader Parameters": [[183, "generator-and-tabularmsa-reader-parameters"]], "Generators Only": [[191, "generators-only"]], "Gradient analyses (skbio.stats.gradient)": [[723, "gradient-analyses-skbio-stats-gradient"]], "Header": [[193, "header"]], "Header Section": [[190, "header-section"]], "I/O Registry (skbio.io.registry)": [[195, "i-o-registry-skbio-io-registry"]], "I/O utilities (skbio.io.util)": [[234, "i-o-utilities-skbio-io-util"]], "Identifier Column": [[192, "identifier-column"]], "Inline Comments": [[188, "inline-comments"]], "Input and Output (skbio.io)": [[1053, "input-and-output-skbio-io"]], "Input validation": [[1, "input-validation"]], "Interval metadata": [[1054, "interval-metadata"]], "Introduction": [[1, "introduction"]], "Labeled square matrix format (skbio.io.format.lsmat)": [[187, "labeled-square-matrix-format-skbio-io-format-lsmat"]], "Leading and trailing whitespace characters": [[192, "leading-and-trailing-whitespace-characters"]], "Location string": [[185, "location-string"]], "Metadata": [[193, "metadata"]], "Metadata (skbio.metadata)": [[1054, "metadata-skbio-metadata"]], "Metadata Columns": [[192, "metadata-columns"]], "Metadata Formatting Requirements": [[192, "metadata-formatting-requirements"]], "Metadata Validation": [[192, "metadata-validation"]], "Metadata columns": [[1054, "metadata-columns"]], "Miscellaneous functionality": [[1059, "miscellaneous-functionality"]], "Multidimensional scaling": [[813, "multidimensional-scaling"]], "Multiple Sequence Alignment": [[193, "multiple-sequence-alignment"]], "Multivariate Statistics (skbio.stats)": [[1056, "multivariate-statistics-skbio-stats"]], "Newick format (skbio.io.format.newick)": [[188, "newick-format-skbio-io-format-newick"]], "Number Formatting": [[192, "number-formatting"]], "ORIGIN section": [[185, "origin-section"]], "Ordination methods": [[1056, "ordination-methods"]], "Ordination methods (skbio.stats.ordination)": [[813, "ordination-methods-skbio-stats-ordination"]], "Ordination results": [[813, "ordination-results"]], "Ordination results format (skbio.io.format.ordination)": [[189, "ordination-results-format-skbio-io-format-ordination"]], "Other statistical methods": [[1056, "other-statistical-methods"]], "PHYLIP multiple sequence alignment format (skbio.io.format.phylip)": [[190, "phylip-multiple-sequence-alignment-format-skbio-io-format-phylip"]], "Phylogenetic reconstruction": [[1058, "phylogenetic-reconstruction"]], "QSeq format (skbio.io.format.qseq)": [[191, "qseq-format-skbio-io-format-qseq"]], "QUAL File Parameter (Readers and Writers)": [[183, "qual-file-parameter-readers-and-writers"]], "QUAL Format": [[183, "qual-format"]], "Quality Score Variants": [[184, "quality-score-variants"]], "Read/write files": [[1053, "read-write-files"]], "Reader-specific Parameters": [[183, "reader-specific-parameters"], [185, "reader-specific-parameters"], [186, "reader-specific-parameters"]], "Reading EMBL Files": [[182, "reading-embl-files"]], "Reading EMBL Files using generators": [[182, "reading-embl-files-using-generators"]], "Reading and Writing FASTA Files": [[183, "reading-and-writing-fasta-files"]], "Reading and Writing FASTA/QUAL Files": [[183, "reading-and-writing-fasta-qual-files"]], "Reading and Writing GenBank Files": [[185, "reading-and-writing-genbank-files"]], "Reading files into scikit-bio": [[1053, "reading-files-into-scikit-bio"]], "Recommendations for Identifiers": [[192, "recommendations-for-identifiers"]], "References": [[176, "references"], [177, "references"], [178, "references"], [179, "references"], [180, "references"], [182, "references"], [183, "references"], [184, "references"], [185, "references"], [186, "references"], [188, "references"], [190, "references"], [191, "references"], [193, "references"], [194, "references"], [643, "references"], [664, "references"], [813, "references"]], "Reserved Keyword Arguments": [[195, "reserved-keyword-arguments"]], "SQ section": [[182, "sq-section"]], "Sample metadata": [[1054, "sample-metadata"]], "Sections before FEATURES": [[185, "sections-before-features"]], "Sections before FH (Feature Header)": [[182, "sections-before-fh-feature-header"]], "Sequence Alignments (skbio.alignment)": [[0, "sequence-alignments-skbio-alignment"]], "Sequence Data": [[183, "sequence-data"]], "Sequence Header": [[183, "sequence-header"]], "Sequence Reader Parameters": [[183, "sequence-reader-parameters"]], "Sequence distance metrics (skbio.sequence.distance)": [[640, "sequence-distance-metrics-skbio-sequence-distance"]], "Sequence types": [[1055, "sequence-types"]], "Sequence utilities": [[1055, "sequence-utilities"]], "Simple binary dissimilarity matrix format (skbio.io.format.binary_dm)": [[176, "simple-binary-dissimilarity-matrix-format-skbio-io-format-binary-dm"]], "Specifying a diversity metric": [[1, "specifying-a-diversity-metric"]], "Stockholm format (skbio.io.format.stockholm)": [[193, "stockholm-format-skbio-io-format-stockholm"]], "Supported file formats": [[1053, "supported-file-formats"]], "Taxdump format (skbio.io.format.taxdump)": [[194, "taxdump-format-skbio-io-format-taxdump"]], "Testing functionality": [[1059, "testing-functionality"]], "Tree structure and operations": [[1058, "tree-structure-and-operations"]], "Tree utilities": [[1058, "tree-utilities"]], "Trees and Phylogenetics (skbio.tree)": [[1058, "trees-and-phylogenetics-skbio-tree"]], "Tutorial": [[0, "tutorial"], [1, "tutorial"], [1053, "tutorial"], [1055, "tutorial"], [1058, "tutorial"], [1060, "tutorial"]], "Using the optimized alignment algorithm": [[0, "using-the-optimized-alignment-algorithm"]], "Using the slow alignment algorithm": [[0, "using-the-slow-alignment-algorithm"]], "Utilities for Developers (skbio.util)": [[1059, "utilities-for-developers-skbio-util"]], "Utility functions": [[813, "utility-functions"]], "What kinds of files scikit-bio can use": [[1053, "what-kinds-of-files-scikit-bio-can-use"]], "Whitespace": [[188, "whitespace"]], "Workflow construction (skbio.workflow)": [[1060, "workflow-construction-skbio-workflow"]], "Writer-specific Parameters": [[183, "writer-specific-parameters"], [186, "writer-specific-parameters"]], "Writing files from scikit-bio": [[1053, "writing-files-from-scikit-bio"]], "division.dmp": [[194, "division-dmp"]], "gencode.dmp": [[194, "gencode-dmp"]], "names.dmp": [[194, "names-dmp"]], "nodes.dmp": [[194, "nodes-dmp"]], "scikit-bio 0.6.1-dev documentation": [[1052, "scikit-bio-version-documentation"]], "skbio.alignment.AlignPath": [[3, "skbio-alignment-alignpath"]], "skbio.alignment.AlignPath.__eq__": [[4, "skbio-alignment-alignpath-eq"]], "skbio.alignment.AlignPath.__ge__": [[5, "skbio-alignment-alignpath-ge"]], "skbio.alignment.AlignPath.__getstate__": [[6, "skbio-alignment-alignpath-getstate"]], "skbio.alignment.AlignPath.__gt__": [[7, "skbio-alignment-alignpath-gt"]], "skbio.alignment.AlignPath.__hash__": [[8, "skbio-alignment-alignpath-hash"]], "skbio.alignment.AlignPath.__le__": [[9, "skbio-alignment-alignpath-le"]], "skbio.alignment.AlignPath.__lt__": [[10, "skbio-alignment-alignpath-lt"]], "skbio.alignment.AlignPath.__ne__": [[11, "skbio-alignment-alignpath-ne"]], "skbio.alignment.AlignPath.__str__": [[12, "skbio-alignment-alignpath-str"]], "skbio.alignment.AlignPath.from_bits": [[13, "skbio-alignment-alignpath-from-bits"]], "skbio.alignment.AlignPath.from_coordinates": [[14, "skbio-alignment-alignpath-from-coordinates"]], "skbio.alignment.AlignPath.from_indices": [[15, "skbio-alignment-alignpath-from-indices"]], "skbio.alignment.AlignPath.from_tabular": [[16, "skbio-alignment-alignpath-from-tabular"]], "skbio.alignment.AlignPath.to_bits": [[17, "skbio-alignment-alignpath-to-bits"]], "skbio.alignment.AlignPath.to_coordinates": [[18, "skbio-alignment-alignpath-to-coordinates"]], "skbio.alignment.AlignPath.to_indices": [[19, "skbio-alignment-alignpath-to-indices"]], "skbio.alignment.AlignmentStructure": [[20, "skbio-alignment-alignmentstructure"]], "skbio.alignment.AlignmentStructure.__eq__": [[21, "skbio-alignment-alignmentstructure-eq"]], "skbio.alignment.AlignmentStructure.__ge__": [[22, "skbio-alignment-alignmentstructure-ge"]], "skbio.alignment.AlignmentStructure.__getitem__": [[23, "skbio-alignment-alignmentstructure-getitem"]], "skbio.alignment.AlignmentStructure.__getstate__": [[24, "skbio-alignment-alignmentstructure-getstate"]], "skbio.alignment.AlignmentStructure.__gt__": [[25, "skbio-alignment-alignmentstructure-gt"]], "skbio.alignment.AlignmentStructure.__hash__": [[26, "skbio-alignment-alignmentstructure-hash"]], "skbio.alignment.AlignmentStructure.__le__": [[27, "skbio-alignment-alignmentstructure-le"]], "skbio.alignment.AlignmentStructure.__lt__": [[28, "skbio-alignment-alignmentstructure-lt"]], "skbio.alignment.AlignmentStructure.__ne__": [[29, "skbio-alignment-alignmentstructure-ne"]], "skbio.alignment.AlignmentStructure.__setstate__": [[30, "skbio-alignment-alignmentstructure-setstate"]], "skbio.alignment.AlignmentStructure.__str__": [[31, "skbio-alignment-alignmentstructure-str"]], "skbio.alignment.AlignmentStructure.is_zero_based": [[32, "skbio-alignment-alignmentstructure-is-zero-based"]], "skbio.alignment.AlignmentStructure.set_zero_based": [[33, "skbio-alignment-alignmentstructure-set-zero-based"]], "skbio.alignment.PairAlignPath": [[34, "skbio-alignment-pairalignpath"]], "skbio.alignment.PairAlignPath.__eq__": [[35, "skbio-alignment-pairalignpath-eq"]], "skbio.alignment.PairAlignPath.__ge__": [[36, "skbio-alignment-pairalignpath-ge"]], "skbio.alignment.PairAlignPath.__getstate__": [[37, "skbio-alignment-pairalignpath-getstate"]], "skbio.alignment.PairAlignPath.__gt__": [[38, "skbio-alignment-pairalignpath-gt"]], "skbio.alignment.PairAlignPath.__hash__": [[39, "skbio-alignment-pairalignpath-hash"]], "skbio.alignment.PairAlignPath.__le__": [[40, "skbio-alignment-pairalignpath-le"]], "skbio.alignment.PairAlignPath.__lt__": [[41, "skbio-alignment-pairalignpath-lt"]], "skbio.alignment.PairAlignPath.__ne__": [[42, "skbio-alignment-pairalignpath-ne"]], "skbio.alignment.PairAlignPath.__str__": [[43, "skbio-alignment-pairalignpath-str"]], "skbio.alignment.PairAlignPath.from_bits": [[44, "skbio-alignment-pairalignpath-from-bits"]], "skbio.alignment.PairAlignPath.from_cigar": [[45, "skbio-alignment-pairalignpath-from-cigar"]], "skbio.alignment.PairAlignPath.from_coordinates": [[46, "skbio-alignment-pairalignpath-from-coordinates"]], "skbio.alignment.PairAlignPath.from_indices": [[47, "skbio-alignment-pairalignpath-from-indices"]], "skbio.alignment.PairAlignPath.from_tabular": [[48, "skbio-alignment-pairalignpath-from-tabular"]], "skbio.alignment.PairAlignPath.to_bits": [[49, "skbio-alignment-pairalignpath-to-bits"]], "skbio.alignment.PairAlignPath.to_cigar": [[50, "skbio-alignment-pairalignpath-to-cigar"]], "skbio.alignment.PairAlignPath.to_coordinates": [[51, "skbio-alignment-pairalignpath-to-coordinates"]], "skbio.alignment.PairAlignPath.to_indices": [[52, "skbio-alignment-pairalignpath-to-indices"]], "skbio.alignment.StripedSmithWaterman": [[53, "skbio-alignment-stripedsmithwaterman"]], "skbio.alignment.StripedSmithWaterman.__call__": [[54, "skbio-alignment-stripedsmithwaterman-call"]], "skbio.alignment.StripedSmithWaterman.__eq__": [[55, "skbio-alignment-stripedsmithwaterman-eq"]], "skbio.alignment.StripedSmithWaterman.__ge__": [[56, "skbio-alignment-stripedsmithwaterman-ge"]], "skbio.alignment.StripedSmithWaterman.__getstate__": [[57, "skbio-alignment-stripedsmithwaterman-getstate"]], "skbio.alignment.StripedSmithWaterman.__gt__": [[58, "skbio-alignment-stripedsmithwaterman-gt"]], "skbio.alignment.StripedSmithWaterman.__hash__": [[59, "skbio-alignment-stripedsmithwaterman-hash"]], "skbio.alignment.StripedSmithWaterman.__le__": [[60, "skbio-alignment-stripedsmithwaterman-le"]], "skbio.alignment.StripedSmithWaterman.__lt__": [[61, "skbio-alignment-stripedsmithwaterman-lt"]], "skbio.alignment.StripedSmithWaterman.__ne__": [[62, "skbio-alignment-stripedsmithwaterman-ne"]], "skbio.alignment.StripedSmithWaterman.__setstate__": [[63, "skbio-alignment-stripedsmithwaterman-setstate"]], "skbio.alignment.StripedSmithWaterman.__str__": [[64, "skbio-alignment-stripedsmithwaterman-str"]], "skbio.alignment.TabularMSA": [[65, "skbio-alignment-tabularmsa"]], "skbio.alignment.TabularMSA.__bool__": [[66, "skbio-alignment-tabularmsa-bool"]], "skbio.alignment.TabularMSA.__contains__": [[67, "skbio-alignment-tabularmsa-contains"]], "skbio.alignment.TabularMSA.__copy__": [[68, "skbio-alignment-tabularmsa-copy"]], "skbio.alignment.TabularMSA.__deepcopy__": [[69, "skbio-alignment-tabularmsa-deepcopy"]], "skbio.alignment.TabularMSA.__eq__": [[70, "skbio-alignment-tabularmsa-eq"]], "skbio.alignment.TabularMSA.__ge__": [[71, "skbio-alignment-tabularmsa-ge"]], "skbio.alignment.TabularMSA.__getitem__": [[72, "skbio-alignment-tabularmsa-getitem"]], "skbio.alignment.TabularMSA.__getstate__": [[73, "skbio-alignment-tabularmsa-getstate"]], "skbio.alignment.TabularMSA.__gt__": [[74, "skbio-alignment-tabularmsa-gt"]], "skbio.alignment.TabularMSA.__iter__": [[75, "skbio-alignment-tabularmsa-iter"]], "skbio.alignment.TabularMSA.__le__": [[76, "skbio-alignment-tabularmsa-le"]], "skbio.alignment.TabularMSA.__len__": [[77, "skbio-alignment-tabularmsa-len"]], "skbio.alignment.TabularMSA.__lt__": [[78, "skbio-alignment-tabularmsa-lt"]], "skbio.alignment.TabularMSA.__ne__": [[79, "skbio-alignment-tabularmsa-ne"]], "skbio.alignment.TabularMSA.__reversed__": [[80, "skbio-alignment-tabularmsa-reversed"]], "skbio.alignment.TabularMSA.__str__": [[81, "skbio-alignment-tabularmsa-str"]], "skbio.alignment.TabularMSA.append": [[82, "skbio-alignment-tabularmsa-append"]], "skbio.alignment.TabularMSA.consensus": [[83, "skbio-alignment-tabularmsa-consensus"]], "skbio.alignment.TabularMSA.conservation": [[84, "skbio-alignment-tabularmsa-conservation"]], "skbio.alignment.TabularMSA.extend": [[85, "skbio-alignment-tabularmsa-extend"]], "skbio.alignment.TabularMSA.from_dict": [[86, "skbio-alignment-tabularmsa-from-dict"]], "skbio.alignment.TabularMSA.from_path_seqs": [[87, "skbio-alignment-tabularmsa-from-path-seqs"]], "skbio.alignment.TabularMSA.gap_frequencies": [[88, "skbio-alignment-tabularmsa-gap-frequencies"]], "skbio.alignment.TabularMSA.has_metadata": [[89, "skbio-alignment-tabularmsa-has-metadata"]], "skbio.alignment.TabularMSA.has_positional_metadata": [[90, "skbio-alignment-tabularmsa-has-positional-metadata"]], "skbio.alignment.TabularMSA.iter_positions": [[91, "skbio-alignment-tabularmsa-iter-positions"]], "skbio.alignment.TabularMSA.join": [[92, "skbio-alignment-tabularmsa-join"]], "skbio.alignment.TabularMSA.read": [[93, "skbio-alignment-tabularmsa-read"]], "skbio.alignment.TabularMSA.reassign_index": [[94, "skbio-alignment-tabularmsa-reassign-index"]], "skbio.alignment.TabularMSA.sort": [[95, "skbio-alignment-tabularmsa-sort"]], "skbio.alignment.TabularMSA.to_dict": [[96, "skbio-alignment-tabularmsa-to-dict"]], "skbio.alignment.TabularMSA.write": [[97, "skbio-alignment-tabularmsa-write"]], "skbio.alignment.global_pairwise_align": [[98, "skbio-alignment-global-pairwise-align"]], "skbio.alignment.global_pairwise_align_nucleotide": [[99, "skbio-alignment-global-pairwise-align-nucleotide"]], "skbio.alignment.global_pairwise_align_protein": [[100, "skbio-alignment-global-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align": [[101, "skbio-alignment-local-pairwise-align"]], "skbio.alignment.local_pairwise_align_nucleotide": [[102, "skbio-alignment-local-pairwise-align-nucleotide"]], "skbio.alignment.local_pairwise_align_protein": [[103, "skbio-alignment-local-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align_ssw": [[104, "skbio-alignment-local-pairwise-align-ssw"]], "skbio.alignment.make_identity_substitution_matrix": [[105, "skbio-alignment-make-identity-substitution-matrix"]], "skbio.diversity.alpha.ace": [[107, "skbio-diversity-alpha-ace"]], "skbio.diversity.alpha.berger_parker_d": [[108, "skbio-diversity-alpha-berger-parker-d"]], "skbio.diversity.alpha.brillouin_d": [[109, "skbio-diversity-alpha-brillouin-d"]], "skbio.diversity.alpha.chao1": [[110, "skbio-diversity-alpha-chao1"]], "skbio.diversity.alpha.chao1_ci": [[111, "skbio-diversity-alpha-chao1-ci"]], "skbio.diversity.alpha.dominance": [[112, "skbio-diversity-alpha-dominance"]], "skbio.diversity.alpha.doubles": [[113, "skbio-diversity-alpha-doubles"]], "skbio.diversity.alpha.enspie": [[114, "skbio-diversity-alpha-enspie"]], "skbio.diversity.alpha.esty_ci": [[115, "skbio-diversity-alpha-esty-ci"]], "skbio.diversity.alpha.faith_pd": [[116, "skbio-diversity-alpha-faith-pd"]], "skbio.diversity.alpha.fisher_alpha": [[117, "skbio-diversity-alpha-fisher-alpha"]], "skbio.diversity.alpha.gini_index": [[118, "skbio-diversity-alpha-gini-index"]], "skbio.diversity.alpha.goods_coverage": [[119, "skbio-diversity-alpha-goods-coverage"]], "skbio.diversity.alpha.heip_e": [[120, "skbio-diversity-alpha-heip-e"]], "skbio.diversity.alpha.kempton_taylor_q": [[121, "skbio-diversity-alpha-kempton-taylor-q"]], "skbio.diversity.alpha.lladser_ci": [[122, "skbio-diversity-alpha-lladser-ci"]], "skbio.diversity.alpha.lladser_pe": [[123, "skbio-diversity-alpha-lladser-pe"]], "skbio.diversity.alpha.margalef": [[124, "skbio-diversity-alpha-margalef"]], "skbio.diversity.alpha.mcintosh_d": [[125, "skbio-diversity-alpha-mcintosh-d"]], "skbio.diversity.alpha.mcintosh_e": [[126, "skbio-diversity-alpha-mcintosh-e"]], "skbio.diversity.alpha.menhinick": [[127, "skbio-diversity-alpha-menhinick"]], "skbio.diversity.alpha.michaelis_menten_fit": [[128, "skbio-diversity-alpha-michaelis-menten-fit"]], "skbio.diversity.alpha.observed_features": [[129, "skbio-diversity-alpha-observed-features"]], "skbio.diversity.alpha.observed_otus": [[130, "skbio-diversity-alpha-observed-otus"]], "skbio.diversity.alpha.osd": [[131, "skbio-diversity-alpha-osd"]], "skbio.diversity.alpha.phydiv": [[132, "skbio-diversity-alpha-phydiv"]], "skbio.diversity.alpha.pielou_e": [[133, "skbio-diversity-alpha-pielou-e"]], "skbio.diversity.alpha.robbins": [[134, "skbio-diversity-alpha-robbins"]], "skbio.diversity.alpha.shannon": [[135, "skbio-diversity-alpha-shannon"]], "skbio.diversity.alpha.simpson": [[136, "skbio-diversity-alpha-simpson"]], "skbio.diversity.alpha.simpson_e": [[137, "skbio-diversity-alpha-simpson-e"]], "skbio.diversity.alpha.singles": [[138, "skbio-diversity-alpha-singles"]], "skbio.diversity.alpha.sobs": [[139, "skbio-diversity-alpha-sobs"]], "skbio.diversity.alpha.strong": [[140, "skbio-diversity-alpha-strong"]], "skbio.diversity.alpha_diversity": [[141, "skbio-diversity-alpha-diversity"]], "skbio.diversity.beta.unweighted_unifrac": [[143, "skbio-diversity-beta-unweighted-unifrac"]], "skbio.diversity.beta.weighted_unifrac": [[144, "skbio-diversity-beta-weighted-unifrac"]], "skbio.diversity.beta_diversity": [[145, "skbio-diversity-beta-diversity"]], "skbio.diversity.block_beta_diversity": [[146, "skbio-diversity-block-beta-diversity"]], "skbio.diversity.get_alpha_diversity_metrics": [[147, "skbio-diversity-get-alpha-diversity-metrics"]], "skbio.diversity.get_beta_diversity_metrics": [[148, "skbio-diversity-get-beta-diversity-metrics"]], "skbio.diversity.partial_beta_diversity": [[149, "skbio-diversity-partial-beta-diversity"]], "skbio.embedding.ProteinEmbedding": [[150, "skbio-embedding-proteinembedding"]], "skbio.embedding.ProteinEmbedding.__eq__": [[151, "skbio-embedding-proteinembedding-eq"]], "skbio.embedding.ProteinEmbedding.__ge__": [[152, "skbio-embedding-proteinembedding-ge"]], "skbio.embedding.ProteinEmbedding.__getstate__": [[153, "skbio-embedding-proteinembedding-getstate"]], "skbio.embedding.ProteinEmbedding.__gt__": [[154, "skbio-embedding-proteinembedding-gt"]], "skbio.embedding.ProteinEmbedding.__hash__": [[155, "skbio-embedding-proteinembedding-hash"]], "skbio.embedding.ProteinEmbedding.__le__": [[156, "skbio-embedding-proteinembedding-le"]], "skbio.embedding.ProteinEmbedding.__lt__": [[157, "skbio-embedding-proteinembedding-lt"]], "skbio.embedding.ProteinEmbedding.__ne__": [[158, "skbio-embedding-proteinembedding-ne"]], "skbio.embedding.ProteinEmbedding.__str__": [[159, "skbio-embedding-proteinembedding-str"]], "skbio.embedding.ProteinEmbedding.bytes": [[160, "skbio-embedding-proteinembedding-bytes"]], "skbio.embedding.ProteinEmbedding.read": [[161, "skbio-embedding-proteinembedding-read"]], "skbio.embedding.ProteinEmbedding.write": [[162, "skbio-embedding-proteinembedding-write"]], "skbio.embedding.ProteinVector": [[163, "skbio-embedding-proteinvector"]], "skbio.embedding.ProteinVector.__eq__": [[164, "skbio-embedding-proteinvector-eq"]], "skbio.embedding.ProteinVector.__ge__": [[165, "skbio-embedding-proteinvector-ge"]], "skbio.embedding.ProteinVector.__getstate__": [[166, "skbio-embedding-proteinvector-getstate"]], "skbio.embedding.ProteinVector.__gt__": [[167, "skbio-embedding-proteinvector-gt"]], "skbio.embedding.ProteinVector.__hash__": [[168, "skbio-embedding-proteinvector-hash"]], "skbio.embedding.ProteinVector.__le__": [[169, "skbio-embedding-proteinvector-le"]], "skbio.embedding.ProteinVector.__lt__": [[170, "skbio-embedding-proteinvector-lt"]], "skbio.embedding.ProteinVector.__ne__": [[171, "skbio-embedding-proteinvector-ne"]], "skbio.embedding.ProteinVector.__str__": [[172, "skbio-embedding-proteinvector-str"]], "skbio.embedding.ProteinVector.bytes": [[173, "skbio-embedding-proteinvector-bytes"]], "skbio.embedding.ProteinVector.read": [[174, "skbio-embedding-proteinvector-read"]], "skbio.embedding.ProteinVector.write": [[175, "skbio-embedding-proteinvector-write"]], "skbio.io.registry.Format": [[196, "skbio-io-registry-format"]], "skbio.io.registry.Format.__eq__": [[197, "skbio-io-registry-format-eq"]], "skbio.io.registry.Format.__ge__": [[198, "skbio-io-registry-format-ge"]], "skbio.io.registry.Format.__getstate__": [[199, "skbio-io-registry-format-getstate"]], "skbio.io.registry.Format.__gt__": [[200, "skbio-io-registry-format-gt"]], "skbio.io.registry.Format.__hash__": [[201, "skbio-io-registry-format-hash"]], "skbio.io.registry.Format.__le__": [[202, "skbio-io-registry-format-le"]], "skbio.io.registry.Format.__lt__": [[203, "skbio-io-registry-format-lt"]], "skbio.io.registry.Format.__ne__": [[204, "skbio-io-registry-format-ne"]], "skbio.io.registry.Format.__str__": [[205, "skbio-io-registry-format-str"]], "skbio.io.registry.Format.reader": [[206, "skbio-io-registry-format-reader"]], "skbio.io.registry.Format.sniffer": [[207, "skbio-io-registry-format-sniffer"]], "skbio.io.registry.Format.writer": [[208, "skbio-io-registry-format-writer"]], "skbio.io.registry.IORegistry": [[209, "skbio-io-registry-ioregistry"]], "skbio.io.registry.IORegistry.__eq__": [[210, "skbio-io-registry-ioregistry-eq"]], "skbio.io.registry.IORegistry.__ge__": [[211, "skbio-io-registry-ioregistry-ge"]], "skbio.io.registry.IORegistry.__getstate__": [[212, "skbio-io-registry-ioregistry-getstate"]], "skbio.io.registry.IORegistry.__gt__": [[213, "skbio-io-registry-ioregistry-gt"]], "skbio.io.registry.IORegistry.__hash__": [[214, "skbio-io-registry-ioregistry-hash"]], "skbio.io.registry.IORegistry.__le__": [[215, "skbio-io-registry-ioregistry-le"]], "skbio.io.registry.IORegistry.__lt__": [[216, "skbio-io-registry-ioregistry-lt"]], "skbio.io.registry.IORegistry.__ne__": [[217, "skbio-io-registry-ioregistry-ne"]], "skbio.io.registry.IORegistry.__str__": [[218, "skbio-io-registry-ioregistry-str"]], "skbio.io.registry.IORegistry.add_format": [[219, "skbio-io-registry-ioregistry-add-format"]], "skbio.io.registry.IORegistry.create_format": [[220, "skbio-io-registry-ioregistry-create-format"]], "skbio.io.registry.IORegistry.get_reader": [[221, "skbio-io-registry-ioregistry-get-reader"]], "skbio.io.registry.IORegistry.get_sniffer": [[222, "skbio-io-registry-ioregistry-get-sniffer"]], "skbio.io.registry.IORegistry.get_writer": [[223, "skbio-io-registry-ioregistry-get-writer"]], "skbio.io.registry.IORegistry.list_read_formats": [[224, "skbio-io-registry-ioregistry-list-read-formats"]], "skbio.io.registry.IORegistry.list_write_formats": [[225, "skbio-io-registry-ioregistry-list-write-formats"]], "skbio.io.registry.IORegistry.monkey_patch": [[226, "skbio-io-registry-ioregistry-monkey-patch"]], "skbio.io.registry.IORegistry.read": [[227, "skbio-io-registry-ioregistry-read"]], "skbio.io.registry.IORegistry.sniff": [[228, "skbio-io-registry-ioregistry-sniff"]], "skbio.io.registry.IORegistry.write": [[229, "skbio-io-registry-ioregistry-write"]], "skbio.io.registry.create_format": [[230, "skbio-io-registry-create-format"]], "skbio.io.registry.read": [[231, "skbio-io-registry-read"]], "skbio.io.registry.sniff": [[232, "skbio-io-registry-sniff"]], "skbio.io.registry.write": [[233, "skbio-io-registry-write"]], "skbio.io.util.open": [[235, "skbio-io-util-open"]], "skbio.io.util.open_file": [[236, "skbio-io-util-open-file"]], "skbio.io.util.open_files": [[237, "skbio-io-util-open-files"]], "skbio.metadata.CategoricalMetadataColumn": [[238, "skbio-metadata-categoricalmetadatacolumn"]], "skbio.metadata.CategoricalMetadataColumn.__eq__": [[239, "skbio-metadata-categoricalmetadatacolumn-eq"]], "skbio.metadata.CategoricalMetadataColumn.__ge__": [[240, "skbio-metadata-categoricalmetadatacolumn-ge"]], "skbio.metadata.CategoricalMetadataColumn.__getstate__": [[241, "skbio-metadata-categoricalmetadatacolumn-getstate"]], "skbio.metadata.CategoricalMetadataColumn.__gt__": [[242, "skbio-metadata-categoricalmetadatacolumn-gt"]], "skbio.metadata.CategoricalMetadataColumn.__le__": [[243, "skbio-metadata-categoricalmetadatacolumn-le"]], "skbio.metadata.CategoricalMetadataColumn.__lt__": [[244, "skbio-metadata-categoricalmetadatacolumn-lt"]], "skbio.metadata.CategoricalMetadataColumn.__ne__": [[245, "skbio-metadata-categoricalmetadatacolumn-ne"]], "skbio.metadata.CategoricalMetadataColumn.__str__": [[246, "skbio-metadata-categoricalmetadatacolumn-str"]], "skbio.metadata.CategoricalMetadataColumn.drop_missing_values": [[247, "skbio-metadata-categoricalmetadatacolumn-drop-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.filter_ids": [[248, "skbio-metadata-categoricalmetadatacolumn-filter-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_ids": [[249, "skbio-metadata-categoricalmetadatacolumn-get-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_missing": [[250, "skbio-metadata-categoricalmetadatacolumn-get-missing"]], "skbio.metadata.CategoricalMetadataColumn.get_value": [[251, "skbio-metadata-categoricalmetadatacolumn-get-value"]], "skbio.metadata.CategoricalMetadataColumn.has_missing_values": [[252, "skbio-metadata-categoricalmetadatacolumn-has-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.save": [[253, "skbio-metadata-categoricalmetadatacolumn-save"]], "skbio.metadata.CategoricalMetadataColumn.to_dataframe": [[254, "skbio-metadata-categoricalmetadatacolumn-to-dataframe"]], "skbio.metadata.CategoricalMetadataColumn.to_series": [[255, "skbio-metadata-categoricalmetadatacolumn-to-series"]], "skbio.metadata.Interval": [[256, "skbio-metadata-interval"]], "skbio.metadata.Interval.__eq__": [[257, "skbio-metadata-interval-eq"]], "skbio.metadata.Interval.__ge__": [[258, "skbio-metadata-interval-ge"]], "skbio.metadata.Interval.__getstate__": [[259, "skbio-metadata-interval-getstate"]], "skbio.metadata.Interval.__gt__": [[260, "skbio-metadata-interval-gt"]], "skbio.metadata.Interval.__le__": [[261, "skbio-metadata-interval-le"]], "skbio.metadata.Interval.__lt__": [[262, "skbio-metadata-interval-lt"]], "skbio.metadata.Interval.__ne__": [[263, "skbio-metadata-interval-ne"]], "skbio.metadata.Interval.__str__": [[264, "skbio-metadata-interval-str"]], "skbio.metadata.Interval.drop": [[265, "skbio-metadata-interval-drop"]], "skbio.metadata.IntervalMetadata": [[266, "skbio-metadata-intervalmetadata"]], "skbio.metadata.IntervalMetadata.__copy__": [[267, "skbio-metadata-intervalmetadata-copy"]], "skbio.metadata.IntervalMetadata.__deepcopy__": [[268, "skbio-metadata-intervalmetadata-deepcopy"]], "skbio.metadata.IntervalMetadata.__eq__": [[269, "skbio-metadata-intervalmetadata-eq"]], "skbio.metadata.IntervalMetadata.__ge__": [[270, "skbio-metadata-intervalmetadata-ge"]], "skbio.metadata.IntervalMetadata.__getstate__": [[271, "skbio-metadata-intervalmetadata-getstate"]], "skbio.metadata.IntervalMetadata.__gt__": [[272, "skbio-metadata-intervalmetadata-gt"]], "skbio.metadata.IntervalMetadata.__le__": [[273, "skbio-metadata-intervalmetadata-le"]], "skbio.metadata.IntervalMetadata.__lt__": [[274, "skbio-metadata-intervalmetadata-lt"]], "skbio.metadata.IntervalMetadata.__ne__": [[275, "skbio-metadata-intervalmetadata-ne"]], "skbio.metadata.IntervalMetadata.__str__": [[276, "skbio-metadata-intervalmetadata-str"]], "skbio.metadata.IntervalMetadata.add": [[277, "skbio-metadata-intervalmetadata-add"]], "skbio.metadata.IntervalMetadata.concat": [[278, "skbio-metadata-intervalmetadata-concat"]], "skbio.metadata.IntervalMetadata.drop": [[279, "skbio-metadata-intervalmetadata-drop"]], "skbio.metadata.IntervalMetadata.merge": [[280, "skbio-metadata-intervalmetadata-merge"]], "skbio.metadata.IntervalMetadata.query": [[281, "skbio-metadata-intervalmetadata-query"]], "skbio.metadata.IntervalMetadata.read": [[282, "skbio-metadata-intervalmetadata-read"]], "skbio.metadata.IntervalMetadata.sort": [[283, "skbio-metadata-intervalmetadata-sort"]], "skbio.metadata.IntervalMetadata.write": [[284, "skbio-metadata-intervalmetadata-write"]], "skbio.metadata.MetadataColumn": [[285, "skbio-metadata-metadatacolumn"]], "skbio.metadata.MetadataColumn.__eq__": [[286, "skbio-metadata-metadatacolumn-eq"]], "skbio.metadata.MetadataColumn.__ge__": [[287, "skbio-metadata-metadatacolumn-ge"]], "skbio.metadata.MetadataColumn.__getstate__": [[288, "skbio-metadata-metadatacolumn-getstate"]], "skbio.metadata.MetadataColumn.__gt__": [[289, "skbio-metadata-metadatacolumn-gt"]], "skbio.metadata.MetadataColumn.__le__": [[290, "skbio-metadata-metadatacolumn-le"]], "skbio.metadata.MetadataColumn.__lt__": [[291, "skbio-metadata-metadatacolumn-lt"]], "skbio.metadata.MetadataColumn.__ne__": [[292, "skbio-metadata-metadatacolumn-ne"]], "skbio.metadata.MetadataColumn.__str__": [[293, "skbio-metadata-metadatacolumn-str"]], "skbio.metadata.MetadataColumn.drop_missing_values": [[294, "skbio-metadata-metadatacolumn-drop-missing-values"]], "skbio.metadata.MetadataColumn.filter_ids": [[295, "skbio-metadata-metadatacolumn-filter-ids"]], "skbio.metadata.MetadataColumn.get_ids": [[296, "skbio-metadata-metadatacolumn-get-ids"]], "skbio.metadata.MetadataColumn.get_missing": [[297, "skbio-metadata-metadatacolumn-get-missing"]], "skbio.metadata.MetadataColumn.get_value": [[298, "skbio-metadata-metadatacolumn-get-value"]], "skbio.metadata.MetadataColumn.has_missing_values": [[299, "skbio-metadata-metadatacolumn-has-missing-values"]], "skbio.metadata.MetadataColumn.save": [[300, "skbio-metadata-metadatacolumn-save"]], "skbio.metadata.MetadataColumn.to_dataframe": [[301, "skbio-metadata-metadatacolumn-to-dataframe"]], "skbio.metadata.MetadataColumn.to_series": [[302, "skbio-metadata-metadatacolumn-to-series"]], "skbio.metadata.NumericMetadataColumn": [[303, "skbio-metadata-numericmetadatacolumn"]], "skbio.metadata.NumericMetadataColumn.__eq__": [[304, "skbio-metadata-numericmetadatacolumn-eq"]], "skbio.metadata.NumericMetadataColumn.__ge__": [[305, "skbio-metadata-numericmetadatacolumn-ge"]], "skbio.metadata.NumericMetadataColumn.__getstate__": [[306, "skbio-metadata-numericmetadatacolumn-getstate"]], "skbio.metadata.NumericMetadataColumn.__gt__": [[307, "skbio-metadata-numericmetadatacolumn-gt"]], "skbio.metadata.NumericMetadataColumn.__le__": [[308, "skbio-metadata-numericmetadatacolumn-le"]], "skbio.metadata.NumericMetadataColumn.__lt__": [[309, "skbio-metadata-numericmetadatacolumn-lt"]], "skbio.metadata.NumericMetadataColumn.__ne__": [[310, "skbio-metadata-numericmetadatacolumn-ne"]], "skbio.metadata.NumericMetadataColumn.__str__": [[311, "skbio-metadata-numericmetadatacolumn-str"]], "skbio.metadata.NumericMetadataColumn.drop_missing_values": [[312, "skbio-metadata-numericmetadatacolumn-drop-missing-values"]], "skbio.metadata.NumericMetadataColumn.filter_ids": [[313, "skbio-metadata-numericmetadatacolumn-filter-ids"]], "skbio.metadata.NumericMetadataColumn.get_ids": [[314, "skbio-metadata-numericmetadatacolumn-get-ids"]], "skbio.metadata.NumericMetadataColumn.get_missing": [[315, "skbio-metadata-numericmetadatacolumn-get-missing"]], "skbio.metadata.NumericMetadataColumn.get_value": [[316, "skbio-metadata-numericmetadatacolumn-get-value"]], "skbio.metadata.NumericMetadataColumn.has_missing_values": [[317, "skbio-metadata-numericmetadatacolumn-has-missing-values"]], "skbio.metadata.NumericMetadataColumn.save": [[318, "skbio-metadata-numericmetadatacolumn-save"]], "skbio.metadata.NumericMetadataColumn.to_dataframe": [[319, "skbio-metadata-numericmetadatacolumn-to-dataframe"]], "skbio.metadata.NumericMetadataColumn.to_series": [[320, "skbio-metadata-numericmetadatacolumn-to-series"]], "skbio.metadata.SampleMetadata": [[321, "skbio-metadata-samplemetadata"]], "skbio.metadata.SampleMetadata.__eq__": [[322, "skbio-metadata-samplemetadata-eq"]], "skbio.metadata.SampleMetadata.__ge__": [[323, "skbio-metadata-samplemetadata-ge"]], "skbio.metadata.SampleMetadata.__getstate__": [[324, "skbio-metadata-samplemetadata-getstate"]], "skbio.metadata.SampleMetadata.__gt__": [[325, "skbio-metadata-samplemetadata-gt"]], "skbio.metadata.SampleMetadata.__le__": [[326, "skbio-metadata-samplemetadata-le"]], "skbio.metadata.SampleMetadata.__lt__": [[327, "skbio-metadata-samplemetadata-lt"]], "skbio.metadata.SampleMetadata.__ne__": [[328, "skbio-metadata-samplemetadata-ne"]], "skbio.metadata.SampleMetadata.__str__": [[329, "skbio-metadata-samplemetadata-str"]], "skbio.metadata.SampleMetadata.filter_columns": [[330, "skbio-metadata-samplemetadata-filter-columns"]], "skbio.metadata.SampleMetadata.filter_ids": [[331, "skbio-metadata-samplemetadata-filter-ids"]], "skbio.metadata.SampleMetadata.get_column": [[332, "skbio-metadata-samplemetadata-get-column"]], "skbio.metadata.SampleMetadata.get_ids": [[333, "skbio-metadata-samplemetadata-get-ids"]], "skbio.metadata.SampleMetadata.load": [[334, "skbio-metadata-samplemetadata-load"]], "skbio.metadata.SampleMetadata.merge": [[335, "skbio-metadata-samplemetadata-merge"]], "skbio.metadata.SampleMetadata.read": [[336, "skbio-metadata-samplemetadata-read"]], "skbio.metadata.SampleMetadata.save": [[337, "skbio-metadata-samplemetadata-save"]], "skbio.metadata.SampleMetadata.to_dataframe": [[338, "skbio-metadata-samplemetadata-to-dataframe"]], "skbio.metadata.SampleMetadata.write": [[339, "skbio-metadata-samplemetadata-write"]], "skbio.sequence.DNA": [[340, "skbio-sequence-dna"]], "skbio.sequence.DNA.__bool__": [[341, "skbio-sequence-dna-bool"]], "skbio.sequence.DNA.__contains__": [[342, "skbio-sequence-dna-contains"]], "skbio.sequence.DNA.__copy__": [[343, "skbio-sequence-dna-copy"]], "skbio.sequence.DNA.__deepcopy__": [[344, "skbio-sequence-dna-deepcopy"]], "skbio.sequence.DNA.__eq__": [[345, "skbio-sequence-dna-eq"]], "skbio.sequence.DNA.__ge__": [[346, "skbio-sequence-dna-ge"]], "skbio.sequence.DNA.__getitem__": [[347, "skbio-sequence-dna-getitem"]], "skbio.sequence.DNA.__getstate__": [[348, "skbio-sequence-dna-getstate"]], "skbio.sequence.DNA.__gt__": [[349, "skbio-sequence-dna-gt"]], "skbio.sequence.DNA.__iter__": [[350, "skbio-sequence-dna-iter"]], "skbio.sequence.DNA.__le__": [[351, "skbio-sequence-dna-le"]], "skbio.sequence.DNA.__len__": [[352, "skbio-sequence-dna-len"]], "skbio.sequence.DNA.__lt__": [[353, "skbio-sequence-dna-lt"]], "skbio.sequence.DNA.__ne__": [[354, "skbio-sequence-dna-ne"]], "skbio.sequence.DNA.__reversed__": [[355, "skbio-sequence-dna-reversed"]], "skbio.sequence.DNA.__str__": [[356, "skbio-sequence-dna-str"]], "skbio.sequence.DNA.complement": [[357, "skbio-sequence-dna-complement"]], "skbio.sequence.DNA.concat": [[358, "skbio-sequence-dna-concat"]], "skbio.sequence.DNA.count": [[359, "skbio-sequence-dna-count"]], "skbio.sequence.DNA.definites": [[360, "skbio-sequence-dna-definites"]], "skbio.sequence.DNA.degap": [[361, "skbio-sequence-dna-degap"]], "skbio.sequence.DNA.degenerates": [[362, "skbio-sequence-dna-degenerates"]], "skbio.sequence.DNA.distance": [[363, "skbio-sequence-dna-distance"]], "skbio.sequence.DNA.expand_degenerates": [[364, "skbio-sequence-dna-expand-degenerates"]], "skbio.sequence.DNA.find_motifs": [[365, "skbio-sequence-dna-find-motifs"]], "skbio.sequence.DNA.find_with_regex": [[366, "skbio-sequence-dna-find-with-regex"]], "skbio.sequence.DNA.frequencies": [[367, "skbio-sequence-dna-frequencies"]], "skbio.sequence.DNA.gaps": [[368, "skbio-sequence-dna-gaps"]], "skbio.sequence.DNA.gc_content": [[369, "skbio-sequence-dna-gc-content"]], "skbio.sequence.DNA.gc_frequency": [[370, "skbio-sequence-dna-gc-frequency"]], "skbio.sequence.DNA.has_definites": [[371, "skbio-sequence-dna-has-definites"]], "skbio.sequence.DNA.has_degenerates": [[372, "skbio-sequence-dna-has-degenerates"]], "skbio.sequence.DNA.has_gaps": [[373, "skbio-sequence-dna-has-gaps"]], "skbio.sequence.DNA.has_interval_metadata": [[374, "skbio-sequence-dna-has-interval-metadata"]], "skbio.sequence.DNA.has_metadata": [[375, "skbio-sequence-dna-has-metadata"]], "skbio.sequence.DNA.has_nondegenerates": [[376, "skbio-sequence-dna-has-nondegenerates"]], "skbio.sequence.DNA.has_positional_metadata": [[377, "skbio-sequence-dna-has-positional-metadata"]], "skbio.sequence.DNA.index": [[378, "skbio-sequence-dna-index"]], "skbio.sequence.DNA.is_reverse_complement": [[379, "skbio-sequence-dna-is-reverse-complement"]], "skbio.sequence.DNA.iter_contiguous": [[380, "skbio-sequence-dna-iter-contiguous"]], "skbio.sequence.DNA.iter_kmers": [[381, "skbio-sequence-dna-iter-kmers"]], "skbio.sequence.DNA.kmer_frequencies": [[382, "skbio-sequence-dna-kmer-frequencies"]], "skbio.sequence.DNA.lowercase": [[383, "skbio-sequence-dna-lowercase"]], "skbio.sequence.DNA.match_frequency": [[384, "skbio-sequence-dna-match-frequency"]], "skbio.sequence.DNA.matches": [[385, "skbio-sequence-dna-matches"]], "skbio.sequence.DNA.mismatch_frequency": [[386, "skbio-sequence-dna-mismatch-frequency"]], "skbio.sequence.DNA.mismatches": [[387, "skbio-sequence-dna-mismatches"]], "skbio.sequence.DNA.nondegenerates": [[388, "skbio-sequence-dna-nondegenerates"]], "skbio.sequence.DNA.read": [[389, "skbio-sequence-dna-read"]], "skbio.sequence.DNA.replace": [[390, "skbio-sequence-dna-replace"]], "skbio.sequence.DNA.reverse_complement": [[391, "skbio-sequence-dna-reverse-complement"]], "skbio.sequence.DNA.to_definites": [[392, "skbio-sequence-dna-to-definites"]], "skbio.sequence.DNA.to_indices": [[393, "skbio-sequence-dna-to-indices"]], "skbio.sequence.DNA.to_regex": [[394, "skbio-sequence-dna-to-regex"]], "skbio.sequence.DNA.transcribe": [[395, "skbio-sequence-dna-transcribe"]], "skbio.sequence.DNA.translate": [[396, "skbio-sequence-dna-translate"]], "skbio.sequence.DNA.translate_six_frames": [[397, "skbio-sequence-dna-translate-six-frames"]], "skbio.sequence.DNA.write": [[398, "skbio-sequence-dna-write"]], "skbio.sequence.GeneticCode": [[399, "skbio-sequence-geneticcode"]], "skbio.sequence.GeneticCode.__eq__": [[400, "skbio-sequence-geneticcode-eq"]], "skbio.sequence.GeneticCode.__ge__": [[401, "skbio-sequence-geneticcode-ge"]], "skbio.sequence.GeneticCode.__getstate__": [[402, "skbio-sequence-geneticcode-getstate"]], "skbio.sequence.GeneticCode.__gt__": [[403, "skbio-sequence-geneticcode-gt"]], "skbio.sequence.GeneticCode.__le__": [[404, "skbio-sequence-geneticcode-le"]], "skbio.sequence.GeneticCode.__lt__": [[405, "skbio-sequence-geneticcode-lt"]], "skbio.sequence.GeneticCode.__ne__": [[406, "skbio-sequence-geneticcode-ne"]], "skbio.sequence.GeneticCode.__str__": [[407, "skbio-sequence-geneticcode-str"]], "skbio.sequence.GeneticCode.from_ncbi": [[408, "skbio-sequence-geneticcode-from-ncbi"]], "skbio.sequence.GeneticCode.translate": [[409, "skbio-sequence-geneticcode-translate"]], "skbio.sequence.GeneticCode.translate_six_frames": [[410, "skbio-sequence-geneticcode-translate-six-frames"]], "skbio.sequence.GrammaredSequence": [[411, "skbio-sequence-grammaredsequence"]], "skbio.sequence.GrammaredSequence.__bool__": [[412, "skbio-sequence-grammaredsequence-bool"]], "skbio.sequence.GrammaredSequence.__contains__": [[413, "skbio-sequence-grammaredsequence-contains"]], "skbio.sequence.GrammaredSequence.__copy__": [[414, "skbio-sequence-grammaredsequence-copy"]], "skbio.sequence.GrammaredSequence.__deepcopy__": [[415, "skbio-sequence-grammaredsequence-deepcopy"]], "skbio.sequence.GrammaredSequence.__eq__": [[416, "skbio-sequence-grammaredsequence-eq"]], "skbio.sequence.GrammaredSequence.__ge__": [[417, "skbio-sequence-grammaredsequence-ge"]], "skbio.sequence.GrammaredSequence.__getitem__": [[418, "skbio-sequence-grammaredsequence-getitem"]], "skbio.sequence.GrammaredSequence.__getstate__": [[419, "skbio-sequence-grammaredsequence-getstate"]], "skbio.sequence.GrammaredSequence.__gt__": [[420, "skbio-sequence-grammaredsequence-gt"]], "skbio.sequence.GrammaredSequence.__iter__": [[421, "skbio-sequence-grammaredsequence-iter"]], "skbio.sequence.GrammaredSequence.__le__": [[422, "skbio-sequence-grammaredsequence-le"]], "skbio.sequence.GrammaredSequence.__len__": [[423, "skbio-sequence-grammaredsequence-len"]], "skbio.sequence.GrammaredSequence.__lt__": [[424, "skbio-sequence-grammaredsequence-lt"]], "skbio.sequence.GrammaredSequence.__ne__": [[425, "skbio-sequence-grammaredsequence-ne"]], "skbio.sequence.GrammaredSequence.__reversed__": [[426, "skbio-sequence-grammaredsequence-reversed"]], "skbio.sequence.GrammaredSequence.__str__": [[427, "skbio-sequence-grammaredsequence-str"]], "skbio.sequence.GrammaredSequence.concat": [[428, "skbio-sequence-grammaredsequence-concat"]], "skbio.sequence.GrammaredSequence.count": [[429, "skbio-sequence-grammaredsequence-count"]], "skbio.sequence.GrammaredSequence.definites": [[430, "skbio-sequence-grammaredsequence-definites"]], "skbio.sequence.GrammaredSequence.degap": [[431, "skbio-sequence-grammaredsequence-degap"]], "skbio.sequence.GrammaredSequence.degenerates": [[432, "skbio-sequence-grammaredsequence-degenerates"]], "skbio.sequence.GrammaredSequence.distance": [[433, "skbio-sequence-grammaredsequence-distance"]], "skbio.sequence.GrammaredSequence.expand_degenerates": [[434, "skbio-sequence-grammaredsequence-expand-degenerates"]], "skbio.sequence.GrammaredSequence.find_motifs": [[435, "skbio-sequence-grammaredsequence-find-motifs"]], "skbio.sequence.GrammaredSequence.find_with_regex": [[436, "skbio-sequence-grammaredsequence-find-with-regex"]], "skbio.sequence.GrammaredSequence.frequencies": [[437, "skbio-sequence-grammaredsequence-frequencies"]], "skbio.sequence.GrammaredSequence.gaps": [[438, "skbio-sequence-grammaredsequence-gaps"]], "skbio.sequence.GrammaredSequence.has_definites": [[439, "skbio-sequence-grammaredsequence-has-definites"]], "skbio.sequence.GrammaredSequence.has_degenerates": [[440, "skbio-sequence-grammaredsequence-has-degenerates"]], "skbio.sequence.GrammaredSequence.has_gaps": [[441, "skbio-sequence-grammaredsequence-has-gaps"]], "skbio.sequence.GrammaredSequence.has_interval_metadata": [[442, "skbio-sequence-grammaredsequence-has-interval-metadata"]], "skbio.sequence.GrammaredSequence.has_metadata": [[443, "skbio-sequence-grammaredsequence-has-metadata"]], "skbio.sequence.GrammaredSequence.has_nondegenerates": [[444, "skbio-sequence-grammaredsequence-has-nondegenerates"]], "skbio.sequence.GrammaredSequence.has_positional_metadata": [[445, "skbio-sequence-grammaredsequence-has-positional-metadata"]], "skbio.sequence.GrammaredSequence.index": [[446, "skbio-sequence-grammaredsequence-index"]], "skbio.sequence.GrammaredSequence.iter_contiguous": [[447, "skbio-sequence-grammaredsequence-iter-contiguous"]], "skbio.sequence.GrammaredSequence.iter_kmers": [[448, "skbio-sequence-grammaredsequence-iter-kmers"]], "skbio.sequence.GrammaredSequence.kmer_frequencies": [[449, "skbio-sequence-grammaredsequence-kmer-frequencies"]], "skbio.sequence.GrammaredSequence.lowercase": [[450, "skbio-sequence-grammaredsequence-lowercase"]], "skbio.sequence.GrammaredSequence.match_frequency": [[451, "skbio-sequence-grammaredsequence-match-frequency"]], "skbio.sequence.GrammaredSequence.matches": [[452, "skbio-sequence-grammaredsequence-matches"]], "skbio.sequence.GrammaredSequence.mismatch_frequency": [[453, "skbio-sequence-grammaredsequence-mismatch-frequency"]], "skbio.sequence.GrammaredSequence.mismatches": [[454, "skbio-sequence-grammaredsequence-mismatches"]], "skbio.sequence.GrammaredSequence.nondegenerates": [[455, "skbio-sequence-grammaredsequence-nondegenerates"]], "skbio.sequence.GrammaredSequence.read": [[456, "skbio-sequence-grammaredsequence-read"]], "skbio.sequence.GrammaredSequence.replace": [[457, "skbio-sequence-grammaredsequence-replace"]], "skbio.sequence.GrammaredSequence.to_definites": [[458, "skbio-sequence-grammaredsequence-to-definites"]], "skbio.sequence.GrammaredSequence.to_indices": [[459, "skbio-sequence-grammaredsequence-to-indices"]], "skbio.sequence.GrammaredSequence.to_regex": [[460, "skbio-sequence-grammaredsequence-to-regex"]], "skbio.sequence.GrammaredSequence.write": [[461, "skbio-sequence-grammaredsequence-write"]], "skbio.sequence.Protein": [[462, "skbio-sequence-protein"]], "skbio.sequence.Protein.__bool__": [[463, "skbio-sequence-protein-bool"]], "skbio.sequence.Protein.__contains__": [[464, "skbio-sequence-protein-contains"]], "skbio.sequence.Protein.__copy__": [[465, "skbio-sequence-protein-copy"]], "skbio.sequence.Protein.__deepcopy__": [[466, "skbio-sequence-protein-deepcopy"]], "skbio.sequence.Protein.__eq__": [[467, "skbio-sequence-protein-eq"]], "skbio.sequence.Protein.__ge__": [[468, "skbio-sequence-protein-ge"]], "skbio.sequence.Protein.__getitem__": [[469, "skbio-sequence-protein-getitem"]], "skbio.sequence.Protein.__getstate__": [[470, "skbio-sequence-protein-getstate"]], "skbio.sequence.Protein.__gt__": [[471, "skbio-sequence-protein-gt"]], "skbio.sequence.Protein.__iter__": [[472, "skbio-sequence-protein-iter"]], "skbio.sequence.Protein.__le__": [[473, "skbio-sequence-protein-le"]], "skbio.sequence.Protein.__len__": [[474, "skbio-sequence-protein-len"]], "skbio.sequence.Protein.__lt__": [[475, "skbio-sequence-protein-lt"]], "skbio.sequence.Protein.__ne__": [[476, "skbio-sequence-protein-ne"]], "skbio.sequence.Protein.__reversed__": [[477, "skbio-sequence-protein-reversed"]], "skbio.sequence.Protein.__str__": [[478, "skbio-sequence-protein-str"]], "skbio.sequence.Protein.concat": [[479, "skbio-sequence-protein-concat"]], "skbio.sequence.Protein.count": [[480, "skbio-sequence-protein-count"]], "skbio.sequence.Protein.definites": [[481, "skbio-sequence-protein-definites"]], "skbio.sequence.Protein.degap": [[482, "skbio-sequence-protein-degap"]], "skbio.sequence.Protein.degenerates": [[483, "skbio-sequence-protein-degenerates"]], "skbio.sequence.Protein.distance": [[484, "skbio-sequence-protein-distance"]], "skbio.sequence.Protein.expand_degenerates": [[485, "skbio-sequence-protein-expand-degenerates"]], "skbio.sequence.Protein.find_motifs": [[486, "skbio-sequence-protein-find-motifs"]], "skbio.sequence.Protein.find_with_regex": [[487, "skbio-sequence-protein-find-with-regex"]], "skbio.sequence.Protein.frequencies": [[488, "skbio-sequence-protein-frequencies"]], "skbio.sequence.Protein.gaps": [[489, "skbio-sequence-protein-gaps"]], "skbio.sequence.Protein.has_definites": [[490, "skbio-sequence-protein-has-definites"]], "skbio.sequence.Protein.has_degenerates": [[491, "skbio-sequence-protein-has-degenerates"]], "skbio.sequence.Protein.has_gaps": [[492, "skbio-sequence-protein-has-gaps"]], "skbio.sequence.Protein.has_interval_metadata": [[493, "skbio-sequence-protein-has-interval-metadata"]], "skbio.sequence.Protein.has_metadata": [[494, "skbio-sequence-protein-has-metadata"]], "skbio.sequence.Protein.has_nondegenerates": [[495, "skbio-sequence-protein-has-nondegenerates"]], "skbio.sequence.Protein.has_positional_metadata": [[496, "skbio-sequence-protein-has-positional-metadata"]], "skbio.sequence.Protein.has_stops": [[497, "skbio-sequence-protein-has-stops"]], "skbio.sequence.Protein.index": [[498, "skbio-sequence-protein-index"]], "skbio.sequence.Protein.iter_contiguous": [[499, "skbio-sequence-protein-iter-contiguous"]], "skbio.sequence.Protein.iter_kmers": [[500, "skbio-sequence-protein-iter-kmers"]], "skbio.sequence.Protein.kmer_frequencies": [[501, "skbio-sequence-protein-kmer-frequencies"]], "skbio.sequence.Protein.lowercase": [[502, "skbio-sequence-protein-lowercase"]], "skbio.sequence.Protein.match_frequency": [[503, "skbio-sequence-protein-match-frequency"]], "skbio.sequence.Protein.matches": [[504, "skbio-sequence-protein-matches"]], "skbio.sequence.Protein.mismatch_frequency": [[505, "skbio-sequence-protein-mismatch-frequency"]], "skbio.sequence.Protein.mismatches": [[506, "skbio-sequence-protein-mismatches"]], "skbio.sequence.Protein.nondegenerates": [[507, "skbio-sequence-protein-nondegenerates"]], "skbio.sequence.Protein.read": [[508, "skbio-sequence-protein-read"]], "skbio.sequence.Protein.replace": [[509, "skbio-sequence-protein-replace"]], "skbio.sequence.Protein.stops": [[510, "skbio-sequence-protein-stops"]], "skbio.sequence.Protein.to_definites": [[511, "skbio-sequence-protein-to-definites"]], "skbio.sequence.Protein.to_indices": [[512, "skbio-sequence-protein-to-indices"]], "skbio.sequence.Protein.to_regex": [[513, "skbio-sequence-protein-to-regex"]], "skbio.sequence.Protein.write": [[514, "skbio-sequence-protein-write"]], "skbio.sequence.RNA": [[515, "skbio-sequence-rna"]], "skbio.sequence.RNA.__bool__": [[516, "skbio-sequence-rna-bool"]], "skbio.sequence.RNA.__contains__": [[517, "skbio-sequence-rna-contains"]], "skbio.sequence.RNA.__copy__": [[518, "skbio-sequence-rna-copy"]], "skbio.sequence.RNA.__deepcopy__": [[519, "skbio-sequence-rna-deepcopy"]], "skbio.sequence.RNA.__eq__": [[520, "skbio-sequence-rna-eq"]], "skbio.sequence.RNA.__ge__": [[521, "skbio-sequence-rna-ge"]], "skbio.sequence.RNA.__getitem__": [[522, "skbio-sequence-rna-getitem"]], "skbio.sequence.RNA.__getstate__": [[523, "skbio-sequence-rna-getstate"]], "skbio.sequence.RNA.__gt__": [[524, "skbio-sequence-rna-gt"]], "skbio.sequence.RNA.__iter__": [[525, "skbio-sequence-rna-iter"]], "skbio.sequence.RNA.__le__": [[526, "skbio-sequence-rna-le"]], "skbio.sequence.RNA.__len__": [[527, "skbio-sequence-rna-len"]], "skbio.sequence.RNA.__lt__": [[528, "skbio-sequence-rna-lt"]], "skbio.sequence.RNA.__ne__": [[529, "skbio-sequence-rna-ne"]], "skbio.sequence.RNA.__reversed__": [[530, "skbio-sequence-rna-reversed"]], "skbio.sequence.RNA.__str__": [[531, "skbio-sequence-rna-str"]], "skbio.sequence.RNA.complement": [[532, "skbio-sequence-rna-complement"]], "skbio.sequence.RNA.concat": [[533, "skbio-sequence-rna-concat"]], "skbio.sequence.RNA.count": [[534, "skbio-sequence-rna-count"]], "skbio.sequence.RNA.definites": [[535, "skbio-sequence-rna-definites"]], "skbio.sequence.RNA.degap": [[536, "skbio-sequence-rna-degap"]], "skbio.sequence.RNA.degenerates": [[537, "skbio-sequence-rna-degenerates"]], "skbio.sequence.RNA.distance": [[538, "skbio-sequence-rna-distance"]], "skbio.sequence.RNA.expand_degenerates": [[539, "skbio-sequence-rna-expand-degenerates"]], "skbio.sequence.RNA.find_motifs": [[540, "skbio-sequence-rna-find-motifs"]], "skbio.sequence.RNA.find_with_regex": [[541, "skbio-sequence-rna-find-with-regex"]], "skbio.sequence.RNA.frequencies": [[542, "skbio-sequence-rna-frequencies"]], "skbio.sequence.RNA.gaps": [[543, "skbio-sequence-rna-gaps"]], "skbio.sequence.RNA.gc_content": [[544, "skbio-sequence-rna-gc-content"]], "skbio.sequence.RNA.gc_frequency": [[545, "skbio-sequence-rna-gc-frequency"]], "skbio.sequence.RNA.has_definites": [[546, "skbio-sequence-rna-has-definites"]], "skbio.sequence.RNA.has_degenerates": [[547, "skbio-sequence-rna-has-degenerates"]], "skbio.sequence.RNA.has_gaps": [[548, "skbio-sequence-rna-has-gaps"]], "skbio.sequence.RNA.has_interval_metadata": [[549, "skbio-sequence-rna-has-interval-metadata"]], "skbio.sequence.RNA.has_metadata": [[550, "skbio-sequence-rna-has-metadata"]], "skbio.sequence.RNA.has_nondegenerates": [[551, "skbio-sequence-rna-has-nondegenerates"]], "skbio.sequence.RNA.has_positional_metadata": [[552, "skbio-sequence-rna-has-positional-metadata"]], "skbio.sequence.RNA.index": [[553, "skbio-sequence-rna-index"]], "skbio.sequence.RNA.is_reverse_complement": [[554, "skbio-sequence-rna-is-reverse-complement"]], "skbio.sequence.RNA.iter_contiguous": [[555, "skbio-sequence-rna-iter-contiguous"]], "skbio.sequence.RNA.iter_kmers": [[556, "skbio-sequence-rna-iter-kmers"]], "skbio.sequence.RNA.kmer_frequencies": [[557, "skbio-sequence-rna-kmer-frequencies"]], "skbio.sequence.RNA.lowercase": [[558, "skbio-sequence-rna-lowercase"]], "skbio.sequence.RNA.match_frequency": [[559, "skbio-sequence-rna-match-frequency"]], "skbio.sequence.RNA.matches": [[560, "skbio-sequence-rna-matches"]], "skbio.sequence.RNA.mismatch_frequency": [[561, "skbio-sequence-rna-mismatch-frequency"]], "skbio.sequence.RNA.mismatches": [[562, "skbio-sequence-rna-mismatches"]], "skbio.sequence.RNA.nondegenerates": [[563, "skbio-sequence-rna-nondegenerates"]], "skbio.sequence.RNA.read": [[564, "skbio-sequence-rna-read"]], "skbio.sequence.RNA.replace": [[565, "skbio-sequence-rna-replace"]], "skbio.sequence.RNA.reverse_complement": [[566, "skbio-sequence-rna-reverse-complement"]], "skbio.sequence.RNA.reverse_transcribe": [[567, "skbio-sequence-rna-reverse-transcribe"]], "skbio.sequence.RNA.to_definites": [[568, "skbio-sequence-rna-to-definites"]], "skbio.sequence.RNA.to_indices": [[569, "skbio-sequence-rna-to-indices"]], "skbio.sequence.RNA.to_regex": [[570, "skbio-sequence-rna-to-regex"]], "skbio.sequence.RNA.translate": [[571, "skbio-sequence-rna-translate"]], "skbio.sequence.RNA.translate_six_frames": [[572, "skbio-sequence-rna-translate-six-frames"]], "skbio.sequence.RNA.write": [[573, "skbio-sequence-rna-write"]], "skbio.sequence.Sequence": [[574, "skbio-sequence-sequence"]], "skbio.sequence.Sequence.__bool__": [[575, "skbio-sequence-sequence-bool"]], "skbio.sequence.Sequence.__contains__": [[576, "skbio-sequence-sequence-contains"]], "skbio.sequence.Sequence.__copy__": [[577, "skbio-sequence-sequence-copy"]], "skbio.sequence.Sequence.__deepcopy__": [[578, "skbio-sequence-sequence-deepcopy"]], "skbio.sequence.Sequence.__eq__": [[579, "skbio-sequence-sequence-eq"]], "skbio.sequence.Sequence.__ge__": [[580, "skbio-sequence-sequence-ge"]], "skbio.sequence.Sequence.__getitem__": [[581, "skbio-sequence-sequence-getitem"]], "skbio.sequence.Sequence.__getstate__": [[582, "skbio-sequence-sequence-getstate"]], "skbio.sequence.Sequence.__gt__": [[583, "skbio-sequence-sequence-gt"]], "skbio.sequence.Sequence.__iter__": [[584, "skbio-sequence-sequence-iter"]], "skbio.sequence.Sequence.__le__": [[585, "skbio-sequence-sequence-le"]], "skbio.sequence.Sequence.__len__": [[586, "skbio-sequence-sequence-len"]], "skbio.sequence.Sequence.__lt__": [[587, "skbio-sequence-sequence-lt"]], "skbio.sequence.Sequence.__ne__": [[588, "skbio-sequence-sequence-ne"]], "skbio.sequence.Sequence.__reversed__": [[589, "skbio-sequence-sequence-reversed"]], "skbio.sequence.Sequence.__str__": [[590, "skbio-sequence-sequence-str"]], "skbio.sequence.Sequence.concat": [[591, "skbio-sequence-sequence-concat"]], "skbio.sequence.Sequence.count": [[592, "skbio-sequence-sequence-count"]], "skbio.sequence.Sequence.distance": [[593, "skbio-sequence-sequence-distance"]], "skbio.sequence.Sequence.find_with_regex": [[594, "skbio-sequence-sequence-find-with-regex"]], "skbio.sequence.Sequence.frequencies": [[595, "skbio-sequence-sequence-frequencies"]], "skbio.sequence.Sequence.has_interval_metadata": [[596, "skbio-sequence-sequence-has-interval-metadata"]], "skbio.sequence.Sequence.has_metadata": [[597, "skbio-sequence-sequence-has-metadata"]], "skbio.sequence.Sequence.has_positional_metadata": [[598, "skbio-sequence-sequence-has-positional-metadata"]], "skbio.sequence.Sequence.index": [[599, "skbio-sequence-sequence-index"]], "skbio.sequence.Sequence.iter_contiguous": [[600, "skbio-sequence-sequence-iter-contiguous"]], "skbio.sequence.Sequence.iter_kmers": [[601, "skbio-sequence-sequence-iter-kmers"]], "skbio.sequence.Sequence.kmer_frequencies": [[602, "skbio-sequence-sequence-kmer-frequencies"]], "skbio.sequence.Sequence.lowercase": [[603, "skbio-sequence-sequence-lowercase"]], "skbio.sequence.Sequence.match_frequency": [[604, "skbio-sequence-sequence-match-frequency"]], "skbio.sequence.Sequence.matches": [[605, "skbio-sequence-sequence-matches"]], "skbio.sequence.Sequence.mismatch_frequency": [[606, "skbio-sequence-sequence-mismatch-frequency"]], "skbio.sequence.Sequence.mismatches": [[607, "skbio-sequence-sequence-mismatches"]], "skbio.sequence.Sequence.read": [[608, "skbio-sequence-sequence-read"]], "skbio.sequence.Sequence.replace": [[609, "skbio-sequence-sequence-replace"]], "skbio.sequence.Sequence.to_indices": [[610, "skbio-sequence-sequence-to-indices"]], "skbio.sequence.Sequence.write": [[611, "skbio-sequence-sequence-write"]], "skbio.sequence.SubstitutionMatrix": [[612, "skbio-sequence-substitutionmatrix"]], "skbio.sequence.SubstitutionMatrix.__contains__": [[613, "skbio-sequence-substitutionmatrix-contains"]], "skbio.sequence.SubstitutionMatrix.__eq__": [[614, "skbio-sequence-substitutionmatrix-eq"]], "skbio.sequence.SubstitutionMatrix.__ge__": [[615, "skbio-sequence-substitutionmatrix-ge"]], "skbio.sequence.SubstitutionMatrix.__getitem__": [[616, "skbio-sequence-substitutionmatrix-getitem"]], "skbio.sequence.SubstitutionMatrix.__getstate__": [[617, "skbio-sequence-substitutionmatrix-getstate"]], "skbio.sequence.SubstitutionMatrix.__gt__": [[618, "skbio-sequence-substitutionmatrix-gt"]], "skbio.sequence.SubstitutionMatrix.__le__": [[619, "skbio-sequence-substitutionmatrix-le"]], "skbio.sequence.SubstitutionMatrix.__lt__": [[620, "skbio-sequence-substitutionmatrix-lt"]], "skbio.sequence.SubstitutionMatrix.__ne__": [[621, "skbio-sequence-substitutionmatrix-ne"]], "skbio.sequence.SubstitutionMatrix.__str__": [[622, "skbio-sequence-substitutionmatrix-str"]], "skbio.sequence.SubstitutionMatrix.between": [[623, "skbio-sequence-substitutionmatrix-between"]], "skbio.sequence.SubstitutionMatrix.by_name": [[624, "skbio-sequence-substitutionmatrix-by-name"]], "skbio.sequence.SubstitutionMatrix.copy": [[625, "skbio-sequence-substitutionmatrix-copy"]], "skbio.sequence.SubstitutionMatrix.filter": [[626, "skbio-sequence-substitutionmatrix-filter"]], "skbio.sequence.SubstitutionMatrix.from_dict": [[627, "skbio-sequence-substitutionmatrix-from-dict"]], "skbio.sequence.SubstitutionMatrix.from_iterable": [[628, "skbio-sequence-substitutionmatrix-from-iterable"]], "skbio.sequence.SubstitutionMatrix.get_names": [[629, "skbio-sequence-substitutionmatrix-get-names"]], "skbio.sequence.SubstitutionMatrix.identity": [[630, "skbio-sequence-substitutionmatrix-identity"]], "skbio.sequence.SubstitutionMatrix.index": [[631, "skbio-sequence-substitutionmatrix-index"]], "skbio.sequence.SubstitutionMatrix.plot": [[632, "skbio-sequence-substitutionmatrix-plot"]], "skbio.sequence.SubstitutionMatrix.read": [[633, "skbio-sequence-substitutionmatrix-read"]], "skbio.sequence.SubstitutionMatrix.redundant_form": [[634, "skbio-sequence-substitutionmatrix-redundant-form"]], "skbio.sequence.SubstitutionMatrix.to_data_frame": [[635, "skbio-sequence-substitutionmatrix-to-data-frame"]], "skbio.sequence.SubstitutionMatrix.to_dict": [[636, "skbio-sequence-substitutionmatrix-to-dict"]], "skbio.sequence.SubstitutionMatrix.transpose": [[637, "skbio-sequence-substitutionmatrix-transpose"]], "skbio.sequence.SubstitutionMatrix.within": [[638, "skbio-sequence-substitutionmatrix-within"]], "skbio.sequence.SubstitutionMatrix.write": [[639, "skbio-sequence-substitutionmatrix-write"]], "skbio.sequence.distance.hamming": [[641, "skbio-sequence-distance-hamming"]], "skbio.sequence.distance.kmer_distance": [[642, "skbio-sequence-distance-kmer-distance"]], "skbio.stats.composition.alr": [[644, "skbio-stats-composition-alr"]], "skbio.stats.composition.alr_inv": [[645, "skbio-stats-composition-alr-inv"]], "skbio.stats.composition.ancom": [[646, "skbio-stats-composition-ancom"]], "skbio.stats.composition.centralize": [[647, "skbio-stats-composition-centralize"]], "skbio.stats.composition.closure": [[648, "skbio-stats-composition-closure"]], "skbio.stats.composition.clr": [[649, "skbio-stats-composition-clr"]], "skbio.stats.composition.clr_inv": [[650, "skbio-stats-composition-clr-inv"]], "skbio.stats.composition.dirmult_ttest": [[651, "skbio-stats-composition-dirmult-ttest"]], "skbio.stats.composition.ilr": [[652, "skbio-stats-composition-ilr"]], "skbio.stats.composition.ilr_inv": [[653, "skbio-stats-composition-ilr-inv"]], "skbio.stats.composition.inner": [[654, "skbio-stats-composition-inner"]], "skbio.stats.composition.multi_replace": [[655, "skbio-stats-composition-multi-replace"]], "skbio.stats.composition.multiplicative_replacement": [[656, "skbio-stats-composition-multiplicative-replacement"]], "skbio.stats.composition.pairwise_vlr": [[657, "skbio-stats-composition-pairwise-vlr"]], "skbio.stats.composition.perturb": [[658, "skbio-stats-composition-perturb"]], "skbio.stats.composition.perturb_inv": [[659, "skbio-stats-composition-perturb-inv"]], "skbio.stats.composition.power": [[660, "skbio-stats-composition-power"]], "skbio.stats.composition.sbp_basis": [[661, "skbio-stats-composition-sbp-basis"]], "skbio.stats.composition.tree_basis": [[662, "skbio-stats-composition-tree-basis"]], "skbio.stats.composition.vlr": [[663, "skbio-stats-composition-vlr"]], "skbio.stats.distance.DissimilarityMatrix": [[665, "skbio-stats-distance-dissimilaritymatrix"]], "skbio.stats.distance.DissimilarityMatrix.__contains__": [[666, "skbio-stats-distance-dissimilaritymatrix-contains"]], "skbio.stats.distance.DissimilarityMatrix.__eq__": [[667, "skbio-stats-distance-dissimilaritymatrix-eq"]], "skbio.stats.distance.DissimilarityMatrix.__ge__": [[668, "skbio-stats-distance-dissimilaritymatrix-ge"]], "skbio.stats.distance.DissimilarityMatrix.__getitem__": [[669, "skbio-stats-distance-dissimilaritymatrix-getitem"]], "skbio.stats.distance.DissimilarityMatrix.__getstate__": [[670, "skbio-stats-distance-dissimilaritymatrix-getstate"]], "skbio.stats.distance.DissimilarityMatrix.__gt__": [[671, "skbio-stats-distance-dissimilaritymatrix-gt"]], "skbio.stats.distance.DissimilarityMatrix.__le__": [[672, "skbio-stats-distance-dissimilaritymatrix-le"]], "skbio.stats.distance.DissimilarityMatrix.__lt__": [[673, "skbio-stats-distance-dissimilaritymatrix-lt"]], "skbio.stats.distance.DissimilarityMatrix.__ne__": [[674, "skbio-stats-distance-dissimilaritymatrix-ne"]], "skbio.stats.distance.DissimilarityMatrix.__str__": [[675, "skbio-stats-distance-dissimilaritymatrix-str"]], "skbio.stats.distance.DissimilarityMatrix.between": [[676, "skbio-stats-distance-dissimilaritymatrix-between"]], "skbio.stats.distance.DissimilarityMatrix.copy": [[677, "skbio-stats-distance-dissimilaritymatrix-copy"]], "skbio.stats.distance.DissimilarityMatrix.filter": [[678, "skbio-stats-distance-dissimilaritymatrix-filter"]], "skbio.stats.distance.DissimilarityMatrix.from_iterable": [[679, "skbio-stats-distance-dissimilaritymatrix-from-iterable"]], "skbio.stats.distance.DissimilarityMatrix.index": [[680, "skbio-stats-distance-dissimilaritymatrix-index"]], "skbio.stats.distance.DissimilarityMatrix.plot": [[681, "skbio-stats-distance-dissimilaritymatrix-plot"]], "skbio.stats.distance.DissimilarityMatrix.read": [[682, "skbio-stats-distance-dissimilaritymatrix-read"]], "skbio.stats.distance.DissimilarityMatrix.redundant_form": [[683, "skbio-stats-distance-dissimilaritymatrix-redundant-form"]], "skbio.stats.distance.DissimilarityMatrix.to_data_frame": [[684, "skbio-stats-distance-dissimilaritymatrix-to-data-frame"]], "skbio.stats.distance.DissimilarityMatrix.transpose": [[685, "skbio-stats-distance-dissimilaritymatrix-transpose"]], "skbio.stats.distance.DissimilarityMatrix.within": [[686, "skbio-stats-distance-dissimilaritymatrix-within"]], "skbio.stats.distance.DissimilarityMatrix.write": [[687, "skbio-stats-distance-dissimilaritymatrix-write"]], "skbio.stats.distance.DistanceMatrix": [[688, "skbio-stats-distance-distancematrix"]], "skbio.stats.distance.DistanceMatrix.__contains__": [[689, "skbio-stats-distance-distancematrix-contains"]], "skbio.stats.distance.DistanceMatrix.__eq__": [[690, "skbio-stats-distance-distancematrix-eq"]], "skbio.stats.distance.DistanceMatrix.__ge__": [[691, "skbio-stats-distance-distancematrix-ge"]], "skbio.stats.distance.DistanceMatrix.__getitem__": [[692, "skbio-stats-distance-distancematrix-getitem"]], "skbio.stats.distance.DistanceMatrix.__getstate__": [[693, "skbio-stats-distance-distancematrix-getstate"]], "skbio.stats.distance.DistanceMatrix.__gt__": [[694, "skbio-stats-distance-distancematrix-gt"]], "skbio.stats.distance.DistanceMatrix.__le__": [[695, "skbio-stats-distance-distancematrix-le"]], "skbio.stats.distance.DistanceMatrix.__lt__": [[696, "skbio-stats-distance-distancematrix-lt"]], "skbio.stats.distance.DistanceMatrix.__ne__": [[697, "skbio-stats-distance-distancematrix-ne"]], "skbio.stats.distance.DistanceMatrix.__str__": [[698, "skbio-stats-distance-distancematrix-str"]], "skbio.stats.distance.DistanceMatrix.between": [[699, "skbio-stats-distance-distancematrix-between"]], "skbio.stats.distance.DistanceMatrix.condensed_form": [[700, "skbio-stats-distance-distancematrix-condensed-form"]], "skbio.stats.distance.DistanceMatrix.copy": [[701, "skbio-stats-distance-distancematrix-copy"]], "skbio.stats.distance.DistanceMatrix.filter": [[702, "skbio-stats-distance-distancematrix-filter"]], "skbio.stats.distance.DistanceMatrix.from_iterable": [[703, "skbio-stats-distance-distancematrix-from-iterable"]], "skbio.stats.distance.DistanceMatrix.index": [[704, "skbio-stats-distance-distancematrix-index"]], "skbio.stats.distance.DistanceMatrix.permute": [[705, "skbio-stats-distance-distancematrix-permute"]], "skbio.stats.distance.DistanceMatrix.plot": [[706, "skbio-stats-distance-distancematrix-plot"]], "skbio.stats.distance.DistanceMatrix.read": [[707, "skbio-stats-distance-distancematrix-read"]], "skbio.stats.distance.DistanceMatrix.redundant_form": [[708, "skbio-stats-distance-distancematrix-redundant-form"]], "skbio.stats.distance.DistanceMatrix.to_data_frame": [[709, "skbio-stats-distance-distancematrix-to-data-frame"]], "skbio.stats.distance.DistanceMatrix.to_series": [[710, "skbio-stats-distance-distancematrix-to-series"]], "skbio.stats.distance.DistanceMatrix.transpose": [[711, "skbio-stats-distance-distancematrix-transpose"]], "skbio.stats.distance.DistanceMatrix.within": [[712, "skbio-stats-distance-distancematrix-within"]], "skbio.stats.distance.DistanceMatrix.write": [[713, "skbio-stats-distance-distancematrix-write"]], "skbio.stats.distance.anosim": [[714, "skbio-stats-distance-anosim"]], "skbio.stats.distance.bioenv": [[715, "skbio-stats-distance-bioenv"]], "skbio.stats.distance.mantel": [[716, "skbio-stats-distance-mantel"]], "skbio.stats.distance.permanova": [[717, "skbio-stats-distance-permanova"]], "skbio.stats.distance.permdisp": [[718, "skbio-stats-distance-permdisp"]], "skbio.stats.distance.pwmantel": [[719, "skbio-stats-distance-pwmantel"]], "skbio.stats.distance.randdm": [[720, "skbio-stats-distance-randdm"]], "skbio.stats.evolve.hommola_cospeciation": [[722, "skbio-stats-evolve-hommola-cospeciation"]], "skbio.stats.gradient.AverageGradientANOVA": [[724, "skbio-stats-gradient-averagegradientanova"]], "skbio.stats.gradient.AverageGradientANOVA.__eq__": [[725, "skbio-stats-gradient-averagegradientanova-eq"]], "skbio.stats.gradient.AverageGradientANOVA.__ge__": [[726, "skbio-stats-gradient-averagegradientanova-ge"]], "skbio.stats.gradient.AverageGradientANOVA.__getstate__": [[727, "skbio-stats-gradient-averagegradientanova-getstate"]], "skbio.stats.gradient.AverageGradientANOVA.__gt__": [[728, "skbio-stats-gradient-averagegradientanova-gt"]], "skbio.stats.gradient.AverageGradientANOVA.__hash__": [[729, "skbio-stats-gradient-averagegradientanova-hash"]], "skbio.stats.gradient.AverageGradientANOVA.__le__": [[730, "skbio-stats-gradient-averagegradientanova-le"]], "skbio.stats.gradient.AverageGradientANOVA.__lt__": [[731, "skbio-stats-gradient-averagegradientanova-lt"]], "skbio.stats.gradient.AverageGradientANOVA.__ne__": [[732, "skbio-stats-gradient-averagegradientanova-ne"]], "skbio.stats.gradient.AverageGradientANOVA.__str__": [[733, "skbio-stats-gradient-averagegradientanova-str"]], "skbio.stats.gradient.AverageGradientANOVA.get_trajectories": [[734, "skbio-stats-gradient-averagegradientanova-get-trajectories"]], "skbio.stats.gradient.CategoryResults": [[735, "skbio-stats-gradient-categoryresults"]], "skbio.stats.gradient.CategoryResults.__eq__": [[736, "skbio-stats-gradient-categoryresults-eq"]], "skbio.stats.gradient.CategoryResults.__ge__": [[737, "skbio-stats-gradient-categoryresults-ge"]], "skbio.stats.gradient.CategoryResults.__getstate__": [[738, "skbio-stats-gradient-categoryresults-getstate"]], "skbio.stats.gradient.CategoryResults.__gt__": [[739, "skbio-stats-gradient-categoryresults-gt"]], "skbio.stats.gradient.CategoryResults.__hash__": [[740, "skbio-stats-gradient-categoryresults-hash"]], "skbio.stats.gradient.CategoryResults.__le__": [[741, "skbio-stats-gradient-categoryresults-le"]], "skbio.stats.gradient.CategoryResults.__lt__": [[742, "skbio-stats-gradient-categoryresults-lt"]], "skbio.stats.gradient.CategoryResults.__ne__": [[743, "skbio-stats-gradient-categoryresults-ne"]], "skbio.stats.gradient.CategoryResults.__str__": [[744, "skbio-stats-gradient-categoryresults-str"]], "skbio.stats.gradient.CategoryResults.to_files": [[745, "skbio-stats-gradient-categoryresults-to-files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[746, "skbio-stats-gradient-firstdifferencegradientanova"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__": [[747, "skbio-stats-gradient-firstdifferencegradientanova-eq"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__": [[748, "skbio-stats-gradient-firstdifferencegradientanova-ge"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__": [[749, "skbio-stats-gradient-firstdifferencegradientanova-getstate"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__": [[750, "skbio-stats-gradient-firstdifferencegradientanova-gt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__": [[751, "skbio-stats-gradient-firstdifferencegradientanova-hash"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__": [[752, "skbio-stats-gradient-firstdifferencegradientanova-le"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__": [[753, "skbio-stats-gradient-firstdifferencegradientanova-lt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__": [[754, "skbio-stats-gradient-firstdifferencegradientanova-ne"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__": [[755, "skbio-stats-gradient-firstdifferencegradientanova-str"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories": [[756, "skbio-stats-gradient-firstdifferencegradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVA": [[757, "skbio-stats-gradient-gradientanova"]], "skbio.stats.gradient.GradientANOVA.__eq__": [[758, "skbio-stats-gradient-gradientanova-eq"]], "skbio.stats.gradient.GradientANOVA.__ge__": [[759, "skbio-stats-gradient-gradientanova-ge"]], "skbio.stats.gradient.GradientANOVA.__getstate__": [[760, "skbio-stats-gradient-gradientanova-getstate"]], "skbio.stats.gradient.GradientANOVA.__gt__": [[761, "skbio-stats-gradient-gradientanova-gt"]], "skbio.stats.gradient.GradientANOVA.__hash__": [[762, "skbio-stats-gradient-gradientanova-hash"]], "skbio.stats.gradient.GradientANOVA.__le__": [[763, "skbio-stats-gradient-gradientanova-le"]], "skbio.stats.gradient.GradientANOVA.__lt__": [[764, "skbio-stats-gradient-gradientanova-lt"]], "skbio.stats.gradient.GradientANOVA.__ne__": [[765, "skbio-stats-gradient-gradientanova-ne"]], "skbio.stats.gradient.GradientANOVA.__str__": [[766, "skbio-stats-gradient-gradientanova-str"]], "skbio.stats.gradient.GradientANOVA.get_trajectories": [[767, "skbio-stats-gradient-gradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[768, "skbio-stats-gradient-gradientanovaresults"]], "skbio.stats.gradient.GradientANOVAResults.__eq__": [[769, "skbio-stats-gradient-gradientanovaresults-eq"]], "skbio.stats.gradient.GradientANOVAResults.__ge__": [[770, "skbio-stats-gradient-gradientanovaresults-ge"]], "skbio.stats.gradient.GradientANOVAResults.__getstate__": [[771, "skbio-stats-gradient-gradientanovaresults-getstate"]], "skbio.stats.gradient.GradientANOVAResults.__gt__": [[772, "skbio-stats-gradient-gradientanovaresults-gt"]], "skbio.stats.gradient.GradientANOVAResults.__hash__": [[773, "skbio-stats-gradient-gradientanovaresults-hash"]], "skbio.stats.gradient.GradientANOVAResults.__le__": [[774, "skbio-stats-gradient-gradientanovaresults-le"]], "skbio.stats.gradient.GradientANOVAResults.__lt__": [[775, "skbio-stats-gradient-gradientanovaresults-lt"]], "skbio.stats.gradient.GradientANOVAResults.__ne__": [[776, "skbio-stats-gradient-gradientanovaresults-ne"]], "skbio.stats.gradient.GradientANOVAResults.__str__": [[777, "skbio-stats-gradient-gradientanovaresults-str"]], "skbio.stats.gradient.GradientANOVAResults.to_files": [[778, "skbio-stats-gradient-gradientanovaresults-to-files"]], "skbio.stats.gradient.GroupResults": [[779, "skbio-stats-gradient-groupresults"]], "skbio.stats.gradient.GroupResults.__eq__": [[780, "skbio-stats-gradient-groupresults-eq"]], "skbio.stats.gradient.GroupResults.__ge__": [[781, "skbio-stats-gradient-groupresults-ge"]], "skbio.stats.gradient.GroupResults.__getstate__": [[782, "skbio-stats-gradient-groupresults-getstate"]], "skbio.stats.gradient.GroupResults.__gt__": [[783, "skbio-stats-gradient-groupresults-gt"]], "skbio.stats.gradient.GroupResults.__hash__": [[784, "skbio-stats-gradient-groupresults-hash"]], "skbio.stats.gradient.GroupResults.__le__": [[785, "skbio-stats-gradient-groupresults-le"]], "skbio.stats.gradient.GroupResults.__lt__": [[786, "skbio-stats-gradient-groupresults-lt"]], "skbio.stats.gradient.GroupResults.__ne__": [[787, "skbio-stats-gradient-groupresults-ne"]], "skbio.stats.gradient.GroupResults.__str__": [[788, "skbio-stats-gradient-groupresults-str"]], "skbio.stats.gradient.GroupResults.to_files": [[789, "skbio-stats-gradient-groupresults-to-files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[790, "skbio-stats-gradient-trajectorygradientanova"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__": [[791, "skbio-stats-gradient-trajectorygradientanova-eq"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__": [[792, "skbio-stats-gradient-trajectorygradientanova-ge"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__": [[793, "skbio-stats-gradient-trajectorygradientanova-getstate"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__": [[794, "skbio-stats-gradient-trajectorygradientanova-gt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__": [[795, "skbio-stats-gradient-trajectorygradientanova-hash"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__le__": [[796, "skbio-stats-gradient-trajectorygradientanova-le"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__": [[797, "skbio-stats-gradient-trajectorygradientanova-lt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__": [[798, "skbio-stats-gradient-trajectorygradientanova-ne"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__str__": [[799, "skbio-stats-gradient-trajectorygradientanova-str"]], "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories": [[800, "skbio-stats-gradient-trajectorygradientanova-get-trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[801, "skbio-stats-gradient-windowdifferencegradientanova"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__": [[802, "skbio-stats-gradient-windowdifferencegradientanova-eq"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__": [[803, "skbio-stats-gradient-windowdifferencegradientanova-ge"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__": [[804, "skbio-stats-gradient-windowdifferencegradientanova-getstate"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__": [[805, "skbio-stats-gradient-windowdifferencegradientanova-gt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__": [[806, "skbio-stats-gradient-windowdifferencegradientanova-hash"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__": [[807, "skbio-stats-gradient-windowdifferencegradientanova-le"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__": [[808, "skbio-stats-gradient-windowdifferencegradientanova-lt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__": [[809, "skbio-stats-gradient-windowdifferencegradientanova-ne"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__": [[810, "skbio-stats-gradient-windowdifferencegradientanova-str"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories": [[811, "skbio-stats-gradient-windowdifferencegradientanova-get-trajectories"]], "skbio.stats.isubsample": [[812, "skbio-stats-isubsample"]], "skbio.stats.ordination.OrdinationResults": [[814, "skbio-stats-ordination-ordinationresults"]], "skbio.stats.ordination.OrdinationResults.__eq__": [[815, "skbio-stats-ordination-ordinationresults-eq"]], "skbio.stats.ordination.OrdinationResults.__ge__": [[816, "skbio-stats-ordination-ordinationresults-ge"]], "skbio.stats.ordination.OrdinationResults.__getstate__": [[817, "skbio-stats-ordination-ordinationresults-getstate"]], "skbio.stats.ordination.OrdinationResults.__gt__": [[818, "skbio-stats-ordination-ordinationresults-gt"]], "skbio.stats.ordination.OrdinationResults.__hash__": [[819, "skbio-stats-ordination-ordinationresults-hash"]], "skbio.stats.ordination.OrdinationResults.__le__": [[820, "skbio-stats-ordination-ordinationresults-le"]], "skbio.stats.ordination.OrdinationResults.__lt__": [[821, "skbio-stats-ordination-ordinationresults-lt"]], "skbio.stats.ordination.OrdinationResults.__ne__": [[822, "skbio-stats-ordination-ordinationresults-ne"]], "skbio.stats.ordination.OrdinationResults.__str__": [[823, "skbio-stats-ordination-ordinationresults-str"]], "skbio.stats.ordination.OrdinationResults.plot": [[824, "skbio-stats-ordination-ordinationresults-plot"]], "skbio.stats.ordination.OrdinationResults.read": [[825, "skbio-stats-ordination-ordinationresults-read"]], "skbio.stats.ordination.OrdinationResults.write": [[826, "skbio-stats-ordination-ordinationresults-write"]], "skbio.stats.ordination.ca": [[827, "skbio-stats-ordination-ca"]], "skbio.stats.ordination.cca": [[828, "skbio-stats-ordination-cca"]], "skbio.stats.ordination.corr": [[829, "skbio-stats-ordination-corr"]], "skbio.stats.ordination.e_matrix": [[830, "skbio-stats-ordination-e-matrix"]], "skbio.stats.ordination.f_matrix": [[831, "skbio-stats-ordination-f-matrix"]], "skbio.stats.ordination.mean_and_std": [[832, "skbio-stats-ordination-mean-and-std"]], "skbio.stats.ordination.pcoa": [[833, "skbio-stats-ordination-pcoa"]], "skbio.stats.ordination.pcoa_biplot": [[834, "skbio-stats-ordination-pcoa-biplot"]], "skbio.stats.ordination.rda": [[835, "skbio-stats-ordination-rda"]], "skbio.stats.ordination.scale": [[836, "skbio-stats-ordination-scale"]], "skbio.stats.ordination.svd_rank": [[837, "skbio-stats-ordination-svd-rank"]], "skbio.stats.power.confidence_bound": [[839, "skbio-stats-power-confidence-bound"]], "skbio.stats.power.paired_subsamples": [[840, "skbio-stats-power-paired-subsamples"]], "skbio.stats.power.subsample_paired_power": [[841, "skbio-stats-power-subsample-paired-power"]], "skbio.stats.power.subsample_power": [[842, "skbio-stats-power-subsample-power"]], "skbio.stats.subsample_counts": [[843, "skbio-stats-subsample-counts"]], "skbio.table.Table": [[844, "skbio-table-table"]], "skbio.table.Table.__eq__": [[845, "skbio-table-table-eq"]], "skbio.table.Table.__ge__": [[846, "skbio-table-table-ge"]], "skbio.table.Table.__getitem__": [[847, "skbio-table-table-getitem"]], "skbio.table.Table.__getstate__": [[848, "skbio-table-table-getstate"]], "skbio.table.Table.__gt__": [[849, "skbio-table-table-gt"]], "skbio.table.Table.__iter__": [[850, "skbio-table-table-iter"]], "skbio.table.Table.__le__": [[851, "skbio-table-table-le"]], "skbio.table.Table.__lt__": [[852, "skbio-table-table-lt"]], "skbio.table.Table.__ne__": [[853, "skbio-table-table-ne"]], "skbio.table.Table.__str__": [[854, "skbio-table-table-str"]], "skbio.table.Table.add_group_metadata": [[855, "skbio-table-table-add-group-metadata"]], "skbio.table.Table.add_metadata": [[856, "skbio-table-table-add-metadata"]], "skbio.table.Table.align_to": [[857, "skbio-table-table-align-to"]], "skbio.table.Table.align_to_dataframe": [[858, "skbio-table-table-align-to-dataframe"]], "skbio.table.Table.align_tree": [[859, "skbio-table-table-align-tree"]], "skbio.table.Table.collapse": [[860, "skbio-table-table-collapse"]], "skbio.table.Table.concat": [[861, "skbio-table-table-concat"]], "skbio.table.Table.copy": [[862, "skbio-table-table-copy"]], "skbio.table.Table.data": [[863, "skbio-table-table-data"]], "skbio.table.Table.del_metadata": [[864, "skbio-table-table-del-metadata"]], "skbio.table.Table.delimited_self": [[865, "skbio-table-table-delimited-self"]], "skbio.table.Table.descriptive_equality": [[866, "skbio-table-table-descriptive-equality"]], "skbio.table.Table.exists": [[867, "skbio-table-table-exists"]], "skbio.table.Table.filter": [[868, "skbio-table-table-filter"]], "skbio.table.Table.from_adjacency": [[869, "skbio-table-table-from-adjacency"]], "skbio.table.Table.from_hdf5": [[870, "skbio-table-table-from-hdf5"]], "skbio.table.Table.from_json": [[871, "skbio-table-table-from-json"]], "skbio.table.Table.from_tsv": [[872, "skbio-table-table-from-tsv"]], "skbio.table.Table.get_table_density": [[873, "skbio-table-table-get-table-density"]], "skbio.table.Table.get_value_by_ids": [[874, "skbio-table-table-get-value-by-ids"]], "skbio.table.Table.group_metadata": [[875, "skbio-table-table-group-metadata"]], "skbio.table.Table.head": [[876, "skbio-table-table-head"]], "skbio.table.Table.ids": [[877, "skbio-table-table-ids"]], "skbio.table.Table.index": [[878, "skbio-table-table-index"]], "skbio.table.Table.is_empty": [[879, "skbio-table-table-is-empty"]], "skbio.table.Table.iter": [[880, "skbio-table-table-iter"]], "skbio.table.Table.iter_data": [[881, "skbio-table-table-iter-data"]], "skbio.table.Table.iter_pairwise": [[882, "skbio-table-table-iter-pairwise"]], "skbio.table.Table.length": [[883, "skbio-table-table-length"]], "skbio.table.Table.max": [[884, "skbio-table-table-max"]], "skbio.table.Table.merge": [[885, "skbio-table-table-merge"]], "skbio.table.Table.metadata": [[886, "skbio-table-table-metadata"]], "skbio.table.Table.metadata_to_dataframe": [[887, "skbio-table-table-metadata-to-dataframe"]], "skbio.table.Table.min": [[888, "skbio-table-table-min"]], "skbio.table.Table.nonzero": [[889, "skbio-table-table-nonzero"]], "skbio.table.Table.nonzero_counts": [[890, "skbio-table-table-nonzero-counts"]], "skbio.table.Table.norm": [[891, "skbio-table-table-norm"]], "skbio.table.Table.pa": [[892, "skbio-table-table-pa"]], "skbio.table.Table.partition": [[893, "skbio-table-table-partition"]], "skbio.table.Table.rankdata": [[894, "skbio-table-table-rankdata"]], "skbio.table.Table.read": [[895, "skbio-table-table-read"]], "skbio.table.Table.reduce": [[896, "skbio-table-table-reduce"]], "skbio.table.Table.remove_empty": [[897, "skbio-table-table-remove-empty"]], "skbio.table.Table.sort": [[898, "skbio-table-table-sort"]], "skbio.table.Table.sort_order": [[899, "skbio-table-table-sort-order"]], "skbio.table.Table.subsample": [[900, "skbio-table-table-subsample"]], "skbio.table.Table.sum": [[901, "skbio-table-table-sum"]], "skbio.table.Table.to_anndata": [[902, "skbio-table-table-to-anndata"]], "skbio.table.Table.to_dataframe": [[903, "skbio-table-table-to-dataframe"]], "skbio.table.Table.to_hdf5": [[904, "skbio-table-table-to-hdf5"]], "skbio.table.Table.to_json": [[905, "skbio-table-table-to-json"]], "skbio.table.Table.to_tsv": [[906, "skbio-table-table-to-tsv"]], "skbio.table.Table.transform": [[907, "skbio-table-table-transform"]], "skbio.table.Table.transpose": [[908, "skbio-table-table-transpose"]], "skbio.table.Table.update_ids": [[909, "skbio-table-table-update-ids"]], "skbio.table.Table.write": [[910, "skbio-table-table-write"]], "skbio.table.example_table": [[911, "skbio-table-example-table"]], "skbio.tree.TreeNode": [[912, "skbio-tree-treenode"]], "skbio.tree.TreeNode.__copy__": [[913, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.__deepcopy__": [[914, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.__eq__": [[915, "skbio-tree-treenode-eq"]], "skbio.tree.TreeNode.__ge__": [[916, "skbio-tree-treenode-ge"]], "skbio.tree.TreeNode.__getitem__": [[917, "skbio-tree-treenode-getitem"]], "skbio.tree.TreeNode.__getstate__": [[918, "skbio-tree-treenode-getstate"]], "skbio.tree.TreeNode.__gt__": [[919, "skbio-tree-treenode-gt"]], "skbio.tree.TreeNode.__hash__": [[920, "skbio-tree-treenode-hash"]], "skbio.tree.TreeNode.__iter__": [[921, "skbio-tree-treenode-iter"]], "skbio.tree.TreeNode.__le__": [[922, "skbio-tree-treenode-le"]], "skbio.tree.TreeNode.__len__": [[923, "skbio-tree-treenode-len"]], "skbio.tree.TreeNode.__lt__": [[924, "skbio-tree-treenode-lt"]], "skbio.tree.TreeNode.__ne__": [[925, "skbio-tree-treenode-ne"]], "skbio.tree.TreeNode.__str__": [[926, "skbio-tree-treenode-str"]], "skbio.tree.TreeNode.accumulate_to_ancestor": [[927, "skbio-tree-treenode-accumulate-to-ancestor"]], "skbio.tree.TreeNode.ancestors": [[928, "skbio-tree-treenode-ancestors"]], "skbio.tree.TreeNode.append": [[929, "skbio-tree-treenode-append"]], "skbio.tree.TreeNode.ascii_art": [[930, "skbio-tree-treenode-ascii-art"]], "skbio.tree.TreeNode.assign_ids": [[931, "skbio-tree-treenode-assign-ids"]], "skbio.tree.TreeNode.assign_supports": [[932, "skbio-tree-treenode-assign-supports"]], "skbio.tree.TreeNode.bifurcate": [[933, "skbio-tree-treenode-bifurcate"]], "skbio.tree.TreeNode.cache_attr": [[934, "skbio-tree-treenode-cache-attr"]], "skbio.tree.TreeNode.compare_rfd": [[935, "skbio-tree-treenode-compare-rfd"]], "skbio.tree.TreeNode.compare_subsets": [[936, "skbio-tree-treenode-compare-subsets"]], "skbio.tree.TreeNode.compare_tip_distances": [[937, "skbio-tree-treenode-compare-tip-distances"]], "skbio.tree.TreeNode.copy": [[938, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.count": [[939, "skbio-tree-treenode-count"]], "skbio.tree.TreeNode.create_caches": [[940, "skbio-tree-treenode-create-caches"]], "skbio.tree.TreeNode.deepcopy": [[941, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.descending_branch_length": [[942, "skbio-tree-treenode-descending-branch-length"]], "skbio.tree.TreeNode.distance": [[943, "skbio-tree-treenode-distance"]], "skbio.tree.TreeNode.extend": [[944, "skbio-tree-treenode-extend"]], "skbio.tree.TreeNode.find": [[945, "skbio-tree-treenode-find"]], "skbio.tree.TreeNode.find_all": [[946, "skbio-tree-treenode-find-all"]], "skbio.tree.TreeNode.find_by_func": [[947, "skbio-tree-treenode-find-by-func"]], "skbio.tree.TreeNode.find_by_id": [[948, "skbio-tree-treenode-find-by-id"]], "skbio.tree.TreeNode.from_linkage_matrix": [[949, "skbio-tree-treenode-from-linkage-matrix"]], "skbio.tree.TreeNode.from_taxdump": [[950, "skbio-tree-treenode-from-taxdump"]], "skbio.tree.TreeNode.from_taxonomy": [[951, "skbio-tree-treenode-from-taxonomy"]], "skbio.tree.TreeNode.get_max_distance": [[952, "skbio-tree-treenode-get-max-distance"]], "skbio.tree.TreeNode.has_children": [[953, "skbio-tree-treenode-has-children"]], "skbio.tree.TreeNode.index_tree": [[954, "skbio-tree-treenode-index-tree"]], "skbio.tree.TreeNode.invalidate_caches": [[955, "skbio-tree-treenode-invalidate-caches"]], "skbio.tree.TreeNode.is_root": [[956, "skbio-tree-treenode-is-root"]], "skbio.tree.TreeNode.is_tip": [[957, "skbio-tree-treenode-is-tip"]], "skbio.tree.TreeNode.lca": [[958, "skbio-tree-treenode-lca"]], "skbio.tree.TreeNode.levelorder": [[959, "skbio-tree-treenode-levelorder"]], "skbio.tree.TreeNode.lowest_common_ancestor": [[960, "skbio-tree-treenode-lowest-common-ancestor"]], "skbio.tree.TreeNode.neighbors": [[961, "skbio-tree-treenode-neighbors"]], "skbio.tree.TreeNode.non_tips": [[962, "skbio-tree-treenode-non-tips"]], "skbio.tree.TreeNode.observed_node_counts": [[963, "skbio-tree-treenode-observed-node-counts"]], "skbio.tree.TreeNode.pop": [[964, "skbio-tree-treenode-pop"]], "skbio.tree.TreeNode.postorder": [[965, "skbio-tree-treenode-postorder"]], "skbio.tree.TreeNode.pre_and_postorder": [[966, "skbio-tree-treenode-pre-and-postorder"]], "skbio.tree.TreeNode.preorder": [[967, "skbio-tree-treenode-preorder"]], "skbio.tree.TreeNode.prune": [[968, "skbio-tree-treenode-prune"]], "skbio.tree.TreeNode.read": [[969, "skbio-tree-treenode-read"]], "skbio.tree.TreeNode.remove": [[970, "skbio-tree-treenode-remove"]], "skbio.tree.TreeNode.remove_deleted": [[971, "skbio-tree-treenode-remove-deleted"]], "skbio.tree.TreeNode.root": [[972, "skbio-tree-treenode-root"]], "skbio.tree.TreeNode.root_at": [[973, "skbio-tree-treenode-root-at"]], "skbio.tree.TreeNode.root_at_midpoint": [[974, "skbio-tree-treenode-root-at-midpoint"]], "skbio.tree.TreeNode.shear": [[975, "skbio-tree-treenode-shear"]], "skbio.tree.TreeNode.shuffle": [[976, "skbio-tree-treenode-shuffle"]], "skbio.tree.TreeNode.siblings": [[977, "skbio-tree-treenode-siblings"]], "skbio.tree.TreeNode.subset": [[978, "skbio-tree-treenode-subset"]], "skbio.tree.TreeNode.subsets": [[979, "skbio-tree-treenode-subsets"]], "skbio.tree.TreeNode.subtree": [[980, "skbio-tree-treenode-subtree"]], "skbio.tree.TreeNode.tip_tip_distances": [[981, "skbio-tree-treenode-tip-tip-distances"]], "skbio.tree.TreeNode.tips": [[982, "skbio-tree-treenode-tips"]], "skbio.tree.TreeNode.to_array": [[983, "skbio-tree-treenode-to-array"]], "skbio.tree.TreeNode.to_taxonomy": [[984, "skbio-tree-treenode-to-taxonomy"]], "skbio.tree.TreeNode.traverse": [[985, "skbio-tree-treenode-traverse"]], "skbio.tree.TreeNode.unpack": [[986, "skbio-tree-treenode-unpack"]], "skbio.tree.TreeNode.unpack_by_func": [[987, "skbio-tree-treenode-unpack-by-func"]], "skbio.tree.TreeNode.unrooted_copy": [[988, "skbio-tree-treenode-unrooted-copy"]], "skbio.tree.TreeNode.unrooted_deepcopy": [[989, "skbio-tree-treenode-unrooted-deepcopy"]], "skbio.tree.TreeNode.write": [[990, "skbio-tree-treenode-write"]], "skbio.tree.majority_rule": [[991, "skbio-tree-majority-rule"]], "skbio.tree.nj": [[992, "skbio-tree-nj"]], "skbio.util.EfficiencyWarning": [[993, "skbio-util-efficiencywarning"]], "skbio.util.RepresentationWarning": [[994, "skbio-util-representationwarning"]], "skbio.util.assert_data_frame_almost_equal": [[995, "skbio-util-assert-data-frame-almost-equal"]], "skbio.util.assert_ordination_results_equal": [[996, "skbio-util-assert-ordination-results-equal"]], "skbio.util.cardinal_to_ordinal": [[997, "skbio-util-cardinal-to-ordinal"]], "skbio.util.classproperty": [[998, "skbio-util-classproperty"]], "skbio.util.classproperty.__delete__": [[999, "skbio-util-classproperty-delete"]], "skbio.util.classproperty.__eq__": [[1000, "skbio-util-classproperty-eq"]], "skbio.util.classproperty.__ge__": [[1001, "skbio-util-classproperty-ge"]], "skbio.util.classproperty.__get__": [[1002, "skbio-util-classproperty-get"]], "skbio.util.classproperty.__getstate__": [[1003, "skbio-util-classproperty-getstate"]], "skbio.util.classproperty.__gt__": [[1004, "skbio-util-classproperty-gt"]], "skbio.util.classproperty.__hash__": [[1005, "skbio-util-classproperty-hash"]], "skbio.util.classproperty.__le__": [[1006, "skbio-util-classproperty-le"]], "skbio.util.classproperty.__lt__": [[1007, "skbio-util-classproperty-lt"]], "skbio.util.classproperty.__ne__": [[1008, "skbio-util-classproperty-ne"]], "skbio.util.classproperty.__set__": [[1009, "skbio-util-classproperty-set"]], "skbio.util.classproperty.__set_name__": [[1010, "skbio-util-classproperty-set-name"]], "skbio.util.classproperty.__str__": [[1011, "skbio-util-classproperty-str"]], "skbio.util.classproperty.deleter": [[1012, "skbio-util-classproperty-deleter"]], "skbio.util.classproperty.getter": [[1013, "skbio-util-classproperty-getter"]], "skbio.util.classproperty.setter": [[1014, "skbio-util-classproperty-setter"]], "skbio.util.find_duplicates": [[1015, "skbio-util-find-duplicates"]], "skbio.util.get_data_path": [[1016, "skbio-util-get-data-path"]], "skbio.util.safe_md5": [[1017, "skbio-util-safe-md5"]], "skbio.workflow.Workflow": [[1018, "skbio-workflow-workflow"]], "skbio.workflow.Workflow.__call__": [[1019, "skbio-workflow-workflow-call"]], "skbio.workflow.Workflow.__eq__": [[1020, "skbio-workflow-workflow-eq"]], "skbio.workflow.Workflow.__ge__": [[1021, "skbio-workflow-workflow-ge"]], "skbio.workflow.Workflow.__getstate__": [[1022, "skbio-workflow-workflow-getstate"]], "skbio.workflow.Workflow.__gt__": [[1023, "skbio-workflow-workflow-gt"]], "skbio.workflow.Workflow.__hash__": [[1024, "skbio-workflow-workflow-hash"]], "skbio.workflow.Workflow.__le__": [[1025, "skbio-workflow-workflow-le"]], "skbio.workflow.Workflow.__lt__": [[1026, "skbio-workflow-workflow-lt"]], "skbio.workflow.Workflow.__ne__": [[1027, "skbio-workflow-workflow-ne"]], "skbio.workflow.Workflow.__str__": [[1028, "skbio-workflow-workflow-str"]], "skbio.workflow.Workflow.initialize_state": [[1029, "skbio-workflow-workflow-initialize-state"]], "skbio.workflow.method": [[1030, "skbio-workflow-method"]], "skbio.workflow.method.__call__": [[1031, "skbio-workflow-method-call"]], "skbio.workflow.method.__eq__": [[1032, "skbio-workflow-method-eq"]], "skbio.workflow.method.__ge__": [[1033, "skbio-workflow-method-ge"]], "skbio.workflow.method.__getstate__": [[1034, "skbio-workflow-method-getstate"]], "skbio.workflow.method.__gt__": [[1035, "skbio-workflow-method-gt"]], "skbio.workflow.method.__hash__": [[1036, "skbio-workflow-method-hash"]], "skbio.workflow.method.__le__": [[1037, "skbio-workflow-method-le"]], "skbio.workflow.method.__lt__": [[1038, "skbio-workflow-method-lt"]], "skbio.workflow.method.__ne__": [[1039, "skbio-workflow-method-ne"]], "skbio.workflow.method.__str__": [[1040, "skbio-workflow-method-str"]], "skbio.workflow.requires": [[1041, "skbio-workflow-requires"]], "skbio.workflow.requires.__call__": [[1042, "skbio-workflow-requires-call"]], "skbio.workflow.requires.__eq__": [[1043, "skbio-workflow-requires-eq"]], "skbio.workflow.requires.__ge__": [[1044, "skbio-workflow-requires-ge"]], "skbio.workflow.requires.__getstate__": [[1045, "skbio-workflow-requires-getstate"]], "skbio.workflow.requires.__gt__": [[1046, "skbio-workflow-requires-gt"]], "skbio.workflow.requires.__hash__": [[1047, "skbio-workflow-requires-hash"]], "skbio.workflow.requires.__le__": [[1048, "skbio-workflow-requires-le"]], "skbio.workflow.requires.__lt__": [[1049, "skbio-workflow-requires-lt"]], "skbio.workflow.requires.__ne__": [[1050, "skbio-workflow-requires-ne"]], "skbio.workflow.requires.__str__": [[1051, "skbio-workflow-requires-str"]]}, "docnames": ["alignment", "diversity", "embedding", "generated/skbio.alignment.AlignPath", "generated/skbio.alignment.AlignPath.__eq__", "generated/skbio.alignment.AlignPath.__ge__", "generated/skbio.alignment.AlignPath.__getstate__", "generated/skbio.alignment.AlignPath.__gt__", "generated/skbio.alignment.AlignPath.__hash__", "generated/skbio.alignment.AlignPath.__le__", "generated/skbio.alignment.AlignPath.__lt__", "generated/skbio.alignment.AlignPath.__ne__", "generated/skbio.alignment.AlignPath.__str__", "generated/skbio.alignment.AlignPath.from_bits", "generated/skbio.alignment.AlignPath.from_coordinates", "generated/skbio.alignment.AlignPath.from_indices", "generated/skbio.alignment.AlignPath.from_tabular", "generated/skbio.alignment.AlignPath.to_bits", "generated/skbio.alignment.AlignPath.to_coordinates", "generated/skbio.alignment.AlignPath.to_indices", "generated/skbio.alignment.AlignmentStructure", "generated/skbio.alignment.AlignmentStructure.__eq__", "generated/skbio.alignment.AlignmentStructure.__ge__", "generated/skbio.alignment.AlignmentStructure.__getitem__", "generated/skbio.alignment.AlignmentStructure.__getstate__", "generated/skbio.alignment.AlignmentStructure.__gt__", "generated/skbio.alignment.AlignmentStructure.__hash__", "generated/skbio.alignment.AlignmentStructure.__le__", "generated/skbio.alignment.AlignmentStructure.__lt__", "generated/skbio.alignment.AlignmentStructure.__ne__", "generated/skbio.alignment.AlignmentStructure.__setstate__", "generated/skbio.alignment.AlignmentStructure.__str__", "generated/skbio.alignment.AlignmentStructure.is_zero_based", "generated/skbio.alignment.AlignmentStructure.set_zero_based", "generated/skbio.alignment.PairAlignPath", "generated/skbio.alignment.PairAlignPath.__eq__", "generated/skbio.alignment.PairAlignPath.__ge__", "generated/skbio.alignment.PairAlignPath.__getstate__", "generated/skbio.alignment.PairAlignPath.__gt__", "generated/skbio.alignment.PairAlignPath.__hash__", "generated/skbio.alignment.PairAlignPath.__le__", "generated/skbio.alignment.PairAlignPath.__lt__", "generated/skbio.alignment.PairAlignPath.__ne__", "generated/skbio.alignment.PairAlignPath.__str__", "generated/skbio.alignment.PairAlignPath.from_bits", "generated/skbio.alignment.PairAlignPath.from_cigar", "generated/skbio.alignment.PairAlignPath.from_coordinates", "generated/skbio.alignment.PairAlignPath.from_indices", "generated/skbio.alignment.PairAlignPath.from_tabular", "generated/skbio.alignment.PairAlignPath.to_bits", "generated/skbio.alignment.PairAlignPath.to_cigar", "generated/skbio.alignment.PairAlignPath.to_coordinates", "generated/skbio.alignment.PairAlignPath.to_indices", "generated/skbio.alignment.StripedSmithWaterman", "generated/skbio.alignment.StripedSmithWaterman.__call__", "generated/skbio.alignment.StripedSmithWaterman.__eq__", "generated/skbio.alignment.StripedSmithWaterman.__ge__", "generated/skbio.alignment.StripedSmithWaterman.__getstate__", "generated/skbio.alignment.StripedSmithWaterman.__gt__", "generated/skbio.alignment.StripedSmithWaterman.__hash__", "generated/skbio.alignment.StripedSmithWaterman.__le__", "generated/skbio.alignment.StripedSmithWaterman.__lt__", "generated/skbio.alignment.StripedSmithWaterman.__ne__", "generated/skbio.alignment.StripedSmithWaterman.__setstate__", "generated/skbio.alignment.StripedSmithWaterman.__str__", "generated/skbio.alignment.TabularMSA", "generated/skbio.alignment.TabularMSA.__bool__", "generated/skbio.alignment.TabularMSA.__contains__", "generated/skbio.alignment.TabularMSA.__copy__", "generated/skbio.alignment.TabularMSA.__deepcopy__", "generated/skbio.alignment.TabularMSA.__eq__", "generated/skbio.alignment.TabularMSA.__ge__", "generated/skbio.alignment.TabularMSA.__getitem__", "generated/skbio.alignment.TabularMSA.__getstate__", "generated/skbio.alignment.TabularMSA.__gt__", "generated/skbio.alignment.TabularMSA.__iter__", "generated/skbio.alignment.TabularMSA.__le__", "generated/skbio.alignment.TabularMSA.__len__", "generated/skbio.alignment.TabularMSA.__lt__", "generated/skbio.alignment.TabularMSA.__ne__", "generated/skbio.alignment.TabularMSA.__reversed__", "generated/skbio.alignment.TabularMSA.__str__", "generated/skbio.alignment.TabularMSA.append", "generated/skbio.alignment.TabularMSA.consensus", "generated/skbio.alignment.TabularMSA.conservation", "generated/skbio.alignment.TabularMSA.extend", "generated/skbio.alignment.TabularMSA.from_dict", "generated/skbio.alignment.TabularMSA.from_path_seqs", "generated/skbio.alignment.TabularMSA.gap_frequencies", "generated/skbio.alignment.TabularMSA.has_metadata", "generated/skbio.alignment.TabularMSA.has_positional_metadata", "generated/skbio.alignment.TabularMSA.iter_positions", "generated/skbio.alignment.TabularMSA.join", "generated/skbio.alignment.TabularMSA.read", "generated/skbio.alignment.TabularMSA.reassign_index", "generated/skbio.alignment.TabularMSA.sort", "generated/skbio.alignment.TabularMSA.to_dict", "generated/skbio.alignment.TabularMSA.write", "generated/skbio.alignment.global_pairwise_align", "generated/skbio.alignment.global_pairwise_align_nucleotide", "generated/skbio.alignment.global_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align", "generated/skbio.alignment.local_pairwise_align_nucleotide", "generated/skbio.alignment.local_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align_ssw", "generated/skbio.alignment.make_identity_substitution_matrix", "generated/skbio.diversity.alpha", "generated/skbio.diversity.alpha.ace", "generated/skbio.diversity.alpha.berger_parker_d", "generated/skbio.diversity.alpha.brillouin_d", "generated/skbio.diversity.alpha.chao1", "generated/skbio.diversity.alpha.chao1_ci", "generated/skbio.diversity.alpha.dominance", "generated/skbio.diversity.alpha.doubles", "generated/skbio.diversity.alpha.enspie", "generated/skbio.diversity.alpha.esty_ci", "generated/skbio.diversity.alpha.faith_pd", "generated/skbio.diversity.alpha.fisher_alpha", "generated/skbio.diversity.alpha.gini_index", "generated/skbio.diversity.alpha.goods_coverage", "generated/skbio.diversity.alpha.heip_e", "generated/skbio.diversity.alpha.kempton_taylor_q", "generated/skbio.diversity.alpha.lladser_ci", "generated/skbio.diversity.alpha.lladser_pe", "generated/skbio.diversity.alpha.margalef", "generated/skbio.diversity.alpha.mcintosh_d", "generated/skbio.diversity.alpha.mcintosh_e", "generated/skbio.diversity.alpha.menhinick", "generated/skbio.diversity.alpha.michaelis_menten_fit", "generated/skbio.diversity.alpha.observed_features", "generated/skbio.diversity.alpha.observed_otus", "generated/skbio.diversity.alpha.osd", "generated/skbio.diversity.alpha.phydiv", "generated/skbio.diversity.alpha.pielou_e", "generated/skbio.diversity.alpha.robbins", "generated/skbio.diversity.alpha.shannon", "generated/skbio.diversity.alpha.simpson", "generated/skbio.diversity.alpha.simpson_e", "generated/skbio.diversity.alpha.singles", "generated/skbio.diversity.alpha.sobs", "generated/skbio.diversity.alpha.strong", "generated/skbio.diversity.alpha_diversity", "generated/skbio.diversity.beta", "generated/skbio.diversity.beta.unweighted_unifrac", "generated/skbio.diversity.beta.weighted_unifrac", "generated/skbio.diversity.beta_diversity", "generated/skbio.diversity.block_beta_diversity", "generated/skbio.diversity.get_alpha_diversity_metrics", "generated/skbio.diversity.get_beta_diversity_metrics", "generated/skbio.diversity.partial_beta_diversity", "generated/skbio.embedding.ProteinEmbedding", "generated/skbio.embedding.ProteinEmbedding.__eq__", "generated/skbio.embedding.ProteinEmbedding.__ge__", "generated/skbio.embedding.ProteinEmbedding.__getstate__", "generated/skbio.embedding.ProteinEmbedding.__gt__", "generated/skbio.embedding.ProteinEmbedding.__hash__", "generated/skbio.embedding.ProteinEmbedding.__le__", "generated/skbio.embedding.ProteinEmbedding.__lt__", "generated/skbio.embedding.ProteinEmbedding.__ne__", "generated/skbio.embedding.ProteinEmbedding.__str__", "generated/skbio.embedding.ProteinEmbedding.bytes", "generated/skbio.embedding.ProteinEmbedding.read", "generated/skbio.embedding.ProteinEmbedding.write", "generated/skbio.embedding.ProteinVector", "generated/skbio.embedding.ProteinVector.__eq__", "generated/skbio.embedding.ProteinVector.__ge__", "generated/skbio.embedding.ProteinVector.__getstate__", "generated/skbio.embedding.ProteinVector.__gt__", "generated/skbio.embedding.ProteinVector.__hash__", "generated/skbio.embedding.ProteinVector.__le__", "generated/skbio.embedding.ProteinVector.__lt__", "generated/skbio.embedding.ProteinVector.__ne__", "generated/skbio.embedding.ProteinVector.__str__", "generated/skbio.embedding.ProteinVector.bytes", "generated/skbio.embedding.ProteinVector.read", "generated/skbio.embedding.ProteinVector.write", "generated/skbio.io.format.binary_dm", "generated/skbio.io.format.biom", "generated/skbio.io.format.blast6", "generated/skbio.io.format.blast7", "generated/skbio.io.format.clustal", "generated/skbio.io.format.embed", "generated/skbio.io.format.embl", "generated/skbio.io.format.fasta", "generated/skbio.io.format.fastq", "generated/skbio.io.format.genbank", "generated/skbio.io.format.gff3", "generated/skbio.io.format.lsmat", "generated/skbio.io.format.newick", "generated/skbio.io.format.ordination", "generated/skbio.io.format.phylip", "generated/skbio.io.format.qseq", "generated/skbio.io.format.sample_metadata", "generated/skbio.io.format.stockholm", "generated/skbio.io.format.taxdump", "generated/skbio.io.registry", "generated/skbio.io.registry.Format", "generated/skbio.io.registry.Format.__eq__", "generated/skbio.io.registry.Format.__ge__", "generated/skbio.io.registry.Format.__getstate__", "generated/skbio.io.registry.Format.__gt__", "generated/skbio.io.registry.Format.__hash__", "generated/skbio.io.registry.Format.__le__", "generated/skbio.io.registry.Format.__lt__", "generated/skbio.io.registry.Format.__ne__", "generated/skbio.io.registry.Format.__str__", "generated/skbio.io.registry.Format.reader", "generated/skbio.io.registry.Format.sniffer", "generated/skbio.io.registry.Format.writer", "generated/skbio.io.registry.IORegistry", "generated/skbio.io.registry.IORegistry.__eq__", "generated/skbio.io.registry.IORegistry.__ge__", "generated/skbio.io.registry.IORegistry.__getstate__", "generated/skbio.io.registry.IORegistry.__gt__", "generated/skbio.io.registry.IORegistry.__hash__", "generated/skbio.io.registry.IORegistry.__le__", "generated/skbio.io.registry.IORegistry.__lt__", "generated/skbio.io.registry.IORegistry.__ne__", "generated/skbio.io.registry.IORegistry.__str__", "generated/skbio.io.registry.IORegistry.add_format", "generated/skbio.io.registry.IORegistry.create_format", "generated/skbio.io.registry.IORegistry.get_reader", "generated/skbio.io.registry.IORegistry.get_sniffer", "generated/skbio.io.registry.IORegistry.get_writer", "generated/skbio.io.registry.IORegistry.list_read_formats", "generated/skbio.io.registry.IORegistry.list_write_formats", "generated/skbio.io.registry.IORegistry.monkey_patch", "generated/skbio.io.registry.IORegistry.read", "generated/skbio.io.registry.IORegistry.sniff", "generated/skbio.io.registry.IORegistry.write", "generated/skbio.io.registry.create_format", "generated/skbio.io.registry.read", "generated/skbio.io.registry.sniff", "generated/skbio.io.registry.write", "generated/skbio.io.util", "generated/skbio.io.util.open", "generated/skbio.io.util.open_file", "generated/skbio.io.util.open_files", "generated/skbio.metadata.CategoricalMetadataColumn", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__", "generated/skbio.metadata.CategoricalMetadataColumn.__le__", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__", "generated/skbio.metadata.CategoricalMetadataColumn.__str__", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing", "generated/skbio.metadata.CategoricalMetadataColumn.get_value", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.save", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe", "generated/skbio.metadata.CategoricalMetadataColumn.to_series", "generated/skbio.metadata.Interval", "generated/skbio.metadata.Interval.__eq__", "generated/skbio.metadata.Interval.__ge__", "generated/skbio.metadata.Interval.__getstate__", "generated/skbio.metadata.Interval.__gt__", "generated/skbio.metadata.Interval.__le__", "generated/skbio.metadata.Interval.__lt__", "generated/skbio.metadata.Interval.__ne__", "generated/skbio.metadata.Interval.__str__", "generated/skbio.metadata.Interval.drop", "generated/skbio.metadata.IntervalMetadata", "generated/skbio.metadata.IntervalMetadata.__copy__", "generated/skbio.metadata.IntervalMetadata.__deepcopy__", "generated/skbio.metadata.IntervalMetadata.__eq__", "generated/skbio.metadata.IntervalMetadata.__ge__", "generated/skbio.metadata.IntervalMetadata.__getstate__", "generated/skbio.metadata.IntervalMetadata.__gt__", "generated/skbio.metadata.IntervalMetadata.__le__", "generated/skbio.metadata.IntervalMetadata.__lt__", "generated/skbio.metadata.IntervalMetadata.__ne__", "generated/skbio.metadata.IntervalMetadata.__str__", "generated/skbio.metadata.IntervalMetadata.add", "generated/skbio.metadata.IntervalMetadata.concat", "generated/skbio.metadata.IntervalMetadata.drop", "generated/skbio.metadata.IntervalMetadata.merge", "generated/skbio.metadata.IntervalMetadata.query", "generated/skbio.metadata.IntervalMetadata.read", "generated/skbio.metadata.IntervalMetadata.sort", "generated/skbio.metadata.IntervalMetadata.write", "generated/skbio.metadata.MetadataColumn", "generated/skbio.metadata.MetadataColumn.__eq__", "generated/skbio.metadata.MetadataColumn.__ge__", "generated/skbio.metadata.MetadataColumn.__getstate__", "generated/skbio.metadata.MetadataColumn.__gt__", "generated/skbio.metadata.MetadataColumn.__le__", "generated/skbio.metadata.MetadataColumn.__lt__", "generated/skbio.metadata.MetadataColumn.__ne__", "generated/skbio.metadata.MetadataColumn.__str__", "generated/skbio.metadata.MetadataColumn.drop_missing_values", "generated/skbio.metadata.MetadataColumn.filter_ids", "generated/skbio.metadata.MetadataColumn.get_ids", "generated/skbio.metadata.MetadataColumn.get_missing", "generated/skbio.metadata.MetadataColumn.get_value", "generated/skbio.metadata.MetadataColumn.has_missing_values", "generated/skbio.metadata.MetadataColumn.save", "generated/skbio.metadata.MetadataColumn.to_dataframe", "generated/skbio.metadata.MetadataColumn.to_series", "generated/skbio.metadata.NumericMetadataColumn", "generated/skbio.metadata.NumericMetadataColumn.__eq__", "generated/skbio.metadata.NumericMetadataColumn.__ge__", "generated/skbio.metadata.NumericMetadataColumn.__getstate__", "generated/skbio.metadata.NumericMetadataColumn.__gt__", "generated/skbio.metadata.NumericMetadataColumn.__le__", "generated/skbio.metadata.NumericMetadataColumn.__lt__", "generated/skbio.metadata.NumericMetadataColumn.__ne__", "generated/skbio.metadata.NumericMetadataColumn.__str__", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values", "generated/skbio.metadata.NumericMetadataColumn.filter_ids", "generated/skbio.metadata.NumericMetadataColumn.get_ids", "generated/skbio.metadata.NumericMetadataColumn.get_missing", "generated/skbio.metadata.NumericMetadataColumn.get_value", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values", "generated/skbio.metadata.NumericMetadataColumn.save", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe", "generated/skbio.metadata.NumericMetadataColumn.to_series", "generated/skbio.metadata.SampleMetadata", "generated/skbio.metadata.SampleMetadata.__eq__", "generated/skbio.metadata.SampleMetadata.__ge__", "generated/skbio.metadata.SampleMetadata.__getstate__", "generated/skbio.metadata.SampleMetadata.__gt__", "generated/skbio.metadata.SampleMetadata.__le__", "generated/skbio.metadata.SampleMetadata.__lt__", "generated/skbio.metadata.SampleMetadata.__ne__", "generated/skbio.metadata.SampleMetadata.__str__", "generated/skbio.metadata.SampleMetadata.filter_columns", "generated/skbio.metadata.SampleMetadata.filter_ids", "generated/skbio.metadata.SampleMetadata.get_column", "generated/skbio.metadata.SampleMetadata.get_ids", "generated/skbio.metadata.SampleMetadata.load", "generated/skbio.metadata.SampleMetadata.merge", "generated/skbio.metadata.SampleMetadata.read", "generated/skbio.metadata.SampleMetadata.save", "generated/skbio.metadata.SampleMetadata.to_dataframe", "generated/skbio.metadata.SampleMetadata.write", "generated/skbio.sequence.DNA", "generated/skbio.sequence.DNA.__bool__", "generated/skbio.sequence.DNA.__contains__", "generated/skbio.sequence.DNA.__copy__", "generated/skbio.sequence.DNA.__deepcopy__", "generated/skbio.sequence.DNA.__eq__", "generated/skbio.sequence.DNA.__ge__", "generated/skbio.sequence.DNA.__getitem__", "generated/skbio.sequence.DNA.__getstate__", "generated/skbio.sequence.DNA.__gt__", "generated/skbio.sequence.DNA.__iter__", "generated/skbio.sequence.DNA.__le__", "generated/skbio.sequence.DNA.__len__", "generated/skbio.sequence.DNA.__lt__", "generated/skbio.sequence.DNA.__ne__", "generated/skbio.sequence.DNA.__reversed__", "generated/skbio.sequence.DNA.__str__", "generated/skbio.sequence.DNA.complement", "generated/skbio.sequence.DNA.concat", "generated/skbio.sequence.DNA.count", "generated/skbio.sequence.DNA.definites", "generated/skbio.sequence.DNA.degap", "generated/skbio.sequence.DNA.degenerates", "generated/skbio.sequence.DNA.distance", "generated/skbio.sequence.DNA.expand_degenerates", "generated/skbio.sequence.DNA.find_motifs", "generated/skbio.sequence.DNA.find_with_regex", "generated/skbio.sequence.DNA.frequencies", "generated/skbio.sequence.DNA.gaps", "generated/skbio.sequence.DNA.gc_content", "generated/skbio.sequence.DNA.gc_frequency", "generated/skbio.sequence.DNA.has_definites", "generated/skbio.sequence.DNA.has_degenerates", "generated/skbio.sequence.DNA.has_gaps", "generated/skbio.sequence.DNA.has_interval_metadata", "generated/skbio.sequence.DNA.has_metadata", "generated/skbio.sequence.DNA.has_nondegenerates", "generated/skbio.sequence.DNA.has_positional_metadata", "generated/skbio.sequence.DNA.index", "generated/skbio.sequence.DNA.is_reverse_complement", "generated/skbio.sequence.DNA.iter_contiguous", "generated/skbio.sequence.DNA.iter_kmers", "generated/skbio.sequence.DNA.kmer_frequencies", "generated/skbio.sequence.DNA.lowercase", "generated/skbio.sequence.DNA.match_frequency", "generated/skbio.sequence.DNA.matches", "generated/skbio.sequence.DNA.mismatch_frequency", "generated/skbio.sequence.DNA.mismatches", "generated/skbio.sequence.DNA.nondegenerates", "generated/skbio.sequence.DNA.read", "generated/skbio.sequence.DNA.replace", "generated/skbio.sequence.DNA.reverse_complement", "generated/skbio.sequence.DNA.to_definites", "generated/skbio.sequence.DNA.to_indices", "generated/skbio.sequence.DNA.to_regex", "generated/skbio.sequence.DNA.transcribe", "generated/skbio.sequence.DNA.translate", "generated/skbio.sequence.DNA.translate_six_frames", "generated/skbio.sequence.DNA.write", "generated/skbio.sequence.GeneticCode", "generated/skbio.sequence.GeneticCode.__eq__", "generated/skbio.sequence.GeneticCode.__ge__", "generated/skbio.sequence.GeneticCode.__getstate__", "generated/skbio.sequence.GeneticCode.__gt__", "generated/skbio.sequence.GeneticCode.__le__", "generated/skbio.sequence.GeneticCode.__lt__", "generated/skbio.sequence.GeneticCode.__ne__", "generated/skbio.sequence.GeneticCode.__str__", "generated/skbio.sequence.GeneticCode.from_ncbi", "generated/skbio.sequence.GeneticCode.translate", "generated/skbio.sequence.GeneticCode.translate_six_frames", "generated/skbio.sequence.GrammaredSequence", "generated/skbio.sequence.GrammaredSequence.__bool__", "generated/skbio.sequence.GrammaredSequence.__contains__", "generated/skbio.sequence.GrammaredSequence.__copy__", "generated/skbio.sequence.GrammaredSequence.__deepcopy__", "generated/skbio.sequence.GrammaredSequence.__eq__", "generated/skbio.sequence.GrammaredSequence.__ge__", "generated/skbio.sequence.GrammaredSequence.__getitem__", "generated/skbio.sequence.GrammaredSequence.__getstate__", "generated/skbio.sequence.GrammaredSequence.__gt__", "generated/skbio.sequence.GrammaredSequence.__iter__", "generated/skbio.sequence.GrammaredSequence.__le__", "generated/skbio.sequence.GrammaredSequence.__len__", "generated/skbio.sequence.GrammaredSequence.__lt__", "generated/skbio.sequence.GrammaredSequence.__ne__", "generated/skbio.sequence.GrammaredSequence.__reversed__", "generated/skbio.sequence.GrammaredSequence.__str__", "generated/skbio.sequence.GrammaredSequence.concat", "generated/skbio.sequence.GrammaredSequence.count", "generated/skbio.sequence.GrammaredSequence.definites", "generated/skbio.sequence.GrammaredSequence.degap", "generated/skbio.sequence.GrammaredSequence.degenerates", "generated/skbio.sequence.GrammaredSequence.distance", "generated/skbio.sequence.GrammaredSequence.expand_degenerates", "generated/skbio.sequence.GrammaredSequence.find_motifs", "generated/skbio.sequence.GrammaredSequence.find_with_regex", "generated/skbio.sequence.GrammaredSequence.frequencies", "generated/skbio.sequence.GrammaredSequence.gaps", "generated/skbio.sequence.GrammaredSequence.has_definites", "generated/skbio.sequence.GrammaredSequence.has_degenerates", "generated/skbio.sequence.GrammaredSequence.has_gaps", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata", "generated/skbio.sequence.GrammaredSequence.has_metadata", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata", "generated/skbio.sequence.GrammaredSequence.index", "generated/skbio.sequence.GrammaredSequence.iter_contiguous", "generated/skbio.sequence.GrammaredSequence.iter_kmers", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies", "generated/skbio.sequence.GrammaredSequence.lowercase", "generated/skbio.sequence.GrammaredSequence.match_frequency", "generated/skbio.sequence.GrammaredSequence.matches", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency", "generated/skbio.sequence.GrammaredSequence.mismatches", "generated/skbio.sequence.GrammaredSequence.nondegenerates", "generated/skbio.sequence.GrammaredSequence.read", "generated/skbio.sequence.GrammaredSequence.replace", "generated/skbio.sequence.GrammaredSequence.to_definites", "generated/skbio.sequence.GrammaredSequence.to_indices", "generated/skbio.sequence.GrammaredSequence.to_regex", "generated/skbio.sequence.GrammaredSequence.write", "generated/skbio.sequence.Protein", "generated/skbio.sequence.Protein.__bool__", "generated/skbio.sequence.Protein.__contains__", "generated/skbio.sequence.Protein.__copy__", "generated/skbio.sequence.Protein.__deepcopy__", "generated/skbio.sequence.Protein.__eq__", "generated/skbio.sequence.Protein.__ge__", "generated/skbio.sequence.Protein.__getitem__", "generated/skbio.sequence.Protein.__getstate__", "generated/skbio.sequence.Protein.__gt__", "generated/skbio.sequence.Protein.__iter__", "generated/skbio.sequence.Protein.__le__", "generated/skbio.sequence.Protein.__len__", "generated/skbio.sequence.Protein.__lt__", "generated/skbio.sequence.Protein.__ne__", "generated/skbio.sequence.Protein.__reversed__", "generated/skbio.sequence.Protein.__str__", "generated/skbio.sequence.Protein.concat", "generated/skbio.sequence.Protein.count", "generated/skbio.sequence.Protein.definites", "generated/skbio.sequence.Protein.degap", "generated/skbio.sequence.Protein.degenerates", "generated/skbio.sequence.Protein.distance", "generated/skbio.sequence.Protein.expand_degenerates", "generated/skbio.sequence.Protein.find_motifs", "generated/skbio.sequence.Protein.find_with_regex", "generated/skbio.sequence.Protein.frequencies", "generated/skbio.sequence.Protein.gaps", "generated/skbio.sequence.Protein.has_definites", "generated/skbio.sequence.Protein.has_degenerates", "generated/skbio.sequence.Protein.has_gaps", "generated/skbio.sequence.Protein.has_interval_metadata", "generated/skbio.sequence.Protein.has_metadata", "generated/skbio.sequence.Protein.has_nondegenerates", "generated/skbio.sequence.Protein.has_positional_metadata", "generated/skbio.sequence.Protein.has_stops", "generated/skbio.sequence.Protein.index", "generated/skbio.sequence.Protein.iter_contiguous", "generated/skbio.sequence.Protein.iter_kmers", "generated/skbio.sequence.Protein.kmer_frequencies", "generated/skbio.sequence.Protein.lowercase", "generated/skbio.sequence.Protein.match_frequency", "generated/skbio.sequence.Protein.matches", "generated/skbio.sequence.Protein.mismatch_frequency", "generated/skbio.sequence.Protein.mismatches", "generated/skbio.sequence.Protein.nondegenerates", "generated/skbio.sequence.Protein.read", "generated/skbio.sequence.Protein.replace", "generated/skbio.sequence.Protein.stops", "generated/skbio.sequence.Protein.to_definites", "generated/skbio.sequence.Protein.to_indices", "generated/skbio.sequence.Protein.to_regex", "generated/skbio.sequence.Protein.write", "generated/skbio.sequence.RNA", "generated/skbio.sequence.RNA.__bool__", "generated/skbio.sequence.RNA.__contains__", "generated/skbio.sequence.RNA.__copy__", "generated/skbio.sequence.RNA.__deepcopy__", "generated/skbio.sequence.RNA.__eq__", "generated/skbio.sequence.RNA.__ge__", "generated/skbio.sequence.RNA.__getitem__", "generated/skbio.sequence.RNA.__getstate__", "generated/skbio.sequence.RNA.__gt__", "generated/skbio.sequence.RNA.__iter__", "generated/skbio.sequence.RNA.__le__", "generated/skbio.sequence.RNA.__len__", "generated/skbio.sequence.RNA.__lt__", "generated/skbio.sequence.RNA.__ne__", "generated/skbio.sequence.RNA.__reversed__", "generated/skbio.sequence.RNA.__str__", "generated/skbio.sequence.RNA.complement", "generated/skbio.sequence.RNA.concat", "generated/skbio.sequence.RNA.count", "generated/skbio.sequence.RNA.definites", "generated/skbio.sequence.RNA.degap", "generated/skbio.sequence.RNA.degenerates", "generated/skbio.sequence.RNA.distance", "generated/skbio.sequence.RNA.expand_degenerates", "generated/skbio.sequence.RNA.find_motifs", "generated/skbio.sequence.RNA.find_with_regex", "generated/skbio.sequence.RNA.frequencies", "generated/skbio.sequence.RNA.gaps", "generated/skbio.sequence.RNA.gc_content", "generated/skbio.sequence.RNA.gc_frequency", "generated/skbio.sequence.RNA.has_definites", "generated/skbio.sequence.RNA.has_degenerates", "generated/skbio.sequence.RNA.has_gaps", "generated/skbio.sequence.RNA.has_interval_metadata", "generated/skbio.sequence.RNA.has_metadata", "generated/skbio.sequence.RNA.has_nondegenerates", "generated/skbio.sequence.RNA.has_positional_metadata", "generated/skbio.sequence.RNA.index", "generated/skbio.sequence.RNA.is_reverse_complement", "generated/skbio.sequence.RNA.iter_contiguous", "generated/skbio.sequence.RNA.iter_kmers", "generated/skbio.sequence.RNA.kmer_frequencies", "generated/skbio.sequence.RNA.lowercase", "generated/skbio.sequence.RNA.match_frequency", "generated/skbio.sequence.RNA.matches", "generated/skbio.sequence.RNA.mismatch_frequency", "generated/skbio.sequence.RNA.mismatches", "generated/skbio.sequence.RNA.nondegenerates", "generated/skbio.sequence.RNA.read", "generated/skbio.sequence.RNA.replace", "generated/skbio.sequence.RNA.reverse_complement", "generated/skbio.sequence.RNA.reverse_transcribe", "generated/skbio.sequence.RNA.to_definites", "generated/skbio.sequence.RNA.to_indices", "generated/skbio.sequence.RNA.to_regex", "generated/skbio.sequence.RNA.translate", "generated/skbio.sequence.RNA.translate_six_frames", "generated/skbio.sequence.RNA.write", "generated/skbio.sequence.Sequence", "generated/skbio.sequence.Sequence.__bool__", "generated/skbio.sequence.Sequence.__contains__", "generated/skbio.sequence.Sequence.__copy__", "generated/skbio.sequence.Sequence.__deepcopy__", "generated/skbio.sequence.Sequence.__eq__", "generated/skbio.sequence.Sequence.__ge__", "generated/skbio.sequence.Sequence.__getitem__", "generated/skbio.sequence.Sequence.__getstate__", "generated/skbio.sequence.Sequence.__gt__", "generated/skbio.sequence.Sequence.__iter__", "generated/skbio.sequence.Sequence.__le__", "generated/skbio.sequence.Sequence.__len__", "generated/skbio.sequence.Sequence.__lt__", "generated/skbio.sequence.Sequence.__ne__", "generated/skbio.sequence.Sequence.__reversed__", "generated/skbio.sequence.Sequence.__str__", "generated/skbio.sequence.Sequence.concat", "generated/skbio.sequence.Sequence.count", "generated/skbio.sequence.Sequence.distance", "generated/skbio.sequence.Sequence.find_with_regex", "generated/skbio.sequence.Sequence.frequencies", "generated/skbio.sequence.Sequence.has_interval_metadata", "generated/skbio.sequence.Sequence.has_metadata", "generated/skbio.sequence.Sequence.has_positional_metadata", "generated/skbio.sequence.Sequence.index", "generated/skbio.sequence.Sequence.iter_contiguous", "generated/skbio.sequence.Sequence.iter_kmers", "generated/skbio.sequence.Sequence.kmer_frequencies", "generated/skbio.sequence.Sequence.lowercase", "generated/skbio.sequence.Sequence.match_frequency", "generated/skbio.sequence.Sequence.matches", "generated/skbio.sequence.Sequence.mismatch_frequency", "generated/skbio.sequence.Sequence.mismatches", "generated/skbio.sequence.Sequence.read", "generated/skbio.sequence.Sequence.replace", "generated/skbio.sequence.Sequence.to_indices", "generated/skbio.sequence.Sequence.write", "generated/skbio.sequence.SubstitutionMatrix", "generated/skbio.sequence.SubstitutionMatrix.__contains__", "generated/skbio.sequence.SubstitutionMatrix.__eq__", "generated/skbio.sequence.SubstitutionMatrix.__ge__", "generated/skbio.sequence.SubstitutionMatrix.__getitem__", "generated/skbio.sequence.SubstitutionMatrix.__getstate__", "generated/skbio.sequence.SubstitutionMatrix.__gt__", "generated/skbio.sequence.SubstitutionMatrix.__le__", "generated/skbio.sequence.SubstitutionMatrix.__lt__", "generated/skbio.sequence.SubstitutionMatrix.__ne__", "generated/skbio.sequence.SubstitutionMatrix.__str__", "generated/skbio.sequence.SubstitutionMatrix.between", "generated/skbio.sequence.SubstitutionMatrix.by_name", "generated/skbio.sequence.SubstitutionMatrix.copy", "generated/skbio.sequence.SubstitutionMatrix.filter", "generated/skbio.sequence.SubstitutionMatrix.from_dict", "generated/skbio.sequence.SubstitutionMatrix.from_iterable", "generated/skbio.sequence.SubstitutionMatrix.get_names", "generated/skbio.sequence.SubstitutionMatrix.identity", "generated/skbio.sequence.SubstitutionMatrix.index", "generated/skbio.sequence.SubstitutionMatrix.plot", "generated/skbio.sequence.SubstitutionMatrix.read", "generated/skbio.sequence.SubstitutionMatrix.redundant_form", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame", "generated/skbio.sequence.SubstitutionMatrix.to_dict", "generated/skbio.sequence.SubstitutionMatrix.transpose", "generated/skbio.sequence.SubstitutionMatrix.within", "generated/skbio.sequence.SubstitutionMatrix.write", "generated/skbio.sequence.distance", "generated/skbio.sequence.distance.hamming", "generated/skbio.sequence.distance.kmer_distance", "generated/skbio.stats.composition", "generated/skbio.stats.composition.alr", "generated/skbio.stats.composition.alr_inv", "generated/skbio.stats.composition.ancom", "generated/skbio.stats.composition.centralize", "generated/skbio.stats.composition.closure", "generated/skbio.stats.composition.clr", "generated/skbio.stats.composition.clr_inv", "generated/skbio.stats.composition.dirmult_ttest", "generated/skbio.stats.composition.ilr", "generated/skbio.stats.composition.ilr_inv", "generated/skbio.stats.composition.inner", "generated/skbio.stats.composition.multi_replace", "generated/skbio.stats.composition.multiplicative_replacement", "generated/skbio.stats.composition.pairwise_vlr", "generated/skbio.stats.composition.perturb", "generated/skbio.stats.composition.perturb_inv", "generated/skbio.stats.composition.power", "generated/skbio.stats.composition.sbp_basis", "generated/skbio.stats.composition.tree_basis", "generated/skbio.stats.composition.vlr", "generated/skbio.stats.distance", "generated/skbio.stats.distance.DissimilarityMatrix", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__", "generated/skbio.stats.distance.DissimilarityMatrix.__le__", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__", "generated/skbio.stats.distance.DissimilarityMatrix.__str__", "generated/skbio.stats.distance.DissimilarityMatrix.between", "generated/skbio.stats.distance.DissimilarityMatrix.copy", "generated/skbio.stats.distance.DissimilarityMatrix.filter", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable", "generated/skbio.stats.distance.DissimilarityMatrix.index", "generated/skbio.stats.distance.DissimilarityMatrix.plot", "generated/skbio.stats.distance.DissimilarityMatrix.read", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame", "generated/skbio.stats.distance.DissimilarityMatrix.transpose", "generated/skbio.stats.distance.DissimilarityMatrix.within", "generated/skbio.stats.distance.DissimilarityMatrix.write", "generated/skbio.stats.distance.DistanceMatrix", "generated/skbio.stats.distance.DistanceMatrix.__contains__", "generated/skbio.stats.distance.DistanceMatrix.__eq__", "generated/skbio.stats.distance.DistanceMatrix.__ge__", "generated/skbio.stats.distance.DistanceMatrix.__getitem__", "generated/skbio.stats.distance.DistanceMatrix.__getstate__", "generated/skbio.stats.distance.DistanceMatrix.__gt__", "generated/skbio.stats.distance.DistanceMatrix.__le__", "generated/skbio.stats.distance.DistanceMatrix.__lt__", "generated/skbio.stats.distance.DistanceMatrix.__ne__", "generated/skbio.stats.distance.DistanceMatrix.__str__", "generated/skbio.stats.distance.DistanceMatrix.between", "generated/skbio.stats.distance.DistanceMatrix.condensed_form", "generated/skbio.stats.distance.DistanceMatrix.copy", "generated/skbio.stats.distance.DistanceMatrix.filter", "generated/skbio.stats.distance.DistanceMatrix.from_iterable", "generated/skbio.stats.distance.DistanceMatrix.index", "generated/skbio.stats.distance.DistanceMatrix.permute", "generated/skbio.stats.distance.DistanceMatrix.plot", "generated/skbio.stats.distance.DistanceMatrix.read", "generated/skbio.stats.distance.DistanceMatrix.redundant_form", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame", "generated/skbio.stats.distance.DistanceMatrix.to_series", "generated/skbio.stats.distance.DistanceMatrix.transpose", "generated/skbio.stats.distance.DistanceMatrix.within", "generated/skbio.stats.distance.DistanceMatrix.write", "generated/skbio.stats.distance.anosim", "generated/skbio.stats.distance.bioenv", "generated/skbio.stats.distance.mantel", "generated/skbio.stats.distance.permanova", "generated/skbio.stats.distance.permdisp", "generated/skbio.stats.distance.pwmantel", "generated/skbio.stats.distance.randdm", "generated/skbio.stats.evolve", "generated/skbio.stats.evolve.hommola_cospeciation", "generated/skbio.stats.gradient", "generated/skbio.stats.gradient.AverageGradientANOVA", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.CategoryResults", "generated/skbio.stats.gradient.CategoryResults.__eq__", "generated/skbio.stats.gradient.CategoryResults.__ge__", "generated/skbio.stats.gradient.CategoryResults.__getstate__", "generated/skbio.stats.gradient.CategoryResults.__gt__", "generated/skbio.stats.gradient.CategoryResults.__hash__", "generated/skbio.stats.gradient.CategoryResults.__le__", "generated/skbio.stats.gradient.CategoryResults.__lt__", "generated/skbio.stats.gradient.CategoryResults.__ne__", "generated/skbio.stats.gradient.CategoryResults.__str__", "generated/skbio.stats.gradient.CategoryResults.to_files", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVA", "generated/skbio.stats.gradient.GradientANOVA.__eq__", "generated/skbio.stats.gradient.GradientANOVA.__ge__", "generated/skbio.stats.gradient.GradientANOVA.__getstate__", "generated/skbio.stats.gradient.GradientANOVA.__gt__", "generated/skbio.stats.gradient.GradientANOVA.__hash__", "generated/skbio.stats.gradient.GradientANOVA.__le__", "generated/skbio.stats.gradient.GradientANOVA.__lt__", "generated/skbio.stats.gradient.GradientANOVA.__ne__", "generated/skbio.stats.gradient.GradientANOVA.__str__", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVAResults", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__", "generated/skbio.stats.gradient.GradientANOVAResults.__le__", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__", "generated/skbio.stats.gradient.GradientANOVAResults.__str__", "generated/skbio.stats.gradient.GradientANOVAResults.to_files", "generated/skbio.stats.gradient.GroupResults", "generated/skbio.stats.gradient.GroupResults.__eq__", "generated/skbio.stats.gradient.GroupResults.__ge__", "generated/skbio.stats.gradient.GroupResults.__getstate__", "generated/skbio.stats.gradient.GroupResults.__gt__", "generated/skbio.stats.gradient.GroupResults.__hash__", "generated/skbio.stats.gradient.GroupResults.__le__", "generated/skbio.stats.gradient.GroupResults.__lt__", "generated/skbio.stats.gradient.GroupResults.__ne__", "generated/skbio.stats.gradient.GroupResults.__str__", "generated/skbio.stats.gradient.GroupResults.to_files", "generated/skbio.stats.gradient.TrajectoryGradientANOVA", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.isubsample", "generated/skbio.stats.ordination", "generated/skbio.stats.ordination.OrdinationResults", "generated/skbio.stats.ordination.OrdinationResults.__eq__", "generated/skbio.stats.ordination.OrdinationResults.__ge__", "generated/skbio.stats.ordination.OrdinationResults.__getstate__", "generated/skbio.stats.ordination.OrdinationResults.__gt__", "generated/skbio.stats.ordination.OrdinationResults.__hash__", "generated/skbio.stats.ordination.OrdinationResults.__le__", "generated/skbio.stats.ordination.OrdinationResults.__lt__", "generated/skbio.stats.ordination.OrdinationResults.__ne__", "generated/skbio.stats.ordination.OrdinationResults.__str__", "generated/skbio.stats.ordination.OrdinationResults.plot", "generated/skbio.stats.ordination.OrdinationResults.read", "generated/skbio.stats.ordination.OrdinationResults.write", "generated/skbio.stats.ordination.ca", "generated/skbio.stats.ordination.cca", "generated/skbio.stats.ordination.corr", "generated/skbio.stats.ordination.e_matrix", "generated/skbio.stats.ordination.f_matrix", "generated/skbio.stats.ordination.mean_and_std", "generated/skbio.stats.ordination.pcoa", "generated/skbio.stats.ordination.pcoa_biplot", "generated/skbio.stats.ordination.rda", "generated/skbio.stats.ordination.scale", "generated/skbio.stats.ordination.svd_rank", "generated/skbio.stats.power", "generated/skbio.stats.power.confidence_bound", "generated/skbio.stats.power.paired_subsamples", "generated/skbio.stats.power.subsample_paired_power", "generated/skbio.stats.power.subsample_power", "generated/skbio.stats.subsample_counts", "generated/skbio.table.Table", "generated/skbio.table.Table.__eq__", "generated/skbio.table.Table.__ge__", "generated/skbio.table.Table.__getitem__", "generated/skbio.table.Table.__getstate__", "generated/skbio.table.Table.__gt__", "generated/skbio.table.Table.__iter__", "generated/skbio.table.Table.__le__", "generated/skbio.table.Table.__lt__", "generated/skbio.table.Table.__ne__", "generated/skbio.table.Table.__str__", "generated/skbio.table.Table.add_group_metadata", "generated/skbio.table.Table.add_metadata", "generated/skbio.table.Table.align_to", "generated/skbio.table.Table.align_to_dataframe", "generated/skbio.table.Table.align_tree", "generated/skbio.table.Table.collapse", "generated/skbio.table.Table.concat", "generated/skbio.table.Table.copy", "generated/skbio.table.Table.data", "generated/skbio.table.Table.del_metadata", "generated/skbio.table.Table.delimited_self", "generated/skbio.table.Table.descriptive_equality", "generated/skbio.table.Table.exists", "generated/skbio.table.Table.filter", "generated/skbio.table.Table.from_adjacency", "generated/skbio.table.Table.from_hdf5", "generated/skbio.table.Table.from_json", "generated/skbio.table.Table.from_tsv", "generated/skbio.table.Table.get_table_density", "generated/skbio.table.Table.get_value_by_ids", "generated/skbio.table.Table.group_metadata", "generated/skbio.table.Table.head", "generated/skbio.table.Table.ids", "generated/skbio.table.Table.index", "generated/skbio.table.Table.is_empty", "generated/skbio.table.Table.iter", "generated/skbio.table.Table.iter_data", "generated/skbio.table.Table.iter_pairwise", "generated/skbio.table.Table.length", "generated/skbio.table.Table.max", "generated/skbio.table.Table.merge", "generated/skbio.table.Table.metadata", "generated/skbio.table.Table.metadata_to_dataframe", "generated/skbio.table.Table.min", "generated/skbio.table.Table.nonzero", "generated/skbio.table.Table.nonzero_counts", "generated/skbio.table.Table.norm", "generated/skbio.table.Table.pa", "generated/skbio.table.Table.partition", "generated/skbio.table.Table.rankdata", "generated/skbio.table.Table.read", "generated/skbio.table.Table.reduce", "generated/skbio.table.Table.remove_empty", "generated/skbio.table.Table.sort", "generated/skbio.table.Table.sort_order", "generated/skbio.table.Table.subsample", "generated/skbio.table.Table.sum", "generated/skbio.table.Table.to_anndata", "generated/skbio.table.Table.to_dataframe", "generated/skbio.table.Table.to_hdf5", "generated/skbio.table.Table.to_json", "generated/skbio.table.Table.to_tsv", "generated/skbio.table.Table.transform", "generated/skbio.table.Table.transpose", "generated/skbio.table.Table.update_ids", "generated/skbio.table.Table.write", "generated/skbio.table.example_table", "generated/skbio.tree.TreeNode", "generated/skbio.tree.TreeNode.__copy__", "generated/skbio.tree.TreeNode.__deepcopy__", "generated/skbio.tree.TreeNode.__eq__", "generated/skbio.tree.TreeNode.__ge__", "generated/skbio.tree.TreeNode.__getitem__", "generated/skbio.tree.TreeNode.__getstate__", "generated/skbio.tree.TreeNode.__gt__", "generated/skbio.tree.TreeNode.__hash__", "generated/skbio.tree.TreeNode.__iter__", "generated/skbio.tree.TreeNode.__le__", "generated/skbio.tree.TreeNode.__len__", "generated/skbio.tree.TreeNode.__lt__", "generated/skbio.tree.TreeNode.__ne__", "generated/skbio.tree.TreeNode.__str__", "generated/skbio.tree.TreeNode.accumulate_to_ancestor", "generated/skbio.tree.TreeNode.ancestors", "generated/skbio.tree.TreeNode.append", "generated/skbio.tree.TreeNode.ascii_art", "generated/skbio.tree.TreeNode.assign_ids", "generated/skbio.tree.TreeNode.assign_supports", "generated/skbio.tree.TreeNode.bifurcate", "generated/skbio.tree.TreeNode.cache_attr", "generated/skbio.tree.TreeNode.compare_rfd", "generated/skbio.tree.TreeNode.compare_subsets", "generated/skbio.tree.TreeNode.compare_tip_distances", "generated/skbio.tree.TreeNode.copy", "generated/skbio.tree.TreeNode.count", "generated/skbio.tree.TreeNode.create_caches", "generated/skbio.tree.TreeNode.deepcopy", "generated/skbio.tree.TreeNode.descending_branch_length", "generated/skbio.tree.TreeNode.distance", "generated/skbio.tree.TreeNode.extend", "generated/skbio.tree.TreeNode.find", "generated/skbio.tree.TreeNode.find_all", "generated/skbio.tree.TreeNode.find_by_func", "generated/skbio.tree.TreeNode.find_by_id", "generated/skbio.tree.TreeNode.from_linkage_matrix", "generated/skbio.tree.TreeNode.from_taxdump", "generated/skbio.tree.TreeNode.from_taxonomy", "generated/skbio.tree.TreeNode.get_max_distance", "generated/skbio.tree.TreeNode.has_children", "generated/skbio.tree.TreeNode.index_tree", "generated/skbio.tree.TreeNode.invalidate_caches", "generated/skbio.tree.TreeNode.is_root", "generated/skbio.tree.TreeNode.is_tip", "generated/skbio.tree.TreeNode.lca", "generated/skbio.tree.TreeNode.levelorder", "generated/skbio.tree.TreeNode.lowest_common_ancestor", "generated/skbio.tree.TreeNode.neighbors", "generated/skbio.tree.TreeNode.non_tips", "generated/skbio.tree.TreeNode.observed_node_counts", "generated/skbio.tree.TreeNode.pop", "generated/skbio.tree.TreeNode.postorder", "generated/skbio.tree.TreeNode.pre_and_postorder", "generated/skbio.tree.TreeNode.preorder", "generated/skbio.tree.TreeNode.prune", "generated/skbio.tree.TreeNode.read", "generated/skbio.tree.TreeNode.remove", "generated/skbio.tree.TreeNode.remove_deleted", "generated/skbio.tree.TreeNode.root", "generated/skbio.tree.TreeNode.root_at", "generated/skbio.tree.TreeNode.root_at_midpoint", "generated/skbio.tree.TreeNode.shear", "generated/skbio.tree.TreeNode.shuffle", "generated/skbio.tree.TreeNode.siblings", "generated/skbio.tree.TreeNode.subset", "generated/skbio.tree.TreeNode.subsets", "generated/skbio.tree.TreeNode.subtree", "generated/skbio.tree.TreeNode.tip_tip_distances", "generated/skbio.tree.TreeNode.tips", "generated/skbio.tree.TreeNode.to_array", "generated/skbio.tree.TreeNode.to_taxonomy", "generated/skbio.tree.TreeNode.traverse", "generated/skbio.tree.TreeNode.unpack", "generated/skbio.tree.TreeNode.unpack_by_func", "generated/skbio.tree.TreeNode.unrooted_copy", "generated/skbio.tree.TreeNode.unrooted_deepcopy", "generated/skbio.tree.TreeNode.write", "generated/skbio.tree.majority_rule", "generated/skbio.tree.nj", "generated/skbio.util.EfficiencyWarning", "generated/skbio.util.RepresentationWarning", "generated/skbio.util.assert_data_frame_almost_equal", "generated/skbio.util.assert_ordination_results_equal", "generated/skbio.util.cardinal_to_ordinal", "generated/skbio.util.classproperty", "generated/skbio.util.classproperty.__delete__", "generated/skbio.util.classproperty.__eq__", "generated/skbio.util.classproperty.__ge__", "generated/skbio.util.classproperty.__get__", "generated/skbio.util.classproperty.__getstate__", "generated/skbio.util.classproperty.__gt__", "generated/skbio.util.classproperty.__hash__", "generated/skbio.util.classproperty.__le__", "generated/skbio.util.classproperty.__lt__", "generated/skbio.util.classproperty.__ne__", "generated/skbio.util.classproperty.__set__", "generated/skbio.util.classproperty.__set_name__", "generated/skbio.util.classproperty.__str__", "generated/skbio.util.classproperty.deleter", "generated/skbio.util.classproperty.getter", "generated/skbio.util.classproperty.setter", "generated/skbio.util.find_duplicates", "generated/skbio.util.get_data_path", "generated/skbio.util.safe_md5", "generated/skbio.workflow.Workflow", "generated/skbio.workflow.Workflow.__call__", "generated/skbio.workflow.Workflow.__eq__", "generated/skbio.workflow.Workflow.__ge__", "generated/skbio.workflow.Workflow.__getstate__", "generated/skbio.workflow.Workflow.__gt__", "generated/skbio.workflow.Workflow.__hash__", "generated/skbio.workflow.Workflow.__le__", "generated/skbio.workflow.Workflow.__lt__", "generated/skbio.workflow.Workflow.__ne__", "generated/skbio.workflow.Workflow.__str__", "generated/skbio.workflow.Workflow.initialize_state", "generated/skbio.workflow.method", "generated/skbio.workflow.method.__call__", "generated/skbio.workflow.method.__eq__", "generated/skbio.workflow.method.__ge__", "generated/skbio.workflow.method.__getstate__", "generated/skbio.workflow.method.__gt__", "generated/skbio.workflow.method.__hash__", "generated/skbio.workflow.method.__le__", "generated/skbio.workflow.method.__lt__", "generated/skbio.workflow.method.__ne__", "generated/skbio.workflow.method.__str__", "generated/skbio.workflow.requires", "generated/skbio.workflow.requires.__call__", "generated/skbio.workflow.requires.__eq__", "generated/skbio.workflow.requires.__ge__", "generated/skbio.workflow.requires.__getstate__", "generated/skbio.workflow.requires.__gt__", "generated/skbio.workflow.requires.__hash__", "generated/skbio.workflow.requires.__le__", "generated/skbio.workflow.requires.__lt__", "generated/skbio.workflow.requires.__ne__", "generated/skbio.workflow.requires.__str__", "index", "io", "metadata", "sequence", "stats", "table", "tree", "util", "workflow"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["alignment.rst", "diversity.rst", "embedding.rst", "generated/skbio.alignment.AlignPath.rst", "generated/skbio.alignment.AlignPath.__eq__.rst", "generated/skbio.alignment.AlignPath.__ge__.rst", "generated/skbio.alignment.AlignPath.__getstate__.rst", "generated/skbio.alignment.AlignPath.__gt__.rst", "generated/skbio.alignment.AlignPath.__hash__.rst", "generated/skbio.alignment.AlignPath.__le__.rst", "generated/skbio.alignment.AlignPath.__lt__.rst", "generated/skbio.alignment.AlignPath.__ne__.rst", "generated/skbio.alignment.AlignPath.__str__.rst", "generated/skbio.alignment.AlignPath.from_bits.rst", "generated/skbio.alignment.AlignPath.from_coordinates.rst", "generated/skbio.alignment.AlignPath.from_indices.rst", "generated/skbio.alignment.AlignPath.from_tabular.rst", "generated/skbio.alignment.AlignPath.to_bits.rst", "generated/skbio.alignment.AlignPath.to_coordinates.rst", "generated/skbio.alignment.AlignPath.to_indices.rst", "generated/skbio.alignment.AlignmentStructure.rst", "generated/skbio.alignment.AlignmentStructure.__eq__.rst", "generated/skbio.alignment.AlignmentStructure.__ge__.rst", "generated/skbio.alignment.AlignmentStructure.__getitem__.rst", "generated/skbio.alignment.AlignmentStructure.__getstate__.rst", "generated/skbio.alignment.AlignmentStructure.__gt__.rst", "generated/skbio.alignment.AlignmentStructure.__hash__.rst", "generated/skbio.alignment.AlignmentStructure.__le__.rst", "generated/skbio.alignment.AlignmentStructure.__lt__.rst", "generated/skbio.alignment.AlignmentStructure.__ne__.rst", "generated/skbio.alignment.AlignmentStructure.__setstate__.rst", "generated/skbio.alignment.AlignmentStructure.__str__.rst", "generated/skbio.alignment.AlignmentStructure.is_zero_based.rst", "generated/skbio.alignment.AlignmentStructure.set_zero_based.rst", "generated/skbio.alignment.PairAlignPath.rst", "generated/skbio.alignment.PairAlignPath.__eq__.rst", "generated/skbio.alignment.PairAlignPath.__ge__.rst", "generated/skbio.alignment.PairAlignPath.__getstate__.rst", "generated/skbio.alignment.PairAlignPath.__gt__.rst", "generated/skbio.alignment.PairAlignPath.__hash__.rst", "generated/skbio.alignment.PairAlignPath.__le__.rst", "generated/skbio.alignment.PairAlignPath.__lt__.rst", "generated/skbio.alignment.PairAlignPath.__ne__.rst", "generated/skbio.alignment.PairAlignPath.__str__.rst", "generated/skbio.alignment.PairAlignPath.from_bits.rst", "generated/skbio.alignment.PairAlignPath.from_cigar.rst", "generated/skbio.alignment.PairAlignPath.from_coordinates.rst", "generated/skbio.alignment.PairAlignPath.from_indices.rst", "generated/skbio.alignment.PairAlignPath.from_tabular.rst", "generated/skbio.alignment.PairAlignPath.to_bits.rst", "generated/skbio.alignment.PairAlignPath.to_cigar.rst", "generated/skbio.alignment.PairAlignPath.to_coordinates.rst", "generated/skbio.alignment.PairAlignPath.to_indices.rst", "generated/skbio.alignment.StripedSmithWaterman.rst", "generated/skbio.alignment.StripedSmithWaterman.__call__.rst", "generated/skbio.alignment.StripedSmithWaterman.__eq__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ge__.rst", "generated/skbio.alignment.StripedSmithWaterman.__getstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__gt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__hash__.rst", "generated/skbio.alignment.StripedSmithWaterman.__le__.rst", "generated/skbio.alignment.StripedSmithWaterman.__lt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ne__.rst", "generated/skbio.alignment.StripedSmithWaterman.__setstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__str__.rst", "generated/skbio.alignment.TabularMSA.rst", "generated/skbio.alignment.TabularMSA.__bool__.rst", "generated/skbio.alignment.TabularMSA.__contains__.rst", "generated/skbio.alignment.TabularMSA.__copy__.rst", "generated/skbio.alignment.TabularMSA.__deepcopy__.rst", "generated/skbio.alignment.TabularMSA.__eq__.rst", "generated/skbio.alignment.TabularMSA.__ge__.rst", "generated/skbio.alignment.TabularMSA.__getitem__.rst", "generated/skbio.alignment.TabularMSA.__getstate__.rst", "generated/skbio.alignment.TabularMSA.__gt__.rst", "generated/skbio.alignment.TabularMSA.__iter__.rst", "generated/skbio.alignment.TabularMSA.__le__.rst", "generated/skbio.alignment.TabularMSA.__len__.rst", "generated/skbio.alignment.TabularMSA.__lt__.rst", "generated/skbio.alignment.TabularMSA.__ne__.rst", "generated/skbio.alignment.TabularMSA.__reversed__.rst", "generated/skbio.alignment.TabularMSA.__str__.rst", "generated/skbio.alignment.TabularMSA.append.rst", "generated/skbio.alignment.TabularMSA.consensus.rst", "generated/skbio.alignment.TabularMSA.conservation.rst", "generated/skbio.alignment.TabularMSA.extend.rst", "generated/skbio.alignment.TabularMSA.from_dict.rst", "generated/skbio.alignment.TabularMSA.from_path_seqs.rst", "generated/skbio.alignment.TabularMSA.gap_frequencies.rst", "generated/skbio.alignment.TabularMSA.has_metadata.rst", "generated/skbio.alignment.TabularMSA.has_positional_metadata.rst", "generated/skbio.alignment.TabularMSA.iter_positions.rst", "generated/skbio.alignment.TabularMSA.join.rst", "generated/skbio.alignment.TabularMSA.read.rst", "generated/skbio.alignment.TabularMSA.reassign_index.rst", "generated/skbio.alignment.TabularMSA.sort.rst", "generated/skbio.alignment.TabularMSA.to_dict.rst", "generated/skbio.alignment.TabularMSA.write.rst", "generated/skbio.alignment.global_pairwise_align.rst", "generated/skbio.alignment.global_pairwise_align_nucleotide.rst", "generated/skbio.alignment.global_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align.rst", "generated/skbio.alignment.local_pairwise_align_nucleotide.rst", "generated/skbio.alignment.local_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align_ssw.rst", "generated/skbio.alignment.make_identity_substitution_matrix.rst", "generated/skbio.diversity.alpha.rst", "generated/skbio.diversity.alpha.ace.rst", "generated/skbio.diversity.alpha.berger_parker_d.rst", "generated/skbio.diversity.alpha.brillouin_d.rst", "generated/skbio.diversity.alpha.chao1.rst", "generated/skbio.diversity.alpha.chao1_ci.rst", "generated/skbio.diversity.alpha.dominance.rst", "generated/skbio.diversity.alpha.doubles.rst", "generated/skbio.diversity.alpha.enspie.rst", "generated/skbio.diversity.alpha.esty_ci.rst", "generated/skbio.diversity.alpha.faith_pd.rst", "generated/skbio.diversity.alpha.fisher_alpha.rst", "generated/skbio.diversity.alpha.gini_index.rst", "generated/skbio.diversity.alpha.goods_coverage.rst", "generated/skbio.diversity.alpha.heip_e.rst", "generated/skbio.diversity.alpha.kempton_taylor_q.rst", "generated/skbio.diversity.alpha.lladser_ci.rst", "generated/skbio.diversity.alpha.lladser_pe.rst", "generated/skbio.diversity.alpha.margalef.rst", "generated/skbio.diversity.alpha.mcintosh_d.rst", "generated/skbio.diversity.alpha.mcintosh_e.rst", "generated/skbio.diversity.alpha.menhinick.rst", "generated/skbio.diversity.alpha.michaelis_menten_fit.rst", "generated/skbio.diversity.alpha.observed_features.rst", "generated/skbio.diversity.alpha.observed_otus.rst", "generated/skbio.diversity.alpha.osd.rst", "generated/skbio.diversity.alpha.phydiv.rst", "generated/skbio.diversity.alpha.pielou_e.rst", "generated/skbio.diversity.alpha.robbins.rst", "generated/skbio.diversity.alpha.shannon.rst", "generated/skbio.diversity.alpha.simpson.rst", "generated/skbio.diversity.alpha.simpson_e.rst", "generated/skbio.diversity.alpha.singles.rst", "generated/skbio.diversity.alpha.sobs.rst", "generated/skbio.diversity.alpha.strong.rst", "generated/skbio.diversity.alpha_diversity.rst", "generated/skbio.diversity.beta.rst", "generated/skbio.diversity.beta.unweighted_unifrac.rst", "generated/skbio.diversity.beta.weighted_unifrac.rst", "generated/skbio.diversity.beta_diversity.rst", "generated/skbio.diversity.block_beta_diversity.rst", "generated/skbio.diversity.get_alpha_diversity_metrics.rst", "generated/skbio.diversity.get_beta_diversity_metrics.rst", "generated/skbio.diversity.partial_beta_diversity.rst", "generated/skbio.embedding.ProteinEmbedding.rst", "generated/skbio.embedding.ProteinEmbedding.__eq__.rst", "generated/skbio.embedding.ProteinEmbedding.__ge__.rst", "generated/skbio.embedding.ProteinEmbedding.__getstate__.rst", "generated/skbio.embedding.ProteinEmbedding.__gt__.rst", "generated/skbio.embedding.ProteinEmbedding.__hash__.rst", "generated/skbio.embedding.ProteinEmbedding.__le__.rst", "generated/skbio.embedding.ProteinEmbedding.__lt__.rst", "generated/skbio.embedding.ProteinEmbedding.__ne__.rst", "generated/skbio.embedding.ProteinEmbedding.__str__.rst", "generated/skbio.embedding.ProteinEmbedding.bytes.rst", "generated/skbio.embedding.ProteinEmbedding.read.rst", "generated/skbio.embedding.ProteinEmbedding.write.rst", "generated/skbio.embedding.ProteinVector.rst", "generated/skbio.embedding.ProteinVector.__eq__.rst", "generated/skbio.embedding.ProteinVector.__ge__.rst", "generated/skbio.embedding.ProteinVector.__getstate__.rst", "generated/skbio.embedding.ProteinVector.__gt__.rst", "generated/skbio.embedding.ProteinVector.__hash__.rst", "generated/skbio.embedding.ProteinVector.__le__.rst", "generated/skbio.embedding.ProteinVector.__lt__.rst", "generated/skbio.embedding.ProteinVector.__ne__.rst", "generated/skbio.embedding.ProteinVector.__str__.rst", "generated/skbio.embedding.ProteinVector.bytes.rst", "generated/skbio.embedding.ProteinVector.read.rst", "generated/skbio.embedding.ProteinVector.write.rst", "generated/skbio.io.format.binary_dm.rst", "generated/skbio.io.format.biom.rst", "generated/skbio.io.format.blast6.rst", "generated/skbio.io.format.blast7.rst", "generated/skbio.io.format.clustal.rst", "generated/skbio.io.format.embed.rst", "generated/skbio.io.format.embl.rst", "generated/skbio.io.format.fasta.rst", "generated/skbio.io.format.fastq.rst", "generated/skbio.io.format.genbank.rst", "generated/skbio.io.format.gff3.rst", "generated/skbio.io.format.lsmat.rst", "generated/skbio.io.format.newick.rst", "generated/skbio.io.format.ordination.rst", "generated/skbio.io.format.phylip.rst", "generated/skbio.io.format.qseq.rst", "generated/skbio.io.format.sample_metadata.rst", "generated/skbio.io.format.stockholm.rst", "generated/skbio.io.format.taxdump.rst", "generated/skbio.io.registry.rst", "generated/skbio.io.registry.Format.rst", "generated/skbio.io.registry.Format.__eq__.rst", "generated/skbio.io.registry.Format.__ge__.rst", "generated/skbio.io.registry.Format.__getstate__.rst", "generated/skbio.io.registry.Format.__gt__.rst", "generated/skbio.io.registry.Format.__hash__.rst", "generated/skbio.io.registry.Format.__le__.rst", "generated/skbio.io.registry.Format.__lt__.rst", "generated/skbio.io.registry.Format.__ne__.rst", "generated/skbio.io.registry.Format.__str__.rst", "generated/skbio.io.registry.Format.reader.rst", "generated/skbio.io.registry.Format.sniffer.rst", "generated/skbio.io.registry.Format.writer.rst", "generated/skbio.io.registry.IORegistry.rst", "generated/skbio.io.registry.IORegistry.__eq__.rst", "generated/skbio.io.registry.IORegistry.__ge__.rst", "generated/skbio.io.registry.IORegistry.__getstate__.rst", "generated/skbio.io.registry.IORegistry.__gt__.rst", "generated/skbio.io.registry.IORegistry.__hash__.rst", "generated/skbio.io.registry.IORegistry.__le__.rst", "generated/skbio.io.registry.IORegistry.__lt__.rst", "generated/skbio.io.registry.IORegistry.__ne__.rst", "generated/skbio.io.registry.IORegistry.__str__.rst", "generated/skbio.io.registry.IORegistry.add_format.rst", "generated/skbio.io.registry.IORegistry.create_format.rst", "generated/skbio.io.registry.IORegistry.get_reader.rst", "generated/skbio.io.registry.IORegistry.get_sniffer.rst", "generated/skbio.io.registry.IORegistry.get_writer.rst", "generated/skbio.io.registry.IORegistry.list_read_formats.rst", "generated/skbio.io.registry.IORegistry.list_write_formats.rst", "generated/skbio.io.registry.IORegistry.monkey_patch.rst", "generated/skbio.io.registry.IORegistry.read.rst", "generated/skbio.io.registry.IORegistry.sniff.rst", "generated/skbio.io.registry.IORegistry.write.rst", "generated/skbio.io.registry.create_format.rst", "generated/skbio.io.registry.read.rst", "generated/skbio.io.registry.sniff.rst", "generated/skbio.io.registry.write.rst", "generated/skbio.io.util.rst", "generated/skbio.io.util.open.rst", "generated/skbio.io.util.open_file.rst", "generated/skbio.io.util.open_files.rst", "generated/skbio.metadata.CategoricalMetadataColumn.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__le__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__str__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_value.rst", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.save.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_series.rst", "generated/skbio.metadata.Interval.rst", "generated/skbio.metadata.Interval.__eq__.rst", "generated/skbio.metadata.Interval.__ge__.rst", "generated/skbio.metadata.Interval.__getstate__.rst", "generated/skbio.metadata.Interval.__gt__.rst", "generated/skbio.metadata.Interval.__le__.rst", "generated/skbio.metadata.Interval.__lt__.rst", "generated/skbio.metadata.Interval.__ne__.rst", "generated/skbio.metadata.Interval.__str__.rst", "generated/skbio.metadata.Interval.drop.rst", "generated/skbio.metadata.IntervalMetadata.rst", "generated/skbio.metadata.IntervalMetadata.__copy__.rst", "generated/skbio.metadata.IntervalMetadata.__deepcopy__.rst", "generated/skbio.metadata.IntervalMetadata.__eq__.rst", "generated/skbio.metadata.IntervalMetadata.__ge__.rst", "generated/skbio.metadata.IntervalMetadata.__getstate__.rst", "generated/skbio.metadata.IntervalMetadata.__gt__.rst", "generated/skbio.metadata.IntervalMetadata.__le__.rst", "generated/skbio.metadata.IntervalMetadata.__lt__.rst", "generated/skbio.metadata.IntervalMetadata.__ne__.rst", "generated/skbio.metadata.IntervalMetadata.__str__.rst", "generated/skbio.metadata.IntervalMetadata.add.rst", "generated/skbio.metadata.IntervalMetadata.concat.rst", "generated/skbio.metadata.IntervalMetadata.drop.rst", "generated/skbio.metadata.IntervalMetadata.merge.rst", "generated/skbio.metadata.IntervalMetadata.query.rst", "generated/skbio.metadata.IntervalMetadata.read.rst", "generated/skbio.metadata.IntervalMetadata.sort.rst", "generated/skbio.metadata.IntervalMetadata.write.rst", "generated/skbio.metadata.MetadataColumn.rst", "generated/skbio.metadata.MetadataColumn.__eq__.rst", "generated/skbio.metadata.MetadataColumn.__ge__.rst", "generated/skbio.metadata.MetadataColumn.__getstate__.rst", "generated/skbio.metadata.MetadataColumn.__gt__.rst", "generated/skbio.metadata.MetadataColumn.__le__.rst", "generated/skbio.metadata.MetadataColumn.__lt__.rst", "generated/skbio.metadata.MetadataColumn.__ne__.rst", "generated/skbio.metadata.MetadataColumn.__str__.rst", "generated/skbio.metadata.MetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.MetadataColumn.filter_ids.rst", "generated/skbio.metadata.MetadataColumn.get_ids.rst", "generated/skbio.metadata.MetadataColumn.get_missing.rst", "generated/skbio.metadata.MetadataColumn.get_value.rst", "generated/skbio.metadata.MetadataColumn.has_missing_values.rst", "generated/skbio.metadata.MetadataColumn.save.rst", "generated/skbio.metadata.MetadataColumn.to_dataframe.rst", "generated/skbio.metadata.MetadataColumn.to_series.rst", "generated/skbio.metadata.NumericMetadataColumn.rst", "generated/skbio.metadata.NumericMetadataColumn.__eq__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ge__.rst", "generated/skbio.metadata.NumericMetadataColumn.__getstate__.rst", "generated/skbio.metadata.NumericMetadataColumn.__gt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__le__.rst", "generated/skbio.metadata.NumericMetadataColumn.__lt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ne__.rst", "generated/skbio.metadata.NumericMetadataColumn.__str__.rst", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.filter_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_missing.rst", "generated/skbio.metadata.NumericMetadataColumn.get_value.rst", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.save.rst", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.NumericMetadataColumn.to_series.rst", "generated/skbio.metadata.SampleMetadata.rst", "generated/skbio.metadata.SampleMetadata.__eq__.rst", "generated/skbio.metadata.SampleMetadata.__ge__.rst", "generated/skbio.metadata.SampleMetadata.__getstate__.rst", "generated/skbio.metadata.SampleMetadata.__gt__.rst", "generated/skbio.metadata.SampleMetadata.__le__.rst", "generated/skbio.metadata.SampleMetadata.__lt__.rst", "generated/skbio.metadata.SampleMetadata.__ne__.rst", "generated/skbio.metadata.SampleMetadata.__str__.rst", "generated/skbio.metadata.SampleMetadata.filter_columns.rst", "generated/skbio.metadata.SampleMetadata.filter_ids.rst", "generated/skbio.metadata.SampleMetadata.get_column.rst", "generated/skbio.metadata.SampleMetadata.get_ids.rst", "generated/skbio.metadata.SampleMetadata.load.rst", "generated/skbio.metadata.SampleMetadata.merge.rst", "generated/skbio.metadata.SampleMetadata.read.rst", "generated/skbio.metadata.SampleMetadata.save.rst", "generated/skbio.metadata.SampleMetadata.to_dataframe.rst", "generated/skbio.metadata.SampleMetadata.write.rst", "generated/skbio.sequence.DNA.rst", "generated/skbio.sequence.DNA.__bool__.rst", "generated/skbio.sequence.DNA.__contains__.rst", "generated/skbio.sequence.DNA.__copy__.rst", "generated/skbio.sequence.DNA.__deepcopy__.rst", "generated/skbio.sequence.DNA.__eq__.rst", "generated/skbio.sequence.DNA.__ge__.rst", "generated/skbio.sequence.DNA.__getitem__.rst", "generated/skbio.sequence.DNA.__getstate__.rst", "generated/skbio.sequence.DNA.__gt__.rst", "generated/skbio.sequence.DNA.__iter__.rst", "generated/skbio.sequence.DNA.__le__.rst", "generated/skbio.sequence.DNA.__len__.rst", "generated/skbio.sequence.DNA.__lt__.rst", "generated/skbio.sequence.DNA.__ne__.rst", "generated/skbio.sequence.DNA.__reversed__.rst", "generated/skbio.sequence.DNA.__str__.rst", "generated/skbio.sequence.DNA.complement.rst", "generated/skbio.sequence.DNA.concat.rst", "generated/skbio.sequence.DNA.count.rst", "generated/skbio.sequence.DNA.definites.rst", "generated/skbio.sequence.DNA.degap.rst", "generated/skbio.sequence.DNA.degenerates.rst", "generated/skbio.sequence.DNA.distance.rst", "generated/skbio.sequence.DNA.expand_degenerates.rst", "generated/skbio.sequence.DNA.find_motifs.rst", "generated/skbio.sequence.DNA.find_with_regex.rst", "generated/skbio.sequence.DNA.frequencies.rst", "generated/skbio.sequence.DNA.gaps.rst", "generated/skbio.sequence.DNA.gc_content.rst", "generated/skbio.sequence.DNA.gc_frequency.rst", "generated/skbio.sequence.DNA.has_definites.rst", "generated/skbio.sequence.DNA.has_degenerates.rst", "generated/skbio.sequence.DNA.has_gaps.rst", "generated/skbio.sequence.DNA.has_interval_metadata.rst", "generated/skbio.sequence.DNA.has_metadata.rst", "generated/skbio.sequence.DNA.has_nondegenerates.rst", "generated/skbio.sequence.DNA.has_positional_metadata.rst", "generated/skbio.sequence.DNA.index.rst", "generated/skbio.sequence.DNA.is_reverse_complement.rst", "generated/skbio.sequence.DNA.iter_contiguous.rst", "generated/skbio.sequence.DNA.iter_kmers.rst", "generated/skbio.sequence.DNA.kmer_frequencies.rst", "generated/skbio.sequence.DNA.lowercase.rst", "generated/skbio.sequence.DNA.match_frequency.rst", "generated/skbio.sequence.DNA.matches.rst", "generated/skbio.sequence.DNA.mismatch_frequency.rst", "generated/skbio.sequence.DNA.mismatches.rst", "generated/skbio.sequence.DNA.nondegenerates.rst", "generated/skbio.sequence.DNA.read.rst", "generated/skbio.sequence.DNA.replace.rst", "generated/skbio.sequence.DNA.reverse_complement.rst", "generated/skbio.sequence.DNA.to_definites.rst", "generated/skbio.sequence.DNA.to_indices.rst", "generated/skbio.sequence.DNA.to_regex.rst", "generated/skbio.sequence.DNA.transcribe.rst", "generated/skbio.sequence.DNA.translate.rst", "generated/skbio.sequence.DNA.translate_six_frames.rst", "generated/skbio.sequence.DNA.write.rst", "generated/skbio.sequence.GeneticCode.rst", "generated/skbio.sequence.GeneticCode.__eq__.rst", "generated/skbio.sequence.GeneticCode.__ge__.rst", "generated/skbio.sequence.GeneticCode.__getstate__.rst", "generated/skbio.sequence.GeneticCode.__gt__.rst", "generated/skbio.sequence.GeneticCode.__le__.rst", "generated/skbio.sequence.GeneticCode.__lt__.rst", "generated/skbio.sequence.GeneticCode.__ne__.rst", "generated/skbio.sequence.GeneticCode.__str__.rst", "generated/skbio.sequence.GeneticCode.from_ncbi.rst", "generated/skbio.sequence.GeneticCode.translate.rst", "generated/skbio.sequence.GeneticCode.translate_six_frames.rst", "generated/skbio.sequence.GrammaredSequence.rst", "generated/skbio.sequence.GrammaredSequence.__bool__.rst", "generated/skbio.sequence.GrammaredSequence.__contains__.rst", "generated/skbio.sequence.GrammaredSequence.__copy__.rst", "generated/skbio.sequence.GrammaredSequence.__deepcopy__.rst", "generated/skbio.sequence.GrammaredSequence.__eq__.rst", "generated/skbio.sequence.GrammaredSequence.__ge__.rst", "generated/skbio.sequence.GrammaredSequence.__getitem__.rst", "generated/skbio.sequence.GrammaredSequence.__getstate__.rst", "generated/skbio.sequence.GrammaredSequence.__gt__.rst", "generated/skbio.sequence.GrammaredSequence.__iter__.rst", "generated/skbio.sequence.GrammaredSequence.__le__.rst", "generated/skbio.sequence.GrammaredSequence.__len__.rst", "generated/skbio.sequence.GrammaredSequence.__lt__.rst", "generated/skbio.sequence.GrammaredSequence.__ne__.rst", "generated/skbio.sequence.GrammaredSequence.__reversed__.rst", "generated/skbio.sequence.GrammaredSequence.__str__.rst", "generated/skbio.sequence.GrammaredSequence.concat.rst", "generated/skbio.sequence.GrammaredSequence.count.rst", "generated/skbio.sequence.GrammaredSequence.definites.rst", "generated/skbio.sequence.GrammaredSequence.degap.rst", "generated/skbio.sequence.GrammaredSequence.degenerates.rst", "generated/skbio.sequence.GrammaredSequence.distance.rst", "generated/skbio.sequence.GrammaredSequence.expand_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.find_motifs.rst", "generated/skbio.sequence.GrammaredSequence.find_with_regex.rst", "generated/skbio.sequence.GrammaredSequence.frequencies.rst", "generated/skbio.sequence.GrammaredSequence.gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_definites.rst", "generated/skbio.sequence.GrammaredSequence.has_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata.rst", "generated/skbio.sequence.GrammaredSequence.index.rst", "generated/skbio.sequence.GrammaredSequence.iter_contiguous.rst", "generated/skbio.sequence.GrammaredSequence.iter_kmers.rst", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies.rst", "generated/skbio.sequence.GrammaredSequence.lowercase.rst", "generated/skbio.sequence.GrammaredSequence.match_frequency.rst", "generated/skbio.sequence.GrammaredSequence.matches.rst", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency.rst", "generated/skbio.sequence.GrammaredSequence.mismatches.rst", "generated/skbio.sequence.GrammaredSequence.nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.read.rst", "generated/skbio.sequence.GrammaredSequence.replace.rst", "generated/skbio.sequence.GrammaredSequence.to_definites.rst", "generated/skbio.sequence.GrammaredSequence.to_indices.rst", "generated/skbio.sequence.GrammaredSequence.to_regex.rst", "generated/skbio.sequence.GrammaredSequence.write.rst", "generated/skbio.sequence.Protein.rst", "generated/skbio.sequence.Protein.__bool__.rst", "generated/skbio.sequence.Protein.__contains__.rst", "generated/skbio.sequence.Protein.__copy__.rst", "generated/skbio.sequence.Protein.__deepcopy__.rst", "generated/skbio.sequence.Protein.__eq__.rst", "generated/skbio.sequence.Protein.__ge__.rst", "generated/skbio.sequence.Protein.__getitem__.rst", "generated/skbio.sequence.Protein.__getstate__.rst", "generated/skbio.sequence.Protein.__gt__.rst", "generated/skbio.sequence.Protein.__iter__.rst", "generated/skbio.sequence.Protein.__le__.rst", "generated/skbio.sequence.Protein.__len__.rst", "generated/skbio.sequence.Protein.__lt__.rst", "generated/skbio.sequence.Protein.__ne__.rst", "generated/skbio.sequence.Protein.__reversed__.rst", "generated/skbio.sequence.Protein.__str__.rst", "generated/skbio.sequence.Protein.concat.rst", "generated/skbio.sequence.Protein.count.rst", "generated/skbio.sequence.Protein.definites.rst", "generated/skbio.sequence.Protein.degap.rst", "generated/skbio.sequence.Protein.degenerates.rst", "generated/skbio.sequence.Protein.distance.rst", "generated/skbio.sequence.Protein.expand_degenerates.rst", "generated/skbio.sequence.Protein.find_motifs.rst", "generated/skbio.sequence.Protein.find_with_regex.rst", "generated/skbio.sequence.Protein.frequencies.rst", "generated/skbio.sequence.Protein.gaps.rst", "generated/skbio.sequence.Protein.has_definites.rst", "generated/skbio.sequence.Protein.has_degenerates.rst", "generated/skbio.sequence.Protein.has_gaps.rst", "generated/skbio.sequence.Protein.has_interval_metadata.rst", "generated/skbio.sequence.Protein.has_metadata.rst", "generated/skbio.sequence.Protein.has_nondegenerates.rst", "generated/skbio.sequence.Protein.has_positional_metadata.rst", "generated/skbio.sequence.Protein.has_stops.rst", "generated/skbio.sequence.Protein.index.rst", "generated/skbio.sequence.Protein.iter_contiguous.rst", "generated/skbio.sequence.Protein.iter_kmers.rst", "generated/skbio.sequence.Protein.kmer_frequencies.rst", "generated/skbio.sequence.Protein.lowercase.rst", "generated/skbio.sequence.Protein.match_frequency.rst", "generated/skbio.sequence.Protein.matches.rst", "generated/skbio.sequence.Protein.mismatch_frequency.rst", "generated/skbio.sequence.Protein.mismatches.rst", "generated/skbio.sequence.Protein.nondegenerates.rst", "generated/skbio.sequence.Protein.read.rst", "generated/skbio.sequence.Protein.replace.rst", "generated/skbio.sequence.Protein.stops.rst", "generated/skbio.sequence.Protein.to_definites.rst", "generated/skbio.sequence.Protein.to_indices.rst", "generated/skbio.sequence.Protein.to_regex.rst", "generated/skbio.sequence.Protein.write.rst", "generated/skbio.sequence.RNA.rst", "generated/skbio.sequence.RNA.__bool__.rst", "generated/skbio.sequence.RNA.__contains__.rst", "generated/skbio.sequence.RNA.__copy__.rst", "generated/skbio.sequence.RNA.__deepcopy__.rst", "generated/skbio.sequence.RNA.__eq__.rst", "generated/skbio.sequence.RNA.__ge__.rst", "generated/skbio.sequence.RNA.__getitem__.rst", "generated/skbio.sequence.RNA.__getstate__.rst", "generated/skbio.sequence.RNA.__gt__.rst", "generated/skbio.sequence.RNA.__iter__.rst", "generated/skbio.sequence.RNA.__le__.rst", "generated/skbio.sequence.RNA.__len__.rst", "generated/skbio.sequence.RNA.__lt__.rst", "generated/skbio.sequence.RNA.__ne__.rst", "generated/skbio.sequence.RNA.__reversed__.rst", "generated/skbio.sequence.RNA.__str__.rst", "generated/skbio.sequence.RNA.complement.rst", "generated/skbio.sequence.RNA.concat.rst", "generated/skbio.sequence.RNA.count.rst", "generated/skbio.sequence.RNA.definites.rst", "generated/skbio.sequence.RNA.degap.rst", "generated/skbio.sequence.RNA.degenerates.rst", "generated/skbio.sequence.RNA.distance.rst", "generated/skbio.sequence.RNA.expand_degenerates.rst", "generated/skbio.sequence.RNA.find_motifs.rst", "generated/skbio.sequence.RNA.find_with_regex.rst", "generated/skbio.sequence.RNA.frequencies.rst", "generated/skbio.sequence.RNA.gaps.rst", "generated/skbio.sequence.RNA.gc_content.rst", "generated/skbio.sequence.RNA.gc_frequency.rst", "generated/skbio.sequence.RNA.has_definites.rst", "generated/skbio.sequence.RNA.has_degenerates.rst", "generated/skbio.sequence.RNA.has_gaps.rst", "generated/skbio.sequence.RNA.has_interval_metadata.rst", "generated/skbio.sequence.RNA.has_metadata.rst", "generated/skbio.sequence.RNA.has_nondegenerates.rst", "generated/skbio.sequence.RNA.has_positional_metadata.rst", "generated/skbio.sequence.RNA.index.rst", "generated/skbio.sequence.RNA.is_reverse_complement.rst", "generated/skbio.sequence.RNA.iter_contiguous.rst", "generated/skbio.sequence.RNA.iter_kmers.rst", "generated/skbio.sequence.RNA.kmer_frequencies.rst", "generated/skbio.sequence.RNA.lowercase.rst", "generated/skbio.sequence.RNA.match_frequency.rst", "generated/skbio.sequence.RNA.matches.rst", "generated/skbio.sequence.RNA.mismatch_frequency.rst", "generated/skbio.sequence.RNA.mismatches.rst", "generated/skbio.sequence.RNA.nondegenerates.rst", "generated/skbio.sequence.RNA.read.rst", "generated/skbio.sequence.RNA.replace.rst", "generated/skbio.sequence.RNA.reverse_complement.rst", "generated/skbio.sequence.RNA.reverse_transcribe.rst", "generated/skbio.sequence.RNA.to_definites.rst", "generated/skbio.sequence.RNA.to_indices.rst", "generated/skbio.sequence.RNA.to_regex.rst", "generated/skbio.sequence.RNA.translate.rst", "generated/skbio.sequence.RNA.translate_six_frames.rst", "generated/skbio.sequence.RNA.write.rst", "generated/skbio.sequence.Sequence.rst", "generated/skbio.sequence.Sequence.__bool__.rst", "generated/skbio.sequence.Sequence.__contains__.rst", "generated/skbio.sequence.Sequence.__copy__.rst", "generated/skbio.sequence.Sequence.__deepcopy__.rst", "generated/skbio.sequence.Sequence.__eq__.rst", "generated/skbio.sequence.Sequence.__ge__.rst", "generated/skbio.sequence.Sequence.__getitem__.rst", "generated/skbio.sequence.Sequence.__getstate__.rst", "generated/skbio.sequence.Sequence.__gt__.rst", "generated/skbio.sequence.Sequence.__iter__.rst", "generated/skbio.sequence.Sequence.__le__.rst", "generated/skbio.sequence.Sequence.__len__.rst", "generated/skbio.sequence.Sequence.__lt__.rst", "generated/skbio.sequence.Sequence.__ne__.rst", "generated/skbio.sequence.Sequence.__reversed__.rst", "generated/skbio.sequence.Sequence.__str__.rst", "generated/skbio.sequence.Sequence.concat.rst", "generated/skbio.sequence.Sequence.count.rst", "generated/skbio.sequence.Sequence.distance.rst", "generated/skbio.sequence.Sequence.find_with_regex.rst", "generated/skbio.sequence.Sequence.frequencies.rst", "generated/skbio.sequence.Sequence.has_interval_metadata.rst", "generated/skbio.sequence.Sequence.has_metadata.rst", "generated/skbio.sequence.Sequence.has_positional_metadata.rst", "generated/skbio.sequence.Sequence.index.rst", "generated/skbio.sequence.Sequence.iter_contiguous.rst", "generated/skbio.sequence.Sequence.iter_kmers.rst", "generated/skbio.sequence.Sequence.kmer_frequencies.rst", "generated/skbio.sequence.Sequence.lowercase.rst", "generated/skbio.sequence.Sequence.match_frequency.rst", "generated/skbio.sequence.Sequence.matches.rst", "generated/skbio.sequence.Sequence.mismatch_frequency.rst", "generated/skbio.sequence.Sequence.mismatches.rst", "generated/skbio.sequence.Sequence.read.rst", "generated/skbio.sequence.Sequence.replace.rst", "generated/skbio.sequence.Sequence.to_indices.rst", "generated/skbio.sequence.Sequence.write.rst", "generated/skbio.sequence.SubstitutionMatrix.rst", "generated/skbio.sequence.SubstitutionMatrix.__contains__.rst", "generated/skbio.sequence.SubstitutionMatrix.__eq__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ge__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getitem__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getstate__.rst", "generated/skbio.sequence.SubstitutionMatrix.__gt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__le__.rst", "generated/skbio.sequence.SubstitutionMatrix.__lt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ne__.rst", "generated/skbio.sequence.SubstitutionMatrix.__str__.rst", "generated/skbio.sequence.SubstitutionMatrix.between.rst", "generated/skbio.sequence.SubstitutionMatrix.by_name.rst", "generated/skbio.sequence.SubstitutionMatrix.copy.rst", "generated/skbio.sequence.SubstitutionMatrix.filter.rst", "generated/skbio.sequence.SubstitutionMatrix.from_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.from_iterable.rst", "generated/skbio.sequence.SubstitutionMatrix.get_names.rst", "generated/skbio.sequence.SubstitutionMatrix.identity.rst", "generated/skbio.sequence.SubstitutionMatrix.index.rst", "generated/skbio.sequence.SubstitutionMatrix.plot.rst", "generated/skbio.sequence.SubstitutionMatrix.read.rst", "generated/skbio.sequence.SubstitutionMatrix.redundant_form.rst", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame.rst", "generated/skbio.sequence.SubstitutionMatrix.to_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.transpose.rst", "generated/skbio.sequence.SubstitutionMatrix.within.rst", "generated/skbio.sequence.SubstitutionMatrix.write.rst", "generated/skbio.sequence.distance.rst", "generated/skbio.sequence.distance.hamming.rst", "generated/skbio.sequence.distance.kmer_distance.rst", "generated/skbio.stats.composition.rst", "generated/skbio.stats.composition.alr.rst", "generated/skbio.stats.composition.alr_inv.rst", "generated/skbio.stats.composition.ancom.rst", "generated/skbio.stats.composition.centralize.rst", "generated/skbio.stats.composition.closure.rst", "generated/skbio.stats.composition.clr.rst", "generated/skbio.stats.composition.clr_inv.rst", "generated/skbio.stats.composition.dirmult_ttest.rst", "generated/skbio.stats.composition.ilr.rst", "generated/skbio.stats.composition.ilr_inv.rst", "generated/skbio.stats.composition.inner.rst", "generated/skbio.stats.composition.multi_replace.rst", "generated/skbio.stats.composition.multiplicative_replacement.rst", "generated/skbio.stats.composition.pairwise_vlr.rst", "generated/skbio.stats.composition.perturb.rst", "generated/skbio.stats.composition.perturb_inv.rst", "generated/skbio.stats.composition.power.rst", "generated/skbio.stats.composition.sbp_basis.rst", "generated/skbio.stats.composition.tree_basis.rst", "generated/skbio.stats.composition.vlr.rst", "generated/skbio.stats.distance.rst", "generated/skbio.stats.distance.DissimilarityMatrix.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__le__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__str__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.between.rst", "generated/skbio.stats.distance.DissimilarityMatrix.copy.rst", "generated/skbio.stats.distance.DissimilarityMatrix.filter.rst", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable.rst", "generated/skbio.stats.distance.DissimilarityMatrix.index.rst", "generated/skbio.stats.distance.DissimilarityMatrix.plot.rst", "generated/skbio.stats.distance.DissimilarityMatrix.read.rst", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form.rst", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DissimilarityMatrix.transpose.rst", "generated/skbio.stats.distance.DissimilarityMatrix.within.rst", "generated/skbio.stats.distance.DissimilarityMatrix.write.rst", "generated/skbio.stats.distance.DistanceMatrix.rst", "generated/skbio.stats.distance.DistanceMatrix.__contains__.rst", "generated/skbio.stats.distance.DistanceMatrix.__eq__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ge__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getitem__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getstate__.rst", "generated/skbio.stats.distance.DistanceMatrix.__gt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__le__.rst", "generated/skbio.stats.distance.DistanceMatrix.__lt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ne__.rst", "generated/skbio.stats.distance.DistanceMatrix.__str__.rst", "generated/skbio.stats.distance.DistanceMatrix.between.rst", "generated/skbio.stats.distance.DistanceMatrix.condensed_form.rst", "generated/skbio.stats.distance.DistanceMatrix.copy.rst", "generated/skbio.stats.distance.DistanceMatrix.filter.rst", "generated/skbio.stats.distance.DistanceMatrix.from_iterable.rst", "generated/skbio.stats.distance.DistanceMatrix.index.rst", "generated/skbio.stats.distance.DistanceMatrix.permute.rst", "generated/skbio.stats.distance.DistanceMatrix.plot.rst", "generated/skbio.stats.distance.DistanceMatrix.read.rst", "generated/skbio.stats.distance.DistanceMatrix.redundant_form.rst", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DistanceMatrix.to_series.rst", "generated/skbio.stats.distance.DistanceMatrix.transpose.rst", "generated/skbio.stats.distance.DistanceMatrix.within.rst", "generated/skbio.stats.distance.DistanceMatrix.write.rst", "generated/skbio.stats.distance.anosim.rst", "generated/skbio.stats.distance.bioenv.rst", "generated/skbio.stats.distance.mantel.rst", "generated/skbio.stats.distance.permanova.rst", "generated/skbio.stats.distance.permdisp.rst", "generated/skbio.stats.distance.pwmantel.rst", "generated/skbio.stats.distance.randdm.rst", "generated/skbio.stats.evolve.rst", "generated/skbio.stats.evolve.hommola_cospeciation.rst", "generated/skbio.stats.gradient.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.CategoryResults.rst", "generated/skbio.stats.gradient.CategoryResults.__eq__.rst", "generated/skbio.stats.gradient.CategoryResults.__ge__.rst", "generated/skbio.stats.gradient.CategoryResults.__getstate__.rst", "generated/skbio.stats.gradient.CategoryResults.__gt__.rst", "generated/skbio.stats.gradient.CategoryResults.__hash__.rst", "generated/skbio.stats.gradient.CategoryResults.__le__.rst", "generated/skbio.stats.gradient.CategoryResults.__lt__.rst", "generated/skbio.stats.gradient.CategoryResults.__ne__.rst", "generated/skbio.stats.gradient.CategoryResults.__str__.rst", "generated/skbio.stats.gradient.CategoryResults.to_files.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVA.rst", "generated/skbio.stats.gradient.GradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVA.__le__.rst", "generated/skbio.stats.gradient.GradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVA.__str__.rst", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVAResults.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__le__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__str__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.to_files.rst", "generated/skbio.stats.gradient.GroupResults.rst", "generated/skbio.stats.gradient.GroupResults.__eq__.rst", "generated/skbio.stats.gradient.GroupResults.__ge__.rst", "generated/skbio.stats.gradient.GroupResults.__getstate__.rst", "generated/skbio.stats.gradient.GroupResults.__gt__.rst", "generated/skbio.stats.gradient.GroupResults.__hash__.rst", "generated/skbio.stats.gradient.GroupResults.__le__.rst", "generated/skbio.stats.gradient.GroupResults.__lt__.rst", "generated/skbio.stats.gradient.GroupResults.__ne__.rst", "generated/skbio.stats.gradient.GroupResults.__str__.rst", "generated/skbio.stats.gradient.GroupResults.to_files.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.isubsample.rst", "generated/skbio.stats.ordination.rst", "generated/skbio.stats.ordination.OrdinationResults.rst", "generated/skbio.stats.ordination.OrdinationResults.__eq__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ge__.rst", "generated/skbio.stats.ordination.OrdinationResults.__getstate__.rst", "generated/skbio.stats.ordination.OrdinationResults.__gt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__hash__.rst", "generated/skbio.stats.ordination.OrdinationResults.__le__.rst", "generated/skbio.stats.ordination.OrdinationResults.__lt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ne__.rst", "generated/skbio.stats.ordination.OrdinationResults.__str__.rst", "generated/skbio.stats.ordination.OrdinationResults.plot.rst", "generated/skbio.stats.ordination.OrdinationResults.read.rst", "generated/skbio.stats.ordination.OrdinationResults.write.rst", "generated/skbio.stats.ordination.ca.rst", "generated/skbio.stats.ordination.cca.rst", "generated/skbio.stats.ordination.corr.rst", "generated/skbio.stats.ordination.e_matrix.rst", "generated/skbio.stats.ordination.f_matrix.rst", "generated/skbio.stats.ordination.mean_and_std.rst", "generated/skbio.stats.ordination.pcoa.rst", "generated/skbio.stats.ordination.pcoa_biplot.rst", "generated/skbio.stats.ordination.rda.rst", "generated/skbio.stats.ordination.scale.rst", "generated/skbio.stats.ordination.svd_rank.rst", "generated/skbio.stats.power.rst", "generated/skbio.stats.power.confidence_bound.rst", "generated/skbio.stats.power.paired_subsamples.rst", "generated/skbio.stats.power.subsample_paired_power.rst", "generated/skbio.stats.power.subsample_power.rst", "generated/skbio.stats.subsample_counts.rst", "generated/skbio.table.Table.rst", "generated/skbio.table.Table.__eq__.rst", "generated/skbio.table.Table.__ge__.rst", "generated/skbio.table.Table.__getitem__.rst", "generated/skbio.table.Table.__getstate__.rst", "generated/skbio.table.Table.__gt__.rst", "generated/skbio.table.Table.__iter__.rst", "generated/skbio.table.Table.__le__.rst", "generated/skbio.table.Table.__lt__.rst", "generated/skbio.table.Table.__ne__.rst", "generated/skbio.table.Table.__str__.rst", "generated/skbio.table.Table.add_group_metadata.rst", "generated/skbio.table.Table.add_metadata.rst", "generated/skbio.table.Table.align_to.rst", "generated/skbio.table.Table.align_to_dataframe.rst", "generated/skbio.table.Table.align_tree.rst", "generated/skbio.table.Table.collapse.rst", "generated/skbio.table.Table.concat.rst", "generated/skbio.table.Table.copy.rst", "generated/skbio.table.Table.data.rst", "generated/skbio.table.Table.del_metadata.rst", "generated/skbio.table.Table.delimited_self.rst", "generated/skbio.table.Table.descriptive_equality.rst", "generated/skbio.table.Table.exists.rst", "generated/skbio.table.Table.filter.rst", "generated/skbio.table.Table.from_adjacency.rst", "generated/skbio.table.Table.from_hdf5.rst", "generated/skbio.table.Table.from_json.rst", "generated/skbio.table.Table.from_tsv.rst", "generated/skbio.table.Table.get_table_density.rst", "generated/skbio.table.Table.get_value_by_ids.rst", "generated/skbio.table.Table.group_metadata.rst", "generated/skbio.table.Table.head.rst", "generated/skbio.table.Table.ids.rst", "generated/skbio.table.Table.index.rst", "generated/skbio.table.Table.is_empty.rst", "generated/skbio.table.Table.iter.rst", "generated/skbio.table.Table.iter_data.rst", "generated/skbio.table.Table.iter_pairwise.rst", "generated/skbio.table.Table.length.rst", "generated/skbio.table.Table.max.rst", "generated/skbio.table.Table.merge.rst", "generated/skbio.table.Table.metadata.rst", "generated/skbio.table.Table.metadata_to_dataframe.rst", "generated/skbio.table.Table.min.rst", "generated/skbio.table.Table.nonzero.rst", "generated/skbio.table.Table.nonzero_counts.rst", "generated/skbio.table.Table.norm.rst", "generated/skbio.table.Table.pa.rst", "generated/skbio.table.Table.partition.rst", "generated/skbio.table.Table.rankdata.rst", "generated/skbio.table.Table.read.rst", "generated/skbio.table.Table.reduce.rst", "generated/skbio.table.Table.remove_empty.rst", "generated/skbio.table.Table.sort.rst", "generated/skbio.table.Table.sort_order.rst", "generated/skbio.table.Table.subsample.rst", "generated/skbio.table.Table.sum.rst", "generated/skbio.table.Table.to_anndata.rst", "generated/skbio.table.Table.to_dataframe.rst", "generated/skbio.table.Table.to_hdf5.rst", "generated/skbio.table.Table.to_json.rst", "generated/skbio.table.Table.to_tsv.rst", "generated/skbio.table.Table.transform.rst", "generated/skbio.table.Table.transpose.rst", "generated/skbio.table.Table.update_ids.rst", "generated/skbio.table.Table.write.rst", "generated/skbio.table.example_table.rst", "generated/skbio.tree.TreeNode.rst", "generated/skbio.tree.TreeNode.__copy__.rst", "generated/skbio.tree.TreeNode.__deepcopy__.rst", "generated/skbio.tree.TreeNode.__eq__.rst", "generated/skbio.tree.TreeNode.__ge__.rst", "generated/skbio.tree.TreeNode.__getitem__.rst", "generated/skbio.tree.TreeNode.__getstate__.rst", "generated/skbio.tree.TreeNode.__gt__.rst", "generated/skbio.tree.TreeNode.__hash__.rst", "generated/skbio.tree.TreeNode.__iter__.rst", "generated/skbio.tree.TreeNode.__le__.rst", "generated/skbio.tree.TreeNode.__len__.rst", "generated/skbio.tree.TreeNode.__lt__.rst", "generated/skbio.tree.TreeNode.__ne__.rst", "generated/skbio.tree.TreeNode.__str__.rst", "generated/skbio.tree.TreeNode.accumulate_to_ancestor.rst", "generated/skbio.tree.TreeNode.ancestors.rst", "generated/skbio.tree.TreeNode.append.rst", "generated/skbio.tree.TreeNode.ascii_art.rst", "generated/skbio.tree.TreeNode.assign_ids.rst", "generated/skbio.tree.TreeNode.assign_supports.rst", "generated/skbio.tree.TreeNode.bifurcate.rst", "generated/skbio.tree.TreeNode.cache_attr.rst", "generated/skbio.tree.TreeNode.compare_rfd.rst", "generated/skbio.tree.TreeNode.compare_subsets.rst", "generated/skbio.tree.TreeNode.compare_tip_distances.rst", "generated/skbio.tree.TreeNode.copy.rst", "generated/skbio.tree.TreeNode.count.rst", "generated/skbio.tree.TreeNode.create_caches.rst", "generated/skbio.tree.TreeNode.deepcopy.rst", "generated/skbio.tree.TreeNode.descending_branch_length.rst", "generated/skbio.tree.TreeNode.distance.rst", "generated/skbio.tree.TreeNode.extend.rst", "generated/skbio.tree.TreeNode.find.rst", "generated/skbio.tree.TreeNode.find_all.rst", "generated/skbio.tree.TreeNode.find_by_func.rst", "generated/skbio.tree.TreeNode.find_by_id.rst", "generated/skbio.tree.TreeNode.from_linkage_matrix.rst", "generated/skbio.tree.TreeNode.from_taxdump.rst", "generated/skbio.tree.TreeNode.from_taxonomy.rst", "generated/skbio.tree.TreeNode.get_max_distance.rst", "generated/skbio.tree.TreeNode.has_children.rst", "generated/skbio.tree.TreeNode.index_tree.rst", "generated/skbio.tree.TreeNode.invalidate_caches.rst", "generated/skbio.tree.TreeNode.is_root.rst", "generated/skbio.tree.TreeNode.is_tip.rst", "generated/skbio.tree.TreeNode.lca.rst", "generated/skbio.tree.TreeNode.levelorder.rst", "generated/skbio.tree.TreeNode.lowest_common_ancestor.rst", "generated/skbio.tree.TreeNode.neighbors.rst", "generated/skbio.tree.TreeNode.non_tips.rst", "generated/skbio.tree.TreeNode.observed_node_counts.rst", "generated/skbio.tree.TreeNode.pop.rst", "generated/skbio.tree.TreeNode.postorder.rst", "generated/skbio.tree.TreeNode.pre_and_postorder.rst", "generated/skbio.tree.TreeNode.preorder.rst", "generated/skbio.tree.TreeNode.prune.rst", "generated/skbio.tree.TreeNode.read.rst", "generated/skbio.tree.TreeNode.remove.rst", "generated/skbio.tree.TreeNode.remove_deleted.rst", "generated/skbio.tree.TreeNode.root.rst", "generated/skbio.tree.TreeNode.root_at.rst", "generated/skbio.tree.TreeNode.root_at_midpoint.rst", "generated/skbio.tree.TreeNode.shear.rst", "generated/skbio.tree.TreeNode.shuffle.rst", "generated/skbio.tree.TreeNode.siblings.rst", "generated/skbio.tree.TreeNode.subset.rst", "generated/skbio.tree.TreeNode.subsets.rst", "generated/skbio.tree.TreeNode.subtree.rst", "generated/skbio.tree.TreeNode.tip_tip_distances.rst", "generated/skbio.tree.TreeNode.tips.rst", "generated/skbio.tree.TreeNode.to_array.rst", "generated/skbio.tree.TreeNode.to_taxonomy.rst", "generated/skbio.tree.TreeNode.traverse.rst", "generated/skbio.tree.TreeNode.unpack.rst", "generated/skbio.tree.TreeNode.unpack_by_func.rst", "generated/skbio.tree.TreeNode.unrooted_copy.rst", "generated/skbio.tree.TreeNode.unrooted_deepcopy.rst", "generated/skbio.tree.TreeNode.write.rst", "generated/skbio.tree.majority_rule.rst", "generated/skbio.tree.nj.rst", "generated/skbio.util.EfficiencyWarning.rst", "generated/skbio.util.RepresentationWarning.rst", "generated/skbio.util.assert_data_frame_almost_equal.rst", "generated/skbio.util.assert_ordination_results_equal.rst", "generated/skbio.util.cardinal_to_ordinal.rst", "generated/skbio.util.classproperty.rst", "generated/skbio.util.classproperty.__delete__.rst", "generated/skbio.util.classproperty.__eq__.rst", "generated/skbio.util.classproperty.__ge__.rst", "generated/skbio.util.classproperty.__get__.rst", "generated/skbio.util.classproperty.__getstate__.rst", "generated/skbio.util.classproperty.__gt__.rst", "generated/skbio.util.classproperty.__hash__.rst", "generated/skbio.util.classproperty.__le__.rst", "generated/skbio.util.classproperty.__lt__.rst", "generated/skbio.util.classproperty.__ne__.rst", "generated/skbio.util.classproperty.__set__.rst", "generated/skbio.util.classproperty.__set_name__.rst", "generated/skbio.util.classproperty.__str__.rst", "generated/skbio.util.classproperty.deleter.rst", "generated/skbio.util.classproperty.getter.rst", "generated/skbio.util.classproperty.setter.rst", "generated/skbio.util.find_duplicates.rst", "generated/skbio.util.get_data_path.rst", "generated/skbio.util.safe_md5.rst", "generated/skbio.workflow.Workflow.rst", "generated/skbio.workflow.Workflow.__call__.rst", "generated/skbio.workflow.Workflow.__eq__.rst", "generated/skbio.workflow.Workflow.__ge__.rst", "generated/skbio.workflow.Workflow.__getstate__.rst", "generated/skbio.workflow.Workflow.__gt__.rst", "generated/skbio.workflow.Workflow.__hash__.rst", "generated/skbio.workflow.Workflow.__le__.rst", "generated/skbio.workflow.Workflow.__lt__.rst", "generated/skbio.workflow.Workflow.__ne__.rst", "generated/skbio.workflow.Workflow.__str__.rst", "generated/skbio.workflow.Workflow.initialize_state.rst", "generated/skbio.workflow.method.rst", "generated/skbio.workflow.method.__call__.rst", "generated/skbio.workflow.method.__eq__.rst", "generated/skbio.workflow.method.__ge__.rst", "generated/skbio.workflow.method.__getstate__.rst", "generated/skbio.workflow.method.__gt__.rst", "generated/skbio.workflow.method.__hash__.rst", "generated/skbio.workflow.method.__le__.rst", "generated/skbio.workflow.method.__lt__.rst", "generated/skbio.workflow.method.__ne__.rst", "generated/skbio.workflow.method.__str__.rst", "generated/skbio.workflow.requires.rst", "generated/skbio.workflow.requires.__call__.rst", "generated/skbio.workflow.requires.__eq__.rst", "generated/skbio.workflow.requires.__ge__.rst", "generated/skbio.workflow.requires.__getstate__.rst", "generated/skbio.workflow.requires.__gt__.rst", "generated/skbio.workflow.requires.__hash__.rst", "generated/skbio.workflow.requires.__le__.rst", "generated/skbio.workflow.requires.__lt__.rst", "generated/skbio.workflow.requires.__ne__.rst", "generated/skbio.workflow.requires.__str__.rst", "index.rst", "io.rst", "metadata.rst", "sequence.rst", "stats.rst", "table.rst", "tree.rst", "util.rst", "workflow.rst"], "indexentries": {"__bool__() (skbio.alignment.tabularmsa method)": [[66, "skbio.alignment.TabularMSA.__bool__", false]], "__bool__() (skbio.sequence.dna method)": [[341, "skbio.sequence.DNA.__bool__", false]], "__bool__() (skbio.sequence.grammaredsequence method)": [[412, "skbio.sequence.GrammaredSequence.__bool__", false]], "__bool__() (skbio.sequence.protein method)": [[463, "skbio.sequence.Protein.__bool__", false]], "__bool__() (skbio.sequence.rna method)": [[516, "skbio.sequence.RNA.__bool__", false]], "__bool__() (skbio.sequence.sequence method)": [[575, "skbio.sequence.Sequence.__bool__", false]], "__call__() (skbio.alignment.stripedsmithwaterman method)": [[54, "skbio.alignment.StripedSmithWaterman.__call__", false]], "__call__() (skbio.workflow.method method)": [[1031, "skbio.workflow.method.__call__", false]], "__call__() (skbio.workflow.requires method)": [[1042, "skbio.workflow.requires.__call__", false]], "__call__() (skbio.workflow.workflow method)": [[1019, "skbio.workflow.Workflow.__call__", false]], "__contains__() (skbio.alignment.tabularmsa method)": [[67, "skbio.alignment.TabularMSA.__contains__", false]], "__contains__() (skbio.sequence.dna method)": [[342, "skbio.sequence.DNA.__contains__", false]], "__contains__() (skbio.sequence.grammaredsequence method)": [[413, "skbio.sequence.GrammaredSequence.__contains__", false]], "__contains__() (skbio.sequence.protein method)": [[464, "skbio.sequence.Protein.__contains__", false]], "__contains__() (skbio.sequence.rna method)": [[517, "skbio.sequence.RNA.__contains__", false]], "__contains__() (skbio.sequence.sequence method)": [[576, "skbio.sequence.Sequence.__contains__", false]], "__contains__() (skbio.sequence.substitutionmatrix method)": [[613, "skbio.sequence.SubstitutionMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.dissimilaritymatrix method)": [[666, "skbio.stats.distance.DissimilarityMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.distancematrix method)": [[689, "skbio.stats.distance.DistanceMatrix.__contains__", false]], "__copy__() (skbio.alignment.tabularmsa method)": [[68, "skbio.alignment.TabularMSA.__copy__", false]], "__copy__() (skbio.metadata.intervalmetadata method)": [[267, "skbio.metadata.IntervalMetadata.__copy__", false]], "__copy__() (skbio.sequence.dna method)": [[343, "skbio.sequence.DNA.__copy__", false]], "__copy__() (skbio.sequence.grammaredsequence method)": [[414, "skbio.sequence.GrammaredSequence.__copy__", false]], "__copy__() (skbio.sequence.protein method)": [[465, "skbio.sequence.Protein.__copy__", false]], "__copy__() (skbio.sequence.rna method)": [[518, "skbio.sequence.RNA.__copy__", false]], "__copy__() (skbio.sequence.sequence method)": [[577, "skbio.sequence.Sequence.__copy__", false]], "__copy__() (skbio.tree.treenode method)": [[913, "skbio.tree.TreeNode.__copy__", false]], "__deepcopy__() (skbio.alignment.tabularmsa method)": [[69, "skbio.alignment.TabularMSA.__deepcopy__", false]], "__deepcopy__() (skbio.metadata.intervalmetadata method)": [[268, "skbio.metadata.IntervalMetadata.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.dna method)": [[344, "skbio.sequence.DNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.grammaredsequence method)": [[415, "skbio.sequence.GrammaredSequence.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.protein method)": [[466, "skbio.sequence.Protein.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.rna method)": [[519, "skbio.sequence.RNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.sequence method)": [[578, "skbio.sequence.Sequence.__deepcopy__", false]], "__deepcopy__() (skbio.tree.treenode method)": [[914, "skbio.tree.TreeNode.__deepcopy__", false]], "__delete__() (skbio.util.classproperty method)": [[999, "skbio.util.classproperty.__delete__", false]], "__eq__() (skbio.alignment.alignmentstructure method)": [[21, "skbio.alignment.AlignmentStructure.__eq__", false]], "__eq__() (skbio.alignment.alignpath method)": [[4, "skbio.alignment.AlignPath.__eq__", false]], "__eq__() (skbio.alignment.pairalignpath method)": [[35, "skbio.alignment.PairAlignPath.__eq__", false]], "__eq__() (skbio.alignment.stripedsmithwaterman method)": [[55, "skbio.alignment.StripedSmithWaterman.__eq__", false]], "__eq__() (skbio.alignment.tabularmsa method)": [[70, "skbio.alignment.TabularMSA.__eq__", false]], "__eq__() (skbio.embedding.proteinembedding method)": [[151, "skbio.embedding.ProteinEmbedding.__eq__", false]], "__eq__() (skbio.embedding.proteinvector method)": [[164, "skbio.embedding.ProteinVector.__eq__", false]], "__eq__() (skbio.io.registry.format method)": [[197, "skbio.io.registry.Format.__eq__", false]], "__eq__() (skbio.io.registry.ioregistry method)": [[210, "skbio.io.registry.IORegistry.__eq__", false]], "__eq__() (skbio.metadata.categoricalmetadatacolumn method)": [[239, "skbio.metadata.CategoricalMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.interval method)": [[257, "skbio.metadata.Interval.__eq__", false]], "__eq__() (skbio.metadata.intervalmetadata method)": [[269, "skbio.metadata.IntervalMetadata.__eq__", false]], "__eq__() (skbio.metadata.metadatacolumn method)": [[286, "skbio.metadata.MetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.numericmetadatacolumn method)": [[304, "skbio.metadata.NumericMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.samplemetadata method)": [[322, "skbio.metadata.SampleMetadata.__eq__", false]], "__eq__() (skbio.sequence.dna method)": [[345, "skbio.sequence.DNA.__eq__", false]], "__eq__() (skbio.sequence.geneticcode method)": [[400, "skbio.sequence.GeneticCode.__eq__", false]], "__eq__() (skbio.sequence.grammaredsequence method)": [[416, "skbio.sequence.GrammaredSequence.__eq__", false]], "__eq__() (skbio.sequence.protein method)": [[467, "skbio.sequence.Protein.__eq__", false]], "__eq__() (skbio.sequence.rna method)": [[520, "skbio.sequence.RNA.__eq__", false]], "__eq__() (skbio.sequence.sequence method)": [[579, "skbio.sequence.Sequence.__eq__", false]], "__eq__() (skbio.sequence.substitutionmatrix method)": [[614, "skbio.sequence.SubstitutionMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.dissimilaritymatrix method)": [[667, "skbio.stats.distance.DissimilarityMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.distancematrix method)": [[690, "skbio.stats.distance.DistanceMatrix.__eq__", false]], "__eq__() (skbio.stats.gradient.averagegradientanova method)": [[725, "skbio.stats.gradient.AverageGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.categoryresults method)": [[736, "skbio.stats.gradient.CategoryResults.__eq__", false]], "__eq__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[747, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanova method)": [[758, "skbio.stats.gradient.GradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanovaresults method)": [[769, "skbio.stats.gradient.GradientANOVAResults.__eq__", false]], "__eq__() (skbio.stats.gradient.groupresults method)": [[780, "skbio.stats.gradient.GroupResults.__eq__", false]], "__eq__() (skbio.stats.gradient.trajectorygradientanova method)": [[791, "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[802, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.ordination.ordinationresults method)": [[815, "skbio.stats.ordination.OrdinationResults.__eq__", false]], "__eq__() (skbio.table.table method)": [[845, "skbio.table.Table.__eq__", false]], "__eq__() (skbio.tree.treenode method)": [[915, "skbio.tree.TreeNode.__eq__", false]], "__eq__() (skbio.util.classproperty method)": [[1000, "skbio.util.classproperty.__eq__", false]], "__eq__() (skbio.workflow.method method)": [[1032, "skbio.workflow.method.__eq__", false]], "__eq__() (skbio.workflow.requires method)": [[1043, "skbio.workflow.requires.__eq__", false]], "__eq__() (skbio.workflow.workflow method)": [[1020, "skbio.workflow.Workflow.__eq__", false]], "__ge__() (skbio.alignment.alignmentstructure method)": [[22, "skbio.alignment.AlignmentStructure.__ge__", false]], "__ge__() (skbio.alignment.alignpath method)": [[5, "skbio.alignment.AlignPath.__ge__", false]], "__ge__() (skbio.alignment.pairalignpath method)": [[36, "skbio.alignment.PairAlignPath.__ge__", false]], "__ge__() (skbio.alignment.stripedsmithwaterman method)": [[56, "skbio.alignment.StripedSmithWaterman.__ge__", false]], "__ge__() (skbio.alignment.tabularmsa method)": [[71, "skbio.alignment.TabularMSA.__ge__", false]], "__ge__() (skbio.embedding.proteinembedding method)": [[152, "skbio.embedding.ProteinEmbedding.__ge__", false]], "__ge__() (skbio.embedding.proteinvector method)": [[165, "skbio.embedding.ProteinVector.__ge__", false]], "__ge__() (skbio.io.registry.format method)": [[198, "skbio.io.registry.Format.__ge__", false]], "__ge__() (skbio.io.registry.ioregistry method)": [[211, "skbio.io.registry.IORegistry.__ge__", false]], "__ge__() (skbio.metadata.categoricalmetadatacolumn method)": [[240, "skbio.metadata.CategoricalMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.interval method)": [[258, "skbio.metadata.Interval.__ge__", false]], "__ge__() (skbio.metadata.intervalmetadata method)": [[270, "skbio.metadata.IntervalMetadata.__ge__", false]], "__ge__() (skbio.metadata.metadatacolumn method)": [[287, "skbio.metadata.MetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.numericmetadatacolumn method)": [[305, "skbio.metadata.NumericMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.samplemetadata method)": [[323, "skbio.metadata.SampleMetadata.__ge__", false]], "__ge__() (skbio.sequence.dna method)": [[346, "skbio.sequence.DNA.__ge__", false]], "__ge__() (skbio.sequence.geneticcode method)": [[401, "skbio.sequence.GeneticCode.__ge__", false]], "__ge__() (skbio.sequence.grammaredsequence method)": [[417, "skbio.sequence.GrammaredSequence.__ge__", false]], "__ge__() (skbio.sequence.protein method)": [[468, "skbio.sequence.Protein.__ge__", false]], "__ge__() (skbio.sequence.rna method)": [[521, "skbio.sequence.RNA.__ge__", false]], "__ge__() (skbio.sequence.sequence method)": [[580, "skbio.sequence.Sequence.__ge__", false]], "__ge__() (skbio.sequence.substitutionmatrix method)": [[615, "skbio.sequence.SubstitutionMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.dissimilaritymatrix method)": [[668, "skbio.stats.distance.DissimilarityMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.distancematrix method)": [[691, "skbio.stats.distance.DistanceMatrix.__ge__", false]], "__ge__() (skbio.stats.gradient.averagegradientanova method)": [[726, "skbio.stats.gradient.AverageGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.categoryresults method)": [[737, "skbio.stats.gradient.CategoryResults.__ge__", false]], "__ge__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[748, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanova method)": [[759, "skbio.stats.gradient.GradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanovaresults method)": [[770, "skbio.stats.gradient.GradientANOVAResults.__ge__", false]], "__ge__() (skbio.stats.gradient.groupresults method)": [[781, "skbio.stats.gradient.GroupResults.__ge__", false]], "__ge__() (skbio.stats.gradient.trajectorygradientanova method)": [[792, "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[803, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.ordination.ordinationresults method)": [[816, "skbio.stats.ordination.OrdinationResults.__ge__", false]], "__ge__() (skbio.table.table method)": [[846, "skbio.table.Table.__ge__", false]], "__ge__() (skbio.tree.treenode method)": [[916, "skbio.tree.TreeNode.__ge__", false]], "__ge__() (skbio.util.classproperty method)": [[1001, "skbio.util.classproperty.__ge__", false]], "__ge__() (skbio.workflow.method method)": [[1033, "skbio.workflow.method.__ge__", false]], "__ge__() (skbio.workflow.requires method)": [[1044, "skbio.workflow.requires.__ge__", false]], "__ge__() (skbio.workflow.workflow method)": [[1021, "skbio.workflow.Workflow.__ge__", false]], "__get__() (skbio.util.classproperty method)": [[1002, "skbio.util.classproperty.__get__", false]], "__getitem__() (skbio.alignment.alignmentstructure method)": [[23, "skbio.alignment.AlignmentStructure.__getitem__", false]], "__getitem__() (skbio.alignment.tabularmsa method)": [[72, "skbio.alignment.TabularMSA.__getitem__", false]], "__getitem__() (skbio.sequence.dna method)": [[347, "skbio.sequence.DNA.__getitem__", false]], "__getitem__() (skbio.sequence.grammaredsequence method)": [[418, "skbio.sequence.GrammaredSequence.__getitem__", false]], "__getitem__() (skbio.sequence.protein method)": [[469, "skbio.sequence.Protein.__getitem__", false]], "__getitem__() (skbio.sequence.rna method)": [[522, "skbio.sequence.RNA.__getitem__", false]], "__getitem__() (skbio.sequence.sequence method)": [[581, "skbio.sequence.Sequence.__getitem__", false]], "__getitem__() (skbio.sequence.substitutionmatrix method)": [[616, "skbio.sequence.SubstitutionMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.dissimilaritymatrix method)": [[669, "skbio.stats.distance.DissimilarityMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.distancematrix method)": [[692, "skbio.stats.distance.DistanceMatrix.__getitem__", false]], "__getitem__() (skbio.table.table method)": [[847, "skbio.table.Table.__getitem__", false]], "__getitem__() (skbio.tree.treenode method)": [[917, "skbio.tree.TreeNode.__getitem__", false]], "__getstate__() (skbio.alignment.alignmentstructure method)": [[24, "skbio.alignment.AlignmentStructure.__getstate__", false]], "__getstate__() (skbio.alignment.alignpath method)": [[6, "skbio.alignment.AlignPath.__getstate__", false]], "__getstate__() (skbio.alignment.pairalignpath method)": [[37, "skbio.alignment.PairAlignPath.__getstate__", false]], "__getstate__() (skbio.alignment.stripedsmithwaterman method)": [[57, "skbio.alignment.StripedSmithWaterman.__getstate__", false]], "__getstate__() (skbio.alignment.tabularmsa method)": [[73, "skbio.alignment.TabularMSA.__getstate__", false]], "__getstate__() (skbio.embedding.proteinembedding method)": [[153, "skbio.embedding.ProteinEmbedding.__getstate__", false]], "__getstate__() (skbio.embedding.proteinvector method)": [[166, "skbio.embedding.ProteinVector.__getstate__", false]], "__getstate__() (skbio.io.registry.format method)": [[199, "skbio.io.registry.Format.__getstate__", false]], "__getstate__() (skbio.io.registry.ioregistry method)": [[212, "skbio.io.registry.IORegistry.__getstate__", false]], "__getstate__() (skbio.metadata.categoricalmetadatacolumn method)": [[241, "skbio.metadata.CategoricalMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.interval method)": [[259, "skbio.metadata.Interval.__getstate__", false]], "__getstate__() (skbio.metadata.intervalmetadata method)": [[271, "skbio.metadata.IntervalMetadata.__getstate__", false]], "__getstate__() (skbio.metadata.metadatacolumn method)": [[288, "skbio.metadata.MetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.numericmetadatacolumn method)": [[306, "skbio.metadata.NumericMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.samplemetadata method)": [[324, "skbio.metadata.SampleMetadata.__getstate__", false]], "__getstate__() (skbio.sequence.dna method)": [[348, "skbio.sequence.DNA.__getstate__", false]], "__getstate__() (skbio.sequence.geneticcode method)": [[402, "skbio.sequence.GeneticCode.__getstate__", false]], "__getstate__() (skbio.sequence.grammaredsequence method)": [[419, "skbio.sequence.GrammaredSequence.__getstate__", false]], "__getstate__() (skbio.sequence.protein method)": [[470, "skbio.sequence.Protein.__getstate__", false]], "__getstate__() (skbio.sequence.rna method)": [[523, "skbio.sequence.RNA.__getstate__", false]], "__getstate__() (skbio.sequence.sequence method)": [[582, "skbio.sequence.Sequence.__getstate__", false]], "__getstate__() (skbio.sequence.substitutionmatrix method)": [[617, "skbio.sequence.SubstitutionMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.dissimilaritymatrix method)": [[670, "skbio.stats.distance.DissimilarityMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.distancematrix method)": [[693, "skbio.stats.distance.DistanceMatrix.__getstate__", false]], "__getstate__() (skbio.stats.gradient.averagegradientanova method)": [[727, "skbio.stats.gradient.AverageGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.categoryresults method)": [[738, "skbio.stats.gradient.CategoryResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[749, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanova method)": [[760, "skbio.stats.gradient.GradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanovaresults method)": [[771, "skbio.stats.gradient.GradientANOVAResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.groupresults method)": [[782, "skbio.stats.gradient.GroupResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.trajectorygradientanova method)": [[793, "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[804, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.ordination.ordinationresults method)": [[817, "skbio.stats.ordination.OrdinationResults.__getstate__", false]], "__getstate__() (skbio.table.table method)": [[848, "skbio.table.Table.__getstate__", false]], "__getstate__() (skbio.tree.treenode method)": [[918, "skbio.tree.TreeNode.__getstate__", false]], "__getstate__() (skbio.util.classproperty method)": [[1003, "skbio.util.classproperty.__getstate__", false]], "__getstate__() (skbio.workflow.method method)": [[1034, "skbio.workflow.method.__getstate__", false]], "__getstate__() (skbio.workflow.requires method)": [[1045, "skbio.workflow.requires.__getstate__", false]], "__getstate__() (skbio.workflow.workflow method)": [[1022, "skbio.workflow.Workflow.__getstate__", false]], "__gt__() (skbio.alignment.alignmentstructure method)": [[25, "skbio.alignment.AlignmentStructure.__gt__", false]], "__gt__() (skbio.alignment.alignpath method)": [[7, "skbio.alignment.AlignPath.__gt__", false]], "__gt__() (skbio.alignment.pairalignpath method)": [[38, "skbio.alignment.PairAlignPath.__gt__", false]], "__gt__() (skbio.alignment.stripedsmithwaterman method)": [[58, "skbio.alignment.StripedSmithWaterman.__gt__", false]], "__gt__() (skbio.alignment.tabularmsa method)": [[74, "skbio.alignment.TabularMSA.__gt__", false]], "__gt__() (skbio.embedding.proteinembedding method)": [[154, "skbio.embedding.ProteinEmbedding.__gt__", false]], "__gt__() (skbio.embedding.proteinvector method)": [[167, "skbio.embedding.ProteinVector.__gt__", false]], "__gt__() (skbio.io.registry.format method)": [[200, "skbio.io.registry.Format.__gt__", false]], "__gt__() (skbio.io.registry.ioregistry method)": [[213, "skbio.io.registry.IORegistry.__gt__", false]], "__gt__() (skbio.metadata.categoricalmetadatacolumn method)": [[242, "skbio.metadata.CategoricalMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.interval method)": [[260, "skbio.metadata.Interval.__gt__", false]], "__gt__() (skbio.metadata.intervalmetadata method)": [[272, "skbio.metadata.IntervalMetadata.__gt__", false]], "__gt__() (skbio.metadata.metadatacolumn method)": [[289, "skbio.metadata.MetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.numericmetadatacolumn method)": [[307, "skbio.metadata.NumericMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.samplemetadata method)": [[325, "skbio.metadata.SampleMetadata.__gt__", false]], "__gt__() (skbio.sequence.dna method)": [[349, "skbio.sequence.DNA.__gt__", false]], "__gt__() (skbio.sequence.geneticcode method)": [[403, "skbio.sequence.GeneticCode.__gt__", false]], "__gt__() (skbio.sequence.grammaredsequence method)": [[420, "skbio.sequence.GrammaredSequence.__gt__", false]], "__gt__() (skbio.sequence.protein method)": [[471, "skbio.sequence.Protein.__gt__", false]], "__gt__() (skbio.sequence.rna method)": [[524, "skbio.sequence.RNA.__gt__", false]], "__gt__() (skbio.sequence.sequence method)": [[583, "skbio.sequence.Sequence.__gt__", false]], "__gt__() (skbio.sequence.substitutionmatrix method)": [[618, "skbio.sequence.SubstitutionMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.dissimilaritymatrix method)": [[671, "skbio.stats.distance.DissimilarityMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.distancematrix method)": [[694, "skbio.stats.distance.DistanceMatrix.__gt__", false]], "__gt__() (skbio.stats.gradient.averagegradientanova method)": [[728, "skbio.stats.gradient.AverageGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.categoryresults method)": [[739, "skbio.stats.gradient.CategoryResults.__gt__", false]], "__gt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[750, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanova method)": [[761, "skbio.stats.gradient.GradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanovaresults method)": [[772, "skbio.stats.gradient.GradientANOVAResults.__gt__", false]], "__gt__() (skbio.stats.gradient.groupresults method)": [[783, "skbio.stats.gradient.GroupResults.__gt__", false]], "__gt__() (skbio.stats.gradient.trajectorygradientanova method)": [[794, "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[805, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.ordination.ordinationresults method)": [[818, "skbio.stats.ordination.OrdinationResults.__gt__", false]], "__gt__() (skbio.table.table method)": [[849, "skbio.table.Table.__gt__", false]], "__gt__() (skbio.tree.treenode method)": [[919, "skbio.tree.TreeNode.__gt__", false]], "__gt__() (skbio.util.classproperty method)": [[1004, "skbio.util.classproperty.__gt__", false]], "__gt__() (skbio.workflow.method method)": [[1035, "skbio.workflow.method.__gt__", false]], "__gt__() (skbio.workflow.requires method)": [[1046, "skbio.workflow.requires.__gt__", false]], "__gt__() (skbio.workflow.workflow method)": [[1023, "skbio.workflow.Workflow.__gt__", false]], "__hash__() (skbio.alignment.alignmentstructure method)": [[26, "skbio.alignment.AlignmentStructure.__hash__", false]], "__hash__() (skbio.alignment.alignpath method)": [[8, "skbio.alignment.AlignPath.__hash__", false]], "__hash__() (skbio.alignment.pairalignpath method)": [[39, "skbio.alignment.PairAlignPath.__hash__", false]], "__hash__() (skbio.alignment.stripedsmithwaterman method)": [[59, "skbio.alignment.StripedSmithWaterman.__hash__", false]], "__hash__() (skbio.embedding.proteinembedding method)": [[155, "skbio.embedding.ProteinEmbedding.__hash__", false]], "__hash__() (skbio.embedding.proteinvector method)": [[168, "skbio.embedding.ProteinVector.__hash__", false]], "__hash__() (skbio.io.registry.format method)": [[201, "skbio.io.registry.Format.__hash__", false]], "__hash__() (skbio.io.registry.ioregistry method)": [[214, "skbio.io.registry.IORegistry.__hash__", false]], "__hash__() (skbio.stats.gradient.averagegradientanova method)": [[729, "skbio.stats.gradient.AverageGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.categoryresults method)": [[740, "skbio.stats.gradient.CategoryResults.__hash__", false]], "__hash__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[751, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanova method)": [[762, "skbio.stats.gradient.GradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanovaresults method)": [[773, "skbio.stats.gradient.GradientANOVAResults.__hash__", false]], "__hash__() (skbio.stats.gradient.groupresults method)": [[784, "skbio.stats.gradient.GroupResults.__hash__", false]], "__hash__() (skbio.stats.gradient.trajectorygradientanova method)": [[795, "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[806, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.ordination.ordinationresults method)": [[819, "skbio.stats.ordination.OrdinationResults.__hash__", false]], "__hash__() (skbio.tree.treenode method)": [[920, "skbio.tree.TreeNode.__hash__", false]], "__hash__() (skbio.util.classproperty method)": [[1005, "skbio.util.classproperty.__hash__", false]], "__hash__() (skbio.workflow.method method)": [[1036, "skbio.workflow.method.__hash__", false]], "__hash__() (skbio.workflow.requires method)": [[1047, "skbio.workflow.requires.__hash__", false]], "__hash__() (skbio.workflow.workflow method)": [[1024, "skbio.workflow.Workflow.__hash__", false]], "__iter__() (skbio.alignment.tabularmsa method)": [[75, "skbio.alignment.TabularMSA.__iter__", false]], "__iter__() (skbio.sequence.dna method)": [[350, "skbio.sequence.DNA.__iter__", false]], "__iter__() (skbio.sequence.grammaredsequence method)": [[421, "skbio.sequence.GrammaredSequence.__iter__", false]], "__iter__() (skbio.sequence.protein method)": [[472, "skbio.sequence.Protein.__iter__", false]], "__iter__() (skbio.sequence.rna method)": [[525, "skbio.sequence.RNA.__iter__", false]], "__iter__() (skbio.sequence.sequence method)": [[584, "skbio.sequence.Sequence.__iter__", false]], "__iter__() (skbio.table.table method)": [[850, "skbio.table.Table.__iter__", false]], "__iter__() (skbio.tree.treenode method)": [[921, "skbio.tree.TreeNode.__iter__", false]], "__le__() (skbio.alignment.alignmentstructure method)": [[27, "skbio.alignment.AlignmentStructure.__le__", false]], "__le__() (skbio.alignment.alignpath method)": [[9, "skbio.alignment.AlignPath.__le__", false]], "__le__() (skbio.alignment.pairalignpath method)": [[40, "skbio.alignment.PairAlignPath.__le__", false]], "__le__() (skbio.alignment.stripedsmithwaterman method)": [[60, "skbio.alignment.StripedSmithWaterman.__le__", false]], "__le__() (skbio.alignment.tabularmsa method)": [[76, "skbio.alignment.TabularMSA.__le__", false]], "__le__() (skbio.embedding.proteinembedding method)": [[156, "skbio.embedding.ProteinEmbedding.__le__", false]], "__le__() (skbio.embedding.proteinvector method)": [[169, "skbio.embedding.ProteinVector.__le__", false]], "__le__() (skbio.io.registry.format method)": [[202, "skbio.io.registry.Format.__le__", false]], "__le__() (skbio.io.registry.ioregistry method)": [[215, "skbio.io.registry.IORegistry.__le__", false]], "__le__() (skbio.metadata.categoricalmetadatacolumn method)": [[243, "skbio.metadata.CategoricalMetadataColumn.__le__", false]], "__le__() (skbio.metadata.interval method)": [[261, "skbio.metadata.Interval.__le__", false]], "__le__() (skbio.metadata.intervalmetadata method)": [[273, "skbio.metadata.IntervalMetadata.__le__", false]], "__le__() (skbio.metadata.metadatacolumn method)": [[290, "skbio.metadata.MetadataColumn.__le__", false]], "__le__() (skbio.metadata.numericmetadatacolumn method)": [[308, "skbio.metadata.NumericMetadataColumn.__le__", false]], "__le__() (skbio.metadata.samplemetadata method)": [[326, "skbio.metadata.SampleMetadata.__le__", false]], "__le__() (skbio.sequence.dna method)": [[351, "skbio.sequence.DNA.__le__", false]], "__le__() (skbio.sequence.geneticcode method)": [[404, "skbio.sequence.GeneticCode.__le__", false]], "__le__() (skbio.sequence.grammaredsequence method)": [[422, "skbio.sequence.GrammaredSequence.__le__", false]], "__le__() (skbio.sequence.protein method)": [[473, "skbio.sequence.Protein.__le__", false]], "__le__() (skbio.sequence.rna method)": [[526, "skbio.sequence.RNA.__le__", false]], "__le__() (skbio.sequence.sequence method)": [[585, "skbio.sequence.Sequence.__le__", false]], "__le__() (skbio.sequence.substitutionmatrix method)": [[619, "skbio.sequence.SubstitutionMatrix.__le__", false]], "__le__() (skbio.stats.distance.dissimilaritymatrix method)": [[672, "skbio.stats.distance.DissimilarityMatrix.__le__", false]], "__le__() (skbio.stats.distance.distancematrix method)": [[695, "skbio.stats.distance.DistanceMatrix.__le__", false]], "__le__() (skbio.stats.gradient.averagegradientanova method)": [[730, "skbio.stats.gradient.AverageGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.categoryresults method)": [[741, "skbio.stats.gradient.CategoryResults.__le__", false]], "__le__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[752, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanova method)": [[763, "skbio.stats.gradient.GradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanovaresults method)": [[774, "skbio.stats.gradient.GradientANOVAResults.__le__", false]], "__le__() (skbio.stats.gradient.groupresults method)": [[785, "skbio.stats.gradient.GroupResults.__le__", false]], "__le__() (skbio.stats.gradient.trajectorygradientanova method)": [[796, "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[807, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.ordination.ordinationresults method)": [[820, "skbio.stats.ordination.OrdinationResults.__le__", false]], "__le__() (skbio.table.table method)": [[851, "skbio.table.Table.__le__", false]], "__le__() (skbio.tree.treenode method)": [[922, "skbio.tree.TreeNode.__le__", false]], "__le__() (skbio.util.classproperty method)": [[1006, "skbio.util.classproperty.__le__", false]], "__le__() (skbio.workflow.method method)": [[1037, "skbio.workflow.method.__le__", false]], "__le__() (skbio.workflow.requires method)": [[1048, "skbio.workflow.requires.__le__", false]], "__le__() (skbio.workflow.workflow method)": [[1025, "skbio.workflow.Workflow.__le__", false]], "__len__() (skbio.alignment.tabularmsa method)": [[77, "skbio.alignment.TabularMSA.__len__", false]], "__len__() (skbio.sequence.dna method)": [[352, "skbio.sequence.DNA.__len__", false]], "__len__() (skbio.sequence.grammaredsequence method)": [[423, "skbio.sequence.GrammaredSequence.__len__", false]], "__len__() (skbio.sequence.protein method)": [[474, "skbio.sequence.Protein.__len__", false]], "__len__() (skbio.sequence.rna method)": [[527, "skbio.sequence.RNA.__len__", false]], "__len__() (skbio.sequence.sequence method)": [[586, "skbio.sequence.Sequence.__len__", false]], "__len__() (skbio.tree.treenode method)": [[923, "skbio.tree.TreeNode.__len__", false]], "__lt__() (skbio.alignment.alignmentstructure method)": [[28, "skbio.alignment.AlignmentStructure.__lt__", false]], "__lt__() (skbio.alignment.alignpath method)": [[10, "skbio.alignment.AlignPath.__lt__", false]], "__lt__() (skbio.alignment.pairalignpath method)": [[41, "skbio.alignment.PairAlignPath.__lt__", false]], "__lt__() (skbio.alignment.stripedsmithwaterman method)": [[61, "skbio.alignment.StripedSmithWaterman.__lt__", false]], "__lt__() (skbio.alignment.tabularmsa method)": [[78, "skbio.alignment.TabularMSA.__lt__", false]], "__lt__() (skbio.embedding.proteinembedding method)": [[157, "skbio.embedding.ProteinEmbedding.__lt__", false]], "__lt__() (skbio.embedding.proteinvector method)": [[170, "skbio.embedding.ProteinVector.__lt__", false]], "__lt__() (skbio.io.registry.format method)": [[203, "skbio.io.registry.Format.__lt__", false]], "__lt__() (skbio.io.registry.ioregistry method)": [[216, "skbio.io.registry.IORegistry.__lt__", false]], "__lt__() (skbio.metadata.categoricalmetadatacolumn method)": [[244, "skbio.metadata.CategoricalMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.interval method)": [[262, "skbio.metadata.Interval.__lt__", false]], "__lt__() (skbio.metadata.intervalmetadata method)": [[274, "skbio.metadata.IntervalMetadata.__lt__", false]], "__lt__() (skbio.metadata.metadatacolumn method)": [[291, "skbio.metadata.MetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.numericmetadatacolumn method)": [[309, "skbio.metadata.NumericMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.samplemetadata method)": [[327, "skbio.metadata.SampleMetadata.__lt__", false]], "__lt__() (skbio.sequence.dna method)": [[353, "skbio.sequence.DNA.__lt__", false]], "__lt__() (skbio.sequence.geneticcode method)": [[405, "skbio.sequence.GeneticCode.__lt__", false]], "__lt__() (skbio.sequence.grammaredsequence method)": [[424, "skbio.sequence.GrammaredSequence.__lt__", false]], "__lt__() (skbio.sequence.protein method)": [[475, "skbio.sequence.Protein.__lt__", false]], "__lt__() (skbio.sequence.rna method)": [[528, "skbio.sequence.RNA.__lt__", false]], "__lt__() (skbio.sequence.sequence method)": [[587, "skbio.sequence.Sequence.__lt__", false]], "__lt__() (skbio.sequence.substitutionmatrix method)": [[620, "skbio.sequence.SubstitutionMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.dissimilaritymatrix method)": [[673, "skbio.stats.distance.DissimilarityMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.distancematrix method)": [[696, "skbio.stats.distance.DistanceMatrix.__lt__", false]], "__lt__() (skbio.stats.gradient.averagegradientanova method)": [[731, "skbio.stats.gradient.AverageGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.categoryresults method)": [[742, "skbio.stats.gradient.CategoryResults.__lt__", false]], "__lt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[753, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanova method)": [[764, "skbio.stats.gradient.GradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanovaresults method)": [[775, "skbio.stats.gradient.GradientANOVAResults.__lt__", false]], "__lt__() (skbio.stats.gradient.groupresults method)": [[786, "skbio.stats.gradient.GroupResults.__lt__", false]], "__lt__() (skbio.stats.gradient.trajectorygradientanova method)": [[797, "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[808, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.ordination.ordinationresults method)": [[821, "skbio.stats.ordination.OrdinationResults.__lt__", false]], "__lt__() (skbio.table.table method)": [[852, "skbio.table.Table.__lt__", false]], "__lt__() (skbio.tree.treenode method)": [[924, "skbio.tree.TreeNode.__lt__", false]], "__lt__() (skbio.util.classproperty method)": [[1007, "skbio.util.classproperty.__lt__", false]], "__lt__() (skbio.workflow.method method)": [[1038, "skbio.workflow.method.__lt__", false]], "__lt__() (skbio.workflow.requires method)": [[1049, "skbio.workflow.requires.__lt__", false]], "__lt__() (skbio.workflow.workflow method)": [[1026, "skbio.workflow.Workflow.__lt__", false]], "__ne__() (skbio.alignment.alignmentstructure method)": [[29, "skbio.alignment.AlignmentStructure.__ne__", false]], "__ne__() (skbio.alignment.alignpath method)": [[11, "skbio.alignment.AlignPath.__ne__", false]], "__ne__() (skbio.alignment.pairalignpath method)": [[42, "skbio.alignment.PairAlignPath.__ne__", false]], "__ne__() (skbio.alignment.stripedsmithwaterman method)": [[62, "skbio.alignment.StripedSmithWaterman.__ne__", false]], "__ne__() (skbio.alignment.tabularmsa method)": [[79, "skbio.alignment.TabularMSA.__ne__", false]], "__ne__() (skbio.embedding.proteinembedding method)": [[158, "skbio.embedding.ProteinEmbedding.__ne__", false]], "__ne__() (skbio.embedding.proteinvector method)": [[171, "skbio.embedding.ProteinVector.__ne__", false]], "__ne__() (skbio.io.registry.format method)": [[204, "skbio.io.registry.Format.__ne__", false]], "__ne__() (skbio.io.registry.ioregistry method)": [[217, "skbio.io.registry.IORegistry.__ne__", false]], "__ne__() (skbio.metadata.categoricalmetadatacolumn method)": [[245, "skbio.metadata.CategoricalMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.interval method)": [[263, "skbio.metadata.Interval.__ne__", false]], "__ne__() (skbio.metadata.intervalmetadata method)": [[275, "skbio.metadata.IntervalMetadata.__ne__", false]], "__ne__() (skbio.metadata.metadatacolumn method)": [[292, "skbio.metadata.MetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.numericmetadatacolumn method)": [[310, "skbio.metadata.NumericMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.samplemetadata method)": [[328, "skbio.metadata.SampleMetadata.__ne__", false]], "__ne__() (skbio.sequence.dna method)": [[354, "skbio.sequence.DNA.__ne__", false]], "__ne__() (skbio.sequence.geneticcode method)": [[406, "skbio.sequence.GeneticCode.__ne__", false]], "__ne__() (skbio.sequence.grammaredsequence method)": [[425, "skbio.sequence.GrammaredSequence.__ne__", false]], "__ne__() (skbio.sequence.protein method)": [[476, "skbio.sequence.Protein.__ne__", false]], "__ne__() (skbio.sequence.rna method)": [[529, "skbio.sequence.RNA.__ne__", false]], "__ne__() (skbio.sequence.sequence method)": [[588, "skbio.sequence.Sequence.__ne__", false]], "__ne__() (skbio.sequence.substitutionmatrix method)": [[621, "skbio.sequence.SubstitutionMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.dissimilaritymatrix method)": [[674, "skbio.stats.distance.DissimilarityMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.distancematrix method)": [[697, "skbio.stats.distance.DistanceMatrix.__ne__", false]], "__ne__() (skbio.stats.gradient.averagegradientanova method)": [[732, "skbio.stats.gradient.AverageGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.categoryresults method)": [[743, "skbio.stats.gradient.CategoryResults.__ne__", false]], "__ne__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[754, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanova method)": [[765, "skbio.stats.gradient.GradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanovaresults method)": [[776, "skbio.stats.gradient.GradientANOVAResults.__ne__", false]], "__ne__() (skbio.stats.gradient.groupresults method)": [[787, "skbio.stats.gradient.GroupResults.__ne__", false]], "__ne__() (skbio.stats.gradient.trajectorygradientanova method)": [[798, "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[809, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.ordination.ordinationresults method)": [[822, "skbio.stats.ordination.OrdinationResults.__ne__", false]], "__ne__() (skbio.table.table method)": [[853, "skbio.table.Table.__ne__", false]], "__ne__() (skbio.tree.treenode method)": [[925, "skbio.tree.TreeNode.__ne__", false]], "__ne__() (skbio.util.classproperty method)": [[1008, "skbio.util.classproperty.__ne__", false]], "__ne__() (skbio.workflow.method method)": [[1039, "skbio.workflow.method.__ne__", false]], "__ne__() (skbio.workflow.requires method)": [[1050, "skbio.workflow.requires.__ne__", false]], "__ne__() (skbio.workflow.workflow method)": [[1027, "skbio.workflow.Workflow.__ne__", false]], "__reversed__() (skbio.alignment.tabularmsa method)": [[80, "skbio.alignment.TabularMSA.__reversed__", false]], "__reversed__() (skbio.sequence.dna method)": [[355, "skbio.sequence.DNA.__reversed__", false]], "__reversed__() (skbio.sequence.grammaredsequence method)": [[426, "skbio.sequence.GrammaredSequence.__reversed__", false]], "__reversed__() (skbio.sequence.protein method)": [[477, "skbio.sequence.Protein.__reversed__", false]], "__reversed__() (skbio.sequence.rna method)": [[530, "skbio.sequence.RNA.__reversed__", false]], "__reversed__() (skbio.sequence.sequence method)": [[589, "skbio.sequence.Sequence.__reversed__", false]], "__set__() (skbio.util.classproperty method)": [[1009, "skbio.util.classproperty.__set__", false]], "__set_name__() (skbio.util.classproperty method)": [[1010, "skbio.util.classproperty.__set_name__", false]], "__setstate__() (skbio.alignment.alignmentstructure method)": [[30, "skbio.alignment.AlignmentStructure.__setstate__", false]], "__setstate__() (skbio.alignment.stripedsmithwaterman method)": [[63, "skbio.alignment.StripedSmithWaterman.__setstate__", false]], "__str__() (skbio.alignment.alignmentstructure method)": [[31, "skbio.alignment.AlignmentStructure.__str__", false]], "__str__() (skbio.alignment.alignpath method)": [[12, "skbio.alignment.AlignPath.__str__", false]], "__str__() (skbio.alignment.pairalignpath method)": [[43, "skbio.alignment.PairAlignPath.__str__", false]], "__str__() (skbio.alignment.stripedsmithwaterman method)": [[64, "skbio.alignment.StripedSmithWaterman.__str__", false]], "__str__() (skbio.alignment.tabularmsa method)": [[81, "skbio.alignment.TabularMSA.__str__", false]], "__str__() (skbio.embedding.proteinembedding method)": [[159, "skbio.embedding.ProteinEmbedding.__str__", false]], "__str__() (skbio.embedding.proteinvector method)": [[172, "skbio.embedding.ProteinVector.__str__", false]], "__str__() (skbio.io.registry.format method)": [[205, "skbio.io.registry.Format.__str__", false]], "__str__() (skbio.io.registry.ioregistry method)": [[218, "skbio.io.registry.IORegistry.__str__", false]], "__str__() (skbio.metadata.categoricalmetadatacolumn method)": [[246, "skbio.metadata.CategoricalMetadataColumn.__str__", false]], "__str__() (skbio.metadata.interval method)": [[264, "skbio.metadata.Interval.__str__", false]], "__str__() (skbio.metadata.intervalmetadata method)": [[276, "skbio.metadata.IntervalMetadata.__str__", false]], "__str__() (skbio.metadata.metadatacolumn method)": [[293, "skbio.metadata.MetadataColumn.__str__", false]], "__str__() (skbio.metadata.numericmetadatacolumn method)": [[311, "skbio.metadata.NumericMetadataColumn.__str__", false]], "__str__() (skbio.metadata.samplemetadata method)": [[329, "skbio.metadata.SampleMetadata.__str__", false]], "__str__() (skbio.sequence.dna method)": [[356, "skbio.sequence.DNA.__str__", false]], "__str__() (skbio.sequence.geneticcode method)": [[407, "skbio.sequence.GeneticCode.__str__", false]], "__str__() (skbio.sequence.grammaredsequence method)": [[427, "skbio.sequence.GrammaredSequence.__str__", false]], "__str__() (skbio.sequence.protein method)": [[478, "skbio.sequence.Protein.__str__", false]], "__str__() (skbio.sequence.rna method)": [[531, "skbio.sequence.RNA.__str__", false]], "__str__() (skbio.sequence.sequence method)": [[590, "skbio.sequence.Sequence.__str__", false]], "__str__() (skbio.sequence.substitutionmatrix method)": [[622, "skbio.sequence.SubstitutionMatrix.__str__", false]], "__str__() (skbio.stats.distance.dissimilaritymatrix method)": [[675, "skbio.stats.distance.DissimilarityMatrix.__str__", false]], "__str__() (skbio.stats.distance.distancematrix method)": [[698, "skbio.stats.distance.DistanceMatrix.__str__", false]], "__str__() (skbio.stats.gradient.averagegradientanova method)": [[733, "skbio.stats.gradient.AverageGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.categoryresults method)": [[744, "skbio.stats.gradient.CategoryResults.__str__", false]], "__str__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[755, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanova method)": [[766, "skbio.stats.gradient.GradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanovaresults method)": [[777, "skbio.stats.gradient.GradientANOVAResults.__str__", false]], "__str__() (skbio.stats.gradient.groupresults method)": [[788, "skbio.stats.gradient.GroupResults.__str__", false]], "__str__() (skbio.stats.gradient.trajectorygradientanova method)": [[799, "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[810, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.ordination.ordinationresults method)": [[823, "skbio.stats.ordination.OrdinationResults.__str__", false]], "__str__() (skbio.table.table method)": [[854, "skbio.table.Table.__str__", false]], "__str__() (skbio.tree.treenode method)": [[926, "skbio.tree.TreeNode.__str__", false]], "__str__() (skbio.util.classproperty method)": [[1011, "skbio.util.classproperty.__str__", false]], "__str__() (skbio.workflow.method method)": [[1040, "skbio.workflow.method.__str__", false]], "__str__() (skbio.workflow.requires method)": [[1051, "skbio.workflow.requires.__str__", false]], "__str__() (skbio.workflow.workflow method)": [[1028, "skbio.workflow.Workflow.__str__", false]], "accumulate_to_ancestor() (skbio.tree.treenode method)": [[927, "skbio.tree.TreeNode.accumulate_to_ancestor", false]], "ace() (in module skbio.diversity.alpha)": [[107, "skbio.diversity.alpha.ace", false]], "add() (skbio.metadata.intervalmetadata method)": [[277, "skbio.metadata.IntervalMetadata.add", false]], "add_format() (skbio.io.registry.ioregistry method)": [[219, "skbio.io.registry.IORegistry.add_format", false]], "add_group_metadata() (skbio.table.table method)": [[855, "skbio.table.Table.add_group_metadata", false]], "add_metadata() (skbio.table.table method)": [[856, "skbio.table.Table.add_metadata", false]], "align_to() (skbio.table.table method)": [[857, "skbio.table.Table.align_to", false]], "align_to_dataframe() (skbio.table.table method)": [[858, "skbio.table.Table.align_to_dataframe", false]], "align_tree() (skbio.table.table method)": [[859, "skbio.table.Table.align_tree", false]], "alignmentstructure (class in skbio.alignment)": [[20, "skbio.alignment.AlignmentStructure", false]], "alignpath (class in skbio.alignment)": [[3, "skbio.alignment.AlignPath", false]], "alpha_diversity() (in module skbio.diversity)": [[141, "skbio.diversity.alpha_diversity", false]], "alr() (in module skbio.stats.composition)": [[644, "skbio.stats.composition.alr", false]], "alr_inv() (in module skbio.stats.composition)": [[645, "skbio.stats.composition.alr_inv", false]], "ancestors() (skbio.tree.treenode method)": [[928, "skbio.tree.TreeNode.ancestors", false]], "ancom() (in module skbio.stats.composition)": [[646, "skbio.stats.composition.ancom", false]], "anosim() (in module skbio.stats.distance)": [[714, "skbio.stats.distance.anosim", false]], "append() (skbio.alignment.tabularmsa method)": [[82, "skbio.alignment.TabularMSA.append", false]], "append() (skbio.tree.treenode method)": [[929, "skbio.tree.TreeNode.append", false]], "ascii_art() (skbio.tree.treenode method)": [[930, "skbio.tree.TreeNode.ascii_art", false]], "assert_data_frame_almost_equal() (in module skbio.util)": [[995, "skbio.util.assert_data_frame_almost_equal", false]], "assert_ordination_results_equal() (in module skbio.util)": [[996, "skbio.util.assert_ordination_results_equal", false]], "assign_ids() (skbio.tree.treenode method)": [[931, "skbio.tree.TreeNode.assign_ids", false]], "assign_supports() (skbio.tree.treenode method)": [[932, "skbio.tree.TreeNode.assign_supports", false]], "averagegradientanova (class in skbio.stats.gradient)": [[724, "skbio.stats.gradient.AverageGradientANOVA", false]], "berger_parker_d() (in module skbio.diversity.alpha)": [[108, "skbio.diversity.alpha.berger_parker_d", false]], "beta_diversity() (in module skbio.diversity)": [[145, "skbio.diversity.beta_diversity", false]], "between() (skbio.sequence.substitutionmatrix method)": [[623, "skbio.sequence.SubstitutionMatrix.between", false]], "between() (skbio.stats.distance.dissimilaritymatrix method)": [[676, "skbio.stats.distance.DissimilarityMatrix.between", false]], "between() (skbio.stats.distance.distancematrix method)": [[699, "skbio.stats.distance.DistanceMatrix.between", false]], "bifurcate() (skbio.tree.treenode method)": [[933, "skbio.tree.TreeNode.bifurcate", false]], "bioenv() (in module skbio.stats.distance)": [[715, "skbio.stats.distance.bioenv", false]], "block_beta_diversity() (in module skbio.diversity)": [[146, "skbio.diversity.block_beta_diversity", false]], "brillouin_d() (in module skbio.diversity.alpha)": [[109, "skbio.diversity.alpha.brillouin_d", false]], "by_name() (skbio.sequence.substitutionmatrix class method)": [[624, "skbio.sequence.SubstitutionMatrix.by_name", false]], "bytes() (skbio.embedding.proteinembedding method)": [[160, "skbio.embedding.ProteinEmbedding.bytes", false]], "bytes() (skbio.embedding.proteinvector method)": [[173, "skbio.embedding.ProteinVector.bytes", false]], "ca() (in module skbio.stats.ordination)": [[827, "skbio.stats.ordination.ca", false]], "cache_attr() (skbio.tree.treenode method)": [[934, "skbio.tree.TreeNode.cache_attr", false]], "cardinal_to_ordinal() (in module skbio.util)": [[997, "skbio.util.cardinal_to_ordinal", false]], "categoricalmetadatacolumn (class in skbio.metadata)": [[238, "skbio.metadata.CategoricalMetadataColumn", false]], "categoryresults (class in skbio.stats.gradient)": [[735, "skbio.stats.gradient.CategoryResults", false]], "cca() (in module skbio.stats.ordination)": [[828, "skbio.stats.ordination.cca", false]], "centralize() (in module skbio.stats.composition)": [[647, "skbio.stats.composition.centralize", false]], "chao1() (in module skbio.diversity.alpha)": [[110, "skbio.diversity.alpha.chao1", false]], "chao1_ci() (in module skbio.diversity.alpha)": [[111, "skbio.diversity.alpha.chao1_ci", false]], "classproperty (class in skbio.util)": [[998, "skbio.util.classproperty", false]], "closure() (in module skbio.stats.composition)": [[648, "skbio.stats.composition.closure", false]], "clr() (in module skbio.stats.composition)": [[649, "skbio.stats.composition.clr", false]], "clr_inv() (in module skbio.stats.composition)": [[650, "skbio.stats.composition.clr_inv", false]], "collapse() (skbio.table.table method)": [[860, "skbio.table.Table.collapse", false]], "compare_rfd() (skbio.tree.treenode method)": [[935, "skbio.tree.TreeNode.compare_rfd", false]], "compare_subsets() (skbio.tree.treenode method)": [[936, "skbio.tree.TreeNode.compare_subsets", false]], "compare_tip_distances() (skbio.tree.treenode method)": [[937, "skbio.tree.TreeNode.compare_tip_distances", false]], "complement() (skbio.sequence.dna method)": [[357, "skbio.sequence.DNA.complement", false]], "complement() (skbio.sequence.rna method)": [[532, "skbio.sequence.RNA.complement", false]], "concat() (skbio.metadata.intervalmetadata class method)": [[278, "skbio.metadata.IntervalMetadata.concat", false]], "concat() (skbio.sequence.dna class method)": [[358, "skbio.sequence.DNA.concat", false]], "concat() (skbio.sequence.grammaredsequence class method)": [[428, "skbio.sequence.GrammaredSequence.concat", false]], "concat() (skbio.sequence.protein class method)": [[479, "skbio.sequence.Protein.concat", false]], "concat() (skbio.sequence.rna class method)": [[533, "skbio.sequence.RNA.concat", false]], "concat() (skbio.sequence.sequence class method)": [[591, "skbio.sequence.Sequence.concat", false]], "concat() (skbio.table.table method)": [[861, "skbio.table.Table.concat", false]], "condensed_form() (skbio.stats.distance.distancematrix method)": [[700, "skbio.stats.distance.DistanceMatrix.condensed_form", false]], "confidence_bound() (in module skbio.stats.power)": [[839, "skbio.stats.power.confidence_bound", false]], "consensus() (skbio.alignment.tabularmsa method)": [[83, "skbio.alignment.TabularMSA.consensus", false]], "conservation() (skbio.alignment.tabularmsa method)": [[84, "skbio.alignment.TabularMSA.conservation", false]], "copy() (skbio.sequence.substitutionmatrix method)": [[625, "skbio.sequence.SubstitutionMatrix.copy", false]], "copy() (skbio.stats.distance.dissimilaritymatrix method)": [[677, "skbio.stats.distance.DissimilarityMatrix.copy", false]], "copy() (skbio.stats.distance.distancematrix method)": [[701, "skbio.stats.distance.DistanceMatrix.copy", false]], "copy() (skbio.table.table method)": [[862, "skbio.table.Table.copy", false]], "copy() (skbio.tree.treenode method)": [[938, "skbio.tree.TreeNode.copy", false]], "corr() (in module skbio.stats.ordination)": [[829, "skbio.stats.ordination.corr", false]], "count() (skbio.sequence.dna method)": [[359, "skbio.sequence.DNA.count", false]], "count() (skbio.sequence.grammaredsequence method)": [[429, "skbio.sequence.GrammaredSequence.count", false]], "count() (skbio.sequence.protein method)": [[480, "skbio.sequence.Protein.count", false]], "count() (skbio.sequence.rna method)": [[534, "skbio.sequence.RNA.count", false]], "count() (skbio.sequence.sequence method)": [[592, "skbio.sequence.Sequence.count", false]], "count() (skbio.tree.treenode method)": [[939, "skbio.tree.TreeNode.count", false]], "create_caches() (skbio.tree.treenode method)": [[940, "skbio.tree.TreeNode.create_caches", false]], "create_format() (in module skbio.io.registry)": [[230, "skbio.io.registry.create_format", false]], "create_format() (skbio.io.registry.ioregistry method)": [[220, "skbio.io.registry.IORegistry.create_format", false]], "data() (skbio.table.table method)": [[863, "skbio.table.Table.data", false]], "deepcopy() (skbio.tree.treenode method)": [[941, "skbio.tree.TreeNode.deepcopy", false]], "definites() (skbio.sequence.dna method)": [[360, "skbio.sequence.DNA.definites", false]], "definites() (skbio.sequence.grammaredsequence method)": [[430, "skbio.sequence.GrammaredSequence.definites", false]], "definites() (skbio.sequence.protein method)": [[481, "skbio.sequence.Protein.definites", false]], "definites() (skbio.sequence.rna method)": [[535, "skbio.sequence.RNA.definites", false]], "degap() (skbio.sequence.dna method)": [[361, "skbio.sequence.DNA.degap", false]], "degap() (skbio.sequence.grammaredsequence method)": [[431, "skbio.sequence.GrammaredSequence.degap", false]], "degap() (skbio.sequence.protein method)": [[482, "skbio.sequence.Protein.degap", false]], "degap() (skbio.sequence.rna method)": [[536, "skbio.sequence.RNA.degap", false]], "degenerates() (skbio.sequence.dna method)": [[362, "skbio.sequence.DNA.degenerates", false]], "degenerates() (skbio.sequence.grammaredsequence method)": [[432, "skbio.sequence.GrammaredSequence.degenerates", false]], "degenerates() (skbio.sequence.protein method)": [[483, "skbio.sequence.Protein.degenerates", false]], "degenerates() (skbio.sequence.rna method)": [[537, "skbio.sequence.RNA.degenerates", false]], "del_metadata() (skbio.table.table method)": [[864, "skbio.table.Table.del_metadata", false]], "deleter() (skbio.util.classproperty method)": [[1012, "skbio.util.classproperty.deleter", false]], "delimited_self() (skbio.table.table method)": [[865, "skbio.table.Table.delimited_self", false]], "descending_branch_length() (skbio.tree.treenode method)": [[942, "skbio.tree.TreeNode.descending_branch_length", false]], "descriptive_equality() (skbio.table.table method)": [[866, "skbio.table.Table.descriptive_equality", false]], "dirmult_ttest() (in module skbio.stats.composition)": [[651, "skbio.stats.composition.dirmult_ttest", false]], "dissimilaritymatrix (class in skbio.stats.distance)": [[665, "skbio.stats.distance.DissimilarityMatrix", false]], "distance() (skbio.sequence.dna method)": [[363, "skbio.sequence.DNA.distance", false]], "distance() (skbio.sequence.grammaredsequence method)": [[433, "skbio.sequence.GrammaredSequence.distance", false]], "distance() (skbio.sequence.protein method)": [[484, "skbio.sequence.Protein.distance", false]], "distance() (skbio.sequence.rna method)": [[538, "skbio.sequence.RNA.distance", false]], "distance() (skbio.sequence.sequence method)": [[593, "skbio.sequence.Sequence.distance", false]], "distance() (skbio.tree.treenode method)": [[943, "skbio.tree.TreeNode.distance", false]], "distancematrix (class in skbio.stats.distance)": [[688, "skbio.stats.distance.DistanceMatrix", false]], "dna (class in skbio.sequence)": [[340, "skbio.sequence.DNA", false]], "dominance() (in module skbio.diversity.alpha)": [[112, "skbio.diversity.alpha.dominance", false]], "doubles() (in module skbio.diversity.alpha)": [[113, "skbio.diversity.alpha.doubles", false]], "drop() (skbio.metadata.interval method)": [[265, "skbio.metadata.Interval.drop", false]], "drop() (skbio.metadata.intervalmetadata method)": [[279, "skbio.metadata.IntervalMetadata.drop", false]], "drop_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[247, "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.metadatacolumn method)": [[294, "skbio.metadata.MetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[312, "skbio.metadata.NumericMetadataColumn.drop_missing_values", false]], "e_matrix() (in module skbio.stats.ordination)": [[830, "skbio.stats.ordination.e_matrix", false]], "efficiencywarning": [[993, "skbio.util.EfficiencyWarning", false]], "enspie() (in module skbio.diversity.alpha)": [[114, "skbio.diversity.alpha.enspie", false]], "esty_ci() (in module skbio.diversity.alpha)": [[115, "skbio.diversity.alpha.esty_ci", false]], "example_table (in module skbio.table)": [[911, "skbio.table.example_table", false]], "exists() (skbio.table.table method)": [[867, "skbio.table.Table.exists", false]], "expand_degenerates() (skbio.sequence.dna method)": [[364, "skbio.sequence.DNA.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.grammaredsequence method)": [[434, "skbio.sequence.GrammaredSequence.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.protein method)": [[485, "skbio.sequence.Protein.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.rna method)": [[539, "skbio.sequence.RNA.expand_degenerates", false]], "extend() (skbio.alignment.tabularmsa method)": [[85, "skbio.alignment.TabularMSA.extend", false]], "extend() (skbio.tree.treenode method)": [[944, "skbio.tree.TreeNode.extend", false]], "f_matrix() (in module skbio.stats.ordination)": [[831, "skbio.stats.ordination.f_matrix", false]], "faith_pd() (in module skbio.diversity.alpha)": [[116, "skbio.diversity.alpha.faith_pd", false]], "filter() (skbio.sequence.substitutionmatrix method)": [[626, "skbio.sequence.SubstitutionMatrix.filter", false]], "filter() (skbio.stats.distance.dissimilaritymatrix method)": [[678, "skbio.stats.distance.DissimilarityMatrix.filter", false]], "filter() (skbio.stats.distance.distancematrix method)": [[702, "skbio.stats.distance.DistanceMatrix.filter", false]], "filter() (skbio.table.table method)": [[868, "skbio.table.Table.filter", false]], "filter_columns() (skbio.metadata.samplemetadata method)": [[330, "skbio.metadata.SampleMetadata.filter_columns", false]], "filter_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[248, "skbio.metadata.CategoricalMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.metadatacolumn method)": [[295, "skbio.metadata.MetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.numericmetadatacolumn method)": [[313, "skbio.metadata.NumericMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.samplemetadata method)": [[331, "skbio.metadata.SampleMetadata.filter_ids", false]], "find() (skbio.tree.treenode method)": [[945, "skbio.tree.TreeNode.find", false]], "find_all() (skbio.tree.treenode method)": [[946, "skbio.tree.TreeNode.find_all", false]], "find_by_func() (skbio.tree.treenode method)": [[947, "skbio.tree.TreeNode.find_by_func", false]], "find_by_id() (skbio.tree.treenode method)": [[948, "skbio.tree.TreeNode.find_by_id", false]], "find_duplicates() (in module skbio.util)": [[1015, "skbio.util.find_duplicates", false]], "find_motifs() (skbio.sequence.dna method)": [[365, "skbio.sequence.DNA.find_motifs", false]], "find_motifs() (skbio.sequence.grammaredsequence method)": [[435, "skbio.sequence.GrammaredSequence.find_motifs", false]], "find_motifs() (skbio.sequence.protein method)": [[486, "skbio.sequence.Protein.find_motifs", false]], "find_motifs() (skbio.sequence.rna method)": [[540, "skbio.sequence.RNA.find_motifs", false]], "find_with_regex() (skbio.sequence.dna method)": [[366, "skbio.sequence.DNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.grammaredsequence method)": [[436, "skbio.sequence.GrammaredSequence.find_with_regex", false]], "find_with_regex() (skbio.sequence.protein method)": [[487, "skbio.sequence.Protein.find_with_regex", false]], "find_with_regex() (skbio.sequence.rna method)": [[541, "skbio.sequence.RNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.sequence method)": [[594, "skbio.sequence.Sequence.find_with_regex", false]], "firstdifferencegradientanova (class in skbio.stats.gradient)": [[746, "skbio.stats.gradient.FirstDifferenceGradientANOVA", false]], "fisher_alpha() (in module skbio.diversity.alpha)": [[117, "skbio.diversity.alpha.fisher_alpha", false]], "format (class in skbio.io.registry)": [[196, "skbio.io.registry.Format", false]], "frequencies() (skbio.sequence.dna method)": [[367, "skbio.sequence.DNA.frequencies", false]], "frequencies() (skbio.sequence.grammaredsequence method)": [[437, "skbio.sequence.GrammaredSequence.frequencies", false]], "frequencies() (skbio.sequence.protein method)": [[488, "skbio.sequence.Protein.frequencies", false]], "frequencies() (skbio.sequence.rna method)": [[542, "skbio.sequence.RNA.frequencies", false]], "frequencies() (skbio.sequence.sequence method)": [[595, "skbio.sequence.Sequence.frequencies", false]], "from_adjacency() (skbio.table.table static method)": [[869, "skbio.table.Table.from_adjacency", false]], "from_bits() (skbio.alignment.alignpath class method)": [[13, "skbio.alignment.AlignPath.from_bits", false]], "from_bits() (skbio.alignment.pairalignpath class method)": [[44, "skbio.alignment.PairAlignPath.from_bits", false]], "from_cigar() (skbio.alignment.pairalignpath class method)": [[45, "skbio.alignment.PairAlignPath.from_cigar", false]], "from_coordinates() (skbio.alignment.alignpath class method)": [[14, "skbio.alignment.AlignPath.from_coordinates", false]], "from_coordinates() (skbio.alignment.pairalignpath class method)": [[46, "skbio.alignment.PairAlignPath.from_coordinates", false]], "from_dict() (skbio.alignment.tabularmsa class method)": [[86, "skbio.alignment.TabularMSA.from_dict", false]], "from_dict() (skbio.sequence.substitutionmatrix class method)": [[627, "skbio.sequence.SubstitutionMatrix.from_dict", false]], "from_hdf5() (skbio.table.table class method)": [[870, "skbio.table.Table.from_hdf5", false]], "from_indices() (skbio.alignment.alignpath class method)": [[15, "skbio.alignment.AlignPath.from_indices", false]], "from_indices() (skbio.alignment.pairalignpath class method)": [[47, "skbio.alignment.PairAlignPath.from_indices", false]], "from_iterable() (skbio.sequence.substitutionmatrix class method)": [[628, "skbio.sequence.SubstitutionMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.dissimilaritymatrix class method)": [[679, "skbio.stats.distance.DissimilarityMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.distancematrix class method)": [[703, "skbio.stats.distance.DistanceMatrix.from_iterable", false]], "from_json() (skbio.table.table class method)": [[871, "skbio.table.Table.from_json", false]], "from_linkage_matrix() (skbio.tree.treenode class method)": [[949, "skbio.tree.TreeNode.from_linkage_matrix", false]], "from_ncbi() (skbio.sequence.geneticcode class method)": [[408, "skbio.sequence.GeneticCode.from_ncbi", false]], "from_path_seqs() (skbio.alignment.tabularmsa class method)": [[87, "skbio.alignment.TabularMSA.from_path_seqs", false]], "from_tabular() (skbio.alignment.alignpath class method)": [[16, "skbio.alignment.AlignPath.from_tabular", false]], "from_tabular() (skbio.alignment.pairalignpath class method)": [[48, "skbio.alignment.PairAlignPath.from_tabular", false]], "from_taxdump() (skbio.tree.treenode class method)": [[950, "skbio.tree.TreeNode.from_taxdump", false]], "from_taxonomy() (skbio.tree.treenode class method)": [[951, "skbio.tree.TreeNode.from_taxonomy", false]], "from_tsv() (skbio.table.table static method)": [[872, "skbio.table.Table.from_tsv", false]], "gap_frequencies() (skbio.alignment.tabularmsa method)": [[88, "skbio.alignment.TabularMSA.gap_frequencies", false]], "gaps() (skbio.sequence.dna method)": [[368, "skbio.sequence.DNA.gaps", false]], "gaps() (skbio.sequence.grammaredsequence method)": [[438, "skbio.sequence.GrammaredSequence.gaps", false]], "gaps() (skbio.sequence.protein method)": [[489, "skbio.sequence.Protein.gaps", false]], "gaps() (skbio.sequence.rna method)": [[543, "skbio.sequence.RNA.gaps", false]], "gc_content() (skbio.sequence.dna method)": [[369, "skbio.sequence.DNA.gc_content", false]], "gc_content() (skbio.sequence.rna method)": [[544, "skbio.sequence.RNA.gc_content", false]], "gc_frequency() (skbio.sequence.dna method)": [[370, "skbio.sequence.DNA.gc_frequency", false]], "gc_frequency() (skbio.sequence.rna method)": [[545, "skbio.sequence.RNA.gc_frequency", false]], "geneticcode (class in skbio.sequence)": [[399, "skbio.sequence.GeneticCode", false]], "get_alpha_diversity_metrics() (in module skbio.diversity)": [[147, "skbio.diversity.get_alpha_diversity_metrics", false]], "get_beta_diversity_metrics() (in module skbio.diversity)": [[148, "skbio.diversity.get_beta_diversity_metrics", false]], "get_column() (skbio.metadata.samplemetadata method)": [[332, "skbio.metadata.SampleMetadata.get_column", false]], "get_data_path() (in module skbio.util)": [[1016, "skbio.util.get_data_path", false]], "get_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[249, "skbio.metadata.CategoricalMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.metadatacolumn method)": [[296, "skbio.metadata.MetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.numericmetadatacolumn method)": [[314, "skbio.metadata.NumericMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.samplemetadata method)": [[333, "skbio.metadata.SampleMetadata.get_ids", false]], "get_max_distance() (skbio.tree.treenode method)": [[952, "skbio.tree.TreeNode.get_max_distance", false]], "get_missing() (skbio.metadata.categoricalmetadatacolumn method)": [[250, "skbio.metadata.CategoricalMetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.metadatacolumn method)": [[297, "skbio.metadata.MetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.numericmetadatacolumn method)": [[315, "skbio.metadata.NumericMetadataColumn.get_missing", false]], "get_names() (skbio.sequence.substitutionmatrix class method)": [[629, "skbio.sequence.SubstitutionMatrix.get_names", false]], "get_reader() (skbio.io.registry.ioregistry method)": [[221, "skbio.io.registry.IORegistry.get_reader", false]], "get_sniffer() (skbio.io.registry.ioregistry method)": [[222, "skbio.io.registry.IORegistry.get_sniffer", false]], "get_table_density() (skbio.table.table method)": [[873, "skbio.table.Table.get_table_density", false]], "get_trajectories() (skbio.stats.gradient.averagegradientanova method)": [[734, "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.firstdifferencegradientanova method)": [[756, "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.gradientanova method)": [[767, "skbio.stats.gradient.GradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.trajectorygradientanova method)": [[800, "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.windowdifferencegradientanova method)": [[811, "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", false]], "get_value() (skbio.metadata.categoricalmetadatacolumn method)": [[251, "skbio.metadata.CategoricalMetadataColumn.get_value", false]], "get_value() (skbio.metadata.metadatacolumn method)": [[298, "skbio.metadata.MetadataColumn.get_value", false]], "get_value() (skbio.metadata.numericmetadatacolumn method)": [[316, "skbio.metadata.NumericMetadataColumn.get_value", false]], "get_value_by_ids() (skbio.table.table method)": [[874, "skbio.table.Table.get_value_by_ids", false]], "get_writer() (skbio.io.registry.ioregistry method)": [[223, "skbio.io.registry.IORegistry.get_writer", false]], "getter() (skbio.util.classproperty method)": [[1013, "skbio.util.classproperty.getter", false]], "gini_index() (in module skbio.diversity.alpha)": [[118, "skbio.diversity.alpha.gini_index", false]], "global_pairwise_align() (in module skbio.alignment)": [[98, "skbio.alignment.global_pairwise_align", false]], "global_pairwise_align_nucleotide() (in module skbio.alignment)": [[99, "skbio.alignment.global_pairwise_align_nucleotide", false]], "global_pairwise_align_protein() (in module skbio.alignment)": [[100, "skbio.alignment.global_pairwise_align_protein", false]], "goods_coverage() (in module skbio.diversity.alpha)": [[119, "skbio.diversity.alpha.goods_coverage", false]], "gradientanova (class in skbio.stats.gradient)": [[757, "skbio.stats.gradient.GradientANOVA", false]], "gradientanovaresults (class in skbio.stats.gradient)": [[768, "skbio.stats.gradient.GradientANOVAResults", false]], "grammaredsequence (class in skbio.sequence)": [[411, "skbio.sequence.GrammaredSequence", false]], "group_metadata() (skbio.table.table method)": [[875, "skbio.table.Table.group_metadata", false]], "groupresults (class in skbio.stats.gradient)": [[779, "skbio.stats.gradient.GroupResults", false]], "hamming() (in module skbio.sequence.distance)": [[641, "skbio.sequence.distance.hamming", false]], "has_children() (skbio.tree.treenode method)": [[953, "skbio.tree.TreeNode.has_children", false]], "has_definites() (skbio.sequence.dna method)": [[371, "skbio.sequence.DNA.has_definites", false]], "has_definites() (skbio.sequence.grammaredsequence method)": [[439, "skbio.sequence.GrammaredSequence.has_definites", false]], "has_definites() (skbio.sequence.protein method)": [[490, "skbio.sequence.Protein.has_definites", false]], "has_definites() (skbio.sequence.rna method)": [[546, "skbio.sequence.RNA.has_definites", false]], "has_degenerates() (skbio.sequence.dna method)": [[372, "skbio.sequence.DNA.has_degenerates", false]], "has_degenerates() (skbio.sequence.grammaredsequence method)": [[440, "skbio.sequence.GrammaredSequence.has_degenerates", false]], "has_degenerates() (skbio.sequence.protein method)": [[491, "skbio.sequence.Protein.has_degenerates", false]], "has_degenerates() (skbio.sequence.rna method)": [[547, "skbio.sequence.RNA.has_degenerates", false]], "has_gaps() (skbio.sequence.dna method)": [[373, "skbio.sequence.DNA.has_gaps", false]], "has_gaps() (skbio.sequence.grammaredsequence method)": [[441, "skbio.sequence.GrammaredSequence.has_gaps", false]], "has_gaps() (skbio.sequence.protein method)": [[492, "skbio.sequence.Protein.has_gaps", false]], "has_gaps() (skbio.sequence.rna method)": [[548, "skbio.sequence.RNA.has_gaps", false]], "has_interval_metadata() (skbio.sequence.dna method)": [[374, "skbio.sequence.DNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.grammaredsequence method)": [[442, "skbio.sequence.GrammaredSequence.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.protein method)": [[493, "skbio.sequence.Protein.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.rna method)": [[549, "skbio.sequence.RNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.sequence method)": [[596, "skbio.sequence.Sequence.has_interval_metadata", false]], "has_metadata() (skbio.alignment.tabularmsa method)": [[89, "skbio.alignment.TabularMSA.has_metadata", false]], "has_metadata() (skbio.sequence.dna method)": [[375, "skbio.sequence.DNA.has_metadata", false]], "has_metadata() (skbio.sequence.grammaredsequence method)": [[443, "skbio.sequence.GrammaredSequence.has_metadata", false]], "has_metadata() (skbio.sequence.protein method)": [[494, "skbio.sequence.Protein.has_metadata", false]], "has_metadata() (skbio.sequence.rna method)": [[550, "skbio.sequence.RNA.has_metadata", false]], "has_metadata() (skbio.sequence.sequence method)": [[597, "skbio.sequence.Sequence.has_metadata", false]], "has_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[252, "skbio.metadata.CategoricalMetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.metadatacolumn method)": [[299, "skbio.metadata.MetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[317, "skbio.metadata.NumericMetadataColumn.has_missing_values", false]], "has_nondegenerates() (skbio.sequence.dna method)": [[376, "skbio.sequence.DNA.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.grammaredsequence method)": [[444, "skbio.sequence.GrammaredSequence.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.protein method)": [[495, "skbio.sequence.Protein.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.rna method)": [[551, "skbio.sequence.RNA.has_nondegenerates", false]], "has_positional_metadata() (skbio.alignment.tabularmsa method)": [[90, "skbio.alignment.TabularMSA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.dna method)": [[377, "skbio.sequence.DNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.grammaredsequence method)": [[445, "skbio.sequence.GrammaredSequence.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.protein method)": [[496, "skbio.sequence.Protein.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.rna method)": [[552, "skbio.sequence.RNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.sequence method)": [[598, "skbio.sequence.Sequence.has_positional_metadata", false]], "has_stops() (skbio.sequence.protein method)": [[497, "skbio.sequence.Protein.has_stops", false]], "head() (skbio.table.table method)": [[876, "skbio.table.Table.head", false]], "heip_e() (in module skbio.diversity.alpha)": [[120, "skbio.diversity.alpha.heip_e", false]], "hommola_cospeciation() (in module skbio.stats.evolve)": [[722, "skbio.stats.evolve.hommola_cospeciation", false]], "identity() (skbio.sequence.substitutionmatrix class method)": [[630, "skbio.sequence.SubstitutionMatrix.identity", false]], "ids() (skbio.table.table method)": [[877, "skbio.table.Table.ids", false]], "ilr() (in module skbio.stats.composition)": [[652, "skbio.stats.composition.ilr", false]], "ilr_inv() (in module skbio.stats.composition)": [[653, "skbio.stats.composition.ilr_inv", false]], "index() (skbio.sequence.dna method)": [[378, "skbio.sequence.DNA.index", false]], "index() (skbio.sequence.grammaredsequence method)": [[446, "skbio.sequence.GrammaredSequence.index", false]], "index() (skbio.sequence.protein method)": [[498, "skbio.sequence.Protein.index", false]], "index() (skbio.sequence.rna method)": [[553, "skbio.sequence.RNA.index", false]], "index() (skbio.sequence.sequence method)": [[599, "skbio.sequence.Sequence.index", false]], "index() (skbio.sequence.substitutionmatrix method)": [[631, "skbio.sequence.SubstitutionMatrix.index", false]], "index() (skbio.stats.distance.dissimilaritymatrix method)": [[680, "skbio.stats.distance.DissimilarityMatrix.index", false]], "index() (skbio.stats.distance.distancematrix method)": [[704, "skbio.stats.distance.DistanceMatrix.index", false]], "index() (skbio.table.table method)": [[878, "skbio.table.Table.index", false]], "index_tree() (skbio.tree.treenode method)": [[954, "skbio.tree.TreeNode.index_tree", false]], "initialize_state() (skbio.workflow.workflow method)": [[1029, "skbio.workflow.Workflow.initialize_state", false]], "inner() (in module skbio.stats.composition)": [[654, "skbio.stats.composition.inner", false]], "interval (class in skbio.metadata)": [[256, "skbio.metadata.Interval", false]], "intervalmetadata (class in skbio.metadata)": [[266, "skbio.metadata.IntervalMetadata", false]], "invalidate_caches() (skbio.tree.treenode method)": [[955, "skbio.tree.TreeNode.invalidate_caches", false]], "ioregistry (class in skbio.io.registry)": [[209, "skbio.io.registry.IORegistry", false]], "is_empty() (skbio.table.table method)": [[879, "skbio.table.Table.is_empty", false]], "is_reverse_complement() (skbio.sequence.dna method)": [[379, "skbio.sequence.DNA.is_reverse_complement", false]], "is_reverse_complement() (skbio.sequence.rna method)": [[554, "skbio.sequence.RNA.is_reverse_complement", false]], "is_root() (skbio.tree.treenode method)": [[956, "skbio.tree.TreeNode.is_root", false]], "is_tip() (skbio.tree.treenode method)": [[957, "skbio.tree.TreeNode.is_tip", false]], "is_zero_based() (skbio.alignment.alignmentstructure method)": [[32, "skbio.alignment.AlignmentStructure.is_zero_based", false]], "isubsample() (in module skbio.stats)": [[812, "skbio.stats.isubsample", false]], "iter() (skbio.table.table method)": [[880, "skbio.table.Table.iter", false]], "iter_contiguous() (skbio.sequence.dna method)": [[380, "skbio.sequence.DNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.grammaredsequence method)": [[447, "skbio.sequence.GrammaredSequence.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.protein method)": [[499, "skbio.sequence.Protein.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.rna method)": [[555, "skbio.sequence.RNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.sequence method)": [[600, "skbio.sequence.Sequence.iter_contiguous", false]], "iter_data() (skbio.table.table method)": [[881, "skbio.table.Table.iter_data", false]], "iter_kmers() (skbio.sequence.dna method)": [[381, "skbio.sequence.DNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.grammaredsequence method)": [[448, "skbio.sequence.GrammaredSequence.iter_kmers", false]], "iter_kmers() (skbio.sequence.protein method)": [[500, "skbio.sequence.Protein.iter_kmers", false]], "iter_kmers() (skbio.sequence.rna method)": [[556, "skbio.sequence.RNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.sequence method)": [[601, "skbio.sequence.Sequence.iter_kmers", false]], "iter_pairwise() (skbio.table.table method)": [[882, "skbio.table.Table.iter_pairwise", false]], "iter_positions() (skbio.alignment.tabularmsa method)": [[91, "skbio.alignment.TabularMSA.iter_positions", false]], "join() (skbio.alignment.tabularmsa method)": [[92, "skbio.alignment.TabularMSA.join", false]], "kempton_taylor_q() (in module skbio.diversity.alpha)": [[121, "skbio.diversity.alpha.kempton_taylor_q", false]], "kmer_distance() (in module skbio.sequence.distance)": [[642, "skbio.sequence.distance.kmer_distance", false]], "kmer_frequencies() (skbio.sequence.dna method)": [[382, "skbio.sequence.DNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.grammaredsequence method)": [[449, "skbio.sequence.GrammaredSequence.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.protein method)": [[501, "skbio.sequence.Protein.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.rna method)": [[557, "skbio.sequence.RNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.sequence method)": [[602, "skbio.sequence.Sequence.kmer_frequencies", false]], "lca() (skbio.tree.treenode method)": [[958, "skbio.tree.TreeNode.lca", false]], "length() (skbio.table.table method)": [[883, "skbio.table.Table.length", false]], "levelorder() (skbio.tree.treenode method)": [[959, "skbio.tree.TreeNode.levelorder", false]], "list_read_formats() (skbio.io.registry.ioregistry method)": [[224, "skbio.io.registry.IORegistry.list_read_formats", false]], "list_write_formats() (skbio.io.registry.ioregistry method)": [[225, "skbio.io.registry.IORegistry.list_write_formats", false]], "lladser_ci() (in module skbio.diversity.alpha)": [[122, "skbio.diversity.alpha.lladser_ci", false]], "lladser_pe() (in module skbio.diversity.alpha)": [[123, "skbio.diversity.alpha.lladser_pe", false]], "load() (skbio.metadata.samplemetadata class method)": [[334, "skbio.metadata.SampleMetadata.load", false]], "local_pairwise_align() (in module skbio.alignment)": [[101, "skbio.alignment.local_pairwise_align", false]], "local_pairwise_align_nucleotide() (in module skbio.alignment)": [[102, "skbio.alignment.local_pairwise_align_nucleotide", false]], "local_pairwise_align_protein() (in module skbio.alignment)": [[103, "skbio.alignment.local_pairwise_align_protein", false]], "local_pairwise_align_ssw() (in module skbio.alignment)": [[104, "skbio.alignment.local_pairwise_align_ssw", false]], "lowercase() (skbio.sequence.dna method)": [[383, "skbio.sequence.DNA.lowercase", false]], "lowercase() (skbio.sequence.grammaredsequence method)": [[450, "skbio.sequence.GrammaredSequence.lowercase", false]], "lowercase() (skbio.sequence.protein method)": [[502, "skbio.sequence.Protein.lowercase", false]], "lowercase() (skbio.sequence.rna method)": [[558, "skbio.sequence.RNA.lowercase", false]], "lowercase() (skbio.sequence.sequence method)": [[603, "skbio.sequence.Sequence.lowercase", false]], "lowest_common_ancestor() (skbio.tree.treenode method)": [[960, "skbio.tree.TreeNode.lowest_common_ancestor", false]], "majority_rule() (in module skbio.tree)": [[991, "skbio.tree.majority_rule", false]], "make_identity_substitution_matrix() (in module skbio.alignment)": [[105, "skbio.alignment.make_identity_substitution_matrix", false]], "mantel() (in module skbio.stats.distance)": [[716, "skbio.stats.distance.mantel", false]], "margalef() (in module skbio.diversity.alpha)": [[124, "skbio.diversity.alpha.margalef", false]], "match_frequency() (skbio.sequence.dna method)": [[384, "skbio.sequence.DNA.match_frequency", false]], "match_frequency() (skbio.sequence.grammaredsequence method)": [[451, "skbio.sequence.GrammaredSequence.match_frequency", false]], "match_frequency() (skbio.sequence.protein method)": [[503, "skbio.sequence.Protein.match_frequency", false]], "match_frequency() (skbio.sequence.rna method)": [[559, "skbio.sequence.RNA.match_frequency", false]], "match_frequency() (skbio.sequence.sequence method)": [[604, "skbio.sequence.Sequence.match_frequency", false]], "matches() (skbio.sequence.dna method)": [[385, "skbio.sequence.DNA.matches", false]], "matches() (skbio.sequence.grammaredsequence method)": [[452, "skbio.sequence.GrammaredSequence.matches", false]], "matches() (skbio.sequence.protein method)": [[504, "skbio.sequence.Protein.matches", false]], "matches() (skbio.sequence.rna method)": [[560, "skbio.sequence.RNA.matches", false]], "matches() (skbio.sequence.sequence method)": [[605, "skbio.sequence.Sequence.matches", false]], "max() (skbio.table.table method)": [[884, "skbio.table.Table.max", false]], "mcintosh_d() (in module skbio.diversity.alpha)": [[125, "skbio.diversity.alpha.mcintosh_d", false]], "mcintosh_e() (in module skbio.diversity.alpha)": [[126, "skbio.diversity.alpha.mcintosh_e", false]], "mean_and_std() (in module skbio.stats.ordination)": [[832, "skbio.stats.ordination.mean_and_std", false]], "menhinick() (in module skbio.diversity.alpha)": [[127, "skbio.diversity.alpha.menhinick", false]], "merge() (skbio.metadata.intervalmetadata method)": [[280, "skbio.metadata.IntervalMetadata.merge", false]], "merge() (skbio.metadata.samplemetadata method)": [[335, "skbio.metadata.SampleMetadata.merge", false]], "merge() (skbio.table.table method)": [[885, "skbio.table.Table.merge", false]], "metadata() (skbio.table.table method)": [[886, "skbio.table.Table.metadata", false]], "metadata_to_dataframe() (skbio.table.table method)": [[887, "skbio.table.Table.metadata_to_dataframe", false]], "metadatacolumn (class in skbio.metadata)": [[285, "skbio.metadata.MetadataColumn", false]], "method (class in skbio.workflow)": [[1030, "skbio.workflow.method", false]], "michaelis_menten_fit() (in module skbio.diversity.alpha)": [[128, "skbio.diversity.alpha.michaelis_menten_fit", false]], "min() (skbio.table.table method)": [[888, "skbio.table.Table.min", false]], "mismatch_frequency() (skbio.sequence.dna method)": [[386, "skbio.sequence.DNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.grammaredsequence method)": [[453, "skbio.sequence.GrammaredSequence.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.protein method)": [[505, "skbio.sequence.Protein.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.rna method)": [[561, "skbio.sequence.RNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.sequence method)": [[606, "skbio.sequence.Sequence.mismatch_frequency", false]], "mismatches() (skbio.sequence.dna method)": [[387, "skbio.sequence.DNA.mismatches", false]], "mismatches() (skbio.sequence.grammaredsequence method)": [[454, "skbio.sequence.GrammaredSequence.mismatches", false]], "mismatches() (skbio.sequence.protein method)": [[506, "skbio.sequence.Protein.mismatches", false]], "mismatches() (skbio.sequence.rna method)": [[562, "skbio.sequence.RNA.mismatches", false]], "mismatches() (skbio.sequence.sequence method)": [[607, "skbio.sequence.Sequence.mismatches", false]], "module": [[0, "module-skbio.alignment", false], [1, "module-skbio.diversity", false], [2, "module-skbio.embedding", false], [106, "module-skbio.diversity.alpha", false], [142, "module-skbio.diversity.beta", false], [176, "module-skbio.io.format.binary_dm", false], [177, "module-skbio.io.format.biom", false], [178, "module-skbio.io.format.blast6", false], [179, "module-skbio.io.format.blast7", false], [180, "module-skbio.io.format.clustal", false], [181, "module-skbio.io.format.embed", false], [182, "module-skbio.io.format.embl", false], [183, "module-skbio.io.format.fasta", false], [184, "module-skbio.io.format.fastq", false], [185, "module-skbio.io.format.genbank", false], [186, "module-skbio.io.format.gff3", false], [187, "module-skbio.io.format.lsmat", false], [188, "module-skbio.io.format.newick", false], [189, "module-skbio.io.format.ordination", false], [190, "module-skbio.io.format.phylip", false], [191, "module-skbio.io.format.qseq", false], [192, "module-skbio.io.format.sample_metadata", false], [193, "module-skbio.io.format.stockholm", false], [194, "module-skbio.io.format.taxdump", false], [195, "module-skbio.io.registry", false], [234, "module-skbio.io.util", false], [640, "module-skbio.sequence.distance", false], [643, "module-skbio.stats.composition", false], [664, "module-skbio.stats.distance", false], [721, "module-skbio.stats.evolve", false], [723, "module-skbio.stats.gradient", false], [813, "module-skbio.stats.ordination", false], [838, "module-skbio.stats.power", false], [1053, "module-skbio.io", false], [1054, "module-skbio.metadata", false], [1055, "module-skbio.sequence", false], [1056, "module-skbio.stats", false], [1057, "module-skbio.table", false], [1058, "module-skbio.tree", false], [1059, "module-skbio.util", false], [1060, "module-skbio.workflow", false]], "monkey_patch() (skbio.io.registry.ioregistry method)": [[226, "skbio.io.registry.IORegistry.monkey_patch", false]], "multi_replace() (in module skbio.stats.composition)": [[655, "skbio.stats.composition.multi_replace", false]], "multiplicative_replacement() (in module skbio.stats.composition)": [[656, "skbio.stats.composition.multiplicative_replacement", false]], "neighbors() (skbio.tree.treenode method)": [[961, "skbio.tree.TreeNode.neighbors", false]], "nj() (in module skbio.tree)": [[992, "skbio.tree.nj", false]], "non_tips() (skbio.tree.treenode method)": [[962, "skbio.tree.TreeNode.non_tips", false]], "nondegenerates() (skbio.sequence.dna method)": [[388, "skbio.sequence.DNA.nondegenerates", false]], "nondegenerates() (skbio.sequence.grammaredsequence method)": [[455, "skbio.sequence.GrammaredSequence.nondegenerates", false]], "nondegenerates() (skbio.sequence.protein method)": [[507, "skbio.sequence.Protein.nondegenerates", false]], "nondegenerates() (skbio.sequence.rna method)": [[563, "skbio.sequence.RNA.nondegenerates", false]], "nonzero() (skbio.table.table method)": [[889, "skbio.table.Table.nonzero", false]], "nonzero_counts() (skbio.table.table method)": [[890, "skbio.table.Table.nonzero_counts", false]], "norm() (skbio.table.table method)": [[891, "skbio.table.Table.norm", false]], "numericmetadatacolumn (class in skbio.metadata)": [[303, "skbio.metadata.NumericMetadataColumn", false]], "observed_features() (in module skbio.diversity.alpha)": [[129, "skbio.diversity.alpha.observed_features", false]], "observed_node_counts() (skbio.tree.treenode method)": [[963, "skbio.tree.TreeNode.observed_node_counts", false]], "observed_otus() (in module skbio.diversity.alpha)": [[130, "skbio.diversity.alpha.observed_otus", false]], "open() (in module skbio.io.util)": [[235, "skbio.io.util.open", false]], "open_file() (in module skbio.io.util)": [[236, "skbio.io.util.open_file", false]], "open_files() (in module skbio.io.util)": [[237, "skbio.io.util.open_files", false]], "ordinationresults (class in skbio.stats.ordination)": [[814, "skbio.stats.ordination.OrdinationResults", false]], "osd() (in module skbio.diversity.alpha)": [[131, "skbio.diversity.alpha.osd", false]], "pa() (skbio.table.table method)": [[892, "skbio.table.Table.pa", false]], "pairalignpath (class in skbio.alignment)": [[34, "skbio.alignment.PairAlignPath", false]], "paired_subsamples() (in module skbio.stats.power)": [[840, "skbio.stats.power.paired_subsamples", false]], "pairwise_vlr() (in module skbio.stats.composition)": [[657, "skbio.stats.composition.pairwise_vlr", false]], "partial_beta_diversity() (in module skbio.diversity)": [[149, "skbio.diversity.partial_beta_diversity", false]], "partition() (skbio.table.table method)": [[893, "skbio.table.Table.partition", false]], "pcoa() (in module skbio.stats.ordination)": [[833, "skbio.stats.ordination.pcoa", false]], "pcoa_biplot() (in module skbio.stats.ordination)": [[834, "skbio.stats.ordination.pcoa_biplot", false]], "permanova() (in module skbio.stats.distance)": [[717, "skbio.stats.distance.permanova", false]], "permdisp() (in module skbio.stats.distance)": [[718, "skbio.stats.distance.permdisp", false]], "permute() (skbio.stats.distance.distancematrix method)": [[705, "skbio.stats.distance.DistanceMatrix.permute", false]], "perturb() (in module skbio.stats.composition)": [[658, "skbio.stats.composition.perturb", false]], "perturb_inv() (in module skbio.stats.composition)": [[659, "skbio.stats.composition.perturb_inv", false]], "phydiv() (in module skbio.diversity.alpha)": [[132, "skbio.diversity.alpha.phydiv", false]], "pielou_e() (in module skbio.diversity.alpha)": [[133, "skbio.diversity.alpha.pielou_e", false]], "plot() (skbio.sequence.substitutionmatrix method)": [[632, "skbio.sequence.SubstitutionMatrix.plot", false]], "plot() (skbio.stats.distance.dissimilaritymatrix method)": [[681, "skbio.stats.distance.DissimilarityMatrix.plot", false]], "plot() (skbio.stats.distance.distancematrix method)": [[706, "skbio.stats.distance.DistanceMatrix.plot", false]], "plot() (skbio.stats.ordination.ordinationresults method)": [[824, "skbio.stats.ordination.OrdinationResults.plot", false]], "pop() (skbio.tree.treenode method)": [[964, "skbio.tree.TreeNode.pop", false]], "postorder() (skbio.tree.treenode method)": [[965, "skbio.tree.TreeNode.postorder", false]], "power() (in module skbio.stats.composition)": [[660, "skbio.stats.composition.power", false]], "pre_and_postorder() (skbio.tree.treenode method)": [[966, "skbio.tree.TreeNode.pre_and_postorder", false]], "preorder() (skbio.tree.treenode method)": [[967, "skbio.tree.TreeNode.preorder", false]], "protein (class in skbio.sequence)": [[462, "skbio.sequence.Protein", false]], "proteinembedding (class in skbio.embedding)": [[150, "skbio.embedding.ProteinEmbedding", false]], "proteinvector (class in skbio.embedding)": [[163, "skbio.embedding.ProteinVector", false]], "prune() (skbio.tree.treenode method)": [[968, "skbio.tree.TreeNode.prune", false]], "pwmantel() (in module skbio.stats.distance)": [[719, "skbio.stats.distance.pwmantel", false]], "query() (skbio.metadata.intervalmetadata method)": [[281, "skbio.metadata.IntervalMetadata.query", false]], "randdm() (in module skbio.stats.distance)": [[720, "skbio.stats.distance.randdm", false]], "rankdata() (skbio.table.table method)": [[894, "skbio.table.Table.rankdata", false]], "rda() (in module skbio.stats.ordination)": [[835, "skbio.stats.ordination.rda", false]], "read() (in module skbio.io.registry)": [[231, "skbio.io.registry.read", false]], "read() (skbio.alignment.tabularmsa class method)": [[93, "skbio.alignment.TabularMSA.read", false]], "read() (skbio.embedding.proteinembedding class method)": [[161, "skbio.embedding.ProteinEmbedding.read", false]], "read() (skbio.embedding.proteinvector class method)": [[174, "skbio.embedding.ProteinVector.read", false]], "read() (skbio.io.registry.ioregistry method)": [[227, "skbio.io.registry.IORegistry.read", false]], "read() (skbio.metadata.intervalmetadata class method)": [[282, "skbio.metadata.IntervalMetadata.read", false]], "read() (skbio.metadata.samplemetadata class method)": [[336, "skbio.metadata.SampleMetadata.read", false]], "read() (skbio.sequence.dna class method)": [[389, "skbio.sequence.DNA.read", false]], "read() (skbio.sequence.grammaredsequence class method)": [[456, "skbio.sequence.GrammaredSequence.read", false]], "read() (skbio.sequence.protein class method)": [[508, "skbio.sequence.Protein.read", false]], "read() (skbio.sequence.rna class method)": [[564, "skbio.sequence.RNA.read", false]], "read() (skbio.sequence.sequence class method)": [[608, "skbio.sequence.Sequence.read", false]], "read() (skbio.sequence.substitutionmatrix class method)": [[633, "skbio.sequence.SubstitutionMatrix.read", false]], "read() (skbio.stats.distance.dissimilaritymatrix class method)": [[682, "skbio.stats.distance.DissimilarityMatrix.read", false]], "read() (skbio.stats.distance.distancematrix class method)": [[707, "skbio.stats.distance.DistanceMatrix.read", false]], "read() (skbio.stats.ordination.ordinationresults class method)": [[825, "skbio.stats.ordination.OrdinationResults.read", false]], "read() (skbio.table.table class method)": [[895, "skbio.table.Table.read", false]], "read() (skbio.tree.treenode class method)": [[969, "skbio.tree.TreeNode.read", false]], "reader() (skbio.io.registry.format method)": [[206, "skbio.io.registry.Format.reader", false]], "reassign_index() (skbio.alignment.tabularmsa method)": [[94, "skbio.alignment.TabularMSA.reassign_index", false]], "reduce() (skbio.table.table method)": [[896, "skbio.table.Table.reduce", false]], "redundant_form() (skbio.sequence.substitutionmatrix method)": [[634, "skbio.sequence.SubstitutionMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.dissimilaritymatrix method)": [[683, "skbio.stats.distance.DissimilarityMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.distancematrix method)": [[708, "skbio.stats.distance.DistanceMatrix.redundant_form", false]], "remove() (skbio.tree.treenode method)": [[970, "skbio.tree.TreeNode.remove", false]], "remove_deleted() (skbio.tree.treenode method)": [[971, "skbio.tree.TreeNode.remove_deleted", false]], "remove_empty() (skbio.table.table method)": [[897, "skbio.table.Table.remove_empty", false]], "replace() (skbio.sequence.dna method)": [[390, "skbio.sequence.DNA.replace", false]], "replace() (skbio.sequence.grammaredsequence method)": [[457, "skbio.sequence.GrammaredSequence.replace", false]], "replace() (skbio.sequence.protein method)": [[509, "skbio.sequence.Protein.replace", false]], "replace() (skbio.sequence.rna method)": [[565, "skbio.sequence.RNA.replace", false]], "replace() (skbio.sequence.sequence method)": [[609, "skbio.sequence.Sequence.replace", false]], "representationwarning": [[994, "skbio.util.RepresentationWarning", false]], "requires (class in skbio.workflow)": [[1041, "skbio.workflow.requires", false]], "reverse_complement() (skbio.sequence.dna method)": [[391, "skbio.sequence.DNA.reverse_complement", false]], "reverse_complement() (skbio.sequence.rna method)": [[566, "skbio.sequence.RNA.reverse_complement", false]], "reverse_transcribe() (skbio.sequence.rna method)": [[567, "skbio.sequence.RNA.reverse_transcribe", false]], "rna (class in skbio.sequence)": [[515, "skbio.sequence.RNA", false]], "robbins() (in module skbio.diversity.alpha)": [[134, "skbio.diversity.alpha.robbins", false]], "root() (skbio.tree.treenode method)": [[972, "skbio.tree.TreeNode.root", false]], "root_at() (skbio.tree.treenode method)": [[973, "skbio.tree.TreeNode.root_at", false]], "root_at_midpoint() (skbio.tree.treenode method)": [[974, "skbio.tree.TreeNode.root_at_midpoint", false]], "safe_md5() (in module skbio.util)": [[1017, "skbio.util.safe_md5", false]], "samplemetadata (class in skbio.metadata)": [[321, "skbio.metadata.SampleMetadata", false]], "save() (skbio.metadata.categoricalmetadatacolumn method)": [[253, "skbio.metadata.CategoricalMetadataColumn.save", false]], "save() (skbio.metadata.metadatacolumn method)": [[300, "skbio.metadata.MetadataColumn.save", false]], "save() (skbio.metadata.numericmetadatacolumn method)": [[318, "skbio.metadata.NumericMetadataColumn.save", false]], "save() (skbio.metadata.samplemetadata method)": [[337, "skbio.metadata.SampleMetadata.save", false]], "sbp_basis() (in module skbio.stats.composition)": [[661, "skbio.stats.composition.sbp_basis", false]], "scale() (in module skbio.stats.ordination)": [[836, "skbio.stats.ordination.scale", false]], "sequence (class in skbio.sequence)": [[574, "skbio.sequence.Sequence", false]], "set_zero_based() (skbio.alignment.alignmentstructure method)": [[33, "skbio.alignment.AlignmentStructure.set_zero_based", false]], "setter() (skbio.util.classproperty method)": [[1014, "skbio.util.classproperty.setter", false]], "shannon() (in module skbio.diversity.alpha)": [[135, "skbio.diversity.alpha.shannon", false]], "shear() (skbio.tree.treenode method)": [[975, "skbio.tree.TreeNode.shear", false]], "shuffle() (skbio.tree.treenode method)": [[976, "skbio.tree.TreeNode.shuffle", false]], "siblings() (skbio.tree.treenode method)": [[977, "skbio.tree.TreeNode.siblings", false]], "simpson() (in module skbio.diversity.alpha)": [[136, "skbio.diversity.alpha.simpson", false]], "simpson_e() (in module skbio.diversity.alpha)": [[137, "skbio.diversity.alpha.simpson_e", false]], "singles() (in module skbio.diversity.alpha)": [[138, "skbio.diversity.alpha.singles", false]], "skbio.alignment": [[0, "module-skbio.alignment", false]], "skbio.diversity": [[1, "module-skbio.diversity", false]], "skbio.diversity.alpha": [[106, "module-skbio.diversity.alpha", false]], "skbio.diversity.beta": [[142, "module-skbio.diversity.beta", false]], "skbio.embedding": [[2, "module-skbio.embedding", false]], "skbio.io": [[1053, "module-skbio.io", false]], "skbio.io.format.binary_dm": [[176, "module-skbio.io.format.binary_dm", false]], "skbio.io.format.biom": [[177, "module-skbio.io.format.biom", false]], "skbio.io.format.blast6": [[178, "module-skbio.io.format.blast6", false]], "skbio.io.format.blast7": [[179, "module-skbio.io.format.blast7", false]], "skbio.io.format.clustal": [[180, "module-skbio.io.format.clustal", false]], "skbio.io.format.embed": [[181, "module-skbio.io.format.embed", false]], "skbio.io.format.embl": [[182, "module-skbio.io.format.embl", false]], "skbio.io.format.fasta": [[183, "module-skbio.io.format.fasta", false]], "skbio.io.format.fastq": [[184, "module-skbio.io.format.fastq", false]], "skbio.io.format.genbank": [[185, "module-skbio.io.format.genbank", false]], "skbio.io.format.gff3": [[186, "module-skbio.io.format.gff3", false]], "skbio.io.format.lsmat": [[187, "module-skbio.io.format.lsmat", false]], "skbio.io.format.newick": [[188, "module-skbio.io.format.newick", false]], "skbio.io.format.ordination": [[189, "module-skbio.io.format.ordination", false]], "skbio.io.format.phylip": [[190, "module-skbio.io.format.phylip", false]], "skbio.io.format.qseq": [[191, "module-skbio.io.format.qseq", false]], "skbio.io.format.sample_metadata": [[192, "module-skbio.io.format.sample_metadata", false]], "skbio.io.format.stockholm": [[193, "module-skbio.io.format.stockholm", false]], "skbio.io.format.taxdump": [[194, "module-skbio.io.format.taxdump", false]], "skbio.io.registry": [[195, "module-skbio.io.registry", false]], "skbio.io.util": [[234, "module-skbio.io.util", false]], "skbio.metadata": [[1054, "module-skbio.metadata", false]], "skbio.sequence": [[1055, "module-skbio.sequence", false]], "skbio.sequence.distance": [[640, "module-skbio.sequence.distance", false]], "skbio.stats": [[1056, "module-skbio.stats", false]], "skbio.stats.composition": [[643, "module-skbio.stats.composition", false]], "skbio.stats.distance": [[664, "module-skbio.stats.distance", false]], "skbio.stats.evolve": [[721, "module-skbio.stats.evolve", false]], "skbio.stats.gradient": [[723, "module-skbio.stats.gradient", false]], "skbio.stats.ordination": [[813, "module-skbio.stats.ordination", false]], "skbio.stats.power": [[838, "module-skbio.stats.power", false]], "skbio.table": [[1057, "module-skbio.table", false]], "skbio.tree": [[1058, "module-skbio.tree", false]], "skbio.util": [[1059, "module-skbio.util", false]], "skbio.workflow": [[1060, "module-skbio.workflow", false]], "sniff() (in module skbio.io.registry)": [[232, "skbio.io.registry.sniff", false]], "sniff() (skbio.io.registry.ioregistry method)": [[228, "skbio.io.registry.IORegistry.sniff", false]], "sniffer() (skbio.io.registry.format method)": [[207, "skbio.io.registry.Format.sniffer", false]], "sobs() (in module skbio.diversity.alpha)": [[139, "skbio.diversity.alpha.sobs", false]], "sort() (skbio.alignment.tabularmsa method)": [[95, "skbio.alignment.TabularMSA.sort", false]], "sort() (skbio.metadata.intervalmetadata method)": [[283, "skbio.metadata.IntervalMetadata.sort", false]], "sort() (skbio.table.table method)": [[898, "skbio.table.Table.sort", false]], "sort_order() (skbio.table.table method)": [[899, "skbio.table.Table.sort_order", false]], "stops() (skbio.sequence.protein method)": [[510, "skbio.sequence.Protein.stops", false]], "stripedsmithwaterman (class in skbio.alignment)": [[53, "skbio.alignment.StripedSmithWaterman", false]], "strong() (in module skbio.diversity.alpha)": [[140, "skbio.diversity.alpha.strong", false]], "subsample() (skbio.table.table method)": [[900, "skbio.table.Table.subsample", false]], "subsample_counts() (in module skbio.stats)": [[843, "skbio.stats.subsample_counts", false]], "subsample_paired_power() (in module skbio.stats.power)": [[841, "skbio.stats.power.subsample_paired_power", false]], "subsample_power() (in module skbio.stats.power)": [[842, "skbio.stats.power.subsample_power", false]], "subset() (skbio.tree.treenode method)": [[978, "skbio.tree.TreeNode.subset", false]], "subsets() (skbio.tree.treenode method)": [[979, "skbio.tree.TreeNode.subsets", false]], "substitutionmatrix (class in skbio.sequence)": [[612, "skbio.sequence.SubstitutionMatrix", false]], "subtree() (skbio.tree.treenode method)": [[980, "skbio.tree.TreeNode.subtree", false]], "sum() (skbio.table.table method)": [[901, "skbio.table.Table.sum", false]], "svd_rank() (in module skbio.stats.ordination)": [[837, "skbio.stats.ordination.svd_rank", false]], "table (class in skbio.table)": [[844, "skbio.table.Table", false]], "tabularmsa (class in skbio.alignment)": [[65, "skbio.alignment.TabularMSA", false]], "tip_tip_distances() (skbio.tree.treenode method)": [[981, "skbio.tree.TreeNode.tip_tip_distances", false]], "tips() (skbio.tree.treenode method)": [[982, "skbio.tree.TreeNode.tips", false]], "to_anndata() (skbio.table.table method)": [[902, "skbio.table.Table.to_anndata", false]], "to_array() (skbio.tree.treenode method)": [[983, "skbio.tree.TreeNode.to_array", false]], "to_bits() (skbio.alignment.alignpath method)": [[17, "skbio.alignment.AlignPath.to_bits", false]], "to_bits() (skbio.alignment.pairalignpath method)": [[49, "skbio.alignment.PairAlignPath.to_bits", false]], "to_cigar() (skbio.alignment.pairalignpath method)": [[50, "skbio.alignment.PairAlignPath.to_cigar", false]], "to_coordinates() (skbio.alignment.alignpath method)": [[18, "skbio.alignment.AlignPath.to_coordinates", false]], "to_coordinates() (skbio.alignment.pairalignpath method)": [[51, "skbio.alignment.PairAlignPath.to_coordinates", false]], "to_data_frame() (skbio.sequence.substitutionmatrix method)": [[635, "skbio.sequence.SubstitutionMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.dissimilaritymatrix method)": [[684, "skbio.stats.distance.DissimilarityMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.distancematrix method)": [[709, "skbio.stats.distance.DistanceMatrix.to_data_frame", false]], "to_dataframe() (skbio.metadata.categoricalmetadatacolumn method)": [[254, "skbio.metadata.CategoricalMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.metadatacolumn method)": [[301, "skbio.metadata.MetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.numericmetadatacolumn method)": [[319, "skbio.metadata.NumericMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.samplemetadata method)": [[338, "skbio.metadata.SampleMetadata.to_dataframe", false]], "to_dataframe() (skbio.table.table method)": [[903, "skbio.table.Table.to_dataframe", false]], "to_definites() (skbio.sequence.dna method)": [[392, "skbio.sequence.DNA.to_definites", false]], "to_definites() (skbio.sequence.grammaredsequence method)": [[458, "skbio.sequence.GrammaredSequence.to_definites", false]], "to_definites() (skbio.sequence.protein method)": [[511, "skbio.sequence.Protein.to_definites", false]], "to_definites() (skbio.sequence.rna method)": [[568, "skbio.sequence.RNA.to_definites", false]], "to_dict() (skbio.alignment.tabularmsa method)": [[96, "skbio.alignment.TabularMSA.to_dict", false]], "to_dict() (skbio.sequence.substitutionmatrix method)": [[636, "skbio.sequence.SubstitutionMatrix.to_dict", false]], "to_files() (skbio.stats.gradient.categoryresults method)": [[745, "skbio.stats.gradient.CategoryResults.to_files", false]], "to_files() (skbio.stats.gradient.gradientanovaresults method)": [[778, "skbio.stats.gradient.GradientANOVAResults.to_files", false]], "to_files() (skbio.stats.gradient.groupresults method)": [[789, "skbio.stats.gradient.GroupResults.to_files", false]], "to_hdf5() (skbio.table.table method)": [[904, "skbio.table.Table.to_hdf5", false]], "to_indices() (skbio.alignment.alignpath method)": [[19, "skbio.alignment.AlignPath.to_indices", false]], "to_indices() (skbio.alignment.pairalignpath method)": [[52, "skbio.alignment.PairAlignPath.to_indices", false]], "to_indices() (skbio.sequence.dna method)": [[393, "skbio.sequence.DNA.to_indices", false]], "to_indices() (skbio.sequence.grammaredsequence method)": [[459, "skbio.sequence.GrammaredSequence.to_indices", false]], "to_indices() (skbio.sequence.protein method)": [[512, "skbio.sequence.Protein.to_indices", false]], "to_indices() (skbio.sequence.rna method)": [[569, "skbio.sequence.RNA.to_indices", false]], "to_indices() (skbio.sequence.sequence method)": [[610, "skbio.sequence.Sequence.to_indices", false]], "to_json() (skbio.table.table method)": [[905, "skbio.table.Table.to_json", false]], "to_regex() (skbio.sequence.dna method)": [[394, "skbio.sequence.DNA.to_regex", false]], "to_regex() (skbio.sequence.grammaredsequence method)": [[460, "skbio.sequence.GrammaredSequence.to_regex", false]], "to_regex() (skbio.sequence.protein method)": [[513, "skbio.sequence.Protein.to_regex", false]], "to_regex() (skbio.sequence.rna method)": [[570, "skbio.sequence.RNA.to_regex", false]], "to_series() (skbio.metadata.categoricalmetadatacolumn method)": [[255, "skbio.metadata.CategoricalMetadataColumn.to_series", false]], "to_series() (skbio.metadata.metadatacolumn method)": [[302, "skbio.metadata.MetadataColumn.to_series", false]], "to_series() (skbio.metadata.numericmetadatacolumn method)": [[320, "skbio.metadata.NumericMetadataColumn.to_series", false]], "to_series() (skbio.stats.distance.distancematrix method)": [[710, "skbio.stats.distance.DistanceMatrix.to_series", false]], "to_taxonomy() (skbio.tree.treenode method)": [[984, "skbio.tree.TreeNode.to_taxonomy", false]], "to_tsv() (skbio.table.table method)": [[906, "skbio.table.Table.to_tsv", false]], "trajectorygradientanova (class in skbio.stats.gradient)": [[790, "skbio.stats.gradient.TrajectoryGradientANOVA", false]], "transcribe() (skbio.sequence.dna method)": [[395, "skbio.sequence.DNA.transcribe", false]], "transform() (skbio.table.table method)": [[907, "skbio.table.Table.transform", false]], "translate() (skbio.sequence.dna method)": [[396, "skbio.sequence.DNA.translate", false]], "translate() (skbio.sequence.geneticcode method)": [[409, "skbio.sequence.GeneticCode.translate", false]], "translate() (skbio.sequence.rna method)": [[571, "skbio.sequence.RNA.translate", false]], "translate_six_frames() (skbio.sequence.dna method)": [[397, "skbio.sequence.DNA.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.geneticcode method)": [[410, "skbio.sequence.GeneticCode.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.rna method)": [[572, "skbio.sequence.RNA.translate_six_frames", false]], "transpose() (skbio.sequence.substitutionmatrix method)": [[637, "skbio.sequence.SubstitutionMatrix.transpose", false]], "transpose() (skbio.stats.distance.dissimilaritymatrix method)": [[685, "skbio.stats.distance.DissimilarityMatrix.transpose", false]], "transpose() (skbio.stats.distance.distancematrix method)": [[711, "skbio.stats.distance.DistanceMatrix.transpose", false]], "transpose() (skbio.table.table method)": [[908, "skbio.table.Table.transpose", false]], "traverse() (skbio.tree.treenode method)": [[985, "skbio.tree.TreeNode.traverse", false]], "tree_basis() (in module skbio.stats.composition)": [[662, "skbio.stats.composition.tree_basis", false]], "treenode (class in skbio.tree)": [[912, "skbio.tree.TreeNode", false]], "unpack() (skbio.tree.treenode method)": [[986, "skbio.tree.TreeNode.unpack", false]], "unpack_by_func() (skbio.tree.treenode method)": [[987, "skbio.tree.TreeNode.unpack_by_func", false]], "unrooted_copy() (skbio.tree.treenode method)": [[988, "skbio.tree.TreeNode.unrooted_copy", false]], "unrooted_deepcopy() (skbio.tree.treenode method)": [[989, "skbio.tree.TreeNode.unrooted_deepcopy", false]], "unweighted_unifrac() (in module skbio.diversity.beta)": [[143, "skbio.diversity.beta.unweighted_unifrac", false]], "update_ids() (skbio.table.table method)": [[909, "skbio.table.Table.update_ids", false]], "vlr() (in module skbio.stats.composition)": [[663, "skbio.stats.composition.vlr", false]], "weighted_unifrac() (in module skbio.diversity.beta)": [[144, "skbio.diversity.beta.weighted_unifrac", false]], "windowdifferencegradientanova (class in skbio.stats.gradient)": [[801, "skbio.stats.gradient.WindowDifferenceGradientANOVA", false]], "within() (skbio.sequence.substitutionmatrix method)": [[638, "skbio.sequence.SubstitutionMatrix.within", false]], "within() (skbio.stats.distance.dissimilaritymatrix method)": [[686, "skbio.stats.distance.DissimilarityMatrix.within", false]], "within() (skbio.stats.distance.distancematrix method)": [[712, "skbio.stats.distance.DistanceMatrix.within", false]], "workflow (class in skbio.workflow)": [[1018, "skbio.workflow.Workflow", false]], "write() (in module skbio.io.registry)": [[233, "skbio.io.registry.write", false]], "write() (skbio.alignment.tabularmsa method)": [[97, "skbio.alignment.TabularMSA.write", false]], "write() (skbio.embedding.proteinembedding method)": [[162, "skbio.embedding.ProteinEmbedding.write", false]], "write() (skbio.embedding.proteinvector method)": [[175, "skbio.embedding.ProteinVector.write", false]], "write() (skbio.io.registry.ioregistry method)": [[229, "skbio.io.registry.IORegistry.write", false]], "write() (skbio.metadata.intervalmetadata method)": [[284, "skbio.metadata.IntervalMetadata.write", false]], "write() (skbio.metadata.samplemetadata method)": [[339, "skbio.metadata.SampleMetadata.write", false]], "write() (skbio.sequence.dna method)": [[398, "skbio.sequence.DNA.write", false]], "write() (skbio.sequence.grammaredsequence method)": [[461, "skbio.sequence.GrammaredSequence.write", false]], "write() (skbio.sequence.protein method)": [[514, "skbio.sequence.Protein.write", false]], "write() (skbio.sequence.rna method)": [[573, "skbio.sequence.RNA.write", false]], "write() (skbio.sequence.sequence method)": [[611, "skbio.sequence.Sequence.write", false]], "write() (skbio.sequence.substitutionmatrix method)": [[639, "skbio.sequence.SubstitutionMatrix.write", false]], "write() (skbio.stats.distance.dissimilaritymatrix method)": [[687, "skbio.stats.distance.DissimilarityMatrix.write", false]], "write() (skbio.stats.distance.distancematrix method)": [[713, "skbio.stats.distance.DistanceMatrix.write", false]], "write() (skbio.stats.ordination.ordinationresults method)": [[826, "skbio.stats.ordination.OrdinationResults.write", false]], "write() (skbio.table.table method)": [[910, "skbio.table.Table.write", false]], "write() (skbio.tree.treenode method)": [[990, "skbio.tree.TreeNode.write", false]], "writer() (skbio.io.registry.format method)": [[208, "skbio.io.registry.Format.writer", false]]}, "objects": {"skbio": [[0, 0, 0, "-", "alignment"], [1, 0, 0, "-", "diversity"], [2, 0, 0, "-", "embedding"], [1053, 0, 0, "-", "io"], [1054, 0, 0, "-", "metadata"], [1055, 0, 0, "-", "sequence"], [1056, 0, 0, "-", "stats"], [1057, 0, 0, "-", "table"], [1058, 0, 0, "-", "tree"], [1059, 0, 0, "-", "util"], [1060, 0, 0, "-", "workflow"]], "skbio.alignment": [[3, 1, 1, "", "AlignPath"], [20, 1, 1, "", "AlignmentStructure"], [34, 1, 1, "", "PairAlignPath"], [53, 1, 1, "", "StripedSmithWaterman"], [65, 1, 1, "", "TabularMSA"], [98, 3, 1, "", "global_pairwise_align"], [99, 3, 1, "", "global_pairwise_align_nucleotide"], [100, 3, 1, "", "global_pairwise_align_protein"], [101, 3, 1, "", "local_pairwise_align"], [102, 3, 1, "", "local_pairwise_align_nucleotide"], [103, 3, 1, "", "local_pairwise_align_protein"], [104, 3, 1, "", "local_pairwise_align_ssw"], [105, 3, 1, "", "make_identity_substitution_matrix"]], "skbio.alignment.AlignPath": [[4, 2, 1, "", "__eq__"], [5, 2, 1, "", "__ge__"], [6, 2, 1, "", "__getstate__"], [7, 2, 1, "", "__gt__"], [8, 2, 1, "", "__hash__"], [9, 2, 1, "", "__le__"], [10, 2, 1, "", "__lt__"], [11, 2, 1, "", "__ne__"], [12, 2, 1, "", "__str__"], [13, 2, 1, "", "from_bits"], [14, 2, 1, "", "from_coordinates"], [15, 2, 1, "", "from_indices"], [16, 2, 1, "", "from_tabular"], [17, 2, 1, "", "to_bits"], [18, 2, 1, "", "to_coordinates"], [19, 2, 1, "", "to_indices"]], "skbio.alignment.AlignmentStructure": [[21, 2, 1, "", "__eq__"], [22, 2, 1, "", "__ge__"], [23, 2, 1, "", "__getitem__"], [24, 2, 1, "", "__getstate__"], [25, 2, 1, "", "__gt__"], [26, 2, 1, "", "__hash__"], [27, 2, 1, "", "__le__"], [28, 2, 1, "", "__lt__"], [29, 2, 1, "", "__ne__"], [30, 2, 1, "", "__setstate__"], [31, 2, 1, "", "__str__"], [32, 2, 1, "", "is_zero_based"], [33, 2, 1, "", "set_zero_based"]], "skbio.alignment.PairAlignPath": [[35, 2, 1, "", "__eq__"], [36, 2, 1, "", "__ge__"], [37, 2, 1, "", "__getstate__"], [38, 2, 1, "", "__gt__"], [39, 2, 1, "", "__hash__"], [40, 2, 1, "", "__le__"], [41, 2, 1, "", "__lt__"], [42, 2, 1, "", "__ne__"], [43, 2, 1, "", "__str__"], [44, 2, 1, "", "from_bits"], [45, 2, 1, "", "from_cigar"], [46, 2, 1, "", "from_coordinates"], [47, 2, 1, "", "from_indices"], [48, 2, 1, "", "from_tabular"], [49, 2, 1, "", "to_bits"], [50, 2, 1, "", "to_cigar"], [51, 2, 1, "", "to_coordinates"], [52, 2, 1, "", "to_indices"]], "skbio.alignment.StripedSmithWaterman": [[54, 2, 1, "", "__call__"], [55, 2, 1, "", "__eq__"], [56, 2, 1, "", "__ge__"], [57, 2, 1, "", "__getstate__"], [58, 2, 1, "", "__gt__"], [59, 2, 1, "", "__hash__"], [60, 2, 1, "", "__le__"], [61, 2, 1, "", "__lt__"], [62, 2, 1, "", "__ne__"], [63, 2, 1, "", "__setstate__"], [64, 2, 1, "", "__str__"]], "skbio.alignment.TabularMSA": [[66, 2, 1, "", "__bool__"], [67, 2, 1, "", "__contains__"], [68, 2, 1, "", "__copy__"], [69, 2, 1, "", "__deepcopy__"], [70, 2, 1, "", "__eq__"], [71, 2, 1, "", "__ge__"], [72, 2, 1, "", "__getitem__"], [73, 2, 1, "", "__getstate__"], [74, 2, 1, "", "__gt__"], [75, 2, 1, "", "__iter__"], [76, 2, 1, "", "__le__"], [77, 2, 1, "", "__len__"], [78, 2, 1, "", "__lt__"], [79, 2, 1, "", "__ne__"], [80, 2, 1, "", "__reversed__"], [81, 2, 1, "", "__str__"], [82, 2, 1, "", "append"], [83, 2, 1, "", "consensus"], [84, 2, 1, "", "conservation"], [85, 2, 1, "", "extend"], [86, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_path_seqs"], [88, 2, 1, "", "gap_frequencies"], [89, 2, 1, "", "has_metadata"], [90, 2, 1, "", "has_positional_metadata"], [91, 2, 1, "", "iter_positions"], [92, 2, 1, "", "join"], [93, 2, 1, "", "read"], [94, 2, 1, "", "reassign_index"], [95, 2, 1, "", "sort"], [96, 2, 1, "", "to_dict"], [97, 2, 1, "", "write"]], "skbio.diversity": [[106, 0, 0, "-", "alpha"], [141, 3, 1, "", "alpha_diversity"], [142, 0, 0, "-", "beta"], [145, 3, 1, "", "beta_diversity"], [146, 3, 1, "", "block_beta_diversity"], [147, 3, 1, "", "get_alpha_diversity_metrics"], [148, 3, 1, "", "get_beta_diversity_metrics"], [149, 3, 1, "", "partial_beta_diversity"]], "skbio.diversity.alpha": [[107, 3, 1, "", "ace"], [108, 3, 1, "", "berger_parker_d"], [109, 3, 1, "", "brillouin_d"], [110, 3, 1, "", "chao1"], [111, 3, 1, "", "chao1_ci"], [112, 3, 1, "", "dominance"], [113, 3, 1, "", "doubles"], [114, 3, 1, "", "enspie"], [115, 3, 1, "", "esty_ci"], [116, 3, 1, "", "faith_pd"], [117, 3, 1, "", "fisher_alpha"], [118, 3, 1, "", "gini_index"], [119, 3, 1, "", "goods_coverage"], [120, 3, 1, "", "heip_e"], [121, 3, 1, "", "kempton_taylor_q"], [122, 3, 1, "", "lladser_ci"], [123, 3, 1, "", "lladser_pe"], [124, 3, 1, "", "margalef"], [125, 3, 1, "", "mcintosh_d"], [126, 3, 1, "", "mcintosh_e"], [127, 3, 1, "", "menhinick"], [128, 3, 1, "", "michaelis_menten_fit"], [129, 3, 1, "", "observed_features"], [130, 3, 1, "", "observed_otus"], [131, 3, 1, "", "osd"], [132, 3, 1, "", "phydiv"], [133, 3, 1, "", "pielou_e"], [134, 3, 1, "", "robbins"], [135, 3, 1, "", "shannon"], [136, 3, 1, "", "simpson"], [137, 3, 1, "", "simpson_e"], [138, 3, 1, "", "singles"], [139, 3, 1, "", "sobs"], [140, 3, 1, "", "strong"]], "skbio.diversity.beta": [[143, 3, 1, "", "unweighted_unifrac"], [144, 3, 1, "", "weighted_unifrac"]], "skbio.embedding": [[150, 1, 1, "", "ProteinEmbedding"], [163, 1, 1, "", "ProteinVector"]], "skbio.embedding.ProteinEmbedding": [[151, 2, 1, "", "__eq__"], [152, 2, 1, "", "__ge__"], [153, 2, 1, "", "__getstate__"], [154, 2, 1, "", "__gt__"], [155, 2, 1, "", "__hash__"], [156, 2, 1, "", "__le__"], [157, 2, 1, "", "__lt__"], [158, 2, 1, "", "__ne__"], [159, 2, 1, "", "__str__"], [160, 2, 1, "", "bytes"], [161, 2, 1, "", "read"], [162, 2, 1, "", "write"]], "skbio.embedding.ProteinVector": [[164, 2, 1, "", "__eq__"], [165, 2, 1, "", "__ge__"], [166, 2, 1, "", "__getstate__"], [167, 2, 1, "", "__gt__"], [168, 2, 1, "", "__hash__"], [169, 2, 1, "", "__le__"], [170, 2, 1, "", "__lt__"], [171, 2, 1, "", "__ne__"], [172, 2, 1, "", "__str__"], [173, 2, 1, "", "bytes"], [174, 2, 1, "", "read"], [175, 2, 1, "", "write"]], "skbio.io": [[195, 0, 0, "-", "registry"], [234, 0, 0, "-", "util"]], "skbio.io.format": [[176, 0, 0, "-", "binary_dm"], [177, 0, 0, "-", "biom"], [178, 0, 0, "-", "blast6"], [179, 0, 0, "-", "blast7"], [180, 0, 0, "-", "clustal"], [181, 0, 0, "-", "embed"], [182, 0, 0, "-", "embl"], [183, 0, 0, "-", "fasta"], [184, 0, 0, "-", "fastq"], [185, 0, 0, "-", "genbank"], [186, 0, 0, "-", "gff3"], [187, 0, 0, "-", "lsmat"], [188, 0, 0, "-", "newick"], [189, 0, 0, "-", "ordination"], [190, 0, 0, "-", "phylip"], [191, 0, 0, "-", "qseq"], [192, 0, 0, "-", "sample_metadata"], [193, 0, 0, "-", "stockholm"], [194, 0, 0, "-", "taxdump"]], "skbio.io.registry": [[196, 1, 1, "", "Format"], [209, 1, 1, "", "IORegistry"], [230, 3, 1, "", "create_format"], [231, 3, 1, "", "read"], [232, 3, 1, "", "sniff"], [233, 3, 1, "", "write"]], "skbio.io.registry.Format": [[197, 2, 1, "", "__eq__"], [198, 2, 1, "", "__ge__"], [199, 2, 1, "", "__getstate__"], [200, 2, 1, "", "__gt__"], [201, 2, 1, "", "__hash__"], [202, 2, 1, "", "__le__"], [203, 2, 1, "", "__lt__"], [204, 2, 1, "", "__ne__"], [205, 2, 1, "", "__str__"], [206, 2, 1, "", "reader"], [207, 2, 1, "", "sniffer"], [208, 2, 1, "", "writer"]], "skbio.io.registry.IORegistry": [[210, 2, 1, "", "__eq__"], [211, 2, 1, "", "__ge__"], [212, 2, 1, "", "__getstate__"], [213, 2, 1, "", "__gt__"], [214, 2, 1, "", "__hash__"], [215, 2, 1, "", "__le__"], [216, 2, 1, "", "__lt__"], [217, 2, 1, "", "__ne__"], [218, 2, 1, "", "__str__"], [219, 2, 1, "", "add_format"], [220, 2, 1, "", "create_format"], [221, 2, 1, "", "get_reader"], [222, 2, 1, "", "get_sniffer"], [223, 2, 1, "", "get_writer"], [224, 2, 1, "", "list_read_formats"], [225, 2, 1, "", "list_write_formats"], [226, 2, 1, "", "monkey_patch"], [227, 2, 1, "", "read"], [228, 2, 1, "", "sniff"], [229, 2, 1, "", "write"]], "skbio.io.util": [[235, 3, 1, "", "open"], [236, 3, 1, "", "open_file"], [237, 3, 1, "", "open_files"]], "skbio.metadata": [[238, 1, 1, "", "CategoricalMetadataColumn"], [256, 1, 1, "", "Interval"], [266, 1, 1, "", "IntervalMetadata"], [285, 1, 1, "", "MetadataColumn"], [303, 1, 1, "", "NumericMetadataColumn"], [321, 1, 1, "", "SampleMetadata"]], "skbio.metadata.CategoricalMetadataColumn": [[239, 2, 1, "", "__eq__"], [240, 2, 1, "", "__ge__"], [241, 2, 1, "", "__getstate__"], [242, 2, 1, "", "__gt__"], [243, 2, 1, "", "__le__"], [244, 2, 1, "", "__lt__"], [245, 2, 1, "", "__ne__"], [246, 2, 1, "", "__str__"], [247, 2, 1, "", "drop_missing_values"], [248, 2, 1, "", "filter_ids"], [249, 2, 1, "", "get_ids"], [250, 2, 1, "", "get_missing"], [251, 2, 1, "", "get_value"], [252, 2, 1, "", "has_missing_values"], [253, 2, 1, "", "save"], [254, 2, 1, "", "to_dataframe"], [255, 2, 1, "", "to_series"]], "skbio.metadata.Interval": [[257, 2, 1, "", "__eq__"], [258, 2, 1, "", "__ge__"], [259, 2, 1, "", "__getstate__"], [260, 2, 1, "", "__gt__"], [261, 2, 1, "", "__le__"], [262, 2, 1, "", "__lt__"], [263, 2, 1, "", "__ne__"], [264, 2, 1, "", "__str__"], [265, 2, 1, "", "drop"]], "skbio.metadata.IntervalMetadata": [[267, 2, 1, "", "__copy__"], [268, 2, 1, "", "__deepcopy__"], [269, 2, 1, "", "__eq__"], [270, 2, 1, "", "__ge__"], [271, 2, 1, "", "__getstate__"], [272, 2, 1, "", "__gt__"], [273, 2, 1, "", "__le__"], [274, 2, 1, "", "__lt__"], [275, 2, 1, "", "__ne__"], [276, 2, 1, "", "__str__"], [277, 2, 1, "", "add"], [278, 2, 1, "", "concat"], [279, 2, 1, "", "drop"], [280, 2, 1, "", "merge"], [281, 2, 1, "", "query"], [282, 2, 1, "", "read"], [283, 2, 1, "", "sort"], [284, 2, 1, "", "write"]], "skbio.metadata.MetadataColumn": [[286, 2, 1, "", "__eq__"], [287, 2, 1, "", "__ge__"], [288, 2, 1, "", "__getstate__"], [289, 2, 1, "", "__gt__"], [290, 2, 1, "", "__le__"], [291, 2, 1, "", "__lt__"], [292, 2, 1, "", "__ne__"], [293, 2, 1, "", "__str__"], [294, 2, 1, "", "drop_missing_values"], [295, 2, 1, "", "filter_ids"], [296, 2, 1, "", "get_ids"], [297, 2, 1, "", "get_missing"], [298, 2, 1, "", "get_value"], [299, 2, 1, "", "has_missing_values"], [300, 2, 1, "", "save"], [301, 2, 1, "", "to_dataframe"], [302, 2, 1, "", "to_series"]], "skbio.metadata.NumericMetadataColumn": [[304, 2, 1, "", "__eq__"], [305, 2, 1, "", "__ge__"], [306, 2, 1, "", "__getstate__"], [307, 2, 1, "", "__gt__"], [308, 2, 1, "", "__le__"], [309, 2, 1, "", "__lt__"], [310, 2, 1, "", "__ne__"], [311, 2, 1, "", "__str__"], [312, 2, 1, "", "drop_missing_values"], [313, 2, 1, "", "filter_ids"], [314, 2, 1, "", "get_ids"], [315, 2, 1, "", "get_missing"], [316, 2, 1, "", "get_value"], [317, 2, 1, "", "has_missing_values"], [318, 2, 1, "", "save"], [319, 2, 1, "", "to_dataframe"], [320, 2, 1, "", "to_series"]], "skbio.metadata.SampleMetadata": [[322, 2, 1, "", "__eq__"], [323, 2, 1, "", "__ge__"], [324, 2, 1, "", "__getstate__"], [325, 2, 1, "", "__gt__"], [326, 2, 1, "", "__le__"], [327, 2, 1, "", "__lt__"], [328, 2, 1, "", "__ne__"], [329, 2, 1, "", "__str__"], [330, 2, 1, "", "filter_columns"], [331, 2, 1, "", "filter_ids"], [332, 2, 1, "", "get_column"], [333, 2, 1, "", "get_ids"], [334, 2, 1, "", "load"], [335, 2, 1, "", "merge"], [336, 2, 1, "", "read"], [337, 2, 1, "", "save"], [338, 2, 1, "", "to_dataframe"], [339, 2, 1, "", "write"]], "skbio.sequence": [[340, 1, 1, "", "DNA"], [399, 1, 1, "", "GeneticCode"], [411, 1, 1, "", "GrammaredSequence"], [462, 1, 1, "", "Protein"], [515, 1, 1, "", "RNA"], [574, 1, 1, "", "Sequence"], [612, 1, 1, "", "SubstitutionMatrix"], [640, 0, 0, "-", "distance"]], "skbio.sequence.DNA": [[341, 2, 1, "", "__bool__"], [342, 2, 1, "", "__contains__"], [343, 2, 1, "", "__copy__"], [344, 2, 1, "", "__deepcopy__"], [345, 2, 1, "", "__eq__"], [346, 2, 1, "", "__ge__"], [347, 2, 1, "", "__getitem__"], [348, 2, 1, "", "__getstate__"], [349, 2, 1, "", "__gt__"], [350, 2, 1, "", "__iter__"], [351, 2, 1, "", "__le__"], [352, 2, 1, "", "__len__"], [353, 2, 1, "", "__lt__"], [354, 2, 1, "", "__ne__"], [355, 2, 1, "", "__reversed__"], [356, 2, 1, "", "__str__"], [357, 2, 1, "", "complement"], [358, 2, 1, "", "concat"], [359, 2, 1, "", "count"], [360, 2, 1, "", "definites"], [361, 2, 1, "", "degap"], [362, 2, 1, "", "degenerates"], [363, 2, 1, "", "distance"], [364, 2, 1, "", "expand_degenerates"], [365, 2, 1, "", "find_motifs"], [366, 2, 1, "", "find_with_regex"], [367, 2, 1, "", "frequencies"], [368, 2, 1, "", "gaps"], [369, 2, 1, "", "gc_content"], [370, 2, 1, "", "gc_frequency"], [371, 2, 1, "", "has_definites"], [372, 2, 1, "", "has_degenerates"], [373, 2, 1, "", "has_gaps"], [374, 2, 1, "", "has_interval_metadata"], [375, 2, 1, "", "has_metadata"], [376, 2, 1, "", "has_nondegenerates"], [377, 2, 1, "", "has_positional_metadata"], [378, 2, 1, "", "index"], [379, 2, 1, "", "is_reverse_complement"], [380, 2, 1, "", "iter_contiguous"], [381, 2, 1, "", "iter_kmers"], [382, 2, 1, "", "kmer_frequencies"], [383, 2, 1, "", "lowercase"], [384, 2, 1, "", "match_frequency"], [385, 2, 1, "", "matches"], [386, 2, 1, "", "mismatch_frequency"], [387, 2, 1, "", "mismatches"], [388, 2, 1, "", "nondegenerates"], [389, 2, 1, "", "read"], [390, 2, 1, "", "replace"], [391, 2, 1, "", "reverse_complement"], [392, 2, 1, "", "to_definites"], [393, 2, 1, "", "to_indices"], [394, 2, 1, "", "to_regex"], [395, 2, 1, "", "transcribe"], [396, 2, 1, "", "translate"], [397, 2, 1, "", "translate_six_frames"], [398, 2, 1, "", "write"]], "skbio.sequence.GeneticCode": [[400, 2, 1, "", "__eq__"], [401, 2, 1, "", "__ge__"], [402, 2, 1, "", "__getstate__"], [403, 2, 1, "", "__gt__"], [404, 2, 1, "", "__le__"], [405, 2, 1, "", "__lt__"], [406, 2, 1, "", "__ne__"], [407, 2, 1, "", "__str__"], [408, 2, 1, "", "from_ncbi"], [409, 2, 1, "", "translate"], [410, 2, 1, "", "translate_six_frames"]], "skbio.sequence.GrammaredSequence": [[412, 2, 1, "", "__bool__"], [413, 2, 1, "", "__contains__"], [414, 2, 1, "", "__copy__"], [415, 2, 1, "", "__deepcopy__"], [416, 2, 1, "", "__eq__"], [417, 2, 1, "", "__ge__"], [418, 2, 1, "", "__getitem__"], [419, 2, 1, "", "__getstate__"], [420, 2, 1, "", "__gt__"], [421, 2, 1, "", "__iter__"], [422, 2, 1, "", "__le__"], [423, 2, 1, "", "__len__"], [424, 2, 1, "", "__lt__"], [425, 2, 1, "", "__ne__"], [426, 2, 1, "", "__reversed__"], [427, 2, 1, "", "__str__"], [428, 2, 1, "", "concat"], [429, 2, 1, "", "count"], [430, 2, 1, "", "definites"], [431, 2, 1, "", "degap"], [432, 2, 1, "", "degenerates"], [433, 2, 1, "", "distance"], [434, 2, 1, "", "expand_degenerates"], [435, 2, 1, "", "find_motifs"], [436, 2, 1, "", "find_with_regex"], [437, 2, 1, "", "frequencies"], [438, 2, 1, "", "gaps"], [439, 2, 1, "", "has_definites"], [440, 2, 1, "", "has_degenerates"], [441, 2, 1, "", "has_gaps"], [442, 2, 1, "", "has_interval_metadata"], [443, 2, 1, "", "has_metadata"], [444, 2, 1, "", "has_nondegenerates"], [445, 2, 1, "", "has_positional_metadata"], [446, 2, 1, "", "index"], [447, 2, 1, "", "iter_contiguous"], [448, 2, 1, "", "iter_kmers"], [449, 2, 1, "", "kmer_frequencies"], [450, 2, 1, "", "lowercase"], [451, 2, 1, "", "match_frequency"], [452, 2, 1, "", "matches"], [453, 2, 1, "", "mismatch_frequency"], [454, 2, 1, "", "mismatches"], [455, 2, 1, "", "nondegenerates"], [456, 2, 1, "", "read"], [457, 2, 1, "", "replace"], [458, 2, 1, "", "to_definites"], [459, 2, 1, "", "to_indices"], [460, 2, 1, "", "to_regex"], [461, 2, 1, "", "write"]], "skbio.sequence.Protein": [[463, 2, 1, "", "__bool__"], [464, 2, 1, "", "__contains__"], [465, 2, 1, "", "__copy__"], [466, 2, 1, "", "__deepcopy__"], [467, 2, 1, "", "__eq__"], [468, 2, 1, "", "__ge__"], [469, 2, 1, "", "__getitem__"], [470, 2, 1, "", "__getstate__"], [471, 2, 1, "", "__gt__"], [472, 2, 1, "", "__iter__"], [473, 2, 1, "", "__le__"], [474, 2, 1, "", "__len__"], [475, 2, 1, "", "__lt__"], [476, 2, 1, "", "__ne__"], [477, 2, 1, "", "__reversed__"], [478, 2, 1, "", "__str__"], [479, 2, 1, "", "concat"], [480, 2, 1, "", "count"], [481, 2, 1, "", "definites"], [482, 2, 1, "", "degap"], [483, 2, 1, "", "degenerates"], [484, 2, 1, "", "distance"], [485, 2, 1, "", "expand_degenerates"], [486, 2, 1, "", "find_motifs"], [487, 2, 1, "", "find_with_regex"], [488, 2, 1, "", "frequencies"], [489, 2, 1, "", "gaps"], [490, 2, 1, "", "has_definites"], [491, 2, 1, "", "has_degenerates"], [492, 2, 1, "", "has_gaps"], [493, 2, 1, "", "has_interval_metadata"], [494, 2, 1, "", "has_metadata"], [495, 2, 1, "", "has_nondegenerates"], [496, 2, 1, "", "has_positional_metadata"], [497, 2, 1, "", "has_stops"], [498, 2, 1, "", "index"], [499, 2, 1, "", "iter_contiguous"], [500, 2, 1, "", "iter_kmers"], [501, 2, 1, "", "kmer_frequencies"], [502, 2, 1, "", "lowercase"], [503, 2, 1, "", "match_frequency"], [504, 2, 1, "", "matches"], [505, 2, 1, "", "mismatch_frequency"], [506, 2, 1, "", "mismatches"], [507, 2, 1, "", "nondegenerates"], [508, 2, 1, "", "read"], [509, 2, 1, "", "replace"], [510, 2, 1, "", "stops"], [511, 2, 1, "", "to_definites"], [512, 2, 1, "", "to_indices"], [513, 2, 1, "", "to_regex"], [514, 2, 1, "", "write"]], "skbio.sequence.RNA": [[516, 2, 1, "", "__bool__"], [517, 2, 1, "", "__contains__"], [518, 2, 1, "", "__copy__"], [519, 2, 1, "", "__deepcopy__"], [520, 2, 1, "", "__eq__"], [521, 2, 1, "", "__ge__"], [522, 2, 1, "", "__getitem__"], [523, 2, 1, "", "__getstate__"], [524, 2, 1, "", "__gt__"], [525, 2, 1, "", "__iter__"], [526, 2, 1, "", "__le__"], [527, 2, 1, "", "__len__"], [528, 2, 1, "", "__lt__"], [529, 2, 1, "", "__ne__"], [530, 2, 1, "", "__reversed__"], [531, 2, 1, "", "__str__"], [532, 2, 1, "", "complement"], [533, 2, 1, "", "concat"], [534, 2, 1, "", "count"], [535, 2, 1, "", "definites"], [536, 2, 1, "", "degap"], [537, 2, 1, "", "degenerates"], [538, 2, 1, "", "distance"], [539, 2, 1, "", "expand_degenerates"], [540, 2, 1, "", "find_motifs"], [541, 2, 1, "", "find_with_regex"], [542, 2, 1, "", "frequencies"], [543, 2, 1, "", "gaps"], [544, 2, 1, "", "gc_content"], [545, 2, 1, "", "gc_frequency"], [546, 2, 1, "", "has_definites"], [547, 2, 1, "", "has_degenerates"], [548, 2, 1, "", "has_gaps"], [549, 2, 1, "", "has_interval_metadata"], [550, 2, 1, "", "has_metadata"], [551, 2, 1, "", "has_nondegenerates"], [552, 2, 1, "", "has_positional_metadata"], [553, 2, 1, "", "index"], [554, 2, 1, "", "is_reverse_complement"], [555, 2, 1, "", "iter_contiguous"], [556, 2, 1, "", "iter_kmers"], [557, 2, 1, "", "kmer_frequencies"], [558, 2, 1, "", "lowercase"], [559, 2, 1, "", "match_frequency"], [560, 2, 1, "", "matches"], [561, 2, 1, "", "mismatch_frequency"], [562, 2, 1, "", "mismatches"], [563, 2, 1, "", "nondegenerates"], [564, 2, 1, "", "read"], [565, 2, 1, "", "replace"], [566, 2, 1, "", "reverse_complement"], [567, 2, 1, "", "reverse_transcribe"], [568, 2, 1, "", "to_definites"], [569, 2, 1, "", "to_indices"], [570, 2, 1, "", "to_regex"], [571, 2, 1, "", "translate"], [572, 2, 1, "", "translate_six_frames"], [573, 2, 1, "", "write"]], "skbio.sequence.Sequence": [[575, 2, 1, "", "__bool__"], [576, 2, 1, "", "__contains__"], [577, 2, 1, "", "__copy__"], [578, 2, 1, "", "__deepcopy__"], [579, 2, 1, "", "__eq__"], [580, 2, 1, "", "__ge__"], [581, 2, 1, "", "__getitem__"], [582, 2, 1, "", "__getstate__"], [583, 2, 1, "", "__gt__"], [584, 2, 1, "", "__iter__"], [585, 2, 1, "", "__le__"], [586, 2, 1, "", "__len__"], [587, 2, 1, "", "__lt__"], [588, 2, 1, "", "__ne__"], [589, 2, 1, "", "__reversed__"], [590, 2, 1, "", "__str__"], [591, 2, 1, "", "concat"], [592, 2, 1, "", "count"], [593, 2, 1, "", "distance"], [594, 2, 1, "", "find_with_regex"], [595, 2, 1, "", "frequencies"], [596, 2, 1, "", "has_interval_metadata"], [597, 2, 1, "", "has_metadata"], [598, 2, 1, "", "has_positional_metadata"], [599, 2, 1, "", "index"], [600, 2, 1, "", "iter_contiguous"], [601, 2, 1, "", "iter_kmers"], [602, 2, 1, "", "kmer_frequencies"], [603, 2, 1, "", "lowercase"], [604, 2, 1, "", "match_frequency"], [605, 2, 1, "", "matches"], [606, 2, 1, "", "mismatch_frequency"], [607, 2, 1, "", "mismatches"], [608, 2, 1, "", "read"], [609, 2, 1, "", "replace"], [610, 2, 1, "", "to_indices"], [611, 2, 1, "", "write"]], "skbio.sequence.SubstitutionMatrix": [[613, 2, 1, "", "__contains__"], [614, 2, 1, "", "__eq__"], [615, 2, 1, "", "__ge__"], [616, 2, 1, "", "__getitem__"], [617, 2, 1, "", "__getstate__"], [618, 2, 1, "", "__gt__"], [619, 2, 1, "", "__le__"], [620, 2, 1, "", "__lt__"], [621, 2, 1, "", "__ne__"], [622, 2, 1, "", "__str__"], [623, 2, 1, "", "between"], [624, 2, 1, "", "by_name"], [625, 2, 1, "", "copy"], [626, 2, 1, "", "filter"], [627, 2, 1, "", "from_dict"], [628, 2, 1, "", "from_iterable"], [629, 2, 1, "", "get_names"], [630, 2, 1, "", "identity"], [631, 2, 1, "", "index"], [632, 2, 1, "", "plot"], [633, 2, 1, "", "read"], [634, 2, 1, "", "redundant_form"], [635, 2, 1, "", "to_data_frame"], [636, 2, 1, "", "to_dict"], [637, 2, 1, "", "transpose"], [638, 2, 1, "", "within"], [639, 2, 1, "", "write"]], "skbio.sequence.distance": [[641, 3, 1, "", "hamming"], [642, 3, 1, "", "kmer_distance"]], "skbio.stats": [[643, 0, 0, "-", "composition"], [664, 0, 0, "-", "distance"], [721, 0, 0, "-", "evolve"], [723, 0, 0, "-", "gradient"], [812, 3, 1, "", "isubsample"], [813, 0, 0, "-", "ordination"], [838, 0, 0, "-", "power"], [843, 3, 1, "", "subsample_counts"]], "skbio.stats.composition": [[644, 3, 1, "", "alr"], [645, 3, 1, "", "alr_inv"], [646, 3, 1, "", "ancom"], [647, 3, 1, "", "centralize"], [648, 3, 1, "", "closure"], [649, 3, 1, "", "clr"], [650, 3, 1, "", "clr_inv"], [651, 3, 1, "", "dirmult_ttest"], [652, 3, 1, "", "ilr"], [653, 3, 1, "", "ilr_inv"], [654, 3, 1, "", "inner"], [655, 3, 1, "", "multi_replace"], [656, 3, 1, "", "multiplicative_replacement"], [657, 3, 1, "", "pairwise_vlr"], [658, 3, 1, "", "perturb"], [659, 3, 1, "", "perturb_inv"], [660, 3, 1, "", "power"], [661, 3, 1, "", "sbp_basis"], [662, 3, 1, "", "tree_basis"], [663, 3, 1, "", "vlr"]], "skbio.stats.distance": [[665, 1, 1, "", "DissimilarityMatrix"], [688, 1, 1, "", "DistanceMatrix"], [714, 3, 1, "", "anosim"], [715, 3, 1, "", "bioenv"], [716, 3, 1, "", "mantel"], [717, 3, 1, "", "permanova"], [718, 3, 1, "", "permdisp"], [719, 3, 1, "", "pwmantel"], [720, 3, 1, "", "randdm"]], "skbio.stats.distance.DissimilarityMatrix": [[666, 2, 1, "", "__contains__"], [667, 2, 1, "", "__eq__"], [668, 2, 1, "", "__ge__"], [669, 2, 1, "", "__getitem__"], [670, 2, 1, "", "__getstate__"], [671, 2, 1, "", "__gt__"], [672, 2, 1, "", "__le__"], [673, 2, 1, "", "__lt__"], [674, 2, 1, "", "__ne__"], [675, 2, 1, "", "__str__"], [676, 2, 1, "", "between"], [677, 2, 1, "", "copy"], [678, 2, 1, "", "filter"], [679, 2, 1, "", "from_iterable"], [680, 2, 1, "", "index"], [681, 2, 1, "", "plot"], [682, 2, 1, "", "read"], [683, 2, 1, "", "redundant_form"], [684, 2, 1, "", "to_data_frame"], [685, 2, 1, "", "transpose"], [686, 2, 1, "", "within"], [687, 2, 1, "", "write"]], "skbio.stats.distance.DistanceMatrix": [[689, 2, 1, "", "__contains__"], [690, 2, 1, "", "__eq__"], [691, 2, 1, "", "__ge__"], [692, 2, 1, "", "__getitem__"], [693, 2, 1, "", "__getstate__"], [694, 2, 1, "", "__gt__"], [695, 2, 1, "", "__le__"], [696, 2, 1, "", "__lt__"], [697, 2, 1, "", "__ne__"], [698, 2, 1, "", "__str__"], [699, 2, 1, "", "between"], [700, 2, 1, "", "condensed_form"], [701, 2, 1, "", "copy"], [702, 2, 1, "", "filter"], [703, 2, 1, "", "from_iterable"], [704, 2, 1, "", "index"], [705, 2, 1, "", "permute"], [706, 2, 1, "", "plot"], [707, 2, 1, "", "read"], [708, 2, 1, "", "redundant_form"], [709, 2, 1, "", "to_data_frame"], [710, 2, 1, "", "to_series"], [711, 2, 1, "", "transpose"], [712, 2, 1, "", "within"], [713, 2, 1, "", "write"]], "skbio.stats.evolve": [[722, 3, 1, "", "hommola_cospeciation"]], "skbio.stats.gradient": [[724, 1, 1, "", "AverageGradientANOVA"], [735, 1, 1, "", "CategoryResults"], [746, 1, 1, "", "FirstDifferenceGradientANOVA"], [757, 1, 1, "", "GradientANOVA"], [768, 1, 1, "", "GradientANOVAResults"], [779, 1, 1, "", "GroupResults"], [790, 1, 1, "", "TrajectoryGradientANOVA"], [801, 1, 1, "", "WindowDifferenceGradientANOVA"]], "skbio.stats.gradient.AverageGradientANOVA": [[725, 2, 1, "", "__eq__"], [726, 2, 1, "", "__ge__"], [727, 2, 1, "", "__getstate__"], [728, 2, 1, "", "__gt__"], [729, 2, 1, "", "__hash__"], [730, 2, 1, "", "__le__"], [731, 2, 1, "", "__lt__"], [732, 2, 1, "", "__ne__"], [733, 2, 1, "", "__str__"], [734, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.CategoryResults": [[736, 2, 1, "", "__eq__"], [737, 2, 1, "", "__ge__"], [738, 2, 1, "", "__getstate__"], [739, 2, 1, "", "__gt__"], [740, 2, 1, "", "__hash__"], [741, 2, 1, "", "__le__"], [742, 2, 1, "", "__lt__"], [743, 2, 1, "", "__ne__"], [744, 2, 1, "", "__str__"], [745, 2, 1, "", "to_files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[747, 2, 1, "", "__eq__"], [748, 2, 1, "", "__ge__"], [749, 2, 1, "", "__getstate__"], [750, 2, 1, "", "__gt__"], [751, 2, 1, "", "__hash__"], [752, 2, 1, "", "__le__"], [753, 2, 1, "", "__lt__"], [754, 2, 1, "", "__ne__"], [755, 2, 1, "", "__str__"], [756, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVA": [[758, 2, 1, "", "__eq__"], [759, 2, 1, "", "__ge__"], [760, 2, 1, "", "__getstate__"], [761, 2, 1, "", "__gt__"], [762, 2, 1, "", "__hash__"], [763, 2, 1, "", "__le__"], [764, 2, 1, "", "__lt__"], [765, 2, 1, "", "__ne__"], [766, 2, 1, "", "__str__"], [767, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[769, 2, 1, "", "__eq__"], [770, 2, 1, "", "__ge__"], [771, 2, 1, "", "__getstate__"], [772, 2, 1, "", "__gt__"], [773, 2, 1, "", "__hash__"], [774, 2, 1, "", "__le__"], [775, 2, 1, "", "__lt__"], [776, 2, 1, "", "__ne__"], [777, 2, 1, "", "__str__"], [778, 2, 1, "", "to_files"]], "skbio.stats.gradient.GroupResults": [[780, 2, 1, "", "__eq__"], [781, 2, 1, "", "__ge__"], [782, 2, 1, "", "__getstate__"], [783, 2, 1, "", "__gt__"], [784, 2, 1, "", "__hash__"], [785, 2, 1, "", "__le__"], [786, 2, 1, "", "__lt__"], [787, 2, 1, "", "__ne__"], [788, 2, 1, "", "__str__"], [789, 2, 1, "", "to_files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[791, 2, 1, "", "__eq__"], [792, 2, 1, "", "__ge__"], [793, 2, 1, "", "__getstate__"], [794, 2, 1, "", "__gt__"], [795, 2, 1, "", "__hash__"], [796, 2, 1, "", "__le__"], [797, 2, 1, "", "__lt__"], [798, 2, 1, "", "__ne__"], [799, 2, 1, "", "__str__"], [800, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[802, 2, 1, "", "__eq__"], [803, 2, 1, "", "__ge__"], [804, 2, 1, "", "__getstate__"], [805, 2, 1, "", "__gt__"], [806, 2, 1, "", "__hash__"], [807, 2, 1, "", "__le__"], [808, 2, 1, "", "__lt__"], [809, 2, 1, "", "__ne__"], [810, 2, 1, "", "__str__"], [811, 2, 1, "", "get_trajectories"]], "skbio.stats.ordination": [[814, 1, 1, "", "OrdinationResults"], [827, 3, 1, "", "ca"], [828, 3, 1, "", "cca"], [829, 3, 1, "", "corr"], [830, 3, 1, "", "e_matrix"], [831, 3, 1, "", "f_matrix"], [832, 3, 1, "", "mean_and_std"], [833, 3, 1, "", "pcoa"], [834, 3, 1, "", "pcoa_biplot"], [835, 3, 1, "", "rda"], [836, 3, 1, "", "scale"], [837, 3, 1, "", "svd_rank"]], "skbio.stats.ordination.OrdinationResults": [[815, 2, 1, "", "__eq__"], [816, 2, 1, "", "__ge__"], [817, 2, 1, "", "__getstate__"], [818, 2, 1, "", "__gt__"], [819, 2, 1, "", "__hash__"], [820, 2, 1, "", "__le__"], [821, 2, 1, "", "__lt__"], [822, 2, 1, "", "__ne__"], [823, 2, 1, "", "__str__"], [824, 2, 1, "", "plot"], [825, 2, 1, "", "read"], [826, 2, 1, "", "write"]], "skbio.stats.power": [[839, 3, 1, "", "confidence_bound"], [840, 3, 1, "", "paired_subsamples"], [841, 3, 1, "", "subsample_paired_power"], [842, 3, 1, "", "subsample_power"]], "skbio.table": [[844, 1, 1, "", "Table"], [911, 4, 1, "", "example_table"]], "skbio.table.Table": [[845, 2, 1, "", "__eq__"], [846, 2, 1, "", "__ge__"], [847, 2, 1, "", "__getitem__"], [848, 2, 1, "", "__getstate__"], [849, 2, 1, "", "__gt__"], [850, 2, 1, "", "__iter__"], [851, 2, 1, "", "__le__"], [852, 2, 1, "", "__lt__"], [853, 2, 1, "", "__ne__"], [854, 2, 1, "", "__str__"], [855, 2, 1, "", "add_group_metadata"], [856, 2, 1, "", "add_metadata"], [857, 2, 1, "", "align_to"], [858, 2, 1, "", "align_to_dataframe"], [859, 2, 1, "", "align_tree"], [860, 2, 1, "", "collapse"], [861, 2, 1, "", "concat"], [862, 2, 1, "", "copy"], [863, 2, 1, "", "data"], [864, 2, 1, "", "del_metadata"], [865, 2, 1, "", "delimited_self"], [866, 2, 1, "", "descriptive_equality"], [867, 2, 1, "", "exists"], [868, 2, 1, "", "filter"], [869, 2, 1, "", "from_adjacency"], [870, 2, 1, "", "from_hdf5"], [871, 2, 1, "", "from_json"], [872, 2, 1, "", "from_tsv"], [873, 2, 1, "", "get_table_density"], [874, 2, 1, "", "get_value_by_ids"], [875, 2, 1, "", "group_metadata"], [876, 2, 1, "", "head"], [877, 2, 1, "", "ids"], [878, 2, 1, "", "index"], [879, 2, 1, "", "is_empty"], [880, 2, 1, "", "iter"], [881, 2, 1, "", "iter_data"], [882, 2, 1, "", "iter_pairwise"], [883, 2, 1, "", "length"], [884, 2, 1, "", "max"], [885, 2, 1, "", "merge"], [886, 2, 1, "", "metadata"], [887, 2, 1, "", "metadata_to_dataframe"], [888, 2, 1, "", "min"], [889, 2, 1, "", "nonzero"], [890, 2, 1, "", "nonzero_counts"], [891, 2, 1, "", "norm"], [892, 2, 1, "", "pa"], [893, 2, 1, "", "partition"], [894, 2, 1, "", "rankdata"], [895, 2, 1, "", "read"], [896, 2, 1, "", "reduce"], [897, 2, 1, "", "remove_empty"], [898, 2, 1, "", "sort"], [899, 2, 1, "", "sort_order"], [900, 2, 1, "", "subsample"], [901, 2, 1, "", "sum"], [902, 2, 1, "", "to_anndata"], [903, 2, 1, "", "to_dataframe"], [904, 2, 1, "", "to_hdf5"], [905, 2, 1, "", "to_json"], [906, 2, 1, "", "to_tsv"], [907, 2, 1, "", "transform"], [908, 2, 1, "", "transpose"], [909, 2, 1, "", "update_ids"], [910, 2, 1, "", "write"]], "skbio.tree": [[912, 1, 1, "", "TreeNode"], [991, 3, 1, "", "majority_rule"], [992, 3, 1, "", "nj"]], "skbio.tree.TreeNode": [[913, 2, 1, "", "__copy__"], [914, 2, 1, "", "__deepcopy__"], [915, 2, 1, "", "__eq__"], [916, 2, 1, "", "__ge__"], [917, 2, 1, "", "__getitem__"], [918, 2, 1, "", "__getstate__"], [919, 2, 1, "", "__gt__"], [920, 2, 1, "", "__hash__"], [921, 2, 1, "", "__iter__"], [922, 2, 1, "", "__le__"], [923, 2, 1, "", "__len__"], [924, 2, 1, "", "__lt__"], [925, 2, 1, "", "__ne__"], [926, 2, 1, "", "__str__"], [927, 2, 1, "", "accumulate_to_ancestor"], [928, 2, 1, "", "ancestors"], [929, 2, 1, "", "append"], [930, 2, 1, "", "ascii_art"], [931, 2, 1, "", "assign_ids"], [932, 2, 1, "", "assign_supports"], [933, 2, 1, "", "bifurcate"], [934, 2, 1, "", "cache_attr"], [935, 2, 1, "", "compare_rfd"], [936, 2, 1, "", "compare_subsets"], [937, 2, 1, "", "compare_tip_distances"], [938, 2, 1, "", "copy"], [939, 2, 1, "", "count"], [940, 2, 1, "", "create_caches"], [941, 2, 1, "", "deepcopy"], [942, 2, 1, "", "descending_branch_length"], [943, 2, 1, "", "distance"], [944, 2, 1, "", "extend"], [945, 2, 1, "", "find"], [946, 2, 1, "", "find_all"], [947, 2, 1, "", "find_by_func"], [948, 2, 1, "", "find_by_id"], [949, 2, 1, "", "from_linkage_matrix"], [950, 2, 1, "", "from_taxdump"], [951, 2, 1, "", "from_taxonomy"], [952, 2, 1, "", "get_max_distance"], [953, 2, 1, "", "has_children"], [954, 2, 1, "", "index_tree"], [955, 2, 1, "", "invalidate_caches"], [956, 2, 1, "", "is_root"], [957, 2, 1, "", "is_tip"], [958, 2, 1, "", "lca"], [959, 2, 1, "", "levelorder"], [960, 2, 1, "", "lowest_common_ancestor"], [961, 2, 1, "", "neighbors"], [962, 2, 1, "", "non_tips"], [963, 2, 1, "", "observed_node_counts"], [964, 2, 1, "", "pop"], [965, 2, 1, "", "postorder"], [966, 2, 1, "", "pre_and_postorder"], [967, 2, 1, "", "preorder"], [968, 2, 1, "", "prune"], [969, 2, 1, "", "read"], [970, 2, 1, "", "remove"], [971, 2, 1, "", "remove_deleted"], [972, 2, 1, "", "root"], [973, 2, 1, "", "root_at"], [974, 2, 1, "", "root_at_midpoint"], [975, 2, 1, "", "shear"], [976, 2, 1, "", "shuffle"], [977, 2, 1, "", "siblings"], [978, 2, 1, "", "subset"], [979, 2, 1, "", "subsets"], [980, 2, 1, "", "subtree"], [981, 2, 1, "", "tip_tip_distances"], [982, 2, 1, "", "tips"], [983, 2, 1, "", "to_array"], [984, 2, 1, "", "to_taxonomy"], [985, 2, 1, "", "traverse"], [986, 2, 1, "", "unpack"], [987, 2, 1, "", "unpack_by_func"], [988, 2, 1, "", "unrooted_copy"], [989, 2, 1, "", "unrooted_deepcopy"], [990, 2, 1, "", "write"]], "skbio.util": [[993, 5, 1, "", "EfficiencyWarning"], [994, 5, 1, "", "RepresentationWarning"], [995, 3, 1, "", "assert_data_frame_almost_equal"], [996, 3, 1, "", "assert_ordination_results_equal"], [997, 3, 1, "", "cardinal_to_ordinal"], [998, 1, 1, "", "classproperty"], [1015, 3, 1, "", "find_duplicates"], [1016, 3, 1, "", "get_data_path"], [1017, 3, 1, "", "safe_md5"]], "skbio.util.classproperty": [[999, 2, 1, "", "__delete__"], [1000, 2, 1, "", "__eq__"], [1001, 2, 1, "", "__ge__"], [1002, 2, 1, "", "__get__"], [1003, 2, 1, "", "__getstate__"], [1004, 2, 1, "", "__gt__"], [1005, 2, 1, "", "__hash__"], [1006, 2, 1, "", "__le__"], [1007, 2, 1, "", "__lt__"], [1008, 2, 1, "", "__ne__"], [1009, 2, 1, "", "__set__"], [1010, 2, 1, "", "__set_name__"], [1011, 2, 1, "", "__str__"], [1012, 2, 1, "", "deleter"], [1013, 2, 1, "", "getter"], [1014, 2, 1, "", "setter"]], "skbio.workflow": [[1018, 1, 1, "", "Workflow"], [1030, 1, 1, "", "method"], [1041, 1, 1, "", "requires"]], "skbio.workflow.Workflow": [[1019, 2, 1, "", "__call__"], [1020, 2, 1, "", "__eq__"], [1021, 2, 1, "", "__ge__"], [1022, 2, 1, "", "__getstate__"], [1023, 2, 1, "", "__gt__"], [1024, 2, 1, "", "__hash__"], [1025, 2, 1, "", "__le__"], [1026, 2, 1, "", "__lt__"], [1027, 2, 1, "", "__ne__"], [1028, 2, 1, "", "__str__"], [1029, 2, 1, "", "initialize_state"]], "skbio.workflow.method": [[1031, 2, 1, "", "__call__"], [1032, 2, 1, "", "__eq__"], [1033, 2, 1, "", "__ge__"], [1034, 2, 1, "", "__getstate__"], [1035, 2, 1, "", "__gt__"], [1036, 2, 1, "", "__hash__"], [1037, 2, 1, "", "__le__"], [1038, 2, 1, "", "__lt__"], [1039, 2, 1, "", "__ne__"], [1040, 2, 1, "", "__str__"]], "skbio.workflow.requires": [[1042, 2, 1, "", "__call__"], [1043, 2, 1, "", "__eq__"], [1044, 2, 1, "", "__ge__"], [1045, 2, 1, "", "__getstate__"], [1046, 2, 1, "", "__gt__"], [1047, 2, 1, "", "__hash__"], [1048, 2, 1, "", "__le__"], [1049, 2, 1, "", "__lt__"], [1050, 2, 1, "", "__ne__"], [1051, 2, 1, "", "__str__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:exception"}, "terms": {"": [0, 1, 3, 44, 53, 65, 82, 83, 84, 85, 89, 90, 91, 92, 94, 98, 99, 100, 103, 107, 109, 112, 114, 115, 116, 117, 119, 120, 124, 126, 127, 128, 132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 178, 179, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 254, 255, 256, 266, 278, 301, 302, 319, 320, 321, 333, 334, 338, 340, 342, 345, 347, 350, 352, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 395, 396, 397, 399, 400, 406, 409, 410, 411, 413, 416, 418, 421, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 462, 464, 467, 469, 472, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 512, 515, 517, 520, 522, 525, 527, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 569, 571, 572, 574, 576, 579, 581, 584, 586, 588, 589, 590, 592, 593, 594, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 616, 623, 624, 626, 638, 641, 644, 645, 646, 649, 650, 652, 653, 657, 661, 663, 665, 669, 676, 678, 686, 692, 699, 702, 712, 714, 715, 716, 717, 718, 745, 778, 789, 812, 824, 827, 828, 829, 833, 835, 837, 838, 840, 841, 842, 860, 868, 876, 881, 896, 899, 934, 942, 954, 970, 991, 1041, 1053, 1055, 1058, 1060], "0": [0, 1, 3, 13, 14, 15, 17, 18, 19, 32, 33, 34, 44, 45, 46, 47, 50, 51, 52, 53, 65, 77, 82, 83, 85, 88, 91, 92, 94, 104, 105, 107, 112, 116, 117, 118, 121, 122, 130, 132, 133, 143, 144, 149, 150, 163, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 235, 278, 340, 341, 345, 347, 357, 358, 359, 361, 363, 364, 365, 367, 369, 370, 376, 382, 384, 386, 388, 391, 393, 394, 395, 396, 397, 399, 409, 410, 411, 412, 416, 418, 428, 429, 431, 433, 434, 435, 437, 444, 449, 451, 453, 455, 459, 460, 462, 463, 467, 469, 479, 480, 482, 484, 485, 486, 488, 495, 501, 503, 505, 507, 512, 513, 515, 516, 520, 522, 532, 533, 534, 536, 538, 539, 540, 542, 544, 545, 551, 557, 559, 561, 563, 566, 567, 569, 570, 571, 572, 574, 575, 579, 581, 591, 592, 593, 595, 602, 604, 606, 610, 612, 623, 624, 627, 632, 635, 638, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 676, 681, 684, 686, 699, 706, 709, 710, 712, 714, 715, 716, 718, 719, 720, 722, 723, 757, 812, 813, 824, 828, 832, 833, 836, 838, 839, 841, 842, 843, 844, 847, 857, 858, 859, 860, 861, 863, 867, 868, 871, 874, 875, 876, 877, 878, 880, 881, 885, 886, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 904, 906, 907, 909, 911, 913, 914, 927, 932, 935, 936, 937, 938, 941, 942, 943, 946, 952, 964, 970, 974, 975, 976, 981, 983, 986, 987, 991, 992, 997, 1030, 1053, 1055, 1058, 1060], "00": [1, 178, 179, 183, 186, 189, 358, 395, 428, 479, 533, 567, 591, 992, 1055], "000": 146, "000000": [1, 992], "000000e": [178, 179], "000123": 192, "000133446": 937, "000532": 813, "001": [646, 838], "001562": 813, "00193863362662502": 841, "003": 842, "0031": 723, "005": 842, "007022633956606": 723, "007446": 651, "0082138": [53, 104], "01": [189, 838], "0118478282382": 723, "0123": 192, "0123456789": 256, "012631": 813, "015": [657, 663], "016": 838, "02": [189, 194, 646], "020131": 651, "0220": [657, 663], "0225": 723, "029747": 813, "03": [189, 718], "0301": 723, "032": 838, "0341": 723, "036910": 651, "0378111988903307": 180, "03t14": 871, "04": [189, 838], "043888": 651, "044": 838, "044805": 813, "048219": 651, "05": [1, 189, 646, 651, 722, 838, 839, 841, 842, 995], "051": 838, "056": 842, "06": [189, 871], "0625": 655, "0633": 723, "065613": 651, "068310": 651, "07": 189, "0721": 723, "074": 842, "08": [189, 192, 838, 841], "083071": 193, "0874": 723, "088": 841, "0898": 723, "09": 189, "09392265": 1, "09861229": 644, "0i": 646, "0th": [887, 997], "1": [0, 1, 3, 13, 14, 15, 17, 18, 19, 20, 33, 34, 44, 46, 47, 50, 51, 52, 53, 65, 70, 82, 83, 84, 85, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 206, 207, 256, 266, 278, 281, 283, 340, 345, 347, 357, 358, 359, 365, 367, 380, 381, 382, 386, 391, 392, 393, 396, 397, 399, 400, 407, 408, 409, 410, 411, 416, 418, 428, 429, 435, 437, 447, 448, 449, 453, 458, 459, 462, 467, 469, 479, 480, 486, 488, 499, 500, 501, 505, 511, 512, 515, 520, 522, 532, 533, 534, 540, 542, 555, 556, 557, 561, 566, 568, 569, 571, 572, 574, 579, 581, 591, 592, 595, 600, 601, 602, 606, 610, 612, 623, 624, 627, 630, 632, 634, 635, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 676, 681, 683, 684, 686, 688, 699, 700, 706, 708, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 722, 757, 779, 801, 812, 813, 824, 827, 828, 832, 835, 836, 838, 840, 841, 842, 843, 844, 857, 858, 859, 860, 861, 864, 867, 868, 870, 871, 874, 875, 876, 877, 878, 880, 881, 885, 886, 888, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 904, 906, 907, 909, 911, 927, 932, 935, 937, 942, 943, 946, 950, 951, 952, 964, 974, 975, 976, 981, 983, 984, 986, 987, 991, 992, 997, 1055, 1058, 1060], "10": [53, 84, 104, 107, 122, 123, 150, 163, 179, 182, 183, 184, 185, 186, 188, 189, 190, 256, 266, 281, 340, 365, 411, 435, 462, 486, 515, 540, 574, 646, 651, 657, 663, 718, 813, 838, 841, 842, 847, 857, 860, 861, 865, 881, 885, 992, 1060], "100": [1, 178, 179, 183, 186, 281, 646, 651, 842, 876, 900, 1060], "1000": [281, 812], "1004": 723, "1004075": [657, 663], "100548": 813, "1007": [182, 657, 663], "101": 651, "10136628": 649, "102": 651, "1024": 181, "103": 651, "104": [193, 651], "1048576": 1017, "104937": 813, "1055": 723, "10596": 179, "108": 838, "10915": [100, 103, 624], "10919": [100, 103, 624], "1093": [184, 992], "10937312": 1, "11": [0, 45, 53, 100, 103, 104, 110, 115, 116, 178, 182, 189, 191, 340, 366, 436, 487, 515, 541, 594, 646, 651, 657, 663, 723, 813, 828, 835, 838, 857, 860, 861, 881, 992], "110": 651, "1115": 125, "112": 894, "1126": 125, "1131255": 1017, "114": 178, "1154": 723, "116": 723, "1167": 828, "117": 714, "11704769": 652, "117693430600200007": 116, "1179": 828, "11th": 190, "12": [1, 182, 189, 574, 646, 651, 657, 838, 860, 861, 894, 1055], "120": [186, 651], "120492524415": 1058, "1215": 723, "123": [192, 812], "12345": [183, 574], "126": 184, "127": 841, "128": 651, "13": [0, 111, 133, 137, 179, 183, 189, 191, 340, 411, 462, 515, 574, 646, 651, 813, 860, 861, 904], "131": [133, 137, 935], "131567": 194, "1345": 108, "1347": 108, "135": [179, 657, 663], "1371": [53, 104, 657, 663], "139": 193, "14": [1, 111, 121, 132, 182, 184, 189, 361, 365, 431, 435, 482, 486, 536, 540, 646, 651, 723, 842, 861, 943, 981], "14092516": 653, "141": [132, 935], "142857": 719, "14285714": 659, "142857142857": 891, "143": 714, "1435": 183, "144": 137, "1457": 722, "1468": 722, "147": 101, "1495": 182, "149855": 183, "1499": 182, "15": [53, 100, 103, 121, 179, 189, 192, 723, 838, 841, 842, 861, 981], "1535": 932, "1542": [179, 932], "156": 118, "1566": 179, "157": 838, "1576": [143, 144], "15800534": 178, "1585": [143, 144], "16": [1, 114, 132, 180, 183, 184, 185, 189, 190, 357, 366, 391, 436, 487, 532, 541, 566, 594, 651, 824, 838, 842, 857, 861, 952, 981], "16025641": 1, "161": 178, "16247744": 647, "1627907": 1, "163": [112, 136, 137], "164998": 651, "165": 132, "168": [108, 841], "169": [143, 144], "17": [114, 116, 143, 144, 182, 189, 340, 515, 813, 841, 861], "170768970": 178, "172": [143, 144], "1740": 182, "17445763": 647, "1767": 184, "1771": 184, "1786181": 179, "18": [179, 189, 193, 714, 838, 1055], "1800": 182, "1814": 104, "182343": 651, "1859": 182, "1875": 655, "18761279": 647, "19": [1, 182, 189, 838, 860], "1907511": 182, "1912": 118, "1913": 105, "192": 193, "19234468": 185, "193": 107, "194": 132, "1943": 117, "1948": 135, "1949": [112, 136, 137], "195": 101, "1953": 119, "1955": 118, "1956": 109, "1958": 124, "1966": [133, 137], "1967": [125, 716], "1968": 134, "1970": [98, 108], "1974": [120, 126], "1976": 121, "1978": 624, "1981": [101, 935, 991], "1983": 115, "1984": [110, 340, 411, 462, 515, 574], "1985": [183, 340, 411, 462, 515, 574], "1986": [183, 188, 190, 828], "1987": [128, 992], "199": 185, "1990": [178, 179, 182], "1991": 182, "1992": [100, 103, 107, 116, 132, 624, 664], "1993": [107, 714, 715], "1995": 828, "1997": [116, 193, 992], "1998": [121, 813, 827, 828, 830, 831, 833, 835], "1d": [88, 141, 150, 163, 340, 342, 347, 359, 360, 362, 363, 365, 366, 368, 378, 379, 380, 384, 385, 386, 387, 388, 390, 393, 413, 418, 429, 430, 432, 433, 435, 436, 438, 446, 447, 451, 452, 453, 454, 455, 457, 459, 462, 464, 469, 480, 481, 483, 484, 486, 487, 489, 498, 499, 503, 504, 505, 506, 507, 509, 510, 512, 515, 517, 522, 534, 535, 537, 538, 540, 541, 543, 553, 554, 555, 559, 560, 561, 562, 563, 565, 569, 574, 576, 581, 592, 593, 594, 599, 600, 604, 605, 606, 607, 609, 610], "1e": [179, 188, 995], "1e51ca3a5450c43524b9185c236cc5cc": 182, "1e9": 192, "1st": [77, 790, 997], "1x1": 190, "2": [0, 1, 3, 13, 14, 15, 18, 19, 45, 46, 47, 50, 51, 52, 53, 65, 70, 77, 82, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 107, 110, 112, 114, 116, 118, 121, 122, 123, 125, 126, 128, 132, 135, 136, 137, 143, 144, 145, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 207, 266, 278, 281, 283, 321, 340, 357, 358, 359, 365, 366, 367, 370, 378, 380, 382, 391, 393, 397, 400, 409, 410, 428, 429, 435, 436, 437, 446, 447, 449, 459, 479, 480, 486, 487, 488, 498, 499, 501, 512, 532, 533, 534, 540, 541, 542, 545, 553, 555, 557, 566, 569, 572, 574, 591, 592, 594, 595, 599, 600, 602, 610, 612, 623, 624, 630, 632, 635, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 676, 681, 684, 686, 688, 699, 706, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 722, 723, 812, 813, 824, 827, 828, 830, 833, 835, 838, 840, 841, 842, 843, 844, 857, 858, 859, 860, 861, 864, 865, 868, 870, 871, 876, 883, 884, 885, 888, 891, 894, 900, 902, 903, 904, 907, 909, 911, 927, 932, 933, 935, 937, 942, 943, 948, 950, 951, 952, 975, 976, 981, 983, 984, 986, 987, 991, 992, 997, 1053, 1055, 1058, 1060], "20": [0, 3, 189, 462, 646, 651, 824, 830, 838, 841, 842, 876], "200": [185, 651], "2000": [107, 842, 992], "2001": 717, "2002": [84, 116, 132, 140, 179, 183], "2003": [183, 643], "2004": 127, "2005": [143, 182], "2006": [116, 718, 992], "2007": [132, 143, 144], "2008": [183, 190], "2009": [184, 185, 722], "201": [107, 651], "2010": [116, 143, 144, 184], "2011": [122, 123, 132, 143, 144], "2012": [132, 185, 194, 716, 844, 911], "2013": [53, 104, 114, 132, 661, 824], "2014": [53, 104, 178, 190, 651, 661, 871], "2015": [84, 643, 646, 657, 663], "2016": [132, 657, 663], "2017": 932, "2018": 194, "202": 651, "2020": 194, "2022": 194, "2024": 192, "203": 651, "20309816": 723, "205": 715, "207": 132, "209": [182, 185, 716], "21": [182, 189, 646, 657, 663, 831, 842, 860, 876, 907], "210": 107, "2106": 132, "2107852473": 654, "2113": 132, "2130": 179, "21383822": 650, "215": [178, 179], "217": 107, "21712454": 824, "2186": 723, "219": [179, 182, 715], "22": [100, 103, 189, 194, 624, 646, 838, 876, 1055], "220": 716, "22054469": 653, "2208": 723, "2214": 179, "224": 838, "226": 842, "227": [107, 183], "229": 838, "23": [1, 189, 192, 193, 408, 646, 860, 876, 992, 1055], "23059566": 660, "23632778": 650, "2364": 723, "237": [119, 140], "238327": 813, "239": 991, "23e": 192, "24": [0, 179, 189, 624, 841, 871, 876], "24270353": 1, "245": 718, "246": [107, 140, 193], "24714631": 660, "25": [0, 1, 88, 101, 116, 121, 132, 143, 144, 146, 182, 188, 189, 363, 367, 369, 382, 386, 395, 399, 433, 437, 449, 453, 484, 488, 501, 505, 538, 542, 544, 557, 561, 567, 593, 595, 602, 606, 646, 658, 714, 715, 718, 723, 838, 841, 842, 891, 1055], "2500": 842, "253": 718, "255": [53, 828], "256": [134, 838], "257": 134, "25737316": 660, "259": 193, "25th": 646, "26": [114, 179, 188, 646, 717, 722, 824], "260656459": 185, "26118259": 650, "262": 121, "264": 119, "26433692": 1, "26488486": 660, "265": 110, "27": [0, 116, 135, 143, 144, 179, 462, 657, 716], "270": 110, "272": 842, "2761": 723, "278": 116, "28": [0, 132, 189, 838], "28571429": 659, "28865141": 650, "289": 828, "29": [182, 184, 185], "293463": 651, "29597001": 723, "29672718": 653, "2_": 107, "2a": 190, "2b": 118, "2d": [53, 98, 99, 100, 101, 102, 103, 141, 145, 146, 149, 612, 627, 636, 654, 720, 829, 836], "2e": 192, "2f_2": 110, "2m5p3d1i": [45, 50], "2nd": [790, 880, 997], "2nf_2": 115, "2x2": [1, 187, 885, 891], "2x3": [867, 868, 874, 875, 877, 878, 880, 886, 892, 893, 896, 898, 899, 901, 906, 907, 909], "3": [1, 3, 13, 14, 15, 18, 19, 46, 47, 50, 51, 52, 53, 65, 70, 82, 83, 85, 88, 91, 92, 94, 95, 98, 102, 107, 115, 116, 119, 124, 132, 135, 140, 143, 144, 150, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 256, 266, 278, 283, 345, 347, 357, 358, 359, 364, 365, 381, 382, 384, 390, 391, 393, 396, 397, 409, 410, 416, 418, 428, 429, 434, 435, 448, 449, 451, 457, 459, 462, 467, 469, 479, 480, 485, 486, 500, 501, 503, 509, 512, 520, 522, 532, 533, 534, 539, 540, 556, 557, 559, 565, 566, 569, 571, 572, 574, 579, 581, 591, 592, 601, 602, 604, 609, 610, 623, 632, 635, 638, 642, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 657, 658, 659, 660, 663, 665, 676, 681, 684, 686, 699, 706, 709, 710, 712, 714, 715, 716, 718, 719, 720, 722, 723, 724, 746, 757, 790, 813, 814, 824, 827, 828, 833, 838, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 867, 868, 871, 874, 875, 876, 877, 878, 880, 881, 883, 885, 886, 888, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 927, 937, 942, 943, 950, 951, 952, 975, 979, 981, 983, 984, 986, 987, 992, 997, 1052, 1055, 1058, 1060], "30": [0, 179, 185, 186, 189, 191, 841, 842, 881, 965], "3021": [340, 411, 462, 515, 574], "30216948": 647, "3030": [340, 411, 462, 515, 574], "30409883": 649, "30870431": 1, "30927835": 1, "31": 179, "312": 193, "314": 182, "32": [189, 717], "32495488": 647, "32630": 185, "329": 178, "33": [83, 116, 143, 144, 184, 364, 434, 485, 539, 651, 715, 718, 838, 841, 1055], "330": 178, "332": 838, "33333333333333331": 1, "335928": 194, "34": [185, 191, 932], "34180297": 653, "343": 185, "344": 185, "3447015": 992, "345": 624, "34891526": 647, "34989": 183, "35": [1, 182, 184, 185, 191, 643, 842], "3519": 723, "352": 624, "354": 723, "355": [182, 723], "356": 723, "36": [124, 134, 189, 192, 657, 663, 838], "36463": 193, "36514837": 661, "37": [143, 193], "3716": 723, "375": 655, "379": 135, "379593": 1017, "38": [0, 178, 184, 189, 838], "38629436": 644, "3899": 182, "39": [183, 189, 661], "3937": 108, "3e": [178, 179, 838], "3f": 722, "3k1v_a": 185, "3rd": [716, 790, 834, 997, 1060], "3x": 965, "3x2": 885, "3x3": [664, 716, 719, 720], "4": [0, 1, 3, 14, 18, 46, 51, 65, 82, 85, 86, 90, 92, 105, 107, 116, 119, 132, 143, 144, 182, 183, 185, 188, 189, 190, 192, 193, 194, 256, 266, 278, 283, 340, 347, 352, 357, 358, 367, 377, 381, 391, 393, 396, 397, 399, 410, 418, 423, 428, 437, 445, 448, 459, 469, 474, 479, 488, 496, 500, 512, 522, 527, 532, 533, 542, 552, 556, 566, 569, 571, 572, 574, 581, 586, 591, 595, 598, 601, 610, 612, 623, 624, 632, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 659, 660, 661, 663, 676, 681, 686, 699, 706, 710, 712, 714, 716, 722, 813, 827, 828, 835, 838, 843, 857, 858, 859, 861, 864, 865, 871, 875, 876, 885, 894, 898, 899, 903, 904, 927, 937, 942, 943, 950, 951, 952, 981, 983, 984, 986, 987, 991, 992, 1055, 1058], "40": [1, 119, 183, 192, 194, 661, 840, 842, 871, 876], "400": 715, "402": 116, "403": [178, 179], "40824829": [661, 662], "41": [183, 189, 876], "410": [178, 179], "4140": 723, "4148": [112, 136, 137], "42": [1, 92, 117, 183, 189, 190, 192, 340, 363, 433, 484, 515, 538, 593, 715, 718, 867, 868, 874, 875, 876, 877, 878, 880, 886, 892, 893, 894, 896, 901, 906, 907, 909], "423": 135, "42512039": 1, "426": 842, "42857143": 659, "43": [92, 128, 189, 876, 896, 901, 991], "431": 132, "4375": 655, "44": [1, 133, 718, 876, 991], "443": 98, "444": 132, "45": [1, 189, 192, 842], "450": 715, "456": 827, "45995501": 824, "46": [189, 717, 842, 880, 896, 901], "4603377592": 186, "4603378712": 186, "4604421736": 186, "462339": 651, "466911": 813, "467481": 651, "46774194": 1, "4693": 183, "47": [189, 838, 901], "48": [98, 125], "480232": 651, "484": 838, "49": [0, 186, 189], "4hh": 182, "4x4": [714, 715, 981], "5": [0, 1, 3, 14, 15, 18, 19, 46, 47, 50, 51, 52, 53, 83, 92, 99, 102, 104, 111, 116, 118, 132, 143, 144, 146, 149, 177, 179, 182, 183, 184, 185, 188, 190, 193, 194, 256, 345, 347, 357, 358, 359, 365, 367, 369, 370, 376, 382, 388, 391, 393, 409, 416, 418, 428, 429, 435, 437, 444, 449, 455, 459, 467, 469, 479, 480, 486, 488, 495, 501, 507, 512, 520, 522, 532, 533, 534, 540, 542, 544, 545, 551, 557, 563, 566, 569, 579, 581, 591, 592, 595, 602, 610, 623, 624, 638, 641, 646, 651, 655, 658, 664, 676, 686, 699, 710, 712, 714, 715, 718, 719, 722, 813, 828, 838, 841, 842, 843, 847, 857, 858, 859, 860, 861, 871, 876, 884, 885, 894, 903, 907, 911, 927, 932, 936, 937, 939, 942, 943, 950, 951, 952, 974, 975, 976, 981, 983, 984, 991, 992, 995, 1058], "50": [1, 100, 103, 183, 186, 189, 358, 428, 479, 533, 591, 646, 651, 723, 824, 841, 842, 868, 1055], "500": [841, 842], "5007512": 824, "50th": [183, 646], "52": 189, "52199973": 723, "528": 841, "528243": 651, "53": [98, 189, 935], "530": 715, "533": 838, "533729": 651, "5338": 116, "54": [120, 144], "54772256": 661, "55": [189, 361, 431, 482, 536, 718, 723, 838, 992], "55152525": 193, "555": 120, "556061": 651, "5565": 179, "557": 120, "5587": 179, "56": [132, 361, 431, 482, 536], "560": 126, "5671": 179, "57": [179, 189, 828, 881], "572": 838, "58": [117, 189, 838], "581": 182, "59": 184, "5917809": 649, "594590": 651, "5990": 193, "5996": 193, "5e": 192, "6": [1, 3, 13, 14, 15, 18, 19, 46, 47, 51, 52, 85, 110, 111, 116, 130, 132, 143, 144, 179, 182, 183, 184, 185, 192, 193, 194, 357, 358, 366, 367, 390, 391, 393, 411, 428, 436, 437, 457, 459, 479, 487, 488, 509, 512, 532, 533, 541, 542, 565, 566, 569, 591, 594, 595, 609, 610, 638, 646, 648, 653, 656, 657, 659, 686, 710, 712, 716, 718, 719, 722, 813, 838, 857, 860, 861, 871, 876, 885, 891, 894, 927, 932, 942, 943, 951, 952, 981, 983, 984, 991, 1055], "60": [180, 181, 182, 186, 723, 841, 876], "601": 838, "601277": 651, "6018555": 716, "602": 838, "607": 723, "609": 182, "61": [189, 718, 842, 876], "617": 838, "619": 193, "62": [116, 143, 144, 180, 181, 184, 718, 876, 1055], "6212": 193, "6216": 723, "6234": 193, "627677": 651, "63": [179, 189, 876], "634": 723, "64": [1, 146, 184, 192, 399, 400, 876, 987], "641": 193, "646": 842, "646e": 838, "65": 723, "65463348": 824, "66": [185, 189, 364, 434, 485, 539, 718, 1055], "664": 838, "6666666666666667": 1058, "67": [185, 189, 357, 364, 391, 434, 485, 532, 539, 566, 714, 718, 828, 838, 1055], "68": [185, 723, 841], "6821": 179, "68235294": 1, "68339802": 652, "688": [112, 136, 137], "69": 189, "6913": 723, "692": 116, "6928": 179, "69314718": 644, "694": 116, "6e": 179, "6x6": [1, 718], "7": [1, 101, 111, 132, 146, 183, 184, 185, 193, 194, 256, 266, 278, 283, 340, 347, 358, 409, 418, 428, 469, 479, 515, 522, 533, 581, 591, 638, 651, 686, 712, 715, 716, 718, 719, 722, 813, 838, 844, 857, 860, 861, 894, 911, 937, 951, 975, 983, 984, 992, 996, 1055], "70": 189, "702656": 651, "70710678": [661, 662], "707221": 651, "71": [124, 143, 189, 193], "714286": 715, "71597633": 1, "72": 132, "73": [143, 144], "74": 189, "75": [1, 88, 116, 121, 143, 144, 384, 451, 503, 559, 604, 646, 664, 715, 718, 891, 894, 987], "750792": 651, "7559": 716, "755929": 719, "75th": 646, "76": [127, 132, 189], "77": [127, 718], "7715": 723, "771517": 715, "77549923": 1, "7768362": 652, "779": 838, "78": [189, 987], "78142077": 1, "783": 838, "78787879": 1, "788": 838, "79": [183, 186, 189], "793": 128, "79451346": 649, "8": [0, 1, 13, 104, 178, 179, 184, 185, 190, 193, 194, 207, 283, 358, 367, 390, 395, 411, 428, 437, 457, 479, 488, 509, 533, 542, 565, 567, 591, 595, 609, 638, 657, 663, 686, 712, 715, 722, 813, 838, 842, 843, 857, 860, 861, 865, 894, 942, 951, 984, 992, 1055, 1058], "80": [107, 183, 813, 841, 842, 876, 932, 987, 1060], "803": 128, "80332382": 824, "806": 842, "81": 876, "810": 715, "811": 179, "81521739": 1, "81649658": [661, 662], "818": 121, "82": [179, 180, 193, 876], "820": 121, "8228": 143, "8235": 143, "824": 842, "82857143": 1, "82967033": 1, "83": [177, 876, 911], "8304": 723, "832": 722, "836": 838, "838": 838, "84": 876, "844": 838, "8468": 179, "848": 838, "85": [182, 189, 842, 987], "8547619": 1, "8552": 179, "857142857143": 891, "85714286": 1, "86": [340, 515], "86111111": 1, "86666667": 1, "86813187": 1, "87": [107, 189], "87709497": 1, "87777778": 1, "88": [193, 718, 841], "884420": 871, "884498": 651, "89": [100, 103, 185, 624], "89285714": 1, "8e": 179, "9": [1, 178, 179, 180, 183, 186, 189, 192, 193, 235, 256, 266, 340, 361, 365, 411, 431, 435, 462, 482, 486, 515, 536, 540, 574, 646, 651, 722, 723, 813, 827, 828, 830, 831, 833, 834, 835, 838, 857, 860, 861, 939, 942, 951, 981, 984, 991, 992, 1055], "90": [84, 186, 651, 1060], "900": 281, "905": 115, "909": 179, "912": 115, "91769271": 824, "92": 715, "9223489": 193, "922404392093": 1, "9230769230": 642, "928": 838, "93": 184, "932": 838, "939336": 1, "94": [179, 189], "95": [111, 115, 116, 122, 184, 189, 932], "952": 842, "95224719": 1, "956": 838, "96": [111, 186], "97": [189, 651], "978387": 651, "984": 838, "98435423": 1, "98796148": 1, "99": [178, 179, 182, 189, 714, 718, 722, 894], "991987": 651, "996": [838, 842], "999": [1, 574, 714, 716, 717, 718, 719, 722], "999887756453524252": 193, "9e": 178, "9f": 937, "A": [1, 50, 53, 65, 86, 88, 91, 92, 93, 96, 98, 100, 103, 107, 110, 115, 116, 117, 118, 120, 121, 127, 132, 135, 143, 144, 146, 161, 163, 174, 176, 178, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 220, 224, 225, 230, 237, 238, 256, 277, 281, 282, 303, 321, 336, 340, 361, 367, 373, 389, 393, 400, 406, 411, 431, 437, 441, 456, 459, 462, 482, 488, 492, 508, 512, 515, 536, 542, 548, 564, 569, 574, 595, 608, 610, 612, 623, 624, 628, 630, 632, 633, 637, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 676, 679, 681, 682, 685, 686, 688, 699, 703, 706, 707, 711, 712, 715, 716, 717, 718, 720, 722, 735, 757, 779, 823, 824, 825, 827, 828, 833, 835, 840, 841, 842, 847, 858, 859, 860, 864, 869, 870, 871, 872, 880, 887, 893, 895, 896, 897, 898, 899, 900, 903, 904, 905, 907, 912, 913, 914, 927, 932, 935, 937, 938, 941, 942, 943, 944, 947, 948, 949, 951, 952, 954, 961, 969, 971, 973, 974, 979, 981, 988, 989, 991, 1041, 1053, 1058, 1060], "AS": 193, "AT": [83, 183, 184, 190], "And": [186, 340, 462, 658, 1055], "As": [1, 182, 185, 188, 192, 574, 634, 683, 708, 716, 718, 828, 945, 1053, 1060], "At": [192, 195, 860], "Be": 574, "By": [92, 121, 132, 141, 145, 183, 185, 192, 646, 718, 832, 833, 836, 870, 882, 981, 992, 1019], "For": [1, 65, 84, 93, 97, 104, 132, 161, 162, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 266, 281, 282, 283, 284, 321, 336, 339, 340, 389, 398, 456, 461, 462, 508, 514, 515, 564, 573, 574, 608, 611, 624, 633, 639, 646, 651, 682, 687, 707, 713, 714, 715, 716, 717, 718, 720, 722, 724, 790, 824, 825, 826, 827, 828, 838, 840, 841, 842, 844, 860, 865, 866, 887, 895, 900, 910, 911, 932, 969, 990, 991, 993, 994, 1053, 1055, 1058], "IF": 887, "IN": 193, "If": [1, 13, 15, 19, 45, 47, 50, 52, 53, 65, 82, 84, 85, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 107, 110, 111, 116, 117, 118, 122, 128, 132, 141, 143, 144, 145, 146, 149, 150, 161, 174, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 206, 207, 208, 221, 223, 227, 228, 231, 232, 235, 248, 249, 250, 256, 265, 269, 282, 283, 295, 296, 297, 313, 314, 315, 321, 330, 331, 334, 335, 336, 340, 342, 347, 357, 358, 359, 361, 363, 365, 367, 370, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 393, 394, 409, 411, 413, 418, 428, 429, 431, 433, 435, 437, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 459, 460, 462, 464, 469, 479, 480, 482, 484, 486, 488, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 512, 513, 515, 517, 522, 532, 533, 534, 536, 538, 540, 542, 545, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 569, 570, 571, 572, 574, 576, 581, 591, 592, 593, 595, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 616, 623, 624, 626, 627, 628, 631, 632, 633, 638, 641, 642, 646, 648, 651, 652, 653, 655, 656, 662, 665, 669, 676, 678, 679, 680, 681, 682, 686, 692, 699, 702, 703, 704, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 722, 757, 768, 801, 812, 823, 824, 825, 827, 828, 829, 832, 833, 836, 838, 839, 840, 841, 842, 843, 847, 855, 857, 860, 861, 863, 864, 865, 868, 869, 870, 871, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 893, 894, 895, 896, 897, 900, 901, 902, 903, 904, 905, 906, 907, 909, 932, 934, 935, 939, 942, 945, 946, 950, 955, 958, 960, 963, 969, 974, 975, 976, 981, 983, 984, 985, 991, 992, 995, 996, 997, 998], "In": [1, 3, 53, 84, 116, 132, 143, 144, 146, 183, 184, 185, 186, 188, 190, 194, 321, 340, 370, 409, 462, 515, 545, 612, 643, 646, 651, 664, 715, 716, 722, 812, 827, 828, 833, 838, 842, 857, 912, 932, 945, 991, 1053, 1055, 1058, 1060], "It": [1, 3, 53, 105, 112, 116, 117, 119, 132, 139, 177, 178, 180, 183, 184, 185, 186, 188, 190, 192, 194, 207, 256, 266, 269, 277, 278, 280, 281, 283, 340, 376, 388, 444, 455, 462, 495, 507, 515, 551, 563, 567, 646, 649, 651, 655, 664, 705, 716, 717, 722, 745, 746, 778, 789, 801, 827, 828, 832, 835, 838, 841, 842, 868, 907, 912, 913, 914, 938, 941, 995, 1017, 1041, 1055], "Its": [16, 48, 835], "NOT": [53, 126, 235], "No": [66, 111, 178, 179, 182, 191, 194, 266, 356, 427, 478, 531, 590, 716], "Not": [184, 340, 393, 459, 512, 569, 610, 718], "ONE": [53, 104], "OR": 66, "Of": 185, "On": 833, "One": [116, 190, 195, 335, 651, 700, 992], "That": [133, 137, 188, 383, 450, 502, 558, 603], "The": [0, 1, 3, 13, 14, 15, 16, 44, 45, 46, 47, 48, 50, 53, 54, 82, 83, 84, 85, 86, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 116, 117, 118, 119, 121, 126, 128, 132, 133, 134, 135, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 161, 162, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 206, 207, 208, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 248, 253, 254, 255, 256, 257, 266, 267, 268, 277, 278, 279, 280, 281, 282, 284, 285, 295, 300, 301, 302, 313, 318, 319, 320, 321, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 345, 347, 352, 357, 358, 359, 361, 363, 367, 375, 377, 378, 380, 381, 382, 389, 391, 393, 397, 398, 399, 408, 409, 410, 413, 416, 418, 423, 428, 429, 431, 433, 437, 443, 445, 446, 447, 448, 449, 456, 459, 461, 464, 467, 469, 474, 479, 480, 482, 484, 488, 494, 496, 498, 499, 500, 501, 508, 512, 514, 515, 517, 520, 522, 527, 532, 533, 534, 536, 538, 542, 550, 552, 553, 555, 556, 557, 564, 566, 569, 572, 573, 574, 576, 579, 581, 586, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 608, 610, 611, 612, 616, 623, 628, 633, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 656, 658, 660, 661, 662, 665, 669, 676, 679, 682, 686, 687, 688, 692, 699, 700, 703, 705, 707, 710, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 735, 757, 768, 779, 801, 812, 814, 825, 826, 827, 828, 832, 833, 834, 835, 838, 839, 840, 841, 842, 844, 847, 855, 856, 857, 858, 859, 860, 861, 864, 867, 869, 870, 872, 873, 874, 875, 876, 877, 880, 882, 883, 884, 885, 886, 887, 888, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 906, 907, 908, 910, 911, 927, 928, 933, 934, 935, 936, 937, 939, 940, 942, 943, 945, 946, 948, 949, 950, 951, 952, 954, 958, 960, 961, 964, 969, 970, 972, 973, 975, 976, 977, 978, 981, 983, 990, 991, 992, 995, 998, 1016, 1018, 1019, 1053, 1055, 1058, 1060], "Then": [1, 3, 646, 658, 723, 813], "There": [1, 92, 117, 128, 179, 185, 188, 191, 364, 434, 485, 539, 688, 833, 841, 842, 860, 885, 1053, 1058, 1060], "These": [0, 1, 83, 89, 90, 106, 116, 143, 144, 185, 188, 192, 193, 194, 285, 375, 377, 443, 445, 494, 496, 550, 552, 597, 598, 640, 719, 721, 814, 834, 840, 847, 885], "To": [1, 72, 116, 143, 144, 183, 184, 185, 188, 191, 192, 195, 235, 321, 340, 462, 515, 646, 651, 688, 710, 714, 716, 718, 722, 838, 932, 1053, 1060], "Will": [88, 226, 229, 233, 235, 253, 300, 318, 337, 625, 637, 677, 685, 701, 711, 814, 843], "With": [178, 643, 655], "_": [107, 180, 183, 184, 188, 193, 278, 345, 416, 467, 520, 579, 664, 716, 892], "_1": 188, "__": 185, "____________1______________2_________": 193, "________________": 193, "____________________": 193, "__copy__": [69, 268], "__deepcopy__": [68, 267], "__eq__": [79, 245, 275, 292, 310, 328, 621, 674, 697], "__init__": [195, 206, 208], "__iter__": 91, "__locat": 185, "__ne__": [239, 286, 304, 322], "__reversed__": 91, "_block_comput": 146, "_ci": 106, "_except": 190, "_interval_tre": 266, "_io": [177, 181], "_is_stale_tre": 266, "_leaf_index": 954, "_myformat_sniff": 195, "_myformat_to_some_skbio_class": 195, "_not_": [860, 988], "_rebuild_tre": 266, "_setup_debug_trac": 1029, "_some_skbio_class_to_myformat": 195, "_tree": 991, "aT": 184, "a_1": 188, "aa": [91, 183, 185, 190, 399], "aaa": [193, 380, 447, 499, 555, 600], "aaaaaaaaa": 182, "aaaaaaaaaa": 182, "aaaaaaattttttt": 1060, "aaaaaactctctaaactcactaaggctctctacccctcttcagagaagtcga": 0, "aaaaaccgat": 182, "aaaataaata": 182, "aaacaaacca": 182, "aaaccattgc": [183, 190], "aaacccttgc": [183, 190], "aaacccttgccg": 183, "aaacccttgccggtacgcttaaaccattgccggtacgcttaa": 183, "aaacccttgccgttacgcttaaaccgaggccgggacactcat": 183, "aaaccgaggc": [183, 190], "aaagataggc": 182, "aaatatggat": 182, "aaatcctatg": 182, "aac": 191, "aacaaatgca": 182, "aacaacagga": 182, "aacaccaaacttctccacc": 184, "aacaccaaacttctccaccacgtgagctacaaaag": 184, "aaccttatca": 182, "aacgaaggcg": 182, "aactttgtag": 182, "aagaactttc": 182, "aagaggttac": 182, "aagcctggtg": 182, "aagccttggc": 183, "aagccttggcagtgcagggtgagccgtgg": 183, "aagccttggcagtgcagggtgagccgtggccgggcacggtat": 183, "aagctngggc": [183, 190], "aagctngggcatttcagggtgagcccgggcaatacagggtat": 183, "aagga": [347, 418, 469, 522, 581], "aaggaatcaa": 182, "aaggaatttg": 182, "aagtaa": [357, 532], "aagtatttgg": 182, "aagtcttaga": 182, "aagtcttttt": 182, "aagttgttag": 182, "aagucuuuuu": 182, "aata": 191, "aataaac": 191, "aataagtgca": 182, "aatacagggt": [183, 190], "aatataccggttataa": [366, 436, 487, 541, 594], "aatatggatt": 182, "aatgaa": [357, 379, 391, 532, 554, 566], "aatgtt": [379, 554], "aatt": 860, "aattaaataa": 182, "aattctggat": 182, "aattg": 1060, "aattgccggac": 1060, "aattgg": 812, "aauauggauu": 182, "ab": [184, 411], "ab07acbb1e496801937adfa772424bf7": 1017, "ababacac": 411, "abbrevi": [194, 814], "abc": [180, 345, 411, 416, 467, 520, 579], "abcd": 992, "abcdef": 1, "abil": 188, "abl": [65, 85, 146, 340, 462, 515, 574, 646, 841, 942], "about": [1, 93, 97, 128, 161, 162, 174, 175, 180, 183, 184, 188, 192, 193, 195, 238, 266, 282, 284, 285, 303, 321, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 641, 682, 687, 707, 713, 813, 825, 826, 835, 841, 842, 860, 890, 895, 910, 969, 990, 993, 994, 1054, 1055], "abov": [0, 1, 3, 92, 183, 185, 189, 190, 191, 192, 193, 195, 206, 208, 340, 462, 515, 574, 664, 714, 716, 718, 722, 1055], "absenc": [111, 842, 892], "absent": [393, 459, 512, 569, 610, 833], "absolut": [643, 651, 716, 900, 1016], "abstract": [285, 411], "abund": [1, 107, 108, 116, 118, 121, 128, 132, 140, 141, 143, 144, 145, 146, 149, 177, 646, 651, 813, 827, 828, 834, 835, 842, 894, 900], "abx": 840, "ac": [66, 67, 68, 69, 70, 75, 77, 80, 83, 85, 88, 92, 94, 95, 98, 101, 182, 184, 185, 193, 256, 368, 438, 489, 543, 1055], "aca": [381, 382, 448, 449, 500, 501, 556, 557, 601, 602], "acaatcaaat": 182, "acac": [372, 381, 440, 448, 491, 500, 547, 556, 601], "acacatttatta": [382, 449, 501, 557, 602], "acacgacgtt": [373, 378, 381, 441, 446, 448, 492, 498, 500, 548, 553, 556, 599, 601], "acad": [100, 103], "academ": 109, "academi": 624, "acagaattga": 182, "acaggttggc": [183, 190], "acata": 184, "acatggcaat": 182, "acatgggata": 182, "acc": [0, 179, 1055], "accaatattt": 182, "accaatttga": 182, "acccc": 0, "acceler": 843, "accept": [1, 65, 94, 146, 390, 396, 397, 457, 509, 565, 571, 572, 609, 624, 640, 646, 716, 720, 722, 838, 841, 842, 947, 976, 984, 987, 1041], "acces": 178, "access": [20, 89, 90, 176, 182, 183, 185, 194, 321, 375, 377, 400, 406, 443, 445, 494, 496, 550, 552, 597, 598, 664, 992, 998], "accgaat": 340, "accgaau": 515, "accgggta": 1055, "accggttggc": 183, "accggttggccgttcagggtacaggttggccgttcagggtaa": 183, "accgttcg": 193, "accgttgta": [180, 190], "accguuaguc": 1055, "accident": 993, "accommod": 256, "accompani": [183, 665, 994], "accomplish": [1, 643, 1053], "accord": [112, 116, 340, 462, 515, 832, 836, 898, 899], "account": [150, 394, 460, 513, 570, 757, 827, 835, 842, 1058], "accumul": [124, 127, 927], "accumulate_to_ancestor": 943, "accur": [118, 122, 123], "accuraci": [718, 833], "acdefghikl": [150, 163], "acdfnasanftacgnpnrtesl": [380, 447, 499, 555, 600], "acg": [66, 67, 68, 69, 70, 75, 77, 80, 88, 91, 92, 94, 95, 191, 193, 378, 381, 446, 448, 498, 500, 553, 556, 599, 601], "acga": [82, 85, 345, 354, 416, 425, 467, 476, 520, 529, 579, 588], "acgaactatt": 182, "acggggaggcggag": [365, 435, 486, 540], "acgggu": 1055, "acgt": [65, 82, 85, 86, 89, 90, 96, 341, 345, 354, 358, 369, 370, 375, 377, 379, 383, 412, 416, 425, 428, 443, 445, 450, 463, 467, 476, 479, 494, 496, 502, 516, 520, 529, 533, 544, 545, 550, 552, 554, 558, 574, 575, 579, 588, 591, 597, 598, 603, 612, 630], "acgta": 191, "acgtac": 191, "acgtacgt": [369, 544], "acgtgagctacaaaag": 184, "acgtgccta": 0, "acgtgcctaggtacgcaag": 0, "acgtggaa": [358, 428, 479, 533, 591], "acgtn": [393, 459, 512, 569, 610], "acgtu": 105, "achiev": [132, 1055], "acid": [98, 100, 103, 182, 183, 184, 187, 190, 194, 340, 393, 399, 409, 411, 459, 462, 512, 515, 569, 574, 610, 612, 624], "acquir": 841, "across": [16, 48, 88, 132, 183, 184, 190, 266, 335, 646, 651, 716, 841, 861, 991], "act": [0, 92, 206, 207, 208], "actaaggctc": 0, "actaaggctcctaacccccttttctcaga": 0, "actaaggctctct": 0, "actaaggctctctacccctctcagaga": 0, "actacattcg": 182, "actatacgga": 182, "actcat": 183, "action": 285, "activ": 1052, "acttagtt": [369, 544], "actual": [133, 137, 192, 195, 226, 716], "acwgn": [360, 362, 388, 430, 432, 455, 481, 483, 507, 535, 537, 563], "ad": [53, 98, 99, 100, 101, 102, 103, 183, 193, 277, 574, 646, 651, 828, 831, 860, 885, 1018, 1058], "adapt": 991, "adata": 902, "add": [1, 99, 102, 192, 193, 195, 219, 256, 266, 278, 280, 345, 416, 467, 520, 574, 579, 648, 655, 656, 658, 659, 660, 855, 856, 860, 880, 901, 929, 942, 944], "add_format": [206, 208], "addit": [1, 104, 105, 116, 142, 143, 144, 148, 182, 183, 184, 185, 186, 190, 191, 192, 253, 300, 318, 321, 337, 340, 462, 515, 612, 643, 644, 645, 646, 664, 688, 912, 933, 945, 946, 991, 1018, 1053], "addition": [1, 177, 188, 235, 266, 899, 1055, 1058], "additon": 183, "address": [646, 1053], "adenin": [340, 515], "adequ": 841, "adher": 192, "adiv_faith_pd": 1, "adiv_sob": 1, "adjac": [380, 447, 499, 555, 600, 869], "adjust": 132, "adoni": 717, "adopt": [132, 393, 459, 512, 569, 610], "advanc": 1, "advantag": [132, 688, 1018], "advis": [143, 144, 149], "ae000111": 179, "ae000171": 179, "ae000174": 179, "ae000394": 179, "ae000425": 179, "af031394": 179, "af035635": 193, "af178031": 179, "af178032": 179, "af178033": 179, "affect": [183, 188, 399, 400, 406, 574, 714, 718], "aforement": 194, "after": [53, 82, 85, 98, 99, 100, 183, 184, 192, 193, 194, 195, 269, 280, 335, 651, 657, 658, 715, 716, 719, 722, 827, 842, 966, 968, 985], "ag": [65, 82, 85, 88, 664, 840, 841], "agaagacc": [367, 437, 488, 542, 595], "agaagctatg": 182, "agaagctctt": 182, "agaagcuaug": 182, "agacatcacg": 182, "agagcatgcg": 182, "agaggttcta": 185, "agagguucua": 185, "agagttgaag": 190, "agagttgaaggtatct": [180, 190], "again": [1, 183, 184, 321, 661, 891, 992], "against": [70, 79, 98, 101, 184, 257, 263, 269, 275, 345, 354, 400, 406, 416, 425, 467, 476, 520, 529, 579, 588, 646, 722, 858, 859, 935], "agatataaag": 182, "agatcttttg": 182, "agatgagtat": 182, "agctttctgc": 182, "agg": 1055, "aggaccttat": 182, "aggctc": 0, "aggctcccttctacccctctcagaga": 0, "agggaaagtt": 182, "agggctggct": 182, "agggga": 1055, "agggta": 641, "aggreg": 1060, "aggtacccta": 182, "aggtgcagta": 182, "agre": [227, 231], "agtactctaa": 182, "agtgcagggt": [183, 190], "aguauucugccacuguaagaa": 409, "aguc": [363, 384, 386, 433, 451, 453, 484, 503, 505, 538, 559, 561, 593, 604, 606], "ahead": 1060, "aiacaqkm": 193, "aim": 813, "ainsworth": 715, "aitchison": [643, 644, 645, 649, 650, 652, 653, 661], "aitchson": 654, "al": [646, 651, 722, 844, 911], "ala": 462, "alanin": [84, 462], "aldex2": 651, "alexandro": 932, "algorithm": [98, 101, 185, 714, 715, 716, 718, 723, 724, 735, 746, 757, 768, 779, 790, 801, 827, 828, 835, 935, 992, 993, 1052], "alia": [20, 116, 129, 130, 132, 143, 144, 186, 634, 646, 656, 683, 708, 958, 960], "alic": 574, "alig": 33, "align": [178, 179, 183, 184, 256, 266, 574, 612, 857, 858, 859, 1052, 1053, 1055], "aligned_query_sequ": 0, "aligned_target_sequ": 0, "alignmentstructur": 54, "alignpath": [43, 46, 47, 48, 51, 52], "all": [1, 53, 65, 66, 83, 84, 89, 90, 92, 98, 99, 100, 105, 107, 116, 117, 118, 128, 132, 133, 137, 140, 141, 143, 144, 145, 146, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 220, 230, 249, 256, 266, 269, 278, 280, 281, 296, 314, 333, 335, 340, 358, 361, 364, 367, 375, 377, 380, 390, 394, 409, 428, 431, 434, 437, 443, 445, 447, 457, 460, 462, 479, 482, 485, 488, 494, 496, 499, 509, 513, 515, 533, 536, 539, 542, 550, 552, 555, 565, 570, 574, 591, 595, 597, 598, 600, 609, 612, 623, 624, 628, 630, 638, 646, 648, 651, 655, 656, 658, 659, 660, 661, 664, 676, 679, 686, 699, 703, 710, 712, 714, 715, 716, 717, 718, 719, 746, 757, 801, 812, 813, 824, 832, 833, 841, 842, 843, 860, 861, 864, 868, 901, 909, 912, 928, 931, 932, 933, 942, 945, 946, 947, 958, 960, 961, 964, 971, 976, 977, 979, 981, 991, 1018, 1019, 1058], "all_char": 188, "allow": [178, 183, 184, 188, 190, 191, 192, 195, 206, 208, 235, 266, 340, 358, 367, 428, 437, 462, 479, 488, 515, 533, 542, 591, 595, 616, 623, 643, 669, 676, 692, 699, 714, 715, 717, 718, 719, 723, 833, 844, 860, 911, 942, 984, 1019, 1060], "allow_empti": 984, "allow_overlap": [623, 676, 699], "allvltkt": 193, "almost": 995, "alon": [188, 715], "along": [187, 824, 832, 833, 877, 898, 909], "alpha": [141, 147, 646, 838, 839, 843, 1052], "alpha_divers": [1, 116, 132, 145, 147], "alpha_pwr": [838, 841, 842], "alphabet": [0, 95, 105, 147, 148, 178, 183, 340, 393, 399, 411, 459, 462, 512, 515, 569, 574, 610, 612, 624, 627, 630, 641, 1055], "alphanumer": 192, "alr": 645, "alreadi": [188, 193, 195, 206, 207, 208, 574, 665, 716], "also": [0, 1, 83, 84, 112, 116, 136, 142, 143, 144, 145, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 266, 321, 370, 380, 390, 393, 409, 447, 457, 459, 499, 509, 512, 545, 555, 565, 569, 574, 600, 609, 610, 612, 646, 661, 662, 664, 714, 715, 716, 718, 722, 813, 828, 835, 838, 841, 842, 865, 870, 882, 995, 1041, 1053, 1055, 1060], "alter": 994, "altern": [94, 194, 195, 392, 409, 458, 511, 568, 628, 643, 657, 663, 679, 703, 716, 718, 719, 722, 833, 838, 950, 976], "although": [132, 722, 841, 861], "altschul": [178, 179], "alwai": [1, 53, 182, 185, 188, 190, 192, 207, 235, 253, 256, 277, 300, 318, 321, 335, 337, 409, 885, 942, 998, 1060], "amar": 185, "ambigu": [228, 232], "amen": 644, "american": 107, "amino": [98, 100, 103, 182, 183, 187, 340, 393, 399, 409, 459, 462, 512, 569, 610, 612, 624], "amino_acid": [399, 400, 406], "among": [1, 112, 132, 185, 638, 686, 712, 724, 828, 835, 1056], "amount": [719, 912, 1060], "amplicon": [1, 857], "amsterdam": [813, 827, 828, 835], "an": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 46, 47, 48, 49, 51, 52, 53, 65, 67, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 104, 116, 117, 119, 125, 129, 130, 141, 143, 144, 145, 149, 162, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 206, 207, 208, 221, 223, 224, 225, 227, 229, 231, 233, 235, 236, 250, 251, 256, 266, 277, 278, 280, 281, 283, 284, 297, 298, 315, 316, 321, 335, 339, 347, 358, 365, 374, 375, 377, 384, 386, 390, 393, 398, 399, 409, 411, 418, 428, 435, 442, 443, 445, 451, 453, 457, 459, 461, 469, 479, 486, 493, 494, 496, 503, 505, 509, 512, 514, 515, 522, 533, 540, 549, 550, 552, 559, 561, 565, 569, 573, 574, 581, 591, 596, 597, 598, 604, 606, 609, 610, 611, 612, 616, 623, 626, 628, 630, 634, 638, 639, 646, 649, 650, 652, 653, 656, 658, 661, 662, 664, 669, 676, 678, 679, 683, 686, 687, 692, 699, 700, 702, 703, 708, 712, 713, 714, 716, 717, 718, 722, 734, 756, 767, 779, 800, 811, 812, 813, 823, 826, 832, 833, 838, 840, 841, 842, 843, 844, 847, 855, 856, 857, 863, 864, 867, 868, 869, 870, 875, 877, 878, 880, 883, 884, 885, 886, 888, 890, 891, 901, 904, 907, 908, 909, 910, 911, 913, 914, 927, 929, 930, 932, 934, 938, 940, 941, 945, 948, 949, 951, 958, 960, 963, 973, 976, 981, 983, 986, 988, 989, 990, 991, 992, 993, 998, 999, 1002, 1009, 1015, 1016, 1017, 1019, 1041, 1053, 1055, 1058, 1060], "analog": 132, "analogu": 718, "analys": [116, 143, 144, 714, 1056], "analysi": [1, 116, 128, 143, 144, 183, 190, 643, 644, 646, 651, 661, 714, 717, 718, 723, 724, 745, 746, 778, 789, 790, 801, 824, 827, 828, 833, 834, 835, 838, 841, 842], "analyt": 117, "analyz": [1, 643, 828, 841], "ancacwwgacgtt": [371, 372, 376, 439, 440, 444, 490, 491, 495, 546, 547, 551], "ancestor": [116, 132, 358, 428, 479, 533, 591, 927, 958, 960], "ancestr": 116, "ancom_df": 646, "anderson": [717, 718], "ani": [1, 19, 52, 53, 83, 84, 92, 94, 104, 105, 108, 139, 140, 183, 185, 187, 188, 192, 193, 206, 207, 208, 228, 232, 235, 248, 253, 256, 266, 280, 281, 295, 300, 313, 318, 321, 331, 334, 337, 340, 462, 515, 574, 612, 641, 646, 648, 716, 719, 723, 757, 779, 827, 832, 838, 840, 841, 865, 870, 894, 904, 906, 929, 932, 933, 934, 944, 952, 981, 983, 991, 1018, 1019, 1029, 1041, 1058, 1060], "anim": 117, "ann": [115, 134], "anndata": 902, "annot": [182, 185, 186, 192, 266], "announc": 192, "anosim": [1, 717, 718], "anoth": [1, 70, 79, 82, 92, 116, 143, 144, 185, 187, 188, 239, 245, 257, 263, 266, 269, 275, 280, 283, 286, 292, 304, 310, 322, 328, 345, 354, 363, 385, 387, 400, 406, 416, 425, 433, 452, 454, 467, 476, 484, 504, 506, 520, 529, 538, 560, 562, 574, 579, 588, 593, 605, 607, 612, 614, 667, 690, 722, 857], "anova": [646, 717, 734, 735, 756, 767, 800, 811], "answer": 1017, "anti": [1, 714], "antibiot": [658, 840], "anticip": 1060, "anyon": 192, "anyth": [1, 183, 184, 191, 195, 574, 904, 1018, 1029, 1041, 1060], "anytim": 192, "anywher": [187, 188, 192, 646], "apart": 974, "api": [183, 321, 640], "app": 191, "appear": [1, 107, 178, 190, 192, 193, 626, 678, 702, 715, 827, 828, 833, 838, 847], "append": [0, 85, 190, 195, 574, 944], "appl": [143, 144], "appli": [0, 1, 53, 65, 84, 89, 90, 141, 144, 145, 146, 149, 182, 183, 188, 192, 194, 266, 285, 340, 375, 377, 443, 445, 462, 494, 496, 515, 550, 552, 574, 597, 598, 612, 628, 643, 679, 703, 705, 716, 719, 723, 827, 841, 864, 885, 891, 894, 900, 907, 992, 1019, 1060], "applic": [53, 84, 98, 104, 321, 813, 937, 1060], "approach": [651, 716, 841, 913, 914, 938, 941], "appropri": [1, 176, 187, 235, 358, 428, 479, 533, 591, 646, 1053, 1058], "approx": 838, "approxim": [835, 838], "aqfvdhwkel": 181, "aquat": 828, "ar": [0, 1, 3, 53, 65, 66, 70, 75, 79, 80, 83, 84, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 116, 117, 122, 123, 132, 141, 143, 144, 145, 146, 148, 149, 161, 162, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 220, 227, 230, 231, 235, 239, 245, 248, 249, 256, 257, 263, 269, 275, 278, 280, 282, 283, 284, 285, 286, 292, 295, 296, 304, 310, 313, 314, 321, 322, 328, 330, 331, 333, 334, 335, 336, 339, 340, 345, 347, 354, 357, 358, 364, 367, 371, 372, 373, 376, 384, 385, 386, 387, 389, 390, 393, 395, 396, 397, 398, 399, 400, 406, 408, 409, 410, 411, 416, 418, 425, 428, 434, 437, 439, 440, 441, 444, 451, 452, 453, 454, 456, 457, 459, 461, 462, 467, 469, 476, 479, 485, 488, 490, 491, 492, 495, 497, 503, 504, 505, 506, 508, 509, 512, 514, 515, 520, 522, 529, 532, 533, 539, 542, 546, 547, 548, 551, 559, 560, 561, 562, 564, 565, 567, 569, 571, 572, 573, 574, 579, 581, 588, 591, 595, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 621, 624, 627, 628, 633, 634, 638, 639, 641, 642, 643, 644, 646, 648, 651, 652, 653, 655, 656, 658, 659, 660, 661, 664, 665, 667, 669, 674, 679, 682, 683, 686, 687, 688, 690, 692, 697, 703, 705, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 735, 757, 801, 812, 813, 814, 823, 824, 825, 826, 827, 828, 831, 832, 833, 835, 836, 838, 840, 841, 842, 844, 847, 860, 861, 864, 866, 870, 876, 885, 887, 895, 897, 898, 899, 900, 902, 903, 904, 909, 910, 911, 912, 932, 935, 940, 950, 961, 963, 964, 968, 969, 976, 977, 981, 983, 984, 985, 990, 991, 993, 995, 996, 998, 1015, 1018, 1019, 1030, 1041, 1053, 1055, 1058, 1060], "arang": [876, 881], "arbitrari": [65, 83, 86, 187, 192, 193, 340, 462, 515, 574, 812, 870, 904, 1018, 1055], "arbitrarili": [991, 1060], "archaea": [950, 951, 984], "archiv": [194, 1017], "area": [1, 118], "arg": [195, 220, 230, 396, 397, 462, 571, 572, 847], "arginin": 462, "argument": [53, 65, 93, 94, 97, 104, 161, 162, 174, 175, 187, 206, 207, 208, 220, 227, 228, 229, 230, 231, 232, 233, 282, 284, 336, 339, 383, 389, 396, 397, 398, 450, 456, 461, 502, 508, 514, 558, 564, 571, 572, 573, 603, 608, 611, 612, 628, 633, 639, 644, 679, 682, 687, 703, 707, 713, 720, 825, 826, 847, 895, 910, 969, 990, 1018, 1041], "argumentoverridewarn": [227, 231], "aris": [983, 991], "around": [122, 123, 146, 183, 190, 193, 612, 647, 716, 839, 1058], "arrai": [1, 3, 13, 14, 15, 17, 18, 19, 44, 46, 47, 49, 51, 52, 53, 84, 88, 116, 132, 143, 144, 183, 189, 340, 357, 360, 362, 368, 385, 387, 388, 391, 393, 430, 432, 438, 452, 454, 455, 459, 462, 481, 483, 489, 504, 506, 507, 510, 512, 515, 532, 535, 537, 543, 560, 562, 563, 566, 569, 574, 605, 607, 610, 612, 614, 622, 627, 630, 634, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664, 667, 675, 683, 690, 698, 700, 708, 722, 723, 757, 779, 801, 813, 832, 836, 838, 839, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 877, 880, 884, 888, 890, 894, 896, 900, 901, 904, 907, 954, 983, 991, 1055], "arrang": 813, "array_lik": [1, 3, 13, 14, 15, 34, 44, 45, 46, 47, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 149, 347, 365, 366, 380, 390, 418, 435, 436, 447, 457, 469, 486, 487, 499, 509, 522, 540, 541, 555, 565, 581, 594, 600, 609, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 665, 714, 716, 717, 718, 719, 722, 829, 832, 836, 839, 842, 843], "articl": [53, 104, 180], "artifact": [91, 98, 99, 100], "artifici": [185, 813], "asarrai": [665, 867, 868, 874, 875, 877, 878, 880, 885, 886, 891, 892, 893, 896, 898, 899, 901, 906, 907, 909], "ascend": [95, 283], "ascii": [184, 191, 192, 195, 393, 459, 512, 569, 610, 930, 1058], "ascii_art": [188, 859, 933, 950, 951, 992, 1058], "ask": 207, "asn": 462, "asp": 462, "asparagin": 462, "aspart": 462, "aspect": 1019, "ass": 120, "assai": 841, "assembl": 182, "assert": 996, "assert_frame_equ": 995, "assertionerror": [995, 996], "assess": [132, 140, 714, 716, 717, 718, 722], "assign": [84, 94, 105, 141, 145, 190, 192, 257, 390, 457, 509, 565, 574, 609, 630, 646, 651, 714, 717, 718, 812, 842, 931, 932, 933], "assign_support": 987, "assist": [192, 1060], "associ": [1, 72, 107, 132, 184, 192, 193, 194, 221, 222, 223, 249, 251, 256, 277, 279, 281, 296, 298, 314, 316, 321, 340, 462, 515, 574, 715, 722, 812, 832, 836, 839, 840, 841, 860, 863, 870, 885, 902, 904, 942, 948, 981, 1053], "asst": [369, 370, 544, 545], "assum": [1, 107, 116, 118, 124, 127, 143, 144, 180, 183, 184, 187, 189, 206, 208, 321, 347, 395, 396, 397, 418, 469, 522, 581, 616, 651, 664, 665, 669, 692, 703, 722, 723, 828, 832, 838, 839, 841, 842, 900], "assumpt": [128, 188, 641, 646, 651, 945, 946, 994], "assur": [913, 914, 938, 941], "asv": 1, "asx": 462, "asymmetr": [612, 616, 669, 692], "ataaatcacg": 182, "ataacgttgg": 182, "ataagggatg": 182, "atacaaccat": 182, "atactcccaa": 182, "atagacc": 1060, "atagcatacc": 182, "atagttacac": 182, "atatatacat": 184, "atatatat": 812, "atatatgttt": 182, "atatgaacaaa": 1060, "atattacaac": 182, "atcaaaaggg": 182, "atcaccgcta": 182, "atcactgaaa": 182, "atcataacta": 182, "atccatatat": 182, "atcggcgat": 642, "atgagccatg": 182, "atgc": 864, "atgcactagg": 182, "atgcatgcat": 186, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 186, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 186, "atgccactttaa": [396, 397], "atgccccttc": 182, "atggca": 812, "atggcc": 812, "atggcg": 812, "atggct": 812, "atggtatgaa": 182, "atgtgtatttga": 1055, "atgttgtagt": 182, "atl": [397, 410, 572], "atla": 624, "atom": [870, 904], "att": [361, 431, 482, 536], "attach": [206, 208, 932], "attagaaaga": 182, "attcgttgtg": 182, "attctggaac": 182, "attempt": [93, 161, 174, 183, 192, 235, 282, 336, 389, 456, 508, 564, 608, 633, 682, 707, 825, 895, 932, 945, 969], "attr": [186, 870, 904, 955, 983], "attr_1": 983, "attr_n": 983, "attribut": [3, 20, 34, 65, 94, 150, 163, 176, 181, 182, 183, 185, 186, 189, 191, 192, 193, 196, 238, 256, 265, 266, 281, 285, 303, 321, 340, 345, 393, 399, 411, 416, 459, 462, 467, 512, 515, 520, 569, 574, 579, 610, 612, 623, 638, 665, 676, 686, 688, 699, 712, 735, 768, 779, 814, 823, 834, 841, 844, 870, 904, 911, 912, 913, 914, 927, 931, 934, 938, 941, 955, 983, 991, 996, 998, 999, 1002, 1009, 1030, 1055], "attribute_nam": 983, "attributeerror": [574, 998], "atttcagggt": [183, 190], "aucauaacua": 182, "aug": 183, "augccacuuuaa": [399, 410, 571, 572], "auguguauuu": 1055, "austral": 717, "australian": 714, "auth": 195, "author": [132, 185, 193, 574, 646], "auto": [235, 393, 459, 512, 569, 610], "automat": [53, 82, 85, 92, 93, 97, 161, 162, 174, 175, 187, 191, 192, 220, 230, 256, 282, 284, 336, 339, 383, 389, 398, 450, 456, 461, 502, 508, 514, 558, 564, 573, 603, 608, 611, 633, 639, 664, 682, 687, 707, 713, 814, 825, 826, 895, 910, 937, 969, 990, 1053], "auxilari": 195, "av": 723, "avail": [1, 145, 178, 183, 184, 185, 189, 192, 194, 224, 225, 393, 399, 408, 459, 512, 569, 610, 624, 688, 714, 715, 716, 717, 718, 757, 838, 842, 870, 904, 993, 1053, 1060], "averag": [647, 651, 723, 724, 832, 836, 894, 965, 991], "averagegradientanova": 723, "avg": 723, "avoid": [53, 181, 192, 193, 195, 280, 813, 836, 988, 989], "aw": [0, 132], "awar": [84, 132, 192, 574], "awesom": 1060, "awgh": 0, "ax": [724, 746, 757, 790, 813, 824, 827, 828, 847, 857, 864, 885], "axes3d": 824, "axi": [72, 88, 118, 134, 187, 612, 757, 801, 814, 824, 832, 839, 842, 847, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 870, 875, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 904, 907, 909, 996], "axis_label": [1, 824], "b": [1, 53, 86, 92, 94, 95, 96, 116, 117, 118, 128, 132, 149, 184, 187, 188, 192, 236, 340, 462, 515, 574, 616, 623, 624, 627, 632, 635, 638, 662, 664, 669, 676, 681, 684, 686, 692, 699, 706, 709, 710, 712, 715, 716, 812, 824, 840, 841, 858, 860, 861, 864, 868, 893, 904, 913, 914, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 945, 946, 947, 948, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 985, 986, 987, 988, 989, 991, 992, 1017, 1053, 1055, 1058], "b1": [646, 651], "b2": [646, 651], "b3": [646, 651], "b4": [646, 651], "b5": [646, 651], "b6": [646, 651], "b7": [646, 651], "b_b": 188, "b_i": [140, 661], "ba": 193, "babp": 53, "bacilli": [951, 984], "bacillu": 193, "back": [132, 181, 183, 186, 229, 233, 254, 255, 301, 302, 319, 320, 338, 928, 1058], "backward": [116, 132, 143, 144, 192, 646], "bacteri": 646, "bacteria": [842, 887, 950, 951, 984], "bacteroidet": [887, 950, 951, 984], "baeza": 824, "baker": 116, "balanc": [132, 661], "band": 53, "bar": [192, 861, 886, 896, 906, 907, 1017, 1060], "barcod": [858, 860, 864], "barker": 132, "barlow": 661, "base": [1, 3, 13, 34, 45, 92, 99, 102, 107, 110, 111, 115, 116, 120, 121, 126, 127, 128, 132, 135, 137, 143, 144, 177, 178, 183, 185, 189, 191, 192, 256, 277, 285, 321, 332, 340, 380, 411, 447, 462, 499, 515, 555, 574, 600, 616, 665, 669, 692, 714, 716, 717, 718, 722, 757, 827, 828, 835, 838, 840, 841, 842, 844, 860, 868, 900, 911, 935, 947, 948, 991, 1017, 1055, 1056, 1058, 1060], "base1": 399, "base2": 399, "base3": 399, "basi": [652, 653, 661, 662], "basic": [98, 118, 178, 179, 722, 814, 824, 870, 904], "baz": [861, 1017], "bb": 840, "bbb": 184, "bbf": 184, "bbx": 184, "bc_dm": 1, "bct": 194, "becam": 188, "becaus": [1, 84, 91, 92, 116, 143, 144, 178, 183, 184, 185, 188, 190, 191, 192, 195, 321, 345, 380, 409, 416, 447, 467, 499, 520, 555, 574, 579, 600, 646, 716, 828, 833, 835, 837, 840, 932, 937, 940, 984], "becom": [1, 3, 117, 183, 184, 188, 192, 266, 860, 887], "been": [0, 98, 99, 100, 105, 149, 183, 184, 185, 190, 226, 228, 232, 235, 321, 334, 376, 380, 388, 444, 447, 455, 495, 499, 507, 551, 555, 563, 574, 600, 646, 716, 722, 843, 870, 904, 909, 968], "befor": [1, 84, 183, 187, 192, 193, 369, 370, 409, 544, 545, 658, 715, 716, 842, 860, 966, 985, 1058, 1060], "begin": [53, 182, 183, 184, 185, 189, 192, 193, 207, 256, 321, 409, 842], "behav": [340, 462, 515, 716], "behavior": [89, 90, 92, 98, 99, 100, 183, 184, 185, 192, 235, 375, 377, 393, 409, 443, 445, 459, 494, 496, 512, 550, 552, 569, 574, 597, 598, 610, 714, 716, 718, 936, 1060], "being": [1, 53, 82, 84, 85, 98, 99, 100, 116, 141, 145, 183, 184, 190, 194, 321, 335, 661, 718, 722, 812, 841, 860, 904, 913, 914, 934, 938, 941, 974, 1053, 1055], "bell": 135, "belong": [53, 108, 112, 186, 646, 651, 714, 717, 718, 860], "below": [180, 183, 184, 188, 190, 192, 193, 194, 321, 399, 411, 574, 715, 716, 824, 841, 870, 900, 904, 912], "benefit": 651, "benjamini": [646, 651], "berger": 108, "best": [53, 98, 99, 100, 101, 102, 103, 122, 123, 643, 715, 827, 994], "beta": [145, 146, 148, 182, 1052], "beta_divers": [1, 141, 143, 144, 146, 148, 149], "betadisp": 718, "bethesda": 183, "better": [183, 827, 828, 1053], "between": [1, 3, 53, 99, 102, 112, 117, 118, 122, 133, 140, 143, 144, 145, 149, 176, 183, 184, 185, 187, 190, 193, 194, 269, 283, 358, 363, 384, 385, 386, 387, 428, 433, 451, 452, 453, 454, 479, 484, 503, 504, 505, 506, 533, 538, 559, 560, 561, 562, 591, 593, 604, 605, 606, 607, 612, 616, 628, 640, 641, 642, 646, 651, 661, 664, 665, 669, 679, 688, 692, 703, 714, 715, 716, 717, 718, 719, 721, 722, 757, 827, 828, 829, 835, 838, 841, 842, 847, 885, 912, 927, 935, 936, 937, 943, 952, 962, 981, 982, 992, 1055, 1058], "bf00039495": 182, "bh": [646, 651], "bia": [110, 111, 651], "bias": [110, 111, 651], "bias_correct": [110, 111], "bifurc": [188, 662, 949], "bigoplu": 653, "bin": [812, 860, 893], "bin_": 812, "bin_f": [812, 860], "binari": [195, 196, 206, 207, 208, 235, 661, 662, 722, 827, 835, 890, 985, 1017], "binary_dm": [633, 639, 682, 687, 707, 713], "binomi": [841, 842], "bio": [0, 1, 89, 90, 93, 97, 98, 101, 104, 105, 116, 143, 144, 145, 146, 147, 148, 149, 161, 162, 174, 175, 177, 178, 179, 180, 182, 183, 184, 188, 189, 190, 191, 193, 194, 282, 284, 336, 339, 375, 377, 389, 396, 397, 398, 399, 409, 410, 443, 445, 456, 461, 494, 496, 508, 514, 550, 552, 564, 571, 572, 573, 597, 598, 608, 611, 633, 639, 640, 682, 687, 707, 713, 715, 813, 825, 826, 895, 910, 969, 990, 993, 1055, 1059], "biocor": [143, 144, 824], "biodivers": [1, 114, 116, 132], "bioinformat": [116, 132, 184, 190, 192, 932], "biol": [98, 101, 116, 120, 132, 178, 179, 182, 185, 657, 663], "biolog": [1, 91, 98, 99, 100, 127, 132, 133, 137, 139, 183, 184, 186, 188, 191, 256, 360, 361, 362, 364, 365, 368, 371, 372, 373, 376, 388, 430, 431, 432, 434, 435, 438, 439, 440, 441, 444, 455, 481, 482, 483, 485, 486, 489, 490, 491, 492, 495, 507, 535, 536, 537, 539, 540, 543, 546, 547, 548, 551, 563, 574, 612, 841, 844, 871, 911, 992, 1052, 1056, 1057], "biologi": [132, 133, 137, 409, 722, 932, 945, 991, 992], "biom": [192, 844, 850, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 1052], "biom_format": [844, 911], "biom_open": [870, 904], "biometr": [128, 718], "biometrika": [107, 119], "bioperl": [184, 190], "biopython": [3, 184], "biosci": [657, 663], "bioscienc": 935, "biotechnologi": [183, 194], "biotit": 3, "biowulf": 191, "biplot": [189, 827, 835], "biplot_scor": [814, 996], "bit": [3, 13, 17, 34, 44, 49, 135, 178, 179, 192], "bit_arr": 13, "bitscor": [178, 179], "bitting": 132, "biz": 861, "blackwel": 127, "blank": [183, 184, 188, 189, 190, 192, 238, 253, 285, 300, 303, 318, 321, 334, 337, 632, 681, 706], "blast": [99, 100, 102, 103, 183], "blast6": 179, "blastcgihelp": 183, "blastedbio": 178, "blastn": 179, "blastp": 179, "block": [100, 103, 146, 624, 1017], "block_siz": 1017, "blocksiz": 146, "blogspot": 178, "blosum": [100, 103, 462, 612, 624], "blosum45": 624, "blosum50": 624, "blosum62": [612, 624], "blosum80": 624, "blosum90": 624, "bmi": 842, "bob": 574, "bodi": [1, 824], "body_sit": [1, 824], "boilerpl": 195, "bologna": 118, "bone": 841, "bonferroni": [646, 651], "boniferroni": [646, 651], "boogaart": 661, "book": [178, 179, 183], "bool": [32, 53, 66, 67, 70, 79, 82, 85, 88, 89, 90, 91, 95, 98, 99, 100, 110, 111, 116, 132, 141, 143, 144, 145, 146, 149, 150, 206, 207, 208, 227, 231, 239, 245, 249, 252, 254, 255, 256, 257, 263, 269, 275, 277, 279, 283, 286, 292, 296, 299, 301, 302, 304, 310, 314, 317, 319, 320, 322, 328, 330, 338, 340, 341, 342, 345, 347, 354, 357, 358, 360, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393, 394, 400, 406, 412, 413, 416, 418, 425, 428, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 467, 469, 476, 479, 481, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 520, 522, 529, 532, 533, 535, 537, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 565, 568, 569, 570, 574, 575, 576, 579, 581, 588, 591, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 609, 610, 613, 614, 621, 623, 626, 642, 646, 652, 653, 657, 663, 665, 666, 667, 674, 676, 678, 689, 690, 697, 699, 702, 705, 716, 719, 722, 757, 768, 832, 833, 835, 836, 840, 841, 843, 860, 863, 867, 868, 870, 871, 879, 880, 881, 882, 890, 891, 892, 893, 894, 897, 902, 903, 904, 907, 909, 930, 935, 936, 939, 953, 955, 956, 957, 959, 962, 965, 966, 967, 970, 982, 984, 985, 992, 996, 1018], "boolean": [66, 144, 183, 186, 191, 340, 347, 360, 362, 365, 368, 380, 383, 385, 387, 388, 390, 418, 430, 432, 435, 438, 447, 450, 452, 454, 455, 457, 462, 469, 481, 483, 486, 489, 499, 502, 504, 506, 507, 509, 510, 515, 522, 535, 537, 540, 543, 555, 558, 560, 562, 563, 565, 574, 581, 600, 603, 605, 607, 609, 703, 868, 900], "bootstrap": 912, "both": [65, 83, 92, 94, 105, 110, 111, 112, 116, 132, 176, 177, 178, 179, 181, 183, 184, 190, 192, 194, 227, 231, 281, 409, 628, 649, 650, 652, 653, 664, 679, 703, 705, 710, 715, 716, 717, 718, 833, 847, 857, 860, 864, 870, 885, 900, 904, 936, 937, 976, 985, 1053, 1055], "bound": [121, 122, 185, 186, 195, 256, 257, 265, 266, 269, 277, 278, 280, 281, 574, 646, 651, 839, 842], "bound_moieti": 185, "bowden": [340, 411, 462, 515, 574], "boxplot": 1, "bp": [182, 185], "braak": 828, "bracket": [140, 188], "brai": 1, "branch": [1, 116, 132, 144, 662, 912, 932, 933, 942, 983, 986, 992, 1058], "braycurti": 1, "break": [340, 462, 515], "bren": 661, "brillouin": 109, "broader": 813, "broadinstitut": 183, "broken": [83, 991], "brows": 182, "bsd": 1052, "bt": [184, 881], "btop": [178, 179], "buf_siz": 812, "buffer": [195, 235, 812], "buffer_s": 195, "bufferedrandom": 235, "bufferedread": [196, 206, 207, 235], "bufferedwrit": [196, 208, 235], "bui": 1052, "build": [45, 266, 661, 905], "buildilrbas": 661, "built": [3, 20, 34, 53, 65, 150, 163, 196, 209, 238, 256, 266, 285, 303, 321, 340, 399, 411, 462, 515, 574, 612, 665, 688, 724, 735, 746, 757, 768, 779, 790, 801, 814, 844, 912, 937, 976, 998, 1018, 1030, 1041, 1053], "bulletin": 991, "busi": 195, "bwpd_": 132, "by_id": 900, "by_nam": [393, 459, 512, 569, 610, 612, 629], "bypass": [116, 141, 143, 144, 145], "byte": [3, 235, 390, 457, 509, 565, 609], "byteio": [177, 181], "bytesio": [177, 181, 235, 236, 1017], "bz2": 235, "bzh91ai": 236, "b\u00e4hler": [657, 663], "c": [1, 17, 20, 53, 65, 83, 91, 92, 94, 95, 104, 107, 116, 117, 118, 119, 120, 132, 133, 135, 137, 143, 144, 149, 182, 183, 184, 188, 190, 192, 193, 194, 208, 340, 350, 355, 361, 367, 369, 370, 421, 426, 431, 437, 462, 472, 477, 482, 488, 515, 525, 530, 536, 542, 544, 545, 574, 584, 589, 595, 612, 623, 627, 630, 632, 635, 638, 643, 645, 650, 657, 658, 659, 660, 662, 663, 664, 676, 681, 684, 686, 699, 706, 709, 710, 712, 715, 716, 824, 834, 840, 841, 858, 860, 861, 913, 914, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 945, 946, 947, 948, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 985, 986, 987, 988, 989, 991, 992, 1055, 1058], "c_": 107, "ca": [3, 17, 84, 189, 814, 828, 835], "caa40058": 182, "caaatgtgaa": 182, "caacgtggcc": 182, "caaggaagat": 182, "caagggctgc": 182, "cabcacc": 184, "cac": [373, 381, 441, 448, 492, 500, 548, 556, 601], "cacaattact": 182, "cacaauuacu": 182, "cach": [929, 934, 940, 944, 945, 946, 948, 955, 964, 968], "cache_attr": [940, 955], "cache_attrnam": 934, "cache_typ": 934, "cag": 3, "caggcc": 1060, "cagttgaagc": 182, "cagtttgatg": 182, "caguugaagc": 182, "caguuugaug": 182, "cajo": 828, "calcul": [3, 53, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 149, 176, 369, 370, 544, 545, 646, 651, 654, 662, 663, 714, 715, 716, 717, 718, 722, 746, 757, 801, 832, 836, 839, 841, 842, 884, 888, 900, 935, 942, 981, 1052], "call": [1, 92, 116, 117, 122, 123, 143, 144, 180, 183, 190, 193, 195, 235, 256, 358, 366, 369, 390, 409, 428, 436, 457, 479, 487, 509, 533, 541, 544, 565, 574, 591, 594, 609, 705, 715, 716, 812, 828, 838, 868, 928, 930, 931, 934, 945, 946, 948, 961, 962, 968, 977, 982, 989, 1016, 1018, 1019, 1029, 1053, 1060], "callabl": [53, 65, 82, 85, 94, 141, 145, 146, 149, 628, 646, 679, 703], "callback": [1019, 1060], "caller": [93, 97, 161, 162, 174, 175, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 745, 778, 789, 825, 826, 895, 908, 910, 969, 990], "calucul": 718, "can": [0, 1, 15, 47, 53, 65, 91, 94, 98, 99, 100, 104, 105, 112, 116, 117, 132, 141, 143, 144, 145, 147, 148, 149, 150, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 235, 256, 265, 266, 281, 321, 358, 363, 365, 380, 390, 428, 433, 435, 447, 457, 479, 484, 486, 499, 509, 533, 538, 540, 555, 565, 574, 591, 593, 600, 609, 612, 616, 624, 640, 643, 646, 651, 661, 664, 665, 669, 688, 692, 714, 715, 716, 718, 719, 720, 723, 813, 824, 827, 832, 833, 834, 835, 838, 840, 841, 842, 847, 857, 861, 870, 882, 885, 894, 904, 907, 912, 933, 935, 943, 973, 976, 983, 991, 992, 993, 997, 998, 1018, 1041, 1055, 1058, 1060], "cancer": 716, "candid": [399, 842], "cannot": [15, 47, 53, 65, 82, 85, 183, 184, 187, 188, 192, 227, 228, 231, 232, 235, 321, 358, 411, 428, 479, 533, 591, 646, 714, 715, 716, 717, 718, 812, 824, 840, 842, 843, 945, 948, 976, 1053], "canon": [340, 392, 458, 462, 511, 515, 568, 612, 828, 835, 844, 911, 1052], "captur": [394, 460, 513, 570], "cardin": 997, "care": [1, 84, 183, 185, 718], "carlo": 838, "carol": 574, "casava": 191, "casava_ug_15011196b": 191, "case": [1, 84, 98, 99, 100, 108, 146, 177, 181, 183, 188, 190, 192, 194, 196, 321, 335, 340, 370, 383, 393, 450, 459, 502, 512, 515, 545, 558, 569, 603, 610, 624, 646, 651, 665, 716, 722, 827, 832, 834, 842, 932, 965, 991, 1018, 1019, 1053, 1058], "cast": [1, 188, 321, 358, 428, 479, 533, 591, 664, 665, 720, 824, 886], "cat": [382, 449, 501, 557, 602, 840, 841], "catacctca": 3, "catatttgct": 182, "catcgatcgatcgatgcatgcatgcatg": 183, "catcgtc": 183, "categor": [192, 238, 321, 330, 334, 338, 714, 717, 813, 824], "categori": [1, 192, 193, 723, 724, 734, 735, 745, 756, 757, 767, 768, 779, 789, 790, 800, 801, 811, 813, 824, 838, 840, 841, 855, 860, 904, 1054], "categoricalmetadatacolumn": [285, 321, 332], "categoryresult": 768, "catttagga": 191, "catttgaaaa": 182, "cauauuugcu": 182, "caugcaucguacguacgcaugac": 180, "caus": [53, 192, 235, 409], "caution": 149, "cauucguacguacgcaugac": 180, "caveat": [183, 643], "cb": [193, 840], "cc": [193, 390, 399, 457, 509, 565, 609], "cca": [189, 813, 814, 827, 835], "cca1": 813, "cca2": 813, "cca3": 813, "cca4": 813, "cca5": 813, "cca6": 813, "cca7": 813, "cca8": 813, "cca9": 813, "ccaatggtac": 182, "ccaggtcgat": 182, "ccc": [342, 413, 464, 517, 576], "cccataaata": 182, "cccc": [380, 447, 499, 555, 600], "ccccchhhhhhhhhhhhh": 193, "ccchhhhhhhhhhhhhhh": 193, "cccttaggtc": 182, "ccg": 94, "ccggac": 1060, "ccgggcacggtat": 183, "ccgwllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 399, "ccora": 828, "ccyt": 184, "cd": [98, 182, 185, 409], "cde": 194, "ceil": 900, "cell": [192, 841], "cell_lin": 841, "center": [183, 194, 647, 715, 827, 829, 833, 836], "centr": [643, 649, 650, 831], "centroid": 718, "cepa": 932, "certain": [116, 125, 141, 143, 144, 145, 227, 229, 231, 233, 321, 340, 462, 515, 641, 987], "cg": [83, 390, 457, 509, 565, 574, 609], "cga": [381, 448, 500, 556, 601], "cgac": 180, "cgagc": [347, 418, 469, 522, 581], "cgaggccgggac": 183, "cgatgtc": 183, "cgatgtcgatcgatcgatcgatcag": 183, "cgau": 180, "cgcgaugcaugcau": 180, "cgggacactc": [183, 190], "cgggcacggt": [183, 190], "cgggcasdgca": 191, "cgggcattgca": 191, "cggtacgctt": [183, 190], "cggtcgtaacgcgta": 3, "cggtcgtcac": 3, "cgi": [99, 100, 102, 103, 399, 407, 408], "cgt": [381, 448, 500, 556, 601], "cgtcacttat": 182, "cgtcgt": 17, "cgtcgtgc": 17, "cgttacgctt": [183, 190], "cgttcagggt": [183, 190], "cgttta": 641, "cgugcaugcau": 180, "chain": 185, "challeng": 116, "chanc": [612, 722, 900], "chang": [121, 183, 265, 266, 409, 574, 624, 646, 651, 714, 812, 907, 934, 968, 1060], "chao": [107, 110, 132], "chao1": 111, "chao1_ci": 110, "chapter": [183, 834], "char": [367, 394, 437, 460, 488, 513, 542, 570, 595], "charact": [3, 13, 15, 17, 19, 34, 44, 47, 52, 53, 70, 83, 84, 88, 92, 105, 150, 163, 178, 179, 180, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 321, 340, 345, 347, 350, 352, 354, 355, 356, 360, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 376, 383, 388, 390, 392, 393, 399, 409, 411, 416, 418, 421, 423, 425, 426, 427, 430, 431, 432, 435, 437, 438, 439, 440, 441, 444, 450, 455, 457, 458, 459, 462, 467, 469, 472, 474, 476, 477, 478, 481, 482, 483, 486, 488, 489, 490, 491, 492, 495, 497, 502, 507, 509, 510, 511, 512, 515, 520, 522, 525, 527, 529, 530, 531, 535, 536, 537, 540, 542, 543, 544, 545, 546, 547, 548, 551, 558, 563, 565, 568, 569, 574, 579, 581, 584, 586, 588, 589, 590, 595, 603, 609, 610, 612, 627, 630, 641, 870, 904, 1055], "character": 651, "charg": [183, 190], "charlson": 132, "chase": 114, "check": [53, 184, 207, 227, 231, 257, 266, 269, 280, 613, 614, 652, 653, 664, 665, 666, 667, 688, 689, 690, 723, 827, 828, 841, 867, 879, 995, 996, 1016, 1060], "check_length": 1060, "checksum": 1017, "chemic": [612, 842], "chen": [107, 132], "chf": [397, 410, 572], "chi": [827, 828], "chichest": 643, "child": [188, 266, 358, 428, 479, 533, 591, 661, 912, 933, 964, 968, 986, 1058], "child1": [929, 944], "child2": [929, 944], "child_index": 983, "children": [188, 662, 912, 917, 921, 929, 933, 944, 946, 953, 957, 964, 968, 970, 977], "chimp": [183, 190], "chisquar": 842, "chiu": 132, "choic": [82, 85, 187, 833], "choos": [116, 192, 828, 838], "chosen": [390, 457, 509, 565, 609, 655, 715, 824, 835, 843], "christoph": 184, "chunk": 190, "ci": [106, 122, 651], "ci_typ": 122, "cigar": [3, 20, 45, 50, 53], "circuit": 1060, "circumst": [118, 462, 841], "citat": 194, "ciufo": 194, "cl": [206, 208, 221, 223, 224, 225, 411, 1002], "clade": [971, 978, 991, 1058], "cladogenesi": 722, "claim": [228, 232], "clarifi": 116, "clariti": 188, "clark": [714, 715], "class": [3, 20, 34, 53, 65, 89, 90, 105, 107, 110, 150, 163, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 206, 208, 209, 221, 223, 224, 225, 226, 238, 256, 266, 285, 303, 321, 340, 358, 375, 377, 399, 411, 428, 443, 445, 462, 479, 494, 496, 515, 533, 550, 552, 574, 591, 597, 598, 612, 646, 665, 688, 724, 735, 746, 757, 768, 779, 790, 801, 814, 844, 865, 868, 891, 906, 911, 912, 934, 991, 998, 1018, 1030, 1041, 1052, 1053, 1055], "classic": 194, "classif": [194, 824], "classmethod": [13, 14, 15, 16, 44, 45, 46, 47, 48, 86, 87, 93, 161, 174, 278, 282, 334, 336, 358, 389, 408, 428, 456, 479, 508, 533, 564, 591, 608, 624, 627, 628, 629, 630, 633, 679, 682, 703, 707, 825, 870, 871, 895, 949, 950, 951, 969], "classproperti": 411, "claus": 333, "clean": [235, 929, 968], "clear": 191, "clinic": [842, 1054], "clip_head": 150, "clip_tail": 150, "clone": 182, "clone_lib": 182, "close": [93, 97, 117, 161, 162, 174, 175, 183, 184, 188, 190, 193, 235, 236, 282, 284, 321, 336, 339, 389, 398, 409, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 646, 682, 687, 707, 713, 745, 778, 789, 825, 826, 895, 910, 969, 990, 1017], "closeabl": 235, "closefd": 195, "closer": [1, 1060], "clostridia": [951, 984], "closur": [645, 658, 659, 660], "clover": 182, "clr": [643, 650, 651, 662], "clustal": [93, 97, 1053], "clustal_f": 180, "clustalw": 180, "cluster": [1, 716, 718, 949, 1055], "cmap": [1, 632, 681, 706, 824], "cnt": 841, "co": 722, "co2": 841, "cock": 184, "cocryst": 185, "code": [180, 183, 184, 185, 194, 281, 340, 393, 395, 396, 397, 399, 400, 406, 407, 408, 409, 410, 459, 462, 512, 515, 567, 569, 571, 572, 610, 722, 843, 900, 935, 991, 993, 1055], "codon": [185, 194, 396, 399, 409, 410, 571, 612], "codon_start": 185, "coeff": 716, "coeffici": [107, 715, 716, 722, 814, 835, 838, 937], "coercion": [358, 428, 479, 533, 591], "cogent": 942, "col": [665, 854, 865, 880, 906], "col1": [92, 192], "col2": [92, 192], "col3": [92, 192], "collabor": 185, "collaps": [192, 933], "collapse_f": 860, "collapsed_id": [860, 870, 904], "collat": 719, "collect": [53, 133, 137, 139, 235, 321, 623, 661, 676, 699, 812], "collinear": [813, 828], "colon": 188, "color": [1, 122, 123, 632, 681, 706, 824], "colorbar": [632, 681, 706, 824], "colormap": [632, 681, 706, 824], "colormaps_refer": 824, "column": [1, 19, 52, 53, 65, 90, 91, 92, 145, 176, 177, 183, 185, 186, 189, 190, 193, 194, 238, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 330, 332, 333, 334, 335, 337, 338, 358, 377, 383, 428, 445, 450, 479, 496, 502, 533, 552, 558, 574, 591, 598, 603, 612, 616, 631, 635, 644, 645, 646, 651, 652, 653, 664, 669, 680, 684, 692, 704, 705, 709, 714, 715, 716, 717, 718, 719, 720, 722, 757, 801, 813, 824, 827, 828, 829, 831, 835, 836, 840, 841, 847, 858, 860, 865, 870, 871, 876, 880, 881, 882, 887, 896, 897, 902, 903, 904, 906, 950, 954, 995, 996, 1052], "column_missing_schem": [321, 334], "column_typ": [330, 334], "columnwis": 829, "com": [121, 178, 179, 180, 715, 1017], "comb": 965, "combin": [53, 65, 82, 85, 185, 651, 715, 814, 828, 882], "come": [193, 722, 979], "comma": [186, 187, 188], "command": [192, 194, 409], "comment": [182, 183, 185, 186, 187, 193, 194, 321], "comment_char": 188, "commit": 838, "common": [83, 89, 90, 101, 116, 132, 178, 183, 184, 185, 192, 193, 194, 375, 377, 443, 445, 494, 496, 550, 552, 597, 598, 644, 665, 757, 858, 859, 912, 937, 945, 958, 960, 983, 984, 992, 1055, 1058, 1059], "commonli": [188, 192, 612, 718, 835, 1058], "commun": [107, 112, 116, 132, 135, 140, 143, 144, 651, 664, 714, 715, 717, 718, 813, 824, 828, 835, 842, 1052], "compact": 930, "compani": 841, "compar": [1, 126, 143, 149, 178, 179, 283, 379, 384, 385, 386, 387, 390, 451, 452, 453, 454, 457, 503, 504, 505, 506, 509, 554, 559, 560, 561, 562, 565, 604, 605, 606, 607, 609, 614, 621, 646, 664, 667, 674, 690, 697, 716, 722, 840, 841, 842, 935, 936, 937, 965, 995, 996, 1055, 1058], "compare_rfd": [936, 937], "compare_subset": [935, 937, 978, 979, 1058], "compare_tip_dist": [935, 936, 943, 952, 981, 1058], "comparison": [143, 144, 646, 651, 722, 840, 935, 995, 1058], "compat": [116, 132, 143, 144, 192, 194, 399, 646], "compil": [366, 394, 436, 460, 487, 513, 541, 570, 594, 843], "complement": [379, 391, 409, 554, 566, 1055], "complement_map": [357, 532], "complet": [104, 122, 123, 184, 185, 188, 838, 994, 1053], "complex": [188, 1060], "compliant": [340, 462, 515], "complic": [612, 1053], "compon": [643, 645, 655, 656, 657, 658, 659, 660, 790, 814, 827, 833, 1060], "compos": [84, 184, 191, 321], "composit": [112, 116, 132, 235, 828, 1052], "compound": 651, "comprehens": 194, "compress": [177, 195, 235, 870, 880, 881, 882, 904], "compresslevel": [195, 235], "comput": [0, 1, 83, 84, 88, 107, 110, 116, 123, 134, 140, 141, 142, 143, 144, 145, 146, 149, 266, 363, 367, 433, 437, 484, 488, 538, 542, 593, 595, 628, 640, 641, 642, 646, 651, 657, 661, 662, 663, 664, 679, 703, 714, 715, 716, 717, 718, 719, 722, 723, 724, 734, 756, 757, 767, 768, 779, 790, 800, 801, 811, 813, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 943, 979, 981, 991, 1017, 1055, 1058], "computation": 53, "concat": [91, 92], "concaten": [91, 193, 278, 358, 428, 479, 533, 591, 861], "concentr": [112, 842], "concept": [3, 125, 661], "conceptu": [184, 717], "concern": [53, 187], "concis": 646, "conclud": 646, "concret": 285, "condens": [688, 700, 705, 710], "condensed_form": [688, 705, 710], "condit": [1, 122, 123, 841, 900], "confid": [1, 106, 111, 115, 122, 651, 838, 839, 912, 932], "confirm": [1, 714, 718, 842], "conflict": 940, "conform": 411, "confus": 828, "conjunct": 718, "connect": [116, 118, 132, 188, 912, 961, 968], "consens": 991, "consensu": 991, "consensus_tre": 991, "conserv": [116, 121, 122, 132, 180, 358, 428, 479, 533, 591, 646, 664], "consid": [3, 84, 107, 116, 121, 132, 143, 144, 183, 188, 321, 345, 380, 416, 447, 467, 499, 520, 555, 579, 600, 641, 643, 658, 718, 719, 812, 840, 841, 842, 995, 1018], "consider": [121, 132, 285, 321, 841], "consist": [3, 15, 47, 179, 183, 184, 186, 189, 190, 192, 193, 194, 330, 393, 459, 512, 569, 574, 610, 612, 841, 962, 982], "constant": [115, 643, 646, 700, 716, 840], "constitut": [1, 612, 630], "constrain": [814, 828], "constraint": [189, 814, 828, 835], "construct": [86, 96, 185, 194, 250, 254, 255, 256, 257, 285, 297, 301, 302, 315, 319, 320, 321, 338, 612, 627, 630, 636, 657, 664, 813, 857, 858, 859, 860, 861, 876, 885, 891, 893, 894, 898, 899, 906, 907, 940, 950, 951, 992, 1052, 1053, 1058], "constructor": [65, 82, 85, 94, 180, 183, 184, 185, 190, 191, 193, 207, 220, 230, 340, 383, 399, 450, 462, 502, 515, 558, 574, 603, 612, 720], "consum": [65, 85, 208, 340, 399, 462, 515, 574], "consumpt": [719, 833, 860], "contain": [1, 3, 53, 65, 83, 85, 92, 98, 99, 100, 101, 102, 103, 104, 107, 141, 142, 145, 146, 149, 176, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 194, 195, 226, 238, 248, 250, 254, 255, 295, 297, 301, 302, 303, 313, 315, 319, 320, 321, 330, 331, 335, 338, 340, 342, 347, 360, 362, 367, 368, 371, 372, 373, 376, 380, 381, 382, 388, 390, 393, 399, 413, 418, 430, 432, 437, 438, 439, 440, 441, 444, 447, 448, 449, 455, 457, 459, 462, 464, 469, 481, 483, 488, 489, 490, 491, 492, 495, 497, 499, 500, 501, 507, 509, 510, 512, 515, 517, 522, 535, 537, 542, 543, 546, 547, 548, 551, 555, 556, 557, 563, 565, 569, 576, 581, 595, 600, 601, 602, 609, 610, 626, 628, 632, 640, 641, 646, 661, 662, 664, 678, 679, 681, 702, 703, 706, 710, 714, 715, 716, 717, 718, 719, 721, 723, 813, 824, 828, 860, 870, 871, 900, 904, 930, 934, 942, 972, 991, 992, 1016, 1019, 1041, 1055, 1058], "content": [65, 83, 182, 183, 184, 185, 186, 188, 192, 195, 206, 207, 208, 335, 340, 357, 358, 361, 364, 391, 395, 428, 431, 434, 479, 482, 485, 515, 532, 533, 536, 539, 566, 567, 591, 1055], "context": [1, 53, 236, 237, 641, 824, 992], "contextu": 1018, "contigu": [186, 256, 380, 447, 499, 555, 600], "conting": [651, 835, 844, 908], "continu": [98, 99, 100, 813], "contrast": [132, 661], "contribut": [83, 132, 722, 827, 832], "control": [92, 183, 714, 716, 717, 723, 835, 838, 840, 841, 842, 858, 868, 885], "control_cat": [840, 841], "controversi": 128, "conveni": [0, 53, 93, 97, 131, 161, 162, 174, 175, 229, 233, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990, 1059], "convent": [116, 143, 144, 178, 182, 185], "convers": [3, 184, 235, 700, 885], "convert": [1, 3, 16, 48, 178, 180, 182, 183, 185, 188, 190, 193, 235, 254, 255, 285, 301, 302, 319, 320, 338, 340, 363, 392, 393, 433, 458, 459, 462, 484, 511, 512, 515, 538, 568, 569, 574, 593, 610, 665, 705, 715, 843, 887, 892, 894, 902, 903, 932, 997], "convert_underscor": 188, "convienc": [958, 960], "coo_matrix": 662, "coord": [14, 46, 723, 724, 746, 757, 790, 801], "coord_data": 723, "coordin": [1, 3, 14, 18, 46, 51, 150, 185, 191, 256, 266, 269, 277, 278, 283, 651, 662, 718, 723, 757, 790, 801, 814, 824, 827, 833, 834, 835], "copi": [65, 68, 69, 183, 190, 193, 266, 267, 268, 343, 344, 390, 414, 415, 457, 465, 466, 509, 518, 519, 565, 574, 577, 578, 609, 634, 637, 665, 683, 685, 708, 711, 836, 843, 908, 913, 914, 941, 973, 974, 980, 988, 989, 1012, 1013, 1014], "copy_from": 266, "copyright": [183, 190], "corbet": 117, "cornish": [340, 411, 462, 515, 574], "cornwel": 132, "corr": 1, "corr_coeff": [716, 722], "correct": [110, 111, 118, 183, 646, 651, 968, 974, 1053], "correl": [1, 657, 663, 664, 715, 716, 719, 721, 722, 814, 828, 829, 835, 838, 842, 937, 1058], "correspond": [1, 15, 47, 91, 116, 132, 143, 144, 150, 181, 183, 184, 186, 191, 193, 228, 232, 251, 298, 316, 321, 370, 383, 399, 409, 450, 502, 545, 558, 571, 572, 603, 616, 646, 661, 669, 692, 814, 827, 828, 831, 842, 860, 865, 870, 872, 874, 875, 886, 887, 904, 906, 907, 912, 945, 950, 954, 963, 984, 991], "cospeci": 722, "cost": [657, 663], "costli": 0, "could": [1, 65, 123, 181, 183, 184, 191, 195, 227, 229, 231, 233, 646, 651, 665, 714, 716, 717, 718, 719, 722, 824, 840, 899, 958, 960, 993, 994, 1053], "count": [0, 3, 65, 82, 85, 88, 92, 95, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 177, 180, 183, 184, 190, 193, 367, 369, 370, 382, 384, 386, 437, 449, 451, 453, 488, 501, 503, 505, 542, 544, 545, 557, 559, 561, 595, 602, 604, 606, 642, 643, 646, 651, 722, 828, 834, 841, 842, 843, 860, 874, 890, 894, 900, 936, 937, 963, 991, 1053], "counts2": 842, "counts_001": 838, "counts_010": 838, "counts_100": 838, "counts_interv": [838, 841, 842], "coupl": 266, "covari": [132, 829], "cover": [266, 624, 1058], "coverag": [107, 115, 119, 123, 178, 179], "cprofil": 1060, "cran": [661, 714, 715, 716, 717, 718], "crd": 183, "creat": [1, 3, 13, 14, 15, 16, 34, 44, 45, 46, 47, 48, 53, 65, 82, 85, 86, 87, 91, 93, 94, 95, 96, 161, 174, 182, 183, 186, 188, 190, 192, 209, 220, 230, 235, 236, 254, 255, 256, 266, 277, 278, 282, 301, 302, 319, 320, 336, 338, 340, 389, 390, 411, 456, 457, 462, 508, 509, 515, 564, 565, 574, 608, 609, 627, 628, 630, 632, 633, 635, 636, 646, 655, 656, 664, 679, 681, 682, 684, 703, 706, 707, 709, 710, 720, 722, 757, 813, 824, 825, 844, 860, 867, 868, 874, 875, 877, 878, 880, 885, 886, 891, 892, 893, 895, 896, 898, 899, 901, 906, 907, 909, 911, 933, 934, 955, 969, 992, 1055, 1058, 1060], "create_cach": 955, "create_d": [844, 911], "create_format": [195, 206, 207, 208], "creation": [870, 904, 905], "creation_d": [904, 905], "credibl": 651, "criteria": [249, 281, 296, 314, 333, 840, 987], "critic": [838, 839, 841, 842, 932], "crop": 194, "cross": 185, "cross_refer": 182, "csc": [847, 904], "csc_matrix": 904, "csr": [847, 904], "csr_matrix": 904, "csv": [178, 187, 1053], "ctaa": 185, "ctaacccccttttctcaga": 0, "ctagctagta": 182, "ctataaaaaa": 185, "ctattatact": 182, "ctc": [393, 459, 512, 569, 610], "ctcaaaagtc": [393, 459, 512, 569, 610], "ctcaaaattc": 182, "ctcttctagt": 182, "ctgtttgtta": 182, "cttcatgtat": 182, "cttccaattt": 182, "cttgacatag": 182, "cttgatgata": 182, "cuaa": 185, "cual": 192, "cuauaaaaaa": 185, "cug": 409, "cuguuuguua": 182, "cultur": 841, "cumbersom": 192, "cumul": [121, 140, 180, 181], "cuppini": 118, "curat": 194, "current": [176, 178, 181, 182, 183, 184, 185, 190, 192, 193, 194, 266, 280, 321, 330, 397, 410, 572, 624, 646, 716, 801, 827, 833, 870, 904, 934, 947, 956, 957, 962, 1052], "curti": 1, "curv": [118, 121, 128, 828, 838, 841, 842], "custom": [0, 1, 194, 340, 363, 399, 400, 411, 433, 462, 484, 515, 538, 593, 824, 870, 898, 904, 1052, 1055], "custom_metr": [363, 433, 484, 538, 593], "customsequ": 411, "cutoff": [646, 991], "cuucauguau": 182, "cuugacauag": 182, "cw": 193, "cy": 462, "cyanogen": 182, "cystein": 462, "cytokin": 841, "cytophagia": [951, 984], "cytosin": [340, 515], "czech": 932, "d": [1, 53, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 178, 179, 185, 188, 189, 340, 462, 515, 623, 627, 632, 638, 643, 644, 645, 646, 649, 650, 652, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 676, 681, 686, 699, 706, 710, 712, 714, 715, 716, 717, 718, 722, 757, 779, 801, 814, 824, 832, 841, 842, 843, 844, 861, 876, 877, 897, 911, 913, 914, 927, 928, 930, 932, 933, 934, 935, 936, 938, 939, 941, 942, 943, 945, 946, 947, 948, 952, 958, 959, 960, 961, 962, 968, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 986, 987, 988, 989, 991, 992, 1053, 1055, 1058, 1060], "d1": [194, 1055], "d136": 194, "d143": 194, "d2": 1055, "d3": 1055, "d_": [127, 137], "d_a": 885, "d_b": 885, "d_d": 188, "d_w": 140, "d_x": 716, "d_y": 716, "daili": 194, "danger": 1, "dash": 192, "data": [1, 3, 92, 116, 118, 128, 132, 141, 143, 144, 145, 146, 149, 177, 178, 181, 182, 184, 186, 187, 189, 191, 192, 193, 194, 235, 238, 285, 303, 321, 330, 340, 411, 462, 515, 574, 614, 616, 634, 643, 644, 645, 646, 647, 650, 651, 653, 655, 657, 661, 663, 665, 667, 669, 683, 688, 690, 692, 708, 715, 722, 723, 745, 778, 789, 812, 813, 824, 827, 828, 832, 838, 840, 841, 842, 844, 845, 847, 854, 855, 857, 860, 865, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 886, 889, 891, 892, 893, 894, 896, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 950, 981, 985, 992, 1016, 1019, 1052, 1053, 1054, 1055, 1060], "data_fh": 869, "data_fram": 715, "data_pump": 871, "data_typ": [870, 904], "databas": [178, 179, 182, 185, 192, 194, 256, 950], "datafram": [1, 65, 90, 145, 178, 179, 194, 254, 285, 301, 319, 321, 338, 340, 377, 445, 462, 496, 515, 552, 574, 598, 623, 635, 638, 646, 651, 676, 684, 686, 699, 709, 712, 714, 715, 717, 718, 719, 723, 757, 801, 813, 814, 824, 827, 828, 834, 835, 840, 841, 858, 887, 903, 950, 995, 1055], "datapoint": 128, "dataset": [146, 176, 181, 643, 651, 718, 813, 828, 833, 870, 904], "datatyp": [176, 812, 843], "date": [182, 870, 871, 904, 905], "datetim": [904, 905], "dayhoff": 624, "db": 183, "db_xref": [182, 185], "dbsourc": 182, "dbxref": [185, 186], "ddbj": 185, "ddl": [870, 904], "ddof": [657, 663, 832, 836], "de": [182, 193], "deal": [181, 182, 234, 643, 655, 833, 1053], "debug": [107, 1018, 1029, 1060], "debug_post_st": 1060, "debug_pre_st": 1060, "debug_runtim": 1060, "debug_trac": 1060, "decemb": 184, "decid": [833, 1060], "decim": [188, 192, 996], "declar": [189, 192], "decod": [184, 235], "decomposit": [132, 146], "decompress": 235, "decor": [195, 206, 207, 208, 266, 411, 934, 991, 998, 1018, 1030, 1031, 1041, 1052], "decreas": 812, "deem": 828, "deep": [69, 108, 268, 343, 344, 414, 415, 465, 466, 518, 519, 574, 577, 578, 625, 637, 677, 685, 701, 711], "deepcopi": [69, 913, 914, 938, 988, 989], "deeper": [143, 144], "def": [180, 195, 206, 207, 208, 363, 411, 433, 484, 538, 593, 842, 1060], "default": [0, 1, 15, 19, 47, 52, 53, 65, 82, 83, 85, 92, 94, 97, 98, 99, 100, 102, 103, 107, 111, 121, 128, 132, 135, 141, 145, 162, 175, 178, 183, 185, 186, 187, 188, 190, 191, 192, 195, 196, 206, 208, 221, 223, 249, 281, 284, 285, 296, 314, 321, 333, 339, 363, 380, 392, 393, 396, 397, 398, 399, 409, 410, 433, 447, 458, 459, 461, 484, 499, 511, 512, 514, 538, 555, 568, 569, 571, 572, 573, 593, 600, 610, 611, 623, 628, 632, 639, 644, 645, 646, 651, 652, 653, 655, 656, 665, 676, 679, 681, 687, 699, 703, 706, 713, 715, 716, 718, 719, 720, 757, 812, 824, 826, 832, 833, 835, 836, 843, 854, 860, 865, 868, 870, 875, 877, 880, 881, 882, 884, 885, 888, 890, 891, 892, 893, 894, 898, 900, 904, 905, 906, 907, 909, 910, 937, 962, 981, 990, 991, 992, 995, 996, 1016, 1019, 1041, 1053, 1055, 1058, 1060], "default_column": 178, "default_gap_char": [83, 84, 92, 411], "default_missing_schem": [321, 334], "default_write_format": 208, "defaultdict": 886, "defer": 266, "defin": [1, 14, 18, 46, 51, 65, 92, 94, 100, 103, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 149, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 256, 266, 280, 321, 345, 363, 381, 382, 392, 393, 399, 400, 407, 408, 416, 433, 448, 449, 458, 459, 467, 484, 500, 501, 511, 512, 520, 538, 556, 557, 568, 569, 579, 593, 601, 602, 610, 612, 624, 629, 632, 642, 644, 645, 649, 650, 652, 653, 654, 658, 659, 660, 665, 681, 706, 716, 719, 824, 838, 868, 870, 885, 893, 904, 909, 988, 989, 992, 995, 1029, 1053, 1055, 1058, 1060], "definit": [1, 83, 112, 150, 163, 181, 182, 183, 184, 185, 186, 194, 340, 357, 358, 361, 362, 364, 371, 372, 376, 388, 391, 394, 395, 396, 397, 399, 409, 410, 411, 428, 431, 432, 434, 439, 440, 444, 455, 460, 462, 479, 482, 483, 485, 490, 491, 495, 507, 513, 515, 532, 533, 536, 537, 539, 546, 547, 551, 563, 566, 567, 570, 571, 572, 591, 624, 870, 904, 992, 1055, 1059, 1060], "definite_char": 411, "deflin": 183, "degap": [369, 370, 544, 545, 1055], "degener": [83, 84, 150, 163, 181, 182, 183, 184, 185, 186, 340, 357, 358, 360, 361, 364, 369, 370, 371, 372, 376, 388, 391, 392, 394, 395, 396, 397, 399, 409, 410, 411, 428, 430, 431, 434, 439, 440, 444, 455, 458, 460, 462, 479, 481, 482, 485, 490, 491, 495, 507, 511, 513, 515, 532, 533, 535, 536, 539, 544, 545, 546, 547, 551, 563, 566, 567, 568, 570, 571, 572, 591, 624, 1055], "degenerate_map": [364, 411, 434, 485, 539, 1055], "degenerate_mod": 84, "degre": [112, 132, 180, 651, 657, 663, 832, 839, 841], "deiman": 193, "del": [15, 19, 47, 52, 187, 392, 458, 511, 568, 813], "deleg": 917, "delet": [19, 52, 266, 955, 971, 999], "deleteri": 994, "delgado": [643, 661], "delim": 865, "delimit": [186, 187, 189, 191, 194, 253, 300, 318, 337, 664, 865, 869, 872, 906], "delta": [132, 655, 656, 832], "demograph": 1054, "demonstr": [89, 90, 195, 375, 377, 443, 445, 494, 496, 550, 552, 597, 598], "dempqsv": [393, 459, 512, 569, 610], "demultiplex": 812, "den": 661, "denomin": [644, 661], "denominator_col": 644, "denominator_idx": [644, 645], "denot": [112, 132, 136, 139, 140, 183, 646, 651, 714, 717, 718], "dens": [177, 860, 863, 868, 871, 880, 881, 882, 891, 902, 903, 911], "densiti": 907, "dep": 838, "depend": [20, 111, 114, 115, 116, 132, 141, 143, 144, 145, 183, 184, 193, 206, 207, 208, 235, 370, 545, 616, 669, 692, 716, 718, 720, 779, 833, 870, 913, 914, 937, 938, 941, 985, 991, 1018, 1029, 1053, 1058, 1060], "deprec": [104, 105, 116, 130, 132, 143, 144, 149, 376, 388, 444, 455, 495, 507, 551, 563, 646, 656], "depth": [132, 813, 838, 841, 842, 985, 1058], "deriv": [99, 100, 102, 103, 182, 380, 447, 499, 555, 574, 600, 652, 653, 661, 841, 992], "derives_from": 186, "desc": 574, "descend": [95, 132, 283, 912, 942, 954, 962, 971, 978, 979, 982, 985, 1058], "describ": [0, 1, 84, 98, 101, 108, 109, 112, 115, 116, 119, 120, 122, 123, 124, 125, 132, 133, 136, 143, 144, 149, 177, 182, 183, 184, 185, 186, 189, 190, 192, 193, 253, 300, 318, 321, 334, 337, 380, 383, 447, 450, 499, 502, 555, 558, 574, 600, 603, 634, 657, 663, 664, 683, 700, 708, 716, 722, 834, 860, 866, 870, 904, 905, 954, 992, 1054, 1055, 1058], "descript": [53, 107, 116, 121, 126, 127, 137, 141, 143, 144, 145, 176, 178, 183, 184, 185, 186, 188, 190, 192, 194, 238, 285, 303, 616, 669, 692, 904, 935, 991, 1055, 1058], "description_newline_replac": [183, 184], "descriptor": [185, 834, 1012, 1013, 1014], "deseri": [664, 814], "design": [1, 146, 176, 177, 182, 192, 321, 664, 840], "desir": [118, 122, 178, 187, 833, 887, 899, 975, 1060], "destin": 574, "detach": 3, "detail": [53, 91, 92, 104, 105, 132, 146, 148, 149, 182, 183, 184, 185, 186, 190, 191, 193, 194, 195, 238, 285, 303, 321, 410, 574, 616, 669, 692, 715, 719, 824, 827, 828, 835, 992, 1053], "detect": [183, 185, 192, 228, 232, 646, 716, 842, 857], "determin": [1, 67, 70, 79, 89, 90, 116, 132, 141, 143, 144, 145, 187, 195, 224, 225, 235, 239, 245, 248, 252, 286, 292, 295, 299, 304, 310, 313, 317, 321, 322, 328, 330, 331, 342, 345, 354, 371, 372, 373, 374, 375, 376, 377, 379, 400, 406, 413, 416, 425, 439, 440, 441, 442, 443, 444, 445, 464, 467, 476, 490, 491, 492, 493, 494, 495, 496, 497, 517, 520, 529, 546, 547, 548, 549, 550, 551, 552, 554, 576, 579, 588, 596, 597, 598, 621, 646, 674, 697, 718, 722, 812, 833, 838, 840, 841, 845, 860, 991, 1060], "determinist": [117, 714, 718], "develop": [1, 20, 146, 149, 182, 192, 206, 207, 208, 646, 992, 1052, 1060], "deviat": [715, 832, 835, 836, 839], "df": [178, 179, 194, 635, 651, 684, 709, 714, 715, 718, 824, 839, 903], "di": [118, 1055], "diag": 882, "diagnos": 1060, "diagon": [176, 703, 710, 882], "diagram": 256, "dict": [53, 65, 86, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 161, 162, 174, 175, 182, 185, 207, 227, 228, 229, 231, 232, 233, 256, 277, 281, 282, 284, 321, 334, 336, 339, 340, 367, 382, 389, 396, 397, 398, 437, 449, 456, 461, 462, 488, 501, 508, 514, 515, 542, 557, 564, 571, 572, 573, 574, 595, 602, 608, 611, 612, 627, 633, 636, 639, 682, 687, 707, 713, 716, 719, 779, 825, 826, 855, 856, 870, 871, 872, 875, 885, 886, 893, 895, 904, 909, 910, 950, 954, 963, 969, 983, 990, 1018, 1055, 1060], "dict_of_metadata": 856, "dictionari": [86, 89, 94, 96, 105, 193, 194, 256, 267, 268, 277, 281, 375, 443, 494, 550, 574, 597, 627, 636, 716, 868, 950], "did": [107, 183, 191, 227, 231, 236, 1060], "didn": [183, 1060], "diet": 840, "differ": [0, 1, 70, 83, 84, 86, 98, 99, 100, 111, 116, 121, 133, 137, 143, 144, 179, 181, 183, 184, 190, 193, 194, 195, 285, 342, 345, 354, 358, 359, 363, 378, 379, 384, 385, 386, 387, 390, 396, 399, 406, 413, 416, 425, 428, 429, 433, 446, 451, 452, 453, 454, 457, 464, 467, 476, 479, 480, 484, 498, 503, 504, 505, 506, 509, 517, 520, 529, 533, 534, 538, 553, 554, 559, 560, 561, 562, 565, 571, 576, 579, 588, 591, 592, 593, 599, 604, 605, 606, 607, 609, 616, 641, 646, 651, 664, 669, 692, 714, 717, 718, 722, 746, 801, 813, 827, 828, 833, 841, 842, 907, 935, 936, 995, 996, 1012, 1013, 1014, 1055, 1058], "differenti": [646, 651], "difficult": 1, "digit": 192, "dim": 181, "dimens": [77, 150, 163, 181, 189, 190, 622, 644, 648, 652, 653, 675, 698, 718, 814, 823, 824, 833, 834], "dimension": [1, 181, 634, 645, 658, 659, 660, 665, 683, 700, 708, 813, 827, 834, 835, 841, 842, 896, 1056], "direct": [192, 194, 253, 300, 318, 337, 828, 912], "direct_io": [865, 905, 906], "direction": 996, "directli": [65, 82, 85, 192, 340, 399, 462, 515, 574, 640, 646, 722, 905, 906, 1018, 1060], "dirichilet": 651, "dirichlet": 651, "disabl": [1, 116, 141, 143, 144, 145, 1060], "disallow": [188, 193, 716], "disallow_negative_branch_length": 992, "discard": [185, 716, 868], "discov": [1, 940], "discoveri": 1, "discrep": 112, "discret": 139, "discuss": [132, 143, 144, 192, 1060], "diseas": [646, 716, 858], "disjoint": [861, 991], "disjointiderror": [857, 861], "disk": [183, 321, 665], "dism": 657, "disperison": 718, "dispers": 718, "displai": [182, 367, 390, 399, 437, 457, 488, 509, 542, 565, 595, 609, 719, 814], "disrupt": [365, 435, 486, 540, 1055], "dissimilar": [142, 145, 187, 613, 614, 616, 621, 622, 623, 625, 626, 628, 631, 632, 634, 637, 638, 657, 664, 665, 666, 667, 669, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 689, 690, 692, 697, 698, 699, 701, 702, 704, 706, 708, 711, 712], "dissimilaritymatrix": [176, 187, 612, 614, 616, 621, 623, 625, 626, 628, 632, 633, 635, 637, 638, 639, 657, 664, 688, 690, 692, 697, 699, 701, 702, 706, 709, 711, 712, 720], "dist": [937, 952], "dist_f": 937, "distanc": [1, 53, 132, 142, 143, 144, 145, 146, 148, 149, 176, 187, 188, 384, 386, 451, 453, 503, 505, 559, 561, 604, 606, 612, 623, 626, 632, 634, 638, 644, 657, 721, 722, 824, 827, 828, 830, 833, 835, 912, 926, 927, 935, 937, 952, 974, 981, 992, 1052, 1058], "distance_filt": 53, "distance_from_r": 937, "distance_from_r_squar": 937, "distance_matrix": [714, 715, 717, 718, 830, 833], "distancematrix": [145, 146, 149, 176, 187, 635, 640, 657, 664, 665, 684, 714, 715, 716, 717, 718, 719, 720, 722, 824, 833, 981, 992], "distant": 952, "distinct": [83, 129, 130, 139, 641, 664], "distinguish": [50, 112, 132], "distort": 643, "distribut": [115, 182, 651, 658, 720, 833, 838, 839, 841, 842, 900], "div": 194, "diverg": 1, "divers": [664, 843, 1052], "divid": [180, 661, 830, 832, 836, 860], "divis": [399, 661, 836], "dj": 183, "dm": [176, 616, 623, 632, 635, 638, 664, 669, 676, 681, 684, 686, 692, 699, 706, 709, 710, 712, 714, 715, 718, 719, 824, 992], "dm1": 719, "dm2": 719, "dm_fh": 664, "dm_from_np": 664, "dmp": 950, "dna": [0, 3, 17, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 85, 86, 88, 90, 91, 92, 94, 95, 96, 99, 102, 104, 180, 182, 183, 184, 185, 186, 190, 191, 193, 399, 411, 428, 430, 431, 432, 434, 435, 438, 439, 440, 441, 444, 445, 447, 455, 459, 460, 479, 481, 482, 483, 485, 486, 489, 490, 491, 492, 495, 496, 499, 507, 512, 513, 515, 532, 533, 535, 536, 537, 539, 540, 543, 544, 545, 546, 547, 548, 551, 552, 554, 555, 563, 566, 567, 569, 570, 574, 591, 598, 600, 610, 665, 1053, 1055], "dna_seq": [182, 183, 185], "dnaful": 624, "do": [1, 82, 85, 128, 176, 181, 183, 190, 192, 195, 235, 340, 345, 387, 416, 454, 462, 467, 506, 515, 520, 562, 574, 579, 607, 641, 646, 716, 719, 757, 835, 847, 868, 891, 900, 932, 945, 975, 976, 1058, 1060], "do_someth": 1060, "do_something_awesom": 1060, "do_something_els": 1060, "doc": [145, 180, 182, 183, 190, 192, 253, 256, 300, 318, 321, 334, 337, 634, 665, 683, 688, 700, 708, 904, 991], "docstr": [238, 285, 303], "doctest": 870, "document": [1, 72, 148, 177, 183, 185, 190, 191, 226, 646, 824, 844, 870, 904, 911, 912, 1053, 1057], "doe": [65, 82, 83, 85, 92, 95, 104, 116, 132, 178, 180, 181, 183, 184, 186, 188, 190, 193, 235, 248, 295, 313, 331, 358, 399, 400, 406, 409, 428, 479, 533, 591, 624, 634, 641, 664, 683, 705, 708, 714, 716, 718, 757, 833, 841, 842, 864, 886, 887, 904, 928, 937, 948, 961, 974, 981, 984, 991, 995, 1053], "doesn": [92, 183, 192, 334, 409, 658, 662, 827, 833, 837, 974, 993, 1059], "doi": [53, 104, 182, 184, 657, 663, 992], "domain": [193, 462, 950, 984], "domin": [106, 108, 114, 125, 136, 137, 140], "domrachev": 194, "don": [1, 53, 92, 183, 192, 369, 370, 544, 545, 644, 646, 719, 835, 838, 842, 936, 937, 974, 992], "done": [84, 646, 718, 745, 778, 789, 847], "doubl": [107, 108, 109, 110, 112, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 140, 227, 231, 827, 833], "doubleton": [1, 110, 111, 113, 115, 131], "doubt": 192, "download": [182, 185, 194], "dqyhrykedvgimkdqnmdsyrfsiswprilpkgklsgginhegikyynnli": 182, "dr": 182, "draw": [651, 838, 840, 841, 842, 930, 973], "draw_mod": [838, 842], "drawn": [651, 720, 838, 841, 842], "driver": [1, 114], "drop": [266, 330, 347, 418, 469, 522, 581, 719, 813, 828, 868, 971, 991], "drop_all_miss": 330, "drop_all_uniqu": 330, "drop_missing_valu": [249, 252, 296, 299, 314, 317], "drop_zero_vari": 330, "dt": 182, "dt_rich": 860, "dtype": [0, 1, 17, 65, 70, 82, 83, 84, 85, 88, 91, 92, 94, 95, 180, 181, 183, 184, 190, 191, 193, 321, 338, 357, 358, 360, 361, 362, 368, 385, 387, 388, 391, 393, 428, 430, 431, 432, 438, 452, 454, 455, 459, 479, 481, 482, 483, 489, 504, 506, 507, 510, 512, 532, 533, 535, 536, 537, 543, 560, 562, 563, 566, 569, 574, 591, 605, 607, 610, 646, 665, 710, 714, 718, 813, 844, 884, 888, 902, 911, 983, 1055], "due": [130, 188, 280, 655, 656, 715, 718, 828, 841], "dump": [194, 1058, 1060], "dunn": 182, "duplic": [92, 149, 184, 192, 193, 280, 393, 459, 512, 569, 610, 626, 678, 702, 1015], "duplicatenodeerror": [116, 132, 141, 143, 144, 145, 940], "duplicateregistrationerror": [206, 207, 208], "dure": [92, 183, 257, 358, 428, 479, 533, 591, 718, 885, 905, 906, 1016], "dx": 118, "e": [0, 1, 53, 66, 77, 84, 88, 89, 95, 112, 117, 118, 119, 120, 121, 126, 127, 132, 133, 134, 135, 136, 137, 139, 143, 144, 145, 146, 149, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 256, 279, 285, 321, 334, 335, 358, 366, 367, 375, 409, 428, 436, 437, 443, 462, 479, 487, 488, 494, 497, 510, 533, 541, 542, 550, 567, 574, 591, 594, 595, 597, 612, 616, 623, 632, 638, 641, 646, 651, 661, 662, 664, 665, 669, 676, 681, 686, 688, 692, 699, 706, 710, 712, 714, 715, 716, 717, 718, 824, 830, 831, 840, 841, 843, 861, 865, 870, 887, 900, 904, 912, 913, 914, 927, 928, 930, 932, 933, 934, 938, 939, 941, 942, 943, 945, 946, 947, 948, 952, 956, 958, 959, 960, 961, 962, 968, 972, 973, 974, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 996, 1015, 1018, 1053, 1055, 1058, 1060], "e1004075": [657, 663], "e157": 132, "e_": [652, 653], "e_1": [652, 653], "e_d": 137, "e_h": 133, "e_i": 653, "e_matrix": 831, "each": [0, 1, 3, 13, 14, 15, 18, 34, 45, 46, 47, 51, 53, 65, 75, 80, 83, 84, 88, 91, 94, 98, 99, 100, 101, 102, 103, 104, 116, 128, 141, 143, 144, 145, 146, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 256, 267, 268, 277, 321, 335, 340, 350, 355, 358, 364, 367, 380, 382, 397, 410, 421, 426, 428, 434, 437, 447, 449, 462, 472, 477, 479, 485, 488, 499, 501, 525, 530, 533, 539, 542, 555, 557, 572, 574, 584, 589, 591, 595, 600, 602, 612, 616, 626, 628, 641, 646, 648, 651, 655, 656, 658, 659, 660, 661, 664, 669, 678, 679, 692, 702, 703, 714, 715, 716, 717, 718, 719, 722, 723, 724, 734, 735, 746, 756, 757, 767, 768, 790, 800, 801, 811, 812, 813, 814, 824, 828, 829, 831, 832, 833, 835, 838, 841, 842, 860, 868, 870, 881, 887, 889, 901, 904, 907, 985, 991, 1053, 1055, 1060], "earlier": 1060, "earth": 146, "earthmicrobiom": 146, "easi": [183, 184, 192], "easier": [256, 612], "easili": [187, 1055], "ebi": [98, 101, 182, 185, 256], "ec_numb": 182, "ecoli": [179, 857], "ecolog": [1, 114, 813, 828, 833], "ecologi": [1, 114, 116, 117, 124, 125, 140, 646, 714, 715, 716, 717, 813, 827, 828, 833, 834, 835], "ecologist": 827, "ed": [118, 181], "edg": [188, 722, 827, 930, 983], "edit": [192, 716, 834], "editor": 183, "edu": [107, 111, 180, 183, 188, 190, 991], "educ": [0, 840], "edward": 185, "eeb": [107, 111], "eeeee": 193, "eeeeeeee": 193, "eeeeeeeeeeh": 193, "eeeeeeeehhh": 193, "effect": [53, 104, 114, 143, 144, 192, 235, 393, 459, 512, 569, 610, 623, 676, 699, 838, 840, 841, 842], "effici": [0, 3, 187, 705], "efficiencywarn": 843, "effort": 185, "egozcu": [643, 652, 653, 657, 661, 663], "eh": 116, "eifcyilkinitilqfsitengmnefndatlpveeallntyridyyyrhlyi": 182, "eigendecomposit": [718, 833], "eigenvalu": [718, 814, 827, 833, 835], "eigenvector": [718, 828, 833], "eigh": [718, 833], "eight": 842, "eigval": [189, 814], "either": [1, 65, 72, 92, 94, 98, 99, 100, 132, 178, 192, 193, 206, 207, 208, 321, 370, 380, 411, 447, 499, 545, 555, 600, 642, 716, 718, 812, 824, 827, 832, 840, 842, 858, 859, 885, 893, 901, 991], "elem": [870, 904], "element": [15, 47, 53, 187, 235, 616, 628, 648, 652, 653, 669, 679, 692, 703, 801, 824, 827, 831, 832, 836, 839, 841, 842, 843, 844, 847, 870, 873, 889, 904, 1015], "elementwis": 830, "elev": 715, "ellaps": 912, "elong": 986, "els": [32, 33, 188, 195, 207, 227, 231, 341, 394, 412, 460, 463, 513, 516, 570, 574, 575, 829, 868, 892, 907, 934], "elsevi": [716, 813, 827, 828, 835], "elsewher": [116, 141, 143, 144, 145], "emb": [161, 162, 174, 175], "embed": [813, 1052], "embedding_ptr": 181, "embl": [185, 194, 256, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611], "embl_gen": 182, "embl_str": 182, "emboss": [98, 101], "emboss_needl": 98, "emboss_wat": 101, "embptr": 181, "embryophyta": 182, "emdptr": 181, "emorg": 179, "emperor": 824, "emploi": 111, "empti": [20, 66, 89, 117, 179, 183, 186, 190, 224, 225, 367, 375, 437, 443, 488, 494, 542, 550, 595, 597, 626, 646, 678, 702, 840, 847, 879, 893, 896, 897, 934, 984, 995, 1053], "en": [183, 184, 193, 992], "ena": [182, 185], "enabl": [3, 904, 1018, 1060], "encod": [3, 19, 52, 160, 173, 176, 183, 184, 191, 195, 196, 235, 321, 661, 813], "encode_miss": [254, 255, 301, 302, 319, 320, 338], "encount": [1, 192, 943, 945, 952], "encourag": 841, "end": [0, 53, 98, 99, 100, 101, 102, 103, 104, 150, 178, 179, 182, 183, 184, 185, 186, 193, 194, 256, 266, 277, 283, 359, 378, 409, 429, 446, 480, 498, 534, 553, 592, 599, 974], "endpoint": [842, 981], "enforc": [183, 321, 574], "engel": 126, "engin": 1019, "english": [188, 716], "enough": [114, 183, 188, 842], "enrol": 842, "ens_": 114, "ens_pi": 114, "enspi": 137, "ensur": [1, 53, 84, 116, 143, 144, 195, 340, 462, 515, 614, 648, 651, 655, 667, 688, 690, 900, 933, 995], "entail": [116, 141, 143, 144, 145], "entir": [1, 15, 16, 47, 48, 53, 65, 112, 340, 462, 515, 574, 847, 904, 908], "entiti": [139, 256, 904], "entrez": 194, "entri": [118, 176, 177, 182, 194, 812, 865, 868, 890, 891, 906, 907, 911], "entropi": [84, 120, 135], "enumer": 53, "env": [715, 864], "environ": [107, 143, 144, 658, 828, 902], "environment": [132, 715, 813, 828, 833, 834], "enzym": 128, "eq": [830, 831], "equal": [1, 3, 15, 47, 70, 79, 84, 105, 107, 139, 143, 144, 145, 183, 239, 245, 257, 263, 269, 275, 286, 292, 304, 310, 322, 328, 345, 354, 400, 406, 416, 425, 467, 476, 520, 529, 574, 579, 588, 612, 614, 621, 641, 658, 667, 674, 690, 697, 714, 716, 717, 718, 720, 722, 812, 827, 832, 833, 836, 841, 842, 843, 845, 866, 935, 991, 995, 996], "equat": [110, 111, 117, 128, 716], "equit": [133, 137], "equival": [77, 114, 116, 132, 184, 192, 343, 344, 367, 369, 390, 391, 397, 410, 414, 415, 437, 457, 465, 466, 488, 509, 518, 519, 542, 544, 565, 566, 572, 577, 578, 595, 609, 623, 638, 641, 646, 676, 686, 699, 712, 716, 813, 1055], "erb": [657, 663], "eredi": 118, "erik": [53, 104], "error": [1, 84, 116, 128, 132, 141, 143, 144, 145, 183, 184, 190, 192, 195, 235, 280, 321, 335, 393, 459, 512, 569, 610, 714, 716, 718, 838, 842, 909, 997, 1053], "escap": 188, "especi": [176, 183, 192, 722, 835], "essenti": 185, "esti": 115, "estim": [53, 107, 110, 111, 115, 117, 119, 121, 122, 123, 128, 134, 651, 832, 840, 841, 842], "estrang": 188, "et": [646, 651, 722, 844, 911], "etc": [93, 97, 118, 161, 162, 174, 175, 183, 184, 192, 227, 228, 229, 231, 232, 233, 253, 256, 282, 284, 300, 318, 336, 337, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 612, 633, 639, 682, 687, 707, 713, 825, 826, 833, 835, 887, 895, 910, 912, 969, 990, 1054, 1055], "euclidean": [643, 664, 715, 827, 833, 835], "euclidian": 833, "eudicotyledon": 182, "eukaryota": 182, "euryarchaeota": [951, 984], "evalu": [116, 132, 178, 179, 347, 418, 469, 522, 581, 664, 715, 812, 838, 934, 971, 974, 1058, 1060], "evaul": 195, "even": [98, 99, 100, 106, 120, 126, 133, 137, 183, 188, 409, 714, 718, 842, 985], "evenli": [658, 824], "everi": [107, 192, 194, 330, 645, 658, 659, 660, 661, 662, 719, 933, 948, 954], "evid": [182, 188], "evmltdiprlhindpimk": 193, "evolut": [183, 188, 190, 721, 722, 932, 991, 992], "evolutionari": [116, 612, 624, 912, 992], "ex": 1060, "exact": [116, 132, 141, 143, 144, 145, 192, 256, 358, 428, 479, 533, 591, 718, 833, 1053], "exactli": [65, 82, 85, 91, 101, 102, 103, 183, 184, 190, 195, 254, 301, 319, 321, 345, 354, 400, 416, 425, 467, 476, 520, 529, 579, 588, 662, 824, 930], "examin": [1019, 1060], "exampl": [0, 1, 3, 13, 14, 15, 17, 18, 19, 45, 46, 47, 50, 51, 52, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 116, 143, 144, 145, 150, 163, 187, 192, 195, 206, 207, 208, 236, 256, 266, 278, 283, 321, 340, 341, 342, 345, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 399, 400, 408, 409, 410, 411, 412, 413, 416, 418, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 462, 463, 464, 467, 469, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 515, 516, 517, 520, 522, 525, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 579, 581, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 623, 624, 627, 630, 632, 635, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 665, 676, 681, 684, 686, 699, 706, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 812, 824, 833, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 913, 914, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 995, 997, 1017, 1053, 1054, 1055, 1056, 1058, 1060], "example_protein_embed": 181, "example_t": [177, 863, 882, 883, 884, 887, 888, 902, 903], "exce": [183, 190], "exceed": 192, "excel": [184, 192], "except": [1, 183, 188, 189, 190, 192, 207, 409, 626, 678, 702, 717, 828, 940, 991, 993, 994, 1029, 1059], "excit": 1060, "exclud": [191, 661, 703, 710, 977], "exclude_absent_taxa": 936, "exclus": [195, 256, 266, 277, 359, 378, 429, 446, 480, 498, 534, 553, 592, 599, 646], "execut": [195, 735, 779, 1019, 1041, 1060], "exercis": 840, "exhibit": 827, "exist": [0, 94, 107, 112, 177, 188, 195, 206, 207, 208, 224, 225, 409, 612, 624, 628, 664, 679, 703, 716, 719, 824, 864, 870, 876, 912, 929, 937, 942, 944, 975, 1016, 1041, 1055], "exon": [186, 256, 383, 450, 502, 515, 558, 574, 603], "exp": [645, 650, 657, 663], "expand": [722, 887, 984], "expect": [1, 146, 178, 195, 223, 340, 462, 515, 651, 652, 653, 664, 722, 827, 828, 835, 860, 869, 870, 885, 904, 983, 1060], "expens": 847, "experi": [0, 182, 185, 192, 646, 651, 841], "experienc": 842, "experiment": [182, 718, 1054], "explain": [185, 186, 189, 723, 757, 801, 813, 814, 827, 833, 835], "explan": [827, 828], "explanatori": [722, 813, 814, 828, 835], "explicit": 184, "explicitli": [132, 190, 192, 393, 459, 512, 569, 610, 813], "explor": [1, 142, 813], "exploratori": 1, "expon": [188, 660], "export": 192, "expos": 870, "express": [140, 366, 394, 436, 460, 487, 513, 541, 570, 594, 651, 657, 663, 841, 1055], "ext": [253, 300, 318, 337], "extend": [0, 53, 82, 92, 98, 99, 100, 101, 102, 103, 116, 841, 929, 942, 991, 1053], "extens": [182, 192, 253, 300, 318, 337], "extern": 188, "extinct": 116, "extra": [194, 195, 714, 715, 717, 718, 779], "extract": [616, 651, 664, 665, 669, 692, 714, 718, 828, 932, 1055], "extrapol": [122, 123, 838], "extrem": 716, "f": [1, 53, 92, 108, 122, 132, 146, 177, 178, 179, 181, 184, 188, 191, 193, 194, 236, 462, 716, 717, 718, 828, 831, 838, 841, 859, 860, 870, 893, 896, 904, 906, 907, 913, 914, 927, 928, 930, 932, 933, 934, 938, 939, 941, 942, 943, 945, 946, 947, 948, 952, 958, 959, 960, 961, 962, 968, 972, 973, 974, 977, 978, 979, 981, 982, 986, 987, 988, 989, 991, 1058], "f_1": [107, 110, 115, 119, 134], "f_2": [110, 115], "f_i": 107, "f_onewai": 646, "fabacea": 182, "fabal": 182, "fabid": 182, "facilit": [116, 143, 144, 146, 176, 688, 813, 838, 940, 992], "fact": 409, "factor": [132, 143, 144, 714, 717, 722, 828, 842], "factori": [195, 206, 207, 208, 220, 230], "fail": [116, 117, 132, 141, 143, 144, 145, 280, 718, 838, 1018, 1019, 1060], "fail_callback": [1019, 1060], "fail_f": 1060, "failur": [107, 1019, 1060], "fairli": 722, "faith": [1, 116, 132, 664], "faith_pd": [1, 132], "fall": [118, 121, 132, 144, 812], "fals": [1, 32, 33, 53, 66, 67, 68, 69, 70, 82, 83, 85, 88, 89, 90, 91, 95, 98, 99, 100, 110, 111, 116, 132, 141, 143, 144, 145, 150, 163, 178, 181, 182, 183, 184, 185, 186, 188, 191, 206, 207, 208, 235, 236, 249, 252, 254, 255, 256, 266, 278, 279, 296, 299, 301, 302, 314, 317, 319, 320, 330, 338, 340, 341, 342, 343, 345, 347, 354, 357, 358, 360, 361, 362, 364, 367, 368, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 409, 410, 411, 412, 413, 414, 416, 418, 425, 428, 430, 431, 432, 434, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 469, 476, 479, 481, 482, 483, 485, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 522, 529, 532, 533, 535, 536, 537, 539, 542, 543, 545, 546, 547, 548, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 579, 581, 588, 591, 595, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 613, 614, 621, 623, 646, 651, 657, 663, 666, 667, 674, 676, 689, 690, 697, 699, 703, 705, 716, 719, 722, 723, 724, 746, 757, 790, 833, 835, 838, 840, 841, 843, 860, 867, 868, 871, 879, 880, 881, 882, 890, 891, 893, 897, 900, 902, 903, 904, 907, 909, 930, 935, 936, 939, 947, 953, 956, 957, 962, 970, 982, 984, 985, 987, 996, 1018, 1041, 1055, 1058, 1060], "famili": 1, "far": 827, "farthest": 974, "fasffbf": 184, "fast": [116, 143, 144, 723, 833, 885], "fasta": [93, 97, 184, 186, 191, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 1053], "fasta_fl": 183, "fasta_format": 183, "faster": [1, 116, 143, 144, 146, 367, 397, 410, 437, 488, 542, 572, 595, 718, 833, 965], "fastq": [93, 97, 191, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 1053], "fastq_format": 184, "favor": [104, 656], "fc": 651, "fd": [116, 1017], "fdr_bh": [646, 651], "featur": [1, 118, 129, 177, 183, 186, 192, 193, 256, 266, 269, 278, 280, 281, 283, 321, 340, 462, 515, 574, 643, 646, 651, 661, 814, 823, 827, 828, 834, 835, 900, 996, 1054, 1055, 1056], "feature_t": 185, "fecal": 842, "federhen": 194, "fee": [183, 190], "felsenstein": [183, 190, 1058], "fernand": 651, "fernandez": [643, 655], "ferr": 185, "fetch": [266, 900, 1058], "fetureid": 192, "few": [116, 143, 144, 146, 870, 904, 1053, 1058, 1060], "fewer": [107, 190, 841, 842], "fff": 184, "ffffx": 184, "ffllssssyi": 399, "fglfmeqlttgdysksmrrivknrlpkfskfesslvngsfdfiginyysssi": 182, "fh": [178, 179, 180, 183, 184, 185, 186, 190, 191, 193, 194, 195, 206, 207, 208], "field": [1, 179, 184, 191, 399, 813, 870, 904], "fifth": 183, "fig": [1, 632, 681, 706, 824], "figur": [632, 681, 706, 824], "file": [93, 97, 161, 162, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 207, 220, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 253, 282, 284, 300, 318, 321, 334, 336, 337, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 632, 633, 639, 646, 664, 681, 682, 687, 706, 707, 713, 745, 778, 789, 824, 825, 826, 840, 844, 857, 858, 859, 860, 861, 865, 869, 870, 872, 876, 885, 891, 893, 894, 895, 898, 899, 904, 905, 906, 907, 910, 911, 932, 969, 990, 1016, 1017, 1052, 1058], "fileformaterror": 195, "filehandl": [93, 97, 161, 162, 174, 175, 195, 206, 207, 208, 227, 228, 229, 231, 232, 233, 235, 236, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990], "filenam": 1016, "filepath": [93, 97, 161, 162, 174, 175, 227, 228, 229, 231, 232, 233, 235, 253, 282, 284, 300, 318, 334, 336, 337, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 719, 825, 826, 895, 910, 969, 990], "filesentinel": [195, 206, 208], "filter": [53, 84, 104, 191, 247, 248, 294, 295, 312, 313, 321, 330, 331, 361, 431, 482, 536, 719, 858, 859, 900, 984, 1060], "filter_column": 331, "filter_f": 984, "filter_fn": 868, "filter_id": [249, 296, 314, 330, 333], "final": [193, 722, 860, 905, 906, 1060], "find": [0, 117, 360, 362, 365, 368, 378, 380, 385, 387, 388, 430, 432, 435, 438, 446, 447, 452, 454, 455, 481, 483, 486, 489, 498, 499, 504, 506, 507, 510, 535, 537, 540, 543, 553, 555, 560, 562, 563, 599, 600, 605, 607, 715, 718, 722, 828, 842, 881, 927, 928, 940, 942, 943, 946, 947, 948, 953, 955, 956, 957, 958, 960, 961, 968, 972, 977, 986, 988, 989, 1015], "find_al": [945, 947, 948], "find_by_func": [945, 946, 948], "find_by_id": [945, 946, 947], "find_motif": [380, 447, 499, 555, 600, 1055], "find_with_regex": [380, 447, 499, 555, 600, 1055], "fine": 907, "firmicut": [887, 950, 951, 984], "first": [1, 3, 50, 53, 98, 99, 100, 101, 102, 103, 104, 107, 116, 143, 144, 150, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 278, 283, 378, 380, 396, 397, 409, 446, 447, 498, 499, 553, 555, 571, 574, 599, 600, 616, 644, 645, 646, 651, 658, 669, 692, 714, 716, 746, 801, 813, 829, 838, 841, 865, 876, 906, 932, 936, 945, 946, 951, 954, 984, 985, 1029, 1053, 1058, 1060], "fish": 813, "fisher": 117, "fit": [128, 651, 812, 814, 835, 1059], "five": [183, 194, 632, 646, 681, 706, 992], "fix": [122, 187, 190], "fl": 183, "flag": [194, 1058], "flat": [185, 380, 447, 499, 555, 600], "flatfil": 182, "flatten": 832, "float": [84, 88, 98, 99, 100, 101, 102, 103, 104, 105, 116, 121, 122, 132, 141, 143, 144, 145, 146, 149, 176, 178, 185, 187, 188, 192, 321, 338, 363, 369, 370, 384, 386, 433, 451, 453, 484, 503, 505, 538, 544, 545, 559, 561, 593, 604, 606, 628, 630, 641, 642, 646, 651, 655, 656, 660, 663, 664, 665, 679, 703, 716, 718, 720, 722, 735, 779, 824, 839, 841, 842, 847, 870, 871, 873, 874, 885, 901, 904, 912, 927, 935, 936, 937, 942, 943, 952, 983, 991, 995], "float32": [176, 181, 718, 902], "float64": [1, 92, 176, 181, 358, 428, 479, 533, 591, 646, 710, 718, 813, 870, 904], "flush": 235, "fmet": 409, "fn": 1016, "focu": 195, "focus": [321, 835], "fold": [651, 1053], "folder": 1016, "follow": [1, 89, 90, 92, 104, 111, 116, 117, 132, 143, 144, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 256, 321, 340, 347, 375, 377, 418, 443, 445, 462, 469, 494, 496, 515, 522, 550, 552, 574, 581, 597, 598, 616, 624, 644, 645, 646, 649, 650, 652, 653, 654, 658, 660, 661, 664, 669, 692, 714, 715, 716, 718, 719, 723, 824, 827, 842, 931, 968, 1019, 1053, 1058, 1060], "foo": [186, 192, 266, 574, 847, 860, 861, 870, 871, 886, 896, 904, 906, 907, 1017, 1060], "foobar": [861, 1060], "foral": [649, 650], "foraminifera": 108, "ford": 132, "form": [1, 65, 98, 237, 616, 665, 669, 688, 692, 710, 855, 856, 865, 869, 906, 983], "formal": [184, 194, 643], "format": [3, 45, 93, 97, 161, 162, 174, 175, 209, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 253, 256, 282, 284, 300, 303, 318, 321, 334, 336, 337, 339, 389, 394, 398, 399, 407, 456, 460, 461, 508, 513, 514, 564, 570, 573, 608, 611, 633, 634, 639, 665, 682, 683, 687, 688, 700, 705, 707, 708, 713, 745, 778, 789, 825, 826, 844, 865, 869, 870, 871, 872, 895, 902, 904, 905, 906, 910, 911, 930, 950, 969, 990, 992, 1052, 1057, 1058], "format_f": 904, "format_nam": [221, 222, 223], "format_object": 219, "format_url": 871, "format_vers": [177, 844, 870, 904, 911], "formatidentificationwarn": [227, 231], "former": 612, "formula": [118, 718], "forum": 192, "forward": [1, 397, 409, 410, 572], "fould": 935, "found": [53, 139, 177, 179, 182, 183, 184, 185, 188, 190, 193, 227, 229, 231, 233, 393, 459, 512, 569, 610, 626, 678, 702, 715, 716, 718, 842, 870, 904, 935, 945, 946, 947, 948, 958, 960, 976, 991], "foundat": 184, "four": [65, 184, 193, 340, 462, 515, 646, 824], "fourth": 3, "fr": 991, "frac": [107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 124, 125, 126, 127, 128, 133, 134, 137, 140, 644, 645, 649, 654, 655, 656, 658, 659, 660, 661, 716, 835], "fraction": [108, 642, 842, 873, 936, 1058], "fraction_diff": [363, 433, 484, 538, 593], "fraction_sam": [363, 433, 484, 538, 593], "frame": [178, 179, 397, 409, 410, 572, 651, 715, 950], "framework": [132, 643], "free": [194, 1018, 1060], "freedom": [651, 657, 663, 832, 839], "freq": [367, 382, 437, 449, 488, 501, 542, 557, 595, 602], "frequenc": [1, 84, 88, 107, 119, 369, 370, 382, 384, 386, 449, 451, 453, 501, 503, 505, 544, 545, 557, 559, 561, 602, 604, 606, 838, 840, 842, 912, 932], "frequent": [847, 912, 934], "friedman": 646, "friedmanchisquar": 646, "from": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 44, 45, 46, 47, 48, 50, 51, 52, 53, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 112, 116, 121, 132, 139, 140, 143, 144, 150, 161, 163, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 227, 231, 247, 254, 255, 256, 265, 266, 278, 279, 282, 285, 294, 301, 302, 312, 319, 320, 321, 334, 335, 336, 338, 340, 341, 342, 345, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 409, 410, 411, 412, 413, 416, 418, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 462, 463, 464, 467, 469, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 515, 516, 517, 520, 522, 525, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 579, 581, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 616, 623, 624, 627, 628, 630, 632, 633, 635, 636, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 676, 679, 681, 682, 684, 686, 692, 699, 703, 706, 707, 709, 710, 712, 714, 715, 716, 718, 719, 720, 722, 723, 724, 812, 813, 824, 825, 827, 828, 830, 831, 833, 838, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 913, 914, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 997, 1017, 1019, 1055, 1058, 1060], "from_": [623, 676, 699], "from_dict": [96, 714, 718, 723, 824, 840, 841], "from_hdf5": 904, "from_iter": 640, "from_ncbi": [399, 400, 409, 410, 571, 572], "from_path_seq": [16, 48], "from_tabular": [3, 17], "from_taxdump": 951, "from_taxonomi": [950, 984], "front": [283, 661], "frontier": 132, "frozenset": [934, 978, 979], "fsvd": [718, 833], "ft_current": 256, "ftp": [182, 194, 256], "full": [122, 123, 180, 181, 646, 847, 860, 882, 948, 974, 1016], "full_genome_avail": [868, 893], "fulli": [3, 132, 185, 1053], "fun": 1060, "func": [872, 896, 934, 947, 971, 976, 987, 998, 1031, 1042], "function": [1, 98, 99, 100, 116, 117, 122, 123, 128, 131, 143, 144, 145, 146, 149, 183, 184, 191, 206, 207, 208, 221, 222, 223, 226, 256, 266, 278, 340, 363, 399, 433, 462, 484, 515, 538, 593, 612, 628, 641, 644, 645, 646, 649, 650, 652, 653, 656, 661, 679, 703, 715, 716, 717, 718, 719, 720, 723, 812, 828, 837, 840, 841, 842, 844, 860, 865, 868, 870, 872, 885, 893, 896, 898, 904, 905, 906, 907, 911, 930, 934, 937, 942, 947, 971, 976, 984, 986, 987, 992, 993, 995, 996, 997, 998, 1016, 1018, 1030, 1031, 1041, 1042, 1052, 1053, 1054, 1055, 1058], "further": [195, 321, 841, 1058], "futher": 195, "futur": [116, 132, 143, 144, 183], "fuzzi": [186, 256, 257, 265, 266, 277, 278, 574], "g": [0, 1, 53, 70, 84, 85, 92, 100, 103, 118, 121, 128, 132, 146, 149, 178, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 194, 195, 256, 285, 321, 334, 340, 347, 350, 355, 358, 359, 366, 367, 368, 369, 370, 380, 418, 421, 426, 428, 429, 436, 437, 438, 447, 462, 469, 472, 477, 479, 480, 487, 488, 489, 499, 515, 522, 525, 530, 533, 534, 541, 542, 543, 544, 545, 555, 574, 581, 584, 589, 591, 592, 594, 595, 600, 612, 616, 624, 630, 641, 646, 661, 664, 665, 669, 688, 692, 710, 714, 715, 717, 718, 824, 841, 842, 870, 887, 900, 904, 912, 933, 934, 939, 942, 946, 973, 974, 975, 977, 978, 984, 987, 988, 989, 991, 1018, 1053, 1055, 1058, 1060], "g1": 718, "g2": 718, "g_m": 649, "ga": [574, 1055], "gaa": 1055, "gaagcaatgc": 182, "gaagttgagt": 182, "gaatcaagcc": 182, "gabor": [53, 104], "gac": [381, 448, 500, 556, 601], "gacccgcuuu": 1055, "gacg": [381, 448, 500, 556, 601], "gacgtt": [372, 373, 440, 441, 491, 492, 547, 548], "gag": [393, 459, 512, 569, 610], "gagatagagt": 182, "gagcccgggc": [183, 190], "gagccgtggc": [183, 190], "gagcggaggc": 182, "gaggacttcg": 182, "gaggtattgg": 182, "gagrctc": [393, 459, 512, 569, 610], "gain": [321, 664, 833], "gair": 183, "gairaagccttggc": 190, "gamma": 107, "gap": [0, 3, 13, 15, 17, 19, 34, 44, 47, 52, 53, 83, 84, 88, 92, 98, 99, 100, 101, 102, 103, 150, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 340, 357, 358, 361, 364, 365, 369, 370, 373, 380, 391, 392, 393, 395, 396, 397, 399, 409, 410, 411, 428, 431, 434, 435, 441, 447, 458, 459, 462, 479, 482, 485, 486, 492, 499, 511, 512, 515, 532, 533, 536, 539, 540, 544, 545, 548, 555, 566, 567, 568, 569, 571, 572, 574, 591, 600, 610, 641, 984, 1055, 1060], "gap_char": [361, 411, 431, 482, 536], "gap_charact": [393, 459, 512, 569, 610], "gap_extend_penalti": [53, 98, 99, 100, 101, 102, 103], "gap_mod": 84, "gap_open_penalti": [53, 98, 99, 100, 101, 102, 103], "gapopen": [178, 179], "garbag": 235, "gardnerella": 842, "garrison": [53, 104], "gascuel": 992, "gaston": 116, "gataccttca": 182, "gatcacttga": 182, "gatcttcccc": 182, "gatgcaacac": 182, "gather": [638, 686, 712, 1058], "gattattcta": 182, "gattttcgag": 182, "gauu": [385, 387, 452, 454, 504, 506, 560, 562, 605, 607], "gb": [179, 185], "gb_str": 185, "gbk": 185, "gc": [83, 182, 183, 184, 185, 186, 194, 340, 357, 358, 361, 364, 370, 391, 395, 400, 410, 428, 431, 434, 479, 482, 485, 515, 532, 533, 536, 539, 545, 566, 567, 591, 1055], "gc_content": [370, 545], "gc_frequenc": [369, 544], "gcaattttca": 182, "gcacatccct": 185, "gcacaucccu": 185, "gcagaagctg": 182, "gcagatgtg": 642, "gcatgcatgc": 186, "gcatggtcat": 182, "gcaugcaucugcauacguacguacgcaugca": 180, "gcaugcaucugcauacguacguacgcaugcagucgauacauacguacgucgguacgu": 180, "gcaugcaucugcauacguacguacgcaugcauca": 180, "gccaaaccca": 182, "gcccagtagcttcccaatatgagagcatcaattgtagatcgggcc": 0, "gccccccuuu": 1055, "gcgtatagtt": 182, "gcgtgcctaaggtatgcaag": 0, "gctaactaggctcccttctacccctctcagaga": 0, "gctgccgaga": 182, "gctgttattt": 182, "gcttcatctt": 182, "gen": [186, 1060], "gen1": 186, "gen2": 186, "gena": 256, "genbank": [182, 186, 194, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611], "gender": [664, 840, 841], "gene": [1, 186, 256, 266, 278, 281, 340, 574, 651, 657, 663, 844, 911, 1054], "gene_nam": 256, "genea": 857, "geneb": 857, "gener": [1, 14, 18, 19, 46, 50, 51, 52, 82, 85, 98, 104, 105, 106, 124, 132, 146, 181, 184, 185, 186, 188, 193, 194, 206, 208, 221, 223, 227, 231, 234, 366, 380, 381, 436, 447, 448, 487, 499, 500, 541, 555, 556, 574, 594, 600, 601, 612, 651, 664, 714, 715, 716, 720, 812, 814, 824, 827, 838, 841, 842, 870, 880, 881, 889, 893, 904, 1053, 1055, 1059], "generated_bi": [844, 871, 904, 905, 911], "generatortyp": [880, 882, 893], "genet": [183, 188, 190, 194, 396, 397, 399, 400, 406, 407, 408, 409, 410, 571, 572, 721, 991, 1055], "genetic_cod": [571, 572], "geneticcod": [397, 571, 572, 1055], "genom": [1, 266], "genpept": 185, "gentil": 661, "genu": [1, 194], "geologi": 643, "geometr": [647, 649, 651, 661, 718], "geometri": [643, 645, 649, 650, 653], "geq": 835, "gerald": 661, "get": [105, 177, 181, 192, 235, 236, 265, 266, 399, 408, 664, 716, 812, 828, 868, 875, 876, 877, 878, 884, 886, 888, 890, 891, 909, 939, 978], "get_alpha_diversity_metr": [1, 141, 148], "get_beta_diversity_metr": [1, 145, 147, 149], "get_column": 333, "get_id": [247, 248, 252, 294, 295, 299, 312, 313, 317, 331, 332], "get_max_dist": 943, "get_nam": 624, "get_trajectori": 723, "get_value_by_id": 863, "getaaafhwqaaf": 191, "getvalu": [180, 183, 184, 185, 186, 190, 193, 664], "gff": 186, "gff3": [185, 282, 284, 389, 398, 456, 461, 608, 611], "gff_str": 186, "gfgmvinn": 193, "gfp": 1055, "gfv": 193, "gg": [359, 365, 429, 435, 480, 486, 534, 540, 592], "gg_otu_1": [870, 871], "gg_otu_2": 871, "gg_otu_3": 871, "gg_otu_4": 871, "gg_otu_5": 871, "gga": 1055, "ggaa": [358, 428, 479, 533, 591], "ggacugaa": 1055, "ggag": [365, 435, 486, 540], "ggattgttta": 182, "ggca": 0, "ggctaacggt": 182, "ggg": 1055, "ggggagg": [365, 435, 486, 540], "gggtttttac": 182, "ggt": [193, 390, 457, 509, 565, 609], "ggta": 0, "ggtaccaacg": [390, 457, 509, 565, 609], "ggtacgcaag": 0, "ggtc": [361, 431, 482, 536], "ggtccattc": [361, 431, 482, 536], "ggtggtttct": 182, "ggtgtttagc": 182, "ggtt": 864, "ggu": [342, 413, 464, 517, 576], "gguc": [350, 352, 355, 363, 384, 385, 386, 387, 421, 423, 426, 433, 451, 452, 453, 454, 472, 474, 477, 484, 503, 504, 505, 506, 525, 527, 530, 538, 559, 560, 561, 562, 584, 586, 589, 593, 604, 605, 606, 607], "ggucg": [347, 359, 418, 429, 469, 480, 522, 534, 581, 592], "ggucguaaagga": [356, 427, 478, 531, 590], "ggucgugaag": 574, "ggucgugaagga": [342, 347, 413, 418, 464, 469, 517, 522, 574, 576, 581], "gi": [178, 179, 185], "gigasci": [824, 844, 911], "gilk": 722, "gini": [118, 136], "gish": [178, 179], "github": 824, "give": [1, 188, 827, 828, 835, 844, 911, 937], "given": [1, 13, 14, 15, 45, 46, 47, 93, 97, 107, 118, 121, 126, 128, 137, 141, 145, 146, 149, 161, 162, 174, 175, 183, 184, 188, 189, 192, 206, 208, 224, 225, 227, 228, 231, 232, 279, 282, 284, 336, 339, 389, 393, 398, 456, 459, 461, 508, 512, 514, 564, 569, 573, 608, 610, 611, 628, 633, 639, 661, 679, 682, 687, 703, 707, 713, 715, 716, 719, 825, 826, 828, 832, 837, 839, 841, 875, 877, 885, 893, 895, 909, 910, 912, 947, 969, 990, 1017, 1018, 1030, 1060], "gkp1137": 184, "glahn": [643, 657, 663], "gln": 462, "global": [0, 98, 99, 100], "global_pairwise_align": [99, 100, 101, 102, 103], "global_pairwise_align_nucelotid": [98, 100, 101, 102, 103], "global_pairwise_align_nucleotid": 0, "global_pairwise_align_protein": [98, 99, 101, 102, 103], "glossari": 84, "glu": 462, "glucosidas": 182, "glutam": 462, "glutamin": 462, "glx": 462, "gly": 462, "glycin": [84, 462], "glycosyl": [380, 447, 486, 499, 555, 600, 1055], "go": [842, 900, 1058, 1060], "goa": 182, "goal": [192, 1053], "goldman": 132, "gonzalez": 824, "good": [115, 119, 833], "goodrich": 935, "googl": 192, "gorilla": [183, 190], "gorlick": 193, "goto": 184, "gouet": [122, 123], "gov": [84, 99, 100, 102, 103, 178, 179, 183, 185, 191, 194, 399, 407, 408], "gracilibacteria": 399, "gradient": [118, 813, 827, 828, 833, 835], "gradientanova": [724, 746, 790, 801], "gradientanovaresult": [734, 756, 767, 800, 811], "graft": 986, "gram": [652, 653], "grammar": [411, 574], "grammaredsequ": [65, 75, 80, 82, 85, 86, 98, 101, 180, 183, 190, 193, 340, 361, 364, 392, 462, 482, 485, 511, 515, 536, 539, 568, 1055], "grand": 912, "grant": [183, 190], "greater": [183, 266, 341, 412, 463, 516, 575, 651, 714, 716, 717, 718, 719, 722, 841, 842, 843, 876], "grei": 824, "group": [1, 139, 192, 394, 460, 513, 570, 623, 646, 651, 661, 676, 699, 714, 717, 718, 723, 724, 734, 735, 756, 767, 779, 789, 790, 800, 811, 813, 840, 841, 842, 855, 870, 875, 893, 904, 1018, 1054, 1058], "group1": 714, "group2": 714, "group3": 714, "group_md": 855, "group_observation_md": 875, "groupbi": 841, "groupresult": 735, "growth": [651, 841], "gsi": 661, "gt": [17, 91], "gt10": 182, "gtaacctgag": 182, "gtaag": 3, "gtacct": [180, 190], "gtagaggacc": 182, "gtagct": [180, 190], "gtatct": 190, "gtcgaa": [180, 190], "gtt": [381, 448, 500, 556, 601], "gttaatgcca": 182, "gttactcaac": 182, "gttcggcctc": 182, "gttgaccaat": 182, "gttgggatta": 182, "gtttatccaa": 182, "guaaccugag": 182, "guanin": [340, 515], "guarante": [92, 123, 192, 340, 364, 434, 462, 485, 515, 539, 665, 720, 942], "guc": [347, 418, 469, 522, 581], "gucgauacauacguacgucgguacgu": 180, "gucgauacauacguacgucguacguacgu": 180, "guess": [93, 128, 161, 174, 183, 227, 231, 282, 336, 389, 456, 508, 564, 608, 633, 682, 707, 825, 895, 969, 994], "gunnerida": 182, "gut": [1, 192, 824], "gytai": 193, "gzip": [235, 904], "h": [53, 107, 108, 112, 120, 132, 133, 134, 135, 136, 137, 183, 190, 193, 236, 340, 462, 515, 933, 934, 939, 942, 973, 974, 975, 978, 979, 988, 989, 991, 1058], "h5grp": [870, 904], "h5py": [870, 904], "h_": 646, "h_0": 118, "h_b": 109, "h_i": 118, "h_n": 118, "ha": [1, 3, 53, 65, 83, 89, 90, 98, 99, 100, 105, 149, 150, 163, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 228, 232, 235, 252, 299, 317, 321, 334, 340, 357, 358, 361, 364, 374, 375, 376, 377, 388, 391, 395, 396, 397, 399, 409, 410, 411, 428, 431, 434, 442, 443, 444, 445, 455, 462, 479, 482, 485, 493, 494, 495, 496, 507, 515, 532, 533, 536, 539, 549, 550, 551, 552, 563, 566, 567, 571, 572, 574, 591, 596, 597, 598, 646, 648, 664, 812, 827, 829, 840, 841, 842, 860, 868, 885, 933, 953, 956, 957, 971, 975, 991, 1018, 1055, 1058], "habitat": 828, "had": [116, 143, 144, 714, 718, 842], "half": [121, 658], "halobacteria": [951, 984], "ham": [363, 433, 484, 538, 593, 664, 1055], "hamadi": [116, 143, 144], "hand": [1, 833], "handbook": 183, "handi": [1018, 1060], "handl": [84, 92, 183, 184, 191, 193, 194, 195, 196, 206, 208, 235, 321, 334, 409, 410, 646, 716, 718, 719, 838, 847, 860, 885, 894, 985, 992, 1017, 1060], "handler": [196, 227, 229, 231, 233, 235], "happen": [188, 380, 447, 499, 555, 600, 991, 1060], "hard": [116, 141, 143, 144, 145], "hardcod": 115, "harm": 658, "has_children": [956, 957], "has_definit": [360, 362, 372, 376, 388, 430, 432, 440, 444, 455, 481, 483, 491, 495, 507, 535, 537, 547, 551, 563], "has_degener": [362, 371, 376, 432, 439, 444, 483, 490, 495, 537, 546, 551], "has_gap": [368, 438, 489, 543], "has_missing_valu": [247, 249, 294, 296, 312, 314], "has_nuc_pattern": 1060, "has_stop": 510, "hash": [8, 26, 39, 59, 155, 168, 201, 214, 729, 740, 751, 762, 773, 784, 795, 806, 819, 920, 1005, 1024, 1036, 1047], "hashabl": [65, 67, 812, 1041], "hashlib": 1017, "hasn": [574, 843, 907], "have": [0, 1, 19, 52, 53, 83, 86, 88, 91, 92, 104, 106, 116, 121, 133, 137, 143, 144, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 226, 235, 256, 266, 267, 268, 321, 330, 335, 345, 358, 364, 380, 409, 416, 428, 434, 447, 467, 479, 485, 499, 520, 533, 539, 555, 579, 591, 600, 614, 630, 646, 662, 664, 667, 690, 716, 722, 723, 745, 757, 778, 789, 812, 824, 827, 828, 829, 832, 833, 835, 836, 838, 840, 841, 842, 843, 868, 870, 885, 886, 887, 900, 904, 909, 912, 931, 932, 933, 942, 944, 945, 968, 974, 981, 983, 984, 993, 995, 1058, 1060], "hdf5": [176, 177, 181, 844, 870, 904, 911], "hdfgroup": 176, "hdist": 722, "he": 0, "header": [178, 179, 180, 184, 185, 187, 189, 192, 239, 245, 286, 292, 304, 310, 321, 322, 328, 333, 865, 869], "header_kei": [865, 906], "header_valu": [865, 906], "heagawghe": 0, "health": [646, 840, 841], "healthi": [840, 841, 842], "heatmap": [632, 681, 706], "heip": [120, 126], "heip_": 133, "held": 900, "hello": [356, 427, 478, 531, 590], "help": [192, 194], "helper": [6, 24, 37, 57, 73, 153, 166, 199, 212, 241, 259, 271, 288, 306, 324, 348, 402, 419, 470, 523, 582, 617, 670, 693, 727, 738, 749, 760, 771, 782, 793, 804, 817, 848, 918, 995, 996, 1003, 1022, 1034, 1045, 1058], "henc": 716, "henikoff": [100, 103, 624], "here": [0, 1, 84, 107, 111, 116, 121, 126, 128, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 177, 181, 182, 185, 190, 195, 206, 208, 236, 380, 447, 499, 555, 600, 646, 651, 722, 833, 835, 870, 904, 985, 992, 1058], "hernand": 661, "heterogen": 834, "heuer": 184, "heurist": [53, 718, 833], "hexdigest": 1017, "hgc": 194, "hi": 462, "hidden": 194, "hierarch": [194, 661], "hierarchi": [860, 949, 950, 1058], "high": [116, 143, 144, 183, 184, 651, 813, 824, 827, 833, 1056], "higher": [84, 612, 646, 651, 1030], "highest": [53, 188], "highli": [3, 84], "highlight": 184, "hill": 132, "histidin": 462, "histor": [1, 130, 399, 932], "histori": [116, 842], "hit": 179, "hoc": 838, "hochberg": [646, 651], "hoffmann": 132, "hold": [688, 734, 756, 767, 800, 811, 812, 833, 840, 901, 940, 1041], "hollow": [145, 176, 665, 703, 705, 720], "holm": [646, 651], "hommola": 722, "homogen": [718, 827, 835], "homolog": 612, "horizont": 92, "host": [194, 722], "host_dist": 722, "hot": 813, "hotton": 194, "hous": 840, "how": [80, 91, 92, 128, 183, 185, 192, 235, 285, 321, 358, 380, 392, 409, 410, 428, 447, 458, 479, 499, 511, 533, 555, 568, 591, 600, 657, 663, 716, 833, 838, 840, 841, 842, 844, 866, 885, 911, 1053, 1060], "howev": [1, 116, 117, 132, 141, 143, 144, 145, 183, 187, 188, 192, 194, 340, 462, 515, 574, 643, 651, 718, 722, 813, 833, 847, 907, 943, 998], "hsp": [178, 179], "hstack": [840, 841], "htm": 715, "html": [84, 121, 177, 178, 180, 183, 185, 188, 190, 193, 256, 634, 665, 683, 688, 700, 708, 714, 715, 716, 717, 718, 824, 844, 870, 904, 911, 991], "http": [53, 84, 98, 99, 100, 101, 102, 103, 104, 107, 111, 121, 146, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 253, 300, 318, 321, 334, 337, 399, 407, 408, 634, 657, 661, 663, 665, 683, 688, 700, 708, 714, 715, 716, 717, 718, 824, 844, 870, 871, 904, 911, 991, 992, 1017], "huerta": 932, "hugh": 182, "human": [176, 183, 184, 187, 188, 189, 997], "hundr": [1, 146], "hwang": 107, "hydrogenosom": 194, "hypothesi": [643, 646, 651, 716, 719, 722, 838], "hypothet": 256, "h\u00e9bert": 661, "i": [0, 1, 3, 15, 19, 20, 47, 50, 52, 53, 65, 66, 67, 68, 69, 70, 72, 77, 79, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 149, 161, 162, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 206, 207, 208, 220, 221, 223, 227, 228, 229, 230, 231, 232, 233, 235, 239, 245, 253, 256, 257, 263, 265, 266, 269, 275, 277, 278, 279, 280, 282, 284, 285, 286, 292, 300, 304, 310, 318, 321, 322, 328, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 409, 410, 411, 412, 413, 414, 415, 416, 418, 425, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 476, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581, 588, 591, 592, 593, 595, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 621, 623, 626, 631, 632, 633, 634, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 674, 676, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 692, 697, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 745, 757, 778, 789, 790, 801, 812, 813, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 847, 854, 857, 860, 861, 864, 865, 867, 868, 869, 870, 876, 879, 880, 881, 882, 885, 886, 887, 893, 894, 895, 896, 897, 900, 901, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 917, 927, 930, 932, 934, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 954, 956, 957, 958, 960, 962, 963, 965, 968, 969, 973, 976, 978, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 1002, 1015, 1016, 1017, 1018, 1019, 1029, 1030, 1041, 1052, 1053, 1055, 1058, 1059, 1060], "id": [0, 1, 65, 70, 89, 94, 95, 116, 132, 141, 143, 144, 145, 146, 149, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 239, 245, 248, 249, 251, 254, 255, 286, 292, 295, 296, 298, 301, 302, 304, 310, 313, 314, 316, 319, 320, 321, 322, 328, 330, 331, 333, 335, 338, 345, 354, 356, 375, 396, 397, 399, 408, 409, 410, 416, 425, 427, 443, 467, 476, 478, 494, 520, 529, 531, 550, 571, 572, 574, 579, 588, 590, 597, 613, 614, 616, 622, 623, 626, 628, 631, 635, 638, 657, 664, 665, 666, 667, 669, 675, 676, 678, 679, 680, 684, 686, 688, 689, 690, 692, 698, 699, 702, 703, 704, 705, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 757, 801, 814, 823, 824, 840, 841, 842, 845, 854, 856, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 871, 874, 876, 878, 880, 885, 886, 887, 891, 893, 894, 898, 899, 900, 903, 904, 906, 907, 908, 909, 913, 914, 931, 938, 941, 948, 950, 951, 954, 981, 983, 992, 1055], "id1": 192, "id2": 192, "id3": 192, "id_": [860, 868, 893, 907], "id_head": [254, 255, 301, 302, 319, 320, 333, 335, 338], "id_i": 882, "id_index": 983, "id_j": 882, "id_list": 949, "id_map": 909, "id_pair": 149, "id_whitespace_replac": [183, 184], "idea": 841, "ideal": 195, "ident": [1, 178, 179, 188, 192, 616, 669, 688, 692, 722, 937, 970, 1058], "identif": 101, "identifi": [95, 141, 145, 146, 149, 176, 180, 183, 184, 185, 186, 187, 190, 193, 194, 281, 321, 365, 486, 540, 664, 719, 838, 842, 878, 886, 909, 1053], "idptr": 181, "ids_to_keep": [248, 295, 313, 331, 868], "idx": [393, 459, 512, 569, 610], "ie": [370, 545], "igkeeiqqrl": 181, "ignor": [53, 84, 107, 116, 143, 144, 179, 180, 182, 183, 184, 187, 188, 192, 195, 330, 365, 366, 409, 410, 435, 436, 486, 487, 540, 541, 594, 626, 678, 702, 714, 715, 716, 717, 718, 833, 840, 841, 893, 904, 942, 961, 996, 1018, 1019, 1055, 1058, 1060], "ignore_axis_label": 996, "ignore_direction": 996, "ignore_metadata": 91, "ignore_method_nam": 996, "ignore_non": 893, "ii": 838, "iii": 122, "ij": 716, "il": 462, "illumina": [184, 191], "illumina1": [184, 191], "illumina_1": 191, "illustr": [574, 714, 718], "iloc": 72, "ilr": [643, 653, 662], "ilr_inv": 662, "im": [186, 266, 278], "im1": 278, "im2": 278, "imagin": 188, "immedi": [183, 190, 954], "immut": [574, 1055], "implement": [0, 1, 98, 101, 106, 107, 111, 116, 121, 126, 137, 142, 143, 144, 147, 148, 184, 188, 192, 195, 206, 207, 208, 209, 235, 321, 661, 813, 827, 828, 833, 834, 905, 906, 935, 991, 993], "impli": [84, 235, 722], "implicit": 885, "implicitli": [177, 181], "import": [0, 1, 3, 13, 14, 15, 17, 18, 19, 45, 46, 47, 50, 51, 52, 65, 66, 67, 68, 69, 70, 75, 77, 80, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 112, 116, 132, 143, 144, 150, 163, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 256, 266, 278, 340, 341, 342, 345, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 399, 409, 410, 411, 412, 413, 416, 418, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 460, 462, 463, 464, 467, 469, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 512, 513, 515, 516, 517, 520, 522, 525, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 579, 581, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 623, 624, 627, 630, 632, 635, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 676, 681, 684, 686, 699, 706, 709, 710, 712, 714, 715, 716, 718, 719, 722, 723, 812, 813, 824, 838, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 903, 904, 906, 907, 913, 914, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 997, 1017, 1053, 1055, 1058, 1060], "import_modul": 195, "impos": [116, 143, 144], "improv": [91, 188, 190, 340, 462, 515, 703], "impur": 136, "imput": [643, 655], "incid": 722, "includ": [1, 84, 91, 93, 97, 105, 106, 116, 132, 143, 144, 148, 149, 161, 162, 174, 175, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 238, 253, 282, 284, 285, 300, 303, 318, 321, 322, 328, 333, 335, 336, 337, 339, 347, 356, 361, 369, 370, 380, 389, 393, 395, 396, 397, 398, 409, 410, 418, 427, 431, 447, 456, 459, 461, 469, 478, 482, 499, 508, 512, 514, 515, 522, 531, 536, 544, 545, 555, 564, 567, 569, 571, 572, 573, 581, 590, 600, 608, 610, 611, 612, 622, 624, 633, 639, 646, 664, 675, 682, 687, 698, 703, 707, 710, 713, 714, 715, 717, 718, 719, 723, 823, 824, 825, 826, 828, 833, 834, 838, 842, 860, 865, 895, 902, 903, 908, 910, 927, 928, 930, 959, 961, 962, 965, 966, 967, 969, 982, 984, 985, 990, 1053, 1054, 1055, 1056, 1058, 1059], "include_collapsed_metadata": 860, "include_self": [934, 959, 962, 965, 966, 967, 982, 985, 1058], "inclus": [235, 256, 277, 359, 378, 429, 446, 480, 498, 534, 553, 592, 599, 715], "incom": 932, "incomplet": [340, 411, 462, 515, 574], "inconsist": 627, "incorpor": [1, 132, 642], "incorrect": 1, "incorrectli": 869, "increas": [651, 664, 665, 719, 720, 722, 812, 838, 841, 860, 907], "incub": 841, "ind": [838, 842], "inde": 722, "independ": [397, 410, 572, 722, 734, 735, 756, 767, 800, 811, 885, 985], "index": [0, 1, 14, 15, 18, 46, 47, 51, 65, 67, 70, 72, 79, 82, 85, 86, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 112, 118, 120, 121, 124, 125, 127, 133, 135, 136, 137, 140, 141, 180, 181, 183, 190, 191, 193, 250, 254, 255, 297, 301, 302, 315, 319, 320, 321, 338, 347, 377, 418, 445, 469, 496, 522, 552, 581, 598, 613, 616, 635, 644, 645, 646, 651, 664, 666, 669, 684, 689, 692, 709, 710, 714, 715, 716, 717, 718, 723, 757, 801, 814, 824, 840, 847, 858, 860, 870, 886, 887, 890, 903, 904, 951, 954, 964, 965, 983, 991, 995], "indexerror": [847, 876], "indic": [1, 3, 15, 19, 33, 47, 52, 66, 67, 70, 79, 89, 90, 107, 110, 111, 126, 132, 149, 176, 183, 184, 192, 195, 239, 245, 256, 257, 263, 266, 269, 275, 286, 292, 304, 310, 321, 322, 328, 342, 345, 347, 354, 360, 362, 365, 366, 368, 371, 372, 373, 374, 375, 376, 377, 380, 385, 387, 388, 390, 393, 399, 400, 406, 413, 416, 418, 425, 430, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 452, 454, 455, 457, 459, 464, 467, 469, 476, 481, 483, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 504, 506, 507, 509, 510, 512, 517, 520, 522, 529, 535, 537, 540, 541, 543, 546, 547, 548, 549, 550, 551, 552, 555, 560, 562, 563, 565, 569, 576, 579, 581, 588, 594, 596, 597, 598, 600, 605, 607, 609, 610, 612, 646, 651, 662, 714, 716, 717, 718, 722, 812, 823, 824, 840, 870, 904, 947, 949, 987, 1030, 1041, 1058, 1060], "indicatd": 1060, "indirectli": 974, "indiscern": 688, "individu": [1, 3, 107, 108, 109, 112, 115, 116, 117, 119, 124, 125, 126, 127, 128, 133, 137, 140, 143, 144, 176, 181, 183, 321, 612, 646, 840, 847, 1060], "indptr": [870, 904], "ineffici": [847, 993], "inekmtlva": 181, "ineleg": 965, "inequ": [79, 245, 263, 275, 292, 310, 328, 354, 406, 425, 476, 529, 588, 688, 833], "inf": [19, 52, 117, 192, 976], "infeas": 183, "infect": 842, "infer": [185, 192, 227, 231, 253, 300, 318, 334, 337, 1016, 1053], "infern": 193, "infin": 192, "infinit": [976, 988, 989], "infinitum": 188, "info": [53, 104, 266, 723, 779], "inform": [53, 84, 93, 97, 109, 124, 132, 161, 162, 174, 175, 178, 179, 180, 182, 183, 184, 185, 191, 192, 194, 256, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 735, 779, 813, 825, 826, 835, 841, 842, 844, 860, 895, 910, 911, 969, 990, 1018, 1054, 1055, 1060], "inher": [643, 722], "inherit": [194, 411, 574, 861], "inidic": [32, 53], "initi": [128, 183, 841, 959, 962, 965, 966, 967, 982, 985, 992, 1029], "initialize_st": 1060, "inlin": 192, "inner": [92, 188, 335, 358, 428, 479, 533, 591, 627], "inord": 985, "inosin": 340, "inplac": [833, 868, 891, 892, 894, 897, 907, 909, 976], "input": [98, 99, 100, 101, 102, 103, 104, 116, 132, 141, 143, 144, 145, 194, 206, 208, 235, 236, 266, 278, 363, 390, 409, 410, 433, 457, 484, 509, 538, 565, 593, 609, 640, 646, 651, 662, 665, 715, 716, 812, 824, 827, 828, 830, 834, 843, 869, 986, 991, 992, 1052, 1055], "input_is_dens": 871, "ins": [3, 20, 34, 53, 65, 150, 163, 196, 209, 238, 256, 266, 285, 303, 321, 340, 399, 411, 462, 515, 574, 612, 665, 688, 724, 735, 746, 757, 768, 779, 790, 801, 814, 844, 912, 998, 1018, 1030, 1041], "insdc": [182, 185, 256, 285, 321, 334], "insensit": [192, 624, 646, 651], "insert": [188, 277, 933], "insert_length": 933, "insid": [185, 188], "insight": [143, 144], "insignific": 1, "instal": 993, "instanc": [93, 97, 161, 162, 174, 175, 181, 195, 208, 221, 223, 224, 225, 227, 231, 266, 281, 282, 284, 336, 339, 358, 389, 398, 428, 456, 461, 479, 508, 514, 533, 564, 573, 591, 608, 611, 614, 624, 633, 639, 641, 642, 651, 665, 667, 682, 687, 688, 690, 705, 707, 713, 716, 718, 719, 720, 734, 756, 767, 800, 811, 824, 825, 826, 842, 857, 861, 887, 895, 910, 912, 928, 969, 990, 991, 998, 999, 1002, 1009, 1058, 1060], "instanti": [53, 182, 195, 411, 1060], "instead": [1, 88, 135, 182, 183, 185, 192, 195, 196, 206, 207, 208, 250, 279, 285, 297, 315, 367, 380, 382, 384, 386, 393, 437, 447, 449, 451, 453, 459, 488, 499, 501, 503, 505, 512, 542, 555, 557, 559, 561, 569, 595, 600, 602, 604, 606, 610, 665, 714, 716, 718, 832, 841, 842, 902, 903, 937, 992, 993, 1053], "institut": 184, "instruct": 1057, "instrument": 183, "int": [3, 13, 14, 15, 18, 19, 34, 45, 46, 47, 51, 52, 53, 77, 88, 95, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 149, 178, 185, 186, 191, 207, 235, 256, 266, 277, 281, 321, 347, 352, 359, 365, 366, 370, 378, 380, 381, 382, 384, 386, 390, 408, 418, 423, 429, 435, 436, 446, 447, 448, 449, 451, 453, 457, 469, 474, 480, 486, 487, 498, 499, 500, 501, 503, 505, 509, 522, 527, 534, 540, 541, 545, 553, 555, 556, 557, 559, 561, 565, 571, 572, 581, 586, 592, 594, 599, 600, 601, 602, 604, 606, 609, 630, 631, 642, 644, 645, 651, 657, 663, 680, 704, 714, 716, 717, 718, 719, 720, 722, 757, 801, 812, 824, 828, 832, 833, 835, 836, 839, 841, 842, 843, 860, 870, 876, 878, 900, 904, 912, 933, 937, 939, 948, 954, 963, 964, 976, 991, 996, 997, 1017, 1030], "int32": [870, 904], "int64": [1, 65, 83, 92, 357, 361, 391, 431, 482, 532, 536, 566, 574, 646, 870, 904, 1055], "integ": [1, 53, 141, 145, 176, 178, 181, 183, 184, 187, 188, 189, 190, 191, 321, 347, 418, 469, 522, 581, 646, 651, 664, 665, 714, 717, 718, 719, 720, 801, 843], "intend": [1, 122, 123, 192, 340, 411, 462, 812, 824, 995, 996], "intens": 841, "interablemetadata": 278, "interact": [722, 1057], "interest": [1, 192, 574, 646, 664, 722, 827, 835, 841, 958, 960, 1060], "interfac": [89, 90, 142, 192, 375, 377, 443, 445, 494, 496, 550, 552, 597, 598, 612, 714, 715, 716, 717, 991, 1053], "interleav": [190, 193], "intermedi": 933, "intern": [95, 177, 185, 188, 662, 930, 932, 934, 940, 942, 945, 954, 963, 968, 974, 984, 986, 987, 1053, 1058], "internet": [183, 194], "interpret": [1, 84, 112, 116, 141, 143, 144, 145, 176, 188, 192, 285, 321, 643, 827, 828, 835, 871], "interpro": 182, "interquantil": 121, "interrog": 1018, "intersect": [358, 428, 479, 533, 591, 885, 913, 914, 938, 941], "interv": [106, 111, 115, 122, 182, 185, 186, 266, 267, 268, 269, 275, 277, 278, 279, 280, 281, 283, 340, 345, 357, 374, 395, 416, 442, 462, 467, 493, 515, 520, 532, 549, 574, 579, 596, 651, 839, 1052], "interval_metadata": [185, 186, 256, 266, 278, 281, 340, 345, 347, 374, 411, 416, 418, 442, 462, 467, 469, 493, 515, 520, 522, 549, 574, 579, 581, 596], "intervalmetadata": [186, 256, 265, 340, 462, 515, 574], "intracellular": 193, "introduc": [107, 118, 180, 183, 643], "introduct": 1052, "intron": [383, 450, 502, 515, 558, 603], "intvl": 266, "invalid": [1, 88, 92, 116, 132, 141, 143, 144, 145, 183, 334, 340, 462, 515, 715, 716, 824, 844, 911, 929, 934, 944, 955, 964, 968], "invalidate_cach": [934, 940], "invent": 184, "invers": [84, 645, 650, 653, 659], "inverse_shannon_uncertainti": 84, "invert": [380, 447, 499, 555, 600, 868], "investig": 1, "involv": [132, 644], "inward": 121, "io": [1, 93, 97, 116, 143, 144, 161, 162, 174, 175, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 664, 682, 687, 707, 713, 824, 825, 826, 869, 872, 895, 910, 950, 969, 990, 991, 1017, 1052, 1058], "io_registri": 195, "ionom": 661, "ioregistri": [195, 206, 208], "ipr001360": 182, "ipr013781": 182, "ipr017853": 182, "ipr033132": 182, "ipyparallel": 146, "ipython": 814, "irrelev": [98, 99, 100], "irsairagsnvkgfyawsfldcnewfagftvrfglnfvd": 182, "is_circular": 186, "is_reverse_compl": [391, 566], "is_root": [953, 957, 1058], "is_tip": [934, 953, 956, 1058], "is_zero_bas": 33, "ism": [116, 143, 144], "isn": [65, 82, 85, 92, 118, 192, 193, 206, 208, 236, 256, 652, 653, 843, 887], "isnapshgnakpsystnpmtnisfekhgiplgpraasiwiyvypymfiqedf": 182, "iso": [870, 904], "isoleucin": 462, "isometr": [643, 644, 645, 652, 653], "isometri": [649, 650, 652, 653], "isomorph": [188, 649, 650, 652, 653], "issu": [114, 182, 183, 184, 192, 207, 992, 1053], "isubsampl": 843, "item": [98, 99, 100, 101, 102, 103, 104, 193, 367, 390, 437, 457, 488, 509, 542, 565, 574, 595, 609, 623, 638, 676, 686, 699, 712, 812, 843, 864, 900, 934, 976, 983, 984, 1018, 1019, 1029, 1060], "iter": [65, 75, 80, 85, 91, 98, 99, 100, 101, 102, 103, 104, 105, 141, 145, 146, 149, 181, 191, 248, 256, 277, 278, 279, 281, 295, 313, 331, 347, 350, 355, 358, 366, 380, 390, 393, 418, 421, 426, 428, 436, 447, 457, 459, 469, 472, 477, 479, 487, 499, 509, 512, 522, 525, 530, 533, 541, 555, 565, 569, 581, 584, 589, 591, 594, 600, 609, 610, 612, 623, 626, 628, 630, 638, 646, 676, 678, 679, 686, 699, 702, 703, 712, 715, 718, 719, 812, 824, 841, 842, 850, 860, 861, 868, 869, 870, 881, 882, 885, 893, 899, 907, 913, 914, 921, 938, 941, 942, 951, 959, 962, 965, 966, 967, 975, 976, 982, 985, 1015, 1017, 1019, 1041, 1058, 1060], "iter_": [882, 1019], "iter_km": [367, 437, 488, 542, 595], "its": [1, 15, 47, 65, 82, 83, 85, 86, 89, 90, 91, 92, 98, 99, 100, 130, 182, 183, 184, 185, 188, 189, 193, 195, 208, 235, 256, 266, 321, 335, 367, 374, 375, 377, 382, 437, 442, 443, 445, 449, 488, 493, 494, 496, 501, 542, 549, 550, 552, 557, 574, 595, 596, 597, 598, 602, 616, 624, 647, 669, 692, 715, 823, 827, 829, 832, 837, 868, 912, 934, 964, 965, 974, 979, 984, 985, 991, 992, 1016, 1053, 1058], "itself": [150, 163, 183, 190, 194, 236, 256, 340, 399, 462, 515, 574, 612, 722, 814, 868, 892, 907, 912, 1055], "itypeerror": 145, "iupac": [183, 184, 190, 191, 340, 370, 399, 409, 462, 515, 545, 574, 1055], "iv": [121, 126, 132], "j": [98, 100, 101, 103, 116, 119, 120, 128, 132, 133, 143, 144, 176, 178, 179, 183, 184, 185, 193, 194, 462, 623, 624, 638, 643, 652, 653, 654, 655, 657, 661, 663, 676, 686, 699, 712, 716, 717, 718, 828, 882, 942, 991], "j00123": 185, "j04373": 193, "jag": 887, "jaim": 932, "je": 722, "jet": 1, "jim": 184, "jj": [657, 663], "joe": 190, "join": [91, 178, 179, 184, 191, 193, 194, 335, 358, 428, 479, 533, 591, 861, 984, 991, 992], "joint": 185, "joseph": [183, 190, 1058], "jost": 132, "journal": [53, 104, 107, 110, 117, 132, 133, 135, 137, 185, 657, 663, 714], "json": [844, 871, 905, 911], "json_obj": 871, "json_tabl": 871, "juli": [53, 104], "julia": 935, "june": 188, "jupyt": 824, "just": [121, 122, 123, 128, 195, 854, 865, 882, 885, 906, 975, 1053, 1058, 1060], "justif": 121, "jyzox": 184, "k": [53, 107, 112, 132, 133, 135, 136, 137, 146, 340, 367, 381, 382, 437, 448, 449, 462, 488, 500, 501, 515, 542, 556, 557, 595, 601, 602, 612, 624, 642, 661, 715, 722, 942, 976, 983, 991], "k_": 838, "k__a": 860, "ka": 184, "kan": 194, "kannan": 194, "karsch": 194, "keemei": 192, "keep": [181, 185, 192, 279, 347, 418, 469, 522, 581, 812, 858, 859, 868, 880, 885, 974, 975], "kegg_pathwai": [870, 887, 904], "kei": [23, 65, 82, 85, 86, 89, 94, 105, 182, 183, 185, 193, 277, 281, 340, 364, 375, 383, 390, 434, 443, 450, 457, 462, 485, 494, 502, 509, 515, 539, 550, 558, 565, 574, 597, 603, 609, 628, 679, 703, 860, 864, 887, 909, 963, 983, 991, 1060], "kellei": [143, 144], "kempton": 121, "kendalltau": 716, "kept": 185, "kestrel": 193, "keto": 340, "keyerror": [718, 887], "keyword": [93, 97, 104, 161, 162, 174, 175, 182, 185, 187, 207, 227, 228, 229, 231, 232, 233, 281, 282, 284, 336, 339, 383, 389, 396, 397, 398, 450, 456, 461, 502, 508, 514, 558, 564, 571, 572, 573, 603, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990], "khovanskaya": 194, "kill": 658, "kind": 827, "kinet": 128, "kingdom": [178, 179, 194], "kit": 1052, "kj": 116, "klein": 185, "kmer": [381, 382, 448, 449, 500, 501, 556, 557, 601, 602, 642], "kmer_frequ": [367, 437, 488, 542, 595], "knight": [114, 116, 143, 144, 824], "know": [1, 53, 116, 143, 144, 180, 183, 190, 193, 195, 646, 838, 993, 1053], "knowledg": [973, 1053], "known": [107, 188, 227, 231, 661, 662, 828, 833, 1055], "kortlev": 193, "kqlaaargqr": 181, "kr": 714, "kruskal": [646, 841, 842], "kuo": 107, "kva": [397, 410, 572], "kw": 182, "kwarg": [93, 97, 104, 141, 145, 146, 149, 150, 161, 162, 163, 174, 175, 206, 208, 220, 227, 228, 229, 230, 231, 232, 233, 236, 237, 282, 284, 336, 339, 389, 396, 397, 398, 456, 461, 508, 514, 564, 571, 572, 573, 608, 611, 612, 633, 639, 682, 687, 707, 713, 801, 825, 826, 844, 872, 895, 910, 969, 990, 1018, 1053], "kwarg1": 195, "kz": 184, "l": [53, 108, 109, 116, 121, 122, 132, 140, 182, 184, 194, 409, 462, 661, 716, 813, 827, 828, 835, 984], "l1": 67, "l2": 67, "l3": 67, "lab": [824, 841], "label": [65, 67, 70, 72, 82, 85, 86, 92, 94, 95, 96, 180, 183, 185, 190, 192, 193, 632, 661, 664, 681, 706, 714, 715, 717, 718, 719, 814, 824, 893, 932, 996], "labor": 841, "lack": 927, "lafond": 661, "lahaeavhvyktkyqayqkgkigitlvsnwlmplddnsipdikaaersldfq": 182, "lambda": [182, 812, 838, 841, 842, 860, 868, 872, 893, 896, 898, 907, 934, 947, 968, 971, 976, 987, 991, 992, 1060], "lane": 191, "lane_numb": 191, "langl": [652, 654], "languag": [2, 150, 181], "lapoint": 661, "larg": [53, 117, 121, 143, 144, 176, 183, 190, 655, 656, 715, 835, 841, 870, 930, 937], "larger": [84, 841], "largest": [53, 140, 881, 894], "last": [83, 150, 182, 190, 380, 409, 447, 499, 555, 574, 600, 716, 813, 1060], "latent": 150, "later": [184, 840], "latter": [1, 612], "law": 115, "layout": 185, "lb": 184, "lca": [116, 132, 932, 960], "ldot": [644, 645, 649, 650, 652, 653, 658, 659, 660], "lead": [116, 141, 143, 144, 145, 183, 184, 187], "learn": [844, 911], "least": [89, 90, 128, 188, 192, 321, 365, 374, 375, 377, 435, 442, 443, 445, 486, 493, 494, 496, 540, 549, 550, 552, 596, 597, 598, 646, 716, 824, 841, 842, 994, 1060], "leav": [121, 182, 392, 458, 511, 568, 868, 891], "lee": [53, 104, 107], "leesleyqqf": 181, "left": [92, 107, 135, 188, 253, 300, 318, 335, 337, 644, 645, 649, 654, 658, 659, 660, 661, 932, 954, 995, 996, 1058], "left_child_id": 983, "leftmost": 194, "legaci": [178, 179, 183], "legal": 235, "legend": 824, "legendr": [716, 813, 827, 828, 830, 831, 833, 834, 835], "len": [53, 65, 77, 352, 423, 474, 527, 586, 624, 720, 842, 913, 914, 938, 941, 979, 991, 1060], "length": [0, 1, 3, 13, 14, 15, 18, 19, 34, 46, 47, 50, 51, 52, 53, 65, 82, 83, 85, 91, 98, 99, 100, 116, 132, 143, 144, 150, 163, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 266, 278, 340, 341, 347, 352, 357, 358, 359, 361, 364, 367, 369, 370, 380, 381, 382, 384, 385, 386, 387, 391, 392, 393, 395, 396, 397, 399, 409, 410, 411, 412, 418, 423, 428, 429, 431, 434, 437, 447, 448, 449, 451, 452, 453, 454, 458, 459, 462, 463, 469, 474, 479, 480, 482, 485, 488, 499, 500, 501, 503, 504, 505, 506, 511, 512, 515, 516, 522, 527, 532, 533, 534, 536, 539, 542, 544, 545, 555, 556, 557, 559, 560, 561, 562, 566, 567, 568, 569, 571, 572, 574, 575, 581, 586, 591, 592, 595, 600, 601, 602, 604, 605, 606, 607, 610, 628, 641, 642, 646, 651, 679, 703, 714, 717, 718, 722, 832, 833, 841, 842, 870, 904, 912, 927, 933, 942, 943, 952, 974, 981, 983, 986, 987, 992, 1055, 1058, 1060], "lengtherror": 974, "leq": 643, "less": [53, 107, 116, 123, 143, 144, 146, 190, 192, 381, 382, 448, 449, 500, 501, 556, 557, 601, 602, 642, 716, 719, 812, 827, 843, 860, 900, 963, 997], "lesser": 132, "let": [1, 183, 184, 186, 190, 191, 193, 256, 266, 390, 457, 509, 565, 574, 609, 646, 716, 812, 837, 838, 841, 842, 881, 993, 1055, 1058, 1060], "letter": [114, 116, 183, 185, 462], "leu": 462, "leucin": 462, "level": [95, 122, 188, 235, 321, 646, 840, 841, 950, 998, 1055], "levelord": [962, 965, 966, 967, 982, 985], "leven": 718, "lewi": 132, "lexicon": [183, 184, 190], "lfc_result": 651, "li": 132, "librari": [53, 104, 143, 144, 183, 1052, 1053], "libreria": 118, "licens": 1052, "life": 116, "like": [1, 98, 99, 100, 146, 183, 185, 186, 187, 189, 192, 195, 383, 450, 502, 558, 603, 612, 664, 722, 745, 757, 778, 779, 789, 801, 833, 835, 841, 842, 865, 869, 872, 876, 905, 906, 1017, 1053, 1060], "likelihood": 612, "likelyhood": [832, 836], "likewis": [92, 132, 193], "limit": [1, 115, 178, 188, 189, 190, 840, 841, 992], "limits_": [649, 650, 653, 654, 661], "linalg": 837, "linamaras": 182, "line": [118, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 235, 841, 869, 872, 930], "lineag": [194, 841, 951, 984], "lineage_map": 951, "linear": [118, 182, 185, 814, 828], "link": [145, 265, 321, 715, 722, 912], "linkag": [842, 949], "linkage_matrix": 949, "linnean": 132, "linux": 876, "lipman": [178, 179, 183], "list": [1, 50, 104, 116, 132, 143, 144, 147, 148, 178, 182, 184, 185, 186, 189, 192, 193, 194, 195, 206, 208, 224, 225, 235, 266, 390, 457, 509, 565, 574, 609, 622, 626, 629, 662, 664, 675, 678, 698, 702, 716, 718, 719, 735, 757, 768, 790, 823, 838, 840, 841, 842, 860, 864, 868, 869, 870, 872, 881, 887, 893, 898, 899, 904, 912, 928, 934, 942, 944, 946, 949, 958, 960, 961, 976, 977, 981, 983, 984, 991, 992, 1053, 1060], "liter": 188, "literatur": [1, 112, 842], "live": [1, 280], "lkwh": [397, 410, 572], "ll": [1, 116, 143, 144, 715, 716, 719, 813, 838, 841, 842, 1058, 1060], "lladser": [122, 123, 143, 144], "lladser_ci": 123, "lladser_p": 122, "ln": [109, 117, 124, 133, 644, 646, 649, 654, 661], "load": [0, 181, 183, 184, 189, 191, 192, 253, 300, 318, 321, 337, 624, 646, 664, 665, 714, 715, 718, 719, 870, 1016, 1017, 1053], "loc": [72, 574, 646, 841], "local": [0, 101, 102, 103, 178, 179, 185], "local_pairwise_align": [98, 99, 100, 102, 103], "local_pairwise_align_nucleotid": [98, 99, 100, 101, 103], "local_pairwise_align_protein": [0, 98, 99, 100, 101, 102], "local_pairwise_align_ssw": [0, 98, 99, 100, 101, 102, 103], "locat": [53, 93, 97, 161, 162, 174, 175, 182, 188, 193, 221, 222, 223, 256, 282, 284, 336, 339, 365, 366, 389, 398, 435, 436, 456, 461, 486, 487, 508, 514, 540, 541, 564, 573, 594, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 889, 895, 910, 969, 973, 990, 995, 1059], "loci": 53, "locu": [182, 185, 194], "log": [124, 643, 644, 645, 646, 649, 650, 651, 652, 653, 657, 663], "log2": 651, "log_2": 135, "logarithm": [120, 135, 646], "logic": [3, 195, 1018], "logratio": 643, "long": [180, 183, 190, 192, 365, 435, 486, 540, 644, 715, 801, 827], "long_method_nam": [814, 996], "longer": [183, 190, 643, 842], "look": [105, 187, 189, 190, 195, 281, 390, 457, 509, 565, 571, 572, 609, 616, 646, 669, 692, 824, 840, 841, 842, 865, 934, 1041, 1058, 1060], "lookup": [98, 99, 100, 101, 102, 103, 221, 222, 223, 616, 669, 692, 716, 719, 929, 940, 944, 954, 955, 964, 968, 983, 1018], "lookup_id": [613, 631, 666, 680, 689, 704], "loop": [183, 988, 989], "loos": [1, 722], "lorenz": 118, "lose": [718, 833], "loss": [116, 722], "lost": [718, 833], "lot": 827, "love": [844, 911], "lovel": [657, 663], "low": [123, 813, 833, 841, 900], "lower": [121, 122, 183, 190, 256, 321, 646, 651, 703, 710, 716, 812, 813, 842], "lower_bound": [111, 115, 122], "lower_quantil": 121, "lowercas": [53, 182, 183, 184, 185, 191, 340, 358, 411, 428, 462, 479, 515, 533, 574, 591], "lowest": [116, 132, 958, 960], "lowest_common_ancestor": 958, "lozupon": [116, 143, 144], "lq": 121, "lsmat": [633, 639, 682, 687, 707, 713], "luca": 932, "ly": 462, "lysin": 462, "m": [50, 53, 101, 107, 116, 132, 143, 144, 178, 179, 182, 184, 190, 194, 340, 399, 400, 409, 462, 515, 624, 715, 718, 722, 824, 827, 828, 834, 835, 837, 840, 870, 876, 904, 975, 992], "m1": 937, "m2": 937, "m24803": 193, "m24804": 193, "m_shape": 837, "ma": [15, 19, 47, 52, 107, 393, 459, 512, 569, 610], "machin": 191, "machine_nam": 191, "macrophag": 841, "madden": 183, "made": [65, 128, 574, 646, 665, 688, 812, 860, 928, 945, 946, 968, 994], "magnitud": [128, 651, 716, 718, 833, 993], "magnoliophyta": 182, "magnuson": 132, "magurran": [121, 127], "mai": [1, 20, 53, 84, 94, 116, 123, 179, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 207, 224, 225, 235, 256, 280, 321, 333, 334, 340, 367, 411, 437, 462, 488, 515, 542, 574, 595, 612, 616, 626, 641, 646, 664, 669, 678, 692, 702, 716, 718, 722, 812, 827, 838, 840, 841, 842, 843, 860, 950, 993, 1016, 1018, 1053, 1055], "main": 285, "mainli": [723, 813], "maintain": [183, 188, 195, 705, 827, 828, 838, 841], "major": [83, 643, 710, 870, 904, 991], "make": [84, 92, 183, 188, 192, 195, 253, 300, 318, 321, 337, 400, 616, 641, 669, 692, 714, 718, 842, 980, 983, 984, 992, 998, 1018, 1060], "mam": 194, "manag": [235, 236, 237], "mandal": 646, "mani": [1, 107, 131, 148, 188, 192, 612, 643, 646, 722, 827, 833, 841, 842, 860, 1060], "manipul": [0, 89, 90, 192, 321, 375, 377, 443, 445, 494, 496, 550, 552, 574, 597, 598, 643, 664, 870], "mann": 646, "manner": [83, 183, 190, 347, 361, 418, 431, 469, 482, 522, 536, 581, 716, 833], "mannwhitneyu": 646, "mantel": [1, 664, 719, 722], "manual": [107, 111, 121, 126, 192, 991], "map": [1, 86, 94, 146, 209, 321, 334, 716, 719, 722, 723, 757, 801, 824, 840, 842, 860, 893, 909, 951, 954, 1055], "map_async": 146, "map_f": 146, "mar": [98, 101, 120], "marchand": 661, "marguerat": [657, 663], "margush": 991, "marin": 715, "mark": [182, 185, 193, 1060], "marrow": 841, "marth": [53, 104], "marti": [717, 718], "martin": [643, 655], "mask": [15, 19, 47, 52, 53, 393, 459, 512, 569, 610, 657, 663], "mask_auto": 53, "mask_gap": [393, 459, 512, 569, 610], "mask_length": 53, "maskedarrai": [15, 19, 47, 52], "mat": [612, 624, 627, 630, 644, 645, 647, 648, 649, 650, 652, 653, 655, 656, 657, 981], "match": [0, 50, 53, 82, 85, 92, 99, 102, 105, 178, 183, 184, 192, 235, 236, 249, 254, 255, 296, 301, 302, 314, 319, 320, 321, 333, 335, 338, 345, 365, 366, 384, 386, 387, 394, 409, 416, 435, 436, 451, 453, 454, 460, 467, 486, 487, 503, 505, 506, 513, 520, 540, 541, 559, 561, 562, 570, 579, 594, 604, 606, 607, 630, 665, 714, 716, 718, 719, 838, 840, 841, 842, 936, 937, 946, 948, 1055, 1060], "match_frequ": [386, 453, 505, 561, 606, 1055], "match_scor": [53, 99, 102, 105], "matevz": 661, "mathbb": [644, 645, 646, 649, 650, 652, 653], "mathemat": [112, 135, 143, 643, 813, 932, 935, 991], "mathemt": 144, "matplotlib": [632, 681, 706, 814, 824], "matric": [1, 100, 103, 176, 187, 462, 612, 614, 621, 624, 629, 664, 665, 667, 674, 690, 697, 715, 716, 719, 721, 722, 829, 833, 937], "matrix": [1, 53, 105, 141, 145, 146, 149, 393, 459, 512, 569, 610, 612, 613, 614, 616, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 636, 637, 638, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 669, 674, 675, 676, 677, 678, 679, 680, 681, 685, 686, 688, 689, 690, 692, 697, 698, 699, 701, 702, 703, 704, 705, 706, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 722, 813, 824, 827, 829, 830, 831, 833, 834, 835, 837, 839, 844, 845, 847, 860, 870, 871, 874, 889, 896, 900, 902, 903, 904, 911, 949, 981, 992, 1052, 1057], "matrix_data": [844, 911], "matrix_element_typ": 871, "matrix_rank": 837, "matsen": 132, "matter": [192, 257, 278, 616, 669, 692], "matthew": 991, "matto": 661, "max": [53, 107, 108, 128, 841, 842, 881, 952], "max_count": [838, 841, 842], "max_i": 140, "max_sample_count": 881, "max_width": 183, "maxim": [53, 132, 715, 828], "maxima": 884, "maximum": [133, 140, 183, 184, 646, 651, 715, 757, 812, 828, 832, 836, 841, 842, 884, 937], "mccoi": 132, "mcdonald": [844, 911], "mcentyr": 183, "mci": 1055, "mcintosh": [125, 126], "mcintosh_": 125, "mcintosh_d": 126, "mcmorri": 991, "md": [183, 856, 864, 868, 893, 907], "md5": [182, 1017], "md_i": 882, "md_j": 882, "mdfivaifalfvissftitstnaveastlldignlsr": 182, "mean": [186, 188, 195, 235, 266, 281, 340, 369, 370, 544, 545, 623, 638, 643, 646, 649, 651, 661, 676, 686, 699, 712, 779, 801, 827, 831, 832, 833, 836, 838, 839, 841, 842, 870, 904, 1053, 1058], "meaning": [53, 82, 85, 92, 833, 1055], "measur": [1, 112, 114, 120, 122, 123, 126, 127, 131, 132, 133, 135, 136, 137, 143, 144, 612, 646, 657, 663, 664, 827, 840, 841, 912, 932, 1054], "mechan": [1018, 1060], "media": 841, "median": [646, 718], "medic": 182, "medlin": 193, "meepqsdpsv": [393, 459, 512, 569, 610], "meet": [104, 192, 281, 333, 334, 987], "member": [227, 231, 1018, 1041, 1060], "membership": 195, "meme_v4": 180, "memo": [69, 268, 344, 415, 466, 519, 578], "memori": [3, 118, 180, 181, 183, 184, 185, 190, 191, 193, 321, 664, 719, 812, 833, 844, 911, 1017, 1053], "mengyao": [53, 104], "menopaus": 842, "menten": 128, "mention": 188, "merg": 321, "merged_t": 885, "messag": [1, 116, 141, 143, 144, 145, 735, 779, 997, 1053], "met": [1, 462, 1041], "met_neg": 842, "met_po": 842, "meta": [192, 840, 841], "metabolit": [1, 842, 844, 911, 1054], "metabolite_test": 842, "metadata": [0, 1, 65, 70, 79, 82, 83, 85, 89, 90, 91, 92, 94, 95, 177, 180, 182, 183, 184, 185, 186, 190, 191, 340, 345, 347, 354, 356, 357, 358, 361, 364, 374, 375, 377, 383, 390, 391, 395, 396, 397, 399, 409, 410, 411, 416, 418, 425, 427, 428, 431, 434, 442, 443, 445, 450, 457, 462, 467, 469, 476, 478, 479, 482, 485, 493, 494, 496, 502, 509, 515, 520, 522, 529, 531, 532, 533, 536, 539, 549, 550, 552, 558, 565, 566, 567, 571, 572, 574, 579, 581, 588, 590, 591, 596, 597, 598, 603, 609, 628, 679, 703, 715, 723, 735, 757, 768, 779, 801, 824, 835, 838, 840, 841, 842, 845, 855, 856, 858, 859, 860, 864, 865, 868, 870, 871, 872, 875, 880, 885, 887, 893, 902, 903, 904, 906, 907, 908, 1052, 1055, 1056], "metadata_f": 860, "metadata_field": [870, 904], "metadata_formatt": [865, 906], "metadata_i": 882, "metadata_j": 882, "metadata_map": [723, 724, 746, 757, 790, 801], "metadatacolumn": [238, 239, 245, 247, 248, 303, 304, 310, 312, 313, 321, 332], "metadatafileerror": 334, "metag": 857, "metagenom": 857, "metatdata": 182, "metdata": [574, 885], "methionin": [409, 462], "method": [0, 1, 3, 19, 20, 34, 52, 53, 65, 72, 84, 92, 93, 97, 98, 118, 141, 143, 145, 146, 149, 150, 161, 162, 163, 174, 175, 177, 181, 189, 192, 196, 206, 208, 209, 226, 238, 256, 266, 277, 282, 284, 285, 303, 321, 336, 339, 340, 343, 344, 358, 367, 389, 391, 397, 398, 399, 408, 410, 411, 414, 415, 428, 437, 456, 461, 462, 465, 466, 479, 488, 508, 514, 515, 518, 519, 533, 542, 564, 566, 572, 573, 574, 577, 578, 591, 595, 608, 611, 612, 633, 639, 643, 646, 651, 655, 661, 664, 665, 682, 687, 688, 705, 707, 713, 714, 715, 716, 717, 718, 719, 724, 735, 745, 746, 757, 768, 778, 779, 789, 790, 801, 812, 814, 824, 825, 826, 827, 828, 833, 844, 894, 895, 904, 910, 912, 913, 914, 930, 932, 933, 934, 937, 938, 940, 941, 942, 943, 945, 947, 948, 968, 969, 974, 976, 988, 989, 990, 991, 992, 998, 1010, 1017, 1018, 1019, 1029, 1041, 1052, 1055, 1058, 1060], "metodologica": 118, "metric": [84, 107, 112, 116, 117, 132, 141, 142, 143, 144, 145, 146, 147, 148, 149, 184, 363, 433, 484, 538, 593, 628, 642, 679, 688, 703, 912, 1055], "metricspac": 688, "mgc": 194, "mi": 50, "micha": 128, "michael": 184, "microbi": [116, 122, 123, 132, 143, 144, 646, 714, 715, 717, 718, 824], "microbiol": [143, 144], "microbiom": [1, 132, 146, 646, 651, 833], "microsoft": 192, "mid": 974, "middl": 280, "midpoint": [974, 992], "mieadkvahvqvgnnleh": 193, "might": [1, 118, 187, 189, 715, 840, 841, 842, 937, 1053], "miller": [178, 179], "million": 146, "min": [132, 137, 842], "min_count": [838, 841, 842], "min_group_s": 860, "min_length": [365, 380, 435, 447, 486, 499, 540, 555, 600, 1055], "minim": 188, "minima": 888, "minimize_scalar": 117, "minimum": [116, 132, 137, 194, 370, 380, 447, 499, 545, 555, 600, 646, 718, 812, 841, 842, 860, 888], "mininum": 651, "minor": [179, 870, 904], "minter": [0, 65, 70, 82, 85, 94, 95, 180, 190], "minu": [84, 185, 193, 790], "mirror": 651, "misc_bind": 185, "miscellan": 1052, "mislead": [84, 149], "mismatch": [0, 50, 53, 99, 102, 105, 178, 179, 384, 385, 386, 451, 452, 453, 503, 504, 505, 559, 560, 561, 604, 605, 606, 630, 716, 936], "mismatch_frequ": [384, 451, 503, 559, 604, 1055], "mismatch_scor": [53, 99, 102, 105], "miss": [178, 183, 192, 193, 247, 249, 250, 252, 254, 255, 285, 294, 296, 297, 299, 301, 302, 312, 314, 315, 317, 319, 320, 321, 330, 334, 338, 358, 428, 479, 533, 591, 643, 655, 715, 824, 840, 841, 1060], "missing_schem": [238, 285, 303], "missingiderror": [616, 623, 626, 631, 638, 669, 676, 678, 680, 686, 692, 699, 702, 704, 712], "missingnodeerror": [116, 132, 141, 143, 144, 145, 945, 946, 948, 963, 976], "mit": 180, "mitochondri": [194, 396, 408, 571], "mix": 192, "mizrachi": 194, "ml": 128, "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm": 399, "mn": 127, "moac": 178, "mode": [84, 195, 235, 409, 842, 860, 1018], "model": [2, 121, 122, 123, 128, 150, 181, 624, 643, 651, 664, 842], "moder": 716, "modif": [266, 722], "modifi": [95, 183, 185, 193, 226, 340, 462, 515, 574, 705, 801, 834, 868, 907, 976], "modul": [0, 1, 2, 181, 193, 195, 234, 640, 643, 664, 723, 813, 838, 1016, 1017, 1053, 1054, 1055, 1056, 1057, 1058, 1060], "mol": [98, 101, 178, 179, 182, 185], "mol_typ": [182, 185], "molbev": 992, "molecul": [182, 183, 185, 574, 612, 1055], "molecular": [101, 722, 932, 992, 1055], "moment": [182, 716, 1060], "monkei": 226, "monkey_patch": [206, 208], "monoton": [664, 665, 719, 720], "mont": 838, "month": 194, "mooer": 132, "more": [0, 1, 83, 84, 85, 93, 97, 98, 104, 107, 118, 141, 148, 161, 162, 174, 175, 179, 182, 183, 184, 188, 189, 190, 191, 192, 193, 228, 232, 252, 282, 284, 299, 317, 321, 335, 336, 339, 371, 372, 373, 376, 389, 398, 439, 440, 441, 444, 456, 461, 462, 490, 491, 492, 495, 497, 508, 514, 546, 547, 548, 551, 564, 573, 608, 611, 616, 633, 639, 643, 646, 648, 651, 664, 669, 682, 687, 692, 705, 707, 713, 714, 715, 716, 717, 718, 719, 722, 734, 756, 767, 800, 811, 812, 824, 825, 826, 827, 828, 835, 841, 842, 844, 860, 876, 895, 910, 911, 933, 950, 969, 990, 991, 1053, 1058, 1059], "mosaic": 193, "most": [83, 108, 117, 132, 176, 180, 183, 184, 187, 188, 190, 192, 194, 409, 574, 716, 812, 835, 838, 952, 954, 991, 1058], "mostli": [192, 193], "motif": [365, 435, 486, 540, 1055], "motif_slic": [365, 435, 486, 540], "motif_typ": [365, 435, 486, 540], "motiv": 146, "mpl": [396, 397, 399, 409, 410, 571, 572], "mpt": [396, 571], "mqhvsapvfvfectrlai": 193, "mrna": 182, "msa": [0, 3, 16, 17, 48, 65, 66, 67, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 180, 183, 184, 190, 193], "msa1": 92, "msa2": 92, "msa_copi": [68, 69], "msl072": 992, "mtcraqliavprassla": 193, "mtrand": [937, 976], "mu": 838, "mu_": 838, "much": [0, 1, 116, 143, 144, 188, 1053], "mullikin": 184, "multi": 646, "multi_replac": [646, 656], "multifurc": [188, 1058], "multiindex": [95, 710], "multimod": 827, "multinomi": [651, 900], "multipl": [0, 65, 91, 116, 143, 144, 180, 182, 183, 184, 185, 186, 188, 194, 256, 278, 574, 612, 643, 646, 651, 655, 722, 813, 835, 841, 860, 984, 991, 1053, 1058], "multiple_comparisons_correct": 646, "multipli": 132, "multivari": [644, 714, 715, 717, 718, 827, 828, 1052], "must": [15, 47, 53, 65, 82, 85, 92, 93, 97, 116, 118, 132, 143, 144, 145, 146, 149, 161, 162, 174, 175, 178, 180, 183, 184, 187, 188, 189, 190, 192, 193, 207, 281, 282, 284, 321, 333, 335, 336, 339, 340, 358, 363, 383, 389, 396, 398, 428, 433, 450, 456, 461, 462, 479, 484, 502, 508, 514, 515, 533, 538, 558, 564, 571, 573, 574, 591, 593, 603, 608, 611, 626, 633, 639, 646, 651, 662, 665, 678, 682, 687, 702, 707, 713, 714, 715, 716, 717, 718, 720, 722, 745, 778, 789, 812, 824, 825, 826, 827, 832, 841, 842, 843, 860, 868, 869, 876, 885, 893, 895, 905, 906, 907, 910, 934, 969, 976, 984, 990, 991, 992, 995, 997, 1017, 1018, 1041, 1060], "mutabl": [118, 574, 998, 1055], "mutant": 185, "mutat": [612, 624, 912], "my": 1055, "my_obj": 1053, "myeloid": 841, "myer": [178, 179], "myformat": [195, 206, 207, 208], "myformat2": [206, 207, 208], "myformat_read": [206, 208], "myformat_sniff": 207, "myobject": [206, 208], "n": [1, 53, 108, 109, 115, 117, 118, 119, 124, 125, 126, 127, 128, 132, 134, 140, 176, 178, 179, 180, 183, 184, 185, 189, 190, 191, 193, 194, 195, 206, 207, 208, 235, 236, 340, 380, 393, 447, 459, 462, 486, 499, 512, 515, 555, 569, 600, 610, 655, 656, 664, 716, 719, 722, 812, 827, 828, 829, 832, 834, 835, 836, 838, 842, 843, 870, 876, 900, 904, 913, 914, 926, 934, 938, 941, 947, 952, 954, 961, 976, 977, 984, 991, 992, 997, 1055], "n1": 872, "n4": 872, "n_": [107, 108], "n_compon": [644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663], "n_composit": [644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660], "n_featur": 661, "n_i": [109, 125, 126], "n_ob": 902, "n_pack": 3, "n_partit": 661, "n_posit": [13, 15, 17, 19, 44, 47, 52], "n_segment": [3, 14, 18, 34, 46, 51], "n_seq": [13, 14, 15, 17, 18, 19, 44, 46, 47, 51, 52], "n_sequenc": [3, 13], "n_var": 902, "na": [192, 869], "naess": 661, "name": [1, 93, 97, 116, 132, 143, 144, 161, 162, 174, 175, 178, 179, 184, 185, 186, 188, 189, 191, 192, 193, 195, 196, 221, 222, 223, 228, 232, 239, 245, 254, 255, 256, 282, 284, 286, 292, 301, 302, 304, 310, 319, 320, 321, 322, 328, 332, 334, 335, 336, 338, 339, 383, 389, 398, 399, 400, 406, 408, 450, 456, 461, 502, 508, 514, 558, 564, 573, 603, 608, 611, 612, 624, 629, 633, 639, 646, 651, 657, 662, 682, 687, 707, 713, 714, 715, 717, 718, 723, 735, 779, 814, 824, 825, 826, 860, 865, 895, 903, 906, 910, 912, 926, 928, 929, 930, 932, 934, 935, 936, 937, 940, 944, 945, 946, 947, 948, 950, 952, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 969, 971, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 990, 991, 1010, 1016, 1053, 1058], "name_txt": 194, "named_gc": 400, "namedtemporaryfil": 235, "nan": [19, 52, 84, 88, 92, 123, 178, 192, 249, 250, 252, 254, 255, 285, 296, 297, 299, 301, 302, 314, 315, 317, 319, 320, 321, 330, 338, 358, 367, 428, 437, 479, 488, 533, 542, 591, 595, 641, 642, 714, 715, 716, 717, 718, 719, 722, 824, 840, 841, 983, 995], "nan_length_valu": 983, "nanmean": 842, "naohisa": 184, "nar": 184, "nasanfta": [380, 447, 499, 555, 600], "nat": 185, "natal": 661, "nation": [183, 194, 624], "nativ": [1, 634, 683, 708, 833], "natl": [100, 103], "natsort": 898, "natur": [112, 121, 136, 137, 321, 898], "nb": 236, "nbk21097": 183, "nbk279675": 178, "nbk279682": 179, "nc": 236, "ncbi": [99, 100, 102, 103, 178, 179, 183, 185, 194, 396, 397, 399, 400, 407, 408, 409, 410, 571, 572, 950, 1055], "ncbiinsight": 194, "ncifcrf": 84, "ncrna": 574, "nd": 869, "ndarrai": [17, 18, 19, 51, 52, 88, 145, 150, 163, 340, 342, 359, 360, 362, 363, 368, 378, 379, 384, 385, 386, 387, 388, 393, 413, 429, 430, 432, 433, 438, 446, 451, 452, 453, 454, 455, 459, 462, 464, 480, 481, 483, 484, 489, 498, 503, 504, 505, 506, 507, 510, 512, 515, 517, 534, 535, 537, 538, 543, 553, 554, 559, 560, 561, 562, 563, 569, 574, 576, 592, 593, 599, 604, 605, 606, 607, 610, 616, 634, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 658, 659, 660, 661, 665, 669, 683, 692, 700, 705, 708, 720, 722, 836, 843, 863, 902, 949], "ne2": 182, "nearbi": 53, "nearli": [98, 99, 100], "necessari": [92, 178, 190, 266, 574, 665, 714, 715, 716, 745, 778, 789, 937, 1016, 1053], "necessarili": [82, 85, 92, 189, 367, 437, 488, 542, 574, 595, 843], "nee": 116, "need": [1, 82, 85, 91, 116, 143, 144, 146, 176, 181, 186, 188, 195, 206, 208, 235, 266, 281, 411, 646, 651, 652, 653, 662, 714, 715, 717, 718, 719, 812, 813, 828, 835, 838, 841, 842, 870, 934, 937, 995, 996, 1018, 1060], "needl": 98, "needleman": [0, 98, 99, 100], "neg": [1, 53, 99, 102, 105, 118, 192, 409, 648, 655, 656, 688, 827, 828, 833, 838, 842, 992], "negat": 279, "neglig": 1, "nei": 992, "neighbor": [185, 977, 992], "neighbour_join": 992, "neither": [65, 94, 236, 896, 976, 985], "nellangiqpfvtlfhwdlpqvledeyggflnsgvindfrdytdlcfkefgd": 182, "neq": 838, "nest": [188, 664, 716, 887, 902, 979, 1058], "never": [183, 193], "new": [0, 82, 85, 93, 94, 95, 109, 120, 122, 123, 143, 161, 174, 194, 206, 207, 208, 220, 230, 266, 282, 335, 336, 347, 358, 361, 389, 390, 418, 428, 431, 456, 457, 469, 479, 482, 508, 509, 522, 533, 536, 564, 565, 574, 581, 591, 608, 609, 633, 682, 705, 707, 716, 717, 719, 825, 828, 836, 868, 891, 892, 894, 895, 897, 899, 907, 908, 909, 913, 914, 938, 941, 968, 969, 973, 974, 988, 989, 992, 1055, 1058, 1060], "new_fasta_fh": 183, "new_fh": 184, "new_qual_fh": 183, "new_tabl": [868, 891, 898], "new_taxdump": 194, "new_tre": [988, 989], "newcastl": 182, "newick": [116, 143, 144, 870, 875, 904, 926, 932, 969, 990, 992, 1053, 1058], "newick_doc": 188, "newick_str": 992, "newicktre": 188, "newlin": [183, 188, 190, 195, 196, 227, 228, 231, 232, 235], "next": [1, 116, 122, 123, 143, 144, 182, 188, 195, 574, 646, 801, 827, 991, 1058, 1060], "nh": 193, "nhx": 193, "nich": 828, "nident": [178, 179], "nih": [99, 100, 102, 103, 178, 179, 183, 185, 191, 194, 399, 407, 408], "nlm": [99, 100, 102, 103, 178, 179, 183, 185, 194, 399, 407, 408], "nnz": [844, 870, 904, 911], "no_gap": [380, 447, 499, 555, 600], "node": [1, 116, 143, 144, 662, 912, 913, 914, 917, 921, 927, 928, 929, 931, 932, 933, 934, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 973, 974, 977, 978, 981, 982, 983, 984, 985, 986, 987, 991, 1053, 1058], "node_c": 961, "node_id": [948, 954, 983], "node_info": 188, "nodes_new": 194, "nodes_slim": 194, "nolengtherror": [927, 943, 952], "nomenclatur": [340, 411, 462, 515, 574], "non": [65, 110, 118, 178, 180, 182, 186, 192, 256, 340, 376, 388, 392, 444, 455, 458, 462, 495, 507, 511, 551, 563, 568, 612, 643, 644, 645, 646, 648, 651, 655, 656, 658, 659, 660, 688, 714, 717, 718, 722, 827, 833, 838, 844, 870, 885, 904, 907, 936, 937, 942, 1055], "non_tip": [959, 965, 966, 967, 982, 985, 991, 1058], "noncanon": [392, 458, 511, 568], "none": [13, 45, 50, 53, 65, 82, 84, 85, 93, 94, 95, 99, 100, 102, 103, 104, 116, 128, 132, 141, 143, 144, 145, 146, 161, 174, 178, 183, 187, 195, 196, 206, 208, 221, 222, 223, 227, 231, 235, 253, 256, 266, 277, 279, 281, 282, 300, 318, 321, 330, 333, 334, 336, 337, 340, 359, 363, 365, 366, 367, 378, 389, 393, 394, 411, 429, 433, 435, 436, 437, 446, 456, 459, 460, 462, 480, 484, 486, 487, 488, 498, 508, 512, 513, 515, 534, 538, 540, 541, 542, 553, 564, 569, 570, 574, 592, 593, 594, 595, 599, 608, 610, 628, 632, 633, 646, 651, 652, 653, 655, 656, 657, 665, 679, 681, 682, 688, 703, 706, 707, 714, 715, 716, 717, 718, 719, 720, 724, 746, 757, 790, 812, 814, 824, 825, 829, 832, 833, 836, 837, 839, 840, 841, 842, 844, 860, 864, 865, 870, 871, 872, 875, 880, 885, 886, 893, 895, 896, 900, 904, 905, 906, 907, 911, 912, 932, 933, 937, 940, 942, 950, 959, 961, 964, 965, 966, 967, 969, 976, 980, 981, 983, 984, 985, 988, 989, 991, 992, 1018, 1019, 1041, 1055, 1058, 1060], "nonlinear": 128, "nonmatch": [716, 719], "nonneg": 183, "nonparametr": [115, 643, 655], "nontip": 962, "nonzero": [177, 868, 873, 884, 888, 890, 891, 907, 911], "noparenterror": 927, "noqa": 870, "nor": [65, 82, 85, 94, 187, 190, 665, 896, 976], "norm": [724, 746, 790, 801, 860], "normal": [115, 144, 184, 185, 285, 321, 714, 718, 833, 834, 835, 838, 839, 841, 842, 860, 891, 934], "not_non": [1041, 1060], "notabl": 184, "notat": [188, 192, 462], "note": [3, 15, 16, 20, 47, 48, 50, 53, 65, 72, 77, 82, 83, 84, 85, 86, 88, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 146, 148, 177, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 256, 266, 267, 268, 280, 333, 335, 340, 343, 344, 347, 358, 361, 364, 367, 369, 380, 391, 393, 395, 396, 397, 399, 400, 407, 408, 409, 410, 411, 414, 415, 418, 428, 431, 434, 437, 447, 459, 462, 465, 466, 469, 479, 482, 485, 488, 499, 512, 515, 518, 519, 522, 533, 536, 539, 542, 544, 555, 566, 567, 569, 571, 572, 574, 577, 578, 581, 591, 595, 600, 610, 612, 616, 623, 624, 634, 637, 638, 641, 642, 646, 651, 652, 653, 655, 657, 661, 662, 663, 665, 669, 676, 683, 685, 686, 688, 692, 699, 700, 705, 708, 711, 712, 714, 715, 716, 717, 718, 719, 722, 812, 824, 827, 828, 833, 835, 836, 841, 842, 843, 844, 847, 860, 861, 869, 870, 876, 885, 887, 900, 902, 903, 904, 911, 930, 932, 933, 934, 935, 937, 942, 948, 950, 976, 981, 983, 984, 985, 986, 991, 992, 995, 997, 1016, 1017, 1055, 1058, 1060], "notebook": 814, "noth": [95, 235, 335, 394, 460, 513, 570, 1018], "notic": [1, 183, 188, 190, 842, 1060], "notifi": 716, "notimplementederror": [827, 828], "notion": 716, "notredam": [657, 663], "notstart": 192, "nov": [100, 103, 182, 824], "novel": 646, "novemb": 992, "now": [1, 121, 182, 183, 185, 190, 574, 643, 646, 715, 812, 813, 838, 841, 842, 907, 1058, 1060], "np": [13, 14, 15, 19, 46, 47, 52, 84, 88, 116, 123, 132, 143, 144, 150, 163, 178, 249, 252, 296, 299, 314, 317, 321, 330, 340, 342, 359, 360, 362, 363, 367, 368, 378, 379, 384, 385, 386, 387, 388, 393, 413, 429, 430, 432, 433, 437, 438, 446, 451, 452, 453, 454, 455, 459, 462, 464, 480, 481, 483, 484, 488, 489, 498, 503, 504, 505, 506, 507, 510, 512, 515, 517, 534, 535, 537, 538, 542, 543, 553, 554, 559, 560, 561, 562, 563, 569, 574, 576, 592, 593, 595, 599, 604, 605, 606, 607, 610, 612, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 714, 716, 717, 718, 719, 722, 723, 812, 813, 824, 837, 838, 840, 841, 842, 843, 857, 858, 859, 860, 861, 863, 864, 867, 868, 874, 875, 876, 877, 878, 880, 881, 884, 885, 886, 888, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 906, 907, 909, 954, 976, 991, 995], "np_286546": 178, "npd": 132, "nrte": [380, 447, 499, 555, 600], "ns_": 128, "nt": 256, "nuc": [393, 459, 512, 569, 610, 612, 624], "nuc_pattern": 1060, "nuccor": 185, "nucl": 184, "nucleic": [190, 194, 340, 411, 462, 515, 574], "nucleobas": [340, 515], "nucleotid": [0, 53, 99, 102, 179, 182, 183, 184, 185, 340, 357, 379, 391, 393, 459, 512, 515, 532, 554, 566, 569, 610, 612, 624, 1060], "nucleotidemixin": [357, 391, 532, 566], "null": [188, 646, 651, 722, 838, 907], "num_it": [838, 841, 842], "num_object": 720, "num_repeat": 128, "num_run": [841, 842], "number": [1, 65, 77, 82, 85, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 176, 178, 180, 182, 183, 185, 188, 190, 191, 193, 194, 235, 256, 277, 321, 352, 359, 367, 384, 386, 423, 429, 437, 451, 453, 474, 480, 488, 503, 505, 527, 534, 542, 559, 561, 586, 592, 595, 604, 606, 612, 627, 645, 646, 651, 655, 656, 658, 659, 660, 661, 665, 714, 715, 716, 717, 718, 719, 720, 722, 757, 801, 812, 828, 832, 833, 835, 836, 838, 839, 841, 842, 843, 844, 860, 870, 874, 876, 890, 900, 904, 932, 939, 976, 995, 996], "number_of_dimens": [718, 833], "numer": [1, 19, 52, 117, 121, 178, 187, 192, 194, 303, 321, 330, 334, 338, 661, 715, 716, 757, 813, 824, 827, 828, 834, 835, 842, 996], "numeric_onli": 1, "numericmetadatacolumn": [285, 321, 332], "numpi": [1, 13, 14, 15, 46, 47, 145, 150, 163, 616, 634, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 669, 683, 692, 700, 708, 714, 718, 720, 722, 723, 757, 779, 801, 812, 813, 838, 840, 841, 842, 843, 857, 858, 859, 860, 861, 864, 867, 868, 874, 875, 876, 877, 878, 880, 881, 885, 886, 890, 891, 892, 893, 894, 896, 898, 899, 900, 901, 904, 906, 907, 937, 976, 1055], "nutrient": 661, "nwnnnnnn": [371, 376, 439, 444, 490, 495, 546, 551], "o": [92, 93, 97, 132, 161, 162, 174, 175, 182, 183, 184, 191, 193, 282, 284, 336, 339, 389, 398, 456, 461, 462, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 876, 895, 910, 969, 990, 992, 1053, 1059], "o1": [858, 859, 861, 864, 867, 868, 874, 875, 876, 877, 878, 880, 881, 885, 886, 887, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 906, 907, 909], "o2": [858, 859, 861, 864, 867, 868, 874, 875, 876, 877, 878, 880, 881, 885, 886, 887, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 906, 907, 909], "o3": [858, 859, 861, 867, 876, 881, 885, 894], "o31698": 193, "o31699": 193, "o4": [858, 859, 861, 876, 894], "o5": [861, 876], "o83071": 193, "ob": [1, 110, 139, 902], "obesrvation_metadata_f": 885, "obf": 184, "obj": [195, 208, 229, 233, 1009, 1060], "object": [0, 1, 2, 3, 16, 48, 53, 65, 68, 69, 70, 79, 82, 85, 86, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 146, 149, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 227, 229, 231, 233, 238, 239, 245, 248, 251, 256, 257, 263, 265, 266, 267, 268, 269, 275, 277, 278, 279, 280, 281, 285, 286, 292, 295, 298, 303, 304, 310, 313, 316, 321, 322, 328, 331, 334, 335, 338, 340, 342, 345, 347, 358, 359, 363, 366, 367, 374, 375, 377, 378, 379, 384, 385, 386, 387, 394, 413, 416, 418, 428, 429, 433, 436, 437, 442, 443, 445, 446, 451, 452, 453, 454, 460, 462, 464, 467, 469, 479, 480, 484, 487, 488, 493, 494, 496, 498, 503, 504, 505, 506, 513, 515, 517, 520, 522, 533, 534, 538, 541, 542, 549, 550, 552, 553, 554, 559, 560, 561, 562, 570, 574, 576, 579, 581, 591, 592, 593, 594, 595, 596, 597, 598, 599, 604, 605, 606, 607, 616, 626, 628, 632, 640, 641, 646, 664, 665, 669, 678, 679, 681, 688, 692, 702, 703, 706, 714, 715, 717, 718, 719, 720, 745, 778, 789, 827, 828, 833, 834, 835, 844, 847, 859, 869, 870, 871, 872, 897, 902, 904, 905, 906, 909, 912, 929, 937, 944, 976, 981, 983, 992, 995, 996, 1017, 1018, 1041, 1053, 1055, 1058, 1060], "obs_id": [874, 876, 881], "obs_map": 872, "obs_phi": 860, "observ": [1, 116, 119, 128, 131, 139, 143, 144, 149, 177, 367, 393, 437, 459, 488, 512, 542, 569, 595, 610, 646, 722, 813, 838, 841, 842, 844, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 911, 963, 991, 1057, 1060], "observation_column_nam": [865, 906], "observation_group_metadata": [844, 875], "observation_id": [844, 881, 889, 894], "observation_index": 844, "observation_metadata": 844, "observation_metadata_f": 885, "observed_char": [367, 437, 488, 542, 595], "observed_featur": 139, "obsolet": 190, "obtain": [117, 321, 347, 418, 469, 522, 574, 581, 623, 624, 638, 646, 664, 676, 686, 699, 710, 712, 714, 716, 718, 1012, 1013, 1014], "obviou": 188, "oc": 182, "occur": [53, 179, 183, 184, 187, 188, 228, 232, 235, 378, 446, 498, 553, 574, 599, 842, 936, 945], "occurr": [113, 138, 359, 371, 372, 373, 376, 429, 439, 440, 441, 444, 480, 490, 491, 492, 495, 497, 534, 546, 547, 548, 551, 592], "oct": [183, 185], "odot": [653, 660], "off": [121, 134, 340, 462, 515, 658, 841, 935, 991, 995, 1060], "offer": 1018, "offici": 177, "offset": [184, 185], "often": [1, 116, 141, 145, 182, 183, 185, 664, 722, 828, 833, 838, 1016], "oh": 1052, "ol": 116, "old": 909, "older": 190, "om": [844, 911], "omic": 643, "ominu": 659, "omit": [13, 45, 188, 321, 334, 664, 900, 950, 984, 986, 991, 1053], "ommit": 191, "onc": [119, 183, 195, 985], "one": [0, 1, 82, 83, 84, 85, 89, 90, 92, 98, 99, 100, 116, 117, 118, 121, 126, 132, 141, 143, 144, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 207, 228, 232, 252, 254, 278, 281, 283, 299, 301, 317, 319, 321, 350, 355, 358, 371, 372, 373, 374, 375, 376, 377, 409, 421, 426, 428, 439, 440, 441, 442, 443, 444, 445, 462, 472, 477, 479, 490, 491, 492, 493, 494, 495, 496, 497, 525, 530, 533, 546, 547, 548, 549, 550, 551, 552, 584, 589, 591, 596, 597, 598, 612, 616, 628, 646, 665, 669, 679, 692, 703, 710, 715, 716, 718, 719, 722, 723, 724, 813, 829, 832, 833, 840, 841, 842, 857, 860, 885, 896, 927, 929, 930, 936, 950, 963, 968, 976, 1053, 1058, 1060], "one_to_mani": 860, "one_to_many_md_kei": 860, "one_to_many_mod": 860, "ones": [13, 17, 44, 828, 841, 885], "onli": [0, 1, 53, 92, 119, 122, 132, 149, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 235, 249, 250, 266, 281, 296, 297, 314, 315, 321, 330, 335, 340, 358, 365, 399, 428, 435, 462, 479, 486, 515, 533, 540, 574, 591, 612, 626, 643, 646, 658, 678, 688, 702, 703, 705, 710, 714, 718, 719, 812, 813, 828, 833, 835, 840, 841, 842, 858, 859, 860, 868, 870, 882, 907, 933, 936, 937, 939, 942, 945, 968, 976, 981, 985, 998, 1041, 1058, 1060], "onlin": [121, 126, 184], "ons": 192, "onto": [195, 226, 834, 991], "ontologi": 186, "ontology_term": 186, "oo": 1053, "open": [0, 93, 97, 98, 99, 100, 101, 102, 103, 146, 161, 162, 174, 175, 178, 179, 184, 195, 206, 208, 227, 228, 229, 231, 232, 233, 236, 237, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 870, 895, 906, 910, 969, 990, 1017, 1052, 1053], "open_fil": 1017, "open_filehandl": 1053, "oper": [1, 3, 82, 85, 92, 143, 178, 183, 188, 279, 340, 369, 370, 462, 515, 544, 545, 574, 643, 645, 658, 659, 660, 664, 665, 700, 716, 717, 833, 855, 856, 858, 859, 860, 864, 870, 883, 887, 896, 897, 898, 899, 900, 901, 904, 907, 950, 974, 991, 1019, 1052, 1053, 1055], "operon": 256, "opinion": 118, "oplu": 658, "oppos": [719, 1060], "optim": [1, 53, 117, 141, 143, 144, 145, 718, 943, 993], "option": [13, 15, 19, 34, 45, 47, 52, 53, 65, 82, 84, 85, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 110, 111, 116, 121, 122, 123, 128, 132, 135, 141, 143, 144, 145, 146, 149, 150, 161, 162, 174, 175, 180, 181, 183, 184, 189, 190, 192, 193, 194, 196, 206, 207, 208, 227, 228, 229, 231, 232, 233, 235, 249, 253, 254, 255, 256, 266, 277, 281, 282, 283, 284, 296, 300, 301, 302, 314, 318, 319, 320, 321, 330, 333, 334, 336, 337, 338, 339, 340, 345, 357, 358, 359, 363, 365, 366, 367, 370, 378, 380, 381, 382, 384, 386, 389, 392, 393, 398, 399, 408, 409, 410, 416, 428, 429, 433, 435, 436, 437, 446, 447, 448, 449, 451, 453, 456, 458, 459, 461, 462, 467, 479, 480, 484, 486, 487, 488, 498, 499, 500, 501, 503, 505, 508, 511, 512, 514, 515, 520, 532, 533, 534, 538, 540, 541, 542, 545, 553, 555, 556, 557, 559, 561, 564, 568, 569, 571, 572, 573, 574, 579, 591, 592, 593, 594, 595, 599, 600, 601, 602, 604, 606, 608, 610, 611, 623, 626, 628, 632, 633, 639, 642, 646, 651, 652, 653, 655, 656, 665, 676, 678, 679, 681, 682, 687, 699, 702, 703, 705, 706, 707, 713, 714, 715, 716, 717, 718, 719, 720, 722, 757, 812, 824, 825, 826, 828, 829, 832, 833, 835, 836, 839, 840, 841, 842, 843, 855, 856, 857, 860, 861, 863, 864, 867, 868, 870, 875, 876, 877, 880, 881, 882, 883, 884, 885, 888, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 933, 950, 955, 969, 976, 983, 984, 990, 991, 992, 995, 996, 1017, 1018, 1019, 1041, 1055, 1060], "or_f": 189, "oral": 1, "orcutt": 624, "ord_r": 189, "order": [1, 53, 75, 80, 86, 91, 92, 95, 141, 145, 176, 178, 183, 187, 188, 189, 190, 193, 248, 253, 278, 295, 300, 313, 318, 321, 322, 328, 331, 335, 337, 340, 355, 364, 367, 393, 397, 399, 410, 426, 434, 437, 459, 462, 477, 485, 488, 512, 515, 530, 539, 542, 569, 572, 589, 595, 610, 614, 616, 623, 626, 638, 646, 651, 662, 667, 669, 676, 678, 686, 690, 692, 699, 702, 705, 710, 712, 714, 715, 716, 717, 718, 719, 722, 827, 836, 840, 841, 870, 890, 898, 899, 904, 962, 981, 982, 983, 991, 993, 995, 1058, 1060], "ordin": [1, 718, 996, 997, 1052], "ordination_result": 813, "ordinationresult": [189, 718, 827, 828, 833, 834, 835, 996], "org": [53, 104, 146, 176, 177, 183, 184, 185, 190, 192, 193, 253, 300, 318, 321, 334, 337, 634, 657, 661, 663, 665, 683, 688, 700, 708, 714, 715, 716, 717, 718, 824, 844, 870, 871, 904, 911, 992], "organ": [1, 182, 185, 194], "organis": 185, "orient": [723, 824, 840, 870, 904, 973, 1053], "origin": [1, 3, 15, 18, 19, 47, 51, 52, 98, 100, 101, 103, 108, 109, 112, 115, 116, 119, 120, 124, 125, 132, 133, 135, 136, 143, 144, 146, 180, 181, 183, 188, 190, 191, 250, 254, 255, 297, 301, 302, 315, 319, 320, 338, 358, 428, 479, 533, 574, 591, 714, 715, 716, 717, 718, 722, 827, 835, 843, 860, 868, 891, 907, 935, 991, 992, 1058, 1060], "orthogon": [652, 653, 661], "ortholog": [844, 911], "orthonorm": [652, 653, 661, 662], "orthornorm": 652, "ostel": 183, "other": [0, 1, 15, 47, 53, 70, 79, 89, 90, 92, 116, 131, 146, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 235, 239, 245, 257, 263, 269, 275, 280, 286, 292, 304, 310, 321, 322, 328, 335, 340, 345, 354, 363, 369, 370, 375, 377, 379, 384, 385, 386, 387, 390, 400, 406, 416, 425, 433, 443, 445, 451, 452, 453, 454, 457, 462, 467, 476, 484, 494, 496, 503, 504, 505, 506, 509, 515, 520, 529, 538, 544, 545, 550, 552, 554, 559, 560, 561, 562, 565, 574, 579, 588, 593, 597, 598, 604, 605, 606, 607, 609, 612, 614, 621, 640, 646, 651, 664, 667, 674, 688, 690, 697, 718, 813, 824, 827, 828, 833, 840, 842, 845, 853, 857, 861, 866, 881, 885, 912, 935, 936, 937, 943, 945, 946, 995, 1018, 1029, 1052, 1053, 1054, 1055, 1058, 1060], "other_vertebr": 179, "otherwis": [50, 53, 66, 82, 85, 95, 110, 111, 183, 185, 188, 191, 192, 235, 252, 285, 299, 317, 393, 459, 512, 569, 610, 613, 614, 616, 621, 626, 666, 667, 669, 674, 678, 689, 690, 692, 697, 702, 705, 719, 847, 863, 867, 879, 885, 891, 894, 970, 1055], "otu": [1, 130, 192, 844, 857, 858, 859, 860, 861, 865, 869, 870, 871, 876, 881, 885, 891, 893, 894, 898, 899, 904, 906, 907, 911], "otu1": 865, "otu2": 865, "otu_id": [116, 132, 143, 144], "otuid": 192, "our": [1, 118, 184, 192, 195, 207, 236, 380, 447, 499, 555, 600, 813, 838, 841, 842, 843, 1055, 1060], "out": [84, 181, 191, 192, 195, 247, 294, 312, 824, 868, 900, 936, 937, 1060], "out_f": [745, 778, 789], "out_fh": 664, "outcom": [134, 841], "outer": [91, 92, 358, 428, 479, 533, 591, 627], "outfmt": [178, 179], "output": [2, 92, 178, 179, 181, 188, 190, 191, 193, 383, 450, 502, 558, 603, 651, 714, 718, 719, 757, 828, 854, 860, 865, 905, 906, 984, 992, 1052, 1060], "outsid": [184, 256, 280, 367, 437, 488, 542, 595], "over": [75, 80, 91, 146, 183, 184, 191, 192, 193, 350, 355, 421, 426, 472, 477, 525, 530, 584, 589, 612, 651, 720, 734, 756, 767, 800, 811, 838, 839, 847, 857, 860, 861, 880, 881, 882, 884, 887, 888, 893, 896, 900, 907, 921, 959, 962, 965, 966, 967, 979, 982, 985, 1058], "overal": [844, 911], "overhead": [812, 870], "overlap": [121, 281, 335, 381, 382, 448, 449, 500, 501, 556, 557, 601, 602, 623, 642, 651, 676, 699, 885, 936], "overrid": [53, 99, 102, 132, 196, 206, 207, 208, 227, 231, 334, 968, 1060], "overridden": [53, 65, 185, 992], "override_skip_babp": 53, "overriden": [206, 207, 208], "overview": 992, "own": [82, 85, 92, 176, 183, 189, 193, 195, 838], "owner": 1002, "oxfordjourn": 184, "oxtobi": 182, "p": [1, 53, 104, 116, 125, 126, 132, 462, 646, 651, 661, 664, 714, 716, 717, 718, 719, 722, 813, 827, 828, 829, 835, 838, 841, 842, 900], "p26204": 182, "p__b": 860, "p__c": 860, "p_adjust": [646, 651], "p_i": [112, 114, 135, 136], "p_valu": [1, 716, 722], "pack": 3, "packag": [53, 104, 106, 142, 180, 183, 188, 190, 651, 661, 664, 714, 715, 716, 717, 718, 721, 827, 828, 835, 838, 1058, 1059], "pad": [92, 190, 358, 428, 479, 533, 591], "page": [118, 646, 992, 1058], "pair": [0, 1, 50, 89, 98, 99, 100, 102, 105, 143, 144, 145, 149, 182, 184, 185, 186, 188, 193, 277, 281, 375, 443, 494, 550, 597, 612, 616, 623, 638, 642, 646, 669, 676, 686, 692, 699, 703, 710, 712, 719, 838, 952, 981, 1055], "pairwis": [34, 44, 45, 50, 145, 146, 149, 628, 646, 657, 679, 703, 719, 722, 860, 882, 943, 981, 1058], "pairwise_dist": 145, "pairwise_func": 145, "pam": [462, 612, 624], "pam250": 624, "pam30": 624, "pam70": 624, "pancoro": 182, "panda": [1, 65, 90, 95, 145, 178, 179, 194, 254, 255, 285, 301, 302, 319, 320, 321, 338, 340, 377, 445, 462, 496, 515, 552, 598, 635, 646, 651, 684, 709, 710, 714, 715, 717, 718, 719, 723, 757, 801, 813, 824, 840, 841, 858, 887, 903, 950, 995, 1055], "paper": 192, "papilionoidea": 182, "par_dist": 722, "parallel": [118, 146], "paramet": [1, 3, 13, 14, 15, 16, 19, 20, 34, 44, 45, 46, 47, 48, 50, 52, 53, 54, 65, 67, 70, 79, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 161, 162, 163, 174, 175, 195, 196, 206, 207, 208, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 239, 245, 248, 249, 251, 253, 254, 255, 256, 257, 263, 266, 269, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 295, 296, 298, 300, 301, 302, 304, 310, 313, 314, 316, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 347, 354, 357, 358, 359, 363, 365, 366, 367, 370, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 406, 408, 409, 410, 413, 416, 418, 425, 428, 429, 433, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 467, 469, 476, 479, 480, 484, 486, 487, 488, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 517, 520, 522, 529, 532, 533, 534, 538, 540, 541, 542, 545, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 568, 569, 570, 571, 572, 573, 574, 576, 579, 581, 588, 591, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 621, 623, 624, 626, 627, 628, 630, 631, 632, 633, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 669, 674, 676, 678, 679, 680, 681, 682, 686, 687, 689, 690, 692, 697, 699, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 745, 757, 778, 789, 801, 812, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 847, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 927, 929, 930, 933, 934, 935, 936, 937, 939, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 955, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 973, 975, 976, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 995, 996, 997, 998, 1015, 1016, 1017, 1018, 1019, 1029, 1030, 1041, 1060], "parametr": [110, 643, 646, 714, 717], "params_guess": 128, "parasit": 722, "pardi": 132, "parent": [182, 186, 188, 194, 574, 661, 912, 929, 932, 944, 947, 956, 964, 968, 977, 983, 986, 988, 989, 1058], "parent_tax_id": [194, 950], "parenthes": 1058, "parenthesi": 188, "parker": 108, "pars": [183, 184, 185, 187, 195, 869, 870, 871, 872, 1053], "parse_biom_t": 870, "parse_f": 870, "parser": [186, 188, 1053], "part": [178, 183, 185, 188, 191, 640, 644, 661, 812, 893, 962, 1018, 1058], "partial": [53, 132, 280, 847], "partial_beta_divers": 146, "partialdistancematrix": 146, "particip": 842, "particuarli": 183, "particular": [1, 912, 994, 1060], "particularli": 934, "partit": [661, 662, 860], "pass": [1, 65, 72, 85, 93, 94, 97, 104, 141, 145, 146, 147, 148, 161, 162, 174, 175, 178, 180, 183, 185, 190, 191, 193, 206, 207, 208, 220, 226, 227, 228, 229, 230, 231, 232, 233, 235, 282, 284, 336, 339, 340, 363, 365, 367, 389, 390, 398, 409, 433, 435, 437, 456, 457, 461, 462, 484, 486, 488, 508, 509, 514, 515, 538, 540, 542, 564, 565, 573, 574, 593, 595, 608, 609, 611, 616, 633, 639, 669, 682, 687, 692, 703, 705, 707, 713, 716, 719, 757, 825, 826, 841, 881, 894, 895, 910, 958, 960, 969, 990, 992, 1041, 1058, 1060], "passthrough": 95, "password": 195, "patch": 226, "path": [3, 13, 14, 15, 16, 17, 18, 19, 34, 44, 45, 46, 47, 48, 50, 51, 52, 87, 177, 181, 183, 184, 191, 235, 253, 300, 318, 334, 337, 860, 928, 1016], "pathwai": [844, 860, 911], "pattern": [194, 366, 394, 436, 460, 487, 513, 541, 570, 594, 813, 1055, 1060], "paw": [462, 497, 510], "pawhea": 0, "pawlowski": [643, 657, 663], "pc": [1, 723, 824], "pca": [827, 833, 835], "pcbi": [657, 663], "pcoa": [1, 189, 718, 814, 824, 834], "pcoa_result": 824, "pcr": 842, "pd": [1, 65, 85, 90, 95, 116, 132, 141, 178, 179, 194, 285, 377, 445, 496, 552, 574, 598, 623, 635, 638, 646, 651, 664, 676, 684, 686, 699, 709, 710, 712, 714, 715, 718, 723, 813, 814, 824, 827, 835, 840, 841, 858, 887, 903, 950, 995], "pd_": 132, "pdf": 191, "pdist": [1, 142, 145, 148, 722], "pearson": [183, 716, 719, 722, 937], "pearsonr": [716, 722, 838], "peerj": 132, "penal": [98, 99, 100], "penalize_terminal_gap": [98, 99, 100], "penalti": [0, 53, 98, 99, 100, 101, 102, 103], "pentapetala": 182, "per": [3, 34, 92, 178, 179, 191, 193, 340, 462, 515, 574, 651, 719, 722, 812, 835, 841, 842, 901, 930, 1017], "percent": [178, 1055], "percentag": [178, 643], "percentil": 646, "percentile_df": 646, "perfect": [813, 828], "perform": [0, 1, 3, 53, 91, 92, 104, 116, 128, 141, 143, 144, 145, 146, 183, 184, 192, 257, 335, 340, 397, 410, 462, 515, 572, 574, 614, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 657, 658, 659, 660, 662, 663, 665, 667, 688, 690, 700, 703, 718, 719, 722, 723, 724, 746, 790, 801, 813, 833, 835, 836, 842, 843, 847, 860, 891, 894, 900, 913, 914, 938, 941, 948, 959, 965, 966, 967, 976, 988, 989, 995, 1053], "period": [192, 253, 300, 318, 337], "periton": 841, "perm_stat": 722, "permanova": [714, 718], "permdisp2": 718, "permiss": [183, 188, 190], "permit": [3, 188, 207], "permut": [1, 257, 714, 716, 717, 718, 719, 722], "perspect": 132, "pertain": 721, "perturb": [643, 659], "petchei": 116, "peter": 184, "pfam": 193, "pg": 114, "pgc": 194, "ph": 715, "phagocyt": 841, "phase": [185, 186], "phe": 462, "phenylalanin": 462, "php": 183, "phred": [183, 184], "phred_offset": [184, 191], "phydiv": 116, "phylip": [93, 97, 183, 188, 991, 1053, 1058], "phylip_multiple_alignment_format": 190, "phylipformaterror": 190, "phylo": 190, "phylochip": [116, 143, 144], "phylogenet": [1, 116, 132, 143, 144, 188, 190, 664, 722, 912, 935, 945, 992, 1052, 1055], "phylogeni": [190, 721, 722], "phylum": 950, "physic": [834, 842], "pick": [53, 841], "pickl": [6, 24, 37, 57, 73, 153, 166, 199, 212, 241, 259, 271, 288, 306, 324, 348, 402, 419, 470, 523, 582, 617, 670, 693, 727, 738, 749, 760, 771, 782, 793, 804, 817, 848, 918, 1003, 1022, 1034, 1045], "pident": [178, 179], "pie": 114, "piec": 1060, "pielou": [133, 137], "pielou_": 120, "piet": 828, "pii": 180, "ping": [53, 104], "pipe": 194, "pirrung": 824, "pisc": 121, "pitfal": 84, "pizetti": 118, "place": [95, 188, 193, 335, 409, 812, 833, 836, 868, 891, 894, 904, 907, 929, 954, 986, 996], "placebo": [646, 651], "plain": [180, 183, 184, 185, 188, 190, 191], "plan": 192, "planetmath": 688, "plankton": 108, "plant": [140, 182, 661], "plastid": 194, "pleas": [72, 93, 97, 161, 162, 174, 175, 183, 191, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990, 1057], "pleij": 193, "plm": [2, 181], "pln": [182, 194], "plo": [53, 104, 122, 123, 657, 663], "ploson": [53, 104], "plot": [1, 814], "plu": [194, 340, 462, 515], "plugin": 192, "plural": [1, 237], "pm": 115, "pmid": [193, 716, 992], "png": 814, "point": [84, 118, 121, 123, 176, 180, 192, 195, 207, 256, 321, 383, 390, 393, 450, 457, 459, 502, 509, 512, 558, 565, 569, 603, 609, 610, 624, 718, 724, 746, 801, 813, 824, 841, 842, 974, 995, 1016], "poisson": [122, 123], "polymeras": 193, "pone": [53, 104], "pool": 107, "poorli": [722, 833], "pop": [968, 970, 971, 975], "popul": [110, 117, 119, 139, 191, 193, 383, 450, 502, 558, 603, 658, 720, 838, 842], "port": 192, "portal": 194, "portion": 716, "pos_rat": 842, "posit": [0, 3, 13, 14, 15, 16, 18, 34, 45, 46, 47, 48, 51, 53, 65, 66, 70, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 178, 179, 180, 183, 184, 185, 188, 190, 191, 192, 193, 340, 345, 347, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 377, 378, 380, 383, 384, 385, 386, 387, 388, 390, 391, 395, 396, 397, 409, 410, 416, 418, 421, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 445, 446, 447, 450, 451, 452, 453, 454, 455, 457, 462, 467, 469, 472, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 496, 498, 499, 502, 503, 504, 505, 506, 507, 509, 510, 515, 520, 522, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 552, 553, 555, 558, 559, 560, 561, 562, 563, 565, 566, 567, 571, 572, 574, 579, 581, 584, 588, 589, 590, 591, 592, 594, 598, 599, 600, 603, 604, 605, 606, 607, 609, 644, 645, 646, 655, 716, 722, 801, 814, 838, 839, 841, 842, 847, 874, 887, 964, 1055], "positional_metadata": [65, 70, 83, 90, 91, 92, 183, 193, 340, 345, 357, 358, 361, 377, 383, 390, 391, 411, 416, 428, 431, 445, 450, 457, 462, 467, 479, 482, 496, 502, 509, 515, 520, 532, 533, 536, 552, 558, 565, 566, 574, 579, 591, 598, 603, 609, 1055], "possibl": [1, 53, 72, 133, 137, 183, 184, 192, 193, 280, 364, 397, 410, 434, 485, 539, 572, 715, 719, 841, 937, 985, 991], "post": [190, 838, 842], "posterior": [651, 912], "postmenopaus": 842, "postord": [942, 945, 959, 962, 966, 967, 982, 985, 1058], "potenti": [183, 380, 447, 499, 555, 600, 812, 971, 993, 1060], "pound": [192, 321], "power": [643, 651, 844, 911, 1053], "pp": [117, 127, 134, 828], "ppo": [178, 179], "practic": [1, 92, 132, 183, 184, 191, 812, 940, 945], "pre": [366, 394, 436, 460, 487, 513, 541, 570, 594, 612, 624, 629, 842], "pre_and_postord": [959, 962, 965, 967, 982, 985], "pre_rat": 842, "prealloc": 1018, "preced": [53, 180, 188, 190], "precomput": 837, "predefin": [186, 363, 433, 484, 538, 593], "predict": [122, 123, 193, 841], "prefer": [84, 141, 145, 184, 253, 300, 318, 337, 827, 828], "prefer_self": 885, "prefix": 194, "preliminari": 841, "premenopaus": 842, "preorder": [959, 962, 965, 966, 982, 985, 1058], "prepar": 192, "preq1": 185, "presenc": [111, 132, 400, 409, 842, 892], "present": [83, 84, 116, 143, 144, 178, 181, 183, 189, 192, 193, 267, 268, 321, 340, 357, 360, 361, 362, 367, 368, 378, 388, 391, 409, 430, 431, 432, 437, 438, 446, 455, 462, 481, 482, 483, 488, 489, 498, 507, 510, 515, 532, 535, 536, 537, 542, 543, 553, 563, 566, 595, 599, 626, 646, 678, 702, 714, 715, 717, 718, 757, 823, 833, 842, 843, 860, 869, 870, 909, 936, 991, 992, 994, 1058], "preserv": [188, 321, 813, 827, 828, 833, 974], "press": 109, "presum": 183, "prevent": 53, "previou": [1, 98, 99, 100, 101, 102, 103, 345, 416, 467, 520, 579, 714, 716, 718], "previous": [0, 383, 390, 450, 457, 502, 509, 558, 565, 603, 609, 1060], "pri": 194, "primari": [195, 1055], "primer": 715, "princip": [1, 718, 824, 827, 833, 834], "principl": 838, "print": [0, 1, 91, 116, 143, 144, 180, 183, 184, 185, 186, 188, 190, 191, 193, 364, 380, 393, 397, 410, 434, 447, 459, 485, 499, 512, 539, 555, 569, 572, 574, 600, 610, 664, 716, 722, 723, 812, 838, 842, 857, 858, 859, 860, 861, 864, 868, 874, 876, 877, 881, 882, 883, 884, 885, 888, 891, 892, 893, 894, 898, 899, 900, 906, 907, 909, 913, 914, 929, 930, 933, 934, 937, 938, 939, 941, 942, 944, 945, 946, 948, 950, 951, 953, 956, 957, 958, 959, 960, 962, 964, 965, 966, 967, 968, 971, 973, 974, 975, 976, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 1055, 1058, 1060], "printabl": [184, 191], "prior": [409, 716, 719, 900, 950, 1019, 1029, 1060], "prioriti": [132, 1030, 1031, 1060], "privat": [185, 930], "prng": 812, "pro": 462, "prob": [65, 70, 83, 91], "probabl": [112, 122, 123, 134, 651, 723, 735, 812, 827, 838, 842, 912], "problem": [192, 646, 833], "problemat": [192, 983], "proc": [100, 103], "procedur": [718, 1053], "proceed": 624, "process": [146, 183, 193, 280, 651, 835, 905, 906, 994, 1019, 1060], "process_func": 872, "processor": 1060, "prod": [649, 661], "produc": [178, 179, 190, 191, 206, 380, 447, 499, 555, 600, 827, 835], "product": [0, 256, 654, 716], "program": [187, 188, 192, 194], "progress": 715, "project": [146, 184, 644, 661, 714, 715, 716, 717, 718, 834], "prolin": 462, "promis": 646, "pronounc": [844, 911, 1052], "prop_expl": [723, 724, 746, 757, 790, 801], "propag": 574, "properli": [188, 235], "properti": [180, 190, 194, 335, 400, 406, 411, 612, 628, 679, 688, 703, 838, 932, 968, 998, 1010, 1012, 1013, 1014, 1054], "proport": [112, 114, 118, 119, 128, 132, 135, 136, 189, 370, 545, 641, 643, 644, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 714, 716, 717, 723, 757, 801, 814, 827, 833, 835, 935], "proportion": [657, 663], "proportion_explain": [813, 814], "propos": [135, 992], "prot": 182, "protein": [0, 2, 53, 65, 84, 98, 100, 103, 104, 150, 163, 178, 180, 181, 182, 183, 184, 185, 190, 191, 193, 380, 393, 396, 397, 399, 409, 410, 411, 447, 459, 555, 569, 571, 572, 574, 600, 610, 624, 841, 1055], "protein_from_dna": 1055, "protein_from_rna": 1055, "protein_id": 182, "proteinembed": 181, "proteinvector": 181, "provid": [0, 1, 2, 44, 50, 53, 65, 82, 84, 85, 93, 94, 99, 102, 104, 106, 116, 121, 132, 141, 142, 143, 144, 145, 161, 174, 178, 181, 183, 184, 188, 190, 192, 193, 194, 195, 206, 208, 227, 228, 231, 232, 234, 236, 251, 253, 282, 298, 300, 316, 318, 321, 334, 335, 336, 337, 345, 367, 380, 383, 389, 393, 416, 437, 447, 450, 456, 459, 467, 488, 499, 502, 508, 512, 515, 520, 542, 555, 558, 564, 569, 574, 579, 595, 600, 603, 608, 610, 612, 628, 633, 638, 643, 651, 664, 665, 679, 682, 686, 703, 707, 712, 714, 715, 716, 717, 718, 720, 723, 757, 812, 813, 814, 824, 825, 829, 838, 840, 841, 844, 855, 863, 865, 868, 870, 875, 877, 878, 883, 884, 886, 888, 893, 894, 895, 900, 904, 905, 907, 909, 911, 934, 942, 950, 963, 969, 973, 976, 983, 991, 992, 1019, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060], "proxim": 813, "prune": [933, 975, 986, 987], "psa": [98, 101], "pseudo": [717, 838], "pseudocount": [643, 646, 651], "pseudoknot": 193, "pub": [182, 194, 256], "public": [132, 184, 824], "publish": [184, 193], "pubm": [182, 185, 574], "pull": 183, "pure": [0, 993], "purin": [340, 365, 435, 486, 540, 1055], "purpos": [0, 1, 104, 107, 192, 194, 399, 838, 1060], "put": [342, 413, 464, 517, 576], "pvalu": 651, "pwmantel": 716, "pwr": 841, "pwr_001": 838, "pwr_010": 838, "pwr_100": 838, "pwr_est": 842, "pwr_est2": 842, "py": [184, 195], "pycog": [116, 143, 144, 991], "pyl": 462, "pyrimidin": [340, 365, 540], "pyrosequenc": [116, 143, 144], "pyrrolysin": 462, "python": [0, 1, 20, 574, 664, 688, 716, 993, 998, 1052, 1053, 1055], "q": [53, 121, 179, 462, 828, 829], "q2": 192, "q2cli": 192, "qacc": [178, 179], "qaccver": [178, 179], "qcov": [178, 179], "qcovhsp": [178, 179], "qend": [178, 179], "qframe": [178, 179], "qgi": [178, 179], "qiim": [116, 143, 144, 192, 321], "qiime2": [192, 253, 300, 318, 321, 334, 337], "qiita": 192, "qiu": 722, "qlen": [178, 179], "qseq": [178, 179, 389, 456, 508, 564, 608], "qseqid": [178, 179], "qstart": [178, 179], "qual": 184, "qual_fl": 183, "qualifi": [182, 185], "qualit": [143, 144, 824], "qualiti": [90, 183, 191, 340, 345, 357, 361, 377, 391, 416, 431, 445, 462, 467, 482, 496, 515, 520, 532, 536, 552, 566, 574, 579, 598, 824, 1055], "quantifi": 1, "quantil": [121, 651], "quantit": [132, 143, 144, 827, 842], "quantiti": 144, "quartil": 121, "queri": [0, 50, 53, 104, 178, 179, 266, 333, 574], "query1": 179, "query_begin": 20, "query_sequ": [0, 20, 53, 54], "quick": [616, 669, 692, 700, 824, 827], "quit": 1060, "quot": 188, "qvalu": 651, "r": [1, 53, 116, 117, 121, 122, 123, 124, 125, 132, 143, 144, 184, 185, 194, 235, 340, 462, 515, 624, 643, 644, 645, 649, 650, 651, 652, 653, 661, 714, 715, 716, 717, 718, 722, 824, 827, 828, 835, 859, 934, 975], "r1": 1055, "r2": 1055, "r3": 1055, "r4": 1055, "r5": 1055, "r_i": 661, "r_m": 716, "ra": [182, 193], "raaijmak": 128, "raimon": 661, "rais": [65, 82, 84, 85, 88, 92, 94, 96, 107, 116, 117, 118, 132, 141, 143, 144, 145, 149, 183, 184, 190, 195, 206, 207, 208, 227, 228, 229, 231, 232, 233, 248, 280, 295, 313, 331, 334, 335, 342, 358, 359, 363, 365, 367, 378, 379, 381, 382, 384, 385, 386, 387, 393, 409, 411, 413, 428, 429, 433, 435, 437, 446, 448, 449, 451, 452, 453, 454, 459, 464, 479, 480, 484, 486, 488, 498, 500, 501, 503, 504, 505, 506, 512, 517, 533, 534, 538, 540, 542, 553, 554, 556, 557, 559, 560, 561, 562, 569, 576, 591, 592, 593, 595, 599, 601, 602, 604, 605, 606, 607, 610, 616, 623, 624, 626, 627, 628, 631, 638, 641, 642, 648, 655, 656, 662, 669, 676, 678, 679, 680, 686, 692, 699, 702, 703, 704, 712, 714, 715, 716, 718, 719, 757, 801, 812, 824, 827, 828, 833, 841, 842, 843, 844, 847, 855, 857, 861, 863, 864, 868, 869, 870, 875, 876, 877, 878, 881, 882, 883, 884, 886, 887, 888, 894, 896, 897, 900, 907, 909, 911, 927, 934, 935, 937, 940, 942, 943, 945, 946, 948, 950, 952, 958, 960, 963, 973, 974, 975, 976, 981, 986, 995, 996, 997, 998], "rand": [150, 163, 720], "randint": 838, "randn": [838, 841, 842], "random": [115, 117, 128, 150, 163, 176, 651, 714, 718, 720, 812, 828, 838, 840, 841, 842, 900, 937, 976], "random_fn": 720, "randomli": [112, 705, 714, 716, 717, 720, 812, 843, 900, 937, 976], "randomst": [937, 976], "rang": [90, 112, 121, 133, 144, 184, 185, 192, 357, 361, 367, 377, 380, 391, 431, 437, 445, 447, 482, 488, 496, 499, 532, 536, 542, 552, 555, 566, 595, 598, 600, 714, 715, 824, 842, 876, 881, 900, 954, 1060], "rangeindex": [65, 82, 85, 94, 190], "rangle_a": [652, 654], "rank": [1, 140, 194, 646, 714, 715, 716, 837, 894, 950], "rapid": [176, 183, 954], "rapidli": 1060, "rare": [107, 842], "rare_threshold": 107, "rarefact": [128, 900], "rate": [107, 612, 838], "rather": [1, 121, 188, 612, 643, 722, 992], "ratio": [122, 133, 137, 643, 644, 645, 646, 649, 650, 652, 653, 657, 663, 842], "rational": 837, "raw": [178, 745, 778], "raw_f": [745, 778, 789], "raxml": 190, "rbwpd_": 132, "rc": [193, 357, 532, 632, 681, 706, 824], "rda": [189, 814, 827, 828], "re": [0, 1, 82, 85, 92, 116, 141, 143, 144, 145, 177, 180, 183, 184, 190, 193, 340, 366, 394, 411, 436, 460, 462, 487, 513, 515, 541, 570, 574, 594, 719, 827, 835, 837, 838, 842, 857, 900, 983, 1058, 1060], "reach": 190, "read": [1, 53, 97, 116, 143, 144, 162, 175, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 193, 194, 206, 207, 224, 226, 228, 232, 235, 236, 284, 334, 339, 340, 397, 398, 409, 410, 461, 462, 514, 515, 572, 573, 574, 611, 639, 662, 664, 687, 713, 719, 826, 859, 910, 913, 914, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 945, 946, 947, 948, 950, 952, 953, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 998, 1052, 1058], "read_numb": 191, "read_sequ": 20, "readabl": [176, 183, 184, 187, 188, 189, 190, 235, 997], "reader": [93, 161, 174, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 221, 226, 227, 228, 231, 232, 282, 336, 389, 456, 508, 564, 608, 633, 682, 707, 825, 895, 969], "readi": [0, 195], "reading_fram": [397, 409, 410, 572], "readlin": [206, 235], "real": [91, 183, 184, 191, 643, 644, 645, 649, 650, 652, 653, 658, 659, 660], "realli": 1, "reason": [1, 117, 128, 182, 188, 841, 870, 932], "reassign": [94, 190, 716], "reassign_index": [65, 82, 85, 95, 96, 190], "reca": 281, "recal": 188, "recapitul": 722, "recaptur": 107, "receiv": [195, 196, 207, 367, 437, 488, 542, 595, 991], "recent": [190, 409, 574, 716], "receptor": 841, "reciproc": [112, 842], "recod": 84, "recogn": [192, 887, 897], "recommend": [1, 121, 132, 190, 193, 340, 411, 462, 515, 574, 646, 664, 824, 827, 835, 841], "recomput": [82, 85, 92], "reconstruct": [968, 992, 1052, 1055], "record": [179, 182, 183, 184, 185, 186, 191], "rectangl": 118, "recurs": [188, 930, 988, 989], "red": [632, 681, 706], "redefin": [716, 998], "reduc": [146, 253, 300, 318, 337, 718, 812, 833, 860], "reduce_f": 146, "reduct": 813, "redund": [634, 665, 683, 688, 708, 835], "redundant_form": 657, "reeder": [122, 123], "ref": [178, 929], "refer": [1, 50, 53, 72, 84, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 143, 144, 146, 256, 340, 399, 407, 408, 411, 462, 515, 574, 612, 624, 634, 644, 645, 646, 651, 655, 657, 661, 663, 665, 683, 688, 700, 708, 714, 715, 716, 717, 718, 722, 824, 827, 828, 835, 844, 870, 904, 911, 935, 964, 991, 992, 1057], "reference_sequ": 20, "reflect": [235, 722, 968, 973], "regard": 651, "regardless": [53, 83, 91, 92, 193, 321, 335, 409, 630, 720], "regex": [366, 394, 436, 460, 487, 513, 541, 570, 594], "region": [186, 256, 266, 380, 447, 499, 555, 600], "regist": [97, 162, 175, 195, 196, 206, 207, 208, 220, 226, 228, 230, 232, 284, 339, 398, 461, 514, 573, 611, 639, 687, 713, 826, 910, 990], "registri": [93, 97, 161, 162, 174, 175, 177, 181, 183, 184, 191, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990, 1053], "regress": [643, 716, 835, 842], "regsistri": [220, 230], "regular": [177, 181, 188, 366, 394, 436, 460, 487, 513, 541, 570, 594, 1055], "reject": [646, 651, 838], "rel": [88, 132, 177, 182, 185, 248, 295, 313, 331, 335, 367, 369, 370, 382, 384, 386, 437, 449, 451, 453, 488, 501, 503, 505, 542, 544, 545, 557, 559, 561, 595, 602, 604, 606, 657, 663, 700, 977, 995, 1030, 1055], "relat": [1, 116, 117, 125, 132, 143, 144, 146, 182, 183, 187, 193, 664, 710, 827, 828, 835, 870, 904], "relationship": [1, 132, 188, 827, 828, 835, 838, 842, 860, 992, 1056], "relax": 190, "releas": [116, 132, 143, 144, 182, 194], "relev": [1, 53, 185, 651, 841, 860, 870, 904, 992, 1055], "reli": [131, 192, 253, 300, 318, 337, 340, 462, 515], "reliabl": 651, "reload": 184, "remain": [94, 183], "remaind": [183, 860], "rememb": [192, 256], "remot": 185, "remov": [84, 104, 116, 132, 143, 144, 150, 183, 187, 190, 247, 279, 294, 312, 361, 392, 431, 458, 482, 511, 536, 568, 864, 893, 897, 929, 944, 964, 968, 971, 975, 986, 1055], "remove_delet": [964, 968, 970, 975], "remove_empti": 893, "renam": [185, 376, 388, 444, 455, 495, 507, 551, 563, 646], "render": 992, "reorder": [716, 719, 933, 937], "repeat": [1, 184, 838, 1015], "repeatedli": 838, "repect": 183, "repen": 182, "replac": [1, 19, 52, 105, 128, 183, 340, 392, 395, 458, 462, 511, 515, 567, 568, 612, 643, 646, 655, 656, 812, 836, 843, 900, 907, 983], "replic": 942, "report": [132, 192, 207, 651, 722, 835], "repres": [1, 3, 13, 15, 17, 34, 44, 47, 50, 83, 112, 114, 116, 119, 128, 135, 136, 143, 144, 146, 150, 163, 176, 177, 178, 179, 182, 183, 187, 188, 190, 192, 193, 194, 256, 277, 285, 321, 340, 393, 459, 462, 512, 515, 569, 574, 610, 612, 616, 623, 628, 638, 652, 653, 661, 662, 669, 676, 679, 686, 692, 699, 703, 712, 722, 813, 824, 838, 847, 860, 871, 896, 901, 905, 912, 979, 984, 991, 992, 1055, 1058], "represent": [0, 1, 12, 43, 159, 160, 163, 173, 176, 177, 183, 188, 192, 266, 383, 407, 450, 502, 558, 603, 622, 662, 675, 698, 721, 814, 823, 844, 847, 860, 870, 906, 911, 912, 926, 983, 984, 1053, 1058], "representationwarn": 981, "reprint": 118, "reproduc": [92, 116, 143, 144], "reproduct": 842, "request": [183, 332, 623, 638, 676, 686, 699, 712, 857, 864, 876, 887, 942, 1016, 1053], "requir": [53, 116, 122, 123, 132, 143, 144, 176, 179, 180, 183, 186, 190, 193, 194, 281, 321, 334, 396, 409, 410, 571, 662, 664, 688, 716, 722, 812, 832, 840, 847, 860, 869, 934, 940, 974, 994, 1018, 1053, 1055, 1060], "rerun": 716, "res_metadata": 858, "res_tabl": [858, 859], "res_tre": 859, "resampl": 900, "research": [1, 194, 716, 833], "resembl": 183, "reserv": [190, 192], "reset": [82, 85, 94], "reset_index": [82, 85], "reshap": [876, 881], "resid": 812, "residu": [84, 150, 181, 835], "resolv": [146, 149, 192, 722], "resourc": [132, 192, 194, 235], "respect": [1, 65, 110, 183, 186, 189, 192, 194, 206, 207, 208, 226, 227, 229, 231, 233, 235, 321, 367, 437, 488, 542, 574, 595, 623, 628, 630, 638, 646, 661, 676, 679, 686, 699, 703, 710, 712, 722, 813, 814, 858, 859, 880, 881, 882, 901], "respons": [93, 97, 161, 162, 174, 175, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 745, 778, 789, 813, 825, 826, 828, 835, 895, 910, 969, 990], "restrict": [72, 116, 143, 144, 190, 285, 321, 1055], "result": [1, 20, 53, 54, 84, 86, 92, 98, 99, 100, 116, 117, 121, 141, 143, 144, 145, 149, 178, 179, 183, 192, 195, 235, 278, 333, 335, 340, 357, 358, 361, 391, 393, 428, 431, 459, 462, 479, 482, 512, 515, 532, 533, 536, 566, 569, 591, 610, 646, 651, 654, 655, 658, 703, 714, 716, 717, 718, 719, 720, 723, 734, 735, 745, 746, 756, 767, 768, 778, 779, 789, 790, 800, 811, 812, 814, 823, 824, 827, 828, 833, 835, 838, 843, 860, 861, 882, 885, 893, 900, 904, 906, 945, 961, 975, 983, 984, 991, 992, 996, 1053, 1055, 1060], "result_constructor": 992, "retain": [92, 248, 295, 313, 330, 331, 358, 390, 428, 457, 479, 509, 533, 565, 591, 609, 626, 678, 702, 812, 860, 900, 909], "retriev": [249, 251, 296, 298, 314, 316, 321, 332, 333, 574, 688, 870, 874, 876], "return": [0, 1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 161, 164, 165, 167, 168, 169, 170, 171, 172, 174, 178, 186, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 722, 725, 726, 728, 729, 730, 731, 732, 733, 734, 736, 737, 739, 740, 741, 742, 743, 744, 747, 748, 750, 751, 752, 753, 754, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 770, 772, 773, 774, 775, 776, 777, 780, 781, 783, 784, 785, 786, 787, 788, 791, 792, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 846, 847, 849, 851, 852, 853, 858, 859, 860, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 919, 920, 922, 924, 925, 926, 927, 928, 930, 934, 935, 936, 937, 938, 939, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 963, 964, 969, 970, 972, 973, 974, 975, 977, 978, 979, 981, 983, 984, 985, 987, 988, 989, 991, 992, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1011, 1015, 1016, 1017, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1055, 1060], "return_cod": [393, 459, 512, 569, 610], "reus": [53, 837], "rev": 976, "reveal": [813, 992], "revers": [80, 91, 95, 195, 355, 357, 379, 391, 397, 409, 410, 426, 477, 530, 532, 554, 566, 567, 572, 589, 714, 718, 898, 976, 1055, 1060], "reverse_compl": [357, 379, 532, 554, 1055], "reverse_transcrib": 396, "review": 932, "revisit": 661, "rf": [397, 410, 572], "rfam": 193, "rho": 715, "riboswitch": [185, 256], "rice": 184, "rich": [1, 106, 110, 116, 124, 127, 132, 139], "rich_sparse_otu_table_hdf5": 870, "right": [92, 107, 135, 188, 335, 643, 644, 645, 649, 654, 658, 659, 660, 661, 954, 995, 996, 1060], "right_child_id": 983, "rightarrow": [644, 645, 649, 650, 652, 653], "risk": 842, "rl": [182, 193], "rm": [193, 724, 790], "rn": [182, 193], "rna": [0, 65, 70, 99, 102, 104, 180, 182, 183, 184, 185, 190, 191, 193, 340, 358, 395, 396, 397, 399, 409, 410, 411, 428, 479, 574, 591, 651, 1055], "rna_seq": [182, 185], "robinson": 935, "robust": [132, 192, 657, 663, 718, 722], "role": [193, 612, 841], "rome": 118, "root": [1, 3, 116, 127, 132, 143, 144, 188, 194, 662, 913, 914, 927, 928, 929, 930, 932, 933, 934, 938, 941, 942, 943, 944, 947, 948, 950, 952, 956, 958, 960, 961, 968, 973, 974, 977, 979, 981, 983, 984, 986, 988, 989, 991, 992, 1058], "root_at": [974, 988, 989], "root_at_midpoint": [973, 992], "rosid": 182, "roughli": 128, "round": [116, 121, 128, 143, 144, 716, 838, 841, 842, 942], "roundtrip": [177, 181], "roundtripp": [253, 300, 318, 321, 337], "routin": 688, "row": [1, 65, 141, 145, 146, 149, 150, 176, 177, 181, 190, 256, 321, 612, 616, 631, 645, 646, 648, 651, 652, 653, 655, 656, 658, 659, 660, 661, 664, 665, 669, 680, 692, 704, 705, 710, 714, 715, 716, 717, 718, 719, 720, 722, 814, 827, 828, 831, 835, 841, 842, 847, 854, 865, 870, 871, 876, 880, 881, 882, 896, 897, 904, 906, 995], "rozan": 661, "rp": 182, "rpd": 132, "rpd_": 132, "rrna": [1, 651], "rt": [182, 193], "rtol": 995, "rubbbbrbcefgh": 191, "rule": [107, 183, 190, 192, 193, 991], "run": [1, 3, 116, 141, 143, 144, 145, 184, 191, 192, 365, 435, 486, 540, 646, 714, 715, 716, 718, 719, 722, 734, 756, 767, 800, 811, 824, 1055, 1060], "run_numb": 191, "runtim": [183, 340, 462, 515, 1018, 1060], "runtimeerror": 117, "rvrywstlnepwvfsnsgyalgtnapgrcsasnvakpgdsgtgpyivthnqi": 182, "rvsrv": 193, "rx": 182, "rykmbdhvn": [369, 370, 544, 545], "s1": [0, 1, 114, 340, 342, 358, 359, 363, 378, 379, 384, 385, 386, 387, 413, 428, 429, 433, 446, 451, 452, 453, 454, 462, 464, 479, 480, 484, 498, 503, 504, 505, 506, 515, 517, 533, 534, 538, 553, 554, 559, 560, 561, 562, 574, 576, 591, 592, 593, 599, 604, 605, 606, 607, 646, 651, 714, 718, 857, 858, 859, 861, 863, 864, 867, 868, 874, 875, 876, 877, 878, 880, 882, 885, 886, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 906, 907, 909], "s12064": [657, 663], "s2": [0, 1, 358, 363, 428, 433, 479, 484, 533, 538, 591, 593, 646, 651, 714, 718, 857, 858, 859, 861, 864, 867, 868, 874, 875, 876, 877, 878, 880, 882, 885, 886, 891, 892, 893, 894, 896, 898, 899, 900, 901, 903, 906, 907, 909], "s3": [646, 651, 714, 718, 857, 858, 859, 861, 867, 868, 875, 876, 877, 878, 882, 885, 886, 892, 893, 894, 896, 898, 899, 900, 901, 903, 906, 907, 909], "s4": [646, 651, 714, 718, 858, 859, 861, 867, 876], "s46826": 182, "s5": [646, 651, 714, 718, 861, 876], "s6": [646, 651, 718, 861], "s7": [718, 861], "s8": 861, "s9": 861, "s_": [1, 107, 109, 110, 128, 139], "s_i": 661, "s_max": 128, "sa": 193, "sacc": [178, 179], "saccver": [178, 179], "safe": [1, 116, 141, 143, 144, 145, 192, 833, 843, 930], "safe_char": 188, "saga": [266, 278, 574], "sagb": [266, 278], "sagc": 266, "sai": [256, 266, 842], "saitou": 992, "sallacc": [178, 179], "sallgi": [178, 179], "sallseqid": [178, 179], "salltitl": [178, 179], "salmo": [183, 190], "salvemini": 118, "sam_id": 881, "same": [1, 65, 83, 84, 85, 88, 92, 94, 112, 116, 121, 132, 133, 137, 143, 144, 181, 183, 184, 185, 186, 188, 191, 193, 195, 248, 269, 283, 285, 295, 313, 330, 331, 335, 345, 347, 354, 357, 358, 361, 363, 364, 380, 384, 385, 386, 387, 391, 392, 396, 399, 400, 409, 416, 418, 425, 428, 431, 433, 434, 447, 451, 452, 453, 454, 458, 467, 469, 476, 479, 482, 484, 485, 499, 503, 504, 505, 506, 511, 520, 522, 529, 532, 533, 536, 538, 539, 555, 559, 560, 561, 562, 566, 568, 571, 574, 579, 581, 588, 591, 593, 600, 604, 605, 606, 607, 614, 616, 624, 625, 626, 628, 637, 641, 642, 646, 651, 667, 669, 677, 678, 679, 685, 690, 692, 701, 702, 703, 705, 711, 714, 715, 716, 717, 718, 719, 722, 812, 827, 828, 832, 833, 835, 841, 842, 843, 847, 860, 868, 891, 907, 946, 976, 991, 995, 1055, 1058], "samp_id": [874, 876], "sampl": [1, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 176, 177, 192, 321, 643, 646, 651, 665, 714, 715, 717, 718, 724, 757, 790, 801, 812, 814, 823, 824, 827, 828, 833, 834, 835, 838, 840, 841, 842, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 868, 869, 870, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 937, 996, 1052, 1056], "sample1": [865, 871], "sample2": [865, 871], "sample3": 871, "sample4": 871, "sample5": 871, "sample6": 871, "sample_constraint": 814, "sample_count": [841, 842], "sample_gen": 881, "sample_group_metadata": 844, "sample_id": [844, 881, 889, 894], "sample_index": 844, "sample_map": 872, "sample_md": 1, "sample_metadata": [192, 336, 339, 844, 864], "sample_metadata_f": 885, "sample_nam": 192, "sample_typ": [868, 893], "samplea": 812, "sampleb": 812, "samplec": 812, "sampleid": [192, 869], "samplemetadata": 192, "samplerecord": 185, "sanger": 184, "sapien": 183, "sapiensaccggttggc": 190, "satisfi": [195, 281, 840, 1041], "save": [53, 266, 321, 334, 665, 745, 778, 789, 965], "sb": 98, "sbc": 193, "sbjct": 179, "sbjctframe": 179, "sblastnam": [178, 179], "sbp": 661, "scalar": [111, 135, 393, 459, 512, 569, 610, 612, 616, 654, 660, 664, 669, 692, 824, 884, 888], "scale": [114, 715, 827, 828, 829, 835], "scale_i": 835, "scandinavian": 110, "scatter": 824, "scatterplot": [814, 824], "scenario": [181, 646], "scheme": [194, 235, 250, 254, 255, 297, 301, 302, 315, 319, 320, 321, 334, 338, 632, 681, 706], "schmidt": [652, 653], "schneider": 84, "schoch": 194, "school": 182, "schwartz": 624, "sci": [100, 103, 179, 661], "scienc": [108, 109, 116, 180, 183, 624, 828], "sciencedirect": 180, "scientif": [178, 192, 688, 813], "sciki": 183, "scikit": [0, 1, 89, 90, 93, 97, 98, 101, 104, 105, 116, 143, 144, 145, 146, 147, 148, 149, 161, 162, 174, 175, 177, 178, 179, 180, 182, 183, 184, 188, 189, 190, 191, 193, 194, 282, 284, 336, 339, 375, 377, 389, 396, 397, 398, 399, 409, 410, 443, 445, 456, 461, 494, 496, 508, 514, 550, 552, 564, 571, 572, 573, 597, 598, 608, 611, 633, 639, 640, 682, 687, 707, 713, 813, 825, 826, 895, 910, 969, 990, 993, 1055, 1059], "scipi": [1, 117, 142, 145, 148, 634, 641, 646, 651, 662, 665, 683, 688, 700, 708, 710, 715, 716, 718, 722, 833, 838, 841, 842, 863, 894, 904, 949], "scomnam": [178, 179], "scope": [116, 1060], "score": [0, 53, 84, 98, 99, 100, 101, 102, 103, 104, 105, 111, 178, 179, 183, 185, 186, 191, 574, 612, 627, 630, 814, 835, 1055], "score_filt": 53, "score_onli": 53, "score_s": 53, "sdbl": 942, "sdr": [121, 126], "sdrhelp": 121, "se": 193, "sea": 108, "search": [67, 98, 178, 179, 183, 249, 281, 296, 314, 333, 365, 378, 435, 446, 486, 498, 540, 553, 599, 613, 666, 689, 828, 863, 875, 878, 886, 909, 940, 945, 946, 947, 948, 1015, 1055], "sec": 462, "second": [1, 50, 53, 98, 99, 100, 101, 102, 103, 104, 181, 184, 190, 195, 208, 256, 278, 400, 616, 646, 669, 692, 842, 951, 954, 984, 1053, 1060], "secondari": [842, 871], "section": [92, 183, 184, 189, 192, 193, 321, 399, 574, 715, 716, 827, 828], "sediment": 108, "see": [1, 91, 92, 93, 97, 104, 116, 132, 141, 143, 144, 145, 146, 148, 149, 161, 162, 174, 175, 179, 182, 183, 184, 188, 190, 191, 192, 194, 195, 238, 282, 284, 285, 303, 321, 336, 339, 363, 389, 398, 399, 410, 433, 456, 461, 484, 508, 514, 538, 564, 573, 574, 593, 608, 611, 616, 633, 639, 652, 653, 669, 682, 687, 692, 707, 713, 714, 715, 716, 717, 718, 719, 722, 813, 824, 825, 826, 833, 835, 837, 838, 842, 844, 850, 885, 895, 910, 911, 969, 990, 1053, 1054, 1060], "seed": [651, 714, 718, 812, 838, 841, 842, 900], "seem": 841, "seen": [182, 185, 842], "segment": [3, 14, 18, 34, 46, 51, 118], "select": [112, 132, 192, 651, 718, 840, 841, 900, 976], "selenocystein": 462, "self": [4, 5, 7, 8, 9, 10, 11, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 36, 38, 39, 40, 41, 42, 55, 56, 58, 59, 60, 61, 62, 64, 71, 74, 76, 78, 151, 152, 154, 155, 156, 157, 158, 164, 165, 167, 168, 169, 170, 171, 172, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 215, 216, 217, 218, 230, 231, 232, 233, 240, 242, 243, 244, 246, 258, 260, 261, 262, 264, 266, 270, 272, 273, 274, 276, 280, 287, 289, 290, 291, 293, 305, 307, 308, 309, 311, 323, 325, 326, 327, 329, 346, 347, 349, 351, 353, 391, 401, 403, 404, 405, 417, 418, 420, 422, 424, 468, 469, 471, 473, 475, 521, 522, 524, 526, 528, 566, 580, 581, 583, 585, 587, 614, 615, 618, 619, 620, 621, 623, 625, 637, 638, 667, 668, 671, 672, 673, 674, 676, 677, 685, 686, 690, 691, 694, 695, 696, 697, 699, 701, 711, 712, 725, 726, 728, 729, 730, 731, 732, 733, 736, 737, 739, 740, 741, 742, 743, 744, 747, 748, 750, 751, 752, 753, 754, 755, 758, 759, 761, 762, 763, 764, 765, 766, 769, 770, 772, 773, 774, 775, 776, 777, 780, 781, 783, 784, 785, 786, 787, 788, 791, 792, 794, 795, 796, 797, 798, 799, 802, 803, 805, 806, 807, 808, 809, 810, 815, 816, 818, 819, 820, 821, 822, 846, 849, 851, 852, 853, 854, 857, 861, 865, 876, 882, 884, 885, 888, 897, 900, 906, 909, 913, 914, 915, 916, 919, 920, 922, 924, 925, 926, 927, 928, 929, 931, 932, 935, 936, 937, 938, 941, 942, 943, 944, 961, 962, 963, 964, 970, 971, 972, 977, 978, 979, 982, 983, 984, 985, 986, 988, 989, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1011, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1058, 1060], "self_aft": 985, "self_befor": 985, "semi": 188, "semicolon": [183, 186], "semimetr": 833, "send": [178, 179], "sens": [828, 842, 984, 992], "sensit": [183, 192, 383, 450, 502, 558, 603], "sep": 182, "separ": [1, 178, 179, 181, 183, 184, 186, 187, 188, 189, 190, 192, 718, 828, 869, 872], "seq": [0, 3, 17, 50, 65, 75, 80, 86, 87, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 178, 179, 180, 183, 184, 186, 190, 191, 343, 344, 357, 364, 367, 375, 377, 390, 391, 393, 394, 397, 410, 411, 414, 415, 434, 437, 443, 445, 457, 459, 460, 465, 466, 485, 488, 494, 496, 509, 512, 513, 518, 519, 532, 539, 542, 550, 552, 565, 566, 569, 570, 572, 574, 577, 578, 595, 597, 598, 609, 610, 651, 812, 1060], "seq1": [0, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 180, 183, 184, 190, 193, 641, 642], "seq2": [0, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 183, 184, 193, 641, 642], "seq3": [65, 85, 183, 190], "seq4": 183, "seq5": 183, "seq_1": 186, "seq_2": 186, "seq_gener": [364, 434, 485, 539], "seq_id": 186, "seq_num": [183, 184, 185, 186, 191], "seqid": 186, "seqr": 185, "sequenc": [1, 3, 13, 14, 15, 18, 19, 34, 45, 46, 47, 50, 51, 52, 53, 65, 66, 68, 69, 70, 75, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 150, 159, 163, 178, 179, 180, 181, 182, 184, 185, 186, 191, 194, 256, 266, 278, 651, 665, 720, 812, 842, 1052, 1053, 1060], "sequence1": 104, "sequence2": 104, "sequenceprocessor": 1060, "sequenti": [140, 181, 183, 184, 190, 661, 662, 824, 986], "ser": 462, "seri": [1, 95, 141, 186, 238, 250, 255, 285, 297, 302, 303, 315, 320, 646, 651, 710, 714, 715, 717, 718, 723, 814, 838], "serial": [187, 321, 664, 814, 1053], "serin": 462, "serv": [0, 194, 813, 824], "server": [98, 99, 100, 101, 102, 103, 194], "set": [13, 33, 45, 53, 83, 86, 91, 92, 116, 132, 143, 144, 149, 183, 185, 187, 190, 196, 235, 249, 266, 279, 296, 314, 333, 335, 340, 358, 367, 380, 383, 393, 411, 428, 437, 447, 450, 459, 462, 479, 488, 499, 502, 512, 515, 533, 542, 555, 558, 569, 574, 591, 595, 600, 603, 610, 624, 632, 638, 643, 655, 681, 686, 706, 712, 722, 812, 833, 835, 838, 840, 841, 842, 860, 861, 868, 900, 902, 913, 914, 929, 931, 934, 938, 941, 942, 944, 964, 978, 979, 991, 998, 1009, 1010, 1015, 1055, 1060], "set1": 824, "set_index": 950, "setter": 265, "setup": 1060, "seven": 646, "sever": [116, 188, 190, 838], "sex": [840, 841], "sffaaa": 184, "sfprgfifgagssayqfegavneggrgpsiwdtfthkypekirdgsnaditv": 182, "sframe": [178, 179], "sg": [397, 410, 572], "sgc": [409, 410], "sgi": [178, 179], "shallow": [65, 68, 266, 267, 343, 414, 465, 518, 574, 577], "shannon": [84, 120, 133], "shannon_entropi": 84, "shape": [3, 13, 14, 15, 17, 18, 19, 34, 44, 45, 46, 47, 51, 52, 77, 86, 176, 189, 614, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 667, 690, 716, 829, 832, 843, 844, 870, 871, 904, 911], "share": [53, 89, 90, 92, 107, 335, 358, 375, 377, 428, 443, 445, 479, 494, 496, 533, 550, 552, 574, 591, 597, 598, 813, 1058], "shear": 968, "sheet": 192, "shift": 278, "short": 1060, "short_cicruit": 1019, "short_circuit": 1018, "short_method_nam": [814, 996], "shorter": 190, "should": [1, 53, 84, 105, 112, 116, 117, 128, 132, 139, 141, 142, 143, 144, 145, 178, 185, 189, 192, 194, 195, 206, 207, 208, 248, 266, 295, 313, 321, 331, 340, 363, 380, 381, 382, 392, 399, 433, 447, 448, 449, 458, 462, 484, 499, 500, 501, 511, 515, 538, 555, 556, 557, 568, 593, 600, 601, 602, 642, 644, 645, 646, 657, 663, 700, 716, 718, 722, 812, 827, 828, 833, 834, 835, 838, 841, 842, 855, 856, 865, 900, 906, 909, 950, 971], "shouldn": 828, "show": [1, 266, 838, 1058], "show_intern": 930, "shown": [256, 646, 827], "shrink": 651, "shtml": 183, "shuffl": 937, "shuffle_f": [937, 976], "shuffled_tre": 976, "shuffler": 976, "sibl": [188, 358, 428, 479, 533, 591], "side": [132, 716, 719, 722], "sigh": 1052, "sign": [192, 646, 996], "signatur": [146, 236, 860, 870, 904], "signific": [1, 192, 646, 651, 714, 716, 717, 718, 719, 722, 841, 842], "significance_test": 646, "significantli": [1, 91, 646, 714, 717, 718], "silent": [116, 143, 144, 876], "silpl": 409, "simd": [53, 104], "similar": [98, 99, 100, 101, 102, 103, 142, 179, 182, 183, 184, 187, 190, 192, 195, 574, 612, 714, 715, 716, 717, 718, 813, 828, 833, 835, 841, 842, 1055, 1058], "similarli": [0, 1, 183, 1055], "simpl": [178, 179, 183, 184, 188, 192, 193, 195, 220, 230, 658, 715, 722, 1053, 1058], "simpler": 0, "simplex": [644, 652, 653, 661], "simpli": [84, 92, 139, 195, 399, 634, 683, 708, 833, 838, 945, 1060], "simplifi": 118, "simpson": [112, 137], "simul": [643, 838, 841, 842], "sinc": [1, 65, 82, 85, 95, 118, 182, 183, 185, 190, 192, 194, 257, 367, 409, 437, 488, 542, 574, 595, 646, 716, 838, 842, 985, 998, 1060], "singl": [1, 65, 82, 85, 94, 116, 122, 123, 131, 143, 144, 146, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 238, 253, 256, 266, 278, 285, 300, 303, 318, 321, 337, 347, 350, 355, 367, 380, 394, 418, 421, 426, 437, 447, 460, 469, 472, 477, 488, 499, 513, 522, 525, 530, 542, 555, 570, 581, 584, 589, 595, 600, 646, 661, 722, 839, 860, 861, 870, 885, 933, 1041, 1053, 1058, 1060], "singleton": [1, 107, 110, 111, 115, 117, 119, 131, 134, 138, 195], "singular": [1, 837, 968, 1041], "sinica": 107, "site": [1, 185, 189, 380, 447, 499, 555, 600, 813, 814, 824, 833], "site0": 189, "site1": [189, 813], "site10": 813, "site2": [189, 813], "site3": [189, 813], "site4": [189, 813], "site5": [189, 813], "site6": [189, 813], "site7": [189, 813], "site8": [189, 813], "site9": [189, 813], "sitemap": 185, "situat": [1, 824, 840], "six": [189, 397, 410, 572, 646], "size": [77, 114, 651, 714, 715, 716, 718, 801, 812, 824, 832, 838, 840, 841, 842, 860, 870, 904, 1017], "sk": [192, 253, 300, 318, 337], "skbio": [192, 1052], "skin": [1, 824], "skip": [380, 447, 499, 555, 600, 714, 716, 717, 718, 722, 870], "skip_subregion": 186, "sklearn": 145, "slen": [178, 179], "slice": [72, 347, 365, 366, 380, 390, 418, 435, 436, 447, 457, 469, 486, 487, 499, 509, 522, 540, 541, 555, 565, 581, 594, 600, 609, 616, 664, 669, 692, 847, 917, 1055], "slightli": [98, 121, 718], "slope": 121, "slow": [1, 116, 141, 143, 144, 145], "slower": [0, 993], "sm": [393, 459, 512, 569, 610], "small": [1, 187, 193, 643, 655, 656, 835], "smaller": [139, 380, 447, 499, 555, 600, 719], "smallest": [140, 190, 841, 842, 894], "smith": [0, 53, 101, 102, 103, 104, 722], "snif": 1053, "sniffer": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 222, 227, 228, 231, 232, 1053], "so": [1, 3, 20, 84, 98, 99, 100, 101, 102, 103, 105, 116, 141, 143, 144, 145, 183, 188, 192, 195, 235, 236, 266, 269, 369, 370, 544, 545, 716, 790, 813, 827, 828, 829, 833, 835, 838, 840, 841, 842, 902, 991, 1053, 1058, 1060], "sob": [1, 129, 130, 131], "societi": 132, "softwar": [1, 183, 184, 192, 905, 1052], "sole": [192, 330], "solexa": 184, "solut": 117, "solv": [117, 838], "some": [1, 53, 106, 116, 118, 128, 132, 150, 183, 185, 188, 191, 192, 206, 207, 208, 256, 280, 340, 462, 515, 645, 658, 659, 660, 828, 838, 841, 1018, 1058, 1060], "someformat": 1053, "someskbioclass": [195, 1053], "someth": [93, 97, 161, 162, 174, 175, 195, 207, 227, 228, 229, 231, 232, 233, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 720, 825, 826, 865, 895, 910, 969, 990, 1060], "sometim": [112, 183, 185, 192, 828, 1053], "somewhat": [722, 965], "sonnhamm": 193, "soppos": 182, "sort": [86, 92, 147, 148, 257, 266, 269, 364, 367, 393, 434, 437, 459, 485, 488, 512, 539, 542, 569, 595, 610, 757, 790, 812, 860, 899, 900, 978, 983, 984, 991, 1055, 1060], "sort_categori": [723, 724, 746, 757, 790], "sort_f": 898, "sort_index": 95, "sorted_t": 899, "sourc": [3, 12, 13, 14, 15, 16, 17, 18, 19, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 66, 67, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 163, 172, 173, 174, 175, 182, 183, 185, 186, 196, 206, 207, 208, 209, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 669, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 734, 735, 745, 746, 756, 757, 767, 768, 778, 779, 789, 790, 800, 801, 811, 812, 814, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 847, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 917, 921, 923, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1002, 1009, 1015, 1016, 1017, 1018, 1019, 1029, 1030, 1031, 1041, 1042, 1052], "space": [1, 183, 188, 190, 192, 193, 266, 269, 278, 643, 644, 645, 649, 650, 652, 653, 757, 813, 814, 824, 827, 834, 860], "spaitial": 718, "span": [16, 48, 116, 132, 146, 183, 185, 188, 256, 281, 860], "spars": [177, 652, 653, 662, 827, 835, 844, 847, 863, 870, 880, 881, 882, 902, 904], "sparse_vector": 860, "sparsedatafram": 903, "spatial": [1, 142, 145, 148, 634, 641, 665, 683, 688, 700, 708, 710, 718], "spearman": [1, 715, 716, 719], "spearmanr": [715, 716], "spec": 321, "specfi": 1060, "speci": [1, 107, 116, 119, 121, 126, 132, 139, 140, 189, 194, 651, 658, 813, 828, 833, 835, 912], "special": [53, 187, 195, 870, 904], "speciat": 722, "specie1": 813, "specie2": 813, "specie3": 813, "specie4": 813, "specie5": 813, "specie6": 813, "specie7": 813, "specie8": 813, "specie9": 813, "species0": 189, "species1": 189, "species2": 189, "species3": 189, "species4": 189, "species5": 189, "species6": 189, "species7": 189, "species8": 189, "species_a": 932, "speciesa": 932, "specif": [111, 116, 121, 141, 143, 144, 145, 146, 149, 195, 281, 285, 574, 722, 734, 756, 757, 767, 800, 811, 841, 842, 847, 860, 870, 904, 976, 1053, 1059, 1060], "specifi": [88, 92, 132, 149, 150, 178, 180, 181, 183, 184, 185, 186, 187, 190, 193, 194, 195, 226, 235, 256, 266, 279, 281, 333, 334, 340, 347, 365, 367, 383, 396, 408, 409, 411, 418, 435, 437, 450, 462, 469, 486, 488, 502, 515, 522, 540, 542, 558, 571, 574, 581, 595, 603, 613, 616, 623, 626, 631, 632, 638, 644, 645, 646, 651, 652, 653, 655, 656, 662, 666, 669, 676, 678, 680, 681, 686, 689, 692, 699, 702, 704, 706, 712, 714, 715, 716, 717, 718, 722, 801, 824, 832, 833, 839, 847, 857, 860, 870, 874, 876, 897, 904, 934, 942, 973, 976, 978, 981, 984, 991, 1018, 1030, 1031, 1041, 1060], "speed": [266, 833], "spermatophyta": 182, "sphingobacteria": [951, 984], "split": [183, 184, 190, 193], "spmatrix": [847, 863], "spreadsheet": [187, 192], "sqcup": [116, 132], "sqlite": 333, "sqrt": [115, 125, 126, 127, 661, 835], "squar": [127, 128, 145, 188, 612, 665, 688, 830], "squareform": [665, 710], "sr1": 399, "srava": 193, "ss": [193, 900], "ss_con": 193, "sscinam": [178, 179], "sseq": [178, 179], "sseqid": [178, 179], "sskingdom": [178, 179], "sstart": [178, 179], "sstrand": [178, 179], "ssw": [20, 53, 104], "stabl": [623, 638, 676, 686, 699, 712, 931], "stack": 965, "stackoverflow": 1017, "stai": 192, "stale": 266, "stamataki": 932, "stand": [370, 545, 716], "standalon": 183, "standard": [183, 184, 186, 188, 192, 393, 396, 397, 399, 409, 410, 459, 512, 569, 571, 572, 610, 616, 643, 646, 669, 692, 715, 716, 829, 832, 835, 836, 1053, 1055], "standardis": 114, "staphylococcu": 857, "start": [0, 3, 13, 14, 15, 16, 18, 19, 32, 33, 34, 45, 46, 47, 48, 50, 51, 52, 53, 65, 82, 85, 94, 98, 99, 100, 101, 102, 103, 104, 150, 178, 179, 182, 185, 186, 187, 188, 190, 193, 194, 256, 277, 283, 359, 378, 399, 400, 406, 409, 410, 429, 446, 480, 498, 534, 553, 592, 599, 665, 719, 720, 838, 841, 842, 880, 1060], "start_end_posit": 0, "stat": [0, 1, 3, 65, 82, 83, 85, 91, 92, 95, 128, 134, 150, 163, 176, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 340, 347, 357, 358, 361, 364, 391, 395, 396, 397, 399, 409, 410, 411, 418, 428, 431, 434, 462, 469, 479, 482, 485, 515, 522, 532, 533, 536, 539, 566, 567, 571, 572, 574, 581, 591, 612, 623, 632, 638, 640, 894, 1052, 1055], "state": [3, 13, 14, 15, 17, 18, 19, 34, 46, 47, 49, 50, 51, 52, 132, 180, 190, 192, 235, 1018, 1019, 1029, 1041, 1060], "static": [411, 869, 872], "statis": [714, 717], "statist": [1, 107, 110, 115, 121, 128, 644, 646, 651, 714, 716, 717, 718, 719, 722, 813, 827, 828, 832, 838, 841, 842, 1052], "statistica": [107, 118], "statsmodel": 838, "statu": [3, 34, 840, 841], "staxid": [178, 179], "std": [182, 832, 836, 841], "steel": 992, "steep": 827, "step": [1, 65, 82, 85, 94, 116, 141, 143, 144, 145, 190, 195, 831, 838], "still": [188, 189, 235, 265, 646, 651, 655, 716, 718], "stimat": 836, "stitl": [178, 179], "stockholm": [93, 97], "stockholm_format": 193, "stombaugh": [143, 144], "stool": 842, "stop": [65, 82, 85, 94, 107, 150, 163, 181, 190, 359, 378, 396, 397, 399, 409, 410, 429, 446, 462, 480, 497, 498, 534, 553, 571, 572, 592, 599, 844, 911, 932, 1019, 1055], "storag": [266, 902], "store": [2, 65, 75, 80, 89, 90, 91, 150, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 256, 266, 321, 338, 340, 375, 377, 411, 443, 445, 462, 494, 496, 515, 550, 552, 574, 597, 598, 634, 664, 665, 683, 688, 708, 719, 735, 768, 779, 814, 827, 828, 833, 835, 860, 870, 904, 912, 1054, 1055], "str": [31, 45, 50, 54, 64, 70, 75, 80, 93, 97, 105, 141, 145, 146, 147, 148, 149, 150, 161, 162, 163, 172, 174, 175, 178, 185, 186, 193, 196, 205, 218, 221, 222, 223, 227, 228, 229, 231, 232, 233, 235, 246, 248, 251, 253, 264, 276, 282, 284, 293, 295, 298, 300, 311, 313, 316, 318, 321, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 342, 350, 355, 356, 359, 363, 364, 365, 366, 367, 378, 379, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 398, 399, 407, 413, 421, 426, 427, 429, 433, 434, 435, 436, 437, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 464, 472, 477, 478, 480, 484, 485, 486, 487, 488, 498, 500, 502, 503, 504, 505, 506, 508, 509, 511, 512, 514, 515, 517, 525, 530, 531, 534, 538, 539, 540, 541, 542, 553, 554, 556, 558, 559, 560, 561, 562, 564, 565, 568, 569, 573, 574, 576, 584, 589, 590, 592, 593, 594, 595, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 616, 622, 623, 624, 626, 629, 631, 632, 633, 638, 639, 646, 651, 657, 662, 665, 666, 669, 675, 676, 678, 680, 681, 682, 686, 687, 689, 692, 698, 699, 702, 704, 706, 707, 712, 713, 714, 715, 717, 718, 719, 720, 733, 735, 744, 755, 757, 766, 768, 777, 779, 788, 799, 810, 814, 823, 824, 825, 826, 833, 840, 841, 854, 857, 860, 863, 864, 865, 867, 869, 870, 874, 878, 886, 894, 895, 902, 904, 905, 906, 910, 912, 926, 930, 934, 945, 946, 958, 960, 969, 973, 975, 979, 981, 990, 991, 992, 997, 1011, 1016, 1028, 1040, 1051], "straight": 1, "straightforward": [192, 1055], "strand": [178, 179, 185, 186, 193, 256, 395, 396, 397, 567], "stranded": 185, "strategi": [643, 655, 992], "stream": [183, 186, 1053], "strength": 1, "streptophyta": 182, "strict": [92, 190, 358, 428, 479, 533, 591, 626, 678, 702, 716, 719, 722, 860, 909], "strict_match": [840, 841], "stricter": [188, 995], "strictli": [183, 646, 651, 662, 933], "string": [1, 12, 43, 45, 50, 53, 81, 141, 145, 146, 149, 159, 160, 173, 176, 180, 181, 183, 184, 188, 190, 192, 193, 254, 255, 301, 302, 319, 320, 321, 338, 356, 366, 367, 383, 390, 393, 394, 399, 407, 427, 436, 437, 450, 457, 459, 460, 478, 487, 488, 502, 509, 512, 513, 531, 541, 542, 558, 565, 569, 570, 590, 594, 595, 603, 609, 610, 612, 616, 622, 628, 646, 651, 664, 665, 669, 675, 679, 692, 698, 703, 714, 717, 718, 720, 823, 824, 865, 868, 894, 905, 906, 909, 926, 930, 984, 992, 997, 1058], "stringifi": 854, "stringio": [1, 116, 143, 144, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 235, 664, 869, 872, 991, 992, 1053, 1058], "strip": [932, 936, 937], "stripe": [53, 104], "stripedsmithwaterman": [0, 104], "strong": [1, 340, 714, 716, 722], "struct": [20, 185], "structur": [3, 143, 144, 179, 181, 185, 188, 194, 624, 665, 714, 715, 722, 813, 844, 860, 870, 904, 911, 974, 1018, 1052], "studi": [1, 116, 192, 321, 643, 646, 813, 827, 835, 842], "style": [643, 988, 989], "su": 193, "sub": [185, 186, 256, 843], "subclass": [92, 180, 183, 190, 193, 195, 285, 358, 428, 479, 533, 574, 591, 612, 664, 665, 720, 991, 1018], "subfold": 1016, "subject": [1, 178, 179, 192, 1054, 1060], "subject1": 179, "subject2": 179, "sublist": 842, "submit": [182, 183, 842], "submodul": 195, "suboptim": 53, "subsampl": [128, 812, 838, 841, 842, 843, 937, 1052], "subsample_count": [128, 812], "subsample_paired_pow": 842, "subsample_pow": 838, "subseq": [380, 447, 499, 555, 574, 600], "subsequ": [101, 180, 183, 192, 342, 350, 355, 359, 378, 380, 413, 421, 426, 429, 446, 447, 464, 472, 477, 480, 498, 499, 517, 525, 530, 534, 553, 555, 574, 576, 584, 589, 592, 599, 600, 1018, 1055], "subset": [116, 132, 143, 144, 149, 176, 182, 715, 870, 876, 900, 936, 942, 1058], "subset_with_metadata": 870, "subsitut": [393, 459, 512, 569, 610], "substitut": [53, 98, 99, 100, 101, 102, 103, 105, 187, 393, 459, 462, 512, 569, 610, 612, 624, 627, 629, 630, 636, 643, 994, 1055], "substitution_matrix": [53, 98, 99, 100, 101, 102, 103], "substitutionmatrix": [105, 393, 459, 512, 569, 610, 1055], "substract": [98, 99, 100, 101, 102, 103, 831], "substrat": 813, "substrate_cor": 813, "substrate_oth": 813, "substrate_sand": 813, "subtili": 193, "subtract": [53, 801], "subtre": [188, 194, 947, 1058], "success": [994, 1019, 1060], "success_callback": [1019, 1060], "success_f": 1060, "successfulli": 932, "suffix": 106, "suggest": [53, 207, 227, 228, 231, 232, 841], "suit": 828, "sum": [107, 109, 112, 116, 125, 126, 128, 132, 136, 181, 278, 367, 437, 488, 542, 595, 645, 649, 650, 654, 842, 843, 880, 881, 885, 890, 900, 927, 983, 1017], "sum_": [114, 116, 118, 132, 135, 643, 645, 658, 659, 660, 716], "summar": 646, "summari": [81, 622, 646, 675, 698, 890], "super": [178, 179], "superkingdom": 194, "superset": [116, 132, 143, 144, 714, 718], "supplement": 114, "supplementari": [184, 646], "suppli": [53, 178, 183, 191, 227, 231, 330, 363, 433, 484, 538, 593, 640, 842, 860, 942], "support": [1, 2, 84, 93, 97, 118, 161, 162, 174, 175, 235, 238, 282, 284, 303, 321, 330, 336, 339, 340, 389, 398, 456, 461, 462, 508, 514, 515, 564, 573, 608, 611, 612, 624, 633, 639, 682, 687, 707, 713, 716, 814, 825, 826, 833, 838, 847, 860, 887, 895, 910, 912, 932, 969, 987, 990, 991, 998, 1018, 1041, 1052, 1056, 1057, 1058, 1059, 1060], "support_attr": 991, "support_valu": 991, "suppos": [178, 179, 182, 183, 184, 185, 188, 191, 193, 658, 838, 842], "suppress": [194, 714, 718, 719], "suppress_sequ": [53, 104], "sure": [703, 842, 1060], "surpass": 190, "surround": [188, 651], "survei": 1, "sv": 182, "svd": 837, "svg": 814, "sw": [53, 840], "swab": 1, "swiss": 182, "switch": 847, "sy": 236, "symbiont": 722, "symbol": [84, 183], "symmetr": [1, 612, 616, 664, 665, 669, 688, 692, 703, 716, 720, 722, 827, 935], "symmetri": [664, 665, 688, 703, 705], "symptom": 842, "syn": 185, "synonym": [1, 194], "synthesi": 193, "synthet": 185, "system": [93, 97, 124, 135, 161, 162, 174, 175, 192, 194, 195, 266, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 841, 876, 895, 910, 969, 990], "systemat": 132, "t": [1, 17, 53, 65, 82, 84, 85, 86, 91, 92, 96, 104, 116, 118, 132, 141, 143, 144, 145, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 206, 208, 236, 256, 257, 334, 340, 345, 354, 359, 363, 367, 369, 370, 371, 372, 373, 376, 384, 385, 386, 387, 395, 409, 416, 425, 429, 433, 437, 439, 440, 441, 444, 451, 452, 453, 454, 462, 467, 476, 480, 484, 488, 490, 491, 492, 495, 503, 504, 505, 506, 515, 520, 529, 534, 538, 542, 544, 545, 546, 547, 548, 551, 559, 560, 561, 562, 567, 574, 579, 588, 592, 593, 595, 604, 605, 606, 607, 612, 630, 644, 646, 651, 652, 653, 657, 658, 662, 719, 827, 828, 833, 835, 837, 838, 840, 842, 843, 857, 865, 870, 871, 887, 894, 904, 907, 936, 937, 974, 975, 983, 991, 992, 993, 1055, 1059, 1060], "t0": [178, 179, 186, 189, 191, 664], "t1": [178, 179, 189, 191, 194, 664, 869], "t10": [186, 189], "t100": [178, 179], "t10596": 179, "t1217": 179, "t1233": 179, "t131567": 194, "t1566": 179, "t161": 178, "t2": [189, 191, 869, 872], "t2130": 179, "t2214": 179, "t3": [191, 869, 872], "t30": [186, 191], "t329": 178, "t330": 178, "t335928": 194, "t34": 191, "t35": 191, "t3e": [178, 179], "t4": 189, "t42": 179, "t44": 179, "t5": 872, "t50": 186, "t5565": 179, "t5587": 179, "t5671": 179, "t6": 872, "t6821": 179, "t6928": 179, "t6e": 179, "t80": 186, "t811": 179, "t8468": 179, "t8552": 179, "t8e": 179, "t9": 189, "t90": 186, "t94": 179, "t96": 186, "t99": 178, "t9e": 178, "t_a": 885, "t_b": 885, "ta": [664, 1055], "taaactatta": 182, "taaactccgg": 182, "taacaatcct": 182, "taacatatac": 184, "taacgtta": [395, 567], "taagactaaa": 182, "taatgaatgg": 182, "tab": [178, 179, 186, 187, 188, 189, 191, 192, 194, 864, 869, 872, 906], "tabl": [1, 141, 145, 177, 184, 185, 192, 194, 333, 396, 397, 399, 408, 409, 410, 571, 572, 646, 651, 813, 827, 828, 834, 835, 1018, 1052, 1054, 1055], "table2": 907, "table3": 907, "table_id": [408, 844, 911], "tableexcept": [844, 896, 909, 911], "tabular": [3, 16, 48, 65, 87, 178, 179, 192, 194, 321], "tabularmsa": [0, 3, 16, 17, 34, 48, 98, 99, 100, 101, 102, 103, 104, 180, 184, 190, 193, 266, 1053], "tac": 191, "tacatcgttt": 182, "tacatgtgta": 182, "taccaggcat": 182, "tacccggt": 1055, "tacctaagtt": 182, "tacg": 191, "tacgta": 191, "tae000111": 179, "tae000171": 179, "tae000174": 179, "tae000425": 179, "tag": [186, 193, 364, 394, 434, 460, 485, 513, 539, 570, 661], "tagagattaattgccactgccaaaattctg": 0, "tagattacag": 182, "taggttgatc": 182, "tagtgaatgg": 182, "take": [1, 145, 190, 195, 206, 207, 208, 285, 363, 390, 433, 457, 484, 509, 538, 565, 593, 609, 628, 646, 679, 688, 703, 715, 716, 790, 827, 835, 838, 839, 855, 856, 865, 885, 898, 906, 907, 992, 1018, 1058, 1060], "taken": [1, 178, 179, 183, 190, 193, 194, 646, 722, 1017], "target": [0, 1, 53, 104, 115, 186, 623, 638, 676, 686, 699, 712], "target_begin": 20, "target_sequ": [0, 20, 53, 54], "task": [994, 1053], "tata": [366, 436, 487, 541, 594], "tataa": [366, 436, 487, 541, 594], "tatattagca": 182, "tatctaactg": 182, "tatgtatata": 184, "tatgtatatataacatatacatatatacatacata": 184, "tau": 646, "tax": 179, "tax_id": [194, 950], "taxa": [1, 107, 108, 109, 113, 114, 115, 116, 117, 119, 120, 121, 124, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 192, 194, 646, 828, 842, 937, 992], "taxdump": 950, "taxdump_readm": 194, "taxid": 194, "taxon": [1, 107, 108, 109, 112, 114, 116, 125, 126, 132, 135, 136, 140, 143, 144, 182, 185, 844, 911, 950, 1058], "taxonom": [1, 143], "taxonomi": [178, 188, 192, 194, 399, 407, 408, 860, 861, 870, 887, 904, 950, 951, 984], "taxonomy_0": [887, 902], "taxonomy_1": [887, 902], "taylor": 121, "tb": [664, 869, 872], "tc": [664, 869, 872], "tcaaaagaaa": 182, "tcatttagga": 191, "tcc": 0, "tccacaaatg": 182, "tccagaaaaa": 182, "tcg": [394, 460, 513, 570], "tcga": [393, 459, 512, 569, 610], "tcggagcagt": 182, "tcgggcasdgca": 191, "tcgggcattgca": 191, "tcgtatagat": 182, "tctacccctctcagaga": 0, "tctataagattccgcatgcgttacttataagatgtctcaacgg": 0, "tctcaatctc": 182, "tctcaga": 0, "tcttaacata": 182, "tcttcagcat": 182, "tcttgctcat": 182, "tctttgcttc": 182, "tdbl": 942, "technic": [135, 188], "techniqu": [1, 117, 643, 827, 828, 1056], "teh": [844, 911], "tell": 646, "temorg": 179, "temperatur": 841, "tempfil": 235, "temporari": 860, "temporaryfil": 235, "ten": 1, "tend": 192, "ter": [462, 828], "term": [1, 84, 112, 130, 132, 177, 185, 250, 285, 297, 315, 321, 722, 813, 992], "termin": [182, 396, 409, 571, 985], "test": [1, 70, 79, 132, 195, 239, 245, 257, 263, 269, 275, 286, 292, 304, 310, 322, 328, 345, 354, 400, 406, 416, 425, 467, 476, 520, 529, 579, 588, 643, 646, 651, 664, 714, 716, 717, 718, 719, 721, 722, 734, 756, 767, 800, 811, 838, 841, 842, 866, 995, 996, 1016, 1052], "test_tabl": [869, 872], "texon": 186, "text": [109, 125, 126, 140, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 206, 207, 208, 235, 321, 664, 745, 778, 789], "textiobas": [196, 206, 207, 208, 235], "textiowrapp": 235, "tf": 101, "tgaaggatca": 182, "tgaattcaac": 182, "tgca": 191, "tgene": 186, "tgenu": 194, "tgetaaafhwqaaf": 191, "tgg": [364, 394, 434, 460, 485, 513, 539, 570], "tggaacaatt": 182, "tggattaaaa": 182, "tggattctgc": 256, "tggtgcacct": 182, "tggtgctgga": 182, "tgi": 178, "tgtaataaat": 182, "tgtacacta": 3, "th": [109, 125, 126, 140, 661], "than": [0, 1, 53, 83, 84, 107, 116, 121, 123, 139, 143, 144, 183, 188, 190, 193, 228, 232, 266, 321, 340, 341, 342, 345, 359, 363, 367, 378, 379, 380, 381, 382, 384, 385, 386, 387, 397, 410, 412, 413, 416, 429, 433, 437, 446, 447, 448, 449, 451, 452, 453, 454, 462, 463, 464, 467, 480, 484, 488, 498, 499, 500, 501, 503, 504, 505, 506, 515, 516, 517, 520, 534, 538, 542, 553, 554, 555, 556, 557, 559, 560, 561, 562, 572, 575, 576, 579, 592, 593, 595, 599, 600, 601, 602, 604, 605, 606, 607, 612, 642, 643, 646, 648, 651, 664, 705, 714, 716, 717, 718, 722, 812, 827, 828, 841, 842, 843, 876, 881, 900, 933, 950, 963, 992, 997, 1053, 1058], "thei": [0, 1, 75, 80, 84, 91, 107, 141, 145, 178, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 283, 340, 345, 354, 357, 380, 400, 416, 425, 447, 467, 476, 499, 515, 520, 529, 532, 555, 579, 588, 600, 614, 626, 643, 667, 678, 690, 702, 714, 715, 716, 717, 718, 719, 723, 823, 824, 827, 833, 838, 861, 870, 904, 937, 944, 993, 995, 1060], "them": [1, 50, 118, 185, 190, 192, 257, 269, 278, 279, 392, 458, 511, 568, 574, 716, 757, 832, 833, 835, 1019], "themselv": [1054, 1055], "theorem": [122, 123], "theoret": [133, 137], "theori": [84, 109, 124, 135, 657, 663], "therebi": 813, "therefor": [1, 82, 85, 92, 112, 116, 132, 136, 143, 144, 149, 192, 321, 612, 646], "thermoplasmata": [951, 984], "theta": [132, 646], "thi": [0, 1, 2, 3, 12, 19, 43, 52, 53, 67, 68, 69, 70, 72, 77, 79, 81, 82, 83, 84, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 116, 117, 118, 121, 122, 123, 128, 131, 132, 141, 142, 143, 144, 145, 146, 148, 149, 150, 161, 162, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 206, 207, 208, 220, 228, 230, 232, 234, 235, 236, 239, 245, 248, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 275, 277, 278, 279, 280, 281, 282, 284, 286, 292, 295, 301, 302, 304, 310, 313, 319, 320, 321, 322, 328, 330, 331, 334, 335, 336, 338, 339, 342, 343, 344, 345, 347, 350, 352, 354, 355, 358, 359, 363, 367, 369, 370, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 394, 397, 398, 399, 408, 409, 410, 411, 413, 414, 415, 416, 418, 421, 423, 425, 426, 428, 429, 433, 437, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 459, 460, 461, 464, 465, 466, 467, 469, 472, 474, 476, 477, 479, 480, 484, 488, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 512, 513, 514, 517, 518, 519, 520, 522, 525, 527, 529, 530, 533, 534, 538, 542, 544, 545, 553, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 569, 570, 572, 573, 574, 576, 577, 578, 579, 581, 584, 586, 588, 589, 591, 592, 593, 595, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 633, 634, 635, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 664, 667, 669, 682, 683, 684, 687, 688, 690, 692, 705, 707, 708, 709, 710, 713, 714, 715, 716, 718, 720, 721, 722, 723, 812, 813, 824, 825, 826, 828, 833, 834, 835, 838, 840, 841, 842, 857, 860, 861, 868, 870, 876, 885, 891, 894, 895, 900, 904, 905, 909, 910, 912, 928, 930, 932, 934, 936, 937, 940, 942, 943, 945, 947, 948, 950, 954, 961, 965, 968, 969, 971, 973, 974, 976, 977, 978, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1016, 1017, 1018, 1019, 1029, 1041, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060], "thing": 1060, "third": [658, 664, 954, 1060], "those": [1, 142, 192, 321, 335, 722, 812, 827, 842, 880, 942, 976, 981, 992, 1018, 1055], "though": [118, 183, 184, 190, 191, 192, 646, 700, 714, 718, 882, 992, 1060], "thought": 718, "thr": 462, "thraustochytrium": 408, "three": [1, 3, 65, 131, 190, 194, 658, 664, 688, 719, 813, 824, 841, 842, 860, 861, 907, 937, 1060], "threonin": 462, "threshold": [107, 995], "through": [1, 72, 98, 99, 100, 181, 192, 220, 226, 230, 616, 669, 692, 833, 945, 1060], "throughout": [1, 187, 399, 408, 841, 1059], "throughput": [116, 143, 144, 183, 184, 651, 824, 841], "thrown": [207, 952], "thu": [1, 183, 184, 188, 192, 248, 295, 313, 331, 367, 437, 488, 542, 574, 595, 616, 669, 688, 692, 714, 716, 718, 722, 833], "thymin": [182, 185, 340, 395, 567], "ti": [83, 108, 894, 991], "tid": 186, "tile": 191, "tile_numb": 191, "till": 194, "time": [1, 53, 82, 85, 116, 128, 137, 143, 144, 146, 183, 184, 192, 612, 652, 653, 661, 700, 714, 715, 716, 717, 719, 723, 746, 801, 835, 838, 841, 842, 847, 860, 891, 900, 912, 976, 1060], "timestamp": 904, "tip": [1, 116, 132, 143, 144, 912, 930, 932, 934, 935, 936, 937, 939, 940, 942, 943, 945, 952, 957, 958, 959, 960, 962, 963, 965, 966, 967, 973, 974, 975, 976, 978, 979, 981, 984, 985, 986, 991, 1053, 1058], "tip_": 977, "tip_a": [943, 972], "tip_count": 963, "tip_d": 943, "tip_list": 980, "tip_nam": 934, "tip_subset": 942, "tip_tip_dist": [943, 952], "tipnam": [958, 960], "tissue_typ": 182, "titl": [1, 178, 179, 185, 193, 632, 681, 706, 824], "tjflkafnkkghvm": 191, "tmgc": 408, "tn": 193, "tno": 194, "to_": [623, 676, 699], "to_data_fram": 710, "to_datafram": [255, 302, 320, 321], "to_delet": 968, "to_dict": 86, "to_hdf5": 870, "to_seri": [254, 301, 319], "toarrai": 662, "tobacco": 842, "togeth": [92, 182, 183, 185, 193, 646, 860, 885, 1018], "token": 150, "tol": 837, "toler": [837, 995], "tolosana": [643, 661], "ton": 1, "tongu": 1, "too": [123, 833, 857, 927], "tool": [98, 101, 178, 179, 183, 190, 192, 194, 824, 828], "toolkit": 932, "top": [646, 950], "topolog": 931, "topologi": [934, 968, 1058], "total": [108, 109, 115, 116, 117, 119, 124, 125, 126, 127, 128, 140, 176, 178, 192, 367, 437, 488, 542, 595, 715, 860, 942], "totaldescendingbranch": 942, "toward": 928, "tparent": 186, "tr": 942, "traceback": [178, 190, 409, 574, 716], "tracheophyta": 182, "track": [181, 182], "tracker": [183, 207], "tract": 842, "trail": [183, 184, 187], "trajectori": [723, 724, 734, 735, 745, 746, 756, 757, 767, 768, 778, 779, 789, 790, 800, 801, 811], "trajectory_categori": [723, 724, 746, 757, 790], "trajectory_result": 723, "tranform": 907, "tranpos": 902, "transcrib": [182, 185, 396, 397, 567, 1055], "transcript": 256, "transect": 813, "transform": [206, 208, 380, 447, 499, 555, 600, 643, 644, 645, 649, 650, 652, 653, 657, 662, 827, 833, 835, 847, 872, 894], "translat": [182, 185, 188, 194, 235, 395, 397, 399, 410, 567, 572, 1055], "translate_six_fram": [395, 396, 409, 567, 571], "transloc": 841, "transpar": [192, 235], "transpos": 902, "trapezoid": 118, "trascrib": 182, "traver": 1058, "travers": [913, 914, 934, 938, 941, 945, 948, 959, 962, 965, 966, 967, 982, 988, 989, 1058], "tre361": 182, "treat": [82, 83, 84, 85, 183, 187, 192, 321, 340, 383, 392, 450, 458, 462, 502, 511, 515, 558, 568, 574, 603, 641, 841], "treatment": [285, 646, 651, 723, 841, 858], "treatment_stat": 841, "tree": [1, 116, 132, 143, 144, 188, 193, 194, 266, 662, 859, 875, 1052, 1053], "tree1": [935, 936, 937, 1058], "tree2": [935, 936, 937, 1058], "tree3": 1058, "tree_copi": [913, 914, 938, 941], "tree_copy_nod": [913, 914, 938, 941], "tree_nod": [913, 914, 938, 941], "tree_node_class": 991, "treeerror": [973, 974], "treenod": [1, 116, 132, 143, 144, 188, 662, 859, 991, 992, 1053, 1058], "trg": [364, 394, 434, 460, 485, 513, 539, 570], "tri": 882, "triangl": [688, 703, 710, 716, 833, 882], "triangular": 716, "trifoliea": 182, "trifolium": 182, "trifurc": [116, 143, 144, 188], "trim": 409, "tripleton": 1, "trp": 462, "trubbbbrbcefgh": 191, "true": [1, 32, 33, 53, 66, 67, 68, 69, 70, 82, 83, 85, 86, 88, 89, 90, 91, 95, 96, 98, 99, 100, 110, 111, 116, 117, 132, 139, 141, 143, 144, 145, 146, 149, 150, 163, 178, 181, 182, 183, 184, 185, 186, 188, 191, 206, 207, 208, 227, 231, 235, 236, 249, 252, 256, 266, 278, 283, 296, 299, 314, 317, 330, 340, 341, 342, 344, 345, 347, 354, 357, 358, 360, 361, 362, 364, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 409, 410, 411, 412, 413, 415, 416, 418, 425, 428, 430, 431, 432, 434, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 466, 467, 469, 476, 479, 481, 482, 483, 485, 488, 489, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 519, 520, 522, 529, 532, 533, 535, 536, 537, 539, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 581, 588, 591, 595, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 610, 613, 614, 621, 623, 626, 642, 646, 651, 652, 653, 657, 664, 665, 666, 667, 674, 676, 678, 688, 689, 690, 697, 699, 702, 703, 705, 714, 716, 718, 719, 722, 757, 768, 832, 833, 835, 836, 840, 841, 843, 844, 860, 863, 867, 868, 870, 871, 879, 880, 881, 882, 886, 890, 891, 892, 893, 894, 897, 898, 900, 902, 903, 904, 907, 909, 930, 932, 934, 939, 947, 953, 955, 956, 957, 959, 962, 965, 966, 967, 970, 971, 972, 973, 982, 984, 985, 987, 991, 992, 1018, 1019, 1029, 1041, 1055, 1058, 1060], "truncat": [184, 622, 675, 698, 823, 992, 1060], "trust": 184, "truth": [341, 412, 463, 516, 575], "truthi": [341, 412, 463, 516, 575], "try": [842, 843], "tryptophan": [84, 462], "tsuperkingdom": 194, "tsv": [187, 192, 253, 300, 318, 321, 334, 337, 872, 906], "tsv_fh": 872, "tt": [83, 380, 447, 499, 555, 600], "tta": [382, 449, 501, 557, 602], "ttacatatta": 182, "ttacgcttaaac": 183, "ttactattac": 182, "ttactgttcg": 182, "ttagctcatt": 182, "ttattaaaag": 182, "ttattgtagc": 182, "ttattttttt": 182, "ttcaatttgg": 182, "ttcatt": [357, 379, 391, 532, 554, 566], "ttcatttgat": 182, "ttccagtaga": 182, "ttctactctt": 182, "ttctgcaatc": 182, "ttest_ind": [646, 651], "ttest_rel": 646, "ttgaatactt": 182, "ttgagaatac": 182, "ttgg": 860, "ttggccaaga": 182, "ttgtaactct": 182, "ttgttgtacc": 182, "ttjflkafnkkghvm": 191, "tttattggta": 182, "tttcctcgtg": 182, "tttgaattaa": 182, "tttgcaggct": 182, "ttttcattgg": 182, "ttttggactg": 182, "ttttggatta": 182, "tttttaggcc": 182, "tttttttaaaaaaa": 1060, "tupl": [98, 99, 100, 101, 102, 103, 104, 111, 115, 122, 128, 131, 149, 186, 207, 256, 277, 281, 335, 396, 397, 571, 572, 616, 669, 692, 847, 855, 860, 870, 871, 887, 900, 904, 951, 952, 983, 984], "turkei": [183, 190], "turn": [3, 340, 462, 515, 835, 995, 1060], "turnip": 193, "tutori": [192, 195, 253, 300, 318, 321, 334, 337, 1052], "twice": 842, "two": [0, 1, 3, 98, 99, 100, 101, 102, 103, 104, 107, 112, 132, 143, 144, 178, 179, 183, 184, 185, 186, 188, 190, 191, 194, 256, 257, 263, 269, 275, 278, 283, 340, 345, 358, 363, 380, 384, 386, 416, 428, 433, 447, 451, 453, 462, 467, 479, 484, 499, 503, 505, 515, 520, 533, 538, 555, 559, 561, 579, 591, 593, 600, 604, 606, 612, 614, 616, 621, 623, 628, 634, 641, 642, 643, 646, 648, 651, 658, 661, 662, 664, 665, 667, 669, 674, 676, 679, 683, 690, 692, 697, 699, 703, 708, 714, 715, 716, 717, 718, 719, 720, 722, 828, 833, 838, 841, 842, 857, 860, 870, 885, 904, 936, 937, 943, 952, 974, 976, 991, 996, 1053, 1055, 1058], "txt": [182, 192, 194, 253, 300, 318, 337], "tyne": 182, "type": [1, 53, 65, 70, 82, 83, 85, 122, 133, 137, 145, 149, 176, 180, 181, 183, 184, 185, 186, 187, 190, 193, 194, 206, 208, 221, 223, 224, 225, 227, 231, 235, 238, 239, 245, 253, 285, 286, 292, 300, 303, 304, 310, 318, 321, 322, 328, 330, 334, 337, 342, 345, 354, 357, 358, 359, 361, 363, 364, 365, 378, 379, 384, 385, 386, 387, 390, 391, 400, 406, 413, 416, 425, 428, 429, 431, 433, 434, 435, 446, 451, 452, 453, 454, 457, 464, 467, 476, 479, 480, 482, 484, 485, 486, 498, 503, 504, 505, 506, 509, 517, 520, 529, 532, 533, 534, 536, 538, 539, 540, 553, 554, 559, 560, 561, 562, 565, 566, 574, 576, 579, 588, 591, 592, 593, 599, 604, 605, 606, 607, 609, 616, 625, 637, 641, 642, 664, 669, 677, 685, 692, 701, 711, 715, 718, 720, 813, 827, 828, 835, 838, 840, 844, 855, 861, 870, 871, 885, 904, 911, 913, 914, 934, 938, 941, 983, 991, 995, 1002, 1052, 1053], "typeerror": [65, 82, 85, 92, 141, 227, 228, 231, 232, 342, 358, 359, 363, 367, 378, 379, 384, 385, 386, 387, 413, 428, 429, 433, 437, 446, 451, 452, 453, 454, 464, 479, 480, 484, 488, 498, 503, 504, 505, 506, 517, 533, 534, 538, 542, 553, 554, 559, 560, 561, 562, 576, 591, 592, 593, 595, 599, 604, 605, 606, 607, 641, 642, 715, 716, 718, 841, 842, 843, 887, 934], "typic": [98, 99, 100, 101, 102, 103, 105, 183, 184, 191, 192, 193, 256, 266, 833, 932, 1054], "tyr": 462, "tyrosin": 462, "u": [1, 100, 103, 116, 122, 125, 143, 144, 182, 183, 185, 194, 345, 350, 354, 355, 395, 416, 421, 425, 426, 462, 467, 472, 476, 477, 515, 520, 525, 529, 530, 567, 579, 584, 588, 589, 646, 649, 650, 662, 716, 837, 842, 859, 1055, 1060], "u1": [1, 116, 143, 144], "u2": [1, 116, 143, 144], "u3": [1, 116, 143, 144], "u4": [1, 116, 143, 144], "u5": [1, 116, 143, 144], "u6": [1, 116, 143, 144], "u7": [1, 116, 143, 144], "u8": [116, 143, 144], "u_count": [116, 143, 144], "u_i": 646, "uaacguua": [395, 567], "uaaguucucgaucucuaaaaucg": 193, "uaaguucucgaucuuuaaaaucg": 193, "uagguugauc": 182, "uc": 1055, "ucagucagucagucagucagucagucagucagucagucagucagucagucagucagucagucag": 399, "uccacaaaug": 182, "uconn": [107, 111], "ugaguucucgaucucuaaaaucg": 193, "ugaguucucuaucucuaaaaucg": 193, "uint8": [3, 17, 34, 183, 184, 191, 340, 342, 359, 363, 378, 379, 384, 385, 386, 387, 393, 413, 429, 433, 446, 451, 452, 453, 454, 459, 462, 464, 480, 484, 498, 503, 504, 505, 506, 512, 515, 517, 534, 538, 553, 554, 559, 560, 561, 562, 569, 574, 576, 592, 593, 599, 604, 605, 606, 607, 610], "uk": [98, 101, 120, 182, 185, 256, 643], "ulcl": 122, "ulcu": 122, "un": 188, "unabl": 196, "unalign": [98, 99, 100, 101, 102, 103, 104, 1055], "unbound": [266, 280], "uncertainti": [84, 651, 722], "unclear": 121, "unconstrain": 828, "uncorrect": [110, 111], "uncov": [122, 123, 1056], "undefin": [192, 840, 841, 937], "under": [118, 145, 183, 340, 462, 515, 574, 646, 757, 841, 860, 1052], "underli": [0, 3, 159, 235, 345, 409, 416, 467, 520, 574, 579, 641, 813, 838, 844, 1055], "underlii": 3, "underpow": 838, "underscor": [188, 190], "understand": [192, 646], "understood": [93, 97, 161, 162, 174, 175, 188, 227, 228, 229, 231, 232, 233, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 895, 910, 969, 990], "unequ": [107, 400, 612], "unescap": 188, "uneven": 140, "unfortun": [184, 841], "ungap": [380, 447, 499, 555, 600], "ungapped_subsequ": [380, 447, 499, 555, 600], "unicod": [176, 192, 235], "unifi": 651, "uniform": [1, 720], "uniformli": [16, 48, 50], "unifrac": [1, 116, 132, 143, 144, 146, 149, 833], "unimod": [828, 833], "union": [861, 885], "uniprotkb": 182, "uniq": [393, 459, 512, 569, 610], "uniqu": [1, 92, 96, 178, 183, 187, 188, 192, 193, 194, 330, 335, 393, 459, 512, 569, 610, 642, 664, 718, 824, 860, 887, 931, 940, 945], "unit": [1, 3, 143, 185, 195, 612, 833, 835, 836, 995, 996, 1059], "univers": [182, 183, 190, 192, 196], "unix": 194, "unknown": [84, 122, 123, 185, 256, 365, 435, 486, 540, 812, 894], "unknownaxiserror": [855, 857, 863, 864, 868, 875, 877, 878, 881, 882, 883, 884, 886, 887, 888, 896, 897, 907, 909], "unknowniderror": [878, 886], "unless": [53, 65, 91, 110, 191, 1019], "unlik": [193, 812], "unmask": 53, "unnam": 1053, "unnecessari": 92, "unobserv": 134, "unpack": [17, 49, 987], "unpack_by_func": 986, "unpair": 188, "unpermut": [714, 716, 717], "unread": 235, "unrecogn": [855, 857, 863, 868, 875, 877, 878, 883, 884, 886, 888, 907, 909], "unrecognizedformaterror": [227, 228, 229, 231, 232, 233], "unresolv": 149, "unroot": [116, 132, 143, 144, 188, 949, 973, 988, 989, 992], "unrooted_copi": [913, 914, 938, 941, 974, 989], "unrooted_deepcopi": [913, 914, 938, 941, 973, 974, 988], "unshar": 92, "unsign": [812, 963], "unsolv": 646, "unstabl": 149, "unsupport": [192, 462], "until": [266, 661, 975], "untouch": [868, 891], "untreat": 841, "unweight": [1, 132, 143, 144, 836], "unweighted_unifrac": [1, 144], "unwrit": 235, "unzip": 893, "up": [84, 105, 180, 190, 192, 193, 235, 266, 278, 571, 572, 616, 648, 655, 656, 658, 659, 660, 669, 692, 716, 812, 842, 860, 929, 934, 937, 968, 974, 1041, 1058], "upd": 132, "upd_": 132, "updat": [182, 183, 194, 266, 280, 574, 909], "updated_t": 909, "upon": 182, "upper": [53, 121, 122, 183, 190, 256, 266, 278, 280, 703, 710, 716, 882], "upper_bound": [111, 115, 122, 266, 278], "upper_quantil": 121, "uppercas": [340, 462, 515, 574], "upsk": 193, "uq": 121, "uracil": [182, 185, 395, 515, 567], "urinari": 842, "url": [93, 97, 161, 162, 174, 175, 227, 228, 229, 231, 232, 233, 235, 282, 284, 336, 339, 389, 398, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 870, 895, 904, 910, 969, 990], "urn": [122, 123], "us": [1, 15, 20, 45, 47, 53, 65, 72, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 98, 99, 100, 110, 111, 112, 116, 117, 120, 121, 128, 131, 132, 135, 141, 143, 144, 145, 146, 149, 150, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 206, 207, 208, 224, 225, 228, 232, 235, 254, 255, 266, 278, 301, 302, 319, 320, 321, 333, 334, 338, 340, 358, 363, 375, 377, 380, 383, 390, 393, 396, 397, 399, 407, 408, 409, 410, 411, 428, 433, 443, 445, 447, 450, 457, 459, 462, 479, 484, 494, 496, 499, 502, 509, 512, 515, 533, 538, 550, 552, 555, 558, 565, 569, 571, 572, 574, 591, 593, 597, 598, 600, 603, 609, 610, 612, 616, 628, 640, 641, 643, 644, 645, 646, 651, 652, 653, 655, 656, 662, 664, 665, 669, 679, 688, 692, 703, 710, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 746, 757, 768, 790, 801, 813, 824, 827, 833, 837, 838, 839, 840, 841, 842, 860, 865, 866, 868, 891, 894, 896, 898, 899, 902, 904, 905, 912, 913, 914, 930, 932, 933, 934, 937, 938, 941, 943, 949, 950, 968, 973, 974, 981, 983, 988, 989, 991, 993, 994, 995, 996, 997, 1018, 1041, 1055, 1058, 1059, 1060], "usag": [130, 717], "useabl": 226, "usefulli": 991, "user": [1, 84, 142, 178, 192, 194, 195, 196, 206, 207, 208, 227, 229, 231, 233, 392, 458, 511, 568, 646, 651, 828, 833, 993, 1055], "usrman": 182, "usual": [1, 139, 182, 185, 192, 194, 612, 932], "ut": 1055, "uti": 842, "util": [1, 93, 97, 161, 162, 174, 175, 194, 206, 208, 282, 284, 336, 339, 389, 398, 399, 407, 408, 411, 456, 461, 508, 514, 564, 573, 608, 611, 633, 639, 682, 687, 707, 713, 825, 826, 870, 885, 893, 895, 898, 904, 910, 969, 990, 1052, 1053], "uu": 143, "uuagcucauu": 182, "uuauuguagc": 182, "uuauuuuuuu": 182, "uucuacucuu": 182, "uugagaauac": 182, "uuugaauuaa": 182, "uuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggg": 399, "uuuuuuuuuuuuuuuuccccccccccccccccaaaaaaaaaaaaaaaagggggggggggggggg": 399, "v": [53, 143, 144, 285, 321, 340, 345, 354, 416, 425, 462, 467, 476, 515, 520, 529, 579, 588, 643, 657, 661, 663, 840, 841, 983], "v2": 177, "v_count": [143, 144], "vagin": 842, "vaginali": 842, "val": [462, 868], "val_i": 882, "val_j": 882, "valdar": 84, "valid": [98, 101, 116, 132, 141, 143, 144, 145, 146, 149, 181, 183, 184, 188, 190, 321, 334, 340, 393, 411, 459, 462, 512, 515, 569, 610, 657, 663, 665, 688, 703, 844, 870, 894, 904, 1055, 1060], "valin": 462, "valu": [1, 3, 4, 5, 7, 9, 10, 11, 14, 15, 18, 19, 21, 22, 25, 27, 28, 29, 35, 36, 38, 40, 41, 42, 46, 47, 51, 52, 55, 56, 58, 60, 61, 62, 71, 74, 76, 78, 84, 89, 98, 99, 100, 101, 102, 103, 105, 107, 118, 128, 140, 141, 144, 151, 152, 154, 156, 157, 158, 164, 165, 167, 169, 170, 171, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 192, 193, 197, 198, 200, 202, 203, 204, 210, 211, 213, 215, 216, 217, 235, 239, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 254, 255, 258, 260, 261, 262, 265, 270, 272, 273, 274, 277, 281, 285, 286, 287, 289, 290, 291, 292, 294, 296, 297, 298, 299, 301, 302, 304, 305, 307, 308, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 334, 335, 338, 340, 341, 346, 349, 351, 353, 357, 358, 375, 383, 390, 391, 401, 403, 404, 405, 412, 417, 420, 422, 424, 428, 443, 450, 457, 462, 463, 468, 471, 473, 475, 479, 494, 502, 509, 515, 516, 521, 524, 526, 528, 532, 533, 550, 558, 565, 566, 574, 575, 580, 583, 585, 587, 591, 597, 603, 609, 615, 618, 619, 620, 623, 638, 643, 646, 648, 651, 655, 656, 657, 658, 659, 660, 663, 668, 671, 672, 673, 676, 686, 691, 694, 695, 696, 699, 712, 714, 715, 716, 717, 718, 719, 720, 722, 725, 726, 728, 730, 731, 732, 736, 737, 739, 741, 742, 743, 745, 747, 748, 750, 752, 753, 754, 757, 758, 759, 761, 763, 764, 765, 769, 770, 772, 774, 775, 776, 778, 780, 781, 783, 785, 786, 787, 789, 791, 792, 794, 796, 797, 798, 802, 803, 805, 807, 808, 809, 812, 815, 816, 818, 820, 821, 822, 824, 827, 828, 832, 833, 835, 837, 838, 839, 840, 841, 842, 846, 849, 851, 852, 853, 854, 855, 860, 868, 869, 870, 874, 880, 881, 884, 888, 890, 891, 894, 898, 900, 901, 907, 909, 912, 915, 916, 919, 922, 924, 925, 932, 934, 937, 976, 983, 994, 995, 996, 1000, 1001, 1004, 1006, 1007, 1008, 1009, 1018, 1020, 1021, 1023, 1025, 1026, 1027, 1030, 1032, 1033, 1035, 1037, 1038, 1039, 1041, 1043, 1044, 1046, 1048, 1049, 1050, 1060], "valueerror": [65, 82, 84, 85, 88, 92, 94, 96, 107, 116, 118, 132, 141, 143, 144, 145, 149, 227, 231, 248, 295, 313, 331, 335, 358, 359, 365, 367, 378, 381, 382, 384, 385, 386, 387, 393, 409, 411, 428, 429, 435, 437, 446, 448, 449, 451, 452, 453, 454, 459, 479, 480, 486, 488, 498, 500, 501, 503, 504, 505, 506, 512, 533, 534, 540, 542, 553, 556, 557, 559, 560, 561, 562, 569, 574, 591, 592, 595, 599, 601, 602, 604, 605, 606, 607, 610, 624, 627, 628, 641, 642, 648, 655, 656, 662, 679, 703, 715, 716, 718, 719, 757, 801, 812, 824, 827, 828, 841, 842, 843, 869, 870, 894, 900, 935, 937, 942, 950, 958, 960, 963, 975, 976, 981, 986, 997], "van": 661, "vanveeeeaw": 181, "var": [715, 902], "vari": [1, 718, 838, 840, 841], "variabl": [118, 176, 390, 457, 509, 565, 574, 609, 646, 715, 718, 813, 814, 824, 828, 833, 834, 835, 838, 840, 841, 1018, 1041, 1060], "varianc": [111, 330, 657, 663, 715, 717, 718, 813, 829, 832, 836, 841], "variant": [1, 116, 132, 191, 194, 612], "variat": [107, 716, 828], "varieti": 187, "variou": [1, 3, 189, 321, 664, 814, 838, 1056, 1059], "vazquez": 824, "ve": [1, 183, 184, 842, 1058], "vec": 839, "vector": [3, 88, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 150, 163, 181, 187, 360, 362, 365, 368, 380, 383, 385, 387, 388, 390, 393, 399, 430, 432, 435, 438, 447, 450, 452, 454, 455, 457, 459, 481, 483, 486, 489, 499, 502, 504, 506, 507, 509, 510, 512, 535, 537, 540, 543, 555, 558, 560, 562, 563, 565, 569, 600, 603, 605, 607, 609, 610, 616, 644, 645, 646, 651, 652, 653, 658, 659, 660, 663, 664, 665, 669, 688, 692, 714, 717, 718, 768, 828, 842, 843, 847, 860, 893, 897, 900, 907, 983], "vegan": [714, 715, 716, 717, 718, 827, 828, 835], "vellend": 132, "ver": 179, "verdonschot": 828, "veri": [1, 98, 99, 100, 121, 183, 188, 195, 658, 870, 937], "verifi": [182, 195, 227, 231], "versa": [188, 722, 891], "versatil": 813, "version": [1, 110, 111, 116, 132, 141, 143, 144, 145, 176, 178, 180, 181, 182, 185, 186, 190, 207, 364, 392, 394, 434, 458, 460, 485, 511, 513, 539, 568, 570, 646, 661, 844, 865, 868, 870, 891, 900, 904, 906, 911, 926, 930, 993, 997, 1055], "versu": [133, 137, 143, 144], "veschi": 118, "via": [82, 85, 94, 107, 122, 123, 183, 190, 363, 399, 400, 406, 433, 484, 538, 593, 714, 716, 717, 860, 900], "vice": [188, 722, 891], "viceroi": [107, 111], "view": [182, 893], "viewer": 932, "violat": 651, "viral": 193, "virgilio": 118, "viridiplanta": 182, "virol": 193, "viru": 193, "visit": 966, "visual": [1, 813, 824], "vlen": [870, 904], "vocabulari": [185, 186, 254, 255, 301, 302, 319, 320, 321, 338], "vol": 134, "volatil": 723, "volum": [114, 992], "vqhklrah": 193, "vrt": 194, "w": [53, 84, 107, 108, 115, 128, 132, 140, 178, 179, 180, 235, 340, 462, 515, 646, 661, 904, 906], "wa": [1, 98, 101, 107, 108, 109, 112, 115, 116, 118, 119, 120, 124, 125, 132, 133, 135, 136, 141, 143, 144, 145, 146, 180, 183, 184, 188, 190, 235, 250, 253, 254, 255, 297, 300, 301, 302, 315, 318, 319, 320, 337, 338, 380, 409, 447, 499, 555, 574, 600, 646, 657, 661, 663, 716, 768, 832, 840, 842, 928, 970, 991, 992, 1053, 1058, 1060], "wai": [0, 1, 183, 184, 188, 190, 193, 195, 256, 334, 392, 458, 511, 568, 612, 646, 716, 833, 838, 860, 870, 904, 1053, 1058], "wakefield": 991, "walk": [988, 989, 1058, 1060], "walli": [646, 841, 842], "wan": [53, 104], "want": [98, 99, 100, 182, 185, 266, 838, 840, 841, 842, 936, 937, 1053], "warn": [184, 192, 833, 934, 988, 993, 994, 1052], "washington": [183, 188, 190, 991], "wasn": [65, 184], "water": 101, "waterman": [0, 53, 101, 102, 103, 104], "we": [0, 1, 53, 82, 84, 85, 116, 121, 128, 132, 143, 144, 146, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 236, 256, 266, 367, 380, 390, 409, 437, 447, 457, 488, 499, 509, 542, 555, 565, 574, 595, 600, 609, 646, 651, 657, 663, 664, 714, 715, 716, 718, 719, 722, 723, 813, 824, 827, 835, 837, 838, 840, 841, 842, 857, 870, 900, 937, 991, 1053, 1058, 1060], "weak": 340, "weaker": 722, "web": [53, 98, 101, 104, 180, 194, 714, 715, 716, 717, 718], "webfeat": 185, "webpag": 185, "websit": 84, "week": 842, "weight": [1, 116, 132, 143, 144, 188, 723, 724, 746, 757, 768, 790, 832, 836, 991], "weighted_unifrac": [1, 143], "welcom": 183, "well": [0, 184, 192, 195, 321, 574, 651, 664, 665, 715, 717, 718, 722, 814, 828, 870, 991, 1053, 1058, 1059], "wellcom": 184, "were": [1, 100, 103, 116, 121, 141, 143, 144, 145, 188, 190, 191, 345, 380, 416, 447, 467, 499, 520, 555, 579, 600, 714, 716, 718, 824, 841, 842, 958, 960, 994, 1060], "wf": [184, 1060], "what": [1, 116, 132, 141, 143, 144, 145, 188, 192, 195, 196, 224, 225, 229, 233, 281, 380, 447, 499, 555, 600, 722, 812, 841, 857, 860, 870, 893, 904, 1058, 1060], "whatev": 195, "when": [1, 53, 82, 84, 85, 92, 95, 98, 99, 100, 107, 117, 132, 133, 137, 146, 149, 176, 178, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 206, 207, 208, 227, 228, 229, 231, 232, 233, 235, 266, 278, 321, 330, 334, 358, 365, 366, 369, 370, 383, 428, 435, 436, 450, 479, 486, 487, 502, 533, 540, 541, 544, 545, 558, 574, 591, 594, 603, 641, 646, 664, 714, 716, 717, 718, 720, 722, 745, 778, 789, 827, 835, 838, 839, 840, 841, 842, 843, 844, 860, 870, 900, 911, 937, 971, 988, 989, 992, 996, 997, 1018, 1053, 1058, 1060], "whenev": [184, 833], "where": [1, 3, 14, 18, 46, 51, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 145, 146, 149, 176, 181, 183, 187, 188, 189, 192, 193, 195, 333, 360, 362, 366, 368, 378, 380, 385, 387, 388, 390, 430, 432, 436, 438, 446, 447, 452, 454, 455, 457, 481, 483, 487, 489, 498, 499, 504, 506, 507, 509, 510, 535, 537, 541, 543, 553, 555, 560, 562, 563, 565, 594, 599, 600, 605, 607, 609, 612, 616, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 669, 692, 716, 722, 812, 824, 832, 834, 835, 836, 838, 842, 843, 868, 870, 887, 899, 904, 909, 912, 936, 937, 947, 951, 984, 987, 1016, 1058, 1060], "where_values_miss": [249, 296, 314], "wherea": [177, 812], "wherev": 836, "whether": [32, 66, 67, 70, 79, 89, 90, 110, 111, 132, 186, 195, 206, 208, 235, 239, 245, 254, 255, 286, 292, 301, 302, 304, 310, 319, 320, 322, 328, 338, 342, 345, 354, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 400, 406, 413, 416, 425, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 464, 467, 476, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 517, 520, 529, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 576, 579, 588, 596, 597, 598, 600, 601, 602, 621, 642, 646, 657, 663, 674, 697, 714, 716, 717, 718, 823, 835, 836, 867, 868, 870, 879, 904, 907], "which": [1, 3, 13, 15, 17, 44, 47, 65, 98, 99, 100, 107, 112, 116, 126, 132, 136, 139, 143, 144, 146, 178, 180, 181, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 206, 207, 208, 209, 221, 223, 224, 225, 226, 227, 231, 321, 340, 358, 359, 370, 378, 380, 383, 393, 409, 428, 429, 446, 447, 450, 459, 462, 479, 480, 498, 499, 502, 512, 515, 533, 534, 545, 553, 555, 558, 569, 574, 591, 592, 599, 600, 603, 610, 623, 643, 644, 645, 646, 651, 665, 676, 699, 714, 717, 718, 722, 828, 832, 833, 838, 839, 840, 841, 842, 858, 859, 860, 861, 865, 868, 884, 887, 888, 890, 896, 897, 901, 904, 906, 937, 940, 971, 972, 983, 984, 989, 991, 992, 1002, 1019, 1041, 1053, 1055, 1058, 1060], "while": [0, 1, 176, 182, 183, 184, 185, 190, 256, 399, 574, 646, 718, 757, 801, 813, 824, 840, 844, 847, 911, 912, 940, 1018, 1054, 1055, 1060], "white": 182, "whitespac": [183, 184, 187, 189, 193], "whitnei": 646, "who": [188, 842], "whole": [193, 831, 839, 864, 884, 888, 890, 897, 901], "whose": [185, 191, 192, 631, 680, 704, 715, 716, 836, 863, 878, 886, 898], "why": 114, "wide": [1, 92, 132, 358, 428, 479, 533, 591], "width": [183, 187, 190], "wiener": [120, 135], "wiki": [183, 184, 190, 193, 992], "wikipedia": [183, 184, 193, 992, 1058], "wilcoxon": 646, "wild": [392, 458, 511, 568], "wildcard": [392, 393, 458, 459, 511, 512, 568, 569, 610], "wildcard_char": [393, 459, 512, 569, 610], "wilei": 643, "william": 117, "window": 801, "window_s": 801, "wish": [192, 1058], "with_mean": [832, 836], "with_replac": 900, "with_std": [832, 836], "within": [1, 84, 132, 140, 146, 176, 179, 183, 184, 188, 190, 192, 193, 321, 340, 462, 515, 574, 623, 651, 676, 699, 718, 719, 779, 813, 814, 824, 840, 841, 860, 889, 912, 954, 995, 998, 1041, 1058, 1060], "within_captur": [394, 460, 513, 570], "without": [82, 85, 92, 94, 128, 144, 179, 188, 190, 192, 193, 253, 300, 318, 337, 574, 643, 812, 824, 842, 843, 865, 882, 900, 906, 943, 952, 984, 1017, 1018, 1053], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 399, "woman": 842, "women": 842, "won": [1, 116, 141, 143, 144, 145, 184, 257, 828], "word": [0, 182, 183, 185, 188, 193, 281, 382, 449, 501, 557, 602], "work": [1, 53, 146, 183, 190, 192, 195, 321, 340, 462, 515, 664, 716, 828, 842, 876, 885, 1052, 1054, 1055, 1057, 1058], "workflow": 1052, "worri": [188, 844, 911], "worst": 965, "would": [3, 84, 116, 118, 121, 143, 144, 180, 183, 186, 188, 190, 192, 193, 195, 321, 358, 380, 428, 447, 479, 499, 533, 555, 591, 600, 623, 658, 661, 676, 699, 722, 840, 841, 934, 984, 985, 991, 1053], "wprintgc": [399, 407, 408], "wr": [183, 722], "wrap": [20, 190, 193, 1042], "wrapper": [53, 104, 122, 123, 995], "writabl": 235, "write": [93, 161, 174, 177, 180, 181, 182, 184, 186, 187, 188, 190, 193, 195, 208, 225, 226, 235, 282, 336, 389, 456, 508, 564, 608, 633, 664, 682, 707, 745, 778, 789, 825, 895, 904, 905, 906, 926, 969, 997, 1052], "writeabl": 1053, "writer": [97, 162, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 223, 226, 229, 233, 235, 284, 339, 398, 461, 514, 573, 611, 639, 687, 713, 826, 910, 990], "written": [180, 183, 184, 188, 190, 321, 865, 905, 906, 991, 1053, 1058], "wrong": 126, "wu": [132, 144], "wu_dm": 1, "wu_pc": 1, "wunsch": [0, 98, 99, 100], "www": [53, 98, 101, 104, 121, 146, 176, 178, 179, 180, 182, 183, 184, 185, 190, 194, 399, 407, 408, 715], "x": [50, 53, 118, 134, 177, 184, 191, 393, 411, 459, 462, 512, 569, 610, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 658, 659, 660, 661, 663, 716, 719, 722, 813, 814, 824, 827, 828, 829, 835, 838, 841, 842, 860, 868, 872, 881, 886, 891, 896, 898, 902, 904, 906, 907, 911, 937, 947, 968, 971, 983, 987, 992, 1017, 1060], "x00": 236, "x01": 236, "x03": 236, "x0c": 236, "x108": 236, "x1c": 236, "x56734": 182, "x86": 236, "x89": 236, "x8b": 236, "x9ah3m": 236, "x9c": 236, "x_": [643, 644, 661, 838, 842], "x_1": [644, 645, 649, 650, 658, 659, 660], "x_d": [644, 645, 649, 650, 658, 659, 660], "x_i": [645, 649, 654, 658, 659, 660, 661], "x_j": 654, "xa6": 236, "xaa": 462, "xb7": 236, "xb9": 236, "xc1": 236, "xc4": 236, "xle": 462, "xx": 182, "xxxxxx": 411, "xyz": 180, "y": [53, 107, 118, 184, 191, 340, 462, 515, 654, 658, 659, 663, 716, 719, 722, 813, 824, 828, 829, 834, 835, 840, 886, 896, 904, 906, 907, 937, 983], "y_": [645, 842], "y_1": [645, 658, 659], "y_2": 645, "y_d": [658, 659], "y_i": 654, "y_j": 654, "yang": 107, "ye": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "yeast": [396, 571], "yeild": 718, "yellow": 193, "yet": [188, 194, 195], "yield": [75, 80, 91, 183, 281, 350, 355, 364, 365, 366, 380, 381, 397, 410, 421, 426, 434, 435, 436, 447, 448, 472, 477, 485, 486, 487, 499, 500, 525, 530, 539, 540, 541, 555, 556, 572, 584, 589, 594, 600, 601, 718, 880, 881, 882, 889, 893, 947, 959, 962, 965, 966, 967, 976, 982, 984, 985, 1019, 1053, 1060], "york": 109, "you": [1, 53, 98, 99, 100, 116, 141, 143, 144, 145, 146, 178, 180, 183, 184, 186, 190, 192, 193, 195, 265, 266, 278, 280, 281, 340, 462, 515, 574, 612, 703, 714, 718, 835, 838, 840, 841, 842, 899, 934, 936, 937, 1053, 1055, 1058, 1060], "your": [53, 92, 116, 141, 143, 144, 145, 184, 192, 195, 266, 718, 838, 841, 1053, 1058, 1060], "yy": 184, "z": [53, 92, 115, 192, 462, 719, 824, 880, 937, 983], "z3": [874, 880], "zero": [3, 13, 16, 17, 44, 45, 48, 107, 117, 149, 176, 256, 277, 321, 335, 367, 437, 488, 542, 595, 643, 646, 648, 651, 655, 656, 657, 658, 659, 660, 663, 665, 714, 715, 716, 717, 718, 719, 722, 827, 833, 836, 841, 843, 844, 870, 897, 900, 904, 907, 992, 1060], "zero_index": [53, 104], "zhao": [53, 104], "zip": 864, "zp_02903423": 178, "zscore": 111, "zxx": 184, "\u00e9": 661, "\u00f8": 132}, "titles": ["Sequence Alignments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.alignment</span></code>)", "Community Diversity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity</span></code>)", "Biological Embeddings (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.embedding</span></code>)", "skbio.alignment.AlignPath", "skbio.alignment.AlignPath.__eq__", "skbio.alignment.AlignPath.__ge__", "skbio.alignment.AlignPath.__getstate__", "skbio.alignment.AlignPath.__gt__", "skbio.alignment.AlignPath.__hash__", "skbio.alignment.AlignPath.__le__", "skbio.alignment.AlignPath.__lt__", "skbio.alignment.AlignPath.__ne__", "skbio.alignment.AlignPath.__str__", "skbio.alignment.AlignPath.from_bits", "skbio.alignment.AlignPath.from_coordinates", "skbio.alignment.AlignPath.from_indices", "skbio.alignment.AlignPath.from_tabular", "skbio.alignment.AlignPath.to_bits", "skbio.alignment.AlignPath.to_coordinates", "skbio.alignment.AlignPath.to_indices", "skbio.alignment.AlignmentStructure", "skbio.alignment.AlignmentStructure.__eq__", "skbio.alignment.AlignmentStructure.__ge__", "skbio.alignment.AlignmentStructure.__getitem__", "skbio.alignment.AlignmentStructure.__getstate__", "skbio.alignment.AlignmentStructure.__gt__", "skbio.alignment.AlignmentStructure.__hash__", "skbio.alignment.AlignmentStructure.__le__", "skbio.alignment.AlignmentStructure.__lt__", "skbio.alignment.AlignmentStructure.__ne__", "skbio.alignment.AlignmentStructure.__setstate__", "skbio.alignment.AlignmentStructure.__str__", "skbio.alignment.AlignmentStructure.is_zero_based", "skbio.alignment.AlignmentStructure.set_zero_based", "skbio.alignment.PairAlignPath", "skbio.alignment.PairAlignPath.__eq__", "skbio.alignment.PairAlignPath.__ge__", "skbio.alignment.PairAlignPath.__getstate__", "skbio.alignment.PairAlignPath.__gt__", "skbio.alignment.PairAlignPath.__hash__", "skbio.alignment.PairAlignPath.__le__", "skbio.alignment.PairAlignPath.__lt__", "skbio.alignment.PairAlignPath.__ne__", "skbio.alignment.PairAlignPath.__str__", "skbio.alignment.PairAlignPath.from_bits", "skbio.alignment.PairAlignPath.from_cigar", "skbio.alignment.PairAlignPath.from_coordinates", "skbio.alignment.PairAlignPath.from_indices", "skbio.alignment.PairAlignPath.from_tabular", "skbio.alignment.PairAlignPath.to_bits", "skbio.alignment.PairAlignPath.to_cigar", "skbio.alignment.PairAlignPath.to_coordinates", "skbio.alignment.PairAlignPath.to_indices", "skbio.alignment.StripedSmithWaterman", "skbio.alignment.StripedSmithWaterman.__call__", "skbio.alignment.StripedSmithWaterman.__eq__", "skbio.alignment.StripedSmithWaterman.__ge__", "skbio.alignment.StripedSmithWaterman.__getstate__", "skbio.alignment.StripedSmithWaterman.__gt__", "skbio.alignment.StripedSmithWaterman.__hash__", "skbio.alignment.StripedSmithWaterman.__le__", "skbio.alignment.StripedSmithWaterman.__lt__", "skbio.alignment.StripedSmithWaterman.__ne__", "skbio.alignment.StripedSmithWaterman.__setstate__", "skbio.alignment.StripedSmithWaterman.__str__", "skbio.alignment.TabularMSA", "skbio.alignment.TabularMSA.__bool__", "skbio.alignment.TabularMSA.__contains__", "skbio.alignment.TabularMSA.__copy__", "skbio.alignment.TabularMSA.__deepcopy__", "skbio.alignment.TabularMSA.__eq__", "skbio.alignment.TabularMSA.__ge__", "skbio.alignment.TabularMSA.__getitem__", "skbio.alignment.TabularMSA.__getstate__", "skbio.alignment.TabularMSA.__gt__", "skbio.alignment.TabularMSA.__iter__", "skbio.alignment.TabularMSA.__le__", "skbio.alignment.TabularMSA.__len__", "skbio.alignment.TabularMSA.__lt__", "skbio.alignment.TabularMSA.__ne__", "skbio.alignment.TabularMSA.__reversed__", "skbio.alignment.TabularMSA.__str__", "skbio.alignment.TabularMSA.append", "skbio.alignment.TabularMSA.consensus", "skbio.alignment.TabularMSA.conservation", "skbio.alignment.TabularMSA.extend", "skbio.alignment.TabularMSA.from_dict", "skbio.alignment.TabularMSA.from_path_seqs", "skbio.alignment.TabularMSA.gap_frequencies", "skbio.alignment.TabularMSA.has_metadata", "skbio.alignment.TabularMSA.has_positional_metadata", "skbio.alignment.TabularMSA.iter_positions", "skbio.alignment.TabularMSA.join", "skbio.alignment.TabularMSA.read", "skbio.alignment.TabularMSA.reassign_index", "skbio.alignment.TabularMSA.sort", "skbio.alignment.TabularMSA.to_dict", "skbio.alignment.TabularMSA.write", "skbio.alignment.global_pairwise_align", "skbio.alignment.global_pairwise_align_nucleotide", "skbio.alignment.global_pairwise_align_protein", "skbio.alignment.local_pairwise_align", "skbio.alignment.local_pairwise_align_nucleotide", "skbio.alignment.local_pairwise_align_protein", "skbio.alignment.local_pairwise_align_ssw", "skbio.alignment.make_identity_substitution_matrix", "Alpha diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.alpha</span></code>)", "skbio.diversity.alpha.ace", "skbio.diversity.alpha.berger_parker_d", "skbio.diversity.alpha.brillouin_d", "skbio.diversity.alpha.chao1", "skbio.diversity.alpha.chao1_ci", "skbio.diversity.alpha.dominance", "skbio.diversity.alpha.doubles", "skbio.diversity.alpha.enspie", "skbio.diversity.alpha.esty_ci", "skbio.diversity.alpha.faith_pd", "skbio.diversity.alpha.fisher_alpha", "skbio.diversity.alpha.gini_index", "skbio.diversity.alpha.goods_coverage", "skbio.diversity.alpha.heip_e", "skbio.diversity.alpha.kempton_taylor_q", "skbio.diversity.alpha.lladser_ci", "skbio.diversity.alpha.lladser_pe", "skbio.diversity.alpha.margalef", "skbio.diversity.alpha.mcintosh_d", "skbio.diversity.alpha.mcintosh_e", "skbio.diversity.alpha.menhinick", "skbio.diversity.alpha.michaelis_menten_fit", "skbio.diversity.alpha.observed_features", "skbio.diversity.alpha.observed_otus", "skbio.diversity.alpha.osd", "skbio.diversity.alpha.phydiv", "skbio.diversity.alpha.pielou_e", "skbio.diversity.alpha.robbins", "skbio.diversity.alpha.shannon", "skbio.diversity.alpha.simpson", "skbio.diversity.alpha.simpson_e", "skbio.diversity.alpha.singles", "skbio.diversity.alpha.sobs", "skbio.diversity.alpha.strong", "skbio.diversity.alpha_diversity", "Beta diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.beta</span></code>)", "skbio.diversity.beta.unweighted_unifrac", "skbio.diversity.beta.weighted_unifrac", "skbio.diversity.beta_diversity", "skbio.diversity.block_beta_diversity", "skbio.diversity.get_alpha_diversity_metrics", "skbio.diversity.get_beta_diversity_metrics", "skbio.diversity.partial_beta_diversity", "skbio.embedding.ProteinEmbedding", "skbio.embedding.ProteinEmbedding.__eq__", "skbio.embedding.ProteinEmbedding.__ge__", "skbio.embedding.ProteinEmbedding.__getstate__", "skbio.embedding.ProteinEmbedding.__gt__", "skbio.embedding.ProteinEmbedding.__hash__", "skbio.embedding.ProteinEmbedding.__le__", "skbio.embedding.ProteinEmbedding.__lt__", "skbio.embedding.ProteinEmbedding.__ne__", "skbio.embedding.ProteinEmbedding.__str__", "skbio.embedding.ProteinEmbedding.bytes", "skbio.embedding.ProteinEmbedding.read", "skbio.embedding.ProteinEmbedding.write", "skbio.embedding.ProteinVector", "skbio.embedding.ProteinVector.__eq__", "skbio.embedding.ProteinVector.__ge__", "skbio.embedding.ProteinVector.__getstate__", "skbio.embedding.ProteinVector.__gt__", "skbio.embedding.ProteinVector.__hash__", "skbio.embedding.ProteinVector.__le__", "skbio.embedding.ProteinVector.__lt__", "skbio.embedding.ProteinVector.__ne__", "skbio.embedding.ProteinVector.__str__", "skbio.embedding.ProteinVector.bytes", "skbio.embedding.ProteinVector.read", "skbio.embedding.ProteinVector.write", "Simple binary dissimilarity matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.binary_dm</span></code>)", "BIOM-Format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.biom</span></code>)", "BLAST+6 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast6</span></code>)", "BLAST+7 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast7</span></code>)", "Clustal format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.clustal</span></code>)", "Embedding format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embed</span></code>).", "EMBL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embl</span></code>)", "FASTA/QUAL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fasta</span></code>)", "FASTQ format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fastq</span></code>)", "GenBank format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.genbank</span></code>)", "GFF3 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.gff3</span></code>)", "Labeled square matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.lsmat</span></code>)", "Newick format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.newick</span></code>)", "Ordination results format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.ordination</span></code>)", "PHYLIP multiple sequence alignment format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.phylip</span></code>)", "QSeq format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.qseq</span></code>)", "Format Support", "Stockholm format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.stockholm</span></code>)", "Taxdump format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.taxdump</span></code>)", "I/O Registry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.registry</span></code>)", "skbio.io.registry.Format", "skbio.io.registry.Format.__eq__", "skbio.io.registry.Format.__ge__", "skbio.io.registry.Format.__getstate__", "skbio.io.registry.Format.__gt__", "skbio.io.registry.Format.__hash__", "skbio.io.registry.Format.__le__", "skbio.io.registry.Format.__lt__", "skbio.io.registry.Format.__ne__", "skbio.io.registry.Format.__str__", "skbio.io.registry.Format.reader", "skbio.io.registry.Format.sniffer", "skbio.io.registry.Format.writer", "skbio.io.registry.IORegistry", "skbio.io.registry.IORegistry.__eq__", "skbio.io.registry.IORegistry.__ge__", "skbio.io.registry.IORegistry.__getstate__", "skbio.io.registry.IORegistry.__gt__", "skbio.io.registry.IORegistry.__hash__", "skbio.io.registry.IORegistry.__le__", "skbio.io.registry.IORegistry.__lt__", "skbio.io.registry.IORegistry.__ne__", "skbio.io.registry.IORegistry.__str__", "skbio.io.registry.IORegistry.add_format", "skbio.io.registry.IORegistry.create_format", "skbio.io.registry.IORegistry.get_reader", "skbio.io.registry.IORegistry.get_sniffer", "skbio.io.registry.IORegistry.get_writer", "skbio.io.registry.IORegistry.list_read_formats", "skbio.io.registry.IORegistry.list_write_formats", "skbio.io.registry.IORegistry.monkey_patch", "skbio.io.registry.IORegistry.read", "skbio.io.registry.IORegistry.sniff", "skbio.io.registry.IORegistry.write", "skbio.io.registry.create_format", "skbio.io.registry.read", "skbio.io.registry.sniff", "skbio.io.registry.write", "I/O utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.util</span></code>)", "skbio.io.util.open", "skbio.io.util.open_file", "skbio.io.util.open_files", "skbio.metadata.CategoricalMetadataColumn", "skbio.metadata.CategoricalMetadataColumn.__eq__", "skbio.metadata.CategoricalMetadataColumn.__ge__", "skbio.metadata.CategoricalMetadataColumn.__getstate__", "skbio.metadata.CategoricalMetadataColumn.__gt__", "skbio.metadata.CategoricalMetadataColumn.__le__", "skbio.metadata.CategoricalMetadataColumn.__lt__", "skbio.metadata.CategoricalMetadataColumn.__ne__", "skbio.metadata.CategoricalMetadataColumn.__str__", "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "skbio.metadata.CategoricalMetadataColumn.filter_ids", "skbio.metadata.CategoricalMetadataColumn.get_ids", "skbio.metadata.CategoricalMetadataColumn.get_missing", "skbio.metadata.CategoricalMetadataColumn.get_value", "skbio.metadata.CategoricalMetadataColumn.has_missing_values", "skbio.metadata.CategoricalMetadataColumn.save", "skbio.metadata.CategoricalMetadataColumn.to_dataframe", "skbio.metadata.CategoricalMetadataColumn.to_series", "skbio.metadata.Interval", "skbio.metadata.Interval.__eq__", "skbio.metadata.Interval.__ge__", "skbio.metadata.Interval.__getstate__", "skbio.metadata.Interval.__gt__", "skbio.metadata.Interval.__le__", "skbio.metadata.Interval.__lt__", "skbio.metadata.Interval.__ne__", "skbio.metadata.Interval.__str__", "skbio.metadata.Interval.drop", "skbio.metadata.IntervalMetadata", "skbio.metadata.IntervalMetadata.__copy__", "skbio.metadata.IntervalMetadata.__deepcopy__", "skbio.metadata.IntervalMetadata.__eq__", "skbio.metadata.IntervalMetadata.__ge__", "skbio.metadata.IntervalMetadata.__getstate__", "skbio.metadata.IntervalMetadata.__gt__", "skbio.metadata.IntervalMetadata.__le__", "skbio.metadata.IntervalMetadata.__lt__", "skbio.metadata.IntervalMetadata.__ne__", "skbio.metadata.IntervalMetadata.__str__", "skbio.metadata.IntervalMetadata.add", "skbio.metadata.IntervalMetadata.concat", "skbio.metadata.IntervalMetadata.drop", "skbio.metadata.IntervalMetadata.merge", "skbio.metadata.IntervalMetadata.query", "skbio.metadata.IntervalMetadata.read", "skbio.metadata.IntervalMetadata.sort", "skbio.metadata.IntervalMetadata.write", "skbio.metadata.MetadataColumn", "skbio.metadata.MetadataColumn.__eq__", "skbio.metadata.MetadataColumn.__ge__", "skbio.metadata.MetadataColumn.__getstate__", "skbio.metadata.MetadataColumn.__gt__", "skbio.metadata.MetadataColumn.__le__", "skbio.metadata.MetadataColumn.__lt__", "skbio.metadata.MetadataColumn.__ne__", "skbio.metadata.MetadataColumn.__str__", "skbio.metadata.MetadataColumn.drop_missing_values", "skbio.metadata.MetadataColumn.filter_ids", "skbio.metadata.MetadataColumn.get_ids", "skbio.metadata.MetadataColumn.get_missing", "skbio.metadata.MetadataColumn.get_value", "skbio.metadata.MetadataColumn.has_missing_values", "skbio.metadata.MetadataColumn.save", "skbio.metadata.MetadataColumn.to_dataframe", "skbio.metadata.MetadataColumn.to_series", "skbio.metadata.NumericMetadataColumn", "skbio.metadata.NumericMetadataColumn.__eq__", "skbio.metadata.NumericMetadataColumn.__ge__", "skbio.metadata.NumericMetadataColumn.__getstate__", "skbio.metadata.NumericMetadataColumn.__gt__", "skbio.metadata.NumericMetadataColumn.__le__", "skbio.metadata.NumericMetadataColumn.__lt__", "skbio.metadata.NumericMetadataColumn.__ne__", "skbio.metadata.NumericMetadataColumn.__str__", "skbio.metadata.NumericMetadataColumn.drop_missing_values", "skbio.metadata.NumericMetadataColumn.filter_ids", "skbio.metadata.NumericMetadataColumn.get_ids", "skbio.metadata.NumericMetadataColumn.get_missing", "skbio.metadata.NumericMetadataColumn.get_value", "skbio.metadata.NumericMetadataColumn.has_missing_values", "skbio.metadata.NumericMetadataColumn.save", "skbio.metadata.NumericMetadataColumn.to_dataframe", "skbio.metadata.NumericMetadataColumn.to_series", "skbio.metadata.SampleMetadata", "skbio.metadata.SampleMetadata.__eq__", "skbio.metadata.SampleMetadata.__ge__", "skbio.metadata.SampleMetadata.__getstate__", "skbio.metadata.SampleMetadata.__gt__", "skbio.metadata.SampleMetadata.__le__", "skbio.metadata.SampleMetadata.__lt__", "skbio.metadata.SampleMetadata.__ne__", "skbio.metadata.SampleMetadata.__str__", "skbio.metadata.SampleMetadata.filter_columns", "skbio.metadata.SampleMetadata.filter_ids", "skbio.metadata.SampleMetadata.get_column", "skbio.metadata.SampleMetadata.get_ids", "skbio.metadata.SampleMetadata.load", "skbio.metadata.SampleMetadata.merge", "skbio.metadata.SampleMetadata.read", "skbio.metadata.SampleMetadata.save", "skbio.metadata.SampleMetadata.to_dataframe", "skbio.metadata.SampleMetadata.write", "skbio.sequence.DNA", "skbio.sequence.DNA.__bool__", "skbio.sequence.DNA.__contains__", "skbio.sequence.DNA.__copy__", "skbio.sequence.DNA.__deepcopy__", "skbio.sequence.DNA.__eq__", "skbio.sequence.DNA.__ge__", "skbio.sequence.DNA.__getitem__", "skbio.sequence.DNA.__getstate__", "skbio.sequence.DNA.__gt__", "skbio.sequence.DNA.__iter__", "skbio.sequence.DNA.__le__", "skbio.sequence.DNA.__len__", "skbio.sequence.DNA.__lt__", "skbio.sequence.DNA.__ne__", "skbio.sequence.DNA.__reversed__", "skbio.sequence.DNA.__str__", "skbio.sequence.DNA.complement", "skbio.sequence.DNA.concat", "skbio.sequence.DNA.count", "skbio.sequence.DNA.definites", "skbio.sequence.DNA.degap", "skbio.sequence.DNA.degenerates", "skbio.sequence.DNA.distance", "skbio.sequence.DNA.expand_degenerates", "skbio.sequence.DNA.find_motifs", "skbio.sequence.DNA.find_with_regex", "skbio.sequence.DNA.frequencies", "skbio.sequence.DNA.gaps", "skbio.sequence.DNA.gc_content", "skbio.sequence.DNA.gc_frequency", "skbio.sequence.DNA.has_definites", "skbio.sequence.DNA.has_degenerates", "skbio.sequence.DNA.has_gaps", "skbio.sequence.DNA.has_interval_metadata", "skbio.sequence.DNA.has_metadata", "skbio.sequence.DNA.has_nondegenerates", "skbio.sequence.DNA.has_positional_metadata", "skbio.sequence.DNA.index", "skbio.sequence.DNA.is_reverse_complement", "skbio.sequence.DNA.iter_contiguous", "skbio.sequence.DNA.iter_kmers", "skbio.sequence.DNA.kmer_frequencies", "skbio.sequence.DNA.lowercase", "skbio.sequence.DNA.match_frequency", "skbio.sequence.DNA.matches", "skbio.sequence.DNA.mismatch_frequency", "skbio.sequence.DNA.mismatches", "skbio.sequence.DNA.nondegenerates", "skbio.sequence.DNA.read", "skbio.sequence.DNA.replace", "skbio.sequence.DNA.reverse_complement", "skbio.sequence.DNA.to_definites", "skbio.sequence.DNA.to_indices", "skbio.sequence.DNA.to_regex", "skbio.sequence.DNA.transcribe", "skbio.sequence.DNA.translate", "skbio.sequence.DNA.translate_six_frames", "skbio.sequence.DNA.write", "skbio.sequence.GeneticCode", "skbio.sequence.GeneticCode.__eq__", "skbio.sequence.GeneticCode.__ge__", "skbio.sequence.GeneticCode.__getstate__", "skbio.sequence.GeneticCode.__gt__", "skbio.sequence.GeneticCode.__le__", "skbio.sequence.GeneticCode.__lt__", "skbio.sequence.GeneticCode.__ne__", "skbio.sequence.GeneticCode.__str__", "skbio.sequence.GeneticCode.from_ncbi", "skbio.sequence.GeneticCode.translate", "skbio.sequence.GeneticCode.translate_six_frames", "skbio.sequence.GrammaredSequence", "skbio.sequence.GrammaredSequence.__bool__", "skbio.sequence.GrammaredSequence.__contains__", "skbio.sequence.GrammaredSequence.__copy__", "skbio.sequence.GrammaredSequence.__deepcopy__", "skbio.sequence.GrammaredSequence.__eq__", "skbio.sequence.GrammaredSequence.__ge__", "skbio.sequence.GrammaredSequence.__getitem__", "skbio.sequence.GrammaredSequence.__getstate__", "skbio.sequence.GrammaredSequence.__gt__", "skbio.sequence.GrammaredSequence.__iter__", "skbio.sequence.GrammaredSequence.__le__", "skbio.sequence.GrammaredSequence.__len__", "skbio.sequence.GrammaredSequence.__lt__", "skbio.sequence.GrammaredSequence.__ne__", "skbio.sequence.GrammaredSequence.__reversed__", "skbio.sequence.GrammaredSequence.__str__", "skbio.sequence.GrammaredSequence.concat", "skbio.sequence.GrammaredSequence.count", "skbio.sequence.GrammaredSequence.definites", "skbio.sequence.GrammaredSequence.degap", "skbio.sequence.GrammaredSequence.degenerates", "skbio.sequence.GrammaredSequence.distance", "skbio.sequence.GrammaredSequence.expand_degenerates", "skbio.sequence.GrammaredSequence.find_motifs", "skbio.sequence.GrammaredSequence.find_with_regex", "skbio.sequence.GrammaredSequence.frequencies", "skbio.sequence.GrammaredSequence.gaps", "skbio.sequence.GrammaredSequence.has_definites", "skbio.sequence.GrammaredSequence.has_degenerates", "skbio.sequence.GrammaredSequence.has_gaps", "skbio.sequence.GrammaredSequence.has_interval_metadata", "skbio.sequence.GrammaredSequence.has_metadata", "skbio.sequence.GrammaredSequence.has_nondegenerates", "skbio.sequence.GrammaredSequence.has_positional_metadata", "skbio.sequence.GrammaredSequence.index", "skbio.sequence.GrammaredSequence.iter_contiguous", "skbio.sequence.GrammaredSequence.iter_kmers", "skbio.sequence.GrammaredSequence.kmer_frequencies", "skbio.sequence.GrammaredSequence.lowercase", "skbio.sequence.GrammaredSequence.match_frequency", "skbio.sequence.GrammaredSequence.matches", "skbio.sequence.GrammaredSequence.mismatch_frequency", "skbio.sequence.GrammaredSequence.mismatches", "skbio.sequence.GrammaredSequence.nondegenerates", "skbio.sequence.GrammaredSequence.read", "skbio.sequence.GrammaredSequence.replace", "skbio.sequence.GrammaredSequence.to_definites", "skbio.sequence.GrammaredSequence.to_indices", "skbio.sequence.GrammaredSequence.to_regex", "skbio.sequence.GrammaredSequence.write", "skbio.sequence.Protein", "skbio.sequence.Protein.__bool__", "skbio.sequence.Protein.__contains__", "skbio.sequence.Protein.__copy__", "skbio.sequence.Protein.__deepcopy__", "skbio.sequence.Protein.__eq__", "skbio.sequence.Protein.__ge__", "skbio.sequence.Protein.__getitem__", "skbio.sequence.Protein.__getstate__", "skbio.sequence.Protein.__gt__", "skbio.sequence.Protein.__iter__", "skbio.sequence.Protein.__le__", "skbio.sequence.Protein.__len__", "skbio.sequence.Protein.__lt__", "skbio.sequence.Protein.__ne__", "skbio.sequence.Protein.__reversed__", "skbio.sequence.Protein.__str__", "skbio.sequence.Protein.concat", "skbio.sequence.Protein.count", "skbio.sequence.Protein.definites", "skbio.sequence.Protein.degap", "skbio.sequence.Protein.degenerates", "skbio.sequence.Protein.distance", "skbio.sequence.Protein.expand_degenerates", "skbio.sequence.Protein.find_motifs", "skbio.sequence.Protein.find_with_regex", "skbio.sequence.Protein.frequencies", "skbio.sequence.Protein.gaps", "skbio.sequence.Protein.has_definites", "skbio.sequence.Protein.has_degenerates", "skbio.sequence.Protein.has_gaps", "skbio.sequence.Protein.has_interval_metadata", "skbio.sequence.Protein.has_metadata", "skbio.sequence.Protein.has_nondegenerates", "skbio.sequence.Protein.has_positional_metadata", "skbio.sequence.Protein.has_stops", "skbio.sequence.Protein.index", "skbio.sequence.Protein.iter_contiguous", "skbio.sequence.Protein.iter_kmers", "skbio.sequence.Protein.kmer_frequencies", "skbio.sequence.Protein.lowercase", "skbio.sequence.Protein.match_frequency", "skbio.sequence.Protein.matches", "skbio.sequence.Protein.mismatch_frequency", "skbio.sequence.Protein.mismatches", "skbio.sequence.Protein.nondegenerates", "skbio.sequence.Protein.read", "skbio.sequence.Protein.replace", "skbio.sequence.Protein.stops", "skbio.sequence.Protein.to_definites", "skbio.sequence.Protein.to_indices", "skbio.sequence.Protein.to_regex", "skbio.sequence.Protein.write", "skbio.sequence.RNA", "skbio.sequence.RNA.__bool__", "skbio.sequence.RNA.__contains__", "skbio.sequence.RNA.__copy__", "skbio.sequence.RNA.__deepcopy__", "skbio.sequence.RNA.__eq__", "skbio.sequence.RNA.__ge__", "skbio.sequence.RNA.__getitem__", "skbio.sequence.RNA.__getstate__", "skbio.sequence.RNA.__gt__", "skbio.sequence.RNA.__iter__", "skbio.sequence.RNA.__le__", "skbio.sequence.RNA.__len__", "skbio.sequence.RNA.__lt__", "skbio.sequence.RNA.__ne__", "skbio.sequence.RNA.__reversed__", "skbio.sequence.RNA.__str__", "skbio.sequence.RNA.complement", "skbio.sequence.RNA.concat", "skbio.sequence.RNA.count", "skbio.sequence.RNA.definites", "skbio.sequence.RNA.degap", "skbio.sequence.RNA.degenerates", "skbio.sequence.RNA.distance", "skbio.sequence.RNA.expand_degenerates", "skbio.sequence.RNA.find_motifs", "skbio.sequence.RNA.find_with_regex", "skbio.sequence.RNA.frequencies", "skbio.sequence.RNA.gaps", "skbio.sequence.RNA.gc_content", "skbio.sequence.RNA.gc_frequency", "skbio.sequence.RNA.has_definites", "skbio.sequence.RNA.has_degenerates", "skbio.sequence.RNA.has_gaps", "skbio.sequence.RNA.has_interval_metadata", "skbio.sequence.RNA.has_metadata", "skbio.sequence.RNA.has_nondegenerates", "skbio.sequence.RNA.has_positional_metadata", "skbio.sequence.RNA.index", "skbio.sequence.RNA.is_reverse_complement", "skbio.sequence.RNA.iter_contiguous", "skbio.sequence.RNA.iter_kmers", "skbio.sequence.RNA.kmer_frequencies", "skbio.sequence.RNA.lowercase", "skbio.sequence.RNA.match_frequency", "skbio.sequence.RNA.matches", "skbio.sequence.RNA.mismatch_frequency", "skbio.sequence.RNA.mismatches", "skbio.sequence.RNA.nondegenerates", "skbio.sequence.RNA.read", "skbio.sequence.RNA.replace", "skbio.sequence.RNA.reverse_complement", "skbio.sequence.RNA.reverse_transcribe", "skbio.sequence.RNA.to_definites", "skbio.sequence.RNA.to_indices", "skbio.sequence.RNA.to_regex", "skbio.sequence.RNA.translate", "skbio.sequence.RNA.translate_six_frames", "skbio.sequence.RNA.write", "skbio.sequence.Sequence", "skbio.sequence.Sequence.__bool__", "skbio.sequence.Sequence.__contains__", "skbio.sequence.Sequence.__copy__", "skbio.sequence.Sequence.__deepcopy__", "skbio.sequence.Sequence.__eq__", "skbio.sequence.Sequence.__ge__", "skbio.sequence.Sequence.__getitem__", "skbio.sequence.Sequence.__getstate__", "skbio.sequence.Sequence.__gt__", "skbio.sequence.Sequence.__iter__", "skbio.sequence.Sequence.__le__", "skbio.sequence.Sequence.__len__", "skbio.sequence.Sequence.__lt__", "skbio.sequence.Sequence.__ne__", "skbio.sequence.Sequence.__reversed__", "skbio.sequence.Sequence.__str__", "skbio.sequence.Sequence.concat", "skbio.sequence.Sequence.count", "skbio.sequence.Sequence.distance", "skbio.sequence.Sequence.find_with_regex", "skbio.sequence.Sequence.frequencies", "skbio.sequence.Sequence.has_interval_metadata", "skbio.sequence.Sequence.has_metadata", "skbio.sequence.Sequence.has_positional_metadata", "skbio.sequence.Sequence.index", "skbio.sequence.Sequence.iter_contiguous", "skbio.sequence.Sequence.iter_kmers", "skbio.sequence.Sequence.kmer_frequencies", "skbio.sequence.Sequence.lowercase", "skbio.sequence.Sequence.match_frequency", "skbio.sequence.Sequence.matches", "skbio.sequence.Sequence.mismatch_frequency", "skbio.sequence.Sequence.mismatches", "skbio.sequence.Sequence.read", "skbio.sequence.Sequence.replace", "skbio.sequence.Sequence.to_indices", "skbio.sequence.Sequence.write", "skbio.sequence.SubstitutionMatrix", "skbio.sequence.SubstitutionMatrix.__contains__", "skbio.sequence.SubstitutionMatrix.__eq__", "skbio.sequence.SubstitutionMatrix.__ge__", "skbio.sequence.SubstitutionMatrix.__getitem__", "skbio.sequence.SubstitutionMatrix.__getstate__", "skbio.sequence.SubstitutionMatrix.__gt__", "skbio.sequence.SubstitutionMatrix.__le__", "skbio.sequence.SubstitutionMatrix.__lt__", "skbio.sequence.SubstitutionMatrix.__ne__", "skbio.sequence.SubstitutionMatrix.__str__", "skbio.sequence.SubstitutionMatrix.between", "skbio.sequence.SubstitutionMatrix.by_name", "skbio.sequence.SubstitutionMatrix.copy", "skbio.sequence.SubstitutionMatrix.filter", "skbio.sequence.SubstitutionMatrix.from_dict", "skbio.sequence.SubstitutionMatrix.from_iterable", "skbio.sequence.SubstitutionMatrix.get_names", "skbio.sequence.SubstitutionMatrix.identity", "skbio.sequence.SubstitutionMatrix.index", "skbio.sequence.SubstitutionMatrix.plot", "skbio.sequence.SubstitutionMatrix.read", "skbio.sequence.SubstitutionMatrix.redundant_form", "skbio.sequence.SubstitutionMatrix.to_data_frame", "skbio.sequence.SubstitutionMatrix.to_dict", "skbio.sequence.SubstitutionMatrix.transpose", "skbio.sequence.SubstitutionMatrix.within", "skbio.sequence.SubstitutionMatrix.write", "Sequence distance metrics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence.distance</span></code>)", "skbio.sequence.distance.hamming", "skbio.sequence.distance.kmer_distance", "Composition Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.composition</span></code>)", "skbio.stats.composition.alr", "skbio.stats.composition.alr_inv", "skbio.stats.composition.ancom", "skbio.stats.composition.centralize", "skbio.stats.composition.closure", "skbio.stats.composition.clr", "skbio.stats.composition.clr_inv", "skbio.stats.composition.dirmult_ttest", "skbio.stats.composition.ilr", "skbio.stats.composition.ilr_inv", "skbio.stats.composition.inner", "skbio.stats.composition.multi_replace", "skbio.stats.composition.multiplicative_replacement", "skbio.stats.composition.pairwise_vlr", "skbio.stats.composition.perturb", "skbio.stats.composition.perturb_inv", "skbio.stats.composition.power", "skbio.stats.composition.sbp_basis", "skbio.stats.composition.tree_basis", "skbio.stats.composition.vlr", "Distance matrix-based statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.distance</span></code>)", "skbio.stats.distance.DissimilarityMatrix", "skbio.stats.distance.DissimilarityMatrix.__contains__", "skbio.stats.distance.DissimilarityMatrix.__eq__", "skbio.stats.distance.DissimilarityMatrix.__ge__", "skbio.stats.distance.DissimilarityMatrix.__getitem__", "skbio.stats.distance.DissimilarityMatrix.__getstate__", "skbio.stats.distance.DissimilarityMatrix.__gt__", "skbio.stats.distance.DissimilarityMatrix.__le__", "skbio.stats.distance.DissimilarityMatrix.__lt__", "skbio.stats.distance.DissimilarityMatrix.__ne__", "skbio.stats.distance.DissimilarityMatrix.__str__", "skbio.stats.distance.DissimilarityMatrix.between", "skbio.stats.distance.DissimilarityMatrix.copy", "skbio.stats.distance.DissimilarityMatrix.filter", "skbio.stats.distance.DissimilarityMatrix.from_iterable", "skbio.stats.distance.DissimilarityMatrix.index", "skbio.stats.distance.DissimilarityMatrix.plot", "skbio.stats.distance.DissimilarityMatrix.read", "skbio.stats.distance.DissimilarityMatrix.redundant_form", "skbio.stats.distance.DissimilarityMatrix.to_data_frame", "skbio.stats.distance.DissimilarityMatrix.transpose", "skbio.stats.distance.DissimilarityMatrix.within", "skbio.stats.distance.DissimilarityMatrix.write", "skbio.stats.distance.DistanceMatrix", "skbio.stats.distance.DistanceMatrix.__contains__", "skbio.stats.distance.DistanceMatrix.__eq__", "skbio.stats.distance.DistanceMatrix.__ge__", "skbio.stats.distance.DistanceMatrix.__getitem__", "skbio.stats.distance.DistanceMatrix.__getstate__", "skbio.stats.distance.DistanceMatrix.__gt__", "skbio.stats.distance.DistanceMatrix.__le__", "skbio.stats.distance.DistanceMatrix.__lt__", "skbio.stats.distance.DistanceMatrix.__ne__", "skbio.stats.distance.DistanceMatrix.__str__", "skbio.stats.distance.DistanceMatrix.between", "skbio.stats.distance.DistanceMatrix.condensed_form", "skbio.stats.distance.DistanceMatrix.copy", "skbio.stats.distance.DistanceMatrix.filter", "skbio.stats.distance.DistanceMatrix.from_iterable", "skbio.stats.distance.DistanceMatrix.index", "skbio.stats.distance.DistanceMatrix.permute", "skbio.stats.distance.DistanceMatrix.plot", "skbio.stats.distance.DistanceMatrix.read", "skbio.stats.distance.DistanceMatrix.redundant_form", "skbio.stats.distance.DistanceMatrix.to_data_frame", "skbio.stats.distance.DistanceMatrix.to_series", "skbio.stats.distance.DistanceMatrix.transpose", "skbio.stats.distance.DistanceMatrix.within", "skbio.stats.distance.DistanceMatrix.write", "skbio.stats.distance.anosim", "skbio.stats.distance.bioenv", "skbio.stats.distance.mantel", "skbio.stats.distance.permanova", "skbio.stats.distance.permdisp", "skbio.stats.distance.pwmantel", "skbio.stats.distance.randdm", "Evolutionary statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.evolve</span></code>)", "skbio.stats.evolve.hommola_cospeciation", "Gradient analyses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.gradient</span></code>)", "skbio.stats.gradient.AverageGradientANOVA", "skbio.stats.gradient.AverageGradientANOVA.__eq__", "skbio.stats.gradient.AverageGradientANOVA.__ge__", "skbio.stats.gradient.AverageGradientANOVA.__getstate__", "skbio.stats.gradient.AverageGradientANOVA.__gt__", "skbio.stats.gradient.AverageGradientANOVA.__hash__", "skbio.stats.gradient.AverageGradientANOVA.__le__", "skbio.stats.gradient.AverageGradientANOVA.__lt__", "skbio.stats.gradient.AverageGradientANOVA.__ne__", "skbio.stats.gradient.AverageGradientANOVA.__str__", "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "skbio.stats.gradient.CategoryResults", "skbio.stats.gradient.CategoryResults.__eq__", "skbio.stats.gradient.CategoryResults.__ge__", "skbio.stats.gradient.CategoryResults.__getstate__", "skbio.stats.gradient.CategoryResults.__gt__", "skbio.stats.gradient.CategoryResults.__hash__", "skbio.stats.gradient.CategoryResults.__le__", "skbio.stats.gradient.CategoryResults.__lt__", "skbio.stats.gradient.CategoryResults.__ne__", "skbio.stats.gradient.CategoryResults.__str__", "skbio.stats.gradient.CategoryResults.to_files", "skbio.stats.gradient.FirstDifferenceGradientANOVA", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVA", "skbio.stats.gradient.GradientANOVA.__eq__", "skbio.stats.gradient.GradientANOVA.__ge__", "skbio.stats.gradient.GradientANOVA.__getstate__", "skbio.stats.gradient.GradientANOVA.__gt__", "skbio.stats.gradient.GradientANOVA.__hash__", "skbio.stats.gradient.GradientANOVA.__le__", "skbio.stats.gradient.GradientANOVA.__lt__", "skbio.stats.gradient.GradientANOVA.__ne__", "skbio.stats.gradient.GradientANOVA.__str__", "skbio.stats.gradient.GradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVAResults", "skbio.stats.gradient.GradientANOVAResults.__eq__", "skbio.stats.gradient.GradientANOVAResults.__ge__", "skbio.stats.gradient.GradientANOVAResults.__getstate__", "skbio.stats.gradient.GradientANOVAResults.__gt__", "skbio.stats.gradient.GradientANOVAResults.__hash__", "skbio.stats.gradient.GradientANOVAResults.__le__", "skbio.stats.gradient.GradientANOVAResults.__lt__", "skbio.stats.gradient.GradientANOVAResults.__ne__", "skbio.stats.gradient.GradientANOVAResults.__str__", "skbio.stats.gradient.GradientANOVAResults.to_files", "skbio.stats.gradient.GroupResults", "skbio.stats.gradient.GroupResults.__eq__", "skbio.stats.gradient.GroupResults.__ge__", "skbio.stats.gradient.GroupResults.__getstate__", "skbio.stats.gradient.GroupResults.__gt__", "skbio.stats.gradient.GroupResults.__hash__", "skbio.stats.gradient.GroupResults.__le__", "skbio.stats.gradient.GroupResults.__lt__", "skbio.stats.gradient.GroupResults.__ne__", "skbio.stats.gradient.GroupResults.__str__", "skbio.stats.gradient.GroupResults.to_files", "skbio.stats.gradient.TrajectoryGradientANOVA", "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "skbio.stats.gradient.WindowDifferenceGradientANOVA", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "skbio.stats.isubsample", "Ordination methods (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.ordination</span></code>)", "skbio.stats.ordination.OrdinationResults", "skbio.stats.ordination.OrdinationResults.__eq__", "skbio.stats.ordination.OrdinationResults.__ge__", "skbio.stats.ordination.OrdinationResults.__getstate__", "skbio.stats.ordination.OrdinationResults.__gt__", "skbio.stats.ordination.OrdinationResults.__hash__", "skbio.stats.ordination.OrdinationResults.__le__", "skbio.stats.ordination.OrdinationResults.__lt__", "skbio.stats.ordination.OrdinationResults.__ne__", "skbio.stats.ordination.OrdinationResults.__str__", "skbio.stats.ordination.OrdinationResults.plot", "skbio.stats.ordination.OrdinationResults.read", "skbio.stats.ordination.OrdinationResults.write", "skbio.stats.ordination.ca", "skbio.stats.ordination.cca", "skbio.stats.ordination.corr", "skbio.stats.ordination.e_matrix", "skbio.stats.ordination.f_matrix", "skbio.stats.ordination.mean_and_std", "skbio.stats.ordination.pcoa", "skbio.stats.ordination.pcoa_biplot", "skbio.stats.ordination.rda", "skbio.stats.ordination.scale", "skbio.stats.ordination.svd_rank", "Empirical Power Estimation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.power</span></code>)", "skbio.stats.power.confidence_bound", "skbio.stats.power.paired_subsamples", "skbio.stats.power.subsample_paired_power", "skbio.stats.power.subsample_power", "skbio.stats.subsample_counts", "skbio.table.Table", "skbio.table.Table.__eq__", "skbio.table.Table.__ge__", "skbio.table.Table.__getitem__", "skbio.table.Table.__getstate__", "skbio.table.Table.__gt__", "skbio.table.Table.__iter__", "skbio.table.Table.__le__", "skbio.table.Table.__lt__", "skbio.table.Table.__ne__", "skbio.table.Table.__str__", "skbio.table.Table.add_group_metadata", "skbio.table.Table.add_metadata", "skbio.table.Table.align_to", "skbio.table.Table.align_to_dataframe", "skbio.table.Table.align_tree", "skbio.table.Table.collapse", "skbio.table.Table.concat", "skbio.table.Table.copy", "skbio.table.Table.data", "skbio.table.Table.del_metadata", "skbio.table.Table.delimited_self", "skbio.table.Table.descriptive_equality", "skbio.table.Table.exists", "skbio.table.Table.filter", "skbio.table.Table.from_adjacency", "skbio.table.Table.from_hdf5", "skbio.table.Table.from_json", "skbio.table.Table.from_tsv", "skbio.table.Table.get_table_density", "skbio.table.Table.get_value_by_ids", "skbio.table.Table.group_metadata", "skbio.table.Table.head", "skbio.table.Table.ids", "skbio.table.Table.index", "skbio.table.Table.is_empty", "skbio.table.Table.iter", "skbio.table.Table.iter_data", "skbio.table.Table.iter_pairwise", "skbio.table.Table.length", "skbio.table.Table.max", "skbio.table.Table.merge", "skbio.table.Table.metadata", "skbio.table.Table.metadata_to_dataframe", "skbio.table.Table.min", "skbio.table.Table.nonzero", "skbio.table.Table.nonzero_counts", "skbio.table.Table.norm", "skbio.table.Table.pa", "skbio.table.Table.partition", "skbio.table.Table.rankdata", "skbio.table.Table.read", "skbio.table.Table.reduce", "skbio.table.Table.remove_empty", "skbio.table.Table.sort", "skbio.table.Table.sort_order", "skbio.table.Table.subsample", "skbio.table.Table.sum", "skbio.table.Table.to_anndata", "skbio.table.Table.to_dataframe", "skbio.table.Table.to_hdf5", "skbio.table.Table.to_json", "skbio.table.Table.to_tsv", "skbio.table.Table.transform", "skbio.table.Table.transpose", "skbio.table.Table.update_ids", "skbio.table.Table.write", "skbio.table.example_table", "skbio.tree.TreeNode", "skbio.tree.TreeNode.__copy__", "skbio.tree.TreeNode.__deepcopy__", "skbio.tree.TreeNode.__eq__", "skbio.tree.TreeNode.__ge__", "skbio.tree.TreeNode.__getitem__", "skbio.tree.TreeNode.__getstate__", "skbio.tree.TreeNode.__gt__", "skbio.tree.TreeNode.__hash__", "skbio.tree.TreeNode.__iter__", "skbio.tree.TreeNode.__le__", "skbio.tree.TreeNode.__len__", "skbio.tree.TreeNode.__lt__", "skbio.tree.TreeNode.__ne__", "skbio.tree.TreeNode.__str__", "skbio.tree.TreeNode.accumulate_to_ancestor", "skbio.tree.TreeNode.ancestors", "skbio.tree.TreeNode.append", "skbio.tree.TreeNode.ascii_art", "skbio.tree.TreeNode.assign_ids", "skbio.tree.TreeNode.assign_supports", "skbio.tree.TreeNode.bifurcate", "skbio.tree.TreeNode.cache_attr", "skbio.tree.TreeNode.compare_rfd", "skbio.tree.TreeNode.compare_subsets", "skbio.tree.TreeNode.compare_tip_distances", "skbio.tree.TreeNode.copy", "skbio.tree.TreeNode.count", "skbio.tree.TreeNode.create_caches", "skbio.tree.TreeNode.deepcopy", "skbio.tree.TreeNode.descending_branch_length", "skbio.tree.TreeNode.distance", "skbio.tree.TreeNode.extend", "skbio.tree.TreeNode.find", "skbio.tree.TreeNode.find_all", "skbio.tree.TreeNode.find_by_func", "skbio.tree.TreeNode.find_by_id", "skbio.tree.TreeNode.from_linkage_matrix", "skbio.tree.TreeNode.from_taxdump", "skbio.tree.TreeNode.from_taxonomy", "skbio.tree.TreeNode.get_max_distance", "skbio.tree.TreeNode.has_children", "skbio.tree.TreeNode.index_tree", "skbio.tree.TreeNode.invalidate_caches", "skbio.tree.TreeNode.is_root", "skbio.tree.TreeNode.is_tip", "skbio.tree.TreeNode.lca", "skbio.tree.TreeNode.levelorder", "skbio.tree.TreeNode.lowest_common_ancestor", "skbio.tree.TreeNode.neighbors", "skbio.tree.TreeNode.non_tips", "skbio.tree.TreeNode.observed_node_counts", "skbio.tree.TreeNode.pop", "skbio.tree.TreeNode.postorder", "skbio.tree.TreeNode.pre_and_postorder", "skbio.tree.TreeNode.preorder", "skbio.tree.TreeNode.prune", "skbio.tree.TreeNode.read", "skbio.tree.TreeNode.remove", "skbio.tree.TreeNode.remove_deleted", "skbio.tree.TreeNode.root", "skbio.tree.TreeNode.root_at", "skbio.tree.TreeNode.root_at_midpoint", "skbio.tree.TreeNode.shear", "skbio.tree.TreeNode.shuffle", "skbio.tree.TreeNode.siblings", "skbio.tree.TreeNode.subset", "skbio.tree.TreeNode.subsets", "skbio.tree.TreeNode.subtree", "skbio.tree.TreeNode.tip_tip_distances", "skbio.tree.TreeNode.tips", "skbio.tree.TreeNode.to_array", "skbio.tree.TreeNode.to_taxonomy", "skbio.tree.TreeNode.traverse", "skbio.tree.TreeNode.unpack", "skbio.tree.TreeNode.unpack_by_func", "skbio.tree.TreeNode.unrooted_copy", "skbio.tree.TreeNode.unrooted_deepcopy", "skbio.tree.TreeNode.write", "skbio.tree.majority_rule", "skbio.tree.nj", "skbio.util.EfficiencyWarning", "skbio.util.RepresentationWarning", "skbio.util.assert_data_frame_almost_equal", "skbio.util.assert_ordination_results_equal", "skbio.util.cardinal_to_ordinal", "skbio.util.classproperty", "skbio.util.classproperty.__delete__", "skbio.util.classproperty.__eq__", "skbio.util.classproperty.__ge__", "skbio.util.classproperty.__get__", "skbio.util.classproperty.__getstate__", "skbio.util.classproperty.__gt__", "skbio.util.classproperty.__hash__", "skbio.util.classproperty.__le__", "skbio.util.classproperty.__lt__", "skbio.util.classproperty.__ne__", "skbio.util.classproperty.__set__", "skbio.util.classproperty.__set_name__", "skbio.util.classproperty.__str__", "skbio.util.classproperty.deleter", "skbio.util.classproperty.getter", "skbio.util.classproperty.setter", "skbio.util.find_duplicates", "skbio.util.get_data_path", "skbio.util.safe_md5", "skbio.workflow.Workflow", "skbio.workflow.Workflow.__call__", "skbio.workflow.Workflow.__eq__", "skbio.workflow.Workflow.__ge__", "skbio.workflow.Workflow.__getstate__", "skbio.workflow.Workflow.__gt__", "skbio.workflow.Workflow.__hash__", "skbio.workflow.Workflow.__le__", "skbio.workflow.Workflow.__lt__", "skbio.workflow.Workflow.__ne__", "skbio.workflow.Workflow.__str__", "skbio.workflow.Workflow.initialize_state", "skbio.workflow.method", "skbio.workflow.method.__call__", "skbio.workflow.method.__eq__", "skbio.workflow.method.__ge__", "skbio.workflow.method.__getstate__", "skbio.workflow.method.__gt__", "skbio.workflow.method.__hash__", "skbio.workflow.method.__le__", "skbio.workflow.method.__lt__", "skbio.workflow.method.__ne__", "skbio.workflow.method.__str__", "skbio.workflow.requires", "skbio.workflow.requires.__call__", "skbio.workflow.requires.__eq__", "skbio.workflow.requires.__ge__", "skbio.workflow.requires.__getstate__", "skbio.workflow.requires.__gt__", "skbio.workflow.requires.__hash__", "skbio.workflow.requires.__le__", "skbio.workflow.requires.__lt__", "skbio.workflow.requires.__ne__", "skbio.workflow.requires.__str__", "Home", "Input and Output (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io</span></code>)", "Metadata (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.metadata</span></code>)", "Biological Sequences (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence</span></code>)", "Multivariate Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats</span></code>)", "Data Table (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.table</span></code>)", "Trees and Phylogenetics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.tree</span></code>)", "Utilities for Developers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.util</span></code>)", "Workflow construction (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.workflow</span></code>)"], "titleterms": {"0": 1052, "1": 1052, "6": [178, 1052], "7": 179, "__bool__": [66, 341, 412, 463, 516, 575], "__call__": [54, 1019, 1031, 1042], "__contains__": [67, 342, 413, 464, 517, 576, 613, 666, 689], "__copy__": [68, 267, 343, 414, 465, 518, 577, 913], "__deepcopy__": [69, 268, 344, 415, 466, 519, 578, 914], "__delete__": 999, "__eq__": [4, 21, 35, 55, 70, 151, 164, 197, 210, 239, 257, 269, 286, 304, 322, 345, 400, 416, 467, 520, 579, 614, 667, 690, 725, 736, 747, 758, 769, 780, 791, 802, 815, 845, 915, 1000, 1020, 1032, 1043], "__ge__": [5, 22, 36, 56, 71, 152, 165, 198, 211, 240, 258, 270, 287, 305, 323, 346, 401, 417, 468, 521, 580, 615, 668, 691, 726, 737, 748, 759, 770, 781, 792, 803, 816, 846, 916, 1001, 1021, 1033, 1044], "__get__": 1002, "__getitem__": [23, 72, 347, 418, 469, 522, 581, 616, 669, 692, 847, 917], "__getstate__": [6, 24, 37, 57, 73, 153, 166, 199, 212, 241, 259, 271, 288, 306, 324, 348, 402, 419, 470, 523, 582, 617, 670, 693, 727, 738, 749, 760, 771, 782, 793, 804, 817, 848, 918, 1003, 1022, 1034, 1045], "__gt__": [7, 25, 38, 58, 74, 154, 167, 200, 213, 242, 260, 272, 289, 307, 325, 349, 403, 420, 471, 524, 583, 618, 671, 694, 728, 739, 750, 761, 772, 783, 794, 805, 818, 849, 919, 1004, 1023, 1035, 1046], "__hash__": [8, 26, 39, 59, 155, 168, 201, 214, 729, 740, 751, 762, 773, 784, 795, 806, 819, 920, 1005, 1024, 1036, 1047], "__iter__": [75, 350, 421, 472, 525, 584, 850, 921], "__le__": [9, 27, 40, 60, 76, 156, 169, 202, 215, 243, 261, 273, 290, 308, 326, 351, 404, 422, 473, 526, 585, 619, 672, 695, 730, 741, 752, 763, 774, 785, 796, 807, 820, 851, 922, 1006, 1025, 1037, 1048], "__len__": [77, 352, 423, 474, 527, 586, 923], "__lt__": [10, 28, 41, 61, 78, 157, 170, 203, 216, 244, 262, 274, 291, 309, 327, 353, 405, 424, 475, 528, 587, 620, 673, 696, 731, 742, 753, 764, 775, 786, 797, 808, 821, 852, 924, 1007, 1026, 1038, 1049], "__ne__": [11, 29, 42, 62, 79, 158, 171, 204, 217, 245, 263, 275, 292, 310, 328, 354, 406, 425, 476, 529, 588, 621, 674, 697, 732, 743, 754, 765, 776, 787, 798, 809, 822, 853, 925, 1008, 1027, 1039, 1050], "__reversed__": [80, 355, 426, 477, 530, 589], "__set__": 1009, "__set_name__": 1010, "__setstate__": [30, 63], "__str__": [12, 31, 43, 64, 81, 159, 172, 205, 218, 246, 264, 276, 293, 311, 329, 356, 407, 427, 478, 531, 590, 622, 675, 698, 733, 744, 755, 766, 777, 788, 799, 810, 823, 854, 926, 1011, 1028, 1040, 1051], "ac": 107, "accumulate_to_ancestor": 927, "ad": 188, "add": 277, "add_format": 219, "add_group_metadata": 855, "add_metadata": 856, "advanc": 188, "algorithm": 0, "align": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 180, 190, 193], "align_to": 857, "align_to_datafram": 858, "align_tre": 859, "alignmentstructur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "alignpath": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "alpha": [1, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "alpha_divers": 141, "alr": 644, "alr_inv": 645, "analys": 723, "analysi": 813, "ancestor": 928, "ancom": 646, "anosim": 714, "append": [82, 929], "applic": 188, "argument": 195, "ascii_art": 930, "assert_data_frame_almost_equ": 995, "assert_ordination_results_equ": 996, "assign_id": 931, "assign_support": 932, "averagegradientanova": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734], "base": 664, "basic": 188, "befor": [182, 185], "berger_parker_d": 108, "beta": [1, 142, 143, 144], "beta_divers": 145, "between": [623, 676, 699], "bifurc": 933, "binari": 176, "binary_dm": 176, "bio": [195, 1052, 1053], "bioenv": 715, "biolog": [2, 1055], "biom": [177, 1057], "blast": [178, 179], "blast6": 178, "blast7": 179, "block_beta_divers": 146, "brillouin_d": 109, "by_nam": 624, "byte": [160, 173], "ca": 827, "cache_attr": 934, "calcul": 1055, "can": 1053, "canon": 813, "cardinal_to_ordin": 997, "categor": 664, "categoricalmetadatacolumn": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "categoryresult": [735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "caveat": 188, "cca": 828, "central": 647, "chao1": 110, "chao1_ci": 111, "charact": 192, "class": [195, 664, 723, 1060], "classproperti": [998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014], "closur": 648, "clr": 649, "clr_inv": 650, "clustal": 180, "collaps": 860, "column": [178, 179, 192, 1054], "comment": [188, 192], "commun": 1, "compare_rfd": 935, "compare_subset": 936, "compare_tip_dist": 937, "comparison": 664, "complement": [357, 532], "composit": [643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 1056], "concat": [278, 358, 428, 479, 533, 591, 861], "condensed_form": 700, "confidence_bound": 839, "consensu": 83, "conserv": 84, "construct": 1060, "continu": 664, "cophylogenet": 721, "copi": [625, 677, 701, 862, 938], "corr": 829, "correspond": 813, "count": [1, 359, 429, 480, 534, 592, 939], "creat": 195, "create_cach": 940, "create_format": [220, 230], "custom": 1053, "data": [0, 183, 664, 863, 1056, 1057], "decor": 1060, "deepcopi": 941, "definit": [360, 430, 481, 535], "degap": [361, 431, 482, 536], "degener": [362, 432, 483, 537], "del_metadata": 864, "delet": 1012, "delimited_self": 865, "deprec": 0, "descending_branch_length": 942, "descriptive_equ": 866, "dev": 1052, "develop": [1053, 1059], "dirmult_ttest": 651, "dissimilar": 176, "dissimilaritymatrix": [665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "distanc": [363, 433, 484, 538, 593, 640, 641, 642, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 943, 1055, 1056], "distancematrix": [688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713], "divers": [1, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "divis": 194, "dmp": 194, "dna": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "document": 1052, "domin": 112, "doubl": 113, "drop": [265, 279], "drop_missing_valu": [247, 294, 312], "e_matrix": 830, "efficiencywarn": 993, "emb": 181, "embed": [2, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181], "embl": 182, "empir": 838, "empti": 192, "enspi": 114, "estim": 838, "esty_ci": 115, "evolutionari": 721, "evolv": [721, 722], "exampl": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 664, 723, 813, 838, 1057], "example_t": 911, "except": [195, 664, 1053, 1058], "exist": 867, "expand_degener": [364, 434, 485, 539], "explan": 188, "extend": [85, 944], "f_matrix": 831, "faith_pd": 116, "fasta": 183, "fastq": 184, "featur": [182, 185], "fh": 182, "file": [182, 183, 185, 1053], "filter": [626, 678, 702, 868], "filter_column": 330, "filter_id": [248, 295, 313, 331], "find": 945, "find_al": 946, "find_by_func": 947, "find_by_id": 948, "find_dupl": 1015, "find_motif": [365, 435, 486, 540], "find_with_regex": [366, 436, 487, 541, 594], "firstdifferencegradientanova": [746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "fisher_alpha": 117, "footer": 193, "formal": 188, "format": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 1053], "frequenc": [367, 437, 488, 542, 595], "from": 1053, "from_adjac": 869, "from_bit": [13, 44], "from_cigar": 45, "from_coordin": [14, 46], "from_dict": [86, 627], "from_hdf5": 870, "from_indic": [15, 47], "from_iter": [628, 679, 703], "from_json": 871, "from_linkage_matrix": 949, "from_ncbi": 408, "from_path_seq": 87, "from_tabular": [16, 48], "from_taxdump": 950, "from_taxonomi": 951, "from_tsv": 872, "ft": 182, "function": [0, 106, 142, 195, 234, 640, 643, 664, 721, 813, 838, 1059], "g": 193, "gap": [368, 438, 489, 543], "gap_frequ": 88, "gc": 193, "gc_content": [369, 544], "gc_frequenc": [370, 545], "genbank": 185, "gencod": 194, "gener": [182, 183, 191], "geneticcod": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "get_alpha_diversity_metr": 147, "get_beta_diversity_metr": 148, "get_column": 332, "get_data_path": 1016, "get_id": [249, 296, 314, 333], "get_max_dist": 952, "get_miss": [250, 297, 315], "get_nam": 629, "get_read": 221, "get_sniff": 222, "get_table_dens": 873, "get_trajectori": [734, 756, 767, 800, 811], "get_valu": [251, 298, 316], "get_value_by_id": 874, "get_writ": 223, "getter": 1013, "gf": 193, "gff3": 186, "gini_index": 118, "global_pairwise_align": 98, "global_pairwise_align_nucleotid": 99, "global_pairwise_align_protein": 100, "goods_coverag": 119, "gr": 193, "gradient": [723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811], "gradientanova": [757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767], "gradientanovaresult": [768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778], "grammar": 188, "grammaredsequ": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461], "group_metadata": 875, "groupresult": [779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789], "ham": 641, "has_children": 953, "has_definit": [371, 439, 490, 546], "has_degener": [372, 440, 491, 547], "has_gap": [373, 441, 492, 548], "has_interval_metadata": [374, 442, 493, 549, 596], "has_metadata": [89, 375, 443, 494, 550, 597], "has_missing_valu": [252, 299, 317], "has_nondegener": [376, 444, 495, 551], "has_positional_metadata": [90, 377, 445, 496, 552, 598], "has_stop": 497, "head": 876, "header": [182, 183, 190, 193], "heip_": 120, "hommola_cospeci": 722, "i": [195, 234], "id": 877, "ident": 630, "identifi": 192, "ilr": 652, "ilr_inv": 653, "index": [378, 446, 498, 553, 599, 631, 680, 704, 878], "index_tre": 954, "inform": 188, "initialize_st": 1029, "inlin": 188, "inner": 654, "input": [1, 1053], "interv": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 1054], "intervalmetadata": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "introduct": 1, "invalidate_cach": 955, "io": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 1053], "ioregistri": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "is_empti": 879, "is_reverse_compl": [379, 554], "is_root": 956, "is_tip": 957, "is_zero_bas": 32, "isubsampl": 812, "iter": 880, "iter_contigu": [380, 447, 499, 555, 600], "iter_data": 881, "iter_km": [381, 448, 500, 556, 601], "iter_pairwis": 882, "iter_posit": 91, "join": 92, "kempton_taylor_q": 121, "keyword": 195, "kind": 1053, "kmer_dist": 642, "kmer_frequ": [382, 449, 501, 557, 602], "label": [187, 188], "lca": 958, "lead": 192, "length": [188, 883], "level": 182, "levelord": 959, "list_read_format": 224, "list_write_format": 225, "lladser_ci": 122, "lladser_p": 123, "load": 334, "local_pairwise_align": 101, "local_pairwise_align_nucleotid": 102, "local_pairwise_align_protein": 103, "local_pairwise_align_ssw": 104, "locat": 185, "lowercas": [383, 450, 502, 558, 603], "lowest_common_ancestor": 960, "lsmat": 187, "majority_rul": 991, "make_identity_substitution_matrix": 105, "mantel": 716, "margalef": 124, "match": [385, 452, 504, 560, 605], "match_frequ": [384, 451, 503, 559, 604], "matrix": [176, 187, 664, 1056], "max": 884, "mcintosh_": 126, "mcintosh_d": 125, "mean_and_std": 832, "measur": [106, 142], "menhinick": 127, "merg": [280, 335, 885], "metadata": [192, 193, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 886, 1054], "metadata_to_datafram": 887, "metadatacolumn": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "method": [721, 813, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1056], "metric": [1, 640], "michaelis_menten_fit": 128, "min": 888, "miscellan": 1059, "mismatch": [387, 454, 506, 562, 607], "mismatch_frequ": [386, 453, 505, 561, 606], "monkey_patch": 226, "multi_replac": 655, "multidimension": 813, "multipl": [190, 193], "multiplicative_replac": 656, "multivari": 1056, "name": 194, "neighbor": 961, "new": 195, "newick": 188, "nj": 992, "node": [188, 194], "non_tip": 962, "nondegener": [388, 455, 507, 563], "nonzero": 889, "nonzero_count": 890, "norm": 891, "number": 192, "numericmetadatacolumn": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "o": [195, 234], "observed_featur": 129, "observed_node_count": 963, "observed_otu": 130, "onli": 191, "open": 235, "open_fil": [236, 237], "oper": 1058, "optim": 0, "ordin": [189, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 1056], "ordinationresult": [814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "origin": 185, "osd": 131, "other": 1056, "output": 1053, "pa": 892, "pairalignpath": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "paired_subsampl": 840, "pairwise_vlr": 657, "paramet": [178, 180, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194], "partial_beta_divers": 149, "partit": 893, "pcoa": 833, "pcoa_biplot": 834, "permanova": 717, "permdisp": 718, "permut": 705, "perturb": 658, "perturb_inv": 659, "phydiv": 132, "phylip": 190, "phylogenet": 1058, "pielou_": 133, "plot": [632, 681, 706, 824], "pop": 964, "postord": 965, "power": [660, 838, 839, 840, 841, 842], "pre_and_postord": 966, "preorder": 967, "product": 182, "protein": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "proteinembed": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], "proteinvector": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "prune": 968, "pwmantel": 719, "qseq": 191, "qual": 183, "qualiti": 184, "queri": 281, "randdm": 720, "rankdata": 894, "rda": 835, "read": [93, 161, 174, 182, 183, 185, 227, 231, 282, 336, 389, 456, 508, 564, 608, 633, 682, 707, 825, 895, 969, 1053], "reader": [183, 185, 186, 206], "reassign_index": 94, "recommend": 192, "reconstruct": 1058, "reduc": 896, "redundant_form": [634, 683, 708], "refer": [176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 193, 194, 643, 664, 813], "registri": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "remov": 970, "remove_delet": 971, "remove_empti": 897, "replac": [390, 457, 509, 565, 609], "representationwarn": 994, "requir": [192, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "reserv": 195, "result": [189, 813], "reverse_compl": [391, 566], "reverse_transcrib": 567, "rna": [515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573], "robbin": 134, "root": 972, "root_at": 973, "root_at_midpoint": 974, "row": 192, "rule": 188, "safe_md5": 1017, "sampl": 1054, "samplemetadata": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "save": [253, 300, 318, 337], "sbp_basi": 661, "scale": [813, 836], "scikit": [195, 1052, 1053], "score": 184, "section": [180, 182, 185, 190], "sequenc": [0, 183, 190, 193, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 1055], "set_zero_bas": 33, "setter": 1014, "shannon": 135, "shear": 975, "shuffl": 976, "sibl": 977, "simpl": 176, "simpson": 136, "simpson_": 137, "singl": 138, "skbio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060], "slow": 0, "sniff": [228, 232], "sniffer": 207, "sob": 139, "sort": [95, 283, 898], "sort_ord": 899, "specif": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "specifi": 1, "sq": 182, "squar": 187, "stat": [643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1056], "statist": [643, 664, 721, 1056], "stockholm": 193, "stop": 510, "string": 185, "stripedsmithwaterman": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "strong": 140, "structur": [0, 664, 1058], "subsampl": [900, 1056], "subsample_count": 843, "subsample_paired_pow": 841, "subsample_pow": 842, "subset": [978, 979], "substitutionmatrix": [612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639], "subtre": 980, "sum": 901, "support": [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 1053], "svd_rank": 837, "symbol": 188, "tabl": [844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 1057], "tabularmsa": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 183], "taxdump": 194, "test": 1059, "tip": 982, "tip_tip_dist": 981, "to_anndata": 902, "to_arrai": 983, "to_bit": [17, 49], "to_cigar": 50, "to_coordin": [18, 51], "to_data_fram": [635, 684, 709], "to_datafram": [254, 301, 319, 338, 903], "to_definit": [392, 458, 511, 568], "to_dict": [96, 636], "to_fil": [745, 778, 789], "to_hdf5": 904, "to_indic": [19, 52, 393, 459, 512, 569, 610], "to_json": 905, "to_regex": [394, 460, 513, 570], "to_seri": [255, 302, 320, 710], "to_taxonomi": 984, "to_tsv": 906, "trail": 192, "trajectorygradientanova": [790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "transcrib": 395, "transform": 907, "translat": [396, 409, 571], "translate_six_fram": [397, 410, 572], "transpos": [637, 685, 711, 908], "travers": 985, "tree": [912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1058], "tree_basi": 662, "treenod": [912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990], "tutori": [0, 1, 1053, 1055, 1058, 1060], "type": [2, 178, 179, 192, 1055], "unpack": 986, "unpack_by_func": 987, "unrooted_copi": 988, "unrooted_deepcopi": 989, "unweighted_unifrac": 143, "update_id": 909, "us": [0, 182, 1053], "util": [234, 235, 236, 237, 813, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1055, 1058, 1059], "valid": [1, 192], "variabl": 664, "variant": 184, "vector": 1, "vlr": 663, "warn": [1053, 1059], "weighted_unifrac": 144, "what": 1053, "whitespac": [188, 192], "windowdifferencegradientanova": [801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811], "within": [638, 686, 712], "workflow": [1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1060], "write": [97, 162, 175, 183, 185, 229, 233, 284, 339, 398, 461, 514, 573, 611, 639, 687, 713, 826, 910, 990, 1053], "writer": [183, 186, 208]}})