Search.setIndex({"alltitles": {"Adding Node Information": [[123, "adding-node-information"]], "Advanced Label and Length Rules": [[123, "advanced-label-and-length-rules"]], "Alignment Section": [[116, "alignment-section"], [125, "alignment-section"]], "Alignment algorithms": [[0, "alignment-algorithms"]], "Alignment data structure": [[0, "alignment-data-structure"]], "Alignment structure": [[0, "alignment-structure"]], "Alpha diversity": [[1, "alpha-diversity"]], "Alpha diversity measures (skbio.diversity.alpha)": [[68, "alpha-diversity-measures-skbio-diversity-alpha"]], "Application of Rules": [[123, "application-of-rules"]], "BIOM table": [[992, "biom-table"]], "BIOM-Format (skbio.io.format.biom)": [[113, "biom-format-skbio-io-format-biom"]], "BLAST Column Types": [[114, "blast-column-types"], [115, "blast-column-types"]], "BLAST+6 format (skbio.io.format.blast6)": [[114, "blast-6-format-skbio-io-format-blast6"]], "BLAST+7 format (skbio.io.format.blast7)": [[115, "blast-7-format-skbio-io-format-blast7"]], "Basic Symbols": [[123, "basic-symbols"]], "Beta diversity": [[1, "beta-diversity"]], "Beta diversity measures (skbio.diversity.beta)": [[104, "beta-diversity-measures-skbio-diversity-beta"]], "Biological Sequences (skbio.sequence)": [[990, "biological-sequences-skbio-sequence"]], "Canonical analysis": [[748, "canonical-analysis"]], "Categorical Variable Stats": [[599, "categorical-variable-stats"]], "Caveats": [[123, "caveats"]], "Classes": [[130, "classes"], [599, "classes"], [658, "classes"], [995, "classes"]], "Clustal format (skbio.io.format.clustal)": [[116, "clustal-format-skbio-io-format-clustal"]], "Column Types": [[127, "column-types"]], "Comments and Empty Rows": [[127, "comments-and-empty-rows"]], "Community Diversity (skbio.diversity)": [[1, "community-diversity-skbio-diversity"]], "Composition Statistics (skbio.stats.composition)": [[578, "composition-statistics-skbio-stats-composition"]], "Composition statistics": [[991, "composition-statistics"]], "Continuous Variable Stats": [[599, "continuous-variable-stats"]], "Cophylogenetic methods": [[656, "cophylogenetic-methods"]], "Correspondence analysis": [[748, "correspondence-analysis"]], "Count vectors": [[1, "count-vectors"]], "Creating a new format for scikit-bio": [[130, "creating-a-new-format-for-scikit-bio"]], "Data Table (skbio.table)": [[992, "data-table-skbio-table"]], "Data structures": [[599, "data-structures"]], "Data subsampling": [[991, "data-subsampling"]], "Decorators": [[995, "decorators"]], "Deprecated functionality": [[0, "deprecated-functionality"]], "Develop custom formats": [[988, "develop-custom-formats"]], "Developer warnings": [[994, "developer-warnings"]], "Distance Matrix Comparisons": [[599, "distance-matrix-comparisons"]], "Distance calculation": [[990, "distance-calculation"]], "Distance matrix statistics": [[991, "distance-matrix-statistics"]], "Distance matrix-based statistics (skbio.stats.distance)": [[599, "distance-matrix-based-statistics-skbio-stats-distance"]], "Distance-based statistics": [[599, "distance-based-statistics"]], "EMBL format (skbio.io.format.embl)": [[117, "embl-format-skbio-io-format-embl"]], "Empirical Power Estimation (skbio.stats.power)": [[773, "empirical-power-estimation-skbio-stats-power"]], "Evolutionary statistics (skbio.stats.evolve)": [[656, "evolutionary-statistics-skbio-stats-evolve"]], "Example data": [[992, "example-data"]], "Examples": [[113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [128, "examples"], [129, "examples"], [599, "examples"], [658, "examples"], [748, "examples"], [773, "examples"]], "Exceptions": [[130, "exceptions"], [599, "exceptions"], [993, "exceptions"]], "Exceptions and warnings": [[988, "exceptions-and-warnings"]], "Explanation": [[123, "explanation"]], "FASTA Format": [[118, "fasta-format"]], "FASTA/QUAL format (skbio.io.format.fasta)": [[118, "fasta-qual-format-skbio-io-format-fasta"]], "FASTQ format (skbio.io.format.fastq)": [[119, "fastq-format-skbio-io-format-fastq"]], "FEATURES section": [[120, "features-section"]], "FT section": [[117, "ft-section"]], "Feature Level Products": [[117, "feature-level-products"]], "Footer": [[128, "footer"]], "Formal Grammar": [[123, "formal-grammar"]], "Format Parameters": [[114, "format-parameters"], [116, "format-parameters"], [118, "format-parameters"], [119, "format-parameters"], [120, "format-parameters"], [121, "format-parameters"], [122, "format-parameters"], [123, "format-parameters"], [125, "format-parameters"], [126, "format-parameters"], [128, "format-parameters"], [129, "format-parameters"]], "Format Specification": [[112, "format-specification"], [113, "format-specification"], [114, "format-specification"], [115, "format-specification"], [116, "format-specification"], [117, "format-specification"], [118, "format-specification"], [119, "format-specification"], [120, "format-specification"], [121, "format-specification"], [122, "format-specification"], [123, "format-specification"], [124, "format-specification"], [125, "format-specification"], [126, "format-specification"], [127, "format-specification"], [128, "format-specification"], [129, "format-specification"]], "Format Support": [[112, "format-support"], [113, "format-support"], [114, "format-support"], [115, "format-support"], [116, "format-support"], [117, "format-support"], [118, "format-support"], [119, "format-support"], [120, "format-support"], [121, "format-support"], [122, "format-support"], [123, "format-support"], [124, "format-support"], [125, "format-support"], [126, "format-support"], [127, "format-support"], [128, "format-support"], [129, "format-support"]], "Functions": [[68, "functions"], [104, "functions"], [130, "functions"], [169, "functions"], [575, "functions"], [578, "functions"], [599, "functions"], [656, "functions"], [773, "functions"]], "GC metadata": [[128, "gc-metadata"]], "GF metadata": [[128, "gf-metadata"]], "GFF3 format (skbio.io.format.gff3)": [[121, "gff3-format-skbio-io-format-gff3"]], "GR metadata": [[128, "gr-metadata"]], "GS metadata": [[128, "gs-metadata"]], "GenBank format (skbio.io.format.genbank)": [[120, "genbank-format-skbio-io-format-genbank"]], "Generator and TabularMSA Reader Parameters": [[118, "generator-and-tabularmsa-reader-parameters"]], "Generators Only": [[126, "generators-only"]], "Gradient analyses (skbio.stats.gradient)": [[658, "gradient-analyses-skbio-stats-gradient"]], "Header": [[128, "header"]], "Header Section": [[125, "header-section"]], "I/O Registry (skbio.io.registry)": [[130, "i-o-registry-skbio-io-registry"]], "I/O utilities (skbio.io.util)": [[169, "i-o-utilities-skbio-io-util"]], "Identifier Column": [[127, "identifier-column"]], "Inline Comments": [[123, "inline-comments"]], "Input and Output (skbio.io)": [[988, "input-and-output-skbio-io"]], "Input validation": [[1, "input-validation"]], "Interval metadata": [[989, "interval-metadata"]], "Introduction": [[1, "introduction"]], "Labeled square matrix format (skbio.io.format.lsmat)": [[122, "labeled-square-matrix-format-skbio-io-format-lsmat"]], "Leading and trailing whitespace characters": [[127, "leading-and-trailing-whitespace-characters"]], "Location string": [[120, "location-string"]], "Metadata": [[128, "metadata"]], "Metadata (skbio.metadata)": [[989, "metadata-skbio-metadata"]], "Metadata Columns": [[127, "metadata-columns"]], "Metadata Formatting Requirements": [[127, "metadata-formatting-requirements"]], "Metadata Validation": [[127, "metadata-validation"]], "Metadata columns": [[989, "metadata-columns"]], "Miscellaneous functionality": [[994, "miscellaneous-functionality"]], "Multidimensional scaling": [[748, "multidimensional-scaling"]], "Multiple Sequence Alignment": [[128, "multiple-sequence-alignment"]], "Multivariate Statistics (skbio.stats)": [[991, "multivariate-statistics-skbio-stats"]], "Newick format (skbio.io.format.newick)": [[123, "newick-format-skbio-io-format-newick"]], "Number Formatting": [[127, "number-formatting"]], "ORIGIN section": [[120, "origin-section"]], "Ordination methods": [[991, "ordination-methods"]], "Ordination methods (skbio.stats.ordination)": [[748, "ordination-methods-skbio-stats-ordination"]], "Ordination results": [[748, "ordination-results"]], "Ordination results format (skbio.io.format.ordination)": [[124, "ordination-results-format-skbio-io-format-ordination"]], "Other statistical methods": [[991, "other-statistical-methods"]], "PHYLIP multiple sequence alignment format (skbio.io.format.phylip)": [[125, "phylip-multiple-sequence-alignment-format-skbio-io-format-phylip"]], "Phylogenetic reconstruction": [[993, "phylogenetic-reconstruction"]], "QSeq format (skbio.io.format.qseq)": [[126, "qseq-format-skbio-io-format-qseq"]], "QUAL File Parameter (Readers and Writers)": [[118, "qual-file-parameter-readers-and-writers"]], "QUAL Format": [[118, "qual-format"]], "Quality Score Variants": [[119, "quality-score-variants"]], "Read/write files": [[988, "read-write-files"]], "Reader-specific Parameters": [[118, "reader-specific-parameters"], [120, "reader-specific-parameters"], [121, "reader-specific-parameters"]], "Reading EMBL Files": [[117, "reading-embl-files"]], "Reading EMBL Files using generators": [[117, "reading-embl-files-using-generators"]], "Reading and Writing FASTA Files": [[118, "reading-and-writing-fasta-files"]], "Reading and Writing FASTA/QUAL Files": [[118, "reading-and-writing-fasta-qual-files"]], "Reading and Writing GenBank Files": [[120, "reading-and-writing-genbank-files"]], "Reading files into scikit-bio": [[988, "reading-files-into-scikit-bio"]], "Recommendations for Identifiers": [[127, "recommendations-for-identifiers"]], "References": [[112, "references"], [113, "references"], [114, "references"], [115, "references"], [116, "references"], [117, "references"], [118, "references"], [119, "references"], [120, "references"], [121, "references"], [123, "references"], [125, "references"], [126, "references"], [128, "references"], [129, "references"], [578, "references"], [599, "references"], [748, "references"]], "Reserved Keyword Arguments": [[130, "reserved-keyword-arguments"]], "SQ section": [[117, "sq-section"]], "Sample metadata": [[989, "sample-metadata"]], "Sections before FEATURES": [[120, "sections-before-features"]], "Sections before FH (Feature Header)": [[117, "sections-before-fh-feature-header"]], "Sequence Alignments (skbio.alignment)": [[0, "sequence-alignments-skbio-alignment"]], "Sequence Data": [[118, "sequence-data"]], "Sequence Header": [[118, "sequence-header"]], "Sequence Reader Parameters": [[118, "sequence-reader-parameters"]], "Sequence distance metrics (skbio.sequence.distance)": [[575, "sequence-distance-metrics-skbio-sequence-distance"]], "Sequence types": [[990, "sequence-types"]], "Sequence utilities": [[990, "sequence-utilities"]], "Simple binary dissimilarity matrix format (skbio.io.format.binary_dm)": [[112, "simple-binary-dissimilarity-matrix-format-skbio-io-format-binary-dm"]], "Specifying a diversity metric": [[1, "specifying-a-diversity-metric"]], "Stockholm format (skbio.io.format.stockholm)": [[128, "stockholm-format-skbio-io-format-stockholm"]], "Supported file formats": [[988, "supported-file-formats"]], "Taxdump format (skbio.io.format.taxdump)": [[129, "taxdump-format-skbio-io-format-taxdump"]], "Testing functionality": [[994, "testing-functionality"]], "Tree structure and operations": [[993, "tree-structure-and-operations"]], "Tree utilities": [[993, "tree-utilities"]], "Trees and Phylogenetics (skbio.tree)": [[993, "trees-and-phylogenetics-skbio-tree"]], "Tutorial": [[0, "tutorial"], [1, "tutorial"], [988, "tutorial"], [990, "tutorial"], [993, "tutorial"], [995, "tutorial"]], "Using the optimized alignment algorithm": [[0, "using-the-optimized-alignment-algorithm"]], "Using the slow alignment algorithm": [[0, "using-the-slow-alignment-algorithm"]], "Utilities for Developers (skbio.util)": [[994, "utilities-for-developers-skbio-util"]], "Utility functions": [[748, "utility-functions"]], "What kinds of files scikit-bio can use": [[988, "what-kinds-of-files-scikit-bio-can-use"]], "Whitespace": [[123, "whitespace"]], "Workflow construction (skbio.workflow)": [[995, "workflow-construction-skbio-workflow"]], "Writer-specific Parameters": [[118, "writer-specific-parameters"], [121, "writer-specific-parameters"]], "Writing files from scikit-bio": [[988, "writing-files-from-scikit-bio"]], "division.dmp": [[129, "division-dmp"]], "gencode.dmp": [[129, "gencode-dmp"]], "names.dmp": [[129, "names-dmp"]], "nodes.dmp": [[129, "nodes-dmp"]], "scikit-bio 0.6.1-dev documentation": [[987, "scikit-bio-version-documentation"]], "skbio.alignment.AlignmentStructure": [[2, "skbio-alignment-alignmentstructure"]], "skbio.alignment.AlignmentStructure.__eq__": [[3, "skbio-alignment-alignmentstructure-eq"]], "skbio.alignment.AlignmentStructure.__ge__": [[4, "skbio-alignment-alignmentstructure-ge"]], "skbio.alignment.AlignmentStructure.__getitem__": [[5, "skbio-alignment-alignmentstructure-getitem"]], "skbio.alignment.AlignmentStructure.__getstate__": [[6, "skbio-alignment-alignmentstructure-getstate"]], "skbio.alignment.AlignmentStructure.__gt__": [[7, "skbio-alignment-alignmentstructure-gt"]], "skbio.alignment.AlignmentStructure.__hash__": [[8, "skbio-alignment-alignmentstructure-hash"]], "skbio.alignment.AlignmentStructure.__le__": [[9, "skbio-alignment-alignmentstructure-le"]], "skbio.alignment.AlignmentStructure.__lt__": [[10, "skbio-alignment-alignmentstructure-lt"]], "skbio.alignment.AlignmentStructure.__ne__": [[11, "skbio-alignment-alignmentstructure-ne"]], "skbio.alignment.AlignmentStructure.__setstate__": [[12, "skbio-alignment-alignmentstructure-setstate"]], "skbio.alignment.AlignmentStructure.__str__": [[13, "skbio-alignment-alignmentstructure-str"]], "skbio.alignment.AlignmentStructure.is_zero_based": [[14, "skbio-alignment-alignmentstructure-is-zero-based"]], "skbio.alignment.AlignmentStructure.set_zero_based": [[15, "skbio-alignment-alignmentstructure-set-zero-based"]], "skbio.alignment.StripedSmithWaterman": [[16, "skbio-alignment-stripedsmithwaterman"]], "skbio.alignment.StripedSmithWaterman.__call__": [[17, "skbio-alignment-stripedsmithwaterman-call"]], "skbio.alignment.StripedSmithWaterman.__eq__": [[18, "skbio-alignment-stripedsmithwaterman-eq"]], "skbio.alignment.StripedSmithWaterman.__ge__": [[19, "skbio-alignment-stripedsmithwaterman-ge"]], "skbio.alignment.StripedSmithWaterman.__getstate__": [[20, "skbio-alignment-stripedsmithwaterman-getstate"]], "skbio.alignment.StripedSmithWaterman.__gt__": [[21, "skbio-alignment-stripedsmithwaterman-gt"]], "skbio.alignment.StripedSmithWaterman.__hash__": [[22, "skbio-alignment-stripedsmithwaterman-hash"]], "skbio.alignment.StripedSmithWaterman.__le__": [[23, "skbio-alignment-stripedsmithwaterman-le"]], "skbio.alignment.StripedSmithWaterman.__lt__": [[24, "skbio-alignment-stripedsmithwaterman-lt"]], "skbio.alignment.StripedSmithWaterman.__ne__": [[25, "skbio-alignment-stripedsmithwaterman-ne"]], "skbio.alignment.StripedSmithWaterman.__setstate__": [[26, "skbio-alignment-stripedsmithwaterman-setstate"]], "skbio.alignment.StripedSmithWaterman.__str__": [[27, "skbio-alignment-stripedsmithwaterman-str"]], "skbio.alignment.TabularMSA": [[28, "skbio-alignment-tabularmsa"]], "skbio.alignment.TabularMSA.__bool__": [[29, "skbio-alignment-tabularmsa-bool"]], "skbio.alignment.TabularMSA.__contains__": [[30, "skbio-alignment-tabularmsa-contains"]], "skbio.alignment.TabularMSA.__copy__": [[31, "skbio-alignment-tabularmsa-copy"]], "skbio.alignment.TabularMSA.__deepcopy__": [[32, "skbio-alignment-tabularmsa-deepcopy"]], "skbio.alignment.TabularMSA.__eq__": [[33, "skbio-alignment-tabularmsa-eq"]], "skbio.alignment.TabularMSA.__ge__": [[34, "skbio-alignment-tabularmsa-ge"]], "skbio.alignment.TabularMSA.__getitem__": [[35, "skbio-alignment-tabularmsa-getitem"]], "skbio.alignment.TabularMSA.__getstate__": [[36, "skbio-alignment-tabularmsa-getstate"]], "skbio.alignment.TabularMSA.__gt__": [[37, "skbio-alignment-tabularmsa-gt"]], "skbio.alignment.TabularMSA.__iter__": [[38, "skbio-alignment-tabularmsa-iter"]], "skbio.alignment.TabularMSA.__le__": [[39, "skbio-alignment-tabularmsa-le"]], "skbio.alignment.TabularMSA.__len__": [[40, "skbio-alignment-tabularmsa-len"]], "skbio.alignment.TabularMSA.__lt__": [[41, "skbio-alignment-tabularmsa-lt"]], "skbio.alignment.TabularMSA.__ne__": [[42, "skbio-alignment-tabularmsa-ne"]], "skbio.alignment.TabularMSA.__reversed__": [[43, "skbio-alignment-tabularmsa-reversed"]], "skbio.alignment.TabularMSA.__str__": [[44, "skbio-alignment-tabularmsa-str"]], "skbio.alignment.TabularMSA.append": [[45, "skbio-alignment-tabularmsa-append"]], "skbio.alignment.TabularMSA.consensus": [[46, "skbio-alignment-tabularmsa-consensus"]], "skbio.alignment.TabularMSA.conservation": [[47, "skbio-alignment-tabularmsa-conservation"]], "skbio.alignment.TabularMSA.extend": [[48, "skbio-alignment-tabularmsa-extend"]], "skbio.alignment.TabularMSA.from_dict": [[49, "skbio-alignment-tabularmsa-from-dict"]], "skbio.alignment.TabularMSA.gap_frequencies": [[50, "skbio-alignment-tabularmsa-gap-frequencies"]], "skbio.alignment.TabularMSA.has_metadata": [[51, "skbio-alignment-tabularmsa-has-metadata"]], "skbio.alignment.TabularMSA.has_positional_metadata": [[52, "skbio-alignment-tabularmsa-has-positional-metadata"]], "skbio.alignment.TabularMSA.iter_positions": [[53, "skbio-alignment-tabularmsa-iter-positions"]], "skbio.alignment.TabularMSA.join": [[54, "skbio-alignment-tabularmsa-join"]], "skbio.alignment.TabularMSA.read": [[55, "skbio-alignment-tabularmsa-read"]], "skbio.alignment.TabularMSA.reassign_index": [[56, "skbio-alignment-tabularmsa-reassign-index"]], "skbio.alignment.TabularMSA.sort": [[57, "skbio-alignment-tabularmsa-sort"]], "skbio.alignment.TabularMSA.to_dict": [[58, "skbio-alignment-tabularmsa-to-dict"]], "skbio.alignment.TabularMSA.write": [[59, "skbio-alignment-tabularmsa-write"]], "skbio.alignment.global_pairwise_align": [[60, "skbio-alignment-global-pairwise-align"]], "skbio.alignment.global_pairwise_align_nucleotide": [[61, "skbio-alignment-global-pairwise-align-nucleotide"]], "skbio.alignment.global_pairwise_align_protein": [[62, "skbio-alignment-global-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align": [[63, "skbio-alignment-local-pairwise-align"]], "skbio.alignment.local_pairwise_align_nucleotide": [[64, "skbio-alignment-local-pairwise-align-nucleotide"]], "skbio.alignment.local_pairwise_align_protein": [[65, "skbio-alignment-local-pairwise-align-protein"]], "skbio.alignment.local_pairwise_align_ssw": [[66, "skbio-alignment-local-pairwise-align-ssw"]], "skbio.alignment.make_identity_substitution_matrix": [[67, "skbio-alignment-make-identity-substitution-matrix"]], "skbio.diversity.alpha.ace": [[69, "skbio-diversity-alpha-ace"]], "skbio.diversity.alpha.berger_parker_d": [[70, "skbio-diversity-alpha-berger-parker-d"]], "skbio.diversity.alpha.brillouin_d": [[71, "skbio-diversity-alpha-brillouin-d"]], "skbio.diversity.alpha.chao1": [[72, "skbio-diversity-alpha-chao1"]], "skbio.diversity.alpha.chao1_ci": [[73, "skbio-diversity-alpha-chao1-ci"]], "skbio.diversity.alpha.dominance": [[74, "skbio-diversity-alpha-dominance"]], "skbio.diversity.alpha.doubles": [[75, "skbio-diversity-alpha-doubles"]], "skbio.diversity.alpha.enspie": [[76, "skbio-diversity-alpha-enspie"]], "skbio.diversity.alpha.esty_ci": [[77, "skbio-diversity-alpha-esty-ci"]], "skbio.diversity.alpha.faith_pd": [[78, "skbio-diversity-alpha-faith-pd"]], "skbio.diversity.alpha.fisher_alpha": [[79, "skbio-diversity-alpha-fisher-alpha"]], "skbio.diversity.alpha.gini_index": [[80, "skbio-diversity-alpha-gini-index"]], "skbio.diversity.alpha.goods_coverage": [[81, "skbio-diversity-alpha-goods-coverage"]], "skbio.diversity.alpha.heip_e": [[82, "skbio-diversity-alpha-heip-e"]], "skbio.diversity.alpha.kempton_taylor_q": [[83, "skbio-diversity-alpha-kempton-taylor-q"]], "skbio.diversity.alpha.lladser_ci": [[84, "skbio-diversity-alpha-lladser-ci"]], "skbio.diversity.alpha.lladser_pe": [[85, "skbio-diversity-alpha-lladser-pe"]], "skbio.diversity.alpha.margalef": [[86, "skbio-diversity-alpha-margalef"]], "skbio.diversity.alpha.mcintosh_d": [[87, "skbio-diversity-alpha-mcintosh-d"]], "skbio.diversity.alpha.mcintosh_e": [[88, "skbio-diversity-alpha-mcintosh-e"]], "skbio.diversity.alpha.menhinick": [[89, "skbio-diversity-alpha-menhinick"]], "skbio.diversity.alpha.michaelis_menten_fit": [[90, "skbio-diversity-alpha-michaelis-menten-fit"]], "skbio.diversity.alpha.observed_features": [[91, "skbio-diversity-alpha-observed-features"]], "skbio.diversity.alpha.observed_otus": [[92, "skbio-diversity-alpha-observed-otus"]], "skbio.diversity.alpha.osd": [[93, "skbio-diversity-alpha-osd"]], "skbio.diversity.alpha.phydiv": [[94, "skbio-diversity-alpha-phydiv"]], "skbio.diversity.alpha.pielou_e": [[95, "skbio-diversity-alpha-pielou-e"]], "skbio.diversity.alpha.robbins": [[96, "skbio-diversity-alpha-robbins"]], "skbio.diversity.alpha.shannon": [[97, "skbio-diversity-alpha-shannon"]], "skbio.diversity.alpha.simpson": [[98, "skbio-diversity-alpha-simpson"]], "skbio.diversity.alpha.simpson_e": [[99, "skbio-diversity-alpha-simpson-e"]], "skbio.diversity.alpha.singles": [[100, "skbio-diversity-alpha-singles"]], "skbio.diversity.alpha.sobs": [[101, "skbio-diversity-alpha-sobs"]], "skbio.diversity.alpha.strong": [[102, "skbio-diversity-alpha-strong"]], "skbio.diversity.alpha_diversity": [[103, "skbio-diversity-alpha-diversity"]], "skbio.diversity.beta.unweighted_unifrac": [[105, "skbio-diversity-beta-unweighted-unifrac"]], "skbio.diversity.beta.weighted_unifrac": [[106, "skbio-diversity-beta-weighted-unifrac"]], "skbio.diversity.beta_diversity": [[107, "skbio-diversity-beta-diversity"]], "skbio.diversity.block_beta_diversity": [[108, "skbio-diversity-block-beta-diversity"]], "skbio.diversity.get_alpha_diversity_metrics": [[109, "skbio-diversity-get-alpha-diversity-metrics"]], "skbio.diversity.get_beta_diversity_metrics": [[110, "skbio-diversity-get-beta-diversity-metrics"]], "skbio.diversity.partial_beta_diversity": [[111, "skbio-diversity-partial-beta-diversity"]], "skbio.io.registry.Format": [[131, "skbio-io-registry-format"]], "skbio.io.registry.Format.__eq__": [[132, "skbio-io-registry-format-eq"]], "skbio.io.registry.Format.__ge__": [[133, "skbio-io-registry-format-ge"]], "skbio.io.registry.Format.__getstate__": [[134, "skbio-io-registry-format-getstate"]], "skbio.io.registry.Format.__gt__": [[135, "skbio-io-registry-format-gt"]], "skbio.io.registry.Format.__hash__": [[136, "skbio-io-registry-format-hash"]], "skbio.io.registry.Format.__le__": [[137, "skbio-io-registry-format-le"]], "skbio.io.registry.Format.__lt__": [[138, "skbio-io-registry-format-lt"]], "skbio.io.registry.Format.__ne__": [[139, "skbio-io-registry-format-ne"]], "skbio.io.registry.Format.__str__": [[140, "skbio-io-registry-format-str"]], "skbio.io.registry.Format.reader": [[141, "skbio-io-registry-format-reader"]], "skbio.io.registry.Format.sniffer": [[142, "skbio-io-registry-format-sniffer"]], "skbio.io.registry.Format.writer": [[143, "skbio-io-registry-format-writer"]], "skbio.io.registry.IORegistry": [[144, "skbio-io-registry-ioregistry"]], "skbio.io.registry.IORegistry.__eq__": [[145, "skbio-io-registry-ioregistry-eq"]], "skbio.io.registry.IORegistry.__ge__": [[146, "skbio-io-registry-ioregistry-ge"]], "skbio.io.registry.IORegistry.__getstate__": [[147, "skbio-io-registry-ioregistry-getstate"]], "skbio.io.registry.IORegistry.__gt__": [[148, "skbio-io-registry-ioregistry-gt"]], "skbio.io.registry.IORegistry.__hash__": [[149, "skbio-io-registry-ioregistry-hash"]], "skbio.io.registry.IORegistry.__le__": [[150, "skbio-io-registry-ioregistry-le"]], "skbio.io.registry.IORegistry.__lt__": [[151, "skbio-io-registry-ioregistry-lt"]], "skbio.io.registry.IORegistry.__ne__": [[152, "skbio-io-registry-ioregistry-ne"]], "skbio.io.registry.IORegistry.__str__": [[153, "skbio-io-registry-ioregistry-str"]], "skbio.io.registry.IORegistry.add_format": [[154, "skbio-io-registry-ioregistry-add-format"]], "skbio.io.registry.IORegistry.create_format": [[155, "skbio-io-registry-ioregistry-create-format"]], "skbio.io.registry.IORegistry.get_reader": [[156, "skbio-io-registry-ioregistry-get-reader"]], "skbio.io.registry.IORegistry.get_sniffer": [[157, "skbio-io-registry-ioregistry-get-sniffer"]], "skbio.io.registry.IORegistry.get_writer": [[158, "skbio-io-registry-ioregistry-get-writer"]], "skbio.io.registry.IORegistry.list_read_formats": [[159, "skbio-io-registry-ioregistry-list-read-formats"]], "skbio.io.registry.IORegistry.list_write_formats": [[160, "skbio-io-registry-ioregistry-list-write-formats"]], "skbio.io.registry.IORegistry.monkey_patch": [[161, "skbio-io-registry-ioregistry-monkey-patch"]], "skbio.io.registry.IORegistry.read": [[162, "skbio-io-registry-ioregistry-read"]], "skbio.io.registry.IORegistry.sniff": [[163, "skbio-io-registry-ioregistry-sniff"]], "skbio.io.registry.IORegistry.write": [[164, "skbio-io-registry-ioregistry-write"]], "skbio.io.registry.create_format": [[165, "skbio-io-registry-create-format"]], "skbio.io.registry.read": [[166, "skbio-io-registry-read"]], "skbio.io.registry.sniff": [[167, "skbio-io-registry-sniff"]], "skbio.io.registry.write": [[168, "skbio-io-registry-write"]], "skbio.io.util.open": [[170, "skbio-io-util-open"]], "skbio.io.util.open_file": [[171, "skbio-io-util-open-file"]], "skbio.io.util.open_files": [[172, "skbio-io-util-open-files"]], "skbio.metadata.CategoricalMetadataColumn": [[173, "skbio-metadata-categoricalmetadatacolumn"]], "skbio.metadata.CategoricalMetadataColumn.__eq__": [[174, "skbio-metadata-categoricalmetadatacolumn-eq"]], "skbio.metadata.CategoricalMetadataColumn.__ge__": [[175, "skbio-metadata-categoricalmetadatacolumn-ge"]], "skbio.metadata.CategoricalMetadataColumn.__getstate__": [[176, "skbio-metadata-categoricalmetadatacolumn-getstate"]], "skbio.metadata.CategoricalMetadataColumn.__gt__": [[177, "skbio-metadata-categoricalmetadatacolumn-gt"]], "skbio.metadata.CategoricalMetadataColumn.__le__": [[178, "skbio-metadata-categoricalmetadatacolumn-le"]], "skbio.metadata.CategoricalMetadataColumn.__lt__": [[179, "skbio-metadata-categoricalmetadatacolumn-lt"]], "skbio.metadata.CategoricalMetadataColumn.__ne__": [[180, "skbio-metadata-categoricalmetadatacolumn-ne"]], "skbio.metadata.CategoricalMetadataColumn.__str__": [[181, "skbio-metadata-categoricalmetadatacolumn-str"]], "skbio.metadata.CategoricalMetadataColumn.drop_missing_values": [[182, "skbio-metadata-categoricalmetadatacolumn-drop-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.filter_ids": [[183, "skbio-metadata-categoricalmetadatacolumn-filter-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_ids": [[184, "skbio-metadata-categoricalmetadatacolumn-get-ids"]], "skbio.metadata.CategoricalMetadataColumn.get_missing": [[185, "skbio-metadata-categoricalmetadatacolumn-get-missing"]], "skbio.metadata.CategoricalMetadataColumn.get_value": [[186, "skbio-metadata-categoricalmetadatacolumn-get-value"]], "skbio.metadata.CategoricalMetadataColumn.has_missing_values": [[187, "skbio-metadata-categoricalmetadatacolumn-has-missing-values"]], "skbio.metadata.CategoricalMetadataColumn.save": [[188, "skbio-metadata-categoricalmetadatacolumn-save"]], "skbio.metadata.CategoricalMetadataColumn.to_dataframe": [[189, "skbio-metadata-categoricalmetadatacolumn-to-dataframe"]], "skbio.metadata.CategoricalMetadataColumn.to_series": [[190, "skbio-metadata-categoricalmetadatacolumn-to-series"]], "skbio.metadata.Interval": [[191, "skbio-metadata-interval"]], "skbio.metadata.Interval.__eq__": [[192, "skbio-metadata-interval-eq"]], "skbio.metadata.Interval.__ge__": [[193, "skbio-metadata-interval-ge"]], "skbio.metadata.Interval.__getstate__": [[194, "skbio-metadata-interval-getstate"]], "skbio.metadata.Interval.__gt__": [[195, "skbio-metadata-interval-gt"]], "skbio.metadata.Interval.__le__": [[196, "skbio-metadata-interval-le"]], "skbio.metadata.Interval.__lt__": [[197, "skbio-metadata-interval-lt"]], "skbio.metadata.Interval.__ne__": [[198, "skbio-metadata-interval-ne"]], "skbio.metadata.Interval.__str__": [[199, "skbio-metadata-interval-str"]], "skbio.metadata.Interval.drop": [[200, "skbio-metadata-interval-drop"]], "skbio.metadata.IntervalMetadata": [[201, "skbio-metadata-intervalmetadata"]], "skbio.metadata.IntervalMetadata.__copy__": [[202, "skbio-metadata-intervalmetadata-copy"]], "skbio.metadata.IntervalMetadata.__deepcopy__": [[203, "skbio-metadata-intervalmetadata-deepcopy"]], "skbio.metadata.IntervalMetadata.__eq__": [[204, "skbio-metadata-intervalmetadata-eq"]], "skbio.metadata.IntervalMetadata.__ge__": [[205, "skbio-metadata-intervalmetadata-ge"]], "skbio.metadata.IntervalMetadata.__getstate__": [[206, "skbio-metadata-intervalmetadata-getstate"]], "skbio.metadata.IntervalMetadata.__gt__": [[207, "skbio-metadata-intervalmetadata-gt"]], "skbio.metadata.IntervalMetadata.__le__": [[208, "skbio-metadata-intervalmetadata-le"]], "skbio.metadata.IntervalMetadata.__lt__": [[209, "skbio-metadata-intervalmetadata-lt"]], "skbio.metadata.IntervalMetadata.__ne__": [[210, "skbio-metadata-intervalmetadata-ne"]], "skbio.metadata.IntervalMetadata.__str__": [[211, "skbio-metadata-intervalmetadata-str"]], "skbio.metadata.IntervalMetadata.add": [[212, "skbio-metadata-intervalmetadata-add"]], "skbio.metadata.IntervalMetadata.concat": [[213, "skbio-metadata-intervalmetadata-concat"]], "skbio.metadata.IntervalMetadata.drop": [[214, "skbio-metadata-intervalmetadata-drop"]], "skbio.metadata.IntervalMetadata.merge": [[215, "skbio-metadata-intervalmetadata-merge"]], "skbio.metadata.IntervalMetadata.query": [[216, "skbio-metadata-intervalmetadata-query"]], "skbio.metadata.IntervalMetadata.read": [[217, "skbio-metadata-intervalmetadata-read"]], "skbio.metadata.IntervalMetadata.sort": [[218, "skbio-metadata-intervalmetadata-sort"]], "skbio.metadata.IntervalMetadata.write": [[219, "skbio-metadata-intervalmetadata-write"]], "skbio.metadata.MetadataColumn": [[220, "skbio-metadata-metadatacolumn"]], "skbio.metadata.MetadataColumn.__eq__": [[221, "skbio-metadata-metadatacolumn-eq"]], "skbio.metadata.MetadataColumn.__ge__": [[222, "skbio-metadata-metadatacolumn-ge"]], "skbio.metadata.MetadataColumn.__getstate__": [[223, "skbio-metadata-metadatacolumn-getstate"]], "skbio.metadata.MetadataColumn.__gt__": [[224, "skbio-metadata-metadatacolumn-gt"]], "skbio.metadata.MetadataColumn.__le__": [[225, "skbio-metadata-metadatacolumn-le"]], "skbio.metadata.MetadataColumn.__lt__": [[226, "skbio-metadata-metadatacolumn-lt"]], "skbio.metadata.MetadataColumn.__ne__": [[227, "skbio-metadata-metadatacolumn-ne"]], "skbio.metadata.MetadataColumn.__str__": [[228, "skbio-metadata-metadatacolumn-str"]], "skbio.metadata.MetadataColumn.drop_missing_values": [[229, "skbio-metadata-metadatacolumn-drop-missing-values"]], "skbio.metadata.MetadataColumn.filter_ids": [[230, "skbio-metadata-metadatacolumn-filter-ids"]], "skbio.metadata.MetadataColumn.get_ids": [[231, "skbio-metadata-metadatacolumn-get-ids"]], "skbio.metadata.MetadataColumn.get_missing": [[232, "skbio-metadata-metadatacolumn-get-missing"]], "skbio.metadata.MetadataColumn.get_value": [[233, "skbio-metadata-metadatacolumn-get-value"]], "skbio.metadata.MetadataColumn.has_missing_values": [[234, "skbio-metadata-metadatacolumn-has-missing-values"]], "skbio.metadata.MetadataColumn.save": [[235, "skbio-metadata-metadatacolumn-save"]], "skbio.metadata.MetadataColumn.to_dataframe": [[236, "skbio-metadata-metadatacolumn-to-dataframe"]], "skbio.metadata.MetadataColumn.to_series": [[237, "skbio-metadata-metadatacolumn-to-series"]], "skbio.metadata.NumericMetadataColumn": [[238, "skbio-metadata-numericmetadatacolumn"]], "skbio.metadata.NumericMetadataColumn.__eq__": [[239, "skbio-metadata-numericmetadatacolumn-eq"]], "skbio.metadata.NumericMetadataColumn.__ge__": [[240, "skbio-metadata-numericmetadatacolumn-ge"]], "skbio.metadata.NumericMetadataColumn.__getstate__": [[241, "skbio-metadata-numericmetadatacolumn-getstate"]], "skbio.metadata.NumericMetadataColumn.__gt__": [[242, "skbio-metadata-numericmetadatacolumn-gt"]], "skbio.metadata.NumericMetadataColumn.__le__": [[243, "skbio-metadata-numericmetadatacolumn-le"]], "skbio.metadata.NumericMetadataColumn.__lt__": [[244, "skbio-metadata-numericmetadatacolumn-lt"]], "skbio.metadata.NumericMetadataColumn.__ne__": [[245, "skbio-metadata-numericmetadatacolumn-ne"]], "skbio.metadata.NumericMetadataColumn.__str__": [[246, "skbio-metadata-numericmetadatacolumn-str"]], "skbio.metadata.NumericMetadataColumn.drop_missing_values": [[247, "skbio-metadata-numericmetadatacolumn-drop-missing-values"]], "skbio.metadata.NumericMetadataColumn.filter_ids": [[248, "skbio-metadata-numericmetadatacolumn-filter-ids"]], "skbio.metadata.NumericMetadataColumn.get_ids": [[249, "skbio-metadata-numericmetadatacolumn-get-ids"]], "skbio.metadata.NumericMetadataColumn.get_missing": [[250, "skbio-metadata-numericmetadatacolumn-get-missing"]], "skbio.metadata.NumericMetadataColumn.get_value": [[251, "skbio-metadata-numericmetadatacolumn-get-value"]], "skbio.metadata.NumericMetadataColumn.has_missing_values": [[252, "skbio-metadata-numericmetadatacolumn-has-missing-values"]], "skbio.metadata.NumericMetadataColumn.save": [[253, "skbio-metadata-numericmetadatacolumn-save"]], "skbio.metadata.NumericMetadataColumn.to_dataframe": [[254, "skbio-metadata-numericmetadatacolumn-to-dataframe"]], "skbio.metadata.NumericMetadataColumn.to_series": [[255, "skbio-metadata-numericmetadatacolumn-to-series"]], "skbio.metadata.SampleMetadata": [[256, "skbio-metadata-samplemetadata"]], "skbio.metadata.SampleMetadata.__eq__": [[257, "skbio-metadata-samplemetadata-eq"]], "skbio.metadata.SampleMetadata.__ge__": [[258, "skbio-metadata-samplemetadata-ge"]], "skbio.metadata.SampleMetadata.__getstate__": [[259, "skbio-metadata-samplemetadata-getstate"]], "skbio.metadata.SampleMetadata.__gt__": [[260, "skbio-metadata-samplemetadata-gt"]], "skbio.metadata.SampleMetadata.__le__": [[261, "skbio-metadata-samplemetadata-le"]], "skbio.metadata.SampleMetadata.__lt__": [[262, "skbio-metadata-samplemetadata-lt"]], "skbio.metadata.SampleMetadata.__ne__": [[263, "skbio-metadata-samplemetadata-ne"]], "skbio.metadata.SampleMetadata.__str__": [[264, "skbio-metadata-samplemetadata-str"]], "skbio.metadata.SampleMetadata.filter_columns": [[265, "skbio-metadata-samplemetadata-filter-columns"]], "skbio.metadata.SampleMetadata.filter_ids": [[266, "skbio-metadata-samplemetadata-filter-ids"]], "skbio.metadata.SampleMetadata.get_column": [[267, "skbio-metadata-samplemetadata-get-column"]], "skbio.metadata.SampleMetadata.get_ids": [[268, "skbio-metadata-samplemetadata-get-ids"]], "skbio.metadata.SampleMetadata.load": [[269, "skbio-metadata-samplemetadata-load"]], "skbio.metadata.SampleMetadata.merge": [[270, "skbio-metadata-samplemetadata-merge"]], "skbio.metadata.SampleMetadata.read": [[271, "skbio-metadata-samplemetadata-read"]], "skbio.metadata.SampleMetadata.save": [[272, "skbio-metadata-samplemetadata-save"]], "skbio.metadata.SampleMetadata.to_dataframe": [[273, "skbio-metadata-samplemetadata-to-dataframe"]], "skbio.metadata.SampleMetadata.write": [[274, "skbio-metadata-samplemetadata-write"]], "skbio.sequence.DNA": [[275, "skbio-sequence-dna"]], "skbio.sequence.DNA.__bool__": [[276, "skbio-sequence-dna-bool"]], "skbio.sequence.DNA.__contains__": [[277, "skbio-sequence-dna-contains"]], "skbio.sequence.DNA.__copy__": [[278, "skbio-sequence-dna-copy"]], "skbio.sequence.DNA.__deepcopy__": [[279, "skbio-sequence-dna-deepcopy"]], "skbio.sequence.DNA.__eq__": [[280, "skbio-sequence-dna-eq"]], "skbio.sequence.DNA.__ge__": [[281, "skbio-sequence-dna-ge"]], "skbio.sequence.DNA.__getitem__": [[282, "skbio-sequence-dna-getitem"]], "skbio.sequence.DNA.__getstate__": [[283, "skbio-sequence-dna-getstate"]], "skbio.sequence.DNA.__gt__": [[284, "skbio-sequence-dna-gt"]], "skbio.sequence.DNA.__iter__": [[285, "skbio-sequence-dna-iter"]], "skbio.sequence.DNA.__le__": [[286, "skbio-sequence-dna-le"]], "skbio.sequence.DNA.__len__": [[287, "skbio-sequence-dna-len"]], "skbio.sequence.DNA.__lt__": [[288, "skbio-sequence-dna-lt"]], "skbio.sequence.DNA.__ne__": [[289, "skbio-sequence-dna-ne"]], "skbio.sequence.DNA.__reversed__": [[290, "skbio-sequence-dna-reversed"]], "skbio.sequence.DNA.__str__": [[291, "skbio-sequence-dna-str"]], "skbio.sequence.DNA.complement": [[292, "skbio-sequence-dna-complement"]], "skbio.sequence.DNA.concat": [[293, "skbio-sequence-dna-concat"]], "skbio.sequence.DNA.count": [[294, "skbio-sequence-dna-count"]], "skbio.sequence.DNA.definites": [[295, "skbio-sequence-dna-definites"]], "skbio.sequence.DNA.degap": [[296, "skbio-sequence-dna-degap"]], "skbio.sequence.DNA.degenerates": [[297, "skbio-sequence-dna-degenerates"]], "skbio.sequence.DNA.distance": [[298, "skbio-sequence-dna-distance"]], "skbio.sequence.DNA.expand_degenerates": [[299, "skbio-sequence-dna-expand-degenerates"]], "skbio.sequence.DNA.find_motifs": [[300, "skbio-sequence-dna-find-motifs"]], "skbio.sequence.DNA.find_with_regex": [[301, "skbio-sequence-dna-find-with-regex"]], "skbio.sequence.DNA.frequencies": [[302, "skbio-sequence-dna-frequencies"]], "skbio.sequence.DNA.gaps": [[303, "skbio-sequence-dna-gaps"]], "skbio.sequence.DNA.gc_content": [[304, "skbio-sequence-dna-gc-content"]], "skbio.sequence.DNA.gc_frequency": [[305, "skbio-sequence-dna-gc-frequency"]], "skbio.sequence.DNA.has_definites": [[306, "skbio-sequence-dna-has-definites"]], "skbio.sequence.DNA.has_degenerates": [[307, "skbio-sequence-dna-has-degenerates"]], "skbio.sequence.DNA.has_gaps": [[308, "skbio-sequence-dna-has-gaps"]], "skbio.sequence.DNA.has_interval_metadata": [[309, "skbio-sequence-dna-has-interval-metadata"]], "skbio.sequence.DNA.has_metadata": [[310, "skbio-sequence-dna-has-metadata"]], "skbio.sequence.DNA.has_nondegenerates": [[311, "skbio-sequence-dna-has-nondegenerates"]], "skbio.sequence.DNA.has_positional_metadata": [[312, "skbio-sequence-dna-has-positional-metadata"]], "skbio.sequence.DNA.index": [[313, "skbio-sequence-dna-index"]], "skbio.sequence.DNA.is_reverse_complement": [[314, "skbio-sequence-dna-is-reverse-complement"]], "skbio.sequence.DNA.iter_contiguous": [[315, "skbio-sequence-dna-iter-contiguous"]], "skbio.sequence.DNA.iter_kmers": [[316, "skbio-sequence-dna-iter-kmers"]], "skbio.sequence.DNA.kmer_frequencies": [[317, "skbio-sequence-dna-kmer-frequencies"]], "skbio.sequence.DNA.lowercase": [[318, "skbio-sequence-dna-lowercase"]], "skbio.sequence.DNA.match_frequency": [[319, "skbio-sequence-dna-match-frequency"]], "skbio.sequence.DNA.matches": [[320, "skbio-sequence-dna-matches"]], "skbio.sequence.DNA.mismatch_frequency": [[321, "skbio-sequence-dna-mismatch-frequency"]], "skbio.sequence.DNA.mismatches": [[322, "skbio-sequence-dna-mismatches"]], "skbio.sequence.DNA.nondegenerates": [[323, "skbio-sequence-dna-nondegenerates"]], "skbio.sequence.DNA.read": [[324, "skbio-sequence-dna-read"]], "skbio.sequence.DNA.replace": [[325, "skbio-sequence-dna-replace"]], "skbio.sequence.DNA.reverse_complement": [[326, "skbio-sequence-dna-reverse-complement"]], "skbio.sequence.DNA.to_definites": [[327, "skbio-sequence-dna-to-definites"]], "skbio.sequence.DNA.to_indices": [[328, "skbio-sequence-dna-to-indices"]], "skbio.sequence.DNA.to_regex": [[329, "skbio-sequence-dna-to-regex"]], "skbio.sequence.DNA.transcribe": [[330, "skbio-sequence-dna-transcribe"]], "skbio.sequence.DNA.translate": [[331, "skbio-sequence-dna-translate"]], "skbio.sequence.DNA.translate_six_frames": [[332, "skbio-sequence-dna-translate-six-frames"]], "skbio.sequence.DNA.write": [[333, "skbio-sequence-dna-write"]], "skbio.sequence.GeneticCode": [[334, "skbio-sequence-geneticcode"]], "skbio.sequence.GeneticCode.__eq__": [[335, "skbio-sequence-geneticcode-eq"]], "skbio.sequence.GeneticCode.__ge__": [[336, "skbio-sequence-geneticcode-ge"]], "skbio.sequence.GeneticCode.__getstate__": [[337, "skbio-sequence-geneticcode-getstate"]], "skbio.sequence.GeneticCode.__gt__": [[338, "skbio-sequence-geneticcode-gt"]], "skbio.sequence.GeneticCode.__le__": [[339, "skbio-sequence-geneticcode-le"]], "skbio.sequence.GeneticCode.__lt__": [[340, "skbio-sequence-geneticcode-lt"]], "skbio.sequence.GeneticCode.__ne__": [[341, "skbio-sequence-geneticcode-ne"]], "skbio.sequence.GeneticCode.__str__": [[342, "skbio-sequence-geneticcode-str"]], "skbio.sequence.GeneticCode.from_ncbi": [[343, "skbio-sequence-geneticcode-from-ncbi"]], "skbio.sequence.GeneticCode.translate": [[344, "skbio-sequence-geneticcode-translate"]], "skbio.sequence.GeneticCode.translate_six_frames": [[345, "skbio-sequence-geneticcode-translate-six-frames"]], "skbio.sequence.GrammaredSequence": [[346, "skbio-sequence-grammaredsequence"]], "skbio.sequence.GrammaredSequence.__bool__": [[347, "skbio-sequence-grammaredsequence-bool"]], "skbio.sequence.GrammaredSequence.__contains__": [[348, "skbio-sequence-grammaredsequence-contains"]], "skbio.sequence.GrammaredSequence.__copy__": [[349, "skbio-sequence-grammaredsequence-copy"]], "skbio.sequence.GrammaredSequence.__deepcopy__": [[350, "skbio-sequence-grammaredsequence-deepcopy"]], "skbio.sequence.GrammaredSequence.__eq__": [[351, "skbio-sequence-grammaredsequence-eq"]], "skbio.sequence.GrammaredSequence.__ge__": [[352, "skbio-sequence-grammaredsequence-ge"]], "skbio.sequence.GrammaredSequence.__getitem__": [[353, "skbio-sequence-grammaredsequence-getitem"]], "skbio.sequence.GrammaredSequence.__getstate__": [[354, "skbio-sequence-grammaredsequence-getstate"]], "skbio.sequence.GrammaredSequence.__gt__": [[355, "skbio-sequence-grammaredsequence-gt"]], "skbio.sequence.GrammaredSequence.__iter__": [[356, "skbio-sequence-grammaredsequence-iter"]], "skbio.sequence.GrammaredSequence.__le__": [[357, "skbio-sequence-grammaredsequence-le"]], "skbio.sequence.GrammaredSequence.__len__": [[358, "skbio-sequence-grammaredsequence-len"]], "skbio.sequence.GrammaredSequence.__lt__": [[359, "skbio-sequence-grammaredsequence-lt"]], "skbio.sequence.GrammaredSequence.__ne__": [[360, "skbio-sequence-grammaredsequence-ne"]], "skbio.sequence.GrammaredSequence.__reversed__": [[361, "skbio-sequence-grammaredsequence-reversed"]], "skbio.sequence.GrammaredSequence.__str__": [[362, "skbio-sequence-grammaredsequence-str"]], "skbio.sequence.GrammaredSequence.concat": [[363, "skbio-sequence-grammaredsequence-concat"]], "skbio.sequence.GrammaredSequence.count": [[364, "skbio-sequence-grammaredsequence-count"]], "skbio.sequence.GrammaredSequence.definites": [[365, "skbio-sequence-grammaredsequence-definites"]], "skbio.sequence.GrammaredSequence.degap": [[366, "skbio-sequence-grammaredsequence-degap"]], "skbio.sequence.GrammaredSequence.degenerates": [[367, "skbio-sequence-grammaredsequence-degenerates"]], "skbio.sequence.GrammaredSequence.distance": [[368, "skbio-sequence-grammaredsequence-distance"]], "skbio.sequence.GrammaredSequence.expand_degenerates": [[369, "skbio-sequence-grammaredsequence-expand-degenerates"]], "skbio.sequence.GrammaredSequence.find_motifs": [[370, "skbio-sequence-grammaredsequence-find-motifs"]], "skbio.sequence.GrammaredSequence.find_with_regex": [[371, "skbio-sequence-grammaredsequence-find-with-regex"]], "skbio.sequence.GrammaredSequence.frequencies": [[372, "skbio-sequence-grammaredsequence-frequencies"]], "skbio.sequence.GrammaredSequence.gaps": [[373, "skbio-sequence-grammaredsequence-gaps"]], "skbio.sequence.GrammaredSequence.has_definites": [[374, "skbio-sequence-grammaredsequence-has-definites"]], "skbio.sequence.GrammaredSequence.has_degenerates": [[375, "skbio-sequence-grammaredsequence-has-degenerates"]], "skbio.sequence.GrammaredSequence.has_gaps": [[376, "skbio-sequence-grammaredsequence-has-gaps"]], "skbio.sequence.GrammaredSequence.has_interval_metadata": [[377, "skbio-sequence-grammaredsequence-has-interval-metadata"]], "skbio.sequence.GrammaredSequence.has_metadata": [[378, "skbio-sequence-grammaredsequence-has-metadata"]], "skbio.sequence.GrammaredSequence.has_nondegenerates": [[379, "skbio-sequence-grammaredsequence-has-nondegenerates"]], "skbio.sequence.GrammaredSequence.has_positional_metadata": [[380, "skbio-sequence-grammaredsequence-has-positional-metadata"]], "skbio.sequence.GrammaredSequence.index": [[381, "skbio-sequence-grammaredsequence-index"]], "skbio.sequence.GrammaredSequence.iter_contiguous": [[382, "skbio-sequence-grammaredsequence-iter-contiguous"]], "skbio.sequence.GrammaredSequence.iter_kmers": [[383, "skbio-sequence-grammaredsequence-iter-kmers"]], "skbio.sequence.GrammaredSequence.kmer_frequencies": [[384, "skbio-sequence-grammaredsequence-kmer-frequencies"]], "skbio.sequence.GrammaredSequence.lowercase": [[385, "skbio-sequence-grammaredsequence-lowercase"]], "skbio.sequence.GrammaredSequence.match_frequency": [[386, "skbio-sequence-grammaredsequence-match-frequency"]], "skbio.sequence.GrammaredSequence.matches": [[387, "skbio-sequence-grammaredsequence-matches"]], "skbio.sequence.GrammaredSequence.mismatch_frequency": [[388, "skbio-sequence-grammaredsequence-mismatch-frequency"]], "skbio.sequence.GrammaredSequence.mismatches": [[389, "skbio-sequence-grammaredsequence-mismatches"]], "skbio.sequence.GrammaredSequence.nondegenerates": [[390, "skbio-sequence-grammaredsequence-nondegenerates"]], "skbio.sequence.GrammaredSequence.read": [[391, "skbio-sequence-grammaredsequence-read"]], "skbio.sequence.GrammaredSequence.replace": [[392, "skbio-sequence-grammaredsequence-replace"]], "skbio.sequence.GrammaredSequence.to_definites": [[393, "skbio-sequence-grammaredsequence-to-definites"]], "skbio.sequence.GrammaredSequence.to_indices": [[394, "skbio-sequence-grammaredsequence-to-indices"]], "skbio.sequence.GrammaredSequence.to_regex": [[395, "skbio-sequence-grammaredsequence-to-regex"]], "skbio.sequence.GrammaredSequence.write": [[396, "skbio-sequence-grammaredsequence-write"]], "skbio.sequence.Protein": [[397, "skbio-sequence-protein"]], "skbio.sequence.Protein.__bool__": [[398, "skbio-sequence-protein-bool"]], "skbio.sequence.Protein.__contains__": [[399, "skbio-sequence-protein-contains"]], "skbio.sequence.Protein.__copy__": [[400, "skbio-sequence-protein-copy"]], "skbio.sequence.Protein.__deepcopy__": [[401, "skbio-sequence-protein-deepcopy"]], "skbio.sequence.Protein.__eq__": [[402, "skbio-sequence-protein-eq"]], "skbio.sequence.Protein.__ge__": [[403, "skbio-sequence-protein-ge"]], "skbio.sequence.Protein.__getitem__": [[404, "skbio-sequence-protein-getitem"]], "skbio.sequence.Protein.__getstate__": [[405, "skbio-sequence-protein-getstate"]], "skbio.sequence.Protein.__gt__": [[406, "skbio-sequence-protein-gt"]], "skbio.sequence.Protein.__iter__": [[407, "skbio-sequence-protein-iter"]], "skbio.sequence.Protein.__le__": [[408, "skbio-sequence-protein-le"]], "skbio.sequence.Protein.__len__": [[409, "skbio-sequence-protein-len"]], "skbio.sequence.Protein.__lt__": [[410, "skbio-sequence-protein-lt"]], "skbio.sequence.Protein.__ne__": [[411, "skbio-sequence-protein-ne"]], "skbio.sequence.Protein.__reversed__": [[412, "skbio-sequence-protein-reversed"]], "skbio.sequence.Protein.__str__": [[413, "skbio-sequence-protein-str"]], "skbio.sequence.Protein.concat": [[414, "skbio-sequence-protein-concat"]], "skbio.sequence.Protein.count": [[415, "skbio-sequence-protein-count"]], "skbio.sequence.Protein.definites": [[416, "skbio-sequence-protein-definites"]], "skbio.sequence.Protein.degap": [[417, "skbio-sequence-protein-degap"]], "skbio.sequence.Protein.degenerates": [[418, "skbio-sequence-protein-degenerates"]], "skbio.sequence.Protein.distance": [[419, "skbio-sequence-protein-distance"]], "skbio.sequence.Protein.expand_degenerates": [[420, "skbio-sequence-protein-expand-degenerates"]], "skbio.sequence.Protein.find_motifs": [[421, "skbio-sequence-protein-find-motifs"]], "skbio.sequence.Protein.find_with_regex": [[422, "skbio-sequence-protein-find-with-regex"]], "skbio.sequence.Protein.frequencies": [[423, "skbio-sequence-protein-frequencies"]], "skbio.sequence.Protein.gaps": [[424, "skbio-sequence-protein-gaps"]], "skbio.sequence.Protein.has_definites": [[425, "skbio-sequence-protein-has-definites"]], "skbio.sequence.Protein.has_degenerates": [[426, "skbio-sequence-protein-has-degenerates"]], "skbio.sequence.Protein.has_gaps": [[427, "skbio-sequence-protein-has-gaps"]], "skbio.sequence.Protein.has_interval_metadata": [[428, "skbio-sequence-protein-has-interval-metadata"]], "skbio.sequence.Protein.has_metadata": [[429, "skbio-sequence-protein-has-metadata"]], "skbio.sequence.Protein.has_nondegenerates": [[430, "skbio-sequence-protein-has-nondegenerates"]], "skbio.sequence.Protein.has_positional_metadata": [[431, "skbio-sequence-protein-has-positional-metadata"]], "skbio.sequence.Protein.has_stops": [[432, "skbio-sequence-protein-has-stops"]], "skbio.sequence.Protein.index": [[433, "skbio-sequence-protein-index"]], "skbio.sequence.Protein.iter_contiguous": [[434, "skbio-sequence-protein-iter-contiguous"]], "skbio.sequence.Protein.iter_kmers": [[435, "skbio-sequence-protein-iter-kmers"]], "skbio.sequence.Protein.kmer_frequencies": [[436, "skbio-sequence-protein-kmer-frequencies"]], "skbio.sequence.Protein.lowercase": [[437, "skbio-sequence-protein-lowercase"]], "skbio.sequence.Protein.match_frequency": [[438, "skbio-sequence-protein-match-frequency"]], "skbio.sequence.Protein.matches": [[439, "skbio-sequence-protein-matches"]], "skbio.sequence.Protein.mismatch_frequency": [[440, "skbio-sequence-protein-mismatch-frequency"]], "skbio.sequence.Protein.mismatches": [[441, "skbio-sequence-protein-mismatches"]], "skbio.sequence.Protein.nondegenerates": [[442, "skbio-sequence-protein-nondegenerates"]], "skbio.sequence.Protein.read": [[443, "skbio-sequence-protein-read"]], "skbio.sequence.Protein.replace": [[444, "skbio-sequence-protein-replace"]], "skbio.sequence.Protein.stops": [[445, "skbio-sequence-protein-stops"]], "skbio.sequence.Protein.to_definites": [[446, "skbio-sequence-protein-to-definites"]], "skbio.sequence.Protein.to_indices": [[447, "skbio-sequence-protein-to-indices"]], "skbio.sequence.Protein.to_regex": [[448, "skbio-sequence-protein-to-regex"]], "skbio.sequence.Protein.write": [[449, "skbio-sequence-protein-write"]], "skbio.sequence.RNA": [[450, "skbio-sequence-rna"]], "skbio.sequence.RNA.__bool__": [[451, "skbio-sequence-rna-bool"]], "skbio.sequence.RNA.__contains__": [[452, "skbio-sequence-rna-contains"]], "skbio.sequence.RNA.__copy__": [[453, "skbio-sequence-rna-copy"]], "skbio.sequence.RNA.__deepcopy__": [[454, "skbio-sequence-rna-deepcopy"]], "skbio.sequence.RNA.__eq__": [[455, "skbio-sequence-rna-eq"]], "skbio.sequence.RNA.__ge__": [[456, "skbio-sequence-rna-ge"]], "skbio.sequence.RNA.__getitem__": [[457, "skbio-sequence-rna-getitem"]], "skbio.sequence.RNA.__getstate__": [[458, "skbio-sequence-rna-getstate"]], "skbio.sequence.RNA.__gt__": [[459, "skbio-sequence-rna-gt"]], "skbio.sequence.RNA.__iter__": [[460, "skbio-sequence-rna-iter"]], "skbio.sequence.RNA.__le__": [[461, "skbio-sequence-rna-le"]], "skbio.sequence.RNA.__len__": [[462, "skbio-sequence-rna-len"]], "skbio.sequence.RNA.__lt__": [[463, "skbio-sequence-rna-lt"]], "skbio.sequence.RNA.__ne__": [[464, "skbio-sequence-rna-ne"]], "skbio.sequence.RNA.__reversed__": [[465, "skbio-sequence-rna-reversed"]], "skbio.sequence.RNA.__str__": [[466, "skbio-sequence-rna-str"]], "skbio.sequence.RNA.complement": [[467, "skbio-sequence-rna-complement"]], "skbio.sequence.RNA.concat": [[468, "skbio-sequence-rna-concat"]], "skbio.sequence.RNA.count": [[469, "skbio-sequence-rna-count"]], "skbio.sequence.RNA.definites": [[470, "skbio-sequence-rna-definites"]], "skbio.sequence.RNA.degap": [[471, "skbio-sequence-rna-degap"]], "skbio.sequence.RNA.degenerates": [[472, "skbio-sequence-rna-degenerates"]], "skbio.sequence.RNA.distance": [[473, "skbio-sequence-rna-distance"]], "skbio.sequence.RNA.expand_degenerates": [[474, "skbio-sequence-rna-expand-degenerates"]], "skbio.sequence.RNA.find_motifs": [[475, "skbio-sequence-rna-find-motifs"]], "skbio.sequence.RNA.find_with_regex": [[476, "skbio-sequence-rna-find-with-regex"]], "skbio.sequence.RNA.frequencies": [[477, "skbio-sequence-rna-frequencies"]], "skbio.sequence.RNA.gaps": [[478, "skbio-sequence-rna-gaps"]], "skbio.sequence.RNA.gc_content": [[479, "skbio-sequence-rna-gc-content"]], "skbio.sequence.RNA.gc_frequency": [[480, "skbio-sequence-rna-gc-frequency"]], "skbio.sequence.RNA.has_definites": [[481, "skbio-sequence-rna-has-definites"]], "skbio.sequence.RNA.has_degenerates": [[482, "skbio-sequence-rna-has-degenerates"]], "skbio.sequence.RNA.has_gaps": [[483, "skbio-sequence-rna-has-gaps"]], "skbio.sequence.RNA.has_interval_metadata": [[484, "skbio-sequence-rna-has-interval-metadata"]], "skbio.sequence.RNA.has_metadata": [[485, "skbio-sequence-rna-has-metadata"]], "skbio.sequence.RNA.has_nondegenerates": [[486, "skbio-sequence-rna-has-nondegenerates"]], "skbio.sequence.RNA.has_positional_metadata": [[487, "skbio-sequence-rna-has-positional-metadata"]], "skbio.sequence.RNA.index": [[488, "skbio-sequence-rna-index"]], "skbio.sequence.RNA.is_reverse_complement": [[489, "skbio-sequence-rna-is-reverse-complement"]], "skbio.sequence.RNA.iter_contiguous": [[490, "skbio-sequence-rna-iter-contiguous"]], "skbio.sequence.RNA.iter_kmers": [[491, "skbio-sequence-rna-iter-kmers"]], "skbio.sequence.RNA.kmer_frequencies": [[492, "skbio-sequence-rna-kmer-frequencies"]], "skbio.sequence.RNA.lowercase": [[493, "skbio-sequence-rna-lowercase"]], "skbio.sequence.RNA.match_frequency": [[494, "skbio-sequence-rna-match-frequency"]], "skbio.sequence.RNA.matches": [[495, "skbio-sequence-rna-matches"]], "skbio.sequence.RNA.mismatch_frequency": [[496, "skbio-sequence-rna-mismatch-frequency"]], "skbio.sequence.RNA.mismatches": [[497, "skbio-sequence-rna-mismatches"]], "skbio.sequence.RNA.nondegenerates": [[498, "skbio-sequence-rna-nondegenerates"]], "skbio.sequence.RNA.read": [[499, "skbio-sequence-rna-read"]], "skbio.sequence.RNA.replace": [[500, "skbio-sequence-rna-replace"]], "skbio.sequence.RNA.reverse_complement": [[501, "skbio-sequence-rna-reverse-complement"]], "skbio.sequence.RNA.reverse_transcribe": [[502, "skbio-sequence-rna-reverse-transcribe"]], "skbio.sequence.RNA.to_definites": [[503, "skbio-sequence-rna-to-definites"]], "skbio.sequence.RNA.to_indices": [[504, "skbio-sequence-rna-to-indices"]], "skbio.sequence.RNA.to_regex": [[505, "skbio-sequence-rna-to-regex"]], "skbio.sequence.RNA.translate": [[506, "skbio-sequence-rna-translate"]], "skbio.sequence.RNA.translate_six_frames": [[507, "skbio-sequence-rna-translate-six-frames"]], "skbio.sequence.RNA.write": [[508, "skbio-sequence-rna-write"]], "skbio.sequence.Sequence": [[509, "skbio-sequence-sequence"]], "skbio.sequence.Sequence.__bool__": [[510, "skbio-sequence-sequence-bool"]], "skbio.sequence.Sequence.__contains__": [[511, "skbio-sequence-sequence-contains"]], "skbio.sequence.Sequence.__copy__": [[512, "skbio-sequence-sequence-copy"]], "skbio.sequence.Sequence.__deepcopy__": [[513, "skbio-sequence-sequence-deepcopy"]], "skbio.sequence.Sequence.__eq__": [[514, "skbio-sequence-sequence-eq"]], "skbio.sequence.Sequence.__ge__": [[515, "skbio-sequence-sequence-ge"]], "skbio.sequence.Sequence.__getitem__": [[516, "skbio-sequence-sequence-getitem"]], "skbio.sequence.Sequence.__getstate__": [[517, "skbio-sequence-sequence-getstate"]], "skbio.sequence.Sequence.__gt__": [[518, "skbio-sequence-sequence-gt"]], "skbio.sequence.Sequence.__iter__": [[519, "skbio-sequence-sequence-iter"]], "skbio.sequence.Sequence.__le__": [[520, "skbio-sequence-sequence-le"]], "skbio.sequence.Sequence.__len__": [[521, "skbio-sequence-sequence-len"]], "skbio.sequence.Sequence.__lt__": [[522, "skbio-sequence-sequence-lt"]], "skbio.sequence.Sequence.__ne__": [[523, "skbio-sequence-sequence-ne"]], "skbio.sequence.Sequence.__reversed__": [[524, "skbio-sequence-sequence-reversed"]], "skbio.sequence.Sequence.__str__": [[525, "skbio-sequence-sequence-str"]], "skbio.sequence.Sequence.concat": [[526, "skbio-sequence-sequence-concat"]], "skbio.sequence.Sequence.count": [[527, "skbio-sequence-sequence-count"]], "skbio.sequence.Sequence.distance": [[528, "skbio-sequence-sequence-distance"]], "skbio.sequence.Sequence.find_with_regex": [[529, "skbio-sequence-sequence-find-with-regex"]], "skbio.sequence.Sequence.frequencies": [[530, "skbio-sequence-sequence-frequencies"]], "skbio.sequence.Sequence.has_interval_metadata": [[531, "skbio-sequence-sequence-has-interval-metadata"]], "skbio.sequence.Sequence.has_metadata": [[532, "skbio-sequence-sequence-has-metadata"]], "skbio.sequence.Sequence.has_positional_metadata": [[533, "skbio-sequence-sequence-has-positional-metadata"]], "skbio.sequence.Sequence.index": [[534, "skbio-sequence-sequence-index"]], "skbio.sequence.Sequence.iter_contiguous": [[535, "skbio-sequence-sequence-iter-contiguous"]], "skbio.sequence.Sequence.iter_kmers": [[536, "skbio-sequence-sequence-iter-kmers"]], "skbio.sequence.Sequence.kmer_frequencies": [[537, "skbio-sequence-sequence-kmer-frequencies"]], "skbio.sequence.Sequence.lowercase": [[538, "skbio-sequence-sequence-lowercase"]], "skbio.sequence.Sequence.match_frequency": [[539, "skbio-sequence-sequence-match-frequency"]], "skbio.sequence.Sequence.matches": [[540, "skbio-sequence-sequence-matches"]], "skbio.sequence.Sequence.mismatch_frequency": [[541, "skbio-sequence-sequence-mismatch-frequency"]], "skbio.sequence.Sequence.mismatches": [[542, "skbio-sequence-sequence-mismatches"]], "skbio.sequence.Sequence.read": [[543, "skbio-sequence-sequence-read"]], "skbio.sequence.Sequence.replace": [[544, "skbio-sequence-sequence-replace"]], "skbio.sequence.Sequence.to_indices": [[545, "skbio-sequence-sequence-to-indices"]], "skbio.sequence.Sequence.write": [[546, "skbio-sequence-sequence-write"]], "skbio.sequence.SubstitutionMatrix": [[547, "skbio-sequence-substitutionmatrix"]], "skbio.sequence.SubstitutionMatrix.__contains__": [[548, "skbio-sequence-substitutionmatrix-contains"]], "skbio.sequence.SubstitutionMatrix.__eq__": [[549, "skbio-sequence-substitutionmatrix-eq"]], "skbio.sequence.SubstitutionMatrix.__ge__": [[550, "skbio-sequence-substitutionmatrix-ge"]], "skbio.sequence.SubstitutionMatrix.__getitem__": [[551, "skbio-sequence-substitutionmatrix-getitem"]], "skbio.sequence.SubstitutionMatrix.__getstate__": [[552, "skbio-sequence-substitutionmatrix-getstate"]], "skbio.sequence.SubstitutionMatrix.__gt__": [[553, "skbio-sequence-substitutionmatrix-gt"]], "skbio.sequence.SubstitutionMatrix.__le__": [[554, "skbio-sequence-substitutionmatrix-le"]], "skbio.sequence.SubstitutionMatrix.__lt__": [[555, "skbio-sequence-substitutionmatrix-lt"]], "skbio.sequence.SubstitutionMatrix.__ne__": [[556, "skbio-sequence-substitutionmatrix-ne"]], "skbio.sequence.SubstitutionMatrix.__str__": [[557, "skbio-sequence-substitutionmatrix-str"]], "skbio.sequence.SubstitutionMatrix.between": [[558, "skbio-sequence-substitutionmatrix-between"]], "skbio.sequence.SubstitutionMatrix.by_name": [[559, "skbio-sequence-substitutionmatrix-by-name"]], "skbio.sequence.SubstitutionMatrix.copy": [[560, "skbio-sequence-substitutionmatrix-copy"]], "skbio.sequence.SubstitutionMatrix.filter": [[561, "skbio-sequence-substitutionmatrix-filter"]], "skbio.sequence.SubstitutionMatrix.from_dict": [[562, "skbio-sequence-substitutionmatrix-from-dict"]], "skbio.sequence.SubstitutionMatrix.from_iterable": [[563, "skbio-sequence-substitutionmatrix-from-iterable"]], "skbio.sequence.SubstitutionMatrix.get_names": [[564, "skbio-sequence-substitutionmatrix-get-names"]], "skbio.sequence.SubstitutionMatrix.identity": [[565, "skbio-sequence-substitutionmatrix-identity"]], "skbio.sequence.SubstitutionMatrix.index": [[566, "skbio-sequence-substitutionmatrix-index"]], "skbio.sequence.SubstitutionMatrix.plot": [[567, "skbio-sequence-substitutionmatrix-plot"]], "skbio.sequence.SubstitutionMatrix.read": [[568, "skbio-sequence-substitutionmatrix-read"]], "skbio.sequence.SubstitutionMatrix.redundant_form": [[569, "skbio-sequence-substitutionmatrix-redundant-form"]], "skbio.sequence.SubstitutionMatrix.to_data_frame": [[570, "skbio-sequence-substitutionmatrix-to-data-frame"]], "skbio.sequence.SubstitutionMatrix.to_dict": [[571, "skbio-sequence-substitutionmatrix-to-dict"]], "skbio.sequence.SubstitutionMatrix.transpose": [[572, "skbio-sequence-substitutionmatrix-transpose"]], "skbio.sequence.SubstitutionMatrix.within": [[573, "skbio-sequence-substitutionmatrix-within"]], "skbio.sequence.SubstitutionMatrix.write": [[574, "skbio-sequence-substitutionmatrix-write"]], "skbio.sequence.distance.hamming": [[576, "skbio-sequence-distance-hamming"]], "skbio.sequence.distance.kmer_distance": [[577, "skbio-sequence-distance-kmer-distance"]], "skbio.stats.composition.alr": [[579, "skbio-stats-composition-alr"]], "skbio.stats.composition.alr_inv": [[580, "skbio-stats-composition-alr-inv"]], "skbio.stats.composition.ancom": [[581, "skbio-stats-composition-ancom"]], "skbio.stats.composition.centralize": [[582, "skbio-stats-composition-centralize"]], "skbio.stats.composition.closure": [[583, "skbio-stats-composition-closure"]], "skbio.stats.composition.clr": [[584, "skbio-stats-composition-clr"]], "skbio.stats.composition.clr_inv": [[585, "skbio-stats-composition-clr-inv"]], "skbio.stats.composition.dirmult_ttest": [[586, "skbio-stats-composition-dirmult-ttest"]], "skbio.stats.composition.ilr": [[587, "skbio-stats-composition-ilr"]], "skbio.stats.composition.ilr_inv": [[588, "skbio-stats-composition-ilr-inv"]], "skbio.stats.composition.inner": [[589, "skbio-stats-composition-inner"]], "skbio.stats.composition.multi_replace": [[590, "skbio-stats-composition-multi-replace"]], "skbio.stats.composition.multiplicative_replacement": [[591, "skbio-stats-composition-multiplicative-replacement"]], "skbio.stats.composition.pairwise_vlr": [[592, "skbio-stats-composition-pairwise-vlr"]], "skbio.stats.composition.perturb": [[593, "skbio-stats-composition-perturb"]], "skbio.stats.composition.perturb_inv": [[594, "skbio-stats-composition-perturb-inv"]], "skbio.stats.composition.power": [[595, "skbio-stats-composition-power"]], "skbio.stats.composition.sbp_basis": [[596, "skbio-stats-composition-sbp-basis"]], "skbio.stats.composition.tree_basis": [[597, "skbio-stats-composition-tree-basis"]], "skbio.stats.composition.vlr": [[598, "skbio-stats-composition-vlr"]], "skbio.stats.distance.DissimilarityMatrix": [[600, "skbio-stats-distance-dissimilaritymatrix"]], "skbio.stats.distance.DissimilarityMatrix.__contains__": [[601, "skbio-stats-distance-dissimilaritymatrix-contains"]], "skbio.stats.distance.DissimilarityMatrix.__eq__": [[602, "skbio-stats-distance-dissimilaritymatrix-eq"]], "skbio.stats.distance.DissimilarityMatrix.__ge__": [[603, "skbio-stats-distance-dissimilaritymatrix-ge"]], "skbio.stats.distance.DissimilarityMatrix.__getitem__": [[604, "skbio-stats-distance-dissimilaritymatrix-getitem"]], "skbio.stats.distance.DissimilarityMatrix.__getstate__": [[605, "skbio-stats-distance-dissimilaritymatrix-getstate"]], "skbio.stats.distance.DissimilarityMatrix.__gt__": [[606, "skbio-stats-distance-dissimilaritymatrix-gt"]], "skbio.stats.distance.DissimilarityMatrix.__le__": [[607, "skbio-stats-distance-dissimilaritymatrix-le"]], "skbio.stats.distance.DissimilarityMatrix.__lt__": [[608, "skbio-stats-distance-dissimilaritymatrix-lt"]], "skbio.stats.distance.DissimilarityMatrix.__ne__": [[609, "skbio-stats-distance-dissimilaritymatrix-ne"]], "skbio.stats.distance.DissimilarityMatrix.__str__": [[610, "skbio-stats-distance-dissimilaritymatrix-str"]], "skbio.stats.distance.DissimilarityMatrix.between": [[611, "skbio-stats-distance-dissimilaritymatrix-between"]], "skbio.stats.distance.DissimilarityMatrix.copy": [[612, "skbio-stats-distance-dissimilaritymatrix-copy"]], "skbio.stats.distance.DissimilarityMatrix.filter": [[613, "skbio-stats-distance-dissimilaritymatrix-filter"]], "skbio.stats.distance.DissimilarityMatrix.from_iterable": [[614, "skbio-stats-distance-dissimilaritymatrix-from-iterable"]], "skbio.stats.distance.DissimilarityMatrix.index": [[615, "skbio-stats-distance-dissimilaritymatrix-index"]], "skbio.stats.distance.DissimilarityMatrix.plot": [[616, "skbio-stats-distance-dissimilaritymatrix-plot"]], "skbio.stats.distance.DissimilarityMatrix.read": [[617, "skbio-stats-distance-dissimilaritymatrix-read"]], "skbio.stats.distance.DissimilarityMatrix.redundant_form": [[618, "skbio-stats-distance-dissimilaritymatrix-redundant-form"]], "skbio.stats.distance.DissimilarityMatrix.to_data_frame": [[619, "skbio-stats-distance-dissimilaritymatrix-to-data-frame"]], "skbio.stats.distance.DissimilarityMatrix.transpose": [[620, "skbio-stats-distance-dissimilaritymatrix-transpose"]], "skbio.stats.distance.DissimilarityMatrix.within": [[621, "skbio-stats-distance-dissimilaritymatrix-within"]], "skbio.stats.distance.DissimilarityMatrix.write": [[622, "skbio-stats-distance-dissimilaritymatrix-write"]], "skbio.stats.distance.DistanceMatrix": [[623, "skbio-stats-distance-distancematrix"]], "skbio.stats.distance.DistanceMatrix.__contains__": [[624, "skbio-stats-distance-distancematrix-contains"]], "skbio.stats.distance.DistanceMatrix.__eq__": [[625, "skbio-stats-distance-distancematrix-eq"]], "skbio.stats.distance.DistanceMatrix.__ge__": [[626, "skbio-stats-distance-distancematrix-ge"]], "skbio.stats.distance.DistanceMatrix.__getitem__": [[627, "skbio-stats-distance-distancematrix-getitem"]], "skbio.stats.distance.DistanceMatrix.__getstate__": [[628, "skbio-stats-distance-distancematrix-getstate"]], "skbio.stats.distance.DistanceMatrix.__gt__": [[629, "skbio-stats-distance-distancematrix-gt"]], "skbio.stats.distance.DistanceMatrix.__le__": [[630, "skbio-stats-distance-distancematrix-le"]], "skbio.stats.distance.DistanceMatrix.__lt__": [[631, "skbio-stats-distance-distancematrix-lt"]], "skbio.stats.distance.DistanceMatrix.__ne__": [[632, "skbio-stats-distance-distancematrix-ne"]], "skbio.stats.distance.DistanceMatrix.__str__": [[633, "skbio-stats-distance-distancematrix-str"]], "skbio.stats.distance.DistanceMatrix.between": [[634, "skbio-stats-distance-distancematrix-between"]], "skbio.stats.distance.DistanceMatrix.condensed_form": [[635, "skbio-stats-distance-distancematrix-condensed-form"]], "skbio.stats.distance.DistanceMatrix.copy": [[636, "skbio-stats-distance-distancematrix-copy"]], "skbio.stats.distance.DistanceMatrix.filter": [[637, "skbio-stats-distance-distancematrix-filter"]], "skbio.stats.distance.DistanceMatrix.from_iterable": [[638, "skbio-stats-distance-distancematrix-from-iterable"]], "skbio.stats.distance.DistanceMatrix.index": [[639, "skbio-stats-distance-distancematrix-index"]], "skbio.stats.distance.DistanceMatrix.permute": [[640, "skbio-stats-distance-distancematrix-permute"]], "skbio.stats.distance.DistanceMatrix.plot": [[641, "skbio-stats-distance-distancematrix-plot"]], "skbio.stats.distance.DistanceMatrix.read": [[642, "skbio-stats-distance-distancematrix-read"]], "skbio.stats.distance.DistanceMatrix.redundant_form": [[643, "skbio-stats-distance-distancematrix-redundant-form"]], "skbio.stats.distance.DistanceMatrix.to_data_frame": [[644, "skbio-stats-distance-distancematrix-to-data-frame"]], "skbio.stats.distance.DistanceMatrix.to_series": [[645, "skbio-stats-distance-distancematrix-to-series"]], "skbio.stats.distance.DistanceMatrix.transpose": [[646, "skbio-stats-distance-distancematrix-transpose"]], "skbio.stats.distance.DistanceMatrix.within": [[647, "skbio-stats-distance-distancematrix-within"]], "skbio.stats.distance.DistanceMatrix.write": [[648, "skbio-stats-distance-distancematrix-write"]], "skbio.stats.distance.anosim": [[649, "skbio-stats-distance-anosim"]], "skbio.stats.distance.bioenv": [[650, "skbio-stats-distance-bioenv"]], "skbio.stats.distance.mantel": [[651, "skbio-stats-distance-mantel"]], "skbio.stats.distance.permanova": [[652, "skbio-stats-distance-permanova"]], "skbio.stats.distance.permdisp": [[653, "skbio-stats-distance-permdisp"]], "skbio.stats.distance.pwmantel": [[654, "skbio-stats-distance-pwmantel"]], "skbio.stats.distance.randdm": [[655, "skbio-stats-distance-randdm"]], "skbio.stats.evolve.hommola_cospeciation": [[657, "skbio-stats-evolve-hommola-cospeciation"]], "skbio.stats.gradient.AverageGradientANOVA": [[659, "skbio-stats-gradient-averagegradientanova"]], "skbio.stats.gradient.AverageGradientANOVA.__eq__": [[660, "skbio-stats-gradient-averagegradientanova-eq"]], "skbio.stats.gradient.AverageGradientANOVA.__ge__": [[661, "skbio-stats-gradient-averagegradientanova-ge"]], "skbio.stats.gradient.AverageGradientANOVA.__getstate__": [[662, "skbio-stats-gradient-averagegradientanova-getstate"]], "skbio.stats.gradient.AverageGradientANOVA.__gt__": [[663, "skbio-stats-gradient-averagegradientanova-gt"]], "skbio.stats.gradient.AverageGradientANOVA.__hash__": [[664, "skbio-stats-gradient-averagegradientanova-hash"]], "skbio.stats.gradient.AverageGradientANOVA.__le__": [[665, "skbio-stats-gradient-averagegradientanova-le"]], "skbio.stats.gradient.AverageGradientANOVA.__lt__": [[666, "skbio-stats-gradient-averagegradientanova-lt"]], "skbio.stats.gradient.AverageGradientANOVA.__ne__": [[667, "skbio-stats-gradient-averagegradientanova-ne"]], "skbio.stats.gradient.AverageGradientANOVA.__str__": [[668, "skbio-stats-gradient-averagegradientanova-str"]], "skbio.stats.gradient.AverageGradientANOVA.get_trajectories": [[669, "skbio-stats-gradient-averagegradientanova-get-trajectories"]], "skbio.stats.gradient.CategoryResults": [[670, "skbio-stats-gradient-categoryresults"]], "skbio.stats.gradient.CategoryResults.__eq__": [[671, "skbio-stats-gradient-categoryresults-eq"]], "skbio.stats.gradient.CategoryResults.__ge__": [[672, "skbio-stats-gradient-categoryresults-ge"]], "skbio.stats.gradient.CategoryResults.__getstate__": [[673, "skbio-stats-gradient-categoryresults-getstate"]], "skbio.stats.gradient.CategoryResults.__gt__": [[674, "skbio-stats-gradient-categoryresults-gt"]], "skbio.stats.gradient.CategoryResults.__hash__": [[675, "skbio-stats-gradient-categoryresults-hash"]], "skbio.stats.gradient.CategoryResults.__le__": [[676, "skbio-stats-gradient-categoryresults-le"]], "skbio.stats.gradient.CategoryResults.__lt__": [[677, "skbio-stats-gradient-categoryresults-lt"]], "skbio.stats.gradient.CategoryResults.__ne__": [[678, "skbio-stats-gradient-categoryresults-ne"]], "skbio.stats.gradient.CategoryResults.__str__": [[679, "skbio-stats-gradient-categoryresults-str"]], "skbio.stats.gradient.CategoryResults.to_files": [[680, "skbio-stats-gradient-categoryresults-to-files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[681, "skbio-stats-gradient-firstdifferencegradientanova"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__": [[682, "skbio-stats-gradient-firstdifferencegradientanova-eq"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__": [[683, "skbio-stats-gradient-firstdifferencegradientanova-ge"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__": [[684, "skbio-stats-gradient-firstdifferencegradientanova-getstate"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__": [[685, "skbio-stats-gradient-firstdifferencegradientanova-gt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__": [[686, "skbio-stats-gradient-firstdifferencegradientanova-hash"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__": [[687, "skbio-stats-gradient-firstdifferencegradientanova-le"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__": [[688, "skbio-stats-gradient-firstdifferencegradientanova-lt"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__": [[689, "skbio-stats-gradient-firstdifferencegradientanova-ne"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__": [[690, "skbio-stats-gradient-firstdifferencegradientanova-str"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories": [[691, "skbio-stats-gradient-firstdifferencegradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVA": [[692, "skbio-stats-gradient-gradientanova"]], "skbio.stats.gradient.GradientANOVA.__eq__": [[693, "skbio-stats-gradient-gradientanova-eq"]], "skbio.stats.gradient.GradientANOVA.__ge__": [[694, "skbio-stats-gradient-gradientanova-ge"]], "skbio.stats.gradient.GradientANOVA.__getstate__": [[695, "skbio-stats-gradient-gradientanova-getstate"]], "skbio.stats.gradient.GradientANOVA.__gt__": [[696, "skbio-stats-gradient-gradientanova-gt"]], "skbio.stats.gradient.GradientANOVA.__hash__": [[697, "skbio-stats-gradient-gradientanova-hash"]], "skbio.stats.gradient.GradientANOVA.__le__": [[698, "skbio-stats-gradient-gradientanova-le"]], "skbio.stats.gradient.GradientANOVA.__lt__": [[699, "skbio-stats-gradient-gradientanova-lt"]], "skbio.stats.gradient.GradientANOVA.__ne__": [[700, "skbio-stats-gradient-gradientanova-ne"]], "skbio.stats.gradient.GradientANOVA.__str__": [[701, "skbio-stats-gradient-gradientanova-str"]], "skbio.stats.gradient.GradientANOVA.get_trajectories": [[702, "skbio-stats-gradient-gradientanova-get-trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[703, "skbio-stats-gradient-gradientanovaresults"]], "skbio.stats.gradient.GradientANOVAResults.__eq__": [[704, "skbio-stats-gradient-gradientanovaresults-eq"]], "skbio.stats.gradient.GradientANOVAResults.__ge__": [[705, "skbio-stats-gradient-gradientanovaresults-ge"]], "skbio.stats.gradient.GradientANOVAResults.__getstate__": [[706, "skbio-stats-gradient-gradientanovaresults-getstate"]], "skbio.stats.gradient.GradientANOVAResults.__gt__": [[707, "skbio-stats-gradient-gradientanovaresults-gt"]], "skbio.stats.gradient.GradientANOVAResults.__hash__": [[708, "skbio-stats-gradient-gradientanovaresults-hash"]], "skbio.stats.gradient.GradientANOVAResults.__le__": [[709, "skbio-stats-gradient-gradientanovaresults-le"]], "skbio.stats.gradient.GradientANOVAResults.__lt__": [[710, "skbio-stats-gradient-gradientanovaresults-lt"]], "skbio.stats.gradient.GradientANOVAResults.__ne__": [[711, "skbio-stats-gradient-gradientanovaresults-ne"]], "skbio.stats.gradient.GradientANOVAResults.__str__": [[712, "skbio-stats-gradient-gradientanovaresults-str"]], "skbio.stats.gradient.GradientANOVAResults.to_files": [[713, "skbio-stats-gradient-gradientanovaresults-to-files"]], "skbio.stats.gradient.GroupResults": [[714, "skbio-stats-gradient-groupresults"]], "skbio.stats.gradient.GroupResults.__eq__": [[715, "skbio-stats-gradient-groupresults-eq"]], "skbio.stats.gradient.GroupResults.__ge__": [[716, "skbio-stats-gradient-groupresults-ge"]], "skbio.stats.gradient.GroupResults.__getstate__": [[717, "skbio-stats-gradient-groupresults-getstate"]], "skbio.stats.gradient.GroupResults.__gt__": [[718, "skbio-stats-gradient-groupresults-gt"]], "skbio.stats.gradient.GroupResults.__hash__": [[719, "skbio-stats-gradient-groupresults-hash"]], "skbio.stats.gradient.GroupResults.__le__": [[720, "skbio-stats-gradient-groupresults-le"]], "skbio.stats.gradient.GroupResults.__lt__": [[721, "skbio-stats-gradient-groupresults-lt"]], "skbio.stats.gradient.GroupResults.__ne__": [[722, "skbio-stats-gradient-groupresults-ne"]], "skbio.stats.gradient.GroupResults.__str__": [[723, "skbio-stats-gradient-groupresults-str"]], "skbio.stats.gradient.GroupResults.to_files": [[724, "skbio-stats-gradient-groupresults-to-files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[725, "skbio-stats-gradient-trajectorygradientanova"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__": [[726, "skbio-stats-gradient-trajectorygradientanova-eq"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__": [[727, "skbio-stats-gradient-trajectorygradientanova-ge"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__": [[728, "skbio-stats-gradient-trajectorygradientanova-getstate"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__": [[729, "skbio-stats-gradient-trajectorygradientanova-gt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__": [[730, "skbio-stats-gradient-trajectorygradientanova-hash"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__le__": [[731, "skbio-stats-gradient-trajectorygradientanova-le"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__": [[732, "skbio-stats-gradient-trajectorygradientanova-lt"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__": [[733, "skbio-stats-gradient-trajectorygradientanova-ne"]], "skbio.stats.gradient.TrajectoryGradientANOVA.__str__": [[734, "skbio-stats-gradient-trajectorygradientanova-str"]], "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories": [[735, "skbio-stats-gradient-trajectorygradientanova-get-trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[736, "skbio-stats-gradient-windowdifferencegradientanova"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__": [[737, "skbio-stats-gradient-windowdifferencegradientanova-eq"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__": [[738, "skbio-stats-gradient-windowdifferencegradientanova-ge"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__": [[739, "skbio-stats-gradient-windowdifferencegradientanova-getstate"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__": [[740, "skbio-stats-gradient-windowdifferencegradientanova-gt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__": [[741, "skbio-stats-gradient-windowdifferencegradientanova-hash"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__": [[742, "skbio-stats-gradient-windowdifferencegradientanova-le"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__": [[743, "skbio-stats-gradient-windowdifferencegradientanova-lt"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__": [[744, "skbio-stats-gradient-windowdifferencegradientanova-ne"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__": [[745, "skbio-stats-gradient-windowdifferencegradientanova-str"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories": [[746, "skbio-stats-gradient-windowdifferencegradientanova-get-trajectories"]], "skbio.stats.isubsample": [[747, "skbio-stats-isubsample"]], "skbio.stats.ordination.OrdinationResults": [[749, "skbio-stats-ordination-ordinationresults"]], "skbio.stats.ordination.OrdinationResults.__eq__": [[750, "skbio-stats-ordination-ordinationresults-eq"]], "skbio.stats.ordination.OrdinationResults.__ge__": [[751, "skbio-stats-ordination-ordinationresults-ge"]], "skbio.stats.ordination.OrdinationResults.__getstate__": [[752, "skbio-stats-ordination-ordinationresults-getstate"]], "skbio.stats.ordination.OrdinationResults.__gt__": [[753, "skbio-stats-ordination-ordinationresults-gt"]], "skbio.stats.ordination.OrdinationResults.__hash__": [[754, "skbio-stats-ordination-ordinationresults-hash"]], "skbio.stats.ordination.OrdinationResults.__le__": [[755, "skbio-stats-ordination-ordinationresults-le"]], "skbio.stats.ordination.OrdinationResults.__lt__": [[756, "skbio-stats-ordination-ordinationresults-lt"]], "skbio.stats.ordination.OrdinationResults.__ne__": [[757, "skbio-stats-ordination-ordinationresults-ne"]], "skbio.stats.ordination.OrdinationResults.__str__": [[758, "skbio-stats-ordination-ordinationresults-str"]], "skbio.stats.ordination.OrdinationResults.plot": [[759, "skbio-stats-ordination-ordinationresults-plot"]], "skbio.stats.ordination.OrdinationResults.read": [[760, "skbio-stats-ordination-ordinationresults-read"]], "skbio.stats.ordination.OrdinationResults.write": [[761, "skbio-stats-ordination-ordinationresults-write"]], "skbio.stats.ordination.ca": [[762, "skbio-stats-ordination-ca"]], "skbio.stats.ordination.cca": [[763, "skbio-stats-ordination-cca"]], "skbio.stats.ordination.corr": [[764, "skbio-stats-ordination-corr"]], "skbio.stats.ordination.e_matrix": [[765, "skbio-stats-ordination-e-matrix"]], "skbio.stats.ordination.f_matrix": [[766, "skbio-stats-ordination-f-matrix"]], "skbio.stats.ordination.mean_and_std": [[767, "skbio-stats-ordination-mean-and-std"]], "skbio.stats.ordination.pcoa": [[768, "skbio-stats-ordination-pcoa"]], "skbio.stats.ordination.pcoa_biplot": [[769, "skbio-stats-ordination-pcoa-biplot"]], "skbio.stats.ordination.rda": [[770, "skbio-stats-ordination-rda"]], "skbio.stats.ordination.scale": [[771, "skbio-stats-ordination-scale"]], "skbio.stats.ordination.svd_rank": [[772, "skbio-stats-ordination-svd-rank"]], "skbio.stats.power.confidence_bound": [[774, "skbio-stats-power-confidence-bound"]], "skbio.stats.power.paired_subsamples": [[775, "skbio-stats-power-paired-subsamples"]], "skbio.stats.power.subsample_paired_power": [[776, "skbio-stats-power-subsample-paired-power"]], "skbio.stats.power.subsample_power": [[777, "skbio-stats-power-subsample-power"]], "skbio.stats.subsample_counts": [[778, "skbio-stats-subsample-counts"]], "skbio.table.Table": [[779, "skbio-table-table"]], "skbio.table.Table.__eq__": [[780, "skbio-table-table-eq"]], "skbio.table.Table.__ge__": [[781, "skbio-table-table-ge"]], "skbio.table.Table.__getitem__": [[782, "skbio-table-table-getitem"]], "skbio.table.Table.__getstate__": [[783, "skbio-table-table-getstate"]], "skbio.table.Table.__gt__": [[784, "skbio-table-table-gt"]], "skbio.table.Table.__iter__": [[785, "skbio-table-table-iter"]], "skbio.table.Table.__le__": [[786, "skbio-table-table-le"]], "skbio.table.Table.__lt__": [[787, "skbio-table-table-lt"]], "skbio.table.Table.__ne__": [[788, "skbio-table-table-ne"]], "skbio.table.Table.__str__": [[789, "skbio-table-table-str"]], "skbio.table.Table.add_group_metadata": [[790, "skbio-table-table-add-group-metadata"]], "skbio.table.Table.add_metadata": [[791, "skbio-table-table-add-metadata"]], "skbio.table.Table.align_to": [[792, "skbio-table-table-align-to"]], "skbio.table.Table.align_to_dataframe": [[793, "skbio-table-table-align-to-dataframe"]], "skbio.table.Table.align_tree": [[794, "skbio-table-table-align-tree"]], "skbio.table.Table.collapse": [[795, "skbio-table-table-collapse"]], "skbio.table.Table.concat": [[796, "skbio-table-table-concat"]], "skbio.table.Table.copy": [[797, "skbio-table-table-copy"]], "skbio.table.Table.data": [[798, "skbio-table-table-data"]], "skbio.table.Table.del_metadata": [[799, "skbio-table-table-del-metadata"]], "skbio.table.Table.delimited_self": [[800, "skbio-table-table-delimited-self"]], "skbio.table.Table.descriptive_equality": [[801, "skbio-table-table-descriptive-equality"]], "skbio.table.Table.exists": [[802, "skbio-table-table-exists"]], "skbio.table.Table.filter": [[803, "skbio-table-table-filter"]], "skbio.table.Table.from_adjacency": [[804, "skbio-table-table-from-adjacency"]], "skbio.table.Table.from_hdf5": [[805, "skbio-table-table-from-hdf5"]], "skbio.table.Table.from_json": [[806, "skbio-table-table-from-json"]], "skbio.table.Table.from_tsv": [[807, "skbio-table-table-from-tsv"]], "skbio.table.Table.get_table_density": [[808, "skbio-table-table-get-table-density"]], "skbio.table.Table.get_value_by_ids": [[809, "skbio-table-table-get-value-by-ids"]], "skbio.table.Table.group_metadata": [[810, "skbio-table-table-group-metadata"]], "skbio.table.Table.head": [[811, "skbio-table-table-head"]], "skbio.table.Table.ids": [[812, "skbio-table-table-ids"]], "skbio.table.Table.index": [[813, "skbio-table-table-index"]], "skbio.table.Table.is_empty": [[814, "skbio-table-table-is-empty"]], "skbio.table.Table.iter": [[815, "skbio-table-table-iter"]], "skbio.table.Table.iter_data": [[816, "skbio-table-table-iter-data"]], "skbio.table.Table.iter_pairwise": [[817, "skbio-table-table-iter-pairwise"]], "skbio.table.Table.length": [[818, "skbio-table-table-length"]], "skbio.table.Table.max": [[819, "skbio-table-table-max"]], "skbio.table.Table.merge": [[820, "skbio-table-table-merge"]], "skbio.table.Table.metadata": [[821, "skbio-table-table-metadata"]], "skbio.table.Table.metadata_to_dataframe": [[822, "skbio-table-table-metadata-to-dataframe"]], "skbio.table.Table.min": [[823, "skbio-table-table-min"]], "skbio.table.Table.nonzero": [[824, "skbio-table-table-nonzero"]], "skbio.table.Table.nonzero_counts": [[825, "skbio-table-table-nonzero-counts"]], "skbio.table.Table.norm": [[826, "skbio-table-table-norm"]], "skbio.table.Table.pa": [[827, "skbio-table-table-pa"]], "skbio.table.Table.partition": [[828, "skbio-table-table-partition"]], "skbio.table.Table.rankdata": [[829, "skbio-table-table-rankdata"]], "skbio.table.Table.read": [[830, "skbio-table-table-read"]], "skbio.table.Table.reduce": [[831, "skbio-table-table-reduce"]], "skbio.table.Table.remove_empty": [[832, "skbio-table-table-remove-empty"]], "skbio.table.Table.sort": [[833, "skbio-table-table-sort"]], "skbio.table.Table.sort_order": [[834, "skbio-table-table-sort-order"]], "skbio.table.Table.subsample": [[835, "skbio-table-table-subsample"]], "skbio.table.Table.sum": [[836, "skbio-table-table-sum"]], "skbio.table.Table.to_anndata": [[837, "skbio-table-table-to-anndata"]], "skbio.table.Table.to_dataframe": [[838, "skbio-table-table-to-dataframe"]], "skbio.table.Table.to_hdf5": [[839, "skbio-table-table-to-hdf5"]], "skbio.table.Table.to_json": [[840, "skbio-table-table-to-json"]], "skbio.table.Table.to_tsv": [[841, "skbio-table-table-to-tsv"]], "skbio.table.Table.transform": [[842, "skbio-table-table-transform"]], "skbio.table.Table.transpose": [[843, "skbio-table-table-transpose"]], "skbio.table.Table.update_ids": [[844, "skbio-table-table-update-ids"]], "skbio.table.Table.write": [[845, "skbio-table-table-write"]], "skbio.table.example_table": [[846, "skbio-table-example-table"]], "skbio.tree.TreeNode": [[847, "skbio-tree-treenode"]], "skbio.tree.TreeNode.__copy__": [[848, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.__deepcopy__": [[849, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.__eq__": [[850, "skbio-tree-treenode-eq"]], "skbio.tree.TreeNode.__ge__": [[851, "skbio-tree-treenode-ge"]], "skbio.tree.TreeNode.__getitem__": [[852, "skbio-tree-treenode-getitem"]], "skbio.tree.TreeNode.__getstate__": [[853, "skbio-tree-treenode-getstate"]], "skbio.tree.TreeNode.__gt__": [[854, "skbio-tree-treenode-gt"]], "skbio.tree.TreeNode.__hash__": [[855, "skbio-tree-treenode-hash"]], "skbio.tree.TreeNode.__iter__": [[856, "skbio-tree-treenode-iter"]], "skbio.tree.TreeNode.__le__": [[857, "skbio-tree-treenode-le"]], "skbio.tree.TreeNode.__len__": [[858, "skbio-tree-treenode-len"]], "skbio.tree.TreeNode.__lt__": [[859, "skbio-tree-treenode-lt"]], "skbio.tree.TreeNode.__ne__": [[860, "skbio-tree-treenode-ne"]], "skbio.tree.TreeNode.__str__": [[861, "skbio-tree-treenode-str"]], "skbio.tree.TreeNode.accumulate_to_ancestor": [[862, "skbio-tree-treenode-accumulate-to-ancestor"]], "skbio.tree.TreeNode.ancestors": [[863, "skbio-tree-treenode-ancestors"]], "skbio.tree.TreeNode.append": [[864, "skbio-tree-treenode-append"]], "skbio.tree.TreeNode.ascii_art": [[865, "skbio-tree-treenode-ascii-art"]], "skbio.tree.TreeNode.assign_ids": [[866, "skbio-tree-treenode-assign-ids"]], "skbio.tree.TreeNode.assign_supports": [[867, "skbio-tree-treenode-assign-supports"]], "skbio.tree.TreeNode.bifurcate": [[868, "skbio-tree-treenode-bifurcate"]], "skbio.tree.TreeNode.cache_attr": [[869, "skbio-tree-treenode-cache-attr"]], "skbio.tree.TreeNode.compare_rfd": [[870, "skbio-tree-treenode-compare-rfd"]], "skbio.tree.TreeNode.compare_subsets": [[871, "skbio-tree-treenode-compare-subsets"]], "skbio.tree.TreeNode.compare_tip_distances": [[872, "skbio-tree-treenode-compare-tip-distances"]], "skbio.tree.TreeNode.copy": [[873, "skbio-tree-treenode-copy"]], "skbio.tree.TreeNode.count": [[874, "skbio-tree-treenode-count"]], "skbio.tree.TreeNode.create_caches": [[875, "skbio-tree-treenode-create-caches"]], "skbio.tree.TreeNode.deepcopy": [[876, "skbio-tree-treenode-deepcopy"]], "skbio.tree.TreeNode.descending_branch_length": [[877, "skbio-tree-treenode-descending-branch-length"]], "skbio.tree.TreeNode.distance": [[878, "skbio-tree-treenode-distance"]], "skbio.tree.TreeNode.extend": [[879, "skbio-tree-treenode-extend"]], "skbio.tree.TreeNode.find": [[880, "skbio-tree-treenode-find"]], "skbio.tree.TreeNode.find_all": [[881, "skbio-tree-treenode-find-all"]], "skbio.tree.TreeNode.find_by_func": [[882, "skbio-tree-treenode-find-by-func"]], "skbio.tree.TreeNode.find_by_id": [[883, "skbio-tree-treenode-find-by-id"]], "skbio.tree.TreeNode.from_linkage_matrix": [[884, "skbio-tree-treenode-from-linkage-matrix"]], "skbio.tree.TreeNode.from_taxdump": [[885, "skbio-tree-treenode-from-taxdump"]], "skbio.tree.TreeNode.from_taxonomy": [[886, "skbio-tree-treenode-from-taxonomy"]], "skbio.tree.TreeNode.get_max_distance": [[887, "skbio-tree-treenode-get-max-distance"]], "skbio.tree.TreeNode.has_children": [[888, "skbio-tree-treenode-has-children"]], "skbio.tree.TreeNode.index_tree": [[889, "skbio-tree-treenode-index-tree"]], "skbio.tree.TreeNode.invalidate_caches": [[890, "skbio-tree-treenode-invalidate-caches"]], "skbio.tree.TreeNode.is_root": [[891, "skbio-tree-treenode-is-root"]], "skbio.tree.TreeNode.is_tip": [[892, "skbio-tree-treenode-is-tip"]], "skbio.tree.TreeNode.lca": [[893, "skbio-tree-treenode-lca"]], "skbio.tree.TreeNode.levelorder": [[894, "skbio-tree-treenode-levelorder"]], "skbio.tree.TreeNode.lowest_common_ancestor": [[895, "skbio-tree-treenode-lowest-common-ancestor"]], "skbio.tree.TreeNode.neighbors": [[896, "skbio-tree-treenode-neighbors"]], "skbio.tree.TreeNode.non_tips": [[897, "skbio-tree-treenode-non-tips"]], "skbio.tree.TreeNode.observed_node_counts": [[898, "skbio-tree-treenode-observed-node-counts"]], "skbio.tree.TreeNode.pop": [[899, "skbio-tree-treenode-pop"]], "skbio.tree.TreeNode.postorder": [[900, "skbio-tree-treenode-postorder"]], "skbio.tree.TreeNode.pre_and_postorder": [[901, "skbio-tree-treenode-pre-and-postorder"]], "skbio.tree.TreeNode.preorder": [[902, "skbio-tree-treenode-preorder"]], "skbio.tree.TreeNode.prune": [[903, "skbio-tree-treenode-prune"]], "skbio.tree.TreeNode.read": [[904, "skbio-tree-treenode-read"]], "skbio.tree.TreeNode.remove": [[905, "skbio-tree-treenode-remove"]], "skbio.tree.TreeNode.remove_deleted": [[906, "skbio-tree-treenode-remove-deleted"]], "skbio.tree.TreeNode.root": [[907, "skbio-tree-treenode-root"]], "skbio.tree.TreeNode.root_at": [[908, "skbio-tree-treenode-root-at"]], "skbio.tree.TreeNode.root_at_midpoint": [[909, "skbio-tree-treenode-root-at-midpoint"]], "skbio.tree.TreeNode.shear": [[910, "skbio-tree-treenode-shear"]], "skbio.tree.TreeNode.shuffle": [[911, "skbio-tree-treenode-shuffle"]], "skbio.tree.TreeNode.siblings": [[912, "skbio-tree-treenode-siblings"]], "skbio.tree.TreeNode.subset": [[913, "skbio-tree-treenode-subset"]], "skbio.tree.TreeNode.subsets": [[914, "skbio-tree-treenode-subsets"]], "skbio.tree.TreeNode.subtree": [[915, "skbio-tree-treenode-subtree"]], "skbio.tree.TreeNode.tip_tip_distances": [[916, "skbio-tree-treenode-tip-tip-distances"]], "skbio.tree.TreeNode.tips": [[917, "skbio-tree-treenode-tips"]], "skbio.tree.TreeNode.to_array": [[918, "skbio-tree-treenode-to-array"]], "skbio.tree.TreeNode.to_taxonomy": [[919, "skbio-tree-treenode-to-taxonomy"]], "skbio.tree.TreeNode.traverse": [[920, "skbio-tree-treenode-traverse"]], "skbio.tree.TreeNode.unpack": [[921, "skbio-tree-treenode-unpack"]], "skbio.tree.TreeNode.unpack_by_func": [[922, "skbio-tree-treenode-unpack-by-func"]], "skbio.tree.TreeNode.unrooted_copy": [[923, "skbio-tree-treenode-unrooted-copy"]], "skbio.tree.TreeNode.unrooted_deepcopy": [[924, "skbio-tree-treenode-unrooted-deepcopy"]], "skbio.tree.TreeNode.write": [[925, "skbio-tree-treenode-write"]], "skbio.tree.majority_rule": [[926, "skbio-tree-majority-rule"]], "skbio.tree.nj": [[927, "skbio-tree-nj"]], "skbio.util.EfficiencyWarning": [[928, "skbio-util-efficiencywarning"]], "skbio.util.RepresentationWarning": [[929, "skbio-util-representationwarning"]], "skbio.util.assert_data_frame_almost_equal": [[930, "skbio-util-assert-data-frame-almost-equal"]], "skbio.util.assert_ordination_results_equal": [[931, "skbio-util-assert-ordination-results-equal"]], "skbio.util.cardinal_to_ordinal": [[932, "skbio-util-cardinal-to-ordinal"]], "skbio.util.classproperty": [[933, "skbio-util-classproperty"]], "skbio.util.classproperty.__delete__": [[934, "skbio-util-classproperty-delete"]], "skbio.util.classproperty.__eq__": [[935, "skbio-util-classproperty-eq"]], "skbio.util.classproperty.__ge__": [[936, "skbio-util-classproperty-ge"]], "skbio.util.classproperty.__get__": [[937, "skbio-util-classproperty-get"]], "skbio.util.classproperty.__getstate__": [[938, "skbio-util-classproperty-getstate"]], "skbio.util.classproperty.__gt__": [[939, "skbio-util-classproperty-gt"]], "skbio.util.classproperty.__hash__": [[940, "skbio-util-classproperty-hash"]], "skbio.util.classproperty.__le__": [[941, "skbio-util-classproperty-le"]], "skbio.util.classproperty.__lt__": [[942, "skbio-util-classproperty-lt"]], "skbio.util.classproperty.__ne__": [[943, "skbio-util-classproperty-ne"]], "skbio.util.classproperty.__set__": [[944, "skbio-util-classproperty-set"]], "skbio.util.classproperty.__set_name__": [[945, "skbio-util-classproperty-set-name"]], "skbio.util.classproperty.__str__": [[946, "skbio-util-classproperty-str"]], "skbio.util.classproperty.deleter": [[947, "skbio-util-classproperty-deleter"]], "skbio.util.classproperty.getter": [[948, "skbio-util-classproperty-getter"]], "skbio.util.classproperty.setter": [[949, "skbio-util-classproperty-setter"]], "skbio.util.find_duplicates": [[950, "skbio-util-find-duplicates"]], "skbio.util.get_data_path": [[951, "skbio-util-get-data-path"]], "skbio.util.safe_md5": [[952, "skbio-util-safe-md5"]], "skbio.workflow.Workflow": [[953, "skbio-workflow-workflow"]], "skbio.workflow.Workflow.__call__": [[954, "skbio-workflow-workflow-call"]], "skbio.workflow.Workflow.__eq__": [[955, "skbio-workflow-workflow-eq"]], "skbio.workflow.Workflow.__ge__": [[956, "skbio-workflow-workflow-ge"]], "skbio.workflow.Workflow.__getstate__": [[957, "skbio-workflow-workflow-getstate"]], "skbio.workflow.Workflow.__gt__": [[958, "skbio-workflow-workflow-gt"]], "skbio.workflow.Workflow.__hash__": [[959, "skbio-workflow-workflow-hash"]], "skbio.workflow.Workflow.__le__": [[960, "skbio-workflow-workflow-le"]], "skbio.workflow.Workflow.__lt__": [[961, "skbio-workflow-workflow-lt"]], "skbio.workflow.Workflow.__ne__": [[962, "skbio-workflow-workflow-ne"]], "skbio.workflow.Workflow.__str__": [[963, "skbio-workflow-workflow-str"]], "skbio.workflow.Workflow.initialize_state": [[964, "skbio-workflow-workflow-initialize-state"]], "skbio.workflow.method": [[965, "skbio-workflow-method"]], "skbio.workflow.method.__call__": [[966, "skbio-workflow-method-call"]], "skbio.workflow.method.__eq__": [[967, "skbio-workflow-method-eq"]], "skbio.workflow.method.__ge__": [[968, "skbio-workflow-method-ge"]], "skbio.workflow.method.__getstate__": [[969, "skbio-workflow-method-getstate"]], "skbio.workflow.method.__gt__": [[970, "skbio-workflow-method-gt"]], "skbio.workflow.method.__hash__": [[971, "skbio-workflow-method-hash"]], "skbio.workflow.method.__le__": [[972, "skbio-workflow-method-le"]], "skbio.workflow.method.__lt__": [[973, "skbio-workflow-method-lt"]], "skbio.workflow.method.__ne__": [[974, "skbio-workflow-method-ne"]], "skbio.workflow.method.__str__": [[975, "skbio-workflow-method-str"]], "skbio.workflow.requires": [[976, "skbio-workflow-requires"]], "skbio.workflow.requires.__call__": [[977, "skbio-workflow-requires-call"]], "skbio.workflow.requires.__eq__": [[978, "skbio-workflow-requires-eq"]], "skbio.workflow.requires.__ge__": [[979, "skbio-workflow-requires-ge"]], "skbio.workflow.requires.__getstate__": [[980, "skbio-workflow-requires-getstate"]], "skbio.workflow.requires.__gt__": [[981, "skbio-workflow-requires-gt"]], "skbio.workflow.requires.__hash__": [[982, "skbio-workflow-requires-hash"]], "skbio.workflow.requires.__le__": [[983, "skbio-workflow-requires-le"]], "skbio.workflow.requires.__lt__": [[984, "skbio-workflow-requires-lt"]], "skbio.workflow.requires.__ne__": [[985, "skbio-workflow-requires-ne"]], "skbio.workflow.requires.__str__": [[986, "skbio-workflow-requires-str"]]}, "docnames": ["alignment", "diversity", "generated/skbio.alignment.AlignmentStructure", "generated/skbio.alignment.AlignmentStructure.__eq__", "generated/skbio.alignment.AlignmentStructure.__ge__", "generated/skbio.alignment.AlignmentStructure.__getitem__", "generated/skbio.alignment.AlignmentStructure.__getstate__", "generated/skbio.alignment.AlignmentStructure.__gt__", "generated/skbio.alignment.AlignmentStructure.__hash__", "generated/skbio.alignment.AlignmentStructure.__le__", "generated/skbio.alignment.AlignmentStructure.__lt__", "generated/skbio.alignment.AlignmentStructure.__ne__", "generated/skbio.alignment.AlignmentStructure.__setstate__", "generated/skbio.alignment.AlignmentStructure.__str__", "generated/skbio.alignment.AlignmentStructure.is_zero_based", "generated/skbio.alignment.AlignmentStructure.set_zero_based", "generated/skbio.alignment.StripedSmithWaterman", "generated/skbio.alignment.StripedSmithWaterman.__call__", "generated/skbio.alignment.StripedSmithWaterman.__eq__", "generated/skbio.alignment.StripedSmithWaterman.__ge__", "generated/skbio.alignment.StripedSmithWaterman.__getstate__", "generated/skbio.alignment.StripedSmithWaterman.__gt__", "generated/skbio.alignment.StripedSmithWaterman.__hash__", "generated/skbio.alignment.StripedSmithWaterman.__le__", "generated/skbio.alignment.StripedSmithWaterman.__lt__", "generated/skbio.alignment.StripedSmithWaterman.__ne__", "generated/skbio.alignment.StripedSmithWaterman.__setstate__", "generated/skbio.alignment.StripedSmithWaterman.__str__", "generated/skbio.alignment.TabularMSA", "generated/skbio.alignment.TabularMSA.__bool__", "generated/skbio.alignment.TabularMSA.__contains__", "generated/skbio.alignment.TabularMSA.__copy__", "generated/skbio.alignment.TabularMSA.__deepcopy__", "generated/skbio.alignment.TabularMSA.__eq__", "generated/skbio.alignment.TabularMSA.__ge__", "generated/skbio.alignment.TabularMSA.__getitem__", "generated/skbio.alignment.TabularMSA.__getstate__", "generated/skbio.alignment.TabularMSA.__gt__", "generated/skbio.alignment.TabularMSA.__iter__", "generated/skbio.alignment.TabularMSA.__le__", "generated/skbio.alignment.TabularMSA.__len__", "generated/skbio.alignment.TabularMSA.__lt__", "generated/skbio.alignment.TabularMSA.__ne__", "generated/skbio.alignment.TabularMSA.__reversed__", "generated/skbio.alignment.TabularMSA.__str__", "generated/skbio.alignment.TabularMSA.append", "generated/skbio.alignment.TabularMSA.consensus", "generated/skbio.alignment.TabularMSA.conservation", "generated/skbio.alignment.TabularMSA.extend", "generated/skbio.alignment.TabularMSA.from_dict", "generated/skbio.alignment.TabularMSA.gap_frequencies", "generated/skbio.alignment.TabularMSA.has_metadata", "generated/skbio.alignment.TabularMSA.has_positional_metadata", "generated/skbio.alignment.TabularMSA.iter_positions", "generated/skbio.alignment.TabularMSA.join", "generated/skbio.alignment.TabularMSA.read", "generated/skbio.alignment.TabularMSA.reassign_index", "generated/skbio.alignment.TabularMSA.sort", "generated/skbio.alignment.TabularMSA.to_dict", "generated/skbio.alignment.TabularMSA.write", "generated/skbio.alignment.global_pairwise_align", "generated/skbio.alignment.global_pairwise_align_nucleotide", "generated/skbio.alignment.global_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align", "generated/skbio.alignment.local_pairwise_align_nucleotide", "generated/skbio.alignment.local_pairwise_align_protein", "generated/skbio.alignment.local_pairwise_align_ssw", "generated/skbio.alignment.make_identity_substitution_matrix", "generated/skbio.diversity.alpha", "generated/skbio.diversity.alpha.ace", "generated/skbio.diversity.alpha.berger_parker_d", "generated/skbio.diversity.alpha.brillouin_d", "generated/skbio.diversity.alpha.chao1", "generated/skbio.diversity.alpha.chao1_ci", "generated/skbio.diversity.alpha.dominance", "generated/skbio.diversity.alpha.doubles", "generated/skbio.diversity.alpha.enspie", "generated/skbio.diversity.alpha.esty_ci", "generated/skbio.diversity.alpha.faith_pd", "generated/skbio.diversity.alpha.fisher_alpha", "generated/skbio.diversity.alpha.gini_index", "generated/skbio.diversity.alpha.goods_coverage", "generated/skbio.diversity.alpha.heip_e", "generated/skbio.diversity.alpha.kempton_taylor_q", "generated/skbio.diversity.alpha.lladser_ci", "generated/skbio.diversity.alpha.lladser_pe", "generated/skbio.diversity.alpha.margalef", "generated/skbio.diversity.alpha.mcintosh_d", "generated/skbio.diversity.alpha.mcintosh_e", "generated/skbio.diversity.alpha.menhinick", "generated/skbio.diversity.alpha.michaelis_menten_fit", "generated/skbio.diversity.alpha.observed_features", "generated/skbio.diversity.alpha.observed_otus", "generated/skbio.diversity.alpha.osd", "generated/skbio.diversity.alpha.phydiv", "generated/skbio.diversity.alpha.pielou_e", "generated/skbio.diversity.alpha.robbins", "generated/skbio.diversity.alpha.shannon", "generated/skbio.diversity.alpha.simpson", "generated/skbio.diversity.alpha.simpson_e", "generated/skbio.diversity.alpha.singles", "generated/skbio.diversity.alpha.sobs", "generated/skbio.diversity.alpha.strong", "generated/skbio.diversity.alpha_diversity", "generated/skbio.diversity.beta", "generated/skbio.diversity.beta.unweighted_unifrac", "generated/skbio.diversity.beta.weighted_unifrac", "generated/skbio.diversity.beta_diversity", "generated/skbio.diversity.block_beta_diversity", "generated/skbio.diversity.get_alpha_diversity_metrics", "generated/skbio.diversity.get_beta_diversity_metrics", "generated/skbio.diversity.partial_beta_diversity", "generated/skbio.io.format.binary_dm", "generated/skbio.io.format.biom", "generated/skbio.io.format.blast6", "generated/skbio.io.format.blast7", "generated/skbio.io.format.clustal", "generated/skbio.io.format.embl", "generated/skbio.io.format.fasta", "generated/skbio.io.format.fastq", "generated/skbio.io.format.genbank", "generated/skbio.io.format.gff3", "generated/skbio.io.format.lsmat", "generated/skbio.io.format.newick", "generated/skbio.io.format.ordination", "generated/skbio.io.format.phylip", "generated/skbio.io.format.qseq", "generated/skbio.io.format.sample_metadata", "generated/skbio.io.format.stockholm", "generated/skbio.io.format.taxdump", "generated/skbio.io.registry", "generated/skbio.io.registry.Format", "generated/skbio.io.registry.Format.__eq__", "generated/skbio.io.registry.Format.__ge__", "generated/skbio.io.registry.Format.__getstate__", "generated/skbio.io.registry.Format.__gt__", "generated/skbio.io.registry.Format.__hash__", "generated/skbio.io.registry.Format.__le__", "generated/skbio.io.registry.Format.__lt__", "generated/skbio.io.registry.Format.__ne__", "generated/skbio.io.registry.Format.__str__", "generated/skbio.io.registry.Format.reader", "generated/skbio.io.registry.Format.sniffer", "generated/skbio.io.registry.Format.writer", "generated/skbio.io.registry.IORegistry", "generated/skbio.io.registry.IORegistry.__eq__", "generated/skbio.io.registry.IORegistry.__ge__", "generated/skbio.io.registry.IORegistry.__getstate__", "generated/skbio.io.registry.IORegistry.__gt__", "generated/skbio.io.registry.IORegistry.__hash__", "generated/skbio.io.registry.IORegistry.__le__", "generated/skbio.io.registry.IORegistry.__lt__", "generated/skbio.io.registry.IORegistry.__ne__", "generated/skbio.io.registry.IORegistry.__str__", "generated/skbio.io.registry.IORegistry.add_format", "generated/skbio.io.registry.IORegistry.create_format", "generated/skbio.io.registry.IORegistry.get_reader", "generated/skbio.io.registry.IORegistry.get_sniffer", "generated/skbio.io.registry.IORegistry.get_writer", "generated/skbio.io.registry.IORegistry.list_read_formats", "generated/skbio.io.registry.IORegistry.list_write_formats", "generated/skbio.io.registry.IORegistry.monkey_patch", "generated/skbio.io.registry.IORegistry.read", "generated/skbio.io.registry.IORegistry.sniff", "generated/skbio.io.registry.IORegistry.write", "generated/skbio.io.registry.create_format", "generated/skbio.io.registry.read", "generated/skbio.io.registry.sniff", "generated/skbio.io.registry.write", "generated/skbio.io.util", "generated/skbio.io.util.open", "generated/skbio.io.util.open_file", "generated/skbio.io.util.open_files", "generated/skbio.metadata.CategoricalMetadataColumn", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__", "generated/skbio.metadata.CategoricalMetadataColumn.__le__", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__", "generated/skbio.metadata.CategoricalMetadataColumn.__str__", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing", "generated/skbio.metadata.CategoricalMetadataColumn.get_value", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values", "generated/skbio.metadata.CategoricalMetadataColumn.save", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe", "generated/skbio.metadata.CategoricalMetadataColumn.to_series", "generated/skbio.metadata.Interval", "generated/skbio.metadata.Interval.__eq__", "generated/skbio.metadata.Interval.__ge__", "generated/skbio.metadata.Interval.__getstate__", "generated/skbio.metadata.Interval.__gt__", "generated/skbio.metadata.Interval.__le__", "generated/skbio.metadata.Interval.__lt__", "generated/skbio.metadata.Interval.__ne__", "generated/skbio.metadata.Interval.__str__", "generated/skbio.metadata.Interval.drop", "generated/skbio.metadata.IntervalMetadata", "generated/skbio.metadata.IntervalMetadata.__copy__", "generated/skbio.metadata.IntervalMetadata.__deepcopy__", "generated/skbio.metadata.IntervalMetadata.__eq__", "generated/skbio.metadata.IntervalMetadata.__ge__", "generated/skbio.metadata.IntervalMetadata.__getstate__", "generated/skbio.metadata.IntervalMetadata.__gt__", "generated/skbio.metadata.IntervalMetadata.__le__", "generated/skbio.metadata.IntervalMetadata.__lt__", "generated/skbio.metadata.IntervalMetadata.__ne__", "generated/skbio.metadata.IntervalMetadata.__str__", "generated/skbio.metadata.IntervalMetadata.add", "generated/skbio.metadata.IntervalMetadata.concat", "generated/skbio.metadata.IntervalMetadata.drop", "generated/skbio.metadata.IntervalMetadata.merge", "generated/skbio.metadata.IntervalMetadata.query", "generated/skbio.metadata.IntervalMetadata.read", "generated/skbio.metadata.IntervalMetadata.sort", "generated/skbio.metadata.IntervalMetadata.write", "generated/skbio.metadata.MetadataColumn", "generated/skbio.metadata.MetadataColumn.__eq__", "generated/skbio.metadata.MetadataColumn.__ge__", "generated/skbio.metadata.MetadataColumn.__getstate__", "generated/skbio.metadata.MetadataColumn.__gt__", "generated/skbio.metadata.MetadataColumn.__le__", "generated/skbio.metadata.MetadataColumn.__lt__", "generated/skbio.metadata.MetadataColumn.__ne__", "generated/skbio.metadata.MetadataColumn.__str__", "generated/skbio.metadata.MetadataColumn.drop_missing_values", "generated/skbio.metadata.MetadataColumn.filter_ids", "generated/skbio.metadata.MetadataColumn.get_ids", "generated/skbio.metadata.MetadataColumn.get_missing", "generated/skbio.metadata.MetadataColumn.get_value", "generated/skbio.metadata.MetadataColumn.has_missing_values", "generated/skbio.metadata.MetadataColumn.save", "generated/skbio.metadata.MetadataColumn.to_dataframe", "generated/skbio.metadata.MetadataColumn.to_series", "generated/skbio.metadata.NumericMetadataColumn", "generated/skbio.metadata.NumericMetadataColumn.__eq__", "generated/skbio.metadata.NumericMetadataColumn.__ge__", "generated/skbio.metadata.NumericMetadataColumn.__getstate__", "generated/skbio.metadata.NumericMetadataColumn.__gt__", "generated/skbio.metadata.NumericMetadataColumn.__le__", "generated/skbio.metadata.NumericMetadataColumn.__lt__", "generated/skbio.metadata.NumericMetadataColumn.__ne__", "generated/skbio.metadata.NumericMetadataColumn.__str__", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values", "generated/skbio.metadata.NumericMetadataColumn.filter_ids", "generated/skbio.metadata.NumericMetadataColumn.get_ids", "generated/skbio.metadata.NumericMetadataColumn.get_missing", "generated/skbio.metadata.NumericMetadataColumn.get_value", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values", "generated/skbio.metadata.NumericMetadataColumn.save", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe", "generated/skbio.metadata.NumericMetadataColumn.to_series", "generated/skbio.metadata.SampleMetadata", "generated/skbio.metadata.SampleMetadata.__eq__", "generated/skbio.metadata.SampleMetadata.__ge__", "generated/skbio.metadata.SampleMetadata.__getstate__", "generated/skbio.metadata.SampleMetadata.__gt__", "generated/skbio.metadata.SampleMetadata.__le__", "generated/skbio.metadata.SampleMetadata.__lt__", "generated/skbio.metadata.SampleMetadata.__ne__", "generated/skbio.metadata.SampleMetadata.__str__", "generated/skbio.metadata.SampleMetadata.filter_columns", "generated/skbio.metadata.SampleMetadata.filter_ids", "generated/skbio.metadata.SampleMetadata.get_column", "generated/skbio.metadata.SampleMetadata.get_ids", "generated/skbio.metadata.SampleMetadata.load", "generated/skbio.metadata.SampleMetadata.merge", "generated/skbio.metadata.SampleMetadata.read", "generated/skbio.metadata.SampleMetadata.save", "generated/skbio.metadata.SampleMetadata.to_dataframe", "generated/skbio.metadata.SampleMetadata.write", "generated/skbio.sequence.DNA", "generated/skbio.sequence.DNA.__bool__", "generated/skbio.sequence.DNA.__contains__", "generated/skbio.sequence.DNA.__copy__", "generated/skbio.sequence.DNA.__deepcopy__", "generated/skbio.sequence.DNA.__eq__", "generated/skbio.sequence.DNA.__ge__", "generated/skbio.sequence.DNA.__getitem__", "generated/skbio.sequence.DNA.__getstate__", "generated/skbio.sequence.DNA.__gt__", "generated/skbio.sequence.DNA.__iter__", "generated/skbio.sequence.DNA.__le__", "generated/skbio.sequence.DNA.__len__", "generated/skbio.sequence.DNA.__lt__", "generated/skbio.sequence.DNA.__ne__", "generated/skbio.sequence.DNA.__reversed__", "generated/skbio.sequence.DNA.__str__", "generated/skbio.sequence.DNA.complement", "generated/skbio.sequence.DNA.concat", "generated/skbio.sequence.DNA.count", "generated/skbio.sequence.DNA.definites", "generated/skbio.sequence.DNA.degap", "generated/skbio.sequence.DNA.degenerates", "generated/skbio.sequence.DNA.distance", "generated/skbio.sequence.DNA.expand_degenerates", "generated/skbio.sequence.DNA.find_motifs", "generated/skbio.sequence.DNA.find_with_regex", "generated/skbio.sequence.DNA.frequencies", "generated/skbio.sequence.DNA.gaps", "generated/skbio.sequence.DNA.gc_content", "generated/skbio.sequence.DNA.gc_frequency", "generated/skbio.sequence.DNA.has_definites", "generated/skbio.sequence.DNA.has_degenerates", "generated/skbio.sequence.DNA.has_gaps", "generated/skbio.sequence.DNA.has_interval_metadata", "generated/skbio.sequence.DNA.has_metadata", "generated/skbio.sequence.DNA.has_nondegenerates", "generated/skbio.sequence.DNA.has_positional_metadata", "generated/skbio.sequence.DNA.index", "generated/skbio.sequence.DNA.is_reverse_complement", "generated/skbio.sequence.DNA.iter_contiguous", "generated/skbio.sequence.DNA.iter_kmers", "generated/skbio.sequence.DNA.kmer_frequencies", "generated/skbio.sequence.DNA.lowercase", "generated/skbio.sequence.DNA.match_frequency", "generated/skbio.sequence.DNA.matches", "generated/skbio.sequence.DNA.mismatch_frequency", "generated/skbio.sequence.DNA.mismatches", "generated/skbio.sequence.DNA.nondegenerates", "generated/skbio.sequence.DNA.read", "generated/skbio.sequence.DNA.replace", "generated/skbio.sequence.DNA.reverse_complement", "generated/skbio.sequence.DNA.to_definites", "generated/skbio.sequence.DNA.to_indices", "generated/skbio.sequence.DNA.to_regex", "generated/skbio.sequence.DNA.transcribe", "generated/skbio.sequence.DNA.translate", "generated/skbio.sequence.DNA.translate_six_frames", "generated/skbio.sequence.DNA.write", "generated/skbio.sequence.GeneticCode", "generated/skbio.sequence.GeneticCode.__eq__", "generated/skbio.sequence.GeneticCode.__ge__", "generated/skbio.sequence.GeneticCode.__getstate__", "generated/skbio.sequence.GeneticCode.__gt__", "generated/skbio.sequence.GeneticCode.__le__", "generated/skbio.sequence.GeneticCode.__lt__", "generated/skbio.sequence.GeneticCode.__ne__", "generated/skbio.sequence.GeneticCode.__str__", "generated/skbio.sequence.GeneticCode.from_ncbi", "generated/skbio.sequence.GeneticCode.translate", "generated/skbio.sequence.GeneticCode.translate_six_frames", "generated/skbio.sequence.GrammaredSequence", "generated/skbio.sequence.GrammaredSequence.__bool__", "generated/skbio.sequence.GrammaredSequence.__contains__", "generated/skbio.sequence.GrammaredSequence.__copy__", "generated/skbio.sequence.GrammaredSequence.__deepcopy__", "generated/skbio.sequence.GrammaredSequence.__eq__", "generated/skbio.sequence.GrammaredSequence.__ge__", "generated/skbio.sequence.GrammaredSequence.__getitem__", "generated/skbio.sequence.GrammaredSequence.__getstate__", "generated/skbio.sequence.GrammaredSequence.__gt__", "generated/skbio.sequence.GrammaredSequence.__iter__", "generated/skbio.sequence.GrammaredSequence.__le__", "generated/skbio.sequence.GrammaredSequence.__len__", "generated/skbio.sequence.GrammaredSequence.__lt__", "generated/skbio.sequence.GrammaredSequence.__ne__", "generated/skbio.sequence.GrammaredSequence.__reversed__", "generated/skbio.sequence.GrammaredSequence.__str__", "generated/skbio.sequence.GrammaredSequence.concat", "generated/skbio.sequence.GrammaredSequence.count", "generated/skbio.sequence.GrammaredSequence.definites", "generated/skbio.sequence.GrammaredSequence.degap", "generated/skbio.sequence.GrammaredSequence.degenerates", "generated/skbio.sequence.GrammaredSequence.distance", "generated/skbio.sequence.GrammaredSequence.expand_degenerates", "generated/skbio.sequence.GrammaredSequence.find_motifs", "generated/skbio.sequence.GrammaredSequence.find_with_regex", "generated/skbio.sequence.GrammaredSequence.frequencies", "generated/skbio.sequence.GrammaredSequence.gaps", "generated/skbio.sequence.GrammaredSequence.has_definites", "generated/skbio.sequence.GrammaredSequence.has_degenerates", "generated/skbio.sequence.GrammaredSequence.has_gaps", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata", "generated/skbio.sequence.GrammaredSequence.has_metadata", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata", "generated/skbio.sequence.GrammaredSequence.index", "generated/skbio.sequence.GrammaredSequence.iter_contiguous", "generated/skbio.sequence.GrammaredSequence.iter_kmers", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies", "generated/skbio.sequence.GrammaredSequence.lowercase", "generated/skbio.sequence.GrammaredSequence.match_frequency", "generated/skbio.sequence.GrammaredSequence.matches", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency", "generated/skbio.sequence.GrammaredSequence.mismatches", "generated/skbio.sequence.GrammaredSequence.nondegenerates", "generated/skbio.sequence.GrammaredSequence.read", "generated/skbio.sequence.GrammaredSequence.replace", "generated/skbio.sequence.GrammaredSequence.to_definites", "generated/skbio.sequence.GrammaredSequence.to_indices", "generated/skbio.sequence.GrammaredSequence.to_regex", "generated/skbio.sequence.GrammaredSequence.write", "generated/skbio.sequence.Protein", "generated/skbio.sequence.Protein.__bool__", "generated/skbio.sequence.Protein.__contains__", "generated/skbio.sequence.Protein.__copy__", "generated/skbio.sequence.Protein.__deepcopy__", "generated/skbio.sequence.Protein.__eq__", "generated/skbio.sequence.Protein.__ge__", "generated/skbio.sequence.Protein.__getitem__", "generated/skbio.sequence.Protein.__getstate__", "generated/skbio.sequence.Protein.__gt__", "generated/skbio.sequence.Protein.__iter__", "generated/skbio.sequence.Protein.__le__", "generated/skbio.sequence.Protein.__len__", "generated/skbio.sequence.Protein.__lt__", "generated/skbio.sequence.Protein.__ne__", "generated/skbio.sequence.Protein.__reversed__", "generated/skbio.sequence.Protein.__str__", "generated/skbio.sequence.Protein.concat", "generated/skbio.sequence.Protein.count", "generated/skbio.sequence.Protein.definites", "generated/skbio.sequence.Protein.degap", "generated/skbio.sequence.Protein.degenerates", "generated/skbio.sequence.Protein.distance", "generated/skbio.sequence.Protein.expand_degenerates", "generated/skbio.sequence.Protein.find_motifs", "generated/skbio.sequence.Protein.find_with_regex", "generated/skbio.sequence.Protein.frequencies", "generated/skbio.sequence.Protein.gaps", "generated/skbio.sequence.Protein.has_definites", "generated/skbio.sequence.Protein.has_degenerates", "generated/skbio.sequence.Protein.has_gaps", "generated/skbio.sequence.Protein.has_interval_metadata", "generated/skbio.sequence.Protein.has_metadata", "generated/skbio.sequence.Protein.has_nondegenerates", "generated/skbio.sequence.Protein.has_positional_metadata", "generated/skbio.sequence.Protein.has_stops", "generated/skbio.sequence.Protein.index", "generated/skbio.sequence.Protein.iter_contiguous", "generated/skbio.sequence.Protein.iter_kmers", "generated/skbio.sequence.Protein.kmer_frequencies", "generated/skbio.sequence.Protein.lowercase", "generated/skbio.sequence.Protein.match_frequency", "generated/skbio.sequence.Protein.matches", "generated/skbio.sequence.Protein.mismatch_frequency", "generated/skbio.sequence.Protein.mismatches", "generated/skbio.sequence.Protein.nondegenerates", "generated/skbio.sequence.Protein.read", "generated/skbio.sequence.Protein.replace", "generated/skbio.sequence.Protein.stops", "generated/skbio.sequence.Protein.to_definites", "generated/skbio.sequence.Protein.to_indices", "generated/skbio.sequence.Protein.to_regex", "generated/skbio.sequence.Protein.write", "generated/skbio.sequence.RNA", "generated/skbio.sequence.RNA.__bool__", "generated/skbio.sequence.RNA.__contains__", "generated/skbio.sequence.RNA.__copy__", "generated/skbio.sequence.RNA.__deepcopy__", "generated/skbio.sequence.RNA.__eq__", "generated/skbio.sequence.RNA.__ge__", "generated/skbio.sequence.RNA.__getitem__", "generated/skbio.sequence.RNA.__getstate__", "generated/skbio.sequence.RNA.__gt__", "generated/skbio.sequence.RNA.__iter__", "generated/skbio.sequence.RNA.__le__", "generated/skbio.sequence.RNA.__len__", "generated/skbio.sequence.RNA.__lt__", "generated/skbio.sequence.RNA.__ne__", "generated/skbio.sequence.RNA.__reversed__", "generated/skbio.sequence.RNA.__str__", "generated/skbio.sequence.RNA.complement", "generated/skbio.sequence.RNA.concat", "generated/skbio.sequence.RNA.count", "generated/skbio.sequence.RNA.definites", "generated/skbio.sequence.RNA.degap", "generated/skbio.sequence.RNA.degenerates", "generated/skbio.sequence.RNA.distance", "generated/skbio.sequence.RNA.expand_degenerates", "generated/skbio.sequence.RNA.find_motifs", "generated/skbio.sequence.RNA.find_with_regex", "generated/skbio.sequence.RNA.frequencies", "generated/skbio.sequence.RNA.gaps", "generated/skbio.sequence.RNA.gc_content", "generated/skbio.sequence.RNA.gc_frequency", "generated/skbio.sequence.RNA.has_definites", "generated/skbio.sequence.RNA.has_degenerates", "generated/skbio.sequence.RNA.has_gaps", "generated/skbio.sequence.RNA.has_interval_metadata", "generated/skbio.sequence.RNA.has_metadata", "generated/skbio.sequence.RNA.has_nondegenerates", "generated/skbio.sequence.RNA.has_positional_metadata", "generated/skbio.sequence.RNA.index", "generated/skbio.sequence.RNA.is_reverse_complement", "generated/skbio.sequence.RNA.iter_contiguous", "generated/skbio.sequence.RNA.iter_kmers", "generated/skbio.sequence.RNA.kmer_frequencies", "generated/skbio.sequence.RNA.lowercase", "generated/skbio.sequence.RNA.match_frequency", "generated/skbio.sequence.RNA.matches", "generated/skbio.sequence.RNA.mismatch_frequency", "generated/skbio.sequence.RNA.mismatches", "generated/skbio.sequence.RNA.nondegenerates", "generated/skbio.sequence.RNA.read", "generated/skbio.sequence.RNA.replace", "generated/skbio.sequence.RNA.reverse_complement", "generated/skbio.sequence.RNA.reverse_transcribe", "generated/skbio.sequence.RNA.to_definites", "generated/skbio.sequence.RNA.to_indices", "generated/skbio.sequence.RNA.to_regex", "generated/skbio.sequence.RNA.translate", "generated/skbio.sequence.RNA.translate_six_frames", "generated/skbio.sequence.RNA.write", "generated/skbio.sequence.Sequence", "generated/skbio.sequence.Sequence.__bool__", "generated/skbio.sequence.Sequence.__contains__", "generated/skbio.sequence.Sequence.__copy__", "generated/skbio.sequence.Sequence.__deepcopy__", "generated/skbio.sequence.Sequence.__eq__", "generated/skbio.sequence.Sequence.__ge__", "generated/skbio.sequence.Sequence.__getitem__", "generated/skbio.sequence.Sequence.__getstate__", "generated/skbio.sequence.Sequence.__gt__", "generated/skbio.sequence.Sequence.__iter__", "generated/skbio.sequence.Sequence.__le__", "generated/skbio.sequence.Sequence.__len__", "generated/skbio.sequence.Sequence.__lt__", "generated/skbio.sequence.Sequence.__ne__", "generated/skbio.sequence.Sequence.__reversed__", "generated/skbio.sequence.Sequence.__str__", "generated/skbio.sequence.Sequence.concat", "generated/skbio.sequence.Sequence.count", "generated/skbio.sequence.Sequence.distance", "generated/skbio.sequence.Sequence.find_with_regex", "generated/skbio.sequence.Sequence.frequencies", "generated/skbio.sequence.Sequence.has_interval_metadata", "generated/skbio.sequence.Sequence.has_metadata", "generated/skbio.sequence.Sequence.has_positional_metadata", "generated/skbio.sequence.Sequence.index", "generated/skbio.sequence.Sequence.iter_contiguous", "generated/skbio.sequence.Sequence.iter_kmers", "generated/skbio.sequence.Sequence.kmer_frequencies", "generated/skbio.sequence.Sequence.lowercase", "generated/skbio.sequence.Sequence.match_frequency", "generated/skbio.sequence.Sequence.matches", "generated/skbio.sequence.Sequence.mismatch_frequency", "generated/skbio.sequence.Sequence.mismatches", "generated/skbio.sequence.Sequence.read", "generated/skbio.sequence.Sequence.replace", "generated/skbio.sequence.Sequence.to_indices", "generated/skbio.sequence.Sequence.write", "generated/skbio.sequence.SubstitutionMatrix", "generated/skbio.sequence.SubstitutionMatrix.__contains__", "generated/skbio.sequence.SubstitutionMatrix.__eq__", "generated/skbio.sequence.SubstitutionMatrix.__ge__", "generated/skbio.sequence.SubstitutionMatrix.__getitem__", "generated/skbio.sequence.SubstitutionMatrix.__getstate__", "generated/skbio.sequence.SubstitutionMatrix.__gt__", "generated/skbio.sequence.SubstitutionMatrix.__le__", "generated/skbio.sequence.SubstitutionMatrix.__lt__", "generated/skbio.sequence.SubstitutionMatrix.__ne__", "generated/skbio.sequence.SubstitutionMatrix.__str__", "generated/skbio.sequence.SubstitutionMatrix.between", "generated/skbio.sequence.SubstitutionMatrix.by_name", "generated/skbio.sequence.SubstitutionMatrix.copy", "generated/skbio.sequence.SubstitutionMatrix.filter", "generated/skbio.sequence.SubstitutionMatrix.from_dict", "generated/skbio.sequence.SubstitutionMatrix.from_iterable", "generated/skbio.sequence.SubstitutionMatrix.get_names", "generated/skbio.sequence.SubstitutionMatrix.identity", "generated/skbio.sequence.SubstitutionMatrix.index", "generated/skbio.sequence.SubstitutionMatrix.plot", "generated/skbio.sequence.SubstitutionMatrix.read", "generated/skbio.sequence.SubstitutionMatrix.redundant_form", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame", "generated/skbio.sequence.SubstitutionMatrix.to_dict", "generated/skbio.sequence.SubstitutionMatrix.transpose", "generated/skbio.sequence.SubstitutionMatrix.within", "generated/skbio.sequence.SubstitutionMatrix.write", "generated/skbio.sequence.distance", "generated/skbio.sequence.distance.hamming", "generated/skbio.sequence.distance.kmer_distance", "generated/skbio.stats.composition", "generated/skbio.stats.composition.alr", "generated/skbio.stats.composition.alr_inv", "generated/skbio.stats.composition.ancom", "generated/skbio.stats.composition.centralize", "generated/skbio.stats.composition.closure", "generated/skbio.stats.composition.clr", "generated/skbio.stats.composition.clr_inv", "generated/skbio.stats.composition.dirmult_ttest", "generated/skbio.stats.composition.ilr", "generated/skbio.stats.composition.ilr_inv", "generated/skbio.stats.composition.inner", "generated/skbio.stats.composition.multi_replace", "generated/skbio.stats.composition.multiplicative_replacement", "generated/skbio.stats.composition.pairwise_vlr", "generated/skbio.stats.composition.perturb", "generated/skbio.stats.composition.perturb_inv", "generated/skbio.stats.composition.power", "generated/skbio.stats.composition.sbp_basis", "generated/skbio.stats.composition.tree_basis", "generated/skbio.stats.composition.vlr", "generated/skbio.stats.distance", "generated/skbio.stats.distance.DissimilarityMatrix", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__", "generated/skbio.stats.distance.DissimilarityMatrix.__le__", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__", "generated/skbio.stats.distance.DissimilarityMatrix.__str__", "generated/skbio.stats.distance.DissimilarityMatrix.between", "generated/skbio.stats.distance.DissimilarityMatrix.copy", "generated/skbio.stats.distance.DissimilarityMatrix.filter", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable", "generated/skbio.stats.distance.DissimilarityMatrix.index", "generated/skbio.stats.distance.DissimilarityMatrix.plot", "generated/skbio.stats.distance.DissimilarityMatrix.read", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame", "generated/skbio.stats.distance.DissimilarityMatrix.transpose", "generated/skbio.stats.distance.DissimilarityMatrix.within", "generated/skbio.stats.distance.DissimilarityMatrix.write", "generated/skbio.stats.distance.DistanceMatrix", "generated/skbio.stats.distance.DistanceMatrix.__contains__", "generated/skbio.stats.distance.DistanceMatrix.__eq__", "generated/skbio.stats.distance.DistanceMatrix.__ge__", "generated/skbio.stats.distance.DistanceMatrix.__getitem__", "generated/skbio.stats.distance.DistanceMatrix.__getstate__", "generated/skbio.stats.distance.DistanceMatrix.__gt__", "generated/skbio.stats.distance.DistanceMatrix.__le__", "generated/skbio.stats.distance.DistanceMatrix.__lt__", "generated/skbio.stats.distance.DistanceMatrix.__ne__", "generated/skbio.stats.distance.DistanceMatrix.__str__", "generated/skbio.stats.distance.DistanceMatrix.between", "generated/skbio.stats.distance.DistanceMatrix.condensed_form", "generated/skbio.stats.distance.DistanceMatrix.copy", "generated/skbio.stats.distance.DistanceMatrix.filter", "generated/skbio.stats.distance.DistanceMatrix.from_iterable", "generated/skbio.stats.distance.DistanceMatrix.index", "generated/skbio.stats.distance.DistanceMatrix.permute", "generated/skbio.stats.distance.DistanceMatrix.plot", "generated/skbio.stats.distance.DistanceMatrix.read", "generated/skbio.stats.distance.DistanceMatrix.redundant_form", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame", "generated/skbio.stats.distance.DistanceMatrix.to_series", "generated/skbio.stats.distance.DistanceMatrix.transpose", "generated/skbio.stats.distance.DistanceMatrix.within", "generated/skbio.stats.distance.DistanceMatrix.write", "generated/skbio.stats.distance.anosim", "generated/skbio.stats.distance.bioenv", "generated/skbio.stats.distance.mantel", "generated/skbio.stats.distance.permanova", "generated/skbio.stats.distance.permdisp", "generated/skbio.stats.distance.pwmantel", "generated/skbio.stats.distance.randdm", "generated/skbio.stats.evolve", "generated/skbio.stats.evolve.hommola_cospeciation", "generated/skbio.stats.gradient", "generated/skbio.stats.gradient.AverageGradientANOVA", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.CategoryResults", "generated/skbio.stats.gradient.CategoryResults.__eq__", "generated/skbio.stats.gradient.CategoryResults.__ge__", "generated/skbio.stats.gradient.CategoryResults.__getstate__", "generated/skbio.stats.gradient.CategoryResults.__gt__", "generated/skbio.stats.gradient.CategoryResults.__hash__", "generated/skbio.stats.gradient.CategoryResults.__le__", "generated/skbio.stats.gradient.CategoryResults.__lt__", "generated/skbio.stats.gradient.CategoryResults.__ne__", "generated/skbio.stats.gradient.CategoryResults.__str__", "generated/skbio.stats.gradient.CategoryResults.to_files", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVA", "generated/skbio.stats.gradient.GradientANOVA.__eq__", "generated/skbio.stats.gradient.GradientANOVA.__ge__", "generated/skbio.stats.gradient.GradientANOVA.__getstate__", "generated/skbio.stats.gradient.GradientANOVA.__gt__", "generated/skbio.stats.gradient.GradientANOVA.__hash__", "generated/skbio.stats.gradient.GradientANOVA.__le__", "generated/skbio.stats.gradient.GradientANOVA.__lt__", "generated/skbio.stats.gradient.GradientANOVA.__ne__", "generated/skbio.stats.gradient.GradientANOVA.__str__", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories", "generated/skbio.stats.gradient.GradientANOVAResults", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__", "generated/skbio.stats.gradient.GradientANOVAResults.__le__", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__", "generated/skbio.stats.gradient.GradientANOVAResults.__str__", "generated/skbio.stats.gradient.GradientANOVAResults.to_files", "generated/skbio.stats.gradient.GroupResults", "generated/skbio.stats.gradient.GroupResults.__eq__", "generated/skbio.stats.gradient.GroupResults.__ge__", "generated/skbio.stats.gradient.GroupResults.__getstate__", "generated/skbio.stats.gradient.GroupResults.__gt__", "generated/skbio.stats.gradient.GroupResults.__hash__", "generated/skbio.stats.gradient.GroupResults.__le__", "generated/skbio.stats.gradient.GroupResults.__lt__", "generated/skbio.stats.gradient.GroupResults.__ne__", "generated/skbio.stats.gradient.GroupResults.__str__", "generated/skbio.stats.gradient.GroupResults.to_files", "generated/skbio.stats.gradient.TrajectoryGradientANOVA", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "generated/skbio.stats.isubsample", "generated/skbio.stats.ordination", "generated/skbio.stats.ordination.OrdinationResults", "generated/skbio.stats.ordination.OrdinationResults.__eq__", "generated/skbio.stats.ordination.OrdinationResults.__ge__", "generated/skbio.stats.ordination.OrdinationResults.__getstate__", "generated/skbio.stats.ordination.OrdinationResults.__gt__", "generated/skbio.stats.ordination.OrdinationResults.__hash__", "generated/skbio.stats.ordination.OrdinationResults.__le__", "generated/skbio.stats.ordination.OrdinationResults.__lt__", "generated/skbio.stats.ordination.OrdinationResults.__ne__", "generated/skbio.stats.ordination.OrdinationResults.__str__", "generated/skbio.stats.ordination.OrdinationResults.plot", "generated/skbio.stats.ordination.OrdinationResults.read", "generated/skbio.stats.ordination.OrdinationResults.write", "generated/skbio.stats.ordination.ca", "generated/skbio.stats.ordination.cca", "generated/skbio.stats.ordination.corr", "generated/skbio.stats.ordination.e_matrix", "generated/skbio.stats.ordination.f_matrix", "generated/skbio.stats.ordination.mean_and_std", "generated/skbio.stats.ordination.pcoa", "generated/skbio.stats.ordination.pcoa_biplot", "generated/skbio.stats.ordination.rda", "generated/skbio.stats.ordination.scale", "generated/skbio.stats.ordination.svd_rank", "generated/skbio.stats.power", "generated/skbio.stats.power.confidence_bound", "generated/skbio.stats.power.paired_subsamples", "generated/skbio.stats.power.subsample_paired_power", "generated/skbio.stats.power.subsample_power", "generated/skbio.stats.subsample_counts", "generated/skbio.table.Table", "generated/skbio.table.Table.__eq__", "generated/skbio.table.Table.__ge__", "generated/skbio.table.Table.__getitem__", "generated/skbio.table.Table.__getstate__", "generated/skbio.table.Table.__gt__", "generated/skbio.table.Table.__iter__", "generated/skbio.table.Table.__le__", "generated/skbio.table.Table.__lt__", "generated/skbio.table.Table.__ne__", "generated/skbio.table.Table.__str__", "generated/skbio.table.Table.add_group_metadata", "generated/skbio.table.Table.add_metadata", "generated/skbio.table.Table.align_to", "generated/skbio.table.Table.align_to_dataframe", "generated/skbio.table.Table.align_tree", "generated/skbio.table.Table.collapse", "generated/skbio.table.Table.concat", "generated/skbio.table.Table.copy", "generated/skbio.table.Table.data", "generated/skbio.table.Table.del_metadata", "generated/skbio.table.Table.delimited_self", "generated/skbio.table.Table.descriptive_equality", "generated/skbio.table.Table.exists", "generated/skbio.table.Table.filter", "generated/skbio.table.Table.from_adjacency", "generated/skbio.table.Table.from_hdf5", "generated/skbio.table.Table.from_json", "generated/skbio.table.Table.from_tsv", "generated/skbio.table.Table.get_table_density", "generated/skbio.table.Table.get_value_by_ids", "generated/skbio.table.Table.group_metadata", "generated/skbio.table.Table.head", "generated/skbio.table.Table.ids", "generated/skbio.table.Table.index", "generated/skbio.table.Table.is_empty", "generated/skbio.table.Table.iter", "generated/skbio.table.Table.iter_data", "generated/skbio.table.Table.iter_pairwise", "generated/skbio.table.Table.length", "generated/skbio.table.Table.max", "generated/skbio.table.Table.merge", "generated/skbio.table.Table.metadata", "generated/skbio.table.Table.metadata_to_dataframe", "generated/skbio.table.Table.min", "generated/skbio.table.Table.nonzero", "generated/skbio.table.Table.nonzero_counts", "generated/skbio.table.Table.norm", "generated/skbio.table.Table.pa", "generated/skbio.table.Table.partition", "generated/skbio.table.Table.rankdata", "generated/skbio.table.Table.read", "generated/skbio.table.Table.reduce", "generated/skbio.table.Table.remove_empty", "generated/skbio.table.Table.sort", "generated/skbio.table.Table.sort_order", "generated/skbio.table.Table.subsample", "generated/skbio.table.Table.sum", "generated/skbio.table.Table.to_anndata", "generated/skbio.table.Table.to_dataframe", "generated/skbio.table.Table.to_hdf5", "generated/skbio.table.Table.to_json", "generated/skbio.table.Table.to_tsv", "generated/skbio.table.Table.transform", "generated/skbio.table.Table.transpose", "generated/skbio.table.Table.update_ids", "generated/skbio.table.Table.write", "generated/skbio.table.example_table", "generated/skbio.tree.TreeNode", "generated/skbio.tree.TreeNode.__copy__", "generated/skbio.tree.TreeNode.__deepcopy__", "generated/skbio.tree.TreeNode.__eq__", "generated/skbio.tree.TreeNode.__ge__", "generated/skbio.tree.TreeNode.__getitem__", "generated/skbio.tree.TreeNode.__getstate__", "generated/skbio.tree.TreeNode.__gt__", "generated/skbio.tree.TreeNode.__hash__", "generated/skbio.tree.TreeNode.__iter__", "generated/skbio.tree.TreeNode.__le__", "generated/skbio.tree.TreeNode.__len__", "generated/skbio.tree.TreeNode.__lt__", "generated/skbio.tree.TreeNode.__ne__", "generated/skbio.tree.TreeNode.__str__", "generated/skbio.tree.TreeNode.accumulate_to_ancestor", "generated/skbio.tree.TreeNode.ancestors", "generated/skbio.tree.TreeNode.append", "generated/skbio.tree.TreeNode.ascii_art", "generated/skbio.tree.TreeNode.assign_ids", "generated/skbio.tree.TreeNode.assign_supports", "generated/skbio.tree.TreeNode.bifurcate", "generated/skbio.tree.TreeNode.cache_attr", "generated/skbio.tree.TreeNode.compare_rfd", "generated/skbio.tree.TreeNode.compare_subsets", "generated/skbio.tree.TreeNode.compare_tip_distances", "generated/skbio.tree.TreeNode.copy", "generated/skbio.tree.TreeNode.count", "generated/skbio.tree.TreeNode.create_caches", "generated/skbio.tree.TreeNode.deepcopy", "generated/skbio.tree.TreeNode.descending_branch_length", "generated/skbio.tree.TreeNode.distance", "generated/skbio.tree.TreeNode.extend", "generated/skbio.tree.TreeNode.find", "generated/skbio.tree.TreeNode.find_all", "generated/skbio.tree.TreeNode.find_by_func", "generated/skbio.tree.TreeNode.find_by_id", "generated/skbio.tree.TreeNode.from_linkage_matrix", "generated/skbio.tree.TreeNode.from_taxdump", "generated/skbio.tree.TreeNode.from_taxonomy", "generated/skbio.tree.TreeNode.get_max_distance", "generated/skbio.tree.TreeNode.has_children", "generated/skbio.tree.TreeNode.index_tree", "generated/skbio.tree.TreeNode.invalidate_caches", "generated/skbio.tree.TreeNode.is_root", "generated/skbio.tree.TreeNode.is_tip", "generated/skbio.tree.TreeNode.lca", "generated/skbio.tree.TreeNode.levelorder", "generated/skbio.tree.TreeNode.lowest_common_ancestor", "generated/skbio.tree.TreeNode.neighbors", "generated/skbio.tree.TreeNode.non_tips", "generated/skbio.tree.TreeNode.observed_node_counts", "generated/skbio.tree.TreeNode.pop", "generated/skbio.tree.TreeNode.postorder", "generated/skbio.tree.TreeNode.pre_and_postorder", "generated/skbio.tree.TreeNode.preorder", "generated/skbio.tree.TreeNode.prune", "generated/skbio.tree.TreeNode.read", "generated/skbio.tree.TreeNode.remove", "generated/skbio.tree.TreeNode.remove_deleted", "generated/skbio.tree.TreeNode.root", "generated/skbio.tree.TreeNode.root_at", "generated/skbio.tree.TreeNode.root_at_midpoint", "generated/skbio.tree.TreeNode.shear", "generated/skbio.tree.TreeNode.shuffle", "generated/skbio.tree.TreeNode.siblings", "generated/skbio.tree.TreeNode.subset", "generated/skbio.tree.TreeNode.subsets", "generated/skbio.tree.TreeNode.subtree", "generated/skbio.tree.TreeNode.tip_tip_distances", "generated/skbio.tree.TreeNode.tips", "generated/skbio.tree.TreeNode.to_array", "generated/skbio.tree.TreeNode.to_taxonomy", "generated/skbio.tree.TreeNode.traverse", "generated/skbio.tree.TreeNode.unpack", "generated/skbio.tree.TreeNode.unpack_by_func", "generated/skbio.tree.TreeNode.unrooted_copy", "generated/skbio.tree.TreeNode.unrooted_deepcopy", "generated/skbio.tree.TreeNode.write", "generated/skbio.tree.majority_rule", "generated/skbio.tree.nj", "generated/skbio.util.EfficiencyWarning", "generated/skbio.util.RepresentationWarning", "generated/skbio.util.assert_data_frame_almost_equal", "generated/skbio.util.assert_ordination_results_equal", "generated/skbio.util.cardinal_to_ordinal", "generated/skbio.util.classproperty", "generated/skbio.util.classproperty.__delete__", "generated/skbio.util.classproperty.__eq__", "generated/skbio.util.classproperty.__ge__", "generated/skbio.util.classproperty.__get__", "generated/skbio.util.classproperty.__getstate__", "generated/skbio.util.classproperty.__gt__", "generated/skbio.util.classproperty.__hash__", "generated/skbio.util.classproperty.__le__", "generated/skbio.util.classproperty.__lt__", "generated/skbio.util.classproperty.__ne__", "generated/skbio.util.classproperty.__set__", "generated/skbio.util.classproperty.__set_name__", "generated/skbio.util.classproperty.__str__", "generated/skbio.util.classproperty.deleter", "generated/skbio.util.classproperty.getter", "generated/skbio.util.classproperty.setter", "generated/skbio.util.find_duplicates", "generated/skbio.util.get_data_path", "generated/skbio.util.safe_md5", "generated/skbio.workflow.Workflow", "generated/skbio.workflow.Workflow.__call__", "generated/skbio.workflow.Workflow.__eq__", "generated/skbio.workflow.Workflow.__ge__", "generated/skbio.workflow.Workflow.__getstate__", "generated/skbio.workflow.Workflow.__gt__", "generated/skbio.workflow.Workflow.__hash__", "generated/skbio.workflow.Workflow.__le__", "generated/skbio.workflow.Workflow.__lt__", "generated/skbio.workflow.Workflow.__ne__", "generated/skbio.workflow.Workflow.__str__", "generated/skbio.workflow.Workflow.initialize_state", "generated/skbio.workflow.method", "generated/skbio.workflow.method.__call__", "generated/skbio.workflow.method.__eq__", "generated/skbio.workflow.method.__ge__", "generated/skbio.workflow.method.__getstate__", "generated/skbio.workflow.method.__gt__", "generated/skbio.workflow.method.__hash__", "generated/skbio.workflow.method.__le__", "generated/skbio.workflow.method.__lt__", "generated/skbio.workflow.method.__ne__", "generated/skbio.workflow.method.__str__", "generated/skbio.workflow.requires", "generated/skbio.workflow.requires.__call__", "generated/skbio.workflow.requires.__eq__", "generated/skbio.workflow.requires.__ge__", "generated/skbio.workflow.requires.__getstate__", "generated/skbio.workflow.requires.__gt__", "generated/skbio.workflow.requires.__hash__", "generated/skbio.workflow.requires.__le__", "generated/skbio.workflow.requires.__lt__", "generated/skbio.workflow.requires.__ne__", "generated/skbio.workflow.requires.__str__", "index", "io", "metadata", "sequence", "stats", "table", "tree", "util", "workflow"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["alignment.rst", "diversity.rst", "generated/skbio.alignment.AlignmentStructure.rst", "generated/skbio.alignment.AlignmentStructure.__eq__.rst", "generated/skbio.alignment.AlignmentStructure.__ge__.rst", "generated/skbio.alignment.AlignmentStructure.__getitem__.rst", "generated/skbio.alignment.AlignmentStructure.__getstate__.rst", "generated/skbio.alignment.AlignmentStructure.__gt__.rst", "generated/skbio.alignment.AlignmentStructure.__hash__.rst", "generated/skbio.alignment.AlignmentStructure.__le__.rst", "generated/skbio.alignment.AlignmentStructure.__lt__.rst", "generated/skbio.alignment.AlignmentStructure.__ne__.rst", "generated/skbio.alignment.AlignmentStructure.__setstate__.rst", "generated/skbio.alignment.AlignmentStructure.__str__.rst", "generated/skbio.alignment.AlignmentStructure.is_zero_based.rst", "generated/skbio.alignment.AlignmentStructure.set_zero_based.rst", "generated/skbio.alignment.StripedSmithWaterman.rst", "generated/skbio.alignment.StripedSmithWaterman.__call__.rst", "generated/skbio.alignment.StripedSmithWaterman.__eq__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ge__.rst", "generated/skbio.alignment.StripedSmithWaterman.__getstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__gt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__hash__.rst", "generated/skbio.alignment.StripedSmithWaterman.__le__.rst", "generated/skbio.alignment.StripedSmithWaterman.__lt__.rst", "generated/skbio.alignment.StripedSmithWaterman.__ne__.rst", "generated/skbio.alignment.StripedSmithWaterman.__setstate__.rst", "generated/skbio.alignment.StripedSmithWaterman.__str__.rst", "generated/skbio.alignment.TabularMSA.rst", "generated/skbio.alignment.TabularMSA.__bool__.rst", "generated/skbio.alignment.TabularMSA.__contains__.rst", "generated/skbio.alignment.TabularMSA.__copy__.rst", "generated/skbio.alignment.TabularMSA.__deepcopy__.rst", "generated/skbio.alignment.TabularMSA.__eq__.rst", "generated/skbio.alignment.TabularMSA.__ge__.rst", "generated/skbio.alignment.TabularMSA.__getitem__.rst", "generated/skbio.alignment.TabularMSA.__getstate__.rst", "generated/skbio.alignment.TabularMSA.__gt__.rst", "generated/skbio.alignment.TabularMSA.__iter__.rst", "generated/skbio.alignment.TabularMSA.__le__.rst", "generated/skbio.alignment.TabularMSA.__len__.rst", "generated/skbio.alignment.TabularMSA.__lt__.rst", "generated/skbio.alignment.TabularMSA.__ne__.rst", "generated/skbio.alignment.TabularMSA.__reversed__.rst", "generated/skbio.alignment.TabularMSA.__str__.rst", "generated/skbio.alignment.TabularMSA.append.rst", "generated/skbio.alignment.TabularMSA.consensus.rst", "generated/skbio.alignment.TabularMSA.conservation.rst", "generated/skbio.alignment.TabularMSA.extend.rst", "generated/skbio.alignment.TabularMSA.from_dict.rst", "generated/skbio.alignment.TabularMSA.gap_frequencies.rst", "generated/skbio.alignment.TabularMSA.has_metadata.rst", "generated/skbio.alignment.TabularMSA.has_positional_metadata.rst", "generated/skbio.alignment.TabularMSA.iter_positions.rst", "generated/skbio.alignment.TabularMSA.join.rst", "generated/skbio.alignment.TabularMSA.read.rst", "generated/skbio.alignment.TabularMSA.reassign_index.rst", "generated/skbio.alignment.TabularMSA.sort.rst", "generated/skbio.alignment.TabularMSA.to_dict.rst", "generated/skbio.alignment.TabularMSA.write.rst", "generated/skbio.alignment.global_pairwise_align.rst", "generated/skbio.alignment.global_pairwise_align_nucleotide.rst", "generated/skbio.alignment.global_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align.rst", "generated/skbio.alignment.local_pairwise_align_nucleotide.rst", "generated/skbio.alignment.local_pairwise_align_protein.rst", "generated/skbio.alignment.local_pairwise_align_ssw.rst", "generated/skbio.alignment.make_identity_substitution_matrix.rst", "generated/skbio.diversity.alpha.rst", "generated/skbio.diversity.alpha.ace.rst", "generated/skbio.diversity.alpha.berger_parker_d.rst", "generated/skbio.diversity.alpha.brillouin_d.rst", "generated/skbio.diversity.alpha.chao1.rst", "generated/skbio.diversity.alpha.chao1_ci.rst", "generated/skbio.diversity.alpha.dominance.rst", "generated/skbio.diversity.alpha.doubles.rst", "generated/skbio.diversity.alpha.enspie.rst", "generated/skbio.diversity.alpha.esty_ci.rst", "generated/skbio.diversity.alpha.faith_pd.rst", "generated/skbio.diversity.alpha.fisher_alpha.rst", "generated/skbio.diversity.alpha.gini_index.rst", "generated/skbio.diversity.alpha.goods_coverage.rst", "generated/skbio.diversity.alpha.heip_e.rst", "generated/skbio.diversity.alpha.kempton_taylor_q.rst", "generated/skbio.diversity.alpha.lladser_ci.rst", "generated/skbio.diversity.alpha.lladser_pe.rst", "generated/skbio.diversity.alpha.margalef.rst", "generated/skbio.diversity.alpha.mcintosh_d.rst", "generated/skbio.diversity.alpha.mcintosh_e.rst", "generated/skbio.diversity.alpha.menhinick.rst", "generated/skbio.diversity.alpha.michaelis_menten_fit.rst", "generated/skbio.diversity.alpha.observed_features.rst", "generated/skbio.diversity.alpha.observed_otus.rst", "generated/skbio.diversity.alpha.osd.rst", "generated/skbio.diversity.alpha.phydiv.rst", "generated/skbio.diversity.alpha.pielou_e.rst", "generated/skbio.diversity.alpha.robbins.rst", "generated/skbio.diversity.alpha.shannon.rst", "generated/skbio.diversity.alpha.simpson.rst", "generated/skbio.diversity.alpha.simpson_e.rst", "generated/skbio.diversity.alpha.singles.rst", "generated/skbio.diversity.alpha.sobs.rst", "generated/skbio.diversity.alpha.strong.rst", "generated/skbio.diversity.alpha_diversity.rst", "generated/skbio.diversity.beta.rst", "generated/skbio.diversity.beta.unweighted_unifrac.rst", "generated/skbio.diversity.beta.weighted_unifrac.rst", "generated/skbio.diversity.beta_diversity.rst", "generated/skbio.diversity.block_beta_diversity.rst", "generated/skbio.diversity.get_alpha_diversity_metrics.rst", "generated/skbio.diversity.get_beta_diversity_metrics.rst", "generated/skbio.diversity.partial_beta_diversity.rst", "generated/skbio.io.format.binary_dm.rst", "generated/skbio.io.format.biom.rst", "generated/skbio.io.format.blast6.rst", "generated/skbio.io.format.blast7.rst", "generated/skbio.io.format.clustal.rst", "generated/skbio.io.format.embl.rst", "generated/skbio.io.format.fasta.rst", "generated/skbio.io.format.fastq.rst", "generated/skbio.io.format.genbank.rst", "generated/skbio.io.format.gff3.rst", "generated/skbio.io.format.lsmat.rst", "generated/skbio.io.format.newick.rst", "generated/skbio.io.format.ordination.rst", "generated/skbio.io.format.phylip.rst", "generated/skbio.io.format.qseq.rst", "generated/skbio.io.format.sample_metadata.rst", "generated/skbio.io.format.stockholm.rst", "generated/skbio.io.format.taxdump.rst", "generated/skbio.io.registry.rst", "generated/skbio.io.registry.Format.rst", "generated/skbio.io.registry.Format.__eq__.rst", "generated/skbio.io.registry.Format.__ge__.rst", "generated/skbio.io.registry.Format.__getstate__.rst", "generated/skbio.io.registry.Format.__gt__.rst", "generated/skbio.io.registry.Format.__hash__.rst", "generated/skbio.io.registry.Format.__le__.rst", "generated/skbio.io.registry.Format.__lt__.rst", "generated/skbio.io.registry.Format.__ne__.rst", "generated/skbio.io.registry.Format.__str__.rst", "generated/skbio.io.registry.Format.reader.rst", "generated/skbio.io.registry.Format.sniffer.rst", "generated/skbio.io.registry.Format.writer.rst", "generated/skbio.io.registry.IORegistry.rst", "generated/skbio.io.registry.IORegistry.__eq__.rst", "generated/skbio.io.registry.IORegistry.__ge__.rst", "generated/skbio.io.registry.IORegistry.__getstate__.rst", "generated/skbio.io.registry.IORegistry.__gt__.rst", "generated/skbio.io.registry.IORegistry.__hash__.rst", "generated/skbio.io.registry.IORegistry.__le__.rst", "generated/skbio.io.registry.IORegistry.__lt__.rst", "generated/skbio.io.registry.IORegistry.__ne__.rst", "generated/skbio.io.registry.IORegistry.__str__.rst", "generated/skbio.io.registry.IORegistry.add_format.rst", "generated/skbio.io.registry.IORegistry.create_format.rst", "generated/skbio.io.registry.IORegistry.get_reader.rst", "generated/skbio.io.registry.IORegistry.get_sniffer.rst", "generated/skbio.io.registry.IORegistry.get_writer.rst", "generated/skbio.io.registry.IORegistry.list_read_formats.rst", "generated/skbio.io.registry.IORegistry.list_write_formats.rst", "generated/skbio.io.registry.IORegistry.monkey_patch.rst", "generated/skbio.io.registry.IORegistry.read.rst", "generated/skbio.io.registry.IORegistry.sniff.rst", "generated/skbio.io.registry.IORegistry.write.rst", "generated/skbio.io.registry.create_format.rst", "generated/skbio.io.registry.read.rst", "generated/skbio.io.registry.sniff.rst", "generated/skbio.io.registry.write.rst", "generated/skbio.io.util.rst", "generated/skbio.io.util.open.rst", "generated/skbio.io.util.open_file.rst", "generated/skbio.io.util.open_files.rst", "generated/skbio.metadata.CategoricalMetadataColumn.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__eq__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ge__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__getstate__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__gt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__le__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__lt__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__ne__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.__str__.rst", "generated/skbio.metadata.CategoricalMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.filter_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_ids.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_missing.rst", "generated/skbio.metadata.CategoricalMetadataColumn.get_value.rst", "generated/skbio.metadata.CategoricalMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.CategoricalMetadataColumn.save.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.CategoricalMetadataColumn.to_series.rst", "generated/skbio.metadata.Interval.rst", "generated/skbio.metadata.Interval.__eq__.rst", "generated/skbio.metadata.Interval.__ge__.rst", "generated/skbio.metadata.Interval.__getstate__.rst", "generated/skbio.metadata.Interval.__gt__.rst", "generated/skbio.metadata.Interval.__le__.rst", "generated/skbio.metadata.Interval.__lt__.rst", "generated/skbio.metadata.Interval.__ne__.rst", "generated/skbio.metadata.Interval.__str__.rst", "generated/skbio.metadata.Interval.drop.rst", "generated/skbio.metadata.IntervalMetadata.rst", "generated/skbio.metadata.IntervalMetadata.__copy__.rst", "generated/skbio.metadata.IntervalMetadata.__deepcopy__.rst", "generated/skbio.metadata.IntervalMetadata.__eq__.rst", "generated/skbio.metadata.IntervalMetadata.__ge__.rst", "generated/skbio.metadata.IntervalMetadata.__getstate__.rst", "generated/skbio.metadata.IntervalMetadata.__gt__.rst", "generated/skbio.metadata.IntervalMetadata.__le__.rst", "generated/skbio.metadata.IntervalMetadata.__lt__.rst", "generated/skbio.metadata.IntervalMetadata.__ne__.rst", "generated/skbio.metadata.IntervalMetadata.__str__.rst", "generated/skbio.metadata.IntervalMetadata.add.rst", "generated/skbio.metadata.IntervalMetadata.concat.rst", "generated/skbio.metadata.IntervalMetadata.drop.rst", "generated/skbio.metadata.IntervalMetadata.merge.rst", "generated/skbio.metadata.IntervalMetadata.query.rst", "generated/skbio.metadata.IntervalMetadata.read.rst", "generated/skbio.metadata.IntervalMetadata.sort.rst", "generated/skbio.metadata.IntervalMetadata.write.rst", "generated/skbio.metadata.MetadataColumn.rst", "generated/skbio.metadata.MetadataColumn.__eq__.rst", "generated/skbio.metadata.MetadataColumn.__ge__.rst", "generated/skbio.metadata.MetadataColumn.__getstate__.rst", "generated/skbio.metadata.MetadataColumn.__gt__.rst", "generated/skbio.metadata.MetadataColumn.__le__.rst", "generated/skbio.metadata.MetadataColumn.__lt__.rst", "generated/skbio.metadata.MetadataColumn.__ne__.rst", "generated/skbio.metadata.MetadataColumn.__str__.rst", "generated/skbio.metadata.MetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.MetadataColumn.filter_ids.rst", "generated/skbio.metadata.MetadataColumn.get_ids.rst", "generated/skbio.metadata.MetadataColumn.get_missing.rst", "generated/skbio.metadata.MetadataColumn.get_value.rst", "generated/skbio.metadata.MetadataColumn.has_missing_values.rst", "generated/skbio.metadata.MetadataColumn.save.rst", "generated/skbio.metadata.MetadataColumn.to_dataframe.rst", "generated/skbio.metadata.MetadataColumn.to_series.rst", "generated/skbio.metadata.NumericMetadataColumn.rst", "generated/skbio.metadata.NumericMetadataColumn.__eq__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ge__.rst", "generated/skbio.metadata.NumericMetadataColumn.__getstate__.rst", "generated/skbio.metadata.NumericMetadataColumn.__gt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__le__.rst", "generated/skbio.metadata.NumericMetadataColumn.__lt__.rst", "generated/skbio.metadata.NumericMetadataColumn.__ne__.rst", "generated/skbio.metadata.NumericMetadataColumn.__str__.rst", "generated/skbio.metadata.NumericMetadataColumn.drop_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.filter_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_ids.rst", "generated/skbio.metadata.NumericMetadataColumn.get_missing.rst", "generated/skbio.metadata.NumericMetadataColumn.get_value.rst", "generated/skbio.metadata.NumericMetadataColumn.has_missing_values.rst", "generated/skbio.metadata.NumericMetadataColumn.save.rst", "generated/skbio.metadata.NumericMetadataColumn.to_dataframe.rst", "generated/skbio.metadata.NumericMetadataColumn.to_series.rst", "generated/skbio.metadata.SampleMetadata.rst", "generated/skbio.metadata.SampleMetadata.__eq__.rst", "generated/skbio.metadata.SampleMetadata.__ge__.rst", "generated/skbio.metadata.SampleMetadata.__getstate__.rst", "generated/skbio.metadata.SampleMetadata.__gt__.rst", "generated/skbio.metadata.SampleMetadata.__le__.rst", "generated/skbio.metadata.SampleMetadata.__lt__.rst", "generated/skbio.metadata.SampleMetadata.__ne__.rst", "generated/skbio.metadata.SampleMetadata.__str__.rst", "generated/skbio.metadata.SampleMetadata.filter_columns.rst", "generated/skbio.metadata.SampleMetadata.filter_ids.rst", "generated/skbio.metadata.SampleMetadata.get_column.rst", "generated/skbio.metadata.SampleMetadata.get_ids.rst", "generated/skbio.metadata.SampleMetadata.load.rst", "generated/skbio.metadata.SampleMetadata.merge.rst", "generated/skbio.metadata.SampleMetadata.read.rst", "generated/skbio.metadata.SampleMetadata.save.rst", "generated/skbio.metadata.SampleMetadata.to_dataframe.rst", "generated/skbio.metadata.SampleMetadata.write.rst", "generated/skbio.sequence.DNA.rst", "generated/skbio.sequence.DNA.__bool__.rst", "generated/skbio.sequence.DNA.__contains__.rst", "generated/skbio.sequence.DNA.__copy__.rst", "generated/skbio.sequence.DNA.__deepcopy__.rst", "generated/skbio.sequence.DNA.__eq__.rst", "generated/skbio.sequence.DNA.__ge__.rst", "generated/skbio.sequence.DNA.__getitem__.rst", "generated/skbio.sequence.DNA.__getstate__.rst", "generated/skbio.sequence.DNA.__gt__.rst", "generated/skbio.sequence.DNA.__iter__.rst", "generated/skbio.sequence.DNA.__le__.rst", "generated/skbio.sequence.DNA.__len__.rst", "generated/skbio.sequence.DNA.__lt__.rst", "generated/skbio.sequence.DNA.__ne__.rst", "generated/skbio.sequence.DNA.__reversed__.rst", "generated/skbio.sequence.DNA.__str__.rst", "generated/skbio.sequence.DNA.complement.rst", "generated/skbio.sequence.DNA.concat.rst", "generated/skbio.sequence.DNA.count.rst", "generated/skbio.sequence.DNA.definites.rst", "generated/skbio.sequence.DNA.degap.rst", "generated/skbio.sequence.DNA.degenerates.rst", "generated/skbio.sequence.DNA.distance.rst", "generated/skbio.sequence.DNA.expand_degenerates.rst", "generated/skbio.sequence.DNA.find_motifs.rst", "generated/skbio.sequence.DNA.find_with_regex.rst", "generated/skbio.sequence.DNA.frequencies.rst", "generated/skbio.sequence.DNA.gaps.rst", "generated/skbio.sequence.DNA.gc_content.rst", "generated/skbio.sequence.DNA.gc_frequency.rst", "generated/skbio.sequence.DNA.has_definites.rst", "generated/skbio.sequence.DNA.has_degenerates.rst", "generated/skbio.sequence.DNA.has_gaps.rst", "generated/skbio.sequence.DNA.has_interval_metadata.rst", "generated/skbio.sequence.DNA.has_metadata.rst", "generated/skbio.sequence.DNA.has_nondegenerates.rst", "generated/skbio.sequence.DNA.has_positional_metadata.rst", "generated/skbio.sequence.DNA.index.rst", "generated/skbio.sequence.DNA.is_reverse_complement.rst", "generated/skbio.sequence.DNA.iter_contiguous.rst", "generated/skbio.sequence.DNA.iter_kmers.rst", "generated/skbio.sequence.DNA.kmer_frequencies.rst", "generated/skbio.sequence.DNA.lowercase.rst", "generated/skbio.sequence.DNA.match_frequency.rst", "generated/skbio.sequence.DNA.matches.rst", "generated/skbio.sequence.DNA.mismatch_frequency.rst", "generated/skbio.sequence.DNA.mismatches.rst", "generated/skbio.sequence.DNA.nondegenerates.rst", "generated/skbio.sequence.DNA.read.rst", "generated/skbio.sequence.DNA.replace.rst", "generated/skbio.sequence.DNA.reverse_complement.rst", "generated/skbio.sequence.DNA.to_definites.rst", "generated/skbio.sequence.DNA.to_indices.rst", "generated/skbio.sequence.DNA.to_regex.rst", "generated/skbio.sequence.DNA.transcribe.rst", "generated/skbio.sequence.DNA.translate.rst", "generated/skbio.sequence.DNA.translate_six_frames.rst", "generated/skbio.sequence.DNA.write.rst", "generated/skbio.sequence.GeneticCode.rst", "generated/skbio.sequence.GeneticCode.__eq__.rst", "generated/skbio.sequence.GeneticCode.__ge__.rst", "generated/skbio.sequence.GeneticCode.__getstate__.rst", "generated/skbio.sequence.GeneticCode.__gt__.rst", "generated/skbio.sequence.GeneticCode.__le__.rst", "generated/skbio.sequence.GeneticCode.__lt__.rst", "generated/skbio.sequence.GeneticCode.__ne__.rst", "generated/skbio.sequence.GeneticCode.__str__.rst", "generated/skbio.sequence.GeneticCode.from_ncbi.rst", "generated/skbio.sequence.GeneticCode.translate.rst", "generated/skbio.sequence.GeneticCode.translate_six_frames.rst", "generated/skbio.sequence.GrammaredSequence.rst", "generated/skbio.sequence.GrammaredSequence.__bool__.rst", "generated/skbio.sequence.GrammaredSequence.__contains__.rst", "generated/skbio.sequence.GrammaredSequence.__copy__.rst", "generated/skbio.sequence.GrammaredSequence.__deepcopy__.rst", "generated/skbio.sequence.GrammaredSequence.__eq__.rst", "generated/skbio.sequence.GrammaredSequence.__ge__.rst", "generated/skbio.sequence.GrammaredSequence.__getitem__.rst", "generated/skbio.sequence.GrammaredSequence.__getstate__.rst", "generated/skbio.sequence.GrammaredSequence.__gt__.rst", "generated/skbio.sequence.GrammaredSequence.__iter__.rst", "generated/skbio.sequence.GrammaredSequence.__le__.rst", "generated/skbio.sequence.GrammaredSequence.__len__.rst", "generated/skbio.sequence.GrammaredSequence.__lt__.rst", "generated/skbio.sequence.GrammaredSequence.__ne__.rst", "generated/skbio.sequence.GrammaredSequence.__reversed__.rst", "generated/skbio.sequence.GrammaredSequence.__str__.rst", "generated/skbio.sequence.GrammaredSequence.concat.rst", "generated/skbio.sequence.GrammaredSequence.count.rst", "generated/skbio.sequence.GrammaredSequence.definites.rst", "generated/skbio.sequence.GrammaredSequence.degap.rst", "generated/skbio.sequence.GrammaredSequence.degenerates.rst", "generated/skbio.sequence.GrammaredSequence.distance.rst", "generated/skbio.sequence.GrammaredSequence.expand_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.find_motifs.rst", "generated/skbio.sequence.GrammaredSequence.find_with_regex.rst", "generated/skbio.sequence.GrammaredSequence.frequencies.rst", "generated/skbio.sequence.GrammaredSequence.gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_definites.rst", "generated/skbio.sequence.GrammaredSequence.has_degenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_gaps.rst", "generated/skbio.sequence.GrammaredSequence.has_interval_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_metadata.rst", "generated/skbio.sequence.GrammaredSequence.has_nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.has_positional_metadata.rst", "generated/skbio.sequence.GrammaredSequence.index.rst", "generated/skbio.sequence.GrammaredSequence.iter_contiguous.rst", "generated/skbio.sequence.GrammaredSequence.iter_kmers.rst", "generated/skbio.sequence.GrammaredSequence.kmer_frequencies.rst", "generated/skbio.sequence.GrammaredSequence.lowercase.rst", "generated/skbio.sequence.GrammaredSequence.match_frequency.rst", "generated/skbio.sequence.GrammaredSequence.matches.rst", "generated/skbio.sequence.GrammaredSequence.mismatch_frequency.rst", "generated/skbio.sequence.GrammaredSequence.mismatches.rst", "generated/skbio.sequence.GrammaredSequence.nondegenerates.rst", "generated/skbio.sequence.GrammaredSequence.read.rst", "generated/skbio.sequence.GrammaredSequence.replace.rst", "generated/skbio.sequence.GrammaredSequence.to_definites.rst", "generated/skbio.sequence.GrammaredSequence.to_indices.rst", "generated/skbio.sequence.GrammaredSequence.to_regex.rst", "generated/skbio.sequence.GrammaredSequence.write.rst", "generated/skbio.sequence.Protein.rst", "generated/skbio.sequence.Protein.__bool__.rst", "generated/skbio.sequence.Protein.__contains__.rst", "generated/skbio.sequence.Protein.__copy__.rst", "generated/skbio.sequence.Protein.__deepcopy__.rst", "generated/skbio.sequence.Protein.__eq__.rst", "generated/skbio.sequence.Protein.__ge__.rst", "generated/skbio.sequence.Protein.__getitem__.rst", "generated/skbio.sequence.Protein.__getstate__.rst", "generated/skbio.sequence.Protein.__gt__.rst", "generated/skbio.sequence.Protein.__iter__.rst", "generated/skbio.sequence.Protein.__le__.rst", "generated/skbio.sequence.Protein.__len__.rst", "generated/skbio.sequence.Protein.__lt__.rst", "generated/skbio.sequence.Protein.__ne__.rst", "generated/skbio.sequence.Protein.__reversed__.rst", "generated/skbio.sequence.Protein.__str__.rst", "generated/skbio.sequence.Protein.concat.rst", "generated/skbio.sequence.Protein.count.rst", "generated/skbio.sequence.Protein.definites.rst", "generated/skbio.sequence.Protein.degap.rst", "generated/skbio.sequence.Protein.degenerates.rst", "generated/skbio.sequence.Protein.distance.rst", "generated/skbio.sequence.Protein.expand_degenerates.rst", "generated/skbio.sequence.Protein.find_motifs.rst", "generated/skbio.sequence.Protein.find_with_regex.rst", "generated/skbio.sequence.Protein.frequencies.rst", "generated/skbio.sequence.Protein.gaps.rst", "generated/skbio.sequence.Protein.has_definites.rst", "generated/skbio.sequence.Protein.has_degenerates.rst", "generated/skbio.sequence.Protein.has_gaps.rst", "generated/skbio.sequence.Protein.has_interval_metadata.rst", "generated/skbio.sequence.Protein.has_metadata.rst", "generated/skbio.sequence.Protein.has_nondegenerates.rst", "generated/skbio.sequence.Protein.has_positional_metadata.rst", "generated/skbio.sequence.Protein.has_stops.rst", "generated/skbio.sequence.Protein.index.rst", "generated/skbio.sequence.Protein.iter_contiguous.rst", "generated/skbio.sequence.Protein.iter_kmers.rst", "generated/skbio.sequence.Protein.kmer_frequencies.rst", "generated/skbio.sequence.Protein.lowercase.rst", "generated/skbio.sequence.Protein.match_frequency.rst", "generated/skbio.sequence.Protein.matches.rst", "generated/skbio.sequence.Protein.mismatch_frequency.rst", "generated/skbio.sequence.Protein.mismatches.rst", "generated/skbio.sequence.Protein.nondegenerates.rst", "generated/skbio.sequence.Protein.read.rst", "generated/skbio.sequence.Protein.replace.rst", "generated/skbio.sequence.Protein.stops.rst", "generated/skbio.sequence.Protein.to_definites.rst", "generated/skbio.sequence.Protein.to_indices.rst", "generated/skbio.sequence.Protein.to_regex.rst", "generated/skbio.sequence.Protein.write.rst", "generated/skbio.sequence.RNA.rst", "generated/skbio.sequence.RNA.__bool__.rst", "generated/skbio.sequence.RNA.__contains__.rst", "generated/skbio.sequence.RNA.__copy__.rst", "generated/skbio.sequence.RNA.__deepcopy__.rst", "generated/skbio.sequence.RNA.__eq__.rst", "generated/skbio.sequence.RNA.__ge__.rst", "generated/skbio.sequence.RNA.__getitem__.rst", "generated/skbio.sequence.RNA.__getstate__.rst", "generated/skbio.sequence.RNA.__gt__.rst", "generated/skbio.sequence.RNA.__iter__.rst", "generated/skbio.sequence.RNA.__le__.rst", "generated/skbio.sequence.RNA.__len__.rst", "generated/skbio.sequence.RNA.__lt__.rst", "generated/skbio.sequence.RNA.__ne__.rst", "generated/skbio.sequence.RNA.__reversed__.rst", "generated/skbio.sequence.RNA.__str__.rst", "generated/skbio.sequence.RNA.complement.rst", "generated/skbio.sequence.RNA.concat.rst", "generated/skbio.sequence.RNA.count.rst", "generated/skbio.sequence.RNA.definites.rst", "generated/skbio.sequence.RNA.degap.rst", "generated/skbio.sequence.RNA.degenerates.rst", "generated/skbio.sequence.RNA.distance.rst", "generated/skbio.sequence.RNA.expand_degenerates.rst", "generated/skbio.sequence.RNA.find_motifs.rst", "generated/skbio.sequence.RNA.find_with_regex.rst", "generated/skbio.sequence.RNA.frequencies.rst", "generated/skbio.sequence.RNA.gaps.rst", "generated/skbio.sequence.RNA.gc_content.rst", "generated/skbio.sequence.RNA.gc_frequency.rst", "generated/skbio.sequence.RNA.has_definites.rst", "generated/skbio.sequence.RNA.has_degenerates.rst", "generated/skbio.sequence.RNA.has_gaps.rst", "generated/skbio.sequence.RNA.has_interval_metadata.rst", "generated/skbio.sequence.RNA.has_metadata.rst", "generated/skbio.sequence.RNA.has_nondegenerates.rst", "generated/skbio.sequence.RNA.has_positional_metadata.rst", "generated/skbio.sequence.RNA.index.rst", "generated/skbio.sequence.RNA.is_reverse_complement.rst", "generated/skbio.sequence.RNA.iter_contiguous.rst", "generated/skbio.sequence.RNA.iter_kmers.rst", "generated/skbio.sequence.RNA.kmer_frequencies.rst", "generated/skbio.sequence.RNA.lowercase.rst", "generated/skbio.sequence.RNA.match_frequency.rst", "generated/skbio.sequence.RNA.matches.rst", "generated/skbio.sequence.RNA.mismatch_frequency.rst", "generated/skbio.sequence.RNA.mismatches.rst", "generated/skbio.sequence.RNA.nondegenerates.rst", "generated/skbio.sequence.RNA.read.rst", "generated/skbio.sequence.RNA.replace.rst", "generated/skbio.sequence.RNA.reverse_complement.rst", "generated/skbio.sequence.RNA.reverse_transcribe.rst", "generated/skbio.sequence.RNA.to_definites.rst", "generated/skbio.sequence.RNA.to_indices.rst", "generated/skbio.sequence.RNA.to_regex.rst", "generated/skbio.sequence.RNA.translate.rst", "generated/skbio.sequence.RNA.translate_six_frames.rst", "generated/skbio.sequence.RNA.write.rst", "generated/skbio.sequence.Sequence.rst", "generated/skbio.sequence.Sequence.__bool__.rst", "generated/skbio.sequence.Sequence.__contains__.rst", "generated/skbio.sequence.Sequence.__copy__.rst", "generated/skbio.sequence.Sequence.__deepcopy__.rst", "generated/skbio.sequence.Sequence.__eq__.rst", "generated/skbio.sequence.Sequence.__ge__.rst", "generated/skbio.sequence.Sequence.__getitem__.rst", "generated/skbio.sequence.Sequence.__getstate__.rst", "generated/skbio.sequence.Sequence.__gt__.rst", "generated/skbio.sequence.Sequence.__iter__.rst", "generated/skbio.sequence.Sequence.__le__.rst", "generated/skbio.sequence.Sequence.__len__.rst", "generated/skbio.sequence.Sequence.__lt__.rst", "generated/skbio.sequence.Sequence.__ne__.rst", "generated/skbio.sequence.Sequence.__reversed__.rst", "generated/skbio.sequence.Sequence.__str__.rst", "generated/skbio.sequence.Sequence.concat.rst", "generated/skbio.sequence.Sequence.count.rst", "generated/skbio.sequence.Sequence.distance.rst", "generated/skbio.sequence.Sequence.find_with_regex.rst", "generated/skbio.sequence.Sequence.frequencies.rst", "generated/skbio.sequence.Sequence.has_interval_metadata.rst", "generated/skbio.sequence.Sequence.has_metadata.rst", "generated/skbio.sequence.Sequence.has_positional_metadata.rst", "generated/skbio.sequence.Sequence.index.rst", "generated/skbio.sequence.Sequence.iter_contiguous.rst", "generated/skbio.sequence.Sequence.iter_kmers.rst", "generated/skbio.sequence.Sequence.kmer_frequencies.rst", "generated/skbio.sequence.Sequence.lowercase.rst", "generated/skbio.sequence.Sequence.match_frequency.rst", "generated/skbio.sequence.Sequence.matches.rst", "generated/skbio.sequence.Sequence.mismatch_frequency.rst", "generated/skbio.sequence.Sequence.mismatches.rst", "generated/skbio.sequence.Sequence.read.rst", "generated/skbio.sequence.Sequence.replace.rst", "generated/skbio.sequence.Sequence.to_indices.rst", "generated/skbio.sequence.Sequence.write.rst", "generated/skbio.sequence.SubstitutionMatrix.rst", "generated/skbio.sequence.SubstitutionMatrix.__contains__.rst", "generated/skbio.sequence.SubstitutionMatrix.__eq__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ge__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getitem__.rst", "generated/skbio.sequence.SubstitutionMatrix.__getstate__.rst", "generated/skbio.sequence.SubstitutionMatrix.__gt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__le__.rst", "generated/skbio.sequence.SubstitutionMatrix.__lt__.rst", "generated/skbio.sequence.SubstitutionMatrix.__ne__.rst", "generated/skbio.sequence.SubstitutionMatrix.__str__.rst", "generated/skbio.sequence.SubstitutionMatrix.between.rst", "generated/skbio.sequence.SubstitutionMatrix.by_name.rst", "generated/skbio.sequence.SubstitutionMatrix.copy.rst", "generated/skbio.sequence.SubstitutionMatrix.filter.rst", "generated/skbio.sequence.SubstitutionMatrix.from_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.from_iterable.rst", "generated/skbio.sequence.SubstitutionMatrix.get_names.rst", "generated/skbio.sequence.SubstitutionMatrix.identity.rst", "generated/skbio.sequence.SubstitutionMatrix.index.rst", "generated/skbio.sequence.SubstitutionMatrix.plot.rst", "generated/skbio.sequence.SubstitutionMatrix.read.rst", "generated/skbio.sequence.SubstitutionMatrix.redundant_form.rst", "generated/skbio.sequence.SubstitutionMatrix.to_data_frame.rst", "generated/skbio.sequence.SubstitutionMatrix.to_dict.rst", "generated/skbio.sequence.SubstitutionMatrix.transpose.rst", "generated/skbio.sequence.SubstitutionMatrix.within.rst", "generated/skbio.sequence.SubstitutionMatrix.write.rst", "generated/skbio.sequence.distance.rst", "generated/skbio.sequence.distance.hamming.rst", "generated/skbio.sequence.distance.kmer_distance.rst", "generated/skbio.stats.composition.rst", "generated/skbio.stats.composition.alr.rst", "generated/skbio.stats.composition.alr_inv.rst", "generated/skbio.stats.composition.ancom.rst", "generated/skbio.stats.composition.centralize.rst", "generated/skbio.stats.composition.closure.rst", "generated/skbio.stats.composition.clr.rst", "generated/skbio.stats.composition.clr_inv.rst", "generated/skbio.stats.composition.dirmult_ttest.rst", "generated/skbio.stats.composition.ilr.rst", "generated/skbio.stats.composition.ilr_inv.rst", "generated/skbio.stats.composition.inner.rst", "generated/skbio.stats.composition.multi_replace.rst", "generated/skbio.stats.composition.multiplicative_replacement.rst", "generated/skbio.stats.composition.pairwise_vlr.rst", "generated/skbio.stats.composition.perturb.rst", "generated/skbio.stats.composition.perturb_inv.rst", "generated/skbio.stats.composition.power.rst", "generated/skbio.stats.composition.sbp_basis.rst", "generated/skbio.stats.composition.tree_basis.rst", "generated/skbio.stats.composition.vlr.rst", "generated/skbio.stats.distance.rst", "generated/skbio.stats.distance.DissimilarityMatrix.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__contains__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__eq__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ge__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getitem__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__getstate__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__gt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__le__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__lt__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__ne__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.__str__.rst", "generated/skbio.stats.distance.DissimilarityMatrix.between.rst", "generated/skbio.stats.distance.DissimilarityMatrix.copy.rst", "generated/skbio.stats.distance.DissimilarityMatrix.filter.rst", "generated/skbio.stats.distance.DissimilarityMatrix.from_iterable.rst", "generated/skbio.stats.distance.DissimilarityMatrix.index.rst", "generated/skbio.stats.distance.DissimilarityMatrix.plot.rst", "generated/skbio.stats.distance.DissimilarityMatrix.read.rst", "generated/skbio.stats.distance.DissimilarityMatrix.redundant_form.rst", "generated/skbio.stats.distance.DissimilarityMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DissimilarityMatrix.transpose.rst", "generated/skbio.stats.distance.DissimilarityMatrix.within.rst", "generated/skbio.stats.distance.DissimilarityMatrix.write.rst", "generated/skbio.stats.distance.DistanceMatrix.rst", "generated/skbio.stats.distance.DistanceMatrix.__contains__.rst", "generated/skbio.stats.distance.DistanceMatrix.__eq__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ge__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getitem__.rst", "generated/skbio.stats.distance.DistanceMatrix.__getstate__.rst", "generated/skbio.stats.distance.DistanceMatrix.__gt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__le__.rst", "generated/skbio.stats.distance.DistanceMatrix.__lt__.rst", "generated/skbio.stats.distance.DistanceMatrix.__ne__.rst", "generated/skbio.stats.distance.DistanceMatrix.__str__.rst", "generated/skbio.stats.distance.DistanceMatrix.between.rst", "generated/skbio.stats.distance.DistanceMatrix.condensed_form.rst", "generated/skbio.stats.distance.DistanceMatrix.copy.rst", "generated/skbio.stats.distance.DistanceMatrix.filter.rst", "generated/skbio.stats.distance.DistanceMatrix.from_iterable.rst", "generated/skbio.stats.distance.DistanceMatrix.index.rst", "generated/skbio.stats.distance.DistanceMatrix.permute.rst", "generated/skbio.stats.distance.DistanceMatrix.plot.rst", "generated/skbio.stats.distance.DistanceMatrix.read.rst", "generated/skbio.stats.distance.DistanceMatrix.redundant_form.rst", "generated/skbio.stats.distance.DistanceMatrix.to_data_frame.rst", "generated/skbio.stats.distance.DistanceMatrix.to_series.rst", "generated/skbio.stats.distance.DistanceMatrix.transpose.rst", "generated/skbio.stats.distance.DistanceMatrix.within.rst", "generated/skbio.stats.distance.DistanceMatrix.write.rst", "generated/skbio.stats.distance.anosim.rst", "generated/skbio.stats.distance.bioenv.rst", "generated/skbio.stats.distance.mantel.rst", "generated/skbio.stats.distance.permanova.rst", "generated/skbio.stats.distance.permdisp.rst", "generated/skbio.stats.distance.pwmantel.rst", "generated/skbio.stats.distance.randdm.rst", "generated/skbio.stats.evolve.rst", "generated/skbio.stats.evolve.hommola_cospeciation.rst", "generated/skbio.stats.gradient.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.AverageGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.CategoryResults.rst", "generated/skbio.stats.gradient.CategoryResults.__eq__.rst", "generated/skbio.stats.gradient.CategoryResults.__ge__.rst", "generated/skbio.stats.gradient.CategoryResults.__getstate__.rst", "generated/skbio.stats.gradient.CategoryResults.__gt__.rst", "generated/skbio.stats.gradient.CategoryResults.__hash__.rst", "generated/skbio.stats.gradient.CategoryResults.__le__.rst", "generated/skbio.stats.gradient.CategoryResults.__lt__.rst", "generated/skbio.stats.gradient.CategoryResults.__ne__.rst", "generated/skbio.stats.gradient.CategoryResults.__str__.rst", "generated/skbio.stats.gradient.CategoryResults.to_files.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVA.rst", "generated/skbio.stats.gradient.GradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVA.__le__.rst", "generated/skbio.stats.gradient.GradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVA.__str__.rst", "generated/skbio.stats.gradient.GradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.GradientANOVAResults.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__eq__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ge__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__getstate__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__gt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__hash__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__le__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__lt__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__ne__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.__str__.rst", "generated/skbio.stats.gradient.GradientANOVAResults.to_files.rst", "generated/skbio.stats.gradient.GroupResults.rst", "generated/skbio.stats.gradient.GroupResults.__eq__.rst", "generated/skbio.stats.gradient.GroupResults.__ge__.rst", "generated/skbio.stats.gradient.GroupResults.__getstate__.rst", "generated/skbio.stats.gradient.GroupResults.__gt__.rst", "generated/skbio.stats.gradient.GroupResults.__hash__.rst", "generated/skbio.stats.gradient.GroupResults.__le__.rst", "generated/skbio.stats.gradient.GroupResults.__lt__.rst", "generated/skbio.stats.gradient.GroupResults.__ne__.rst", "generated/skbio.stats.gradient.GroupResults.__str__.rst", "generated/skbio.stats.gradient.GroupResults.to_files.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__.rst", "generated/skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories.rst", "generated/skbio.stats.isubsample.rst", "generated/skbio.stats.ordination.rst", "generated/skbio.stats.ordination.OrdinationResults.rst", "generated/skbio.stats.ordination.OrdinationResults.__eq__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ge__.rst", "generated/skbio.stats.ordination.OrdinationResults.__getstate__.rst", "generated/skbio.stats.ordination.OrdinationResults.__gt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__hash__.rst", "generated/skbio.stats.ordination.OrdinationResults.__le__.rst", "generated/skbio.stats.ordination.OrdinationResults.__lt__.rst", "generated/skbio.stats.ordination.OrdinationResults.__ne__.rst", "generated/skbio.stats.ordination.OrdinationResults.__str__.rst", "generated/skbio.stats.ordination.OrdinationResults.plot.rst", "generated/skbio.stats.ordination.OrdinationResults.read.rst", "generated/skbio.stats.ordination.OrdinationResults.write.rst", "generated/skbio.stats.ordination.ca.rst", "generated/skbio.stats.ordination.cca.rst", "generated/skbio.stats.ordination.corr.rst", "generated/skbio.stats.ordination.e_matrix.rst", "generated/skbio.stats.ordination.f_matrix.rst", "generated/skbio.stats.ordination.mean_and_std.rst", "generated/skbio.stats.ordination.pcoa.rst", "generated/skbio.stats.ordination.pcoa_biplot.rst", "generated/skbio.stats.ordination.rda.rst", "generated/skbio.stats.ordination.scale.rst", "generated/skbio.stats.ordination.svd_rank.rst", "generated/skbio.stats.power.rst", "generated/skbio.stats.power.confidence_bound.rst", "generated/skbio.stats.power.paired_subsamples.rst", "generated/skbio.stats.power.subsample_paired_power.rst", "generated/skbio.stats.power.subsample_power.rst", "generated/skbio.stats.subsample_counts.rst", "generated/skbio.table.Table.rst", "generated/skbio.table.Table.__eq__.rst", "generated/skbio.table.Table.__ge__.rst", "generated/skbio.table.Table.__getitem__.rst", "generated/skbio.table.Table.__getstate__.rst", "generated/skbio.table.Table.__gt__.rst", "generated/skbio.table.Table.__iter__.rst", "generated/skbio.table.Table.__le__.rst", "generated/skbio.table.Table.__lt__.rst", "generated/skbio.table.Table.__ne__.rst", "generated/skbio.table.Table.__str__.rst", "generated/skbio.table.Table.add_group_metadata.rst", "generated/skbio.table.Table.add_metadata.rst", "generated/skbio.table.Table.align_to.rst", "generated/skbio.table.Table.align_to_dataframe.rst", "generated/skbio.table.Table.align_tree.rst", "generated/skbio.table.Table.collapse.rst", "generated/skbio.table.Table.concat.rst", "generated/skbio.table.Table.copy.rst", "generated/skbio.table.Table.data.rst", "generated/skbio.table.Table.del_metadata.rst", "generated/skbio.table.Table.delimited_self.rst", "generated/skbio.table.Table.descriptive_equality.rst", "generated/skbio.table.Table.exists.rst", "generated/skbio.table.Table.filter.rst", "generated/skbio.table.Table.from_adjacency.rst", "generated/skbio.table.Table.from_hdf5.rst", "generated/skbio.table.Table.from_json.rst", "generated/skbio.table.Table.from_tsv.rst", "generated/skbio.table.Table.get_table_density.rst", "generated/skbio.table.Table.get_value_by_ids.rst", "generated/skbio.table.Table.group_metadata.rst", "generated/skbio.table.Table.head.rst", "generated/skbio.table.Table.ids.rst", "generated/skbio.table.Table.index.rst", "generated/skbio.table.Table.is_empty.rst", "generated/skbio.table.Table.iter.rst", "generated/skbio.table.Table.iter_data.rst", "generated/skbio.table.Table.iter_pairwise.rst", "generated/skbio.table.Table.length.rst", "generated/skbio.table.Table.max.rst", "generated/skbio.table.Table.merge.rst", "generated/skbio.table.Table.metadata.rst", "generated/skbio.table.Table.metadata_to_dataframe.rst", "generated/skbio.table.Table.min.rst", "generated/skbio.table.Table.nonzero.rst", "generated/skbio.table.Table.nonzero_counts.rst", "generated/skbio.table.Table.norm.rst", "generated/skbio.table.Table.pa.rst", "generated/skbio.table.Table.partition.rst", "generated/skbio.table.Table.rankdata.rst", "generated/skbio.table.Table.read.rst", "generated/skbio.table.Table.reduce.rst", "generated/skbio.table.Table.remove_empty.rst", "generated/skbio.table.Table.sort.rst", "generated/skbio.table.Table.sort_order.rst", "generated/skbio.table.Table.subsample.rst", "generated/skbio.table.Table.sum.rst", "generated/skbio.table.Table.to_anndata.rst", "generated/skbio.table.Table.to_dataframe.rst", "generated/skbio.table.Table.to_hdf5.rst", "generated/skbio.table.Table.to_json.rst", "generated/skbio.table.Table.to_tsv.rst", "generated/skbio.table.Table.transform.rst", "generated/skbio.table.Table.transpose.rst", "generated/skbio.table.Table.update_ids.rst", "generated/skbio.table.Table.write.rst", "generated/skbio.table.example_table.rst", "generated/skbio.tree.TreeNode.rst", "generated/skbio.tree.TreeNode.__copy__.rst", "generated/skbio.tree.TreeNode.__deepcopy__.rst", "generated/skbio.tree.TreeNode.__eq__.rst", "generated/skbio.tree.TreeNode.__ge__.rst", "generated/skbio.tree.TreeNode.__getitem__.rst", "generated/skbio.tree.TreeNode.__getstate__.rst", "generated/skbio.tree.TreeNode.__gt__.rst", "generated/skbio.tree.TreeNode.__hash__.rst", "generated/skbio.tree.TreeNode.__iter__.rst", "generated/skbio.tree.TreeNode.__le__.rst", "generated/skbio.tree.TreeNode.__len__.rst", "generated/skbio.tree.TreeNode.__lt__.rst", "generated/skbio.tree.TreeNode.__ne__.rst", "generated/skbio.tree.TreeNode.__str__.rst", "generated/skbio.tree.TreeNode.accumulate_to_ancestor.rst", "generated/skbio.tree.TreeNode.ancestors.rst", "generated/skbio.tree.TreeNode.append.rst", "generated/skbio.tree.TreeNode.ascii_art.rst", "generated/skbio.tree.TreeNode.assign_ids.rst", "generated/skbio.tree.TreeNode.assign_supports.rst", "generated/skbio.tree.TreeNode.bifurcate.rst", "generated/skbio.tree.TreeNode.cache_attr.rst", "generated/skbio.tree.TreeNode.compare_rfd.rst", "generated/skbio.tree.TreeNode.compare_subsets.rst", "generated/skbio.tree.TreeNode.compare_tip_distances.rst", "generated/skbio.tree.TreeNode.copy.rst", "generated/skbio.tree.TreeNode.count.rst", "generated/skbio.tree.TreeNode.create_caches.rst", "generated/skbio.tree.TreeNode.deepcopy.rst", "generated/skbio.tree.TreeNode.descending_branch_length.rst", "generated/skbio.tree.TreeNode.distance.rst", "generated/skbio.tree.TreeNode.extend.rst", "generated/skbio.tree.TreeNode.find.rst", "generated/skbio.tree.TreeNode.find_all.rst", "generated/skbio.tree.TreeNode.find_by_func.rst", "generated/skbio.tree.TreeNode.find_by_id.rst", "generated/skbio.tree.TreeNode.from_linkage_matrix.rst", "generated/skbio.tree.TreeNode.from_taxdump.rst", "generated/skbio.tree.TreeNode.from_taxonomy.rst", "generated/skbio.tree.TreeNode.get_max_distance.rst", "generated/skbio.tree.TreeNode.has_children.rst", "generated/skbio.tree.TreeNode.index_tree.rst", "generated/skbio.tree.TreeNode.invalidate_caches.rst", "generated/skbio.tree.TreeNode.is_root.rst", "generated/skbio.tree.TreeNode.is_tip.rst", "generated/skbio.tree.TreeNode.lca.rst", "generated/skbio.tree.TreeNode.levelorder.rst", "generated/skbio.tree.TreeNode.lowest_common_ancestor.rst", "generated/skbio.tree.TreeNode.neighbors.rst", "generated/skbio.tree.TreeNode.non_tips.rst", "generated/skbio.tree.TreeNode.observed_node_counts.rst", "generated/skbio.tree.TreeNode.pop.rst", "generated/skbio.tree.TreeNode.postorder.rst", "generated/skbio.tree.TreeNode.pre_and_postorder.rst", "generated/skbio.tree.TreeNode.preorder.rst", "generated/skbio.tree.TreeNode.prune.rst", "generated/skbio.tree.TreeNode.read.rst", "generated/skbio.tree.TreeNode.remove.rst", "generated/skbio.tree.TreeNode.remove_deleted.rst", "generated/skbio.tree.TreeNode.root.rst", "generated/skbio.tree.TreeNode.root_at.rst", "generated/skbio.tree.TreeNode.root_at_midpoint.rst", "generated/skbio.tree.TreeNode.shear.rst", "generated/skbio.tree.TreeNode.shuffle.rst", "generated/skbio.tree.TreeNode.siblings.rst", "generated/skbio.tree.TreeNode.subset.rst", "generated/skbio.tree.TreeNode.subsets.rst", "generated/skbio.tree.TreeNode.subtree.rst", "generated/skbio.tree.TreeNode.tip_tip_distances.rst", "generated/skbio.tree.TreeNode.tips.rst", "generated/skbio.tree.TreeNode.to_array.rst", "generated/skbio.tree.TreeNode.to_taxonomy.rst", "generated/skbio.tree.TreeNode.traverse.rst", "generated/skbio.tree.TreeNode.unpack.rst", "generated/skbio.tree.TreeNode.unpack_by_func.rst", "generated/skbio.tree.TreeNode.unrooted_copy.rst", "generated/skbio.tree.TreeNode.unrooted_deepcopy.rst", "generated/skbio.tree.TreeNode.write.rst", "generated/skbio.tree.majority_rule.rst", "generated/skbio.tree.nj.rst", "generated/skbio.util.EfficiencyWarning.rst", "generated/skbio.util.RepresentationWarning.rst", "generated/skbio.util.assert_data_frame_almost_equal.rst", "generated/skbio.util.assert_ordination_results_equal.rst", "generated/skbio.util.cardinal_to_ordinal.rst", "generated/skbio.util.classproperty.rst", "generated/skbio.util.classproperty.__delete__.rst", "generated/skbio.util.classproperty.__eq__.rst", "generated/skbio.util.classproperty.__ge__.rst", "generated/skbio.util.classproperty.__get__.rst", "generated/skbio.util.classproperty.__getstate__.rst", "generated/skbio.util.classproperty.__gt__.rst", "generated/skbio.util.classproperty.__hash__.rst", "generated/skbio.util.classproperty.__le__.rst", "generated/skbio.util.classproperty.__lt__.rst", "generated/skbio.util.classproperty.__ne__.rst", "generated/skbio.util.classproperty.__set__.rst", "generated/skbio.util.classproperty.__set_name__.rst", "generated/skbio.util.classproperty.__str__.rst", "generated/skbio.util.classproperty.deleter.rst", "generated/skbio.util.classproperty.getter.rst", "generated/skbio.util.classproperty.setter.rst", "generated/skbio.util.find_duplicates.rst", "generated/skbio.util.get_data_path.rst", "generated/skbio.util.safe_md5.rst", "generated/skbio.workflow.Workflow.rst", "generated/skbio.workflow.Workflow.__call__.rst", "generated/skbio.workflow.Workflow.__eq__.rst", "generated/skbio.workflow.Workflow.__ge__.rst", "generated/skbio.workflow.Workflow.__getstate__.rst", "generated/skbio.workflow.Workflow.__gt__.rst", "generated/skbio.workflow.Workflow.__hash__.rst", "generated/skbio.workflow.Workflow.__le__.rst", "generated/skbio.workflow.Workflow.__lt__.rst", "generated/skbio.workflow.Workflow.__ne__.rst", "generated/skbio.workflow.Workflow.__str__.rst", "generated/skbio.workflow.Workflow.initialize_state.rst", "generated/skbio.workflow.method.rst", "generated/skbio.workflow.method.__call__.rst", "generated/skbio.workflow.method.__eq__.rst", "generated/skbio.workflow.method.__ge__.rst", "generated/skbio.workflow.method.__getstate__.rst", "generated/skbio.workflow.method.__gt__.rst", "generated/skbio.workflow.method.__hash__.rst", "generated/skbio.workflow.method.__le__.rst", "generated/skbio.workflow.method.__lt__.rst", "generated/skbio.workflow.method.__ne__.rst", "generated/skbio.workflow.method.__str__.rst", "generated/skbio.workflow.requires.rst", "generated/skbio.workflow.requires.__call__.rst", "generated/skbio.workflow.requires.__eq__.rst", "generated/skbio.workflow.requires.__ge__.rst", "generated/skbio.workflow.requires.__getstate__.rst", "generated/skbio.workflow.requires.__gt__.rst", "generated/skbio.workflow.requires.__hash__.rst", "generated/skbio.workflow.requires.__le__.rst", "generated/skbio.workflow.requires.__lt__.rst", "generated/skbio.workflow.requires.__ne__.rst", "generated/skbio.workflow.requires.__str__.rst", "index.rst", "io.rst", "metadata.rst", "sequence.rst", "stats.rst", "table.rst", "tree.rst", "util.rst", "workflow.rst"], "indexentries": {"__bool__() (skbio.alignment.tabularmsa method)": [[29, "skbio.alignment.TabularMSA.__bool__", false]], "__bool__() (skbio.sequence.dna method)": [[276, "skbio.sequence.DNA.__bool__", false]], "__bool__() (skbio.sequence.grammaredsequence method)": [[347, "skbio.sequence.GrammaredSequence.__bool__", false]], "__bool__() (skbio.sequence.protein method)": [[398, "skbio.sequence.Protein.__bool__", false]], "__bool__() (skbio.sequence.rna method)": [[451, "skbio.sequence.RNA.__bool__", false]], "__bool__() (skbio.sequence.sequence method)": [[510, "skbio.sequence.Sequence.__bool__", false]], "__call__() (skbio.alignment.stripedsmithwaterman method)": [[17, "skbio.alignment.StripedSmithWaterman.__call__", false]], "__call__() (skbio.workflow.method method)": [[966, "skbio.workflow.method.__call__", false]], "__call__() (skbio.workflow.requires method)": [[977, "skbio.workflow.requires.__call__", false]], "__call__() (skbio.workflow.workflow method)": [[954, "skbio.workflow.Workflow.__call__", false]], "__contains__() (skbio.alignment.tabularmsa method)": [[30, "skbio.alignment.TabularMSA.__contains__", false]], "__contains__() (skbio.sequence.dna method)": [[277, "skbio.sequence.DNA.__contains__", false]], "__contains__() (skbio.sequence.grammaredsequence method)": [[348, "skbio.sequence.GrammaredSequence.__contains__", false]], "__contains__() (skbio.sequence.protein method)": [[399, "skbio.sequence.Protein.__contains__", false]], "__contains__() (skbio.sequence.rna method)": [[452, "skbio.sequence.RNA.__contains__", false]], "__contains__() (skbio.sequence.sequence method)": [[511, "skbio.sequence.Sequence.__contains__", false]], "__contains__() (skbio.sequence.substitutionmatrix method)": [[548, "skbio.sequence.SubstitutionMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.dissimilaritymatrix method)": [[601, "skbio.stats.distance.DissimilarityMatrix.__contains__", false]], "__contains__() (skbio.stats.distance.distancematrix method)": [[624, "skbio.stats.distance.DistanceMatrix.__contains__", false]], "__copy__() (skbio.alignment.tabularmsa method)": [[31, "skbio.alignment.TabularMSA.__copy__", false]], "__copy__() (skbio.metadata.intervalmetadata method)": [[202, "skbio.metadata.IntervalMetadata.__copy__", false]], "__copy__() (skbio.sequence.dna method)": [[278, "skbio.sequence.DNA.__copy__", false]], "__copy__() (skbio.sequence.grammaredsequence method)": [[349, "skbio.sequence.GrammaredSequence.__copy__", false]], "__copy__() (skbio.sequence.protein method)": [[400, "skbio.sequence.Protein.__copy__", false]], "__copy__() (skbio.sequence.rna method)": [[453, "skbio.sequence.RNA.__copy__", false]], "__copy__() (skbio.sequence.sequence method)": [[512, "skbio.sequence.Sequence.__copy__", false]], "__copy__() (skbio.tree.treenode method)": [[848, "skbio.tree.TreeNode.__copy__", false]], "__deepcopy__() (skbio.alignment.tabularmsa method)": [[32, "skbio.alignment.TabularMSA.__deepcopy__", false]], "__deepcopy__() (skbio.metadata.intervalmetadata method)": [[203, "skbio.metadata.IntervalMetadata.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.dna method)": [[279, "skbio.sequence.DNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.grammaredsequence method)": [[350, "skbio.sequence.GrammaredSequence.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.protein method)": [[401, "skbio.sequence.Protein.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.rna method)": [[454, "skbio.sequence.RNA.__deepcopy__", false]], "__deepcopy__() (skbio.sequence.sequence method)": [[513, "skbio.sequence.Sequence.__deepcopy__", false]], "__deepcopy__() (skbio.tree.treenode method)": [[849, "skbio.tree.TreeNode.__deepcopy__", false]], "__delete__() (skbio.util.classproperty method)": [[934, "skbio.util.classproperty.__delete__", false]], "__eq__() (skbio.alignment.alignmentstructure method)": [[3, "skbio.alignment.AlignmentStructure.__eq__", false]], "__eq__() (skbio.alignment.stripedsmithwaterman method)": [[18, "skbio.alignment.StripedSmithWaterman.__eq__", false]], "__eq__() (skbio.alignment.tabularmsa method)": [[33, "skbio.alignment.TabularMSA.__eq__", false]], "__eq__() (skbio.io.registry.format method)": [[132, "skbio.io.registry.Format.__eq__", false]], "__eq__() (skbio.io.registry.ioregistry method)": [[145, "skbio.io.registry.IORegistry.__eq__", false]], "__eq__() (skbio.metadata.categoricalmetadatacolumn method)": [[174, "skbio.metadata.CategoricalMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.interval method)": [[192, "skbio.metadata.Interval.__eq__", false]], "__eq__() (skbio.metadata.intervalmetadata method)": [[204, "skbio.metadata.IntervalMetadata.__eq__", false]], "__eq__() (skbio.metadata.metadatacolumn method)": [[221, "skbio.metadata.MetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.numericmetadatacolumn method)": [[239, "skbio.metadata.NumericMetadataColumn.__eq__", false]], "__eq__() (skbio.metadata.samplemetadata method)": [[257, "skbio.metadata.SampleMetadata.__eq__", false]], "__eq__() (skbio.sequence.dna method)": [[280, "skbio.sequence.DNA.__eq__", false]], "__eq__() (skbio.sequence.geneticcode method)": [[335, "skbio.sequence.GeneticCode.__eq__", false]], "__eq__() (skbio.sequence.grammaredsequence method)": [[351, "skbio.sequence.GrammaredSequence.__eq__", false]], "__eq__() (skbio.sequence.protein method)": [[402, "skbio.sequence.Protein.__eq__", false]], "__eq__() (skbio.sequence.rna method)": [[455, "skbio.sequence.RNA.__eq__", false]], "__eq__() (skbio.sequence.sequence method)": [[514, "skbio.sequence.Sequence.__eq__", false]], "__eq__() (skbio.sequence.substitutionmatrix method)": [[549, "skbio.sequence.SubstitutionMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.dissimilaritymatrix method)": [[602, "skbio.stats.distance.DissimilarityMatrix.__eq__", false]], "__eq__() (skbio.stats.distance.distancematrix method)": [[625, "skbio.stats.distance.DistanceMatrix.__eq__", false]], "__eq__() (skbio.stats.gradient.averagegradientanova method)": [[660, "skbio.stats.gradient.AverageGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.categoryresults method)": [[671, "skbio.stats.gradient.CategoryResults.__eq__", false]], "__eq__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[682, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanova method)": [[693, "skbio.stats.gradient.GradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.gradientanovaresults method)": [[704, "skbio.stats.gradient.GradientANOVAResults.__eq__", false]], "__eq__() (skbio.stats.gradient.groupresults method)": [[715, "skbio.stats.gradient.GroupResults.__eq__", false]], "__eq__() (skbio.stats.gradient.trajectorygradientanova method)": [[726, "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[737, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", false]], "__eq__() (skbio.stats.ordination.ordinationresults method)": [[750, "skbio.stats.ordination.OrdinationResults.__eq__", false]], "__eq__() (skbio.table.table method)": [[780, "skbio.table.Table.__eq__", false]], "__eq__() (skbio.tree.treenode method)": [[850, "skbio.tree.TreeNode.__eq__", false]], "__eq__() (skbio.util.classproperty method)": [[935, "skbio.util.classproperty.__eq__", false]], "__eq__() (skbio.workflow.method method)": [[967, "skbio.workflow.method.__eq__", false]], "__eq__() (skbio.workflow.requires method)": [[978, "skbio.workflow.requires.__eq__", false]], "__eq__() (skbio.workflow.workflow method)": [[955, "skbio.workflow.Workflow.__eq__", false]], "__ge__() (skbio.alignment.alignmentstructure method)": [[4, "skbio.alignment.AlignmentStructure.__ge__", false]], "__ge__() (skbio.alignment.stripedsmithwaterman method)": [[19, "skbio.alignment.StripedSmithWaterman.__ge__", false]], "__ge__() (skbio.alignment.tabularmsa method)": [[34, "skbio.alignment.TabularMSA.__ge__", false]], "__ge__() (skbio.io.registry.format method)": [[133, "skbio.io.registry.Format.__ge__", false]], "__ge__() (skbio.io.registry.ioregistry method)": [[146, "skbio.io.registry.IORegistry.__ge__", false]], "__ge__() (skbio.metadata.categoricalmetadatacolumn method)": [[175, "skbio.metadata.CategoricalMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.interval method)": [[193, "skbio.metadata.Interval.__ge__", false]], "__ge__() (skbio.metadata.intervalmetadata method)": [[205, "skbio.metadata.IntervalMetadata.__ge__", false]], "__ge__() (skbio.metadata.metadatacolumn method)": [[222, "skbio.metadata.MetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.numericmetadatacolumn method)": [[240, "skbio.metadata.NumericMetadataColumn.__ge__", false]], "__ge__() (skbio.metadata.samplemetadata method)": [[258, "skbio.metadata.SampleMetadata.__ge__", false]], "__ge__() (skbio.sequence.dna method)": [[281, "skbio.sequence.DNA.__ge__", false]], "__ge__() (skbio.sequence.geneticcode method)": [[336, "skbio.sequence.GeneticCode.__ge__", false]], "__ge__() (skbio.sequence.grammaredsequence method)": [[352, "skbio.sequence.GrammaredSequence.__ge__", false]], "__ge__() (skbio.sequence.protein method)": [[403, "skbio.sequence.Protein.__ge__", false]], "__ge__() (skbio.sequence.rna method)": [[456, "skbio.sequence.RNA.__ge__", false]], "__ge__() (skbio.sequence.sequence method)": [[515, "skbio.sequence.Sequence.__ge__", false]], "__ge__() (skbio.sequence.substitutionmatrix method)": [[550, "skbio.sequence.SubstitutionMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.dissimilaritymatrix method)": [[603, "skbio.stats.distance.DissimilarityMatrix.__ge__", false]], "__ge__() (skbio.stats.distance.distancematrix method)": [[626, "skbio.stats.distance.DistanceMatrix.__ge__", false]], "__ge__() (skbio.stats.gradient.averagegradientanova method)": [[661, "skbio.stats.gradient.AverageGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.categoryresults method)": [[672, "skbio.stats.gradient.CategoryResults.__ge__", false]], "__ge__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[683, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanova method)": [[694, "skbio.stats.gradient.GradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.gradientanovaresults method)": [[705, "skbio.stats.gradient.GradientANOVAResults.__ge__", false]], "__ge__() (skbio.stats.gradient.groupresults method)": [[716, "skbio.stats.gradient.GroupResults.__ge__", false]], "__ge__() (skbio.stats.gradient.trajectorygradientanova method)": [[727, "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[738, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", false]], "__ge__() (skbio.stats.ordination.ordinationresults method)": [[751, "skbio.stats.ordination.OrdinationResults.__ge__", false]], "__ge__() (skbio.table.table method)": [[781, "skbio.table.Table.__ge__", false]], "__ge__() (skbio.tree.treenode method)": [[851, "skbio.tree.TreeNode.__ge__", false]], "__ge__() (skbio.util.classproperty method)": [[936, "skbio.util.classproperty.__ge__", false]], "__ge__() (skbio.workflow.method method)": [[968, "skbio.workflow.method.__ge__", false]], "__ge__() (skbio.workflow.requires method)": [[979, "skbio.workflow.requires.__ge__", false]], "__ge__() (skbio.workflow.workflow method)": [[956, "skbio.workflow.Workflow.__ge__", false]], "__get__() (skbio.util.classproperty method)": [[937, "skbio.util.classproperty.__get__", false]], "__getitem__() (skbio.alignment.alignmentstructure method)": [[5, "skbio.alignment.AlignmentStructure.__getitem__", false]], "__getitem__() (skbio.alignment.tabularmsa method)": [[35, "skbio.alignment.TabularMSA.__getitem__", false]], "__getitem__() (skbio.sequence.dna method)": [[282, "skbio.sequence.DNA.__getitem__", false]], "__getitem__() (skbio.sequence.grammaredsequence method)": [[353, "skbio.sequence.GrammaredSequence.__getitem__", false]], "__getitem__() (skbio.sequence.protein method)": [[404, "skbio.sequence.Protein.__getitem__", false]], "__getitem__() (skbio.sequence.rna method)": [[457, "skbio.sequence.RNA.__getitem__", false]], "__getitem__() (skbio.sequence.sequence method)": [[516, "skbio.sequence.Sequence.__getitem__", false]], "__getitem__() (skbio.sequence.substitutionmatrix method)": [[551, "skbio.sequence.SubstitutionMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.dissimilaritymatrix method)": [[604, "skbio.stats.distance.DissimilarityMatrix.__getitem__", false]], "__getitem__() (skbio.stats.distance.distancematrix method)": [[627, "skbio.stats.distance.DistanceMatrix.__getitem__", false]], "__getitem__() (skbio.table.table method)": [[782, "skbio.table.Table.__getitem__", false]], "__getitem__() (skbio.tree.treenode method)": [[852, "skbio.tree.TreeNode.__getitem__", false]], "__getstate__() (skbio.alignment.alignmentstructure method)": [[6, "skbio.alignment.AlignmentStructure.__getstate__", false]], "__getstate__() (skbio.alignment.stripedsmithwaterman method)": [[20, "skbio.alignment.StripedSmithWaterman.__getstate__", false]], "__getstate__() (skbio.alignment.tabularmsa method)": [[36, "skbio.alignment.TabularMSA.__getstate__", false]], "__getstate__() (skbio.io.registry.format method)": [[134, "skbio.io.registry.Format.__getstate__", false]], "__getstate__() (skbio.io.registry.ioregistry method)": [[147, "skbio.io.registry.IORegistry.__getstate__", false]], "__getstate__() (skbio.metadata.categoricalmetadatacolumn method)": [[176, "skbio.metadata.CategoricalMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.interval method)": [[194, "skbio.metadata.Interval.__getstate__", false]], "__getstate__() (skbio.metadata.intervalmetadata method)": [[206, "skbio.metadata.IntervalMetadata.__getstate__", false]], "__getstate__() (skbio.metadata.metadatacolumn method)": [[223, "skbio.metadata.MetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.numericmetadatacolumn method)": [[241, "skbio.metadata.NumericMetadataColumn.__getstate__", false]], "__getstate__() (skbio.metadata.samplemetadata method)": [[259, "skbio.metadata.SampleMetadata.__getstate__", false]], "__getstate__() (skbio.sequence.dna method)": [[283, "skbio.sequence.DNA.__getstate__", false]], "__getstate__() (skbio.sequence.geneticcode method)": [[337, "skbio.sequence.GeneticCode.__getstate__", false]], "__getstate__() (skbio.sequence.grammaredsequence method)": [[354, "skbio.sequence.GrammaredSequence.__getstate__", false]], "__getstate__() (skbio.sequence.protein method)": [[405, "skbio.sequence.Protein.__getstate__", false]], "__getstate__() (skbio.sequence.rna method)": [[458, "skbio.sequence.RNA.__getstate__", false]], "__getstate__() (skbio.sequence.sequence method)": [[517, "skbio.sequence.Sequence.__getstate__", false]], "__getstate__() (skbio.sequence.substitutionmatrix method)": [[552, "skbio.sequence.SubstitutionMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.dissimilaritymatrix method)": [[605, "skbio.stats.distance.DissimilarityMatrix.__getstate__", false]], "__getstate__() (skbio.stats.distance.distancematrix method)": [[628, "skbio.stats.distance.DistanceMatrix.__getstate__", false]], "__getstate__() (skbio.stats.gradient.averagegradientanova method)": [[662, "skbio.stats.gradient.AverageGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.categoryresults method)": [[673, "skbio.stats.gradient.CategoryResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[684, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanova method)": [[695, "skbio.stats.gradient.GradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.gradientanovaresults method)": [[706, "skbio.stats.gradient.GradientANOVAResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.groupresults method)": [[717, "skbio.stats.gradient.GroupResults.__getstate__", false]], "__getstate__() (skbio.stats.gradient.trajectorygradientanova method)": [[728, "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[739, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", false]], "__getstate__() (skbio.stats.ordination.ordinationresults method)": [[752, "skbio.stats.ordination.OrdinationResults.__getstate__", false]], "__getstate__() (skbio.table.table method)": [[783, "skbio.table.Table.__getstate__", false]], "__getstate__() (skbio.tree.treenode method)": [[853, "skbio.tree.TreeNode.__getstate__", false]], "__getstate__() (skbio.util.classproperty method)": [[938, "skbio.util.classproperty.__getstate__", false]], "__getstate__() (skbio.workflow.method method)": [[969, "skbio.workflow.method.__getstate__", false]], "__getstate__() (skbio.workflow.requires method)": [[980, "skbio.workflow.requires.__getstate__", false]], "__getstate__() (skbio.workflow.workflow method)": [[957, "skbio.workflow.Workflow.__getstate__", false]], "__gt__() (skbio.alignment.alignmentstructure method)": [[7, "skbio.alignment.AlignmentStructure.__gt__", false]], "__gt__() (skbio.alignment.stripedsmithwaterman method)": [[21, "skbio.alignment.StripedSmithWaterman.__gt__", false]], "__gt__() (skbio.alignment.tabularmsa method)": [[37, "skbio.alignment.TabularMSA.__gt__", false]], "__gt__() (skbio.io.registry.format method)": [[135, "skbio.io.registry.Format.__gt__", false]], "__gt__() (skbio.io.registry.ioregistry method)": [[148, "skbio.io.registry.IORegistry.__gt__", false]], "__gt__() (skbio.metadata.categoricalmetadatacolumn method)": [[177, "skbio.metadata.CategoricalMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.interval method)": [[195, "skbio.metadata.Interval.__gt__", false]], "__gt__() (skbio.metadata.intervalmetadata method)": [[207, "skbio.metadata.IntervalMetadata.__gt__", false]], "__gt__() (skbio.metadata.metadatacolumn method)": [[224, "skbio.metadata.MetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.numericmetadatacolumn method)": [[242, "skbio.metadata.NumericMetadataColumn.__gt__", false]], "__gt__() (skbio.metadata.samplemetadata method)": [[260, "skbio.metadata.SampleMetadata.__gt__", false]], "__gt__() (skbio.sequence.dna method)": [[284, "skbio.sequence.DNA.__gt__", false]], "__gt__() (skbio.sequence.geneticcode method)": [[338, "skbio.sequence.GeneticCode.__gt__", false]], "__gt__() (skbio.sequence.grammaredsequence method)": [[355, "skbio.sequence.GrammaredSequence.__gt__", false]], "__gt__() (skbio.sequence.protein method)": [[406, "skbio.sequence.Protein.__gt__", false]], "__gt__() (skbio.sequence.rna method)": [[459, "skbio.sequence.RNA.__gt__", false]], "__gt__() (skbio.sequence.sequence method)": [[518, "skbio.sequence.Sequence.__gt__", false]], "__gt__() (skbio.sequence.substitutionmatrix method)": [[553, "skbio.sequence.SubstitutionMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.dissimilaritymatrix method)": [[606, "skbio.stats.distance.DissimilarityMatrix.__gt__", false]], "__gt__() (skbio.stats.distance.distancematrix method)": [[629, "skbio.stats.distance.DistanceMatrix.__gt__", false]], "__gt__() (skbio.stats.gradient.averagegradientanova method)": [[663, "skbio.stats.gradient.AverageGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.categoryresults method)": [[674, "skbio.stats.gradient.CategoryResults.__gt__", false]], "__gt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[685, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanova method)": [[696, "skbio.stats.gradient.GradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.gradientanovaresults method)": [[707, "skbio.stats.gradient.GradientANOVAResults.__gt__", false]], "__gt__() (skbio.stats.gradient.groupresults method)": [[718, "skbio.stats.gradient.GroupResults.__gt__", false]], "__gt__() (skbio.stats.gradient.trajectorygradientanova method)": [[729, "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[740, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", false]], "__gt__() (skbio.stats.ordination.ordinationresults method)": [[753, "skbio.stats.ordination.OrdinationResults.__gt__", false]], "__gt__() (skbio.table.table method)": [[784, "skbio.table.Table.__gt__", false]], "__gt__() (skbio.tree.treenode method)": [[854, "skbio.tree.TreeNode.__gt__", false]], "__gt__() (skbio.util.classproperty method)": [[939, "skbio.util.classproperty.__gt__", false]], "__gt__() (skbio.workflow.method method)": [[970, "skbio.workflow.method.__gt__", false]], "__gt__() (skbio.workflow.requires method)": [[981, "skbio.workflow.requires.__gt__", false]], "__gt__() (skbio.workflow.workflow method)": [[958, "skbio.workflow.Workflow.__gt__", false]], "__hash__() (skbio.alignment.alignmentstructure method)": [[8, "skbio.alignment.AlignmentStructure.__hash__", false]], "__hash__() (skbio.alignment.stripedsmithwaterman method)": [[22, "skbio.alignment.StripedSmithWaterman.__hash__", false]], "__hash__() (skbio.io.registry.format method)": [[136, "skbio.io.registry.Format.__hash__", false]], "__hash__() (skbio.io.registry.ioregistry method)": [[149, "skbio.io.registry.IORegistry.__hash__", false]], "__hash__() (skbio.stats.gradient.averagegradientanova method)": [[664, "skbio.stats.gradient.AverageGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.categoryresults method)": [[675, "skbio.stats.gradient.CategoryResults.__hash__", false]], "__hash__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[686, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanova method)": [[697, "skbio.stats.gradient.GradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.gradientanovaresults method)": [[708, "skbio.stats.gradient.GradientANOVAResults.__hash__", false]], "__hash__() (skbio.stats.gradient.groupresults method)": [[719, "skbio.stats.gradient.GroupResults.__hash__", false]], "__hash__() (skbio.stats.gradient.trajectorygradientanova method)": [[730, "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[741, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", false]], "__hash__() (skbio.stats.ordination.ordinationresults method)": [[754, "skbio.stats.ordination.OrdinationResults.__hash__", false]], "__hash__() (skbio.tree.treenode method)": [[855, "skbio.tree.TreeNode.__hash__", false]], "__hash__() (skbio.util.classproperty method)": [[940, "skbio.util.classproperty.__hash__", false]], "__hash__() (skbio.workflow.method method)": [[971, "skbio.workflow.method.__hash__", false]], "__hash__() (skbio.workflow.requires method)": [[982, "skbio.workflow.requires.__hash__", false]], "__hash__() (skbio.workflow.workflow method)": [[959, "skbio.workflow.Workflow.__hash__", false]], "__iter__() (skbio.alignment.tabularmsa method)": [[38, "skbio.alignment.TabularMSA.__iter__", false]], "__iter__() (skbio.sequence.dna method)": [[285, "skbio.sequence.DNA.__iter__", false]], "__iter__() (skbio.sequence.grammaredsequence method)": [[356, "skbio.sequence.GrammaredSequence.__iter__", false]], "__iter__() (skbio.sequence.protein method)": [[407, "skbio.sequence.Protein.__iter__", false]], "__iter__() (skbio.sequence.rna method)": [[460, "skbio.sequence.RNA.__iter__", false]], "__iter__() (skbio.sequence.sequence method)": [[519, "skbio.sequence.Sequence.__iter__", false]], "__iter__() (skbio.table.table method)": [[785, "skbio.table.Table.__iter__", false]], "__iter__() (skbio.tree.treenode method)": [[856, "skbio.tree.TreeNode.__iter__", false]], "__le__() (skbio.alignment.alignmentstructure method)": [[9, "skbio.alignment.AlignmentStructure.__le__", false]], "__le__() (skbio.alignment.stripedsmithwaterman method)": [[23, "skbio.alignment.StripedSmithWaterman.__le__", false]], "__le__() (skbio.alignment.tabularmsa method)": [[39, "skbio.alignment.TabularMSA.__le__", false]], "__le__() (skbio.io.registry.format method)": [[137, "skbio.io.registry.Format.__le__", false]], "__le__() (skbio.io.registry.ioregistry method)": [[150, "skbio.io.registry.IORegistry.__le__", false]], "__le__() (skbio.metadata.categoricalmetadatacolumn method)": [[178, "skbio.metadata.CategoricalMetadataColumn.__le__", false]], "__le__() (skbio.metadata.interval method)": [[196, "skbio.metadata.Interval.__le__", false]], "__le__() (skbio.metadata.intervalmetadata method)": [[208, "skbio.metadata.IntervalMetadata.__le__", false]], "__le__() (skbio.metadata.metadatacolumn method)": [[225, "skbio.metadata.MetadataColumn.__le__", false]], "__le__() (skbio.metadata.numericmetadatacolumn method)": [[243, "skbio.metadata.NumericMetadataColumn.__le__", false]], "__le__() (skbio.metadata.samplemetadata method)": [[261, "skbio.metadata.SampleMetadata.__le__", false]], "__le__() (skbio.sequence.dna method)": [[286, "skbio.sequence.DNA.__le__", false]], "__le__() (skbio.sequence.geneticcode method)": [[339, "skbio.sequence.GeneticCode.__le__", false]], "__le__() (skbio.sequence.grammaredsequence method)": [[357, "skbio.sequence.GrammaredSequence.__le__", false]], "__le__() (skbio.sequence.protein method)": [[408, "skbio.sequence.Protein.__le__", false]], "__le__() (skbio.sequence.rna method)": [[461, "skbio.sequence.RNA.__le__", false]], "__le__() (skbio.sequence.sequence method)": [[520, "skbio.sequence.Sequence.__le__", false]], "__le__() (skbio.sequence.substitutionmatrix method)": [[554, "skbio.sequence.SubstitutionMatrix.__le__", false]], "__le__() (skbio.stats.distance.dissimilaritymatrix method)": [[607, "skbio.stats.distance.DissimilarityMatrix.__le__", false]], "__le__() (skbio.stats.distance.distancematrix method)": [[630, "skbio.stats.distance.DistanceMatrix.__le__", false]], "__le__() (skbio.stats.gradient.averagegradientanova method)": [[665, "skbio.stats.gradient.AverageGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.categoryresults method)": [[676, "skbio.stats.gradient.CategoryResults.__le__", false]], "__le__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[687, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanova method)": [[698, "skbio.stats.gradient.GradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.gradientanovaresults method)": [[709, "skbio.stats.gradient.GradientANOVAResults.__le__", false]], "__le__() (skbio.stats.gradient.groupresults method)": [[720, "skbio.stats.gradient.GroupResults.__le__", false]], "__le__() (skbio.stats.gradient.trajectorygradientanova method)": [[731, "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", false]], "__le__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[742, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", false]], "__le__() (skbio.stats.ordination.ordinationresults method)": [[755, "skbio.stats.ordination.OrdinationResults.__le__", false]], "__le__() (skbio.table.table method)": [[786, "skbio.table.Table.__le__", false]], "__le__() (skbio.tree.treenode method)": [[857, "skbio.tree.TreeNode.__le__", false]], "__le__() (skbio.util.classproperty method)": [[941, "skbio.util.classproperty.__le__", false]], "__le__() (skbio.workflow.method method)": [[972, "skbio.workflow.method.__le__", false]], "__le__() (skbio.workflow.requires method)": [[983, "skbio.workflow.requires.__le__", false]], "__le__() (skbio.workflow.workflow method)": [[960, "skbio.workflow.Workflow.__le__", false]], "__len__() (skbio.alignment.tabularmsa method)": [[40, "skbio.alignment.TabularMSA.__len__", false]], "__len__() (skbio.sequence.dna method)": [[287, "skbio.sequence.DNA.__len__", false]], "__len__() (skbio.sequence.grammaredsequence method)": [[358, "skbio.sequence.GrammaredSequence.__len__", false]], "__len__() (skbio.sequence.protein method)": [[409, "skbio.sequence.Protein.__len__", false]], "__len__() (skbio.sequence.rna method)": [[462, "skbio.sequence.RNA.__len__", false]], "__len__() (skbio.sequence.sequence method)": [[521, "skbio.sequence.Sequence.__len__", false]], "__len__() (skbio.tree.treenode method)": [[858, "skbio.tree.TreeNode.__len__", false]], "__lt__() (skbio.alignment.alignmentstructure method)": [[10, "skbio.alignment.AlignmentStructure.__lt__", false]], "__lt__() (skbio.alignment.stripedsmithwaterman method)": [[24, "skbio.alignment.StripedSmithWaterman.__lt__", false]], "__lt__() (skbio.alignment.tabularmsa method)": [[41, "skbio.alignment.TabularMSA.__lt__", false]], "__lt__() (skbio.io.registry.format method)": [[138, "skbio.io.registry.Format.__lt__", false]], "__lt__() (skbio.io.registry.ioregistry method)": [[151, "skbio.io.registry.IORegistry.__lt__", false]], "__lt__() (skbio.metadata.categoricalmetadatacolumn method)": [[179, "skbio.metadata.CategoricalMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.interval method)": [[197, "skbio.metadata.Interval.__lt__", false]], "__lt__() (skbio.metadata.intervalmetadata method)": [[209, "skbio.metadata.IntervalMetadata.__lt__", false]], "__lt__() (skbio.metadata.metadatacolumn method)": [[226, "skbio.metadata.MetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.numericmetadatacolumn method)": [[244, "skbio.metadata.NumericMetadataColumn.__lt__", false]], "__lt__() (skbio.metadata.samplemetadata method)": [[262, "skbio.metadata.SampleMetadata.__lt__", false]], "__lt__() (skbio.sequence.dna method)": [[288, "skbio.sequence.DNA.__lt__", false]], "__lt__() (skbio.sequence.geneticcode method)": [[340, "skbio.sequence.GeneticCode.__lt__", false]], "__lt__() (skbio.sequence.grammaredsequence method)": [[359, "skbio.sequence.GrammaredSequence.__lt__", false]], "__lt__() (skbio.sequence.protein method)": [[410, "skbio.sequence.Protein.__lt__", false]], "__lt__() (skbio.sequence.rna method)": [[463, "skbio.sequence.RNA.__lt__", false]], "__lt__() (skbio.sequence.sequence method)": [[522, "skbio.sequence.Sequence.__lt__", false]], "__lt__() (skbio.sequence.substitutionmatrix method)": [[555, "skbio.sequence.SubstitutionMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.dissimilaritymatrix method)": [[608, "skbio.stats.distance.DissimilarityMatrix.__lt__", false]], "__lt__() (skbio.stats.distance.distancematrix method)": [[631, "skbio.stats.distance.DistanceMatrix.__lt__", false]], "__lt__() (skbio.stats.gradient.averagegradientanova method)": [[666, "skbio.stats.gradient.AverageGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.categoryresults method)": [[677, "skbio.stats.gradient.CategoryResults.__lt__", false]], "__lt__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[688, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanova method)": [[699, "skbio.stats.gradient.GradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.gradientanovaresults method)": [[710, "skbio.stats.gradient.GradientANOVAResults.__lt__", false]], "__lt__() (skbio.stats.gradient.groupresults method)": [[721, "skbio.stats.gradient.GroupResults.__lt__", false]], "__lt__() (skbio.stats.gradient.trajectorygradientanova method)": [[732, "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[743, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", false]], "__lt__() (skbio.stats.ordination.ordinationresults method)": [[756, "skbio.stats.ordination.OrdinationResults.__lt__", false]], "__lt__() (skbio.table.table method)": [[787, "skbio.table.Table.__lt__", false]], "__lt__() (skbio.tree.treenode method)": [[859, "skbio.tree.TreeNode.__lt__", false]], "__lt__() (skbio.util.classproperty method)": [[942, "skbio.util.classproperty.__lt__", false]], "__lt__() (skbio.workflow.method method)": [[973, "skbio.workflow.method.__lt__", false]], "__lt__() (skbio.workflow.requires method)": [[984, "skbio.workflow.requires.__lt__", false]], "__lt__() (skbio.workflow.workflow method)": [[961, "skbio.workflow.Workflow.__lt__", false]], "__ne__() (skbio.alignment.alignmentstructure method)": [[11, "skbio.alignment.AlignmentStructure.__ne__", false]], "__ne__() (skbio.alignment.stripedsmithwaterman method)": [[25, "skbio.alignment.StripedSmithWaterman.__ne__", false]], "__ne__() (skbio.alignment.tabularmsa method)": [[42, "skbio.alignment.TabularMSA.__ne__", false]], "__ne__() (skbio.io.registry.format method)": [[139, "skbio.io.registry.Format.__ne__", false]], "__ne__() (skbio.io.registry.ioregistry method)": [[152, "skbio.io.registry.IORegistry.__ne__", false]], "__ne__() (skbio.metadata.categoricalmetadatacolumn method)": [[180, "skbio.metadata.CategoricalMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.interval method)": [[198, "skbio.metadata.Interval.__ne__", false]], "__ne__() (skbio.metadata.intervalmetadata method)": [[210, "skbio.metadata.IntervalMetadata.__ne__", false]], "__ne__() (skbio.metadata.metadatacolumn method)": [[227, "skbio.metadata.MetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.numericmetadatacolumn method)": [[245, "skbio.metadata.NumericMetadataColumn.__ne__", false]], "__ne__() (skbio.metadata.samplemetadata method)": [[263, "skbio.metadata.SampleMetadata.__ne__", false]], "__ne__() (skbio.sequence.dna method)": [[289, "skbio.sequence.DNA.__ne__", false]], "__ne__() (skbio.sequence.geneticcode method)": [[341, "skbio.sequence.GeneticCode.__ne__", false]], "__ne__() (skbio.sequence.grammaredsequence method)": [[360, "skbio.sequence.GrammaredSequence.__ne__", false]], "__ne__() (skbio.sequence.protein method)": [[411, "skbio.sequence.Protein.__ne__", false]], "__ne__() (skbio.sequence.rna method)": [[464, "skbio.sequence.RNA.__ne__", false]], "__ne__() (skbio.sequence.sequence method)": [[523, "skbio.sequence.Sequence.__ne__", false]], "__ne__() (skbio.sequence.substitutionmatrix method)": [[556, "skbio.sequence.SubstitutionMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.dissimilaritymatrix method)": [[609, "skbio.stats.distance.DissimilarityMatrix.__ne__", false]], "__ne__() (skbio.stats.distance.distancematrix method)": [[632, "skbio.stats.distance.DistanceMatrix.__ne__", false]], "__ne__() (skbio.stats.gradient.averagegradientanova method)": [[667, "skbio.stats.gradient.AverageGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.categoryresults method)": [[678, "skbio.stats.gradient.CategoryResults.__ne__", false]], "__ne__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[689, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanova method)": [[700, "skbio.stats.gradient.GradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.gradientanovaresults method)": [[711, "skbio.stats.gradient.GradientANOVAResults.__ne__", false]], "__ne__() (skbio.stats.gradient.groupresults method)": [[722, "skbio.stats.gradient.GroupResults.__ne__", false]], "__ne__() (skbio.stats.gradient.trajectorygradientanova method)": [[733, "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[744, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", false]], "__ne__() (skbio.stats.ordination.ordinationresults method)": [[757, "skbio.stats.ordination.OrdinationResults.__ne__", false]], "__ne__() (skbio.table.table method)": [[788, "skbio.table.Table.__ne__", false]], "__ne__() (skbio.tree.treenode method)": [[860, "skbio.tree.TreeNode.__ne__", false]], "__ne__() (skbio.util.classproperty method)": [[943, "skbio.util.classproperty.__ne__", false]], "__ne__() (skbio.workflow.method method)": [[974, "skbio.workflow.method.__ne__", false]], "__ne__() (skbio.workflow.requires method)": [[985, "skbio.workflow.requires.__ne__", false]], "__ne__() (skbio.workflow.workflow method)": [[962, "skbio.workflow.Workflow.__ne__", false]], "__reversed__() (skbio.alignment.tabularmsa method)": [[43, "skbio.alignment.TabularMSA.__reversed__", false]], "__reversed__() (skbio.sequence.dna method)": [[290, "skbio.sequence.DNA.__reversed__", false]], "__reversed__() (skbio.sequence.grammaredsequence method)": [[361, "skbio.sequence.GrammaredSequence.__reversed__", false]], "__reversed__() (skbio.sequence.protein method)": [[412, "skbio.sequence.Protein.__reversed__", false]], "__reversed__() (skbio.sequence.rna method)": [[465, "skbio.sequence.RNA.__reversed__", false]], "__reversed__() (skbio.sequence.sequence method)": [[524, "skbio.sequence.Sequence.__reversed__", false]], "__set__() (skbio.util.classproperty method)": [[944, "skbio.util.classproperty.__set__", false]], "__set_name__() (skbio.util.classproperty method)": [[945, "skbio.util.classproperty.__set_name__", false]], "__setstate__() (skbio.alignment.alignmentstructure method)": [[12, "skbio.alignment.AlignmentStructure.__setstate__", false]], "__setstate__() (skbio.alignment.stripedsmithwaterman method)": [[26, "skbio.alignment.StripedSmithWaterman.__setstate__", false]], "__str__() (skbio.alignment.alignmentstructure method)": [[13, "skbio.alignment.AlignmentStructure.__str__", false]], "__str__() (skbio.alignment.stripedsmithwaterman method)": [[27, "skbio.alignment.StripedSmithWaterman.__str__", false]], "__str__() (skbio.alignment.tabularmsa method)": [[44, "skbio.alignment.TabularMSA.__str__", false]], "__str__() (skbio.io.registry.format method)": [[140, "skbio.io.registry.Format.__str__", false]], "__str__() (skbio.io.registry.ioregistry method)": [[153, "skbio.io.registry.IORegistry.__str__", false]], "__str__() (skbio.metadata.categoricalmetadatacolumn method)": [[181, "skbio.metadata.CategoricalMetadataColumn.__str__", false]], "__str__() (skbio.metadata.interval method)": [[199, "skbio.metadata.Interval.__str__", false]], "__str__() (skbio.metadata.intervalmetadata method)": [[211, "skbio.metadata.IntervalMetadata.__str__", false]], "__str__() (skbio.metadata.metadatacolumn method)": [[228, "skbio.metadata.MetadataColumn.__str__", false]], "__str__() (skbio.metadata.numericmetadatacolumn method)": [[246, "skbio.metadata.NumericMetadataColumn.__str__", false]], "__str__() (skbio.metadata.samplemetadata method)": [[264, "skbio.metadata.SampleMetadata.__str__", false]], "__str__() (skbio.sequence.dna method)": [[291, "skbio.sequence.DNA.__str__", false]], "__str__() (skbio.sequence.geneticcode method)": [[342, "skbio.sequence.GeneticCode.__str__", false]], "__str__() (skbio.sequence.grammaredsequence method)": [[362, "skbio.sequence.GrammaredSequence.__str__", false]], "__str__() (skbio.sequence.protein method)": [[413, "skbio.sequence.Protein.__str__", false]], "__str__() (skbio.sequence.rna method)": [[466, "skbio.sequence.RNA.__str__", false]], "__str__() (skbio.sequence.sequence method)": [[525, "skbio.sequence.Sequence.__str__", false]], "__str__() (skbio.sequence.substitutionmatrix method)": [[557, "skbio.sequence.SubstitutionMatrix.__str__", false]], "__str__() (skbio.stats.distance.dissimilaritymatrix method)": [[610, "skbio.stats.distance.DissimilarityMatrix.__str__", false]], "__str__() (skbio.stats.distance.distancematrix method)": [[633, "skbio.stats.distance.DistanceMatrix.__str__", false]], "__str__() (skbio.stats.gradient.averagegradientanova method)": [[668, "skbio.stats.gradient.AverageGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.categoryresults method)": [[679, "skbio.stats.gradient.CategoryResults.__str__", false]], "__str__() (skbio.stats.gradient.firstdifferencegradientanova method)": [[690, "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanova method)": [[701, "skbio.stats.gradient.GradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.gradientanovaresults method)": [[712, "skbio.stats.gradient.GradientANOVAResults.__str__", false]], "__str__() (skbio.stats.gradient.groupresults method)": [[723, "skbio.stats.gradient.GroupResults.__str__", false]], "__str__() (skbio.stats.gradient.trajectorygradientanova method)": [[734, "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", false]], "__str__() (skbio.stats.gradient.windowdifferencegradientanova method)": [[745, "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", false]], "__str__() (skbio.stats.ordination.ordinationresults method)": [[758, "skbio.stats.ordination.OrdinationResults.__str__", false]], "__str__() (skbio.table.table method)": [[789, "skbio.table.Table.__str__", false]], "__str__() (skbio.tree.treenode method)": [[861, "skbio.tree.TreeNode.__str__", false]], "__str__() (skbio.util.classproperty method)": [[946, "skbio.util.classproperty.__str__", false]], "__str__() (skbio.workflow.method method)": [[975, "skbio.workflow.method.__str__", false]], "__str__() (skbio.workflow.requires method)": [[986, "skbio.workflow.requires.__str__", false]], "__str__() (skbio.workflow.workflow method)": [[963, "skbio.workflow.Workflow.__str__", false]], "accumulate_to_ancestor() (skbio.tree.treenode method)": [[862, "skbio.tree.TreeNode.accumulate_to_ancestor", false]], "ace() (in module skbio.diversity.alpha)": [[69, "skbio.diversity.alpha.ace", false]], "add() (skbio.metadata.intervalmetadata method)": [[212, "skbio.metadata.IntervalMetadata.add", false]], "add_format() (skbio.io.registry.ioregistry method)": [[154, "skbio.io.registry.IORegistry.add_format", false]], "add_group_metadata() (skbio.table.table method)": [[790, "skbio.table.Table.add_group_metadata", false]], "add_metadata() (skbio.table.table method)": [[791, "skbio.table.Table.add_metadata", false]], "align_to() (skbio.table.table method)": [[792, "skbio.table.Table.align_to", false]], "align_to_dataframe() (skbio.table.table method)": [[793, "skbio.table.Table.align_to_dataframe", false]], "align_tree() (skbio.table.table method)": [[794, "skbio.table.Table.align_tree", false]], "alignmentstructure (class in skbio.alignment)": [[2, "skbio.alignment.AlignmentStructure", false]], "alpha_diversity() (in module skbio.diversity)": [[103, "skbio.diversity.alpha_diversity", false]], "alr() (in module skbio.stats.composition)": [[579, "skbio.stats.composition.alr", false]], "alr_inv() (in module skbio.stats.composition)": [[580, "skbio.stats.composition.alr_inv", false]], "ancestors() (skbio.tree.treenode method)": [[863, "skbio.tree.TreeNode.ancestors", false]], "ancom() (in module skbio.stats.composition)": [[581, "skbio.stats.composition.ancom", false]], "anosim() (in module skbio.stats.distance)": [[649, "skbio.stats.distance.anosim", false]], "append() (skbio.alignment.tabularmsa method)": [[45, "skbio.alignment.TabularMSA.append", false]], "append() (skbio.tree.treenode method)": [[864, "skbio.tree.TreeNode.append", false]], "ascii_art() (skbio.tree.treenode method)": [[865, "skbio.tree.TreeNode.ascii_art", false]], "assert_data_frame_almost_equal() (in module skbio.util)": [[930, "skbio.util.assert_data_frame_almost_equal", false]], "assert_ordination_results_equal() (in module skbio.util)": [[931, "skbio.util.assert_ordination_results_equal", false]], "assign_ids() (skbio.tree.treenode method)": [[866, "skbio.tree.TreeNode.assign_ids", false]], "assign_supports() (skbio.tree.treenode method)": [[867, "skbio.tree.TreeNode.assign_supports", false]], "averagegradientanova (class in skbio.stats.gradient)": [[659, "skbio.stats.gradient.AverageGradientANOVA", false]], "berger_parker_d() (in module skbio.diversity.alpha)": [[70, "skbio.diversity.alpha.berger_parker_d", false]], "beta_diversity() (in module skbio.diversity)": [[107, "skbio.diversity.beta_diversity", false]], "between() (skbio.sequence.substitutionmatrix method)": [[558, "skbio.sequence.SubstitutionMatrix.between", false]], "between() (skbio.stats.distance.dissimilaritymatrix method)": [[611, "skbio.stats.distance.DissimilarityMatrix.between", false]], "between() (skbio.stats.distance.distancematrix method)": [[634, "skbio.stats.distance.DistanceMatrix.between", false]], "bifurcate() (skbio.tree.treenode method)": [[868, "skbio.tree.TreeNode.bifurcate", false]], "bioenv() (in module skbio.stats.distance)": [[650, "skbio.stats.distance.bioenv", false]], "block_beta_diversity() (in module skbio.diversity)": [[108, "skbio.diversity.block_beta_diversity", false]], "brillouin_d() (in module skbio.diversity.alpha)": [[71, "skbio.diversity.alpha.brillouin_d", false]], "by_name() (skbio.sequence.substitutionmatrix class method)": [[559, "skbio.sequence.SubstitutionMatrix.by_name", false]], "ca() (in module skbio.stats.ordination)": [[762, "skbio.stats.ordination.ca", false]], "cache_attr() (skbio.tree.treenode method)": [[869, "skbio.tree.TreeNode.cache_attr", false]], "cardinal_to_ordinal() (in module skbio.util)": [[932, "skbio.util.cardinal_to_ordinal", false]], "categoricalmetadatacolumn (class in skbio.metadata)": [[173, "skbio.metadata.CategoricalMetadataColumn", false]], "categoryresults (class in skbio.stats.gradient)": [[670, "skbio.stats.gradient.CategoryResults", false]], "cca() (in module skbio.stats.ordination)": [[763, "skbio.stats.ordination.cca", false]], "centralize() (in module skbio.stats.composition)": [[582, "skbio.stats.composition.centralize", false]], "chao1() (in module skbio.diversity.alpha)": [[72, "skbio.diversity.alpha.chao1", false]], "chao1_ci() (in module skbio.diversity.alpha)": [[73, "skbio.diversity.alpha.chao1_ci", false]], "classproperty (class in skbio.util)": [[933, "skbio.util.classproperty", false]], "closure() (in module skbio.stats.composition)": [[583, "skbio.stats.composition.closure", false]], "clr() (in module skbio.stats.composition)": [[584, "skbio.stats.composition.clr", false]], "clr_inv() (in module skbio.stats.composition)": [[585, "skbio.stats.composition.clr_inv", false]], "collapse() (skbio.table.table method)": [[795, "skbio.table.Table.collapse", false]], "compare_rfd() (skbio.tree.treenode method)": [[870, "skbio.tree.TreeNode.compare_rfd", false]], "compare_subsets() (skbio.tree.treenode method)": [[871, "skbio.tree.TreeNode.compare_subsets", false]], "compare_tip_distances() (skbio.tree.treenode method)": [[872, "skbio.tree.TreeNode.compare_tip_distances", false]], "complement() (skbio.sequence.dna method)": [[292, "skbio.sequence.DNA.complement", false]], "complement() (skbio.sequence.rna method)": [[467, "skbio.sequence.RNA.complement", false]], "concat() (skbio.metadata.intervalmetadata class method)": [[213, "skbio.metadata.IntervalMetadata.concat", false]], "concat() (skbio.sequence.dna class method)": [[293, "skbio.sequence.DNA.concat", false]], "concat() (skbio.sequence.grammaredsequence class method)": [[363, "skbio.sequence.GrammaredSequence.concat", false]], "concat() (skbio.sequence.protein class method)": [[414, "skbio.sequence.Protein.concat", false]], "concat() (skbio.sequence.rna class method)": [[468, "skbio.sequence.RNA.concat", false]], "concat() (skbio.sequence.sequence class method)": [[526, "skbio.sequence.Sequence.concat", false]], "concat() (skbio.table.table method)": [[796, "skbio.table.Table.concat", false]], "condensed_form() (skbio.stats.distance.distancematrix method)": [[635, "skbio.stats.distance.DistanceMatrix.condensed_form", false]], "confidence_bound() (in module skbio.stats.power)": [[774, "skbio.stats.power.confidence_bound", false]], "consensus() (skbio.alignment.tabularmsa method)": [[46, "skbio.alignment.TabularMSA.consensus", false]], "conservation() (skbio.alignment.tabularmsa method)": [[47, "skbio.alignment.TabularMSA.conservation", false]], "copy() (skbio.sequence.substitutionmatrix method)": [[560, "skbio.sequence.SubstitutionMatrix.copy", false]], "copy() (skbio.stats.distance.dissimilaritymatrix method)": [[612, "skbio.stats.distance.DissimilarityMatrix.copy", false]], "copy() (skbio.stats.distance.distancematrix method)": [[636, "skbio.stats.distance.DistanceMatrix.copy", false]], "copy() (skbio.table.table method)": [[797, "skbio.table.Table.copy", false]], "copy() (skbio.tree.treenode method)": [[873, "skbio.tree.TreeNode.copy", false]], "corr() (in module skbio.stats.ordination)": [[764, "skbio.stats.ordination.corr", false]], "count() (skbio.sequence.dna method)": [[294, "skbio.sequence.DNA.count", false]], "count() (skbio.sequence.grammaredsequence method)": [[364, "skbio.sequence.GrammaredSequence.count", false]], "count() (skbio.sequence.protein method)": [[415, "skbio.sequence.Protein.count", false]], "count() (skbio.sequence.rna method)": [[469, "skbio.sequence.RNA.count", false]], "count() (skbio.sequence.sequence method)": [[527, "skbio.sequence.Sequence.count", false]], "count() (skbio.tree.treenode method)": [[874, "skbio.tree.TreeNode.count", false]], "create_caches() (skbio.tree.treenode method)": [[875, "skbio.tree.TreeNode.create_caches", false]], "create_format() (in module skbio.io.registry)": [[165, "skbio.io.registry.create_format", false]], "create_format() (skbio.io.registry.ioregistry method)": [[155, "skbio.io.registry.IORegistry.create_format", false]], "data() (skbio.table.table method)": [[798, "skbio.table.Table.data", false]], "deepcopy() (skbio.tree.treenode method)": [[876, "skbio.tree.TreeNode.deepcopy", false]], "definites() (skbio.sequence.dna method)": [[295, "skbio.sequence.DNA.definites", false]], "definites() (skbio.sequence.grammaredsequence method)": [[365, "skbio.sequence.GrammaredSequence.definites", false]], "definites() (skbio.sequence.protein method)": [[416, "skbio.sequence.Protein.definites", false]], "definites() (skbio.sequence.rna method)": [[470, "skbio.sequence.RNA.definites", false]], "degap() (skbio.sequence.dna method)": [[296, "skbio.sequence.DNA.degap", false]], "degap() (skbio.sequence.grammaredsequence method)": [[366, "skbio.sequence.GrammaredSequence.degap", false]], "degap() (skbio.sequence.protein method)": [[417, "skbio.sequence.Protein.degap", false]], "degap() (skbio.sequence.rna method)": [[471, "skbio.sequence.RNA.degap", false]], "degenerates() (skbio.sequence.dna method)": [[297, "skbio.sequence.DNA.degenerates", false]], "degenerates() (skbio.sequence.grammaredsequence method)": [[367, "skbio.sequence.GrammaredSequence.degenerates", false]], "degenerates() (skbio.sequence.protein method)": [[418, "skbio.sequence.Protein.degenerates", false]], "degenerates() (skbio.sequence.rna method)": [[472, "skbio.sequence.RNA.degenerates", false]], "del_metadata() (skbio.table.table method)": [[799, "skbio.table.Table.del_metadata", false]], "deleter() (skbio.util.classproperty method)": [[947, "skbio.util.classproperty.deleter", false]], "delimited_self() (skbio.table.table method)": [[800, "skbio.table.Table.delimited_self", false]], "descending_branch_length() (skbio.tree.treenode method)": [[877, "skbio.tree.TreeNode.descending_branch_length", false]], "descriptive_equality() (skbio.table.table method)": [[801, "skbio.table.Table.descriptive_equality", false]], "dirmult_ttest() (in module skbio.stats.composition)": [[586, "skbio.stats.composition.dirmult_ttest", false]], "dissimilaritymatrix (class in skbio.stats.distance)": [[600, "skbio.stats.distance.DissimilarityMatrix", false]], "distance() (skbio.sequence.dna method)": [[298, "skbio.sequence.DNA.distance", false]], "distance() (skbio.sequence.grammaredsequence method)": [[368, "skbio.sequence.GrammaredSequence.distance", false]], "distance() (skbio.sequence.protein method)": [[419, "skbio.sequence.Protein.distance", false]], "distance() (skbio.sequence.rna method)": [[473, "skbio.sequence.RNA.distance", false]], "distance() (skbio.sequence.sequence method)": [[528, "skbio.sequence.Sequence.distance", false]], "distance() (skbio.tree.treenode method)": [[878, "skbio.tree.TreeNode.distance", false]], "distancematrix (class in skbio.stats.distance)": [[623, "skbio.stats.distance.DistanceMatrix", false]], "dna (class in skbio.sequence)": [[275, "skbio.sequence.DNA", false]], "dominance() (in module skbio.diversity.alpha)": [[74, "skbio.diversity.alpha.dominance", false]], "doubles() (in module skbio.diversity.alpha)": [[75, "skbio.diversity.alpha.doubles", false]], "drop() (skbio.metadata.interval method)": [[200, "skbio.metadata.Interval.drop", false]], "drop() (skbio.metadata.intervalmetadata method)": [[214, "skbio.metadata.IntervalMetadata.drop", false]], "drop_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[182, "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.metadatacolumn method)": [[229, "skbio.metadata.MetadataColumn.drop_missing_values", false]], "drop_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[247, "skbio.metadata.NumericMetadataColumn.drop_missing_values", false]], "e_matrix() (in module skbio.stats.ordination)": [[765, "skbio.stats.ordination.e_matrix", false]], "efficiencywarning": [[928, "skbio.util.EfficiencyWarning", false]], "enspie() (in module skbio.diversity.alpha)": [[76, "skbio.diversity.alpha.enspie", false]], "esty_ci() (in module skbio.diversity.alpha)": [[77, "skbio.diversity.alpha.esty_ci", false]], "example_table (in module skbio.table)": [[846, "skbio.table.example_table", false]], "exists() (skbio.table.table method)": [[802, "skbio.table.Table.exists", false]], "expand_degenerates() (skbio.sequence.dna method)": [[299, "skbio.sequence.DNA.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.grammaredsequence method)": [[369, "skbio.sequence.GrammaredSequence.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.protein method)": [[420, "skbio.sequence.Protein.expand_degenerates", false]], "expand_degenerates() (skbio.sequence.rna method)": [[474, "skbio.sequence.RNA.expand_degenerates", false]], "extend() (skbio.alignment.tabularmsa method)": [[48, "skbio.alignment.TabularMSA.extend", false]], "extend() (skbio.tree.treenode method)": [[879, "skbio.tree.TreeNode.extend", false]], "f_matrix() (in module skbio.stats.ordination)": [[766, "skbio.stats.ordination.f_matrix", false]], "faith_pd() (in module skbio.diversity.alpha)": [[78, "skbio.diversity.alpha.faith_pd", false]], "filter() (skbio.sequence.substitutionmatrix method)": [[561, "skbio.sequence.SubstitutionMatrix.filter", false]], "filter() (skbio.stats.distance.dissimilaritymatrix method)": [[613, "skbio.stats.distance.DissimilarityMatrix.filter", false]], "filter() (skbio.stats.distance.distancematrix method)": [[637, "skbio.stats.distance.DistanceMatrix.filter", false]], "filter() (skbio.table.table method)": [[803, "skbio.table.Table.filter", false]], "filter_columns() (skbio.metadata.samplemetadata method)": [[265, "skbio.metadata.SampleMetadata.filter_columns", false]], "filter_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[183, "skbio.metadata.CategoricalMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.metadatacolumn method)": [[230, "skbio.metadata.MetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.numericmetadatacolumn method)": [[248, "skbio.metadata.NumericMetadataColumn.filter_ids", false]], "filter_ids() (skbio.metadata.samplemetadata method)": [[266, "skbio.metadata.SampleMetadata.filter_ids", false]], "find() (skbio.tree.treenode method)": [[880, "skbio.tree.TreeNode.find", false]], "find_all() (skbio.tree.treenode method)": [[881, "skbio.tree.TreeNode.find_all", false]], "find_by_func() (skbio.tree.treenode method)": [[882, "skbio.tree.TreeNode.find_by_func", false]], "find_by_id() (skbio.tree.treenode method)": [[883, "skbio.tree.TreeNode.find_by_id", false]], "find_duplicates() (in module skbio.util)": [[950, "skbio.util.find_duplicates", false]], "find_motifs() (skbio.sequence.dna method)": [[300, "skbio.sequence.DNA.find_motifs", false]], "find_motifs() (skbio.sequence.grammaredsequence method)": [[370, "skbio.sequence.GrammaredSequence.find_motifs", false]], "find_motifs() (skbio.sequence.protein method)": [[421, "skbio.sequence.Protein.find_motifs", false]], "find_motifs() (skbio.sequence.rna method)": [[475, "skbio.sequence.RNA.find_motifs", false]], "find_with_regex() (skbio.sequence.dna method)": [[301, "skbio.sequence.DNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.grammaredsequence method)": [[371, "skbio.sequence.GrammaredSequence.find_with_regex", false]], "find_with_regex() (skbio.sequence.protein method)": [[422, "skbio.sequence.Protein.find_with_regex", false]], "find_with_regex() (skbio.sequence.rna method)": [[476, "skbio.sequence.RNA.find_with_regex", false]], "find_with_regex() (skbio.sequence.sequence method)": [[529, "skbio.sequence.Sequence.find_with_regex", false]], "firstdifferencegradientanova (class in skbio.stats.gradient)": [[681, "skbio.stats.gradient.FirstDifferenceGradientANOVA", false]], "fisher_alpha() (in module skbio.diversity.alpha)": [[79, "skbio.diversity.alpha.fisher_alpha", false]], "format (class in skbio.io.registry)": [[131, "skbio.io.registry.Format", false]], "frequencies() (skbio.sequence.dna method)": [[302, "skbio.sequence.DNA.frequencies", false]], "frequencies() (skbio.sequence.grammaredsequence method)": [[372, "skbio.sequence.GrammaredSequence.frequencies", false]], "frequencies() (skbio.sequence.protein method)": [[423, "skbio.sequence.Protein.frequencies", false]], "frequencies() (skbio.sequence.rna method)": [[477, "skbio.sequence.RNA.frequencies", false]], "frequencies() (skbio.sequence.sequence method)": [[530, "skbio.sequence.Sequence.frequencies", false]], "from_adjacency() (skbio.table.table static method)": [[804, "skbio.table.Table.from_adjacency", false]], "from_dict() (skbio.alignment.tabularmsa class method)": [[49, "skbio.alignment.TabularMSA.from_dict", false]], "from_dict() (skbio.sequence.substitutionmatrix class method)": [[562, "skbio.sequence.SubstitutionMatrix.from_dict", false]], "from_hdf5() (skbio.table.table class method)": [[805, "skbio.table.Table.from_hdf5", false]], "from_iterable() (skbio.sequence.substitutionmatrix class method)": [[563, "skbio.sequence.SubstitutionMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.dissimilaritymatrix class method)": [[614, "skbio.stats.distance.DissimilarityMatrix.from_iterable", false]], "from_iterable() (skbio.stats.distance.distancematrix class method)": [[638, "skbio.stats.distance.DistanceMatrix.from_iterable", false]], "from_json() (skbio.table.table class method)": [[806, "skbio.table.Table.from_json", false]], "from_linkage_matrix() (skbio.tree.treenode class method)": [[884, "skbio.tree.TreeNode.from_linkage_matrix", false]], "from_ncbi() (skbio.sequence.geneticcode class method)": [[343, "skbio.sequence.GeneticCode.from_ncbi", false]], "from_taxdump() (skbio.tree.treenode class method)": [[885, "skbio.tree.TreeNode.from_taxdump", false]], "from_taxonomy() (skbio.tree.treenode class method)": [[886, "skbio.tree.TreeNode.from_taxonomy", false]], "from_tsv() (skbio.table.table static method)": [[807, "skbio.table.Table.from_tsv", false]], "gap_frequencies() (skbio.alignment.tabularmsa method)": [[50, "skbio.alignment.TabularMSA.gap_frequencies", false]], "gaps() (skbio.sequence.dna method)": [[303, "skbio.sequence.DNA.gaps", false]], "gaps() (skbio.sequence.grammaredsequence method)": [[373, "skbio.sequence.GrammaredSequence.gaps", false]], "gaps() (skbio.sequence.protein method)": [[424, "skbio.sequence.Protein.gaps", false]], "gaps() (skbio.sequence.rna method)": [[478, "skbio.sequence.RNA.gaps", false]], "gc_content() (skbio.sequence.dna method)": [[304, "skbio.sequence.DNA.gc_content", false]], "gc_content() (skbio.sequence.rna method)": [[479, "skbio.sequence.RNA.gc_content", false]], "gc_frequency() (skbio.sequence.dna method)": [[305, "skbio.sequence.DNA.gc_frequency", false]], "gc_frequency() (skbio.sequence.rna method)": [[480, "skbio.sequence.RNA.gc_frequency", false]], "geneticcode (class in skbio.sequence)": [[334, "skbio.sequence.GeneticCode", false]], "get_alpha_diversity_metrics() (in module skbio.diversity)": [[109, "skbio.diversity.get_alpha_diversity_metrics", false]], "get_beta_diversity_metrics() (in module skbio.diversity)": [[110, "skbio.diversity.get_beta_diversity_metrics", false]], "get_column() (skbio.metadata.samplemetadata method)": [[267, "skbio.metadata.SampleMetadata.get_column", false]], "get_data_path() (in module skbio.util)": [[951, "skbio.util.get_data_path", false]], "get_ids() (skbio.metadata.categoricalmetadatacolumn method)": [[184, "skbio.metadata.CategoricalMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.metadatacolumn method)": [[231, "skbio.metadata.MetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.numericmetadatacolumn method)": [[249, "skbio.metadata.NumericMetadataColumn.get_ids", false]], "get_ids() (skbio.metadata.samplemetadata method)": [[268, "skbio.metadata.SampleMetadata.get_ids", false]], "get_max_distance() (skbio.tree.treenode method)": [[887, "skbio.tree.TreeNode.get_max_distance", false]], "get_missing() (skbio.metadata.categoricalmetadatacolumn method)": [[185, "skbio.metadata.CategoricalMetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.metadatacolumn method)": [[232, "skbio.metadata.MetadataColumn.get_missing", false]], "get_missing() (skbio.metadata.numericmetadatacolumn method)": [[250, "skbio.metadata.NumericMetadataColumn.get_missing", false]], "get_names() (skbio.sequence.substitutionmatrix class method)": [[564, "skbio.sequence.SubstitutionMatrix.get_names", false]], "get_reader() (skbio.io.registry.ioregistry method)": [[156, "skbio.io.registry.IORegistry.get_reader", false]], "get_sniffer() (skbio.io.registry.ioregistry method)": [[157, "skbio.io.registry.IORegistry.get_sniffer", false]], "get_table_density() (skbio.table.table method)": [[808, "skbio.table.Table.get_table_density", false]], "get_trajectories() (skbio.stats.gradient.averagegradientanova method)": [[669, "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.firstdifferencegradientanova method)": [[691, "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.gradientanova method)": [[702, "skbio.stats.gradient.GradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.trajectorygradientanova method)": [[735, "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", false]], "get_trajectories() (skbio.stats.gradient.windowdifferencegradientanova method)": [[746, "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", false]], "get_value() (skbio.metadata.categoricalmetadatacolumn method)": [[186, "skbio.metadata.CategoricalMetadataColumn.get_value", false]], "get_value() (skbio.metadata.metadatacolumn method)": [[233, "skbio.metadata.MetadataColumn.get_value", false]], "get_value() (skbio.metadata.numericmetadatacolumn method)": [[251, "skbio.metadata.NumericMetadataColumn.get_value", false]], "get_value_by_ids() (skbio.table.table method)": [[809, "skbio.table.Table.get_value_by_ids", false]], "get_writer() (skbio.io.registry.ioregistry method)": [[158, "skbio.io.registry.IORegistry.get_writer", false]], "getter() (skbio.util.classproperty method)": [[948, "skbio.util.classproperty.getter", false]], "gini_index() (in module skbio.diversity.alpha)": [[80, "skbio.diversity.alpha.gini_index", false]], "global_pairwise_align() (in module skbio.alignment)": [[60, "skbio.alignment.global_pairwise_align", false]], "global_pairwise_align_nucleotide() (in module skbio.alignment)": [[61, "skbio.alignment.global_pairwise_align_nucleotide", false]], "global_pairwise_align_protein() (in module skbio.alignment)": [[62, "skbio.alignment.global_pairwise_align_protein", false]], "goods_coverage() (in module skbio.diversity.alpha)": [[81, "skbio.diversity.alpha.goods_coverage", false]], "gradientanova (class in skbio.stats.gradient)": [[692, "skbio.stats.gradient.GradientANOVA", false]], "gradientanovaresults (class in skbio.stats.gradient)": [[703, "skbio.stats.gradient.GradientANOVAResults", false]], "grammaredsequence (class in skbio.sequence)": [[346, "skbio.sequence.GrammaredSequence", false]], "group_metadata() (skbio.table.table method)": [[810, "skbio.table.Table.group_metadata", false]], "groupresults (class in skbio.stats.gradient)": [[714, "skbio.stats.gradient.GroupResults", false]], "hamming() (in module skbio.sequence.distance)": [[576, "skbio.sequence.distance.hamming", false]], "has_children() (skbio.tree.treenode method)": [[888, "skbio.tree.TreeNode.has_children", false]], "has_definites() (skbio.sequence.dna method)": [[306, "skbio.sequence.DNA.has_definites", false]], "has_definites() (skbio.sequence.grammaredsequence method)": [[374, "skbio.sequence.GrammaredSequence.has_definites", false]], "has_definites() (skbio.sequence.protein method)": [[425, "skbio.sequence.Protein.has_definites", false]], "has_definites() (skbio.sequence.rna method)": [[481, "skbio.sequence.RNA.has_definites", false]], "has_degenerates() (skbio.sequence.dna method)": [[307, "skbio.sequence.DNA.has_degenerates", false]], "has_degenerates() (skbio.sequence.grammaredsequence method)": [[375, "skbio.sequence.GrammaredSequence.has_degenerates", false]], "has_degenerates() (skbio.sequence.protein method)": [[426, "skbio.sequence.Protein.has_degenerates", false]], "has_degenerates() (skbio.sequence.rna method)": [[482, "skbio.sequence.RNA.has_degenerates", false]], "has_gaps() (skbio.sequence.dna method)": [[308, "skbio.sequence.DNA.has_gaps", false]], "has_gaps() (skbio.sequence.grammaredsequence method)": [[376, "skbio.sequence.GrammaredSequence.has_gaps", false]], "has_gaps() (skbio.sequence.protein method)": [[427, "skbio.sequence.Protein.has_gaps", false]], "has_gaps() (skbio.sequence.rna method)": [[483, "skbio.sequence.RNA.has_gaps", false]], "has_interval_metadata() (skbio.sequence.dna method)": [[309, "skbio.sequence.DNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.grammaredsequence method)": [[377, "skbio.sequence.GrammaredSequence.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.protein method)": [[428, "skbio.sequence.Protein.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.rna method)": [[484, "skbio.sequence.RNA.has_interval_metadata", false]], "has_interval_metadata() (skbio.sequence.sequence method)": [[531, "skbio.sequence.Sequence.has_interval_metadata", false]], "has_metadata() (skbio.alignment.tabularmsa method)": [[51, "skbio.alignment.TabularMSA.has_metadata", false]], "has_metadata() (skbio.sequence.dna method)": [[310, "skbio.sequence.DNA.has_metadata", false]], "has_metadata() (skbio.sequence.grammaredsequence method)": [[378, "skbio.sequence.GrammaredSequence.has_metadata", false]], "has_metadata() (skbio.sequence.protein method)": [[429, "skbio.sequence.Protein.has_metadata", false]], "has_metadata() (skbio.sequence.rna method)": [[485, "skbio.sequence.RNA.has_metadata", false]], "has_metadata() (skbio.sequence.sequence method)": [[532, "skbio.sequence.Sequence.has_metadata", false]], "has_missing_values() (skbio.metadata.categoricalmetadatacolumn method)": [[187, "skbio.metadata.CategoricalMetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.metadatacolumn method)": [[234, "skbio.metadata.MetadataColumn.has_missing_values", false]], "has_missing_values() (skbio.metadata.numericmetadatacolumn method)": [[252, "skbio.metadata.NumericMetadataColumn.has_missing_values", false]], "has_nondegenerates() (skbio.sequence.dna method)": [[311, "skbio.sequence.DNA.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.grammaredsequence method)": [[379, "skbio.sequence.GrammaredSequence.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.protein method)": [[430, "skbio.sequence.Protein.has_nondegenerates", false]], "has_nondegenerates() (skbio.sequence.rna method)": [[486, "skbio.sequence.RNA.has_nondegenerates", false]], "has_positional_metadata() (skbio.alignment.tabularmsa method)": [[52, "skbio.alignment.TabularMSA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.dna method)": [[312, "skbio.sequence.DNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.grammaredsequence method)": [[380, "skbio.sequence.GrammaredSequence.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.protein method)": [[431, "skbio.sequence.Protein.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.rna method)": [[487, "skbio.sequence.RNA.has_positional_metadata", false]], "has_positional_metadata() (skbio.sequence.sequence method)": [[533, "skbio.sequence.Sequence.has_positional_metadata", false]], "has_stops() (skbio.sequence.protein method)": [[432, "skbio.sequence.Protein.has_stops", false]], "head() (skbio.table.table method)": [[811, "skbio.table.Table.head", false]], "heip_e() (in module skbio.diversity.alpha)": [[82, "skbio.diversity.alpha.heip_e", false]], "hommola_cospeciation() (in module skbio.stats.evolve)": [[657, "skbio.stats.evolve.hommola_cospeciation", false]], "identity() (skbio.sequence.substitutionmatrix class method)": [[565, "skbio.sequence.SubstitutionMatrix.identity", false]], "ids() (skbio.table.table method)": [[812, "skbio.table.Table.ids", false]], "ilr() (in module skbio.stats.composition)": [[587, "skbio.stats.composition.ilr", false]], "ilr_inv() (in module skbio.stats.composition)": [[588, "skbio.stats.composition.ilr_inv", false]], "index() (skbio.sequence.dna method)": [[313, "skbio.sequence.DNA.index", false]], "index() (skbio.sequence.grammaredsequence method)": [[381, "skbio.sequence.GrammaredSequence.index", false]], "index() (skbio.sequence.protein method)": [[433, "skbio.sequence.Protein.index", false]], "index() (skbio.sequence.rna method)": [[488, "skbio.sequence.RNA.index", false]], "index() (skbio.sequence.sequence method)": [[534, "skbio.sequence.Sequence.index", false]], "index() (skbio.sequence.substitutionmatrix method)": [[566, "skbio.sequence.SubstitutionMatrix.index", false]], "index() (skbio.stats.distance.dissimilaritymatrix method)": [[615, "skbio.stats.distance.DissimilarityMatrix.index", false]], "index() (skbio.stats.distance.distancematrix method)": [[639, "skbio.stats.distance.DistanceMatrix.index", false]], "index() (skbio.table.table method)": [[813, "skbio.table.Table.index", false]], "index_tree() (skbio.tree.treenode method)": [[889, "skbio.tree.TreeNode.index_tree", false]], "initialize_state() (skbio.workflow.workflow method)": [[964, "skbio.workflow.Workflow.initialize_state", false]], "inner() (in module skbio.stats.composition)": [[589, "skbio.stats.composition.inner", false]], "interval (class in skbio.metadata)": [[191, "skbio.metadata.Interval", false]], "intervalmetadata (class in skbio.metadata)": [[201, "skbio.metadata.IntervalMetadata", false]], "invalidate_caches() (skbio.tree.treenode method)": [[890, "skbio.tree.TreeNode.invalidate_caches", false]], "ioregistry (class in skbio.io.registry)": [[144, "skbio.io.registry.IORegistry", false]], "is_empty() (skbio.table.table method)": [[814, "skbio.table.Table.is_empty", false]], "is_reverse_complement() (skbio.sequence.dna method)": [[314, "skbio.sequence.DNA.is_reverse_complement", false]], "is_reverse_complement() (skbio.sequence.rna method)": [[489, "skbio.sequence.RNA.is_reverse_complement", false]], "is_root() (skbio.tree.treenode method)": [[891, "skbio.tree.TreeNode.is_root", false]], "is_tip() (skbio.tree.treenode method)": [[892, "skbio.tree.TreeNode.is_tip", false]], "is_zero_based() (skbio.alignment.alignmentstructure method)": [[14, "skbio.alignment.AlignmentStructure.is_zero_based", false]], "isubsample() (in module skbio.stats)": [[747, "skbio.stats.isubsample", false]], "iter() (skbio.table.table method)": [[815, "skbio.table.Table.iter", false]], "iter_contiguous() (skbio.sequence.dna method)": [[315, "skbio.sequence.DNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.grammaredsequence method)": [[382, "skbio.sequence.GrammaredSequence.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.protein method)": [[434, "skbio.sequence.Protein.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.rna method)": [[490, "skbio.sequence.RNA.iter_contiguous", false]], "iter_contiguous() (skbio.sequence.sequence method)": [[535, "skbio.sequence.Sequence.iter_contiguous", false]], "iter_data() (skbio.table.table method)": [[816, "skbio.table.Table.iter_data", false]], "iter_kmers() (skbio.sequence.dna method)": [[316, "skbio.sequence.DNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.grammaredsequence method)": [[383, "skbio.sequence.GrammaredSequence.iter_kmers", false]], "iter_kmers() (skbio.sequence.protein method)": [[435, "skbio.sequence.Protein.iter_kmers", false]], "iter_kmers() (skbio.sequence.rna method)": [[491, "skbio.sequence.RNA.iter_kmers", false]], "iter_kmers() (skbio.sequence.sequence method)": [[536, "skbio.sequence.Sequence.iter_kmers", false]], "iter_pairwise() (skbio.table.table method)": [[817, "skbio.table.Table.iter_pairwise", false]], "iter_positions() (skbio.alignment.tabularmsa method)": [[53, "skbio.alignment.TabularMSA.iter_positions", false]], "join() (skbio.alignment.tabularmsa method)": [[54, "skbio.alignment.TabularMSA.join", false]], "kempton_taylor_q() (in module skbio.diversity.alpha)": [[83, "skbio.diversity.alpha.kempton_taylor_q", false]], "kmer_distance() (in module skbio.sequence.distance)": [[577, "skbio.sequence.distance.kmer_distance", false]], "kmer_frequencies() (skbio.sequence.dna method)": [[317, "skbio.sequence.DNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.grammaredsequence method)": [[384, "skbio.sequence.GrammaredSequence.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.protein method)": [[436, "skbio.sequence.Protein.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.rna method)": [[492, "skbio.sequence.RNA.kmer_frequencies", false]], "kmer_frequencies() (skbio.sequence.sequence method)": [[537, "skbio.sequence.Sequence.kmer_frequencies", false]], "lca() (skbio.tree.treenode method)": [[893, "skbio.tree.TreeNode.lca", false]], "length() (skbio.table.table method)": [[818, "skbio.table.Table.length", false]], "levelorder() (skbio.tree.treenode method)": [[894, "skbio.tree.TreeNode.levelorder", false]], "list_read_formats() (skbio.io.registry.ioregistry method)": [[159, "skbio.io.registry.IORegistry.list_read_formats", false]], "list_write_formats() (skbio.io.registry.ioregistry method)": [[160, "skbio.io.registry.IORegistry.list_write_formats", false]], "lladser_ci() (in module skbio.diversity.alpha)": [[84, "skbio.diversity.alpha.lladser_ci", false]], "lladser_pe() (in module skbio.diversity.alpha)": [[85, "skbio.diversity.alpha.lladser_pe", false]], "load() (skbio.metadata.samplemetadata class method)": [[269, "skbio.metadata.SampleMetadata.load", false]], "local_pairwise_align() (in module skbio.alignment)": [[63, "skbio.alignment.local_pairwise_align", false]], "local_pairwise_align_nucleotide() (in module skbio.alignment)": [[64, "skbio.alignment.local_pairwise_align_nucleotide", false]], "local_pairwise_align_protein() (in module skbio.alignment)": [[65, "skbio.alignment.local_pairwise_align_protein", false]], "local_pairwise_align_ssw() (in module skbio.alignment)": [[66, "skbio.alignment.local_pairwise_align_ssw", false]], "lowercase() (skbio.sequence.dna method)": [[318, "skbio.sequence.DNA.lowercase", false]], "lowercase() (skbio.sequence.grammaredsequence method)": [[385, "skbio.sequence.GrammaredSequence.lowercase", false]], "lowercase() (skbio.sequence.protein method)": [[437, "skbio.sequence.Protein.lowercase", false]], "lowercase() (skbio.sequence.rna method)": [[493, "skbio.sequence.RNA.lowercase", false]], "lowercase() (skbio.sequence.sequence method)": [[538, "skbio.sequence.Sequence.lowercase", false]], "lowest_common_ancestor() (skbio.tree.treenode method)": [[895, "skbio.tree.TreeNode.lowest_common_ancestor", false]], "majority_rule() (in module skbio.tree)": [[926, "skbio.tree.majority_rule", false]], "make_identity_substitution_matrix() (in module skbio.alignment)": [[67, "skbio.alignment.make_identity_substitution_matrix", false]], "mantel() (in module skbio.stats.distance)": [[651, "skbio.stats.distance.mantel", false]], "margalef() (in module skbio.diversity.alpha)": [[86, "skbio.diversity.alpha.margalef", false]], "match_frequency() (skbio.sequence.dna method)": [[319, "skbio.sequence.DNA.match_frequency", false]], "match_frequency() (skbio.sequence.grammaredsequence method)": [[386, "skbio.sequence.GrammaredSequence.match_frequency", false]], "match_frequency() (skbio.sequence.protein method)": [[438, "skbio.sequence.Protein.match_frequency", false]], "match_frequency() (skbio.sequence.rna method)": [[494, "skbio.sequence.RNA.match_frequency", false]], "match_frequency() (skbio.sequence.sequence method)": [[539, "skbio.sequence.Sequence.match_frequency", false]], "matches() (skbio.sequence.dna method)": [[320, "skbio.sequence.DNA.matches", false]], "matches() (skbio.sequence.grammaredsequence method)": [[387, "skbio.sequence.GrammaredSequence.matches", false]], "matches() (skbio.sequence.protein method)": [[439, "skbio.sequence.Protein.matches", false]], "matches() (skbio.sequence.rna method)": [[495, "skbio.sequence.RNA.matches", false]], "matches() (skbio.sequence.sequence method)": [[540, "skbio.sequence.Sequence.matches", false]], "max() (skbio.table.table method)": [[819, "skbio.table.Table.max", false]], "mcintosh_d() (in module skbio.diversity.alpha)": [[87, "skbio.diversity.alpha.mcintosh_d", false]], "mcintosh_e() (in module skbio.diversity.alpha)": [[88, "skbio.diversity.alpha.mcintosh_e", false]], "mean_and_std() (in module skbio.stats.ordination)": [[767, "skbio.stats.ordination.mean_and_std", false]], "menhinick() (in module skbio.diversity.alpha)": [[89, "skbio.diversity.alpha.menhinick", false]], "merge() (skbio.metadata.intervalmetadata method)": [[215, "skbio.metadata.IntervalMetadata.merge", false]], "merge() (skbio.metadata.samplemetadata method)": [[270, "skbio.metadata.SampleMetadata.merge", false]], "merge() (skbio.table.table method)": [[820, "skbio.table.Table.merge", false]], "metadata() (skbio.table.table method)": [[821, "skbio.table.Table.metadata", false]], "metadata_to_dataframe() (skbio.table.table method)": [[822, "skbio.table.Table.metadata_to_dataframe", false]], "metadatacolumn (class in skbio.metadata)": [[220, "skbio.metadata.MetadataColumn", false]], "method (class in skbio.workflow)": [[965, "skbio.workflow.method", false]], "michaelis_menten_fit() (in module skbio.diversity.alpha)": [[90, "skbio.diversity.alpha.michaelis_menten_fit", false]], "min() (skbio.table.table method)": [[823, "skbio.table.Table.min", false]], "mismatch_frequency() (skbio.sequence.dna method)": [[321, "skbio.sequence.DNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.grammaredsequence method)": [[388, "skbio.sequence.GrammaredSequence.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.protein method)": [[440, "skbio.sequence.Protein.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.rna method)": [[496, "skbio.sequence.RNA.mismatch_frequency", false]], "mismatch_frequency() (skbio.sequence.sequence method)": [[541, "skbio.sequence.Sequence.mismatch_frequency", false]], "mismatches() (skbio.sequence.dna method)": [[322, "skbio.sequence.DNA.mismatches", false]], "mismatches() (skbio.sequence.grammaredsequence method)": [[389, "skbio.sequence.GrammaredSequence.mismatches", false]], "mismatches() (skbio.sequence.protein method)": [[441, "skbio.sequence.Protein.mismatches", false]], "mismatches() (skbio.sequence.rna method)": [[497, "skbio.sequence.RNA.mismatches", false]], "mismatches() (skbio.sequence.sequence method)": [[542, "skbio.sequence.Sequence.mismatches", false]], "module": [[0, "module-skbio.alignment", false], [1, "module-skbio.diversity", false], [68, "module-skbio.diversity.alpha", false], [104, "module-skbio.diversity.beta", false], [112, "module-skbio.io.format.binary_dm", false], [113, "module-skbio.io.format.biom", false], [114, "module-skbio.io.format.blast6", false], [115, "module-skbio.io.format.blast7", false], [116, "module-skbio.io.format.clustal", false], [117, "module-skbio.io.format.embl", false], [118, "module-skbio.io.format.fasta", false], [119, "module-skbio.io.format.fastq", false], [120, "module-skbio.io.format.genbank", false], [121, "module-skbio.io.format.gff3", false], [122, "module-skbio.io.format.lsmat", false], [123, "module-skbio.io.format.newick", false], [124, "module-skbio.io.format.ordination", false], [125, "module-skbio.io.format.phylip", false], [126, "module-skbio.io.format.qseq", false], [127, "module-skbio.io.format.sample_metadata", false], [128, "module-skbio.io.format.stockholm", false], [129, "module-skbio.io.format.taxdump", false], [130, "module-skbio.io.registry", false], [169, "module-skbio.io.util", false], [575, "module-skbio.sequence.distance", false], [578, "module-skbio.stats.composition", false], [599, "module-skbio.stats.distance", false], [656, "module-skbio.stats.evolve", false], [658, "module-skbio.stats.gradient", false], [748, "module-skbio.stats.ordination", false], [773, "module-skbio.stats.power", false], [988, "module-skbio.io", false], [989, "module-skbio.metadata", false], [990, "module-skbio.sequence", false], [991, "module-skbio.stats", false], [992, "module-skbio.table", false], [993, "module-skbio.tree", false], [994, "module-skbio.util", false], [995, "module-skbio.workflow", false]], "monkey_patch() (skbio.io.registry.ioregistry method)": [[161, "skbio.io.registry.IORegistry.monkey_patch", false]], "multi_replace() (in module skbio.stats.composition)": [[590, "skbio.stats.composition.multi_replace", false]], "multiplicative_replacement() (in module skbio.stats.composition)": [[591, "skbio.stats.composition.multiplicative_replacement", false]], "neighbors() (skbio.tree.treenode method)": [[896, "skbio.tree.TreeNode.neighbors", false]], "nj() (in module skbio.tree)": [[927, "skbio.tree.nj", false]], "non_tips() (skbio.tree.treenode method)": [[897, "skbio.tree.TreeNode.non_tips", false]], "nondegenerates() (skbio.sequence.dna method)": [[323, "skbio.sequence.DNA.nondegenerates", false]], "nondegenerates() (skbio.sequence.grammaredsequence method)": [[390, "skbio.sequence.GrammaredSequence.nondegenerates", false]], "nondegenerates() (skbio.sequence.protein method)": [[442, "skbio.sequence.Protein.nondegenerates", false]], "nondegenerates() (skbio.sequence.rna method)": [[498, "skbio.sequence.RNA.nondegenerates", false]], "nonzero() (skbio.table.table method)": [[824, "skbio.table.Table.nonzero", false]], "nonzero_counts() (skbio.table.table method)": [[825, "skbio.table.Table.nonzero_counts", false]], "norm() (skbio.table.table method)": [[826, "skbio.table.Table.norm", false]], "numericmetadatacolumn (class in skbio.metadata)": [[238, "skbio.metadata.NumericMetadataColumn", false]], "observed_features() (in module skbio.diversity.alpha)": [[91, "skbio.diversity.alpha.observed_features", false]], "observed_node_counts() (skbio.tree.treenode method)": [[898, "skbio.tree.TreeNode.observed_node_counts", false]], "observed_otus() (in module skbio.diversity.alpha)": [[92, "skbio.diversity.alpha.observed_otus", false]], "open() (in module skbio.io.util)": [[170, "skbio.io.util.open", false]], "open_file() (in module skbio.io.util)": [[171, "skbio.io.util.open_file", false]], "open_files() (in module skbio.io.util)": [[172, "skbio.io.util.open_files", false]], "ordinationresults (class in skbio.stats.ordination)": [[749, "skbio.stats.ordination.OrdinationResults", false]], "osd() (in module skbio.diversity.alpha)": [[93, "skbio.diversity.alpha.osd", false]], "pa() (skbio.table.table method)": [[827, "skbio.table.Table.pa", false]], "paired_subsamples() (in module skbio.stats.power)": [[775, "skbio.stats.power.paired_subsamples", false]], "pairwise_vlr() (in module skbio.stats.composition)": [[592, "skbio.stats.composition.pairwise_vlr", false]], "partial_beta_diversity() (in module skbio.diversity)": [[111, "skbio.diversity.partial_beta_diversity", false]], "partition() (skbio.table.table method)": [[828, "skbio.table.Table.partition", false]], "pcoa() (in module skbio.stats.ordination)": [[768, "skbio.stats.ordination.pcoa", false]], "pcoa_biplot() (in module skbio.stats.ordination)": [[769, "skbio.stats.ordination.pcoa_biplot", false]], "permanova() (in module skbio.stats.distance)": [[652, "skbio.stats.distance.permanova", false]], "permdisp() (in module skbio.stats.distance)": [[653, "skbio.stats.distance.permdisp", false]], "permute() (skbio.stats.distance.distancematrix method)": [[640, "skbio.stats.distance.DistanceMatrix.permute", false]], "perturb() (in module skbio.stats.composition)": [[593, "skbio.stats.composition.perturb", false]], "perturb_inv() (in module skbio.stats.composition)": [[594, "skbio.stats.composition.perturb_inv", false]], "phydiv() (in module skbio.diversity.alpha)": [[94, "skbio.diversity.alpha.phydiv", false]], "pielou_e() (in module skbio.diversity.alpha)": [[95, "skbio.diversity.alpha.pielou_e", false]], "plot() (skbio.sequence.substitutionmatrix method)": [[567, "skbio.sequence.SubstitutionMatrix.plot", false]], "plot() (skbio.stats.distance.dissimilaritymatrix method)": [[616, "skbio.stats.distance.DissimilarityMatrix.plot", false]], "plot() (skbio.stats.distance.distancematrix method)": [[641, "skbio.stats.distance.DistanceMatrix.plot", false]], "plot() (skbio.stats.ordination.ordinationresults method)": [[759, "skbio.stats.ordination.OrdinationResults.plot", false]], "pop() (skbio.tree.treenode method)": [[899, "skbio.tree.TreeNode.pop", false]], "postorder() (skbio.tree.treenode method)": [[900, "skbio.tree.TreeNode.postorder", false]], "power() (in module skbio.stats.composition)": [[595, "skbio.stats.composition.power", false]], "pre_and_postorder() (skbio.tree.treenode method)": [[901, "skbio.tree.TreeNode.pre_and_postorder", false]], "preorder() (skbio.tree.treenode method)": [[902, "skbio.tree.TreeNode.preorder", false]], "protein (class in skbio.sequence)": [[397, "skbio.sequence.Protein", false]], "prune() (skbio.tree.treenode method)": [[903, "skbio.tree.TreeNode.prune", false]], "pwmantel() (in module skbio.stats.distance)": [[654, "skbio.stats.distance.pwmantel", false]], "query() (skbio.metadata.intervalmetadata method)": [[216, "skbio.metadata.IntervalMetadata.query", false]], "randdm() (in module skbio.stats.distance)": [[655, "skbio.stats.distance.randdm", false]], "rankdata() (skbio.table.table method)": [[829, "skbio.table.Table.rankdata", false]], "rda() (in module skbio.stats.ordination)": [[770, "skbio.stats.ordination.rda", false]], "read() (in module skbio.io.registry)": [[166, "skbio.io.registry.read", false]], "read() (skbio.alignment.tabularmsa class method)": [[55, "skbio.alignment.TabularMSA.read", false]], "read() (skbio.io.registry.ioregistry method)": [[162, "skbio.io.registry.IORegistry.read", false]], "read() (skbio.metadata.intervalmetadata class method)": [[217, "skbio.metadata.IntervalMetadata.read", false]], "read() (skbio.metadata.samplemetadata class method)": [[271, "skbio.metadata.SampleMetadata.read", false]], "read() (skbio.sequence.dna class method)": [[324, "skbio.sequence.DNA.read", false]], "read() (skbio.sequence.grammaredsequence class method)": [[391, "skbio.sequence.GrammaredSequence.read", false]], "read() (skbio.sequence.protein class method)": [[443, "skbio.sequence.Protein.read", false]], "read() (skbio.sequence.rna class method)": [[499, "skbio.sequence.RNA.read", false]], "read() (skbio.sequence.sequence class method)": [[543, "skbio.sequence.Sequence.read", false]], "read() (skbio.sequence.substitutionmatrix class method)": [[568, "skbio.sequence.SubstitutionMatrix.read", false]], "read() (skbio.stats.distance.dissimilaritymatrix class method)": [[617, "skbio.stats.distance.DissimilarityMatrix.read", false]], "read() (skbio.stats.distance.distancematrix class method)": [[642, "skbio.stats.distance.DistanceMatrix.read", false]], "read() (skbio.stats.ordination.ordinationresults class method)": [[760, "skbio.stats.ordination.OrdinationResults.read", false]], "read() (skbio.table.table class method)": [[830, "skbio.table.Table.read", false]], "read() (skbio.tree.treenode class method)": [[904, "skbio.tree.TreeNode.read", false]], "reader() (skbio.io.registry.format method)": [[141, "skbio.io.registry.Format.reader", false]], "reassign_index() (skbio.alignment.tabularmsa method)": [[56, "skbio.alignment.TabularMSA.reassign_index", false]], "reduce() (skbio.table.table method)": [[831, "skbio.table.Table.reduce", false]], "redundant_form() (skbio.sequence.substitutionmatrix method)": [[569, "skbio.sequence.SubstitutionMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.dissimilaritymatrix method)": [[618, "skbio.stats.distance.DissimilarityMatrix.redundant_form", false]], "redundant_form() (skbio.stats.distance.distancematrix method)": [[643, "skbio.stats.distance.DistanceMatrix.redundant_form", false]], "remove() (skbio.tree.treenode method)": [[905, "skbio.tree.TreeNode.remove", false]], "remove_deleted() (skbio.tree.treenode method)": [[906, "skbio.tree.TreeNode.remove_deleted", false]], "remove_empty() (skbio.table.table method)": [[832, "skbio.table.Table.remove_empty", false]], "replace() (skbio.sequence.dna method)": [[325, "skbio.sequence.DNA.replace", false]], "replace() (skbio.sequence.grammaredsequence method)": [[392, "skbio.sequence.GrammaredSequence.replace", false]], "replace() (skbio.sequence.protein method)": [[444, "skbio.sequence.Protein.replace", false]], "replace() (skbio.sequence.rna method)": [[500, "skbio.sequence.RNA.replace", false]], "replace() (skbio.sequence.sequence method)": [[544, "skbio.sequence.Sequence.replace", false]], "representationwarning": [[929, "skbio.util.RepresentationWarning", false]], "requires (class in skbio.workflow)": [[976, "skbio.workflow.requires", false]], "reverse_complement() (skbio.sequence.dna method)": [[326, "skbio.sequence.DNA.reverse_complement", false]], "reverse_complement() (skbio.sequence.rna method)": [[501, "skbio.sequence.RNA.reverse_complement", false]], "reverse_transcribe() (skbio.sequence.rna method)": [[502, "skbio.sequence.RNA.reverse_transcribe", false]], "rna (class in skbio.sequence)": [[450, "skbio.sequence.RNA", false]], "robbins() (in module skbio.diversity.alpha)": [[96, "skbio.diversity.alpha.robbins", false]], "root() (skbio.tree.treenode method)": [[907, "skbio.tree.TreeNode.root", false]], "root_at() (skbio.tree.treenode method)": [[908, "skbio.tree.TreeNode.root_at", false]], "root_at_midpoint() (skbio.tree.treenode method)": [[909, "skbio.tree.TreeNode.root_at_midpoint", false]], "safe_md5() (in module skbio.util)": [[952, "skbio.util.safe_md5", false]], "samplemetadata (class in skbio.metadata)": [[256, "skbio.metadata.SampleMetadata", false]], "save() (skbio.metadata.categoricalmetadatacolumn method)": [[188, "skbio.metadata.CategoricalMetadataColumn.save", false]], "save() (skbio.metadata.metadatacolumn method)": [[235, "skbio.metadata.MetadataColumn.save", false]], "save() (skbio.metadata.numericmetadatacolumn method)": [[253, "skbio.metadata.NumericMetadataColumn.save", false]], "save() (skbio.metadata.samplemetadata method)": [[272, "skbio.metadata.SampleMetadata.save", false]], "sbp_basis() (in module skbio.stats.composition)": [[596, "skbio.stats.composition.sbp_basis", false]], "scale() (in module skbio.stats.ordination)": [[771, "skbio.stats.ordination.scale", false]], "sequence (class in skbio.sequence)": [[509, "skbio.sequence.Sequence", false]], "set_zero_based() (skbio.alignment.alignmentstructure method)": [[15, "skbio.alignment.AlignmentStructure.set_zero_based", false]], "setter() (skbio.util.classproperty method)": [[949, "skbio.util.classproperty.setter", false]], "shannon() (in module skbio.diversity.alpha)": [[97, "skbio.diversity.alpha.shannon", false]], "shear() (skbio.tree.treenode method)": [[910, "skbio.tree.TreeNode.shear", false]], "shuffle() (skbio.tree.treenode method)": [[911, "skbio.tree.TreeNode.shuffle", false]], "siblings() (skbio.tree.treenode method)": [[912, "skbio.tree.TreeNode.siblings", false]], "simpson() (in module skbio.diversity.alpha)": [[98, "skbio.diversity.alpha.simpson", false]], "simpson_e() (in module skbio.diversity.alpha)": [[99, "skbio.diversity.alpha.simpson_e", false]], "singles() (in module skbio.diversity.alpha)": [[100, "skbio.diversity.alpha.singles", false]], "skbio.alignment": [[0, "module-skbio.alignment", false]], "skbio.diversity": [[1, "module-skbio.diversity", false]], "skbio.diversity.alpha": [[68, "module-skbio.diversity.alpha", false]], "skbio.diversity.beta": [[104, "module-skbio.diversity.beta", false]], "skbio.io": [[988, "module-skbio.io", false]], "skbio.io.format.binary_dm": [[112, "module-skbio.io.format.binary_dm", false]], "skbio.io.format.biom": [[113, "module-skbio.io.format.biom", false]], "skbio.io.format.blast6": [[114, "module-skbio.io.format.blast6", false]], "skbio.io.format.blast7": [[115, "module-skbio.io.format.blast7", false]], "skbio.io.format.clustal": [[116, "module-skbio.io.format.clustal", false]], "skbio.io.format.embl": [[117, "module-skbio.io.format.embl", false]], "skbio.io.format.fasta": [[118, "module-skbio.io.format.fasta", false]], "skbio.io.format.fastq": [[119, "module-skbio.io.format.fastq", false]], "skbio.io.format.genbank": [[120, "module-skbio.io.format.genbank", false]], "skbio.io.format.gff3": [[121, "module-skbio.io.format.gff3", false]], "skbio.io.format.lsmat": [[122, "module-skbio.io.format.lsmat", false]], "skbio.io.format.newick": [[123, "module-skbio.io.format.newick", false]], "skbio.io.format.ordination": [[124, "module-skbio.io.format.ordination", false]], "skbio.io.format.phylip": [[125, "module-skbio.io.format.phylip", false]], "skbio.io.format.qseq": [[126, "module-skbio.io.format.qseq", false]], "skbio.io.format.sample_metadata": [[127, "module-skbio.io.format.sample_metadata", false]], "skbio.io.format.stockholm": [[128, "module-skbio.io.format.stockholm", false]], "skbio.io.format.taxdump": [[129, "module-skbio.io.format.taxdump", false]], "skbio.io.registry": [[130, "module-skbio.io.registry", false]], "skbio.io.util": [[169, "module-skbio.io.util", false]], "skbio.metadata": [[989, "module-skbio.metadata", false]], "skbio.sequence": [[990, "module-skbio.sequence", false]], "skbio.sequence.distance": [[575, "module-skbio.sequence.distance", false]], "skbio.stats": [[991, "module-skbio.stats", false]], "skbio.stats.composition": [[578, "module-skbio.stats.composition", false]], "skbio.stats.distance": [[599, "module-skbio.stats.distance", false]], "skbio.stats.evolve": [[656, "module-skbio.stats.evolve", false]], "skbio.stats.gradient": [[658, "module-skbio.stats.gradient", false]], "skbio.stats.ordination": [[748, "module-skbio.stats.ordination", false]], "skbio.stats.power": [[773, "module-skbio.stats.power", false]], "skbio.table": [[992, "module-skbio.table", false]], "skbio.tree": [[993, "module-skbio.tree", false]], "skbio.util": [[994, "module-skbio.util", false]], "skbio.workflow": [[995, "module-skbio.workflow", false]], "sniff() (in module skbio.io.registry)": [[167, "skbio.io.registry.sniff", false]], "sniff() (skbio.io.registry.ioregistry method)": [[163, "skbio.io.registry.IORegistry.sniff", false]], "sniffer() (skbio.io.registry.format method)": [[142, "skbio.io.registry.Format.sniffer", false]], "sobs() (in module skbio.diversity.alpha)": [[101, "skbio.diversity.alpha.sobs", false]], "sort() (skbio.alignment.tabularmsa method)": [[57, "skbio.alignment.TabularMSA.sort", false]], "sort() (skbio.metadata.intervalmetadata method)": [[218, "skbio.metadata.IntervalMetadata.sort", false]], "sort() (skbio.table.table method)": [[833, "skbio.table.Table.sort", false]], "sort_order() (skbio.table.table method)": [[834, "skbio.table.Table.sort_order", false]], "stops() (skbio.sequence.protein method)": [[445, "skbio.sequence.Protein.stops", false]], "stripedsmithwaterman (class in skbio.alignment)": [[16, "skbio.alignment.StripedSmithWaterman", false]], "strong() (in module skbio.diversity.alpha)": [[102, "skbio.diversity.alpha.strong", false]], "subsample() (skbio.table.table method)": [[835, "skbio.table.Table.subsample", false]], "subsample_counts() (in module skbio.stats)": [[778, "skbio.stats.subsample_counts", false]], "subsample_paired_power() (in module skbio.stats.power)": [[776, "skbio.stats.power.subsample_paired_power", false]], "subsample_power() (in module skbio.stats.power)": [[777, "skbio.stats.power.subsample_power", false]], "subset() (skbio.tree.treenode method)": [[913, "skbio.tree.TreeNode.subset", false]], "subsets() (skbio.tree.treenode method)": [[914, "skbio.tree.TreeNode.subsets", false]], "substitutionmatrix (class in skbio.sequence)": [[547, "skbio.sequence.SubstitutionMatrix", false]], "subtree() (skbio.tree.treenode method)": [[915, "skbio.tree.TreeNode.subtree", false]], "sum() (skbio.table.table method)": [[836, "skbio.table.Table.sum", false]], "svd_rank() (in module skbio.stats.ordination)": [[772, "skbio.stats.ordination.svd_rank", false]], "table (class in skbio.table)": [[779, "skbio.table.Table", false]], "tabularmsa (class in skbio.alignment)": [[28, "skbio.alignment.TabularMSA", false]], "tip_tip_distances() (skbio.tree.treenode method)": [[916, "skbio.tree.TreeNode.tip_tip_distances", false]], "tips() (skbio.tree.treenode method)": [[917, "skbio.tree.TreeNode.tips", false]], "to_anndata() (skbio.table.table method)": [[837, "skbio.table.Table.to_anndata", false]], "to_array() (skbio.tree.treenode method)": [[918, "skbio.tree.TreeNode.to_array", false]], "to_data_frame() (skbio.sequence.substitutionmatrix method)": [[570, "skbio.sequence.SubstitutionMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.dissimilaritymatrix method)": [[619, "skbio.stats.distance.DissimilarityMatrix.to_data_frame", false]], "to_data_frame() (skbio.stats.distance.distancematrix method)": [[644, "skbio.stats.distance.DistanceMatrix.to_data_frame", false]], "to_dataframe() (skbio.metadata.categoricalmetadatacolumn method)": [[189, "skbio.metadata.CategoricalMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.metadatacolumn method)": [[236, "skbio.metadata.MetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.numericmetadatacolumn method)": [[254, "skbio.metadata.NumericMetadataColumn.to_dataframe", false]], "to_dataframe() (skbio.metadata.samplemetadata method)": [[273, "skbio.metadata.SampleMetadata.to_dataframe", false]], "to_dataframe() (skbio.table.table method)": [[838, "skbio.table.Table.to_dataframe", false]], "to_definites() (skbio.sequence.dna method)": [[327, "skbio.sequence.DNA.to_definites", false]], "to_definites() (skbio.sequence.grammaredsequence method)": [[393, "skbio.sequence.GrammaredSequence.to_definites", false]], "to_definites() (skbio.sequence.protein method)": [[446, "skbio.sequence.Protein.to_definites", false]], "to_definites() (skbio.sequence.rna method)": [[503, "skbio.sequence.RNA.to_definites", false]], "to_dict() (skbio.alignment.tabularmsa method)": [[58, "skbio.alignment.TabularMSA.to_dict", false]], "to_dict() (skbio.sequence.substitutionmatrix method)": [[571, "skbio.sequence.SubstitutionMatrix.to_dict", false]], "to_files() (skbio.stats.gradient.categoryresults method)": [[680, "skbio.stats.gradient.CategoryResults.to_files", false]], "to_files() (skbio.stats.gradient.gradientanovaresults method)": [[713, "skbio.stats.gradient.GradientANOVAResults.to_files", false]], "to_files() (skbio.stats.gradient.groupresults method)": [[724, "skbio.stats.gradient.GroupResults.to_files", false]], "to_hdf5() (skbio.table.table method)": [[839, "skbio.table.Table.to_hdf5", false]], "to_indices() (skbio.sequence.dna method)": [[328, "skbio.sequence.DNA.to_indices", false]], "to_indices() (skbio.sequence.grammaredsequence method)": [[394, "skbio.sequence.GrammaredSequence.to_indices", false]], "to_indices() (skbio.sequence.protein method)": [[447, "skbio.sequence.Protein.to_indices", false]], "to_indices() (skbio.sequence.rna method)": [[504, "skbio.sequence.RNA.to_indices", false]], "to_indices() (skbio.sequence.sequence method)": [[545, "skbio.sequence.Sequence.to_indices", false]], "to_json() (skbio.table.table method)": [[840, "skbio.table.Table.to_json", false]], "to_regex() (skbio.sequence.dna method)": [[329, "skbio.sequence.DNA.to_regex", false]], "to_regex() (skbio.sequence.grammaredsequence method)": [[395, "skbio.sequence.GrammaredSequence.to_regex", false]], "to_regex() (skbio.sequence.protein method)": [[448, "skbio.sequence.Protein.to_regex", false]], "to_regex() (skbio.sequence.rna method)": [[505, "skbio.sequence.RNA.to_regex", false]], "to_series() (skbio.metadata.categoricalmetadatacolumn method)": [[190, "skbio.metadata.CategoricalMetadataColumn.to_series", false]], "to_series() (skbio.metadata.metadatacolumn method)": [[237, "skbio.metadata.MetadataColumn.to_series", false]], "to_series() (skbio.metadata.numericmetadatacolumn method)": [[255, "skbio.metadata.NumericMetadataColumn.to_series", false]], "to_series() (skbio.stats.distance.distancematrix method)": [[645, "skbio.stats.distance.DistanceMatrix.to_series", false]], "to_taxonomy() (skbio.tree.treenode method)": [[919, "skbio.tree.TreeNode.to_taxonomy", false]], "to_tsv() (skbio.table.table method)": [[841, "skbio.table.Table.to_tsv", false]], "trajectorygradientanova (class in skbio.stats.gradient)": [[725, "skbio.stats.gradient.TrajectoryGradientANOVA", false]], "transcribe() (skbio.sequence.dna method)": [[330, "skbio.sequence.DNA.transcribe", false]], "transform() (skbio.table.table method)": [[842, "skbio.table.Table.transform", false]], "translate() (skbio.sequence.dna method)": [[331, "skbio.sequence.DNA.translate", false]], "translate() (skbio.sequence.geneticcode method)": [[344, "skbio.sequence.GeneticCode.translate", false]], "translate() (skbio.sequence.rna method)": [[506, "skbio.sequence.RNA.translate", false]], "translate_six_frames() (skbio.sequence.dna method)": [[332, "skbio.sequence.DNA.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.geneticcode method)": [[345, "skbio.sequence.GeneticCode.translate_six_frames", false]], "translate_six_frames() (skbio.sequence.rna method)": [[507, "skbio.sequence.RNA.translate_six_frames", false]], "transpose() (skbio.sequence.substitutionmatrix method)": [[572, "skbio.sequence.SubstitutionMatrix.transpose", false]], "transpose() (skbio.stats.distance.dissimilaritymatrix method)": [[620, "skbio.stats.distance.DissimilarityMatrix.transpose", false]], "transpose() (skbio.stats.distance.distancematrix method)": [[646, "skbio.stats.distance.DistanceMatrix.transpose", false]], "transpose() (skbio.table.table method)": [[843, "skbio.table.Table.transpose", false]], "traverse() (skbio.tree.treenode method)": [[920, "skbio.tree.TreeNode.traverse", false]], "tree_basis() (in module skbio.stats.composition)": [[597, "skbio.stats.composition.tree_basis", false]], "treenode (class in skbio.tree)": [[847, "skbio.tree.TreeNode", false]], "unpack() (skbio.tree.treenode method)": [[921, "skbio.tree.TreeNode.unpack", false]], "unpack_by_func() (skbio.tree.treenode method)": [[922, "skbio.tree.TreeNode.unpack_by_func", false]], "unrooted_copy() (skbio.tree.treenode method)": [[923, "skbio.tree.TreeNode.unrooted_copy", false]], "unrooted_deepcopy() (skbio.tree.treenode method)": [[924, "skbio.tree.TreeNode.unrooted_deepcopy", false]], "unweighted_unifrac() (in module skbio.diversity.beta)": [[105, "skbio.diversity.beta.unweighted_unifrac", false]], "update_ids() (skbio.table.table method)": [[844, "skbio.table.Table.update_ids", false]], "vlr() (in module skbio.stats.composition)": [[598, "skbio.stats.composition.vlr", false]], "weighted_unifrac() (in module skbio.diversity.beta)": [[106, "skbio.diversity.beta.weighted_unifrac", false]], "windowdifferencegradientanova (class in skbio.stats.gradient)": [[736, "skbio.stats.gradient.WindowDifferenceGradientANOVA", false]], "within() (skbio.sequence.substitutionmatrix method)": [[573, "skbio.sequence.SubstitutionMatrix.within", false]], "within() (skbio.stats.distance.dissimilaritymatrix method)": [[621, "skbio.stats.distance.DissimilarityMatrix.within", false]], "within() (skbio.stats.distance.distancematrix method)": [[647, "skbio.stats.distance.DistanceMatrix.within", false]], "workflow (class in skbio.workflow)": [[953, "skbio.workflow.Workflow", false]], "write() (in module skbio.io.registry)": [[168, "skbio.io.registry.write", false]], "write() (skbio.alignment.tabularmsa method)": [[59, "skbio.alignment.TabularMSA.write", false]], "write() (skbio.io.registry.ioregistry method)": [[164, "skbio.io.registry.IORegistry.write", false]], "write() (skbio.metadata.intervalmetadata method)": [[219, "skbio.metadata.IntervalMetadata.write", false]], "write() (skbio.metadata.samplemetadata method)": [[274, "skbio.metadata.SampleMetadata.write", false]], "write() (skbio.sequence.dna method)": [[333, "skbio.sequence.DNA.write", false]], "write() (skbio.sequence.grammaredsequence method)": [[396, "skbio.sequence.GrammaredSequence.write", false]], "write() (skbio.sequence.protein method)": [[449, "skbio.sequence.Protein.write", false]], "write() (skbio.sequence.rna method)": [[508, "skbio.sequence.RNA.write", false]], "write() (skbio.sequence.sequence method)": [[546, "skbio.sequence.Sequence.write", false]], "write() (skbio.sequence.substitutionmatrix method)": [[574, "skbio.sequence.SubstitutionMatrix.write", false]], "write() (skbio.stats.distance.dissimilaritymatrix method)": [[622, "skbio.stats.distance.DissimilarityMatrix.write", false]], "write() (skbio.stats.distance.distancematrix method)": [[648, "skbio.stats.distance.DistanceMatrix.write", false]], "write() (skbio.stats.ordination.ordinationresults method)": [[761, "skbio.stats.ordination.OrdinationResults.write", false]], "write() (skbio.table.table method)": [[845, "skbio.table.Table.write", false]], "write() (skbio.tree.treenode method)": [[925, "skbio.tree.TreeNode.write", false]], "writer() (skbio.io.registry.format method)": [[143, "skbio.io.registry.Format.writer", false]]}, "objects": {"skbio": [[0, 0, 0, "-", "alignment"], [1, 0, 0, "-", "diversity"], [988, 0, 0, "-", "io"], [989, 0, 0, "-", "metadata"], [990, 0, 0, "-", "sequence"], [991, 0, 0, "-", "stats"], [992, 0, 0, "-", "table"], [993, 0, 0, "-", "tree"], [994, 0, 0, "-", "util"], [995, 0, 0, "-", "workflow"]], "skbio.alignment": [[2, 1, 1, "", "AlignmentStructure"], [16, 1, 1, "", "StripedSmithWaterman"], [28, 1, 1, "", "TabularMSA"], [60, 3, 1, "", "global_pairwise_align"], [61, 3, 1, "", "global_pairwise_align_nucleotide"], [62, 3, 1, "", "global_pairwise_align_protein"], [63, 3, 1, "", "local_pairwise_align"], [64, 3, 1, "", "local_pairwise_align_nucleotide"], [65, 3, 1, "", "local_pairwise_align_protein"], [66, 3, 1, "", "local_pairwise_align_ssw"], [67, 3, 1, "", "make_identity_substitution_matrix"]], "skbio.alignment.AlignmentStructure": [[3, 2, 1, "", "__eq__"], [4, 2, 1, "", "__ge__"], [5, 2, 1, "", "__getitem__"], [6, 2, 1, "", "__getstate__"], [7, 2, 1, "", "__gt__"], [8, 2, 1, "", "__hash__"], [9, 2, 1, "", "__le__"], [10, 2, 1, "", "__lt__"], [11, 2, 1, "", "__ne__"], [12, 2, 1, "", "__setstate__"], [13, 2, 1, "", "__str__"], [14, 2, 1, "", "is_zero_based"], [15, 2, 1, "", "set_zero_based"]], "skbio.alignment.StripedSmithWaterman": [[17, 2, 1, "", "__call__"], [18, 2, 1, "", "__eq__"], [19, 2, 1, "", "__ge__"], [20, 2, 1, "", "__getstate__"], [21, 2, 1, "", "__gt__"], [22, 2, 1, "", "__hash__"], [23, 2, 1, "", "__le__"], [24, 2, 1, "", "__lt__"], [25, 2, 1, "", "__ne__"], [26, 2, 1, "", "__setstate__"], [27, 2, 1, "", "__str__"]], "skbio.alignment.TabularMSA": [[29, 2, 1, "", "__bool__"], [30, 2, 1, "", "__contains__"], [31, 2, 1, "", "__copy__"], [32, 2, 1, "", "__deepcopy__"], [33, 2, 1, "", "__eq__"], [34, 2, 1, "", "__ge__"], [35, 2, 1, "", "__getitem__"], [36, 2, 1, "", "__getstate__"], [37, 2, 1, "", "__gt__"], [38, 2, 1, "", "__iter__"], [39, 2, 1, "", "__le__"], [40, 2, 1, "", "__len__"], [41, 2, 1, "", "__lt__"], [42, 2, 1, "", "__ne__"], [43, 2, 1, "", "__reversed__"], [44, 2, 1, "", "__str__"], [45, 2, 1, "", "append"], [46, 2, 1, "", "consensus"], [47, 2, 1, "", "conservation"], [48, 2, 1, "", "extend"], [49, 2, 1, "", "from_dict"], [50, 2, 1, "", "gap_frequencies"], [51, 2, 1, "", "has_metadata"], [52, 2, 1, "", "has_positional_metadata"], [53, 2, 1, "", "iter_positions"], [54, 2, 1, "", "join"], [55, 2, 1, "", "read"], [56, 2, 1, "", "reassign_index"], [57, 2, 1, "", "sort"], [58, 2, 1, "", "to_dict"], [59, 2, 1, "", "write"]], "skbio.diversity": [[68, 0, 0, "-", "alpha"], [103, 3, 1, "", "alpha_diversity"], [104, 0, 0, "-", "beta"], [107, 3, 1, "", "beta_diversity"], [108, 3, 1, "", "block_beta_diversity"], [109, 3, 1, "", "get_alpha_diversity_metrics"], [110, 3, 1, "", "get_beta_diversity_metrics"], [111, 3, 1, "", "partial_beta_diversity"]], "skbio.diversity.alpha": [[69, 3, 1, "", "ace"], [70, 3, 1, "", "berger_parker_d"], [71, 3, 1, "", "brillouin_d"], [72, 3, 1, "", "chao1"], [73, 3, 1, "", "chao1_ci"], [74, 3, 1, "", "dominance"], [75, 3, 1, "", "doubles"], [76, 3, 1, "", "enspie"], [77, 3, 1, "", "esty_ci"], [78, 3, 1, "", "faith_pd"], [79, 3, 1, "", "fisher_alpha"], [80, 3, 1, "", "gini_index"], [81, 3, 1, "", "goods_coverage"], [82, 3, 1, "", "heip_e"], [83, 3, 1, "", "kempton_taylor_q"], [84, 3, 1, "", "lladser_ci"], [85, 3, 1, "", "lladser_pe"], [86, 3, 1, "", "margalef"], [87, 3, 1, "", "mcintosh_d"], [88, 3, 1, "", "mcintosh_e"], [89, 3, 1, "", "menhinick"], [90, 3, 1, "", "michaelis_menten_fit"], [91, 3, 1, "", "observed_features"], [92, 3, 1, "", "observed_otus"], [93, 3, 1, "", "osd"], [94, 3, 1, "", "phydiv"], [95, 3, 1, "", "pielou_e"], [96, 3, 1, "", "robbins"], [97, 3, 1, "", "shannon"], [98, 3, 1, "", "simpson"], [99, 3, 1, "", "simpson_e"], [100, 3, 1, "", "singles"], [101, 3, 1, "", "sobs"], [102, 3, 1, "", "strong"]], "skbio.diversity.beta": [[105, 3, 1, "", "unweighted_unifrac"], [106, 3, 1, "", "weighted_unifrac"]], "skbio.io": [[130, 0, 0, "-", "registry"], [169, 0, 0, "-", "util"]], "skbio.io.format": [[112, 0, 0, "-", "binary_dm"], [113, 0, 0, "-", "biom"], [114, 0, 0, "-", "blast6"], [115, 0, 0, "-", "blast7"], [116, 0, 0, "-", "clustal"], [117, 0, 0, "-", "embl"], [118, 0, 0, "-", "fasta"], [119, 0, 0, "-", "fastq"], [120, 0, 0, "-", "genbank"], [121, 0, 0, "-", "gff3"], [122, 0, 0, "-", "lsmat"], [123, 0, 0, "-", "newick"], [124, 0, 0, "-", "ordination"], [125, 0, 0, "-", "phylip"], [126, 0, 0, "-", "qseq"], [127, 0, 0, "-", "sample_metadata"], [128, 0, 0, "-", "stockholm"], [129, 0, 0, "-", "taxdump"]], "skbio.io.registry": [[131, 1, 1, "", "Format"], [144, 1, 1, "", "IORegistry"], [165, 3, 1, "", "create_format"], [166, 3, 1, "", "read"], [167, 3, 1, "", "sniff"], [168, 3, 1, "", "write"]], "skbio.io.registry.Format": [[132, 2, 1, "", "__eq__"], [133, 2, 1, "", "__ge__"], [134, 2, 1, "", "__getstate__"], [135, 2, 1, "", "__gt__"], [136, 2, 1, "", "__hash__"], [137, 2, 1, "", "__le__"], [138, 2, 1, "", "__lt__"], [139, 2, 1, "", "__ne__"], [140, 2, 1, "", "__str__"], [141, 2, 1, "", "reader"], [142, 2, 1, "", "sniffer"], [143, 2, 1, "", "writer"]], "skbio.io.registry.IORegistry": [[145, 2, 1, "", "__eq__"], [146, 2, 1, "", "__ge__"], [147, 2, 1, "", "__getstate__"], [148, 2, 1, "", "__gt__"], [149, 2, 1, "", "__hash__"], [150, 2, 1, "", "__le__"], [151, 2, 1, "", "__lt__"], [152, 2, 1, "", "__ne__"], [153, 2, 1, "", "__str__"], [154, 2, 1, "", "add_format"], [155, 2, 1, "", "create_format"], [156, 2, 1, "", "get_reader"], [157, 2, 1, "", "get_sniffer"], [158, 2, 1, "", "get_writer"], [159, 2, 1, "", "list_read_formats"], [160, 2, 1, "", "list_write_formats"], [161, 2, 1, "", "monkey_patch"], [162, 2, 1, "", "read"], [163, 2, 1, "", "sniff"], [164, 2, 1, "", "write"]], "skbio.io.util": [[170, 3, 1, "", "open"], [171, 3, 1, "", "open_file"], [172, 3, 1, "", "open_files"]], "skbio.metadata": [[173, 1, 1, "", "CategoricalMetadataColumn"], [191, 1, 1, "", "Interval"], [201, 1, 1, "", "IntervalMetadata"], [220, 1, 1, "", "MetadataColumn"], [238, 1, 1, "", "NumericMetadataColumn"], [256, 1, 1, "", "SampleMetadata"]], "skbio.metadata.CategoricalMetadataColumn": [[174, 2, 1, "", "__eq__"], [175, 2, 1, "", "__ge__"], [176, 2, 1, "", "__getstate__"], [177, 2, 1, "", "__gt__"], [178, 2, 1, "", "__le__"], [179, 2, 1, "", "__lt__"], [180, 2, 1, "", "__ne__"], [181, 2, 1, "", "__str__"], [182, 2, 1, "", "drop_missing_values"], [183, 2, 1, "", "filter_ids"], [184, 2, 1, "", "get_ids"], [185, 2, 1, "", "get_missing"], [186, 2, 1, "", "get_value"], [187, 2, 1, "", "has_missing_values"], [188, 2, 1, "", "save"], [189, 2, 1, "", "to_dataframe"], [190, 2, 1, "", "to_series"]], "skbio.metadata.Interval": [[192, 2, 1, "", "__eq__"], [193, 2, 1, "", "__ge__"], [194, 2, 1, "", "__getstate__"], [195, 2, 1, "", "__gt__"], [196, 2, 1, "", "__le__"], [197, 2, 1, "", "__lt__"], [198, 2, 1, "", "__ne__"], [199, 2, 1, "", "__str__"], [200, 2, 1, "", "drop"]], "skbio.metadata.IntervalMetadata": [[202, 2, 1, "", "__copy__"], [203, 2, 1, "", "__deepcopy__"], [204, 2, 1, "", "__eq__"], [205, 2, 1, "", "__ge__"], [206, 2, 1, "", "__getstate__"], [207, 2, 1, "", "__gt__"], [208, 2, 1, "", "__le__"], [209, 2, 1, "", "__lt__"], [210, 2, 1, "", "__ne__"], [211, 2, 1, "", "__str__"], [212, 2, 1, "", "add"], [213, 2, 1, "", "concat"], [214, 2, 1, "", "drop"], [215, 2, 1, "", "merge"], [216, 2, 1, "", "query"], [217, 2, 1, "", "read"], [218, 2, 1, "", "sort"], [219, 2, 1, "", "write"]], "skbio.metadata.MetadataColumn": [[221, 2, 1, "", "__eq__"], [222, 2, 1, "", "__ge__"], [223, 2, 1, "", "__getstate__"], [224, 2, 1, "", "__gt__"], [225, 2, 1, "", "__le__"], [226, 2, 1, "", "__lt__"], [227, 2, 1, "", "__ne__"], [228, 2, 1, "", "__str__"], [229, 2, 1, "", "drop_missing_values"], [230, 2, 1, "", "filter_ids"], [231, 2, 1, "", "get_ids"], [232, 2, 1, "", "get_missing"], [233, 2, 1, "", "get_value"], [234, 2, 1, "", "has_missing_values"], [235, 2, 1, "", "save"], [236, 2, 1, "", "to_dataframe"], [237, 2, 1, "", "to_series"]], "skbio.metadata.NumericMetadataColumn": [[239, 2, 1, "", "__eq__"], [240, 2, 1, "", "__ge__"], [241, 2, 1, "", "__getstate__"], [242, 2, 1, "", "__gt__"], [243, 2, 1, "", "__le__"], [244, 2, 1, "", "__lt__"], [245, 2, 1, "", "__ne__"], [246, 2, 1, "", "__str__"], [247, 2, 1, "", "drop_missing_values"], [248, 2, 1, "", "filter_ids"], [249, 2, 1, "", "get_ids"], [250, 2, 1, "", "get_missing"], [251, 2, 1, "", "get_value"], [252, 2, 1, "", "has_missing_values"], [253, 2, 1, "", "save"], [254, 2, 1, "", "to_dataframe"], [255, 2, 1, "", "to_series"]], "skbio.metadata.SampleMetadata": [[257, 2, 1, "", "__eq__"], [258, 2, 1, "", "__ge__"], [259, 2, 1, "", "__getstate__"], [260, 2, 1, "", "__gt__"], [261, 2, 1, "", "__le__"], [262, 2, 1, "", "__lt__"], [263, 2, 1, "", "__ne__"], [264, 2, 1, "", "__str__"], [265, 2, 1, "", "filter_columns"], [266, 2, 1, "", "filter_ids"], [267, 2, 1, "", "get_column"], [268, 2, 1, "", "get_ids"], [269, 2, 1, "", "load"], [270, 2, 1, "", "merge"], [271, 2, 1, "", "read"], [272, 2, 1, "", "save"], [273, 2, 1, "", "to_dataframe"], [274, 2, 1, "", "write"]], "skbio.sequence": [[275, 1, 1, "", "DNA"], [334, 1, 1, "", "GeneticCode"], [346, 1, 1, "", "GrammaredSequence"], [397, 1, 1, "", "Protein"], [450, 1, 1, "", "RNA"], [509, 1, 1, "", "Sequence"], [547, 1, 1, "", "SubstitutionMatrix"], [575, 0, 0, "-", "distance"]], "skbio.sequence.DNA": [[276, 2, 1, "", "__bool__"], [277, 2, 1, "", "__contains__"], [278, 2, 1, "", "__copy__"], [279, 2, 1, "", "__deepcopy__"], [280, 2, 1, "", "__eq__"], [281, 2, 1, "", "__ge__"], [282, 2, 1, "", "__getitem__"], [283, 2, 1, "", "__getstate__"], [284, 2, 1, "", "__gt__"], [285, 2, 1, "", "__iter__"], [286, 2, 1, "", "__le__"], [287, 2, 1, "", "__len__"], [288, 2, 1, "", "__lt__"], [289, 2, 1, "", "__ne__"], [290, 2, 1, "", "__reversed__"], [291, 2, 1, "", "__str__"], [292, 2, 1, "", "complement"], [293, 2, 1, "", "concat"], [294, 2, 1, "", "count"], [295, 2, 1, "", "definites"], [296, 2, 1, "", "degap"], [297, 2, 1, "", "degenerates"], [298, 2, 1, "", "distance"], [299, 2, 1, "", "expand_degenerates"], [300, 2, 1, "", "find_motifs"], [301, 2, 1, "", "find_with_regex"], [302, 2, 1, "", "frequencies"], [303, 2, 1, "", "gaps"], [304, 2, 1, "", "gc_content"], [305, 2, 1, "", "gc_frequency"], [306, 2, 1, "", "has_definites"], [307, 2, 1, "", "has_degenerates"], [308, 2, 1, "", "has_gaps"], [309, 2, 1, "", "has_interval_metadata"], [310, 2, 1, "", "has_metadata"], [311, 2, 1, "", "has_nondegenerates"], [312, 2, 1, "", "has_positional_metadata"], [313, 2, 1, "", "index"], [314, 2, 1, "", "is_reverse_complement"], [315, 2, 1, "", "iter_contiguous"], [316, 2, 1, "", "iter_kmers"], [317, 2, 1, "", "kmer_frequencies"], [318, 2, 1, "", "lowercase"], [319, 2, 1, "", "match_frequency"], [320, 2, 1, "", "matches"], [321, 2, 1, "", "mismatch_frequency"], [322, 2, 1, "", "mismatches"], [323, 2, 1, "", "nondegenerates"], [324, 2, 1, "", "read"], [325, 2, 1, "", "replace"], [326, 2, 1, "", "reverse_complement"], [327, 2, 1, "", "to_definites"], [328, 2, 1, "", "to_indices"], [329, 2, 1, "", "to_regex"], [330, 2, 1, "", "transcribe"], [331, 2, 1, "", "translate"], [332, 2, 1, "", "translate_six_frames"], [333, 2, 1, "", "write"]], "skbio.sequence.GeneticCode": [[335, 2, 1, "", "__eq__"], [336, 2, 1, "", "__ge__"], [337, 2, 1, "", "__getstate__"], [338, 2, 1, "", "__gt__"], [339, 2, 1, "", "__le__"], [340, 2, 1, "", "__lt__"], [341, 2, 1, "", "__ne__"], [342, 2, 1, "", "__str__"], [343, 2, 1, "", "from_ncbi"], [344, 2, 1, "", "translate"], [345, 2, 1, "", "translate_six_frames"]], "skbio.sequence.GrammaredSequence": [[347, 2, 1, "", "__bool__"], [348, 2, 1, "", "__contains__"], [349, 2, 1, "", "__copy__"], [350, 2, 1, "", "__deepcopy__"], [351, 2, 1, "", "__eq__"], [352, 2, 1, "", "__ge__"], [353, 2, 1, "", "__getitem__"], [354, 2, 1, "", "__getstate__"], [355, 2, 1, "", "__gt__"], [356, 2, 1, "", "__iter__"], [357, 2, 1, "", "__le__"], [358, 2, 1, "", "__len__"], [359, 2, 1, "", "__lt__"], [360, 2, 1, "", "__ne__"], [361, 2, 1, "", "__reversed__"], [362, 2, 1, "", "__str__"], [363, 2, 1, "", "concat"], [364, 2, 1, "", "count"], [365, 2, 1, "", "definites"], [366, 2, 1, "", "degap"], [367, 2, 1, "", "degenerates"], [368, 2, 1, "", "distance"], [369, 2, 1, "", "expand_degenerates"], [370, 2, 1, "", "find_motifs"], [371, 2, 1, "", "find_with_regex"], [372, 2, 1, "", "frequencies"], [373, 2, 1, "", "gaps"], [374, 2, 1, "", "has_definites"], [375, 2, 1, "", "has_degenerates"], [376, 2, 1, "", "has_gaps"], [377, 2, 1, "", "has_interval_metadata"], [378, 2, 1, "", "has_metadata"], [379, 2, 1, "", "has_nondegenerates"], [380, 2, 1, "", "has_positional_metadata"], [381, 2, 1, "", "index"], [382, 2, 1, "", "iter_contiguous"], [383, 2, 1, "", "iter_kmers"], [384, 2, 1, "", "kmer_frequencies"], [385, 2, 1, "", "lowercase"], [386, 2, 1, "", "match_frequency"], [387, 2, 1, "", "matches"], [388, 2, 1, "", "mismatch_frequency"], [389, 2, 1, "", "mismatches"], [390, 2, 1, "", "nondegenerates"], [391, 2, 1, "", "read"], [392, 2, 1, "", "replace"], [393, 2, 1, "", "to_definites"], [394, 2, 1, "", "to_indices"], [395, 2, 1, "", "to_regex"], [396, 2, 1, "", "write"]], "skbio.sequence.Protein": [[398, 2, 1, "", "__bool__"], [399, 2, 1, "", "__contains__"], [400, 2, 1, "", "__copy__"], [401, 2, 1, "", "__deepcopy__"], [402, 2, 1, "", "__eq__"], [403, 2, 1, "", "__ge__"], [404, 2, 1, "", "__getitem__"], [405, 2, 1, "", "__getstate__"], [406, 2, 1, "", "__gt__"], [407, 2, 1, "", "__iter__"], [408, 2, 1, "", "__le__"], [409, 2, 1, "", "__len__"], [410, 2, 1, "", "__lt__"], [411, 2, 1, "", "__ne__"], [412, 2, 1, "", "__reversed__"], [413, 2, 1, "", "__str__"], [414, 2, 1, "", "concat"], [415, 2, 1, "", "count"], [416, 2, 1, "", "definites"], [417, 2, 1, "", "degap"], [418, 2, 1, "", "degenerates"], [419, 2, 1, "", "distance"], [420, 2, 1, "", "expand_degenerates"], [421, 2, 1, "", "find_motifs"], [422, 2, 1, "", "find_with_regex"], [423, 2, 1, "", "frequencies"], [424, 2, 1, "", "gaps"], [425, 2, 1, "", "has_definites"], [426, 2, 1, "", "has_degenerates"], [427, 2, 1, "", "has_gaps"], [428, 2, 1, "", "has_interval_metadata"], [429, 2, 1, "", "has_metadata"], [430, 2, 1, "", "has_nondegenerates"], [431, 2, 1, "", "has_positional_metadata"], [432, 2, 1, "", "has_stops"], [433, 2, 1, "", "index"], [434, 2, 1, "", "iter_contiguous"], [435, 2, 1, "", "iter_kmers"], [436, 2, 1, "", "kmer_frequencies"], [437, 2, 1, "", "lowercase"], [438, 2, 1, "", "match_frequency"], [439, 2, 1, "", "matches"], [440, 2, 1, "", "mismatch_frequency"], [441, 2, 1, "", "mismatches"], [442, 2, 1, "", "nondegenerates"], [443, 2, 1, "", "read"], [444, 2, 1, "", "replace"], [445, 2, 1, "", "stops"], [446, 2, 1, "", "to_definites"], [447, 2, 1, "", "to_indices"], [448, 2, 1, "", "to_regex"], [449, 2, 1, "", "write"]], "skbio.sequence.RNA": [[451, 2, 1, "", "__bool__"], [452, 2, 1, "", "__contains__"], [453, 2, 1, "", "__copy__"], [454, 2, 1, "", "__deepcopy__"], [455, 2, 1, "", "__eq__"], [456, 2, 1, "", "__ge__"], [457, 2, 1, "", "__getitem__"], [458, 2, 1, "", "__getstate__"], [459, 2, 1, "", "__gt__"], [460, 2, 1, "", "__iter__"], [461, 2, 1, "", "__le__"], [462, 2, 1, "", "__len__"], [463, 2, 1, "", "__lt__"], [464, 2, 1, "", "__ne__"], [465, 2, 1, "", "__reversed__"], [466, 2, 1, "", "__str__"], [467, 2, 1, "", "complement"], [468, 2, 1, "", "concat"], [469, 2, 1, "", "count"], [470, 2, 1, "", "definites"], [471, 2, 1, "", "degap"], [472, 2, 1, "", "degenerates"], [473, 2, 1, "", "distance"], [474, 2, 1, "", "expand_degenerates"], [475, 2, 1, "", "find_motifs"], [476, 2, 1, "", "find_with_regex"], [477, 2, 1, "", "frequencies"], [478, 2, 1, "", "gaps"], [479, 2, 1, "", "gc_content"], [480, 2, 1, "", "gc_frequency"], [481, 2, 1, "", "has_definites"], [482, 2, 1, "", "has_degenerates"], [483, 2, 1, "", "has_gaps"], [484, 2, 1, "", "has_interval_metadata"], [485, 2, 1, "", "has_metadata"], [486, 2, 1, "", "has_nondegenerates"], [487, 2, 1, "", "has_positional_metadata"], [488, 2, 1, "", "index"], [489, 2, 1, "", "is_reverse_complement"], [490, 2, 1, "", "iter_contiguous"], [491, 2, 1, "", "iter_kmers"], [492, 2, 1, "", "kmer_frequencies"], [493, 2, 1, "", "lowercase"], [494, 2, 1, "", "match_frequency"], [495, 2, 1, "", "matches"], [496, 2, 1, "", "mismatch_frequency"], [497, 2, 1, "", "mismatches"], [498, 2, 1, "", "nondegenerates"], [499, 2, 1, "", "read"], [500, 2, 1, "", "replace"], [501, 2, 1, "", "reverse_complement"], [502, 2, 1, "", "reverse_transcribe"], [503, 2, 1, "", "to_definites"], [504, 2, 1, "", "to_indices"], [505, 2, 1, "", "to_regex"], [506, 2, 1, "", "translate"], [507, 2, 1, "", "translate_six_frames"], [508, 2, 1, "", "write"]], "skbio.sequence.Sequence": [[510, 2, 1, "", "__bool__"], [511, 2, 1, "", "__contains__"], [512, 2, 1, "", "__copy__"], [513, 2, 1, "", "__deepcopy__"], [514, 2, 1, "", "__eq__"], [515, 2, 1, "", "__ge__"], [516, 2, 1, "", "__getitem__"], [517, 2, 1, "", "__getstate__"], [518, 2, 1, "", "__gt__"], [519, 2, 1, "", "__iter__"], [520, 2, 1, "", "__le__"], [521, 2, 1, "", "__len__"], [522, 2, 1, "", "__lt__"], [523, 2, 1, "", "__ne__"], [524, 2, 1, "", "__reversed__"], [525, 2, 1, "", "__str__"], [526, 2, 1, "", "concat"], [527, 2, 1, "", "count"], [528, 2, 1, "", "distance"], [529, 2, 1, "", "find_with_regex"], [530, 2, 1, "", "frequencies"], [531, 2, 1, "", "has_interval_metadata"], [532, 2, 1, "", "has_metadata"], [533, 2, 1, "", "has_positional_metadata"], [534, 2, 1, "", "index"], [535, 2, 1, "", "iter_contiguous"], [536, 2, 1, "", "iter_kmers"], [537, 2, 1, "", "kmer_frequencies"], [538, 2, 1, "", "lowercase"], [539, 2, 1, "", "match_frequency"], [540, 2, 1, "", "matches"], [541, 2, 1, "", "mismatch_frequency"], [542, 2, 1, "", "mismatches"], [543, 2, 1, "", "read"], [544, 2, 1, "", "replace"], [545, 2, 1, "", "to_indices"], [546, 2, 1, "", "write"]], "skbio.sequence.SubstitutionMatrix": [[548, 2, 1, "", "__contains__"], [549, 2, 1, "", "__eq__"], [550, 2, 1, "", "__ge__"], [551, 2, 1, "", "__getitem__"], [552, 2, 1, "", "__getstate__"], [553, 2, 1, "", "__gt__"], [554, 2, 1, "", "__le__"], [555, 2, 1, "", "__lt__"], [556, 2, 1, "", "__ne__"], [557, 2, 1, "", "__str__"], [558, 2, 1, "", "between"], [559, 2, 1, "", "by_name"], [560, 2, 1, "", "copy"], [561, 2, 1, "", "filter"], [562, 2, 1, "", "from_dict"], [563, 2, 1, "", "from_iterable"], [564, 2, 1, "", "get_names"], [565, 2, 1, "", "identity"], [566, 2, 1, "", "index"], [567, 2, 1, "", "plot"], [568, 2, 1, "", "read"], [569, 2, 1, "", "redundant_form"], [570, 2, 1, "", "to_data_frame"], [571, 2, 1, "", "to_dict"], [572, 2, 1, "", "transpose"], [573, 2, 1, "", "within"], [574, 2, 1, "", "write"]], "skbio.sequence.distance": [[576, 3, 1, "", "hamming"], [577, 3, 1, "", "kmer_distance"]], "skbio.stats": [[578, 0, 0, "-", "composition"], [599, 0, 0, "-", "distance"], [656, 0, 0, "-", "evolve"], [658, 0, 0, "-", "gradient"], [747, 3, 1, "", "isubsample"], [748, 0, 0, "-", "ordination"], [773, 0, 0, "-", "power"], [778, 3, 1, "", "subsample_counts"]], "skbio.stats.composition": [[579, 3, 1, "", "alr"], [580, 3, 1, "", "alr_inv"], [581, 3, 1, "", "ancom"], [582, 3, 1, "", "centralize"], [583, 3, 1, "", "closure"], [584, 3, 1, "", "clr"], [585, 3, 1, "", "clr_inv"], [586, 3, 1, "", "dirmult_ttest"], [587, 3, 1, "", "ilr"], [588, 3, 1, "", "ilr_inv"], [589, 3, 1, "", "inner"], [590, 3, 1, "", "multi_replace"], [591, 3, 1, "", "multiplicative_replacement"], [592, 3, 1, "", "pairwise_vlr"], [593, 3, 1, "", "perturb"], [594, 3, 1, "", "perturb_inv"], [595, 3, 1, "", "power"], [596, 3, 1, "", "sbp_basis"], [597, 3, 1, "", "tree_basis"], [598, 3, 1, "", "vlr"]], "skbio.stats.distance": [[600, 1, 1, "", "DissimilarityMatrix"], [623, 1, 1, "", "DistanceMatrix"], [649, 3, 1, "", "anosim"], [650, 3, 1, "", "bioenv"], [651, 3, 1, "", "mantel"], [652, 3, 1, "", "permanova"], [653, 3, 1, "", "permdisp"], [654, 3, 1, "", "pwmantel"], [655, 3, 1, "", "randdm"]], "skbio.stats.distance.DissimilarityMatrix": [[601, 2, 1, "", "__contains__"], [602, 2, 1, "", "__eq__"], [603, 2, 1, "", "__ge__"], [604, 2, 1, "", "__getitem__"], [605, 2, 1, "", "__getstate__"], [606, 2, 1, "", "__gt__"], [607, 2, 1, "", "__le__"], [608, 2, 1, "", "__lt__"], [609, 2, 1, "", "__ne__"], [610, 2, 1, "", "__str__"], [611, 2, 1, "", "between"], [612, 2, 1, "", "copy"], [613, 2, 1, "", "filter"], [614, 2, 1, "", "from_iterable"], [615, 2, 1, "", "index"], [616, 2, 1, "", "plot"], [617, 2, 1, "", "read"], [618, 2, 1, "", "redundant_form"], [619, 2, 1, "", "to_data_frame"], [620, 2, 1, "", "transpose"], [621, 2, 1, "", "within"], [622, 2, 1, "", "write"]], "skbio.stats.distance.DistanceMatrix": [[624, 2, 1, "", "__contains__"], [625, 2, 1, "", "__eq__"], [626, 2, 1, "", "__ge__"], [627, 2, 1, "", "__getitem__"], [628, 2, 1, "", "__getstate__"], [629, 2, 1, "", "__gt__"], [630, 2, 1, "", "__le__"], [631, 2, 1, "", "__lt__"], [632, 2, 1, "", "__ne__"], [633, 2, 1, "", "__str__"], [634, 2, 1, "", "between"], [635, 2, 1, "", "condensed_form"], [636, 2, 1, "", "copy"], [637, 2, 1, "", "filter"], [638, 2, 1, "", "from_iterable"], [639, 2, 1, "", "index"], [640, 2, 1, "", "permute"], [641, 2, 1, "", "plot"], [642, 2, 1, "", "read"], [643, 2, 1, "", "redundant_form"], [644, 2, 1, "", "to_data_frame"], [645, 2, 1, "", "to_series"], [646, 2, 1, "", "transpose"], [647, 2, 1, "", "within"], [648, 2, 1, "", "write"]], "skbio.stats.evolve": [[657, 3, 1, "", "hommola_cospeciation"]], "skbio.stats.gradient": [[659, 1, 1, "", "AverageGradientANOVA"], [670, 1, 1, "", "CategoryResults"], [681, 1, 1, "", "FirstDifferenceGradientANOVA"], [692, 1, 1, "", "GradientANOVA"], [703, 1, 1, "", "GradientANOVAResults"], [714, 1, 1, "", "GroupResults"], [725, 1, 1, "", "TrajectoryGradientANOVA"], [736, 1, 1, "", "WindowDifferenceGradientANOVA"]], "skbio.stats.gradient.AverageGradientANOVA": [[660, 2, 1, "", "__eq__"], [661, 2, 1, "", "__ge__"], [662, 2, 1, "", "__getstate__"], [663, 2, 1, "", "__gt__"], [664, 2, 1, "", "__hash__"], [665, 2, 1, "", "__le__"], [666, 2, 1, "", "__lt__"], [667, 2, 1, "", "__ne__"], [668, 2, 1, "", "__str__"], [669, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.CategoryResults": [[671, 2, 1, "", "__eq__"], [672, 2, 1, "", "__ge__"], [673, 2, 1, "", "__getstate__"], [674, 2, 1, "", "__gt__"], [675, 2, 1, "", "__hash__"], [676, 2, 1, "", "__le__"], [677, 2, 1, "", "__lt__"], [678, 2, 1, "", "__ne__"], [679, 2, 1, "", "__str__"], [680, 2, 1, "", "to_files"]], "skbio.stats.gradient.FirstDifferenceGradientANOVA": [[682, 2, 1, "", "__eq__"], [683, 2, 1, "", "__ge__"], [684, 2, 1, "", "__getstate__"], [685, 2, 1, "", "__gt__"], [686, 2, 1, "", "__hash__"], [687, 2, 1, "", "__le__"], [688, 2, 1, "", "__lt__"], [689, 2, 1, "", "__ne__"], [690, 2, 1, "", "__str__"], [691, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVA": [[693, 2, 1, "", "__eq__"], [694, 2, 1, "", "__ge__"], [695, 2, 1, "", "__getstate__"], [696, 2, 1, "", "__gt__"], [697, 2, 1, "", "__hash__"], [698, 2, 1, "", "__le__"], [699, 2, 1, "", "__lt__"], [700, 2, 1, "", "__ne__"], [701, 2, 1, "", "__str__"], [702, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.GradientANOVAResults": [[704, 2, 1, "", "__eq__"], [705, 2, 1, "", "__ge__"], [706, 2, 1, "", "__getstate__"], [707, 2, 1, "", "__gt__"], [708, 2, 1, "", "__hash__"], [709, 2, 1, "", "__le__"], [710, 2, 1, "", "__lt__"], [711, 2, 1, "", "__ne__"], [712, 2, 1, "", "__str__"], [713, 2, 1, "", "to_files"]], "skbio.stats.gradient.GroupResults": [[715, 2, 1, "", "__eq__"], [716, 2, 1, "", "__ge__"], [717, 2, 1, "", "__getstate__"], [718, 2, 1, "", "__gt__"], [719, 2, 1, "", "__hash__"], [720, 2, 1, "", "__le__"], [721, 2, 1, "", "__lt__"], [722, 2, 1, "", "__ne__"], [723, 2, 1, "", "__str__"], [724, 2, 1, "", "to_files"]], "skbio.stats.gradient.TrajectoryGradientANOVA": [[726, 2, 1, "", "__eq__"], [727, 2, 1, "", "__ge__"], [728, 2, 1, "", "__getstate__"], [729, 2, 1, "", "__gt__"], [730, 2, 1, "", "__hash__"], [731, 2, 1, "", "__le__"], [732, 2, 1, "", "__lt__"], [733, 2, 1, "", "__ne__"], [734, 2, 1, "", "__str__"], [735, 2, 1, "", "get_trajectories"]], "skbio.stats.gradient.WindowDifferenceGradientANOVA": [[737, 2, 1, "", "__eq__"], [738, 2, 1, "", "__ge__"], [739, 2, 1, "", "__getstate__"], [740, 2, 1, "", "__gt__"], [741, 2, 1, "", "__hash__"], [742, 2, 1, "", "__le__"], [743, 2, 1, "", "__lt__"], [744, 2, 1, "", "__ne__"], [745, 2, 1, "", "__str__"], [746, 2, 1, "", "get_trajectories"]], "skbio.stats.ordination": [[749, 1, 1, "", "OrdinationResults"], [762, 3, 1, "", "ca"], [763, 3, 1, "", "cca"], [764, 3, 1, "", "corr"], [765, 3, 1, "", "e_matrix"], [766, 3, 1, "", "f_matrix"], [767, 3, 1, "", "mean_and_std"], [768, 3, 1, "", "pcoa"], [769, 3, 1, "", "pcoa_biplot"], [770, 3, 1, "", "rda"], [771, 3, 1, "", "scale"], [772, 3, 1, "", "svd_rank"]], "skbio.stats.ordination.OrdinationResults": [[750, 2, 1, "", "__eq__"], [751, 2, 1, "", "__ge__"], [752, 2, 1, "", "__getstate__"], [753, 2, 1, "", "__gt__"], [754, 2, 1, "", "__hash__"], [755, 2, 1, "", "__le__"], [756, 2, 1, "", "__lt__"], [757, 2, 1, "", "__ne__"], [758, 2, 1, "", "__str__"], [759, 2, 1, "", "plot"], [760, 2, 1, "", "read"], [761, 2, 1, "", "write"]], "skbio.stats.power": [[774, 3, 1, "", "confidence_bound"], [775, 3, 1, "", "paired_subsamples"], [776, 3, 1, "", "subsample_paired_power"], [777, 3, 1, "", "subsample_power"]], "skbio.table": [[779, 1, 1, "", "Table"], [846, 4, 1, "", "example_table"]], "skbio.table.Table": [[780, 2, 1, "", "__eq__"], [781, 2, 1, "", "__ge__"], [782, 2, 1, "", "__getitem__"], [783, 2, 1, "", "__getstate__"], [784, 2, 1, "", "__gt__"], [785, 2, 1, "", "__iter__"], [786, 2, 1, "", "__le__"], [787, 2, 1, "", "__lt__"], [788, 2, 1, "", "__ne__"], [789, 2, 1, "", "__str__"], [790, 2, 1, "", "add_group_metadata"], [791, 2, 1, "", "add_metadata"], [792, 2, 1, "", "align_to"], [793, 2, 1, "", "align_to_dataframe"], [794, 2, 1, "", "align_tree"], [795, 2, 1, "", "collapse"], [796, 2, 1, "", "concat"], [797, 2, 1, "", "copy"], [798, 2, 1, "", "data"], [799, 2, 1, "", "del_metadata"], [800, 2, 1, "", "delimited_self"], [801, 2, 1, "", "descriptive_equality"], [802, 2, 1, "", "exists"], [803, 2, 1, "", "filter"], [804, 2, 1, "", "from_adjacency"], [805, 2, 1, "", "from_hdf5"], [806, 2, 1, "", "from_json"], [807, 2, 1, "", "from_tsv"], [808, 2, 1, "", "get_table_density"], [809, 2, 1, "", "get_value_by_ids"], [810, 2, 1, "", "group_metadata"], [811, 2, 1, "", "head"], [812, 2, 1, "", "ids"], [813, 2, 1, "", "index"], [814, 2, 1, "", "is_empty"], [815, 2, 1, "", "iter"], [816, 2, 1, "", "iter_data"], [817, 2, 1, "", "iter_pairwise"], [818, 2, 1, "", "length"], [819, 2, 1, "", "max"], [820, 2, 1, "", "merge"], [821, 2, 1, "", "metadata"], [822, 2, 1, "", "metadata_to_dataframe"], [823, 2, 1, "", "min"], [824, 2, 1, "", "nonzero"], [825, 2, 1, "", "nonzero_counts"], [826, 2, 1, "", "norm"], [827, 2, 1, "", "pa"], [828, 2, 1, "", "partition"], [829, 2, 1, "", "rankdata"], [830, 2, 1, "", "read"], [831, 2, 1, "", "reduce"], [832, 2, 1, "", "remove_empty"], [833, 2, 1, "", "sort"], [834, 2, 1, "", "sort_order"], [835, 2, 1, "", "subsample"], [836, 2, 1, "", "sum"], [837, 2, 1, "", "to_anndata"], [838, 2, 1, "", "to_dataframe"], [839, 2, 1, "", "to_hdf5"], [840, 2, 1, "", "to_json"], [841, 2, 1, "", "to_tsv"], [842, 2, 1, "", "transform"], [843, 2, 1, "", "transpose"], [844, 2, 1, "", "update_ids"], [845, 2, 1, "", "write"]], "skbio.tree": [[847, 1, 1, "", "TreeNode"], [926, 3, 1, "", "majority_rule"], [927, 3, 1, "", "nj"]], "skbio.tree.TreeNode": [[848, 2, 1, "", "__copy__"], [849, 2, 1, "", "__deepcopy__"], [850, 2, 1, "", "__eq__"], [851, 2, 1, "", "__ge__"], [852, 2, 1, "", "__getitem__"], [853, 2, 1, "", "__getstate__"], [854, 2, 1, "", "__gt__"], [855, 2, 1, "", "__hash__"], [856, 2, 1, "", "__iter__"], [857, 2, 1, "", "__le__"], [858, 2, 1, "", "__len__"], [859, 2, 1, "", "__lt__"], [860, 2, 1, "", "__ne__"], [861, 2, 1, "", "__str__"], [862, 2, 1, "", "accumulate_to_ancestor"], [863, 2, 1, "", "ancestors"], [864, 2, 1, "", "append"], [865, 2, 1, "", "ascii_art"], [866, 2, 1, "", "assign_ids"], [867, 2, 1, "", "assign_supports"], [868, 2, 1, "", "bifurcate"], [869, 2, 1, "", "cache_attr"], [870, 2, 1, "", "compare_rfd"], [871, 2, 1, "", "compare_subsets"], [872, 2, 1, "", "compare_tip_distances"], [873, 2, 1, "", "copy"], [874, 2, 1, "", "count"], [875, 2, 1, "", "create_caches"], [876, 2, 1, "", "deepcopy"], [877, 2, 1, "", "descending_branch_length"], [878, 2, 1, "", "distance"], [879, 2, 1, "", "extend"], [880, 2, 1, "", "find"], [881, 2, 1, "", "find_all"], [882, 2, 1, "", "find_by_func"], [883, 2, 1, "", "find_by_id"], [884, 2, 1, "", "from_linkage_matrix"], [885, 2, 1, "", "from_taxdump"], [886, 2, 1, "", "from_taxonomy"], [887, 2, 1, "", "get_max_distance"], [888, 2, 1, "", "has_children"], [889, 2, 1, "", "index_tree"], [890, 2, 1, "", "invalidate_caches"], [891, 2, 1, "", "is_root"], [892, 2, 1, "", "is_tip"], [893, 2, 1, "", "lca"], [894, 2, 1, "", "levelorder"], [895, 2, 1, "", "lowest_common_ancestor"], [896, 2, 1, "", "neighbors"], [897, 2, 1, "", "non_tips"], [898, 2, 1, "", "observed_node_counts"], [899, 2, 1, "", "pop"], [900, 2, 1, "", "postorder"], [901, 2, 1, "", "pre_and_postorder"], [902, 2, 1, "", "preorder"], [903, 2, 1, "", "prune"], [904, 2, 1, "", "read"], [905, 2, 1, "", "remove"], [906, 2, 1, "", "remove_deleted"], [907, 2, 1, "", "root"], [908, 2, 1, "", "root_at"], [909, 2, 1, "", "root_at_midpoint"], [910, 2, 1, "", "shear"], [911, 2, 1, "", "shuffle"], [912, 2, 1, "", "siblings"], [913, 2, 1, "", "subset"], [914, 2, 1, "", "subsets"], [915, 2, 1, "", "subtree"], [916, 2, 1, "", "tip_tip_distances"], [917, 2, 1, "", "tips"], [918, 2, 1, "", "to_array"], [919, 2, 1, "", "to_taxonomy"], [920, 2, 1, "", "traverse"], [921, 2, 1, "", "unpack"], [922, 2, 1, "", "unpack_by_func"], [923, 2, 1, "", "unrooted_copy"], [924, 2, 1, "", "unrooted_deepcopy"], [925, 2, 1, "", "write"]], "skbio.util": [[928, 5, 1, "", "EfficiencyWarning"], [929, 5, 1, "", "RepresentationWarning"], [930, 3, 1, "", "assert_data_frame_almost_equal"], [931, 3, 1, "", "assert_ordination_results_equal"], [932, 3, 1, "", "cardinal_to_ordinal"], [933, 1, 1, "", "classproperty"], [950, 3, 1, "", "find_duplicates"], [951, 3, 1, "", "get_data_path"], [952, 3, 1, "", "safe_md5"]], "skbio.util.classproperty": [[934, 2, 1, "", "__delete__"], [935, 2, 1, "", "__eq__"], [936, 2, 1, "", "__ge__"], [937, 2, 1, "", "__get__"], [938, 2, 1, "", "__getstate__"], [939, 2, 1, "", "__gt__"], [940, 2, 1, "", "__hash__"], [941, 2, 1, "", "__le__"], [942, 2, 1, "", "__lt__"], [943, 2, 1, "", "__ne__"], [944, 2, 1, "", "__set__"], [945, 2, 1, "", "__set_name__"], [946, 2, 1, "", "__str__"], [947, 2, 1, "", "deleter"], [948, 2, 1, "", "getter"], [949, 2, 1, "", "setter"]], "skbio.workflow": [[953, 1, 1, "", "Workflow"], [965, 1, 1, "", "method"], [976, 1, 1, "", "requires"]], "skbio.workflow.Workflow": [[954, 2, 1, "", "__call__"], [955, 2, 1, "", "__eq__"], [956, 2, 1, "", "__ge__"], [957, 2, 1, "", "__getstate__"], [958, 2, 1, "", "__gt__"], [959, 2, 1, "", "__hash__"], [960, 2, 1, "", "__le__"], [961, 2, 1, "", "__lt__"], [962, 2, 1, "", "__ne__"], [963, 2, 1, "", "__str__"], [964, 2, 1, "", "initialize_state"]], "skbio.workflow.method": [[966, 2, 1, "", "__call__"], [967, 2, 1, "", "__eq__"], [968, 2, 1, "", "__ge__"], [969, 2, 1, "", "__getstate__"], [970, 2, 1, "", "__gt__"], [971, 2, 1, "", "__hash__"], [972, 2, 1, "", "__le__"], [973, 2, 1, "", "__lt__"], [974, 2, 1, "", "__ne__"], [975, 2, 1, "", "__str__"]], "skbio.workflow.requires": [[977, 2, 1, "", "__call__"], [978, 2, 1, "", "__eq__"], [979, 2, 1, "", "__ge__"], [980, 2, 1, "", "__getstate__"], [981, 2, 1, "", "__gt__"], [982, 2, 1, "", "__hash__"], [983, 2, 1, "", "__le__"], [984, 2, 1, "", "__lt__"], [985, 2, 1, "", "__ne__"], [986, 2, 1, "", "__str__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:exception"}, "terms": {"": [0, 1, 16, 28, 45, 46, 47, 48, 51, 52, 53, 54, 56, 60, 61, 62, 65, 69, 71, 74, 76, 77, 78, 79, 81, 82, 86, 88, 89, 90, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 110, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 189, 190, 191, 201, 213, 236, 237, 254, 255, 256, 268, 269, 273, 275, 277, 280, 282, 285, 287, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 330, 331, 332, 334, 335, 341, 344, 345, 346, 348, 351, 353, 356, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 397, 399, 402, 404, 407, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 450, 452, 455, 457, 460, 462, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 506, 507, 509, 511, 514, 516, 519, 521, 523, 524, 525, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 551, 558, 559, 561, 573, 576, 579, 580, 581, 584, 585, 587, 588, 592, 596, 598, 600, 604, 611, 613, 621, 627, 634, 637, 647, 649, 650, 651, 652, 653, 680, 713, 724, 747, 759, 762, 763, 764, 768, 770, 772, 773, 775, 776, 777, 795, 803, 811, 816, 831, 834, 869, 877, 889, 905, 926, 976, 988, 990, 993, 995], "0": [0, 1, 14, 15, 16, 28, 40, 45, 46, 48, 50, 53, 54, 56, 66, 67, 69, 74, 78, 79, 80, 83, 84, 92, 94, 95, 105, 106, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 170, 213, 275, 276, 280, 282, 292, 293, 294, 296, 298, 299, 300, 302, 304, 305, 311, 317, 319, 321, 323, 326, 328, 329, 330, 331, 332, 334, 344, 345, 346, 347, 351, 353, 363, 364, 366, 368, 369, 370, 372, 379, 384, 386, 388, 390, 394, 395, 397, 398, 402, 404, 414, 415, 417, 419, 420, 421, 423, 430, 436, 438, 440, 442, 447, 448, 450, 451, 455, 457, 467, 468, 469, 471, 473, 474, 475, 477, 479, 480, 486, 492, 494, 496, 498, 501, 502, 504, 505, 506, 507, 509, 510, 514, 516, 526, 527, 528, 530, 537, 539, 541, 545, 547, 558, 559, 562, 567, 570, 573, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 611, 616, 619, 621, 634, 641, 644, 645, 647, 649, 650, 651, 653, 654, 655, 657, 658, 692, 747, 748, 759, 763, 767, 768, 771, 773, 774, 776, 777, 778, 779, 782, 792, 793, 794, 795, 796, 798, 802, 803, 806, 809, 810, 811, 812, 813, 815, 816, 820, 821, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 846, 848, 849, 862, 867, 870, 871, 872, 873, 876, 877, 878, 881, 887, 899, 905, 909, 910, 911, 916, 918, 921, 922, 926, 927, 932, 965, 988, 990, 993, 995], "00": [1, 114, 115, 118, 121, 124, 293, 330, 363, 414, 468, 502, 526, 927, 990], "000": 108, "000000": [1, 927], "000000e": [114, 115], "000123": 127, "000133446": 872, "000532": 748, "001": [581, 773], "001562": 748, "00193863362662502": 776, "003": 777, "0031": 658, "005": 777, "007022633956606": 658, "007446": 586, "0082138": [16, 66], "01": [124, 773], "0118478282382": 658, "0123": 127, "0123456789": 191, "012631": 748, "015": [592, 598], "016": 773, "02": [124, 129, 581], "020131": 586, "0220": [592, 598], "0225": 658, "029747": 748, "03": [124, 653], "0301": 658, "032": 773, "0341": 658, "036910": 586, "0378111988903307": 116, "03t14": 806, "04": [124, 773], "043888": 586, "044": 773, "044805": 748, "048219": 586, "05": [1, 124, 581, 586, 657, 773, 774, 776, 777, 930], "051": 773, "056": 777, "06": [124, 806], "0625": 590, "0633": 658, "065613": 586, "068310": 586, "07": 124, "0721": 658, "074": 777, "08": [124, 127, 773, 776], "083071": 128, "0874": 658, "088": 776, "0898": 658, "09": 124, "09392265": 1, "09861229": 579, "0i": 581, "0th": [822, 932], "1": [0, 1, 2, 15, 16, 28, 33, 45, 46, 47, 48, 50, 53, 54, 56, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 141, 142, 191, 201, 213, 216, 218, 275, 280, 282, 292, 293, 294, 300, 302, 315, 316, 317, 321, 326, 327, 328, 331, 332, 334, 335, 342, 343, 344, 345, 346, 351, 353, 363, 364, 370, 372, 382, 383, 384, 388, 393, 394, 397, 402, 404, 414, 415, 421, 423, 434, 435, 436, 440, 446, 447, 450, 455, 457, 467, 468, 469, 475, 477, 490, 491, 492, 496, 501, 503, 504, 506, 507, 509, 514, 516, 526, 527, 530, 535, 536, 537, 541, 545, 547, 558, 559, 562, 565, 567, 569, 570, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 611, 616, 618, 619, 621, 623, 634, 635, 641, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 657, 692, 714, 736, 747, 748, 759, 762, 763, 767, 770, 771, 773, 775, 776, 777, 778, 779, 792, 793, 794, 795, 796, 799, 802, 803, 805, 806, 809, 810, 811, 812, 813, 815, 816, 820, 821, 823, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 839, 841, 842, 844, 846, 862, 867, 870, 872, 877, 878, 881, 885, 886, 887, 899, 909, 910, 911, 916, 918, 919, 921, 922, 926, 927, 932, 990, 993, 995], "10": [16, 47, 66, 69, 84, 85, 115, 117, 118, 119, 120, 121, 123, 124, 125, 191, 201, 216, 275, 300, 346, 370, 397, 421, 450, 475, 509, 581, 586, 592, 598, 653, 748, 773, 776, 777, 782, 792, 795, 796, 800, 816, 820, 927, 995], "100": [1, 114, 115, 118, 121, 216, 581, 586, 777, 811, 835, 995], "1000": [216, 747], "1004": 658, "1004075": [592, 598], "100548": 748, "1007": [117, 592, 598], "101": 586, "10136628": 584, "102": 586, "103": 586, "104": [128, 586], "1048576": 952, "104937": 748, "1055": 658, "10596": 115, "108": 773, "10915": [62, 65, 559], "10919": [62, 65, 559], "1093": [119, 927], "10937312": 1, "11": [0, 16, 62, 65, 66, 72, 77, 78, 114, 117, 124, 126, 275, 301, 371, 422, 450, 476, 529, 581, 586, 592, 598, 658, 748, 763, 770, 773, 792, 795, 796, 816, 927], "110": 586, "1115": 87, "112": 829, "1126": 87, "1131255": 952, "114": 114, "1154": 658, "116": 658, "1167": 763, "117": 649, "11704769": 587, "117693430600200007": 78, "1179": 763, "11th": 125, "12": [1, 117, 124, 509, 581, 586, 592, 773, 795, 796, 829, 990], "120": [121, 586], "120492524415": 993, "1215": 658, "123": [127, 747], "12345": [118, 509], "126": 119, "127": 776, "128": 586, "13": [0, 73, 95, 99, 115, 118, 124, 126, 275, 346, 397, 450, 509, 581, 586, 748, 795, 796, 839], "131": [95, 99, 870], "131567": 129, "1345": 70, "1347": 70, "135": [115, 592, 598], "1371": [16, 66, 592, 598], "139": 128, "14": [1, 73, 83, 94, 117, 119, 124, 296, 300, 366, 370, 417, 421, 471, 475, 581, 586, 658, 777, 796, 878, 916], "14092516": 588, "141": [94, 870], "142857": 654, "14285714": 594, "142857142857": 826, "143": 649, "1435": 118, "144": 99, "1457": 657, "1468": 657, "147": 63, "1495": 117, "149855": 118, "1499": 117, "15": [16, 62, 65, 83, 115, 124, 127, 658, 773, 776, 777, 796, 916], "1535": 867, "1542": [115, 867], "156": 80, "1566": 115, "157": 773, "1576": [105, 106], "15800534": 114, "1585": [105, 106], "16": [1, 76, 94, 116, 118, 119, 120, 124, 125, 292, 301, 326, 371, 422, 467, 476, 501, 529, 586, 759, 773, 777, 792, 796, 887, 916], "16025641": 1, "161": 114, "16247744": 582, "1627907": 1, "163": [74, 98, 99], "164998": 586, "165": 94, "168": [70, 776], "169": [105, 106], "17": [76, 78, 105, 106, 117, 124, 275, 450, 748, 776, 796], "170768970": 114, "172": [105, 106], "1740": 117, "17445763": 582, "1767": 119, "1771": 119, "1786181": 115, "18": [115, 124, 128, 649, 773, 990], "1800": 117, "1814": 66, "182343": 586, "1859": 117, "1875": 590, "18761279": 582, "19": [1, 117, 124, 773, 795], "1907511": 117, "1912": 80, "1913": 67, "192": 128, "19234468": 120, "193": 69, "194": 94, "1943": 79, "1948": 97, "1949": [74, 98, 99], "195": 63, "1953": 81, "1955": 80, "1956": 71, "1958": 86, "1966": [95, 99], "1967": [87, 651], "1968": 96, "1970": [60, 70], "1974": [82, 88], "1976": 83, "1978": 559, "1981": [63, 870, 926], "1983": 77, "1984": [72, 275, 346, 397, 450, 509], "1985": [118, 275, 346, 397, 450, 509], "1986": [118, 123, 125, 763], "1987": [90, 927], "199": 120, "1990": [114, 115, 117], "1991": 117, "1992": [62, 65, 69, 78, 94, 559, 599], "1993": [69, 649, 650], "1995": 763, "1997": [78, 128, 927], "1998": [83, 748, 762, 763, 765, 766, 768, 770], "1d": [50, 103, 275, 277, 282, 294, 295, 297, 298, 300, 301, 303, 313, 314, 315, 319, 320, 321, 322, 323, 325, 328, 348, 353, 364, 365, 367, 368, 370, 371, 373, 381, 382, 386, 387, 388, 389, 390, 392, 394, 397, 399, 404, 415, 416, 418, 419, 421, 422, 424, 433, 434, 438, 439, 440, 441, 442, 444, 445, 447, 450, 452, 457, 469, 470, 472, 473, 475, 476, 478, 488, 489, 490, 494, 495, 496, 497, 498, 500, 504, 509, 511, 516, 527, 528, 529, 534, 535, 539, 540, 541, 542, 544, 545], "1e": [115, 123, 930], "1e51ca3a5450c43524b9185c236cc5cc": 117, "1e9": 127, "1st": [40, 725, 932], "1x1": 125, "2": [0, 1, 16, 28, 33, 40, 45, 46, 47, 49, 50, 53, 54, 56, 60, 61, 62, 63, 64, 65, 69, 72, 74, 76, 78, 80, 83, 84, 85, 87, 88, 90, 94, 97, 98, 99, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 142, 201, 213, 216, 218, 256, 275, 292, 293, 294, 300, 301, 302, 305, 313, 315, 317, 326, 328, 332, 335, 344, 345, 363, 364, 370, 371, 372, 381, 382, 384, 394, 414, 415, 421, 422, 423, 433, 434, 436, 447, 467, 468, 469, 475, 476, 477, 480, 488, 490, 492, 501, 504, 507, 509, 526, 527, 529, 530, 534, 535, 537, 545, 547, 558, 559, 565, 567, 570, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 611, 616, 619, 621, 623, 634, 641, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 747, 748, 759, 762, 763, 765, 768, 770, 773, 775, 776, 777, 778, 779, 792, 793, 794, 795, 796, 799, 800, 803, 805, 806, 811, 818, 819, 820, 823, 826, 829, 835, 837, 838, 839, 842, 844, 846, 862, 867, 868, 870, 872, 877, 878, 883, 885, 886, 887, 910, 911, 916, 918, 919, 921, 922, 926, 927, 932, 988, 990, 993, 995], "20": [0, 124, 397, 581, 586, 759, 765, 773, 776, 777, 811], "200": [120, 586], "2000": [69, 777, 927], "2001": 652, "2002": [47, 78, 94, 102, 115, 118], "2003": [118, 578], "2004": 89, "2005": [105, 117], "2006": [78, 653, 927], "2007": [94, 105, 106], "2008": [118, 125], "2009": [119, 120, 657], "201": [69, 586], "2010": [78, 105, 106, 119], "2011": [84, 85, 94, 105, 106], "2012": [94, 120, 129, 651, 779, 846], "2013": [16, 66, 76, 94, 596, 759], "2014": [16, 66, 114, 125, 586, 596, 806], "2015": [47, 578, 581, 592, 598], "2016": [94, 592, 598], "2017": 867, "2018": 129, "202": 586, "2020": 129, "2022": 129, "2024": 127, "203": 586, "20309816": 658, "205": 650, "207": 94, "209": [117, 120, 651], "21": [117, 124, 581, 592, 598, 766, 777, 795, 811, 842], "210": 69, "2106": 94, "2107852473": 589, "2113": 94, "2130": 115, "21383822": 585, "215": [114, 115], "217": 69, "21712454": 759, "2186": 658, "219": [115, 117, 650], "22": [62, 65, 124, 129, 559, 581, 773, 811, 990], "220": 651, "22054469": 588, "2208": 658, "2214": 115, "224": 773, "226": 777, "227": [69, 118], "229": 773, "23": [1, 124, 127, 128, 343, 581, 795, 811, 927, 990], "23059566": 595, "23632778": 585, "2364": 658, "237": [81, 102], "238327": 748, "239": 926, "23e": 127, "24": [0, 115, 124, 559, 776, 806, 811], "24270353": 1, "245": 653, "246": [69, 102, 128], "24714631": 595, "25": [0, 1, 50, 63, 78, 83, 94, 105, 106, 108, 117, 123, 124, 298, 302, 304, 317, 321, 330, 334, 368, 372, 384, 388, 419, 423, 436, 440, 473, 477, 479, 492, 496, 502, 528, 530, 537, 541, 581, 593, 649, 650, 653, 658, 773, 776, 777, 826, 990], "2500": 777, "253": 653, "255": [16, 763], "256": [96, 773], "257": 96, "25737316": 595, "259": 128, "25th": 581, "26": [76, 115, 123, 581, 652, 657, 759], "260656459": 120, "26118259": 585, "262": 83, "264": 81, "26433692": 1, "26488486": 595, "265": 72, "27": [0, 78, 97, 105, 106, 115, 397, 592, 651], "270": 72, "272": 777, "2761": 658, "278": 78, "28": [0, 94, 124, 773], "28571429": 594, "28865141": 585, "289": 763, "29": [117, 119, 120], "293463": 586, "29597001": 658, "29672718": 588, "2_": 69, "2a": 125, "2b": 80, "2d": [16, 60, 61, 62, 63, 64, 65, 103, 107, 108, 111, 547, 562, 571, 589, 655, 764, 771], "2e": 127, "2f_2": 72, "2nd": [725, 815, 932], "2nf_2": 77, "2x2": [1, 122, 820, 826], "2x3": [802, 803, 809, 810, 812, 813, 815, 821, 827, 828, 831, 833, 834, 836, 841, 842, 844], "3": [1, 16, 28, 33, 45, 46, 48, 50, 53, 54, 56, 57, 60, 64, 69, 77, 78, 81, 86, 94, 97, 102, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 191, 201, 213, 218, 280, 282, 292, 293, 294, 299, 300, 316, 317, 319, 325, 326, 328, 331, 332, 344, 345, 351, 353, 363, 364, 369, 370, 383, 384, 386, 392, 394, 397, 402, 404, 414, 415, 420, 421, 435, 436, 438, 444, 447, 455, 457, 467, 468, 469, 474, 475, 491, 492, 494, 500, 501, 504, 506, 507, 509, 514, 516, 526, 527, 536, 537, 539, 544, 545, 558, 567, 570, 573, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 598, 600, 611, 616, 619, 621, 634, 641, 644, 645, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 681, 692, 725, 748, 749, 759, 762, 763, 768, 773, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 802, 803, 806, 809, 810, 811, 812, 813, 815, 816, 818, 820, 821, 823, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 846, 862, 872, 877, 878, 885, 886, 887, 910, 914, 916, 918, 919, 921, 922, 927, 932, 987, 990, 993, 995], "30": [0, 115, 120, 121, 124, 126, 776, 777, 816, 900], "3021": [275, 346, 397, 450, 509], "30216948": 582, "3030": [275, 346, 397, 450, 509], "30409883": 584, "30870431": 1, "30927835": 1, "31": 115, "312": 128, "314": 117, "32": [124, 652], "32495488": 582, "32630": 120, "329": 114, "33": [46, 78, 105, 106, 119, 299, 369, 420, 474, 586, 650, 653, 773, 776, 990], "330": 114, "332": 773, "33333333333333331": 1, "335928": 129, "34": [120, 126, 867], "34180297": 588, "343": 120, "344": 120, "3447015": 927, "345": 559, "34891526": 582, "34989": 118, "35": [1, 117, 119, 120, 126, 578, 777], "3519": 658, "352": 559, "354": 658, "355": [117, 658], "356": 658, "36": [86, 96, 124, 127, 592, 598, 773], "36463": 128, "36514837": 596, "37": [105, 128], "3716": 658, "375": 590, "379": 97, "379593": 952, "38": [0, 114, 119, 124, 773], "38629436": 579, "3899": 117, "39": [118, 124, 596], "3937": 70, "3e": [114, 115, 773], "3f": 657, "3k1v_a": 120, "3rd": [651, 725, 769, 932, 995], "3x": 900, "3x2": 820, "3x3": [599, 651, 654, 655], "4": [0, 1, 28, 45, 48, 49, 52, 54, 67, 69, 78, 81, 94, 105, 106, 117, 118, 120, 123, 124, 125, 127, 128, 129, 191, 201, 213, 218, 275, 282, 287, 292, 293, 302, 312, 316, 326, 328, 331, 332, 334, 345, 353, 358, 363, 372, 380, 383, 394, 404, 409, 414, 423, 431, 435, 447, 457, 462, 467, 468, 477, 487, 491, 501, 504, 506, 507, 509, 516, 521, 526, 530, 533, 536, 545, 547, 558, 559, 567, 573, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 594, 595, 596, 598, 611, 616, 621, 634, 641, 645, 647, 649, 651, 657, 748, 762, 763, 770, 773, 778, 792, 793, 794, 796, 799, 800, 806, 810, 811, 820, 829, 833, 834, 838, 839, 862, 872, 877, 878, 885, 886, 887, 916, 918, 919, 921, 922, 926, 927, 990, 993], "40": [1, 81, 118, 127, 129, 596, 775, 777, 806, 811], "400": 650, "402": 78, "403": [114, 115], "40824829": [596, 597], "41": [118, 124, 811], "410": [114, 115], "4140": 658, "4148": [74, 98, 99], "42": [1, 54, 79, 118, 124, 125, 127, 275, 298, 368, 419, 450, 473, 528, 650, 653, 802, 803, 809, 810, 811, 812, 813, 815, 821, 827, 828, 829, 831, 836, 841, 842, 844], "423": 97, "42512039": 1, "426": 777, "42857143": 594, "43": [54, 90, 124, 811, 831, 836, 926], "431": 94, "4375": 590, "44": [1, 95, 653, 811, 926], "443": 60, "444": 94, "45": [1, 124, 127, 777], "450": 650, "456": 762, "45995501": 759, "46": [124, 652, 777, 815, 831, 836], "4603377592": 121, "4603378712": 121, "4604421736": 121, "462339": 586, "466911": 748, "467481": 586, "46774194": 1, "4693": 118, "47": [124, 773, 836], "48": [60, 87], "480232": 586, "484": 773, "49": [0, 121, 124], "4hh": 117, "4x4": [649, 650, 916], "5": [0, 1, 16, 46, 54, 61, 64, 66, 73, 78, 80, 94, 105, 106, 108, 111, 113, 115, 117, 118, 119, 120, 123, 125, 128, 129, 191, 280, 282, 292, 293, 294, 300, 302, 304, 305, 311, 317, 323, 326, 328, 344, 351, 353, 363, 364, 370, 372, 379, 384, 390, 394, 402, 404, 414, 415, 421, 423, 430, 436, 442, 447, 455, 457, 467, 468, 469, 475, 477, 479, 480, 486, 492, 498, 501, 504, 514, 516, 526, 527, 530, 537, 545, 558, 559, 573, 576, 581, 586, 590, 593, 599, 611, 621, 634, 645, 647, 649, 650, 653, 654, 657, 748, 763, 773, 776, 777, 778, 782, 792, 793, 794, 795, 796, 806, 811, 819, 820, 829, 838, 842, 846, 862, 867, 871, 872, 874, 877, 878, 885, 886, 887, 909, 910, 911, 916, 918, 919, 926, 927, 930, 993], "50": [1, 62, 65, 118, 121, 124, 293, 363, 414, 468, 526, 581, 586, 658, 759, 776, 777, 803, 990], "500": [776, 777], "5007512": 759, "50th": [118, 581], "52": 124, "52199973": 658, "528": 776, "528243": 586, "53": [60, 124, 870], "530": 650, "533": 773, "533729": 586, "5338": 78, "54": [82, 106], "54772256": 596, "55": [124, 296, 366, 417, 471, 653, 658, 773, 927], "55152525": 128, "555": 82, "556061": 586, "5565": 115, "557": 82, "5587": 115, "56": [94, 296, 366, 417, 471], "560": 88, "5671": 115, "57": [115, 124, 763, 816], "572": 773, "58": [79, 124, 773], "581": 117, "59": 119, "5917809": 584, "594590": 586, "5990": 128, "5996": 128, "5e": 127, "6": [1, 48, 72, 73, 78, 92, 94, 105, 106, 115, 117, 118, 119, 120, 127, 128, 129, 292, 293, 301, 302, 325, 326, 328, 346, 363, 371, 372, 392, 394, 414, 422, 423, 444, 447, 467, 468, 476, 477, 500, 501, 504, 526, 529, 530, 544, 545, 573, 581, 583, 588, 591, 592, 594, 621, 645, 647, 651, 653, 654, 657, 748, 773, 792, 795, 796, 806, 811, 820, 826, 829, 862, 867, 877, 878, 886, 887, 916, 918, 919, 926, 990], "60": [116, 117, 121, 658, 776, 811], "601": 773, "601277": 586, "6018555": 651, "602": 773, "607": 658, "609": 117, "61": [124, 653, 777, 811], "617": 773, "619": 128, "62": [78, 105, 106, 116, 119, 653, 811, 990], "6212": 128, "6216": 658, "6234": 128, "627677": 586, "63": [115, 124, 811], "634": 658, "64": [1, 108, 119, 127, 334, 335, 811, 922], "641": 128, "646": 777, "646e": 773, "65": 658, "65463348": 759, "66": [120, 124, 299, 369, 420, 474, 653, 990], "664": 773, "6666666666666667": 993, "67": [120, 124, 292, 299, 326, 369, 420, 467, 474, 501, 649, 653, 763, 773, 990], "68": [120, 658, 776], "6821": 115, "68235294": 1, "68339802": 587, "688": [74, 98, 99], "69": 124, "6913": 658, "692": 78, "6928": 115, "69314718": 579, "694": 78, "6e": 115, "6x6": [1, 653], "7": [1, 63, 73, 94, 108, 118, 119, 120, 128, 129, 191, 201, 213, 218, 275, 282, 293, 344, 353, 363, 404, 414, 450, 457, 468, 516, 526, 573, 586, 621, 647, 650, 651, 653, 654, 657, 748, 773, 779, 792, 795, 796, 829, 846, 872, 886, 910, 918, 919, 927, 931, 990], "70": 124, "702656": 586, "70710678": [596, 597], "707221": 586, "71": [86, 105, 124, 128], "714286": 650, "71597633": 1, "72": 94, "73": [105, 106], "74": 124, "75": [1, 50, 78, 83, 105, 106, 319, 386, 438, 494, 539, 581, 599, 650, 653, 826, 829, 922], "750792": 586, "7559": 651, "755929": 654, "75th": 581, "76": [89, 94, 124], "77": [89, 653], "7715": 658, "771517": 650, "77549923": 1, "7768362": 587, "779": 773, "78": [124, 922], "78142077": 1, "783": 773, "78787879": 1, "788": 773, "79": [118, 121, 124], "793": 90, "79451346": 584, "8": [0, 1, 66, 114, 115, 119, 120, 125, 128, 129, 142, 218, 293, 302, 325, 330, 346, 363, 372, 392, 414, 423, 444, 468, 477, 500, 502, 526, 530, 544, 573, 592, 598, 621, 647, 650, 657, 748, 773, 777, 778, 792, 795, 796, 800, 829, 877, 886, 919, 927, 990, 993], "80": [69, 118, 748, 776, 777, 811, 867, 922, 995], "803": 90, "80332382": 759, "806": 777, "81": 811, "810": 650, "811": 115, "81521739": 1, "81649658": [596, 597], "818": 83, "82": [115, 116, 128, 811], "820": 83, "8228": 105, "8235": 105, "824": 777, "82857143": 1, "82967033": 1, "83": [113, 811, 846], "8304": 658, "832": 657, "836": 773, "838": 773, "84": 811, "844": 773, "8468": 115, "848": 773, "85": [117, 124, 777, 922], "8547619": 1, "8552": 115, "857142857143": 826, "85714286": 1, "86": [275, 450], "86111111": 1, "86666667": 1, "86813187": 1, "87": [69, 124], "87709497": 1, "87777778": 1, "88": [128, 653, 776], "884420": 806, "884498": 586, "89": [62, 65, 120, 559], "89285714": 1, "8e": 115, "9": [1, 114, 115, 116, 118, 121, 124, 127, 128, 170, 191, 201, 275, 296, 300, 346, 366, 370, 397, 417, 421, 450, 471, 475, 509, 581, 586, 657, 658, 748, 762, 763, 765, 766, 768, 769, 770, 773, 792, 795, 796, 874, 877, 886, 916, 919, 926, 927, 990], "90": [47, 121, 586, 995], "900": 216, "905": 77, "909": 115, "912": 77, "91769271": 759, "92": 650, "9223489": 128, "922404392093": 1, "9230769230": 577, "928": 773, "93": 119, "932": 773, "939336": 1, "94": [115, 124], "95": [73, 77, 78, 84, 119, 124, 867], "952": 777, "95224719": 1, "956": 773, "96": [73, 121], "97": [124, 586], "978387": 586, "984": 773, "98435423": 1, "98796148": 1, "99": [114, 115, 117, 124, 649, 653, 657, 829], "991987": 586, "996": [773, 777], "999": [1, 509, 649, 651, 652, 653, 654, 657], "999887756453524252": 128, "9e": 114, "9f": 872, "A": [1, 16, 28, 49, 50, 53, 54, 55, 58, 60, 62, 65, 69, 72, 77, 78, 79, 80, 82, 83, 89, 94, 97, 105, 106, 108, 112, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 155, 159, 160, 165, 172, 173, 191, 212, 216, 217, 238, 256, 271, 275, 296, 302, 308, 324, 328, 335, 341, 346, 366, 372, 376, 391, 394, 397, 417, 423, 427, 443, 447, 450, 471, 477, 483, 499, 504, 509, 530, 543, 545, 547, 558, 559, 563, 565, 567, 568, 572, 573, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 611, 614, 616, 617, 620, 621, 623, 634, 638, 641, 642, 646, 647, 650, 651, 652, 653, 655, 657, 670, 692, 714, 758, 759, 760, 762, 763, 768, 770, 775, 776, 777, 782, 793, 794, 795, 799, 804, 805, 806, 807, 815, 822, 828, 830, 831, 832, 833, 834, 835, 838, 839, 840, 842, 847, 848, 849, 862, 867, 870, 872, 873, 876, 877, 878, 879, 882, 883, 884, 886, 887, 889, 896, 904, 906, 908, 909, 914, 916, 923, 924, 926, 976, 988, 993, 995], "AS": 128, "AT": [46, 118, 119, 125], "And": [121, 275, 397, 593, 990], "As": [1, 117, 120, 123, 127, 509, 569, 618, 643, 651, 653, 763, 880, 988, 995], "At": [127, 130, 795], "Be": 509, "By": [54, 83, 94, 103, 107, 118, 120, 127, 581, 653, 767, 768, 771, 805, 817, 916, 927, 954], "For": [1, 28, 47, 55, 59, 66, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 201, 216, 217, 218, 219, 256, 271, 274, 275, 324, 333, 391, 396, 397, 443, 449, 450, 499, 508, 509, 543, 546, 559, 568, 574, 581, 586, 617, 622, 642, 648, 649, 650, 651, 652, 653, 655, 657, 659, 725, 759, 760, 761, 762, 763, 773, 775, 776, 777, 779, 795, 800, 801, 822, 830, 835, 845, 846, 867, 904, 925, 926, 928, 929, 988, 990, 993], "IF": 822, "IN": 128, "If": [1, 16, 28, 45, 47, 48, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 66, 69, 72, 73, 78, 79, 80, 84, 90, 94, 103, 105, 106, 107, 108, 111, 114, 118, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 141, 142, 143, 156, 158, 162, 163, 166, 167, 170, 183, 184, 185, 191, 200, 204, 217, 218, 230, 231, 232, 248, 249, 250, 256, 265, 266, 269, 270, 271, 275, 277, 282, 292, 293, 294, 296, 298, 300, 302, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 328, 329, 344, 346, 348, 353, 363, 364, 366, 368, 370, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 397, 399, 404, 414, 415, 417, 419, 421, 423, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 447, 448, 450, 452, 457, 467, 468, 469, 471, 473, 475, 477, 480, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 504, 505, 506, 507, 509, 511, 516, 526, 527, 528, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 551, 558, 559, 561, 562, 563, 566, 567, 568, 573, 576, 577, 581, 583, 586, 587, 588, 590, 591, 597, 600, 604, 611, 613, 614, 615, 616, 617, 621, 627, 634, 637, 638, 639, 640, 641, 642, 647, 649, 650, 651, 652, 653, 654, 655, 657, 692, 703, 736, 747, 758, 759, 760, 762, 763, 764, 767, 768, 771, 773, 774, 775, 776, 777, 778, 782, 790, 792, 795, 796, 798, 799, 800, 803, 804, 805, 806, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 867, 869, 870, 874, 877, 880, 881, 885, 890, 893, 895, 898, 904, 909, 910, 911, 916, 918, 919, 920, 926, 927, 930, 931, 932, 933], "In": [1, 16, 47, 78, 94, 105, 106, 108, 118, 119, 120, 121, 123, 125, 129, 256, 275, 305, 344, 397, 450, 480, 547, 578, 581, 586, 599, 650, 651, 657, 747, 762, 763, 768, 773, 777, 792, 847, 867, 880, 926, 988, 990, 993, 995], "It": [1, 16, 67, 74, 78, 79, 81, 94, 101, 113, 114, 116, 118, 119, 120, 121, 123, 125, 127, 129, 142, 191, 201, 204, 212, 213, 215, 216, 218, 275, 311, 323, 379, 390, 397, 430, 442, 450, 486, 498, 502, 581, 584, 586, 590, 599, 640, 651, 652, 657, 680, 681, 713, 724, 736, 762, 763, 767, 770, 773, 776, 777, 803, 842, 847, 848, 849, 873, 876, 930, 952, 976, 990], "Its": 770, "NOT": [16, 88, 170], "No": [29, 73, 114, 115, 117, 126, 129, 201, 291, 362, 413, 466, 525, 651], "Not": [119, 275, 328, 394, 447, 504, 545, 653], "ONE": [16, 66], "OR": 29, "Of": 120, "On": 768, "One": [78, 125, 130, 270, 586, 635, 927], "That": [95, 99, 123, 318, 385, 437, 493, 538], "The": [0, 1, 16, 17, 45, 46, 47, 48, 49, 51, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 78, 79, 80, 81, 83, 88, 90, 94, 95, 96, 97, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 183, 188, 189, 190, 191, 192, 201, 202, 203, 212, 213, 214, 215, 216, 217, 219, 220, 230, 235, 236, 237, 248, 253, 254, 255, 256, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 280, 282, 287, 292, 293, 294, 296, 298, 302, 310, 312, 313, 315, 316, 317, 324, 326, 328, 332, 333, 334, 343, 344, 345, 348, 351, 353, 358, 363, 364, 366, 368, 372, 378, 380, 381, 382, 383, 384, 391, 394, 396, 399, 402, 404, 409, 414, 415, 417, 419, 423, 429, 431, 433, 434, 435, 436, 443, 447, 449, 450, 452, 455, 457, 462, 467, 468, 469, 471, 473, 477, 485, 487, 488, 490, 491, 492, 499, 501, 504, 507, 508, 509, 511, 514, 516, 521, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 543, 545, 546, 547, 551, 558, 563, 568, 573, 574, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591, 593, 595, 596, 597, 600, 604, 611, 614, 617, 621, 622, 623, 627, 634, 635, 638, 640, 642, 645, 647, 648, 649, 650, 651, 652, 653, 655, 657, 658, 670, 692, 703, 714, 736, 747, 749, 760, 761, 762, 763, 767, 768, 769, 770, 773, 774, 775, 776, 777, 779, 782, 790, 791, 792, 793, 794, 795, 796, 799, 802, 804, 805, 807, 808, 809, 810, 811, 812, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 841, 842, 843, 845, 846, 862, 863, 868, 869, 870, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 885, 886, 887, 889, 893, 895, 896, 899, 904, 905, 907, 908, 910, 911, 912, 913, 916, 918, 925, 926, 927, 930, 933, 951, 953, 954, 988, 990, 993, 995], "Then": [1, 581, 593, 658, 748], "There": [1, 54, 79, 90, 115, 120, 123, 126, 299, 369, 420, 474, 623, 768, 776, 777, 795, 820, 988, 993, 995], "These": [0, 1, 46, 51, 52, 68, 78, 105, 106, 120, 123, 127, 128, 129, 220, 310, 312, 378, 380, 429, 431, 485, 487, 532, 533, 575, 654, 656, 749, 769, 775, 782, 820], "To": [1, 35, 78, 105, 106, 118, 119, 120, 123, 126, 127, 130, 170, 256, 275, 397, 450, 581, 586, 623, 645, 649, 651, 653, 657, 773, 867, 988, 995], "Will": [50, 161, 164, 168, 170, 188, 235, 253, 272, 560, 572, 612, 620, 636, 646, 749, 778], "With": [114, 578, 590], "_": [69, 116, 118, 119, 123, 128, 213, 280, 351, 402, 455, 514, 599, 651, 827], "_1": 123, "__": 120, "____________1______________2_________": 128, "________________": 128, "____________________": 128, "__copy__": [32, 203], "__deepcopy__": [31, 202], "__eq__": [42, 180, 210, 227, 245, 263, 556, 609, 632], "__init__": [130, 141, 143], "__iter__": 53, "__locat": 120, "__ne__": [174, 221, 239, 257], "__reversed__": 53, "_block_comput": 108, "_ci": 68, "_except": 125, "_interval_tre": 201, "_io": 113, "_is_stale_tre": 201, "_leaf_index": 889, "_myformat_sniff": 130, "_myformat_to_some_skbio_class": 130, "_not_": [795, 923], "_rebuild_tre": 201, "_setup_debug_trac": 964, "_some_skbio_class_to_myformat": 130, "_tree": 926, "aT": 119, "a_1": 123, "aa": [53, 118, 120, 125, 334], "aaa": [128, 315, 382, 434, 490, 535], "aaaaaaaaa": 117, "aaaaaaaaaa": 117, "aaaaaaattttttt": 995, "aaaaaactctctaaactcactaaggctctctacccctcttcagagaagtcga": 0, "aaaaaccgat": 117, "aaaataaata": 117, "aaacaaacca": 117, "aaaccattgc": [118, 125], "aaacccttgc": [118, 125], "aaacccttgccg": 118, "aaacccttgccggtacgcttaaaccattgccggtacgcttaa": 118, "aaacccttgccgttacgcttaaaccgaggccgggacactcat": 118, "aaaccgaggc": [118, 125], "aaagataggc": 117, "aaatatggat": 117, "aaatcctatg": 117, "aac": 126, "aacaaatgca": 117, "aacaacagga": 117, "aacaccaaacttctccacc": 119, "aacaccaaacttctccaccacgtgagctacaaaag": 119, "aaccttatca": 117, "aacgaaggcg": 117, "aactttgtag": 117, "aagaactttc": 117, "aagaggttac": 117, "aagcctggtg": 117, "aagccttggc": 118, "aagccttggcagtgcagggtgagccgtgg": 118, "aagccttggcagtgcagggtgagccgtggccgggcacggtat": 118, "aagctngggc": [118, 125], "aagctngggcatttcagggtgagcccgggcaatacagggtat": 118, "aagga": [282, 353, 404, 457, 516], "aaggaatcaa": 117, "aaggaatttg": 117, "aagtaa": [292, 467], "aagtatttgg": 117, "aagtcttaga": 117, "aagtcttttt": 117, "aagttgttag": 117, "aagucuuuuu": 117, "aata": 126, "aataaac": 126, "aataagtgca": 117, "aatacagggt": [118, 125], "aatataccggttataa": [301, 371, 422, 476, 529], "aatatggatt": 117, "aatgaa": [292, 314, 326, 467, 489, 501], "aatgtt": [314, 489], "aatt": 795, "aattaaataa": 117, "aattctggat": 117, "aattg": 995, "aattgccggac": 995, "aattgg": 747, "aauauggauu": 117, "ab": [119, 346], "ab07acbb1e496801937adfa772424bf7": 952, "ababacac": 346, "abbrevi": [129, 749], "abc": [116, 280, 346, 351, 402, 455, 514], "abcd": 927, "abcdef": 1, "abil": 123, "abl": [28, 48, 108, 275, 397, 450, 509, 581, 776, 877], "about": [1, 55, 59, 90, 116, 118, 119, 123, 127, 128, 130, 173, 201, 217, 219, 220, 238, 256, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 576, 617, 622, 642, 648, 748, 760, 761, 770, 776, 777, 795, 825, 830, 835, 845, 904, 925, 928, 929, 989, 990], "abov": [0, 1, 54, 118, 120, 124, 125, 126, 127, 128, 130, 141, 143, 275, 397, 450, 509, 599, 649, 651, 653, 657, 990], "absenc": [73, 777, 827], "absent": [328, 394, 447, 504, 545, 768], "absolut": [578, 586, 651, 835, 951], "abstract": [220, 346], "abund": [1, 69, 70, 78, 80, 83, 90, 94, 102, 103, 105, 106, 107, 108, 111, 113, 581, 586, 748, 762, 763, 769, 770, 777, 829, 835], "abx": 775, "ac": [29, 30, 31, 32, 33, 38, 40, 43, 46, 48, 50, 54, 56, 57, 60, 63, 117, 119, 120, 128, 191, 303, 373, 424, 478, 990], "aca": [316, 317, 383, 384, 435, 436, 491, 492, 536, 537], "acaatcaaat": 117, "acac": [307, 316, 375, 383, 426, 435, 482, 491, 536], "acacatttatta": [317, 384, 436, 492, 537], "acacgacgtt": [308, 313, 316, 376, 381, 383, 427, 433, 435, 483, 488, 491, 534, 536], "acad": [62, 65], "academ": 71, "academi": 559, "acagaattga": 117, "acaggttggc": [118, 125], "acata": 119, "acatggcaat": 117, "acatgggata": 117, "acc": [0, 115, 990], "accaatattt": 117, "accaatttga": 117, "acccc": 0, "acceler": 778, "accept": [1, 28, 56, 108, 325, 331, 332, 392, 444, 500, 506, 507, 544, 559, 575, 581, 651, 655, 657, 773, 776, 777, 882, 911, 919, 922, 976], "acces": 114, "access": [2, 51, 52, 112, 117, 118, 120, 129, 256, 310, 312, 335, 341, 378, 380, 429, 431, 485, 487, 532, 533, 599, 927, 933], "accgaat": 275, "accgaau": 450, "accgggta": 990, "accggttggc": 118, "accggttggccgttcagggtacaggttggccgttcagggtaa": 118, "accgttcg": 128, "accgttgta": [116, 125], "accguuaguc": 990, "accident": 928, "accommod": 191, "accompani": [118, 600, 929], "accomplish": [1, 578, 988], "accord": [74, 78, 275, 397, 450, 767, 771, 833, 834], "account": [329, 395, 448, 505, 692, 762, 770, 777, 993], "accumul": [86, 89, 862], "accumulate_to_ancestor": 878, "accur": [80, 84, 85], "accuraci": [653, 768], "acdfnasanftacgnpnrtesl": [315, 382, 434, 490, 535], "acg": [29, 30, 31, 32, 33, 38, 40, 43, 50, 53, 54, 56, 57, 126, 128, 313, 316, 381, 383, 433, 435, 488, 491, 534, 536], "acga": [45, 48, 280, 289, 351, 360, 402, 411, 455, 464, 514, 523], "acgaactatt": 117, "acggggaggcggag": [300, 370, 421, 475], "acgggu": 990, "acgt": [28, 45, 48, 49, 51, 52, 58, 276, 280, 289, 293, 304, 305, 310, 312, 314, 318, 347, 351, 360, 363, 378, 380, 385, 398, 402, 411, 414, 429, 431, 437, 451, 455, 464, 468, 479, 480, 485, 487, 489, 493, 509, 510, 514, 523, 526, 532, 533, 538, 547, 565], "acgta": 126, "acgtac": 126, "acgtacgt": [304, 479], "acgtgagctacaaaag": 119, "acgtgccta": 0, "acgtgcctaggtacgcaag": 0, "acgtggaa": [293, 363, 414, 468, 526], "acgtn": [328, 394, 447, 504, 545], "acgtu": 67, "achiev": [94, 990], "acid": [60, 62, 65, 117, 118, 119, 122, 125, 129, 275, 328, 334, 344, 346, 394, 397, 447, 450, 504, 509, 545, 547, 559], "acquir": 776, "across": [50, 94, 118, 119, 125, 201, 270, 581, 586, 651, 776, 796, 926], "act": [0, 54, 141, 142, 143], "actaaggctc": 0, "actaaggctcctaacccccttttctcaga": 0, "actaaggctctct": 0, "actaaggctctctacccctctcagaga": 0, "actacattcg": 117, "actatacgga": 117, "actcat": 118, "action": 220, "activ": 987, "acttagtt": [304, 479], "actual": [95, 99, 127, 130, 161, 651], "acwgn": [295, 297, 323, 365, 367, 390, 416, 418, 442, 470, 472, 498], "ad": [16, 60, 61, 62, 63, 64, 65, 118, 128, 212, 509, 581, 586, 763, 766, 795, 820, 953, 993], "adapt": [835, 926], "adata": 837, "add": [1, 61, 64, 127, 128, 130, 154, 191, 201, 213, 215, 280, 351, 402, 455, 509, 514, 583, 590, 591, 593, 594, 595, 790, 791, 795, 815, 836, 864, 877, 879], "add_format": [141, 143], "addit": [1, 66, 67, 78, 104, 105, 106, 110, 117, 118, 119, 120, 121, 125, 126, 127, 188, 235, 253, 256, 272, 275, 397, 450, 547, 578, 579, 580, 581, 599, 623, 847, 868, 880, 881, 926, 953, 988], "addition": [1, 113, 123, 170, 201, 834, 990, 993], "additon": 118, "address": [581, 988], "adenin": [275, 450], "adequ": 776, "adher": 127, "adiv_faith_pd": 1, "adiv_sob": 1, "adjac": [315, 382, 434, 490, 535, 804], "adjust": 94, "adoni": 652, "adopt": [94, 328, 394, 447, 504, 545], "advanc": 1, "advantag": [94, 623, 953], "advis": [105, 106, 111], "ae000111": 115, "ae000171": 115, "ae000174": 115, "ae000394": 115, "ae000425": 115, "af031394": 115, "af035635": 128, "af178031": 115, "af178032": 115, "af178033": 115, "affect": [118, 123, 334, 335, 341, 509, 649, 653], "aforement": 129, "after": [16, 45, 48, 60, 61, 62, 118, 119, 127, 128, 129, 130, 204, 215, 270, 586, 592, 593, 650, 651, 654, 657, 762, 777, 901, 903, 920], "ag": [28, 45, 48, 50, 599, 775, 776], "agaagacc": [302, 372, 423, 477, 530], "agaagctatg": 117, "agaagctctt": 117, "agaagcuaug": 117, "agacatcacg": 117, "agagcatgcg": 117, "agaggttcta": 120, "agagguucua": 120, "agagttgaag": 125, "agagttgaaggtatct": [116, 125], "again": [1, 118, 119, 256, 596, 826, 927], "against": [33, 42, 60, 63, 119, 192, 198, 204, 210, 280, 289, 335, 341, 351, 360, 402, 411, 455, 464, 514, 523, 581, 657, 793, 794, 870], "agatataaag": 117, "agatcttttg": 117, "agatgagtat": 117, "agctttctgc": 117, "agg": 990, "aggaccttat": 117, "aggctc": 0, "aggctcccttctacccctctcagaga": 0, "agggaaagtt": 117, "agggctggct": 117, "agggga": 990, "agggta": 576, "aggreg": 995, "aggtacccta": 117, "aggtgcagta": 117, "agre": [162, 166], "agtactctaa": 117, "agtgcagggt": [118, 125], "aguauucugccacuguaagaa": 344, "aguc": [298, 319, 321, 368, 386, 388, 419, 438, 440, 473, 494, 496, 528, 539, 541], "ahead": 995, "aiacaqkm": 128, "aim": 748, "ainsworth": 650, "aitchison": [578, 579, 580, 584, 585, 587, 588, 596], "aitchson": 589, "al": [581, 586, 657, 779, 846], "ala": 397, "alanin": [47, 397], "aldex2": 586, "alexandro": 867, "algorithm": [60, 63, 120, 649, 650, 651, 653, 658, 659, 670, 681, 692, 703, 714, 725, 736, 762, 763, 770, 870, 927, 928, 987], "alia": [2, 78, 91, 92, 94, 105, 106, 121, 569, 581, 591, 618, 643, 893, 895], "alic": 509, "alig": 15, "align": [114, 115, 118, 119, 191, 201, 509, 547, 792, 793, 794, 987, 988, 990], "aligned_query_sequ": 0, "aligned_target_sequ": 0, "alignmentstructur": 17, "all": [1, 16, 28, 29, 46, 47, 51, 52, 54, 60, 61, 62, 67, 69, 78, 79, 80, 90, 94, 95, 99, 102, 103, 105, 106, 107, 108, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 155, 165, 184, 191, 201, 204, 213, 215, 216, 231, 249, 268, 270, 275, 293, 296, 299, 302, 310, 312, 315, 325, 329, 344, 363, 366, 369, 372, 378, 380, 382, 392, 395, 397, 414, 417, 420, 423, 429, 431, 434, 444, 448, 450, 468, 471, 474, 477, 485, 487, 490, 500, 505, 509, 526, 530, 532, 533, 535, 544, 547, 558, 559, 563, 565, 573, 581, 583, 586, 590, 591, 593, 594, 595, 596, 599, 611, 614, 621, 634, 638, 645, 647, 649, 650, 651, 652, 653, 654, 681, 692, 736, 747, 748, 759, 767, 768, 776, 777, 778, 795, 796, 799, 803, 836, 844, 847, 863, 866, 867, 868, 877, 880, 881, 882, 893, 895, 896, 899, 906, 911, 912, 914, 916, 926, 953, 954, 993], "all_char": 123, "allow": [114, 118, 119, 123, 125, 126, 127, 130, 141, 143, 170, 201, 275, 293, 302, 363, 372, 397, 414, 423, 450, 468, 477, 526, 530, 551, 558, 578, 604, 611, 627, 634, 649, 650, 652, 653, 654, 658, 768, 779, 795, 846, 877, 919, 954, 995], "allow_empti": 919, "allow_overlap": [558, 611, 634], "allvltkt": 128, "almost": 930, "alon": [123, 650], "along": [122, 759, 767, 768, 812, 833, 844], "alpha": [103, 109, 581, 773, 774, 778, 987], "alpha_divers": [1, 78, 94, 107, 109], "alpha_pwr": [773, 776, 777], "alphabet": [0, 57, 67, 109, 110, 114, 118, 275, 328, 334, 346, 394, 397, 447, 450, 504, 509, 545, 547, 559, 562, 565, 576, 990], "alphanumer": 127, "alr": 580, "alreadi": [123, 128, 130, 141, 142, 143, 509, 600, 651], "also": [0, 1, 46, 47, 74, 78, 98, 104, 105, 106, 107, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 201, 256, 305, 315, 325, 328, 344, 382, 392, 394, 434, 444, 447, 480, 490, 500, 504, 509, 535, 544, 545, 547, 581, 596, 597, 599, 649, 650, 651, 653, 657, 748, 763, 770, 773, 776, 777, 800, 805, 817, 930, 976, 988, 990, 995], "alter": 929, "altern": [56, 129, 130, 327, 344, 393, 446, 503, 563, 578, 592, 598, 614, 638, 651, 653, 654, 657, 768, 773, 885, 911], "although": [94, 657, 776, 796], "altschul": [114, 115], "alwai": [1, 16, 117, 120, 123, 125, 127, 142, 170, 188, 191, 212, 235, 253, 256, 270, 272, 344, 820, 877, 933, 995], "amar": 120, "ambigu": [163, 167], "amen": 579, "american": 69, "amino": [60, 62, 65, 117, 118, 122, 275, 328, 334, 344, 394, 397, 447, 504, 545, 547, 559], "amino_acid": [334, 335, 341], "among": [1, 74, 94, 120, 573, 621, 647, 659, 763, 770, 991], "amount": [654, 847, 995], "amplicon": [1, 792], "amsterdam": [748, 762, 763, 770], "an": [0, 1, 2, 16, 28, 30, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 66, 78, 79, 81, 87, 91, 92, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 141, 142, 143, 156, 158, 159, 160, 162, 164, 166, 168, 170, 171, 185, 186, 191, 201, 212, 213, 215, 216, 218, 219, 232, 233, 250, 251, 256, 270, 274, 282, 293, 300, 309, 310, 312, 319, 321, 325, 328, 333, 334, 344, 346, 353, 363, 370, 377, 378, 380, 386, 388, 392, 394, 396, 404, 414, 421, 428, 429, 431, 438, 440, 444, 447, 449, 450, 457, 468, 475, 484, 485, 487, 494, 496, 500, 504, 508, 509, 516, 526, 531, 532, 533, 539, 541, 544, 545, 546, 547, 551, 558, 561, 563, 565, 569, 573, 574, 581, 584, 585, 587, 588, 591, 593, 596, 597, 599, 604, 611, 613, 614, 618, 621, 622, 627, 634, 635, 637, 638, 643, 647, 648, 649, 651, 652, 653, 657, 669, 691, 702, 714, 735, 746, 747, 748, 758, 761, 767, 768, 773, 775, 776, 777, 778, 779, 782, 790, 791, 792, 798, 799, 802, 803, 804, 805, 810, 812, 813, 815, 818, 819, 820, 821, 823, 825, 826, 836, 839, 842, 843, 844, 845, 846, 848, 849, 862, 864, 865, 867, 869, 873, 875, 876, 880, 883, 884, 886, 893, 895, 898, 908, 911, 916, 918, 921, 923, 924, 925, 926, 927, 928, 933, 934, 937, 944, 950, 951, 952, 954, 976, 988, 990, 993, 995], "analog": 94, "analogu": 653, "analys": [78, 105, 106, 649, 991], "analysi": [1, 78, 90, 105, 106, 118, 125, 578, 579, 581, 586, 596, 649, 652, 653, 658, 659, 680, 681, 713, 724, 725, 736, 759, 762, 763, 768, 769, 770, 773, 776, 777], "analyt": 79, "analyz": [1, 578, 763, 776], "ancacwwgacgtt": [306, 307, 311, 374, 375, 379, 425, 426, 430, 481, 482, 486], "ancestor": [78, 94, 293, 363, 414, 468, 526, 862, 893, 895], "ancestr": 78, "ancom_df": 581, "anderson": [652, 653], "ani": [1, 16, 46, 47, 54, 56, 66, 67, 70, 101, 102, 118, 120, 122, 123, 127, 128, 141, 142, 143, 163, 167, 170, 183, 188, 191, 201, 215, 216, 230, 235, 248, 253, 256, 266, 269, 272, 275, 397, 450, 509, 547, 576, 581, 583, 651, 654, 658, 692, 714, 762, 767, 773, 775, 776, 800, 805, 829, 839, 841, 864, 867, 868, 869, 879, 887, 916, 918, 926, 953, 954, 964, 976, 993, 995], "anim": 79, "ann": [77, 96], "anndata": 837, "annot": [117, 120, 121, 127, 201], "announc": 127, "anosim": [1, 652, 653], "anoth": [1, 33, 42, 45, 54, 78, 105, 106, 120, 122, 123, 174, 180, 192, 198, 201, 204, 210, 215, 218, 221, 227, 239, 245, 257, 263, 280, 289, 298, 320, 322, 335, 341, 351, 360, 368, 387, 389, 402, 411, 419, 439, 441, 455, 464, 473, 495, 497, 509, 514, 523, 528, 540, 542, 547, 549, 602, 625, 657, 792], "anova": [581, 652, 669, 670, 691, 702, 735, 746], "answer": 952, "anti": [1, 649], "antibiot": [593, 775], "anticip": 995, "anyon": 127, "anyth": [1, 118, 119, 126, 130, 509, 839, 953, 964, 976, 995], "anytim": 127, "anywher": [122, 123, 127, 581], "apart": 909, "api": [118, 256, 575], "app": 126, "appear": [1, 69, 114, 125, 127, 128, 561, 613, 637, 650, 762, 763, 768, 773, 782], "append": [0, 48, 125, 130, 509, 879], "appl": [105, 106], "appli": [0, 1, 16, 28, 47, 51, 52, 103, 106, 107, 108, 111, 117, 118, 123, 127, 129, 201, 220, 275, 310, 312, 378, 380, 397, 429, 431, 450, 485, 487, 509, 532, 533, 547, 563, 578, 614, 638, 640, 651, 654, 658, 762, 776, 799, 820, 826, 829, 842, 927, 954, 995], "applic": [16, 47, 60, 66, 256, 748, 872, 995], "approach": [586, 651, 776, 848, 849, 873, 876], "appropri": [1, 112, 122, 170, 293, 363, 414, 468, 526, 581, 988, 993], "approx": 773, "approxim": [770, 773], "aquat": 763, "ar": [0, 1, 16, 28, 29, 33, 38, 42, 43, 46, 47, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 78, 79, 84, 85, 94, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 155, 162, 165, 166, 170, 174, 180, 183, 184, 191, 192, 198, 204, 210, 213, 215, 217, 218, 219, 220, 221, 227, 230, 231, 239, 245, 248, 249, 256, 257, 263, 265, 266, 268, 269, 270, 271, 274, 275, 280, 282, 289, 292, 293, 299, 302, 306, 307, 308, 311, 319, 320, 321, 322, 324, 325, 328, 330, 331, 332, 333, 334, 335, 341, 343, 344, 345, 346, 351, 353, 360, 363, 369, 372, 374, 375, 376, 379, 386, 387, 388, 389, 391, 392, 394, 396, 397, 402, 404, 411, 414, 420, 423, 425, 426, 427, 430, 432, 438, 439, 440, 441, 443, 444, 447, 449, 450, 455, 457, 464, 467, 468, 474, 477, 481, 482, 483, 486, 494, 495, 496, 497, 499, 500, 502, 504, 506, 507, 508, 509, 514, 516, 523, 526, 530, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 556, 559, 562, 563, 568, 569, 573, 574, 576, 577, 578, 579, 581, 583, 586, 587, 588, 590, 591, 593, 594, 595, 596, 599, 600, 602, 604, 609, 614, 617, 618, 621, 622, 623, 625, 627, 632, 638, 640, 642, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 670, 692, 736, 747, 748, 749, 758, 759, 760, 761, 762, 763, 766, 767, 768, 770, 771, 773, 775, 776, 777, 779, 782, 795, 796, 799, 801, 805, 811, 820, 822, 830, 832, 833, 834, 835, 837, 838, 839, 844, 845, 846, 847, 867, 870, 875, 885, 896, 898, 899, 903, 904, 911, 912, 916, 918, 919, 920, 925, 926, 928, 930, 931, 933, 950, 953, 954, 965, 976, 988, 990, 993, 995], "arang": [811, 816], "arbitrari": [28, 46, 49, 122, 127, 128, 275, 397, 450, 509, 747, 805, 839, 953, 990], "arbitrarili": [926, 995], "archaea": [885, 886, 919], "archiv": [129, 952], "area": [1, 80], "arg": [130, 155, 165, 331, 332, 397, 506, 507, 782], "arginin": 397, "argument": [16, 28, 55, 56, 59, 66, 122, 141, 142, 143, 155, 162, 163, 164, 165, 166, 167, 168, 217, 219, 271, 274, 318, 324, 331, 332, 333, 385, 391, 396, 437, 443, 449, 493, 499, 506, 507, 508, 538, 543, 546, 547, 563, 568, 574, 579, 614, 617, 622, 638, 642, 648, 655, 760, 761, 782, 830, 845, 904, 925, 953, 976], "argumentoverridewarn": [162, 166], "aris": [918, 926], "around": [84, 85, 108, 118, 125, 128, 547, 582, 651, 774, 993], "arrai": [1, 16, 47, 50, 78, 94, 105, 106, 118, 124, 275, 292, 295, 297, 303, 320, 322, 323, 326, 328, 365, 367, 373, 387, 389, 390, 394, 397, 416, 418, 424, 439, 441, 442, 445, 447, 450, 467, 470, 472, 478, 495, 497, 498, 501, 504, 509, 540, 542, 545, 547, 549, 557, 562, 565, 569, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 602, 610, 618, 625, 633, 635, 643, 657, 658, 692, 714, 736, 748, 767, 771, 773, 774, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 812, 815, 819, 823, 825, 829, 831, 835, 836, 839, 842, 889, 918, 926, 990], "arrang": 748, "array_lik": [1, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 111, 282, 300, 301, 315, 325, 353, 370, 371, 382, 392, 404, 421, 422, 434, 444, 457, 475, 476, 490, 500, 516, 529, 535, 544, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 600, 649, 651, 652, 653, 654, 657, 764, 767, 771, 774, 777, 778], "articl": [16, 66, 116], "artifact": [53, 60, 61, 62], "artifici": [120, 748], "asarrai": [600, 802, 803, 809, 810, 812, 813, 815, 820, 821, 826, 827, 828, 831, 833, 834, 836, 841, 842, 844], "ascend": [57, 218], "ascii": [119, 126, 127, 130, 328, 394, 447, 504, 545, 865, 993], "ascii_art": [123, 794, 868, 885, 886, 927, 993], "ask": 142, "asn": 397, "asp": 397, "asparagin": 397, "aspart": 397, "aspect": 954, "ass": 82, "assai": 776, "assembl": 117, "assert": 931, "assert_frame_equ": 930, "assertionerror": [930, 931], "assess": [94, 102, 649, 651, 652, 653, 657], "assign": [47, 56, 67, 103, 107, 125, 127, 192, 325, 392, 444, 500, 509, 544, 565, 581, 586, 649, 652, 653, 747, 777, 866, 867, 868], "assign_support": 922, "assist": [127, 995], "associ": [1, 35, 69, 94, 119, 127, 128, 129, 156, 157, 158, 184, 186, 191, 212, 214, 216, 231, 233, 249, 251, 256, 275, 397, 450, 509, 650, 657, 747, 767, 771, 774, 775, 776, 795, 798, 805, 820, 837, 839, 877, 883, 916, 988], "asst": [304, 305, 479, 480], "assum": [1, 69, 78, 80, 86, 89, 105, 106, 116, 118, 119, 122, 124, 141, 143, 256, 282, 330, 331, 332, 353, 404, 457, 516, 551, 586, 599, 600, 604, 627, 638, 657, 658, 763, 767, 773, 774, 776, 777, 835], "assumpt": [90, 123, 576, 581, 586, 880, 881, 929], "assur": [848, 849, 873, 876], "asv": 1, "asx": 397, "asymmetr": [547, 551, 604, 627], "ataaatcacg": 117, "ataacgttgg": 117, "ataagggatg": 117, "atacaaccat": 117, "atactcccaa": 117, "atagacc": 995, "atagcatacc": 117, "atagttacac": 117, "atatatacat": 119, "atatatat": 747, "atatatgttt": 117, "atatgaacaaa": 995, "atattacaac": 117, "atcaaaaggg": 117, "atcaccgcta": 117, "atcactgaaa": 117, "atcataacta": 117, "atccatatat": 117, "atcggcgat": 577, "atgagccatg": 117, "atgc": 799, "atgcactagg": 117, "atgcatgcat": 121, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 121, "atgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgcatgc": 121, "atgccactttaa": [331, 332], "atgccccttc": 117, "atggca": 747, "atggcc": 747, "atggcg": 747, "atggct": 747, "atggtatgaa": 117, "atgtgtatttga": 990, "atgttgtagt": 117, "atl": [332, 345, 507], "atla": 559, "atom": [805, 839], "att": [296, 366, 417, 471], "attach": [141, 143, 867], "attagaaaga": 117, "attcgttgtg": 117, "attctggaac": 117, "attempt": [55, 118, 127, 170, 217, 271, 324, 391, 443, 499, 543, 568, 617, 642, 760, 830, 867, 880, 904], "attr": [121, 805, 839, 890, 918], "attr_1": 918, "attr_n": 918, "attribut": [2, 28, 56, 112, 117, 118, 120, 121, 124, 126, 127, 128, 131, 173, 191, 200, 201, 216, 220, 238, 256, 275, 280, 328, 334, 346, 351, 394, 397, 402, 447, 450, 455, 504, 509, 514, 545, 547, 558, 573, 600, 611, 621, 623, 634, 647, 670, 703, 714, 749, 758, 769, 776, 779, 805, 839, 846, 847, 848, 849, 862, 866, 869, 873, 876, 890, 918, 926, 931, 933, 934, 937, 944, 965, 990], "attribute_nam": 918, "attributeerror": [509, 933], "atttcagggt": [118, 125], "aucauaacua": 117, "aug": 118, "augccacuuuaa": [334, 345, 506, 507], "auguguauuu": 990, "austral": 652, "australian": 649, "auth": 130, "author": [94, 120, 128, 509, 581], "auto": [170, 328, 394, 447, 504, 545], "automat": [16, 45, 48, 54, 55, 59, 122, 126, 127, 155, 165, 191, 217, 219, 271, 274, 318, 324, 333, 385, 391, 396, 437, 443, 449, 493, 499, 508, 538, 543, 546, 568, 574, 599, 617, 622, 642, 648, 749, 760, 761, 830, 845, 872, 904, 925, 988], "auxilari": 130, "av": 658, "avail": [1, 107, 114, 118, 119, 120, 124, 127, 129, 159, 160, 328, 334, 343, 394, 447, 504, 545, 559, 623, 649, 650, 651, 652, 653, 692, 773, 777, 805, 839, 928, 988, 995], "averag": [582, 586, 658, 659, 767, 771, 829, 900, 926], "averagegradientanova": 658, "avg": 658, "avoid": [16, 127, 128, 130, 215, 748, 771, 923, 924], "aw": [0, 94], "awar": [47, 94, 127, 509], "awesom": 995, "awgh": 0, "ax": [659, 681, 692, 725, 748, 759, 762, 763, 782, 792, 799, 820], "axes3d": 759, "axi": [35, 50, 80, 96, 122, 547, 692, 736, 749, 759, 767, 774, 777, 782, 790, 791, 792, 793, 794, 795, 796, 798, 799, 802, 803, 805, 810, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 829, 831, 832, 833, 834, 835, 836, 839, 842, 844, 931], "axis_label": [1, 759], "b": [1, 16, 49, 54, 56, 57, 58, 78, 79, 80, 90, 94, 111, 119, 122, 123, 127, 171, 275, 397, 450, 509, 551, 558, 559, 562, 567, 570, 573, 597, 599, 604, 611, 616, 619, 621, 627, 634, 641, 644, 645, 647, 650, 651, 747, 759, 775, 776, 793, 795, 796, 799, 803, 828, 839, 848, 849, 861, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 880, 881, 882, 883, 887, 888, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 952, 988, 990, 993], "b1": [581, 586], "b2": [581, 586], "b3": [581, 586], "b4": [581, 586], "b5": [581, 586], "b6": [581, 586], "b7": [581, 586], "b_b": 123, "b_i": [102, 596], "ba": 128, "babp": 16, "bacilli": [886, 919], "bacillu": 128, "back": [94, 118, 121, 164, 168, 189, 190, 236, 237, 254, 255, 273, 863, 993], "backward": [78, 94, 105, 106, 127, 581], "bacteri": 581, "bacteria": [777, 822, 885, 886, 919], "bacteroidet": [822, 885, 886, 919], "baeza": 759, "baker": 78, "balanc": [94, 596], "band": 16, "bar": [127, 796, 821, 831, 841, 842, 952, 995], "barcod": [793, 795, 799], "barker": 94, "barlow": 596, "base": [1, 54, 61, 64, 69, 72, 73, 77, 78, 82, 83, 88, 89, 90, 94, 97, 99, 105, 106, 113, 114, 118, 120, 124, 126, 127, 191, 212, 220, 256, 267, 275, 315, 346, 382, 397, 434, 450, 490, 509, 535, 551, 600, 604, 627, 649, 651, 652, 653, 657, 692, 762, 763, 770, 773, 775, 776, 777, 779, 795, 803, 835, 846, 870, 882, 883, 926, 952, 990, 991, 993, 995], "base1": 334, "base2": 334, "base3": 334, "basi": [587, 588, 596, 597], "basic": [60, 80, 114, 115, 657, 749, 759, 805, 839], "baz": [796, 952], "bb": 775, "bbb": 119, "bbf": 119, "bbx": 119, "bc_dm": 1, "bct": 129, "becam": 123, "becaus": [1, 47, 53, 54, 78, 105, 106, 114, 118, 119, 120, 123, 125, 126, 127, 130, 256, 280, 315, 344, 351, 382, 402, 434, 455, 490, 509, 514, 535, 581, 651, 763, 768, 770, 772, 775, 867, 872, 875, 919], "becom": [1, 79, 118, 119, 123, 127, 201, 795, 822], "been": [0, 60, 61, 62, 67, 111, 118, 119, 120, 125, 161, 163, 167, 170, 256, 269, 311, 315, 323, 379, 382, 390, 430, 434, 442, 486, 490, 498, 509, 535, 581, 651, 657, 778, 805, 839, 844, 903], "befor": [1, 47, 118, 122, 127, 128, 304, 305, 344, 479, 480, 593, 650, 651, 777, 795, 901, 920, 993, 995], "begin": [16, 117, 118, 119, 120, 124, 127, 128, 142, 191, 256, 344, 777], "behav": [275, 397, 450, 651], "behavior": [51, 52, 54, 60, 61, 62, 118, 119, 120, 127, 170, 310, 312, 328, 344, 378, 380, 394, 429, 431, 447, 485, 487, 504, 509, 532, 533, 545, 649, 651, 653, 871, 995], "being": [1, 16, 45, 47, 48, 60, 61, 62, 78, 103, 107, 118, 119, 125, 129, 256, 270, 596, 653, 657, 747, 776, 795, 839, 848, 849, 869, 873, 876, 909, 988, 990], "bell": 97, "belong": [16, 70, 74, 121, 581, 586, 649, 652, 653, 795], "below": [116, 118, 119, 123, 125, 127, 128, 129, 256, 334, 346, 509, 650, 651, 759, 776, 805, 839, 847], "benefit": 586, "benjamini": [581, 586], "berger": 70, "best": [16, 60, 61, 62, 63, 64, 65, 84, 85, 578, 650, 762, 929], "beta": [107, 108, 110, 117, 987], "beta_divers": [1, 103, 105, 106, 108, 110, 111], "betadisp": 653, "bethesda": 118, "better": [118, 762, 763, 988], "between": [1, 16, 61, 64, 74, 79, 80, 84, 95, 102, 105, 106, 107, 111, 112, 118, 119, 120, 122, 125, 128, 129, 204, 218, 293, 298, 319, 320, 321, 322, 363, 368, 386, 387, 388, 389, 414, 419, 438, 439, 440, 441, 468, 473, 494, 495, 496, 497, 526, 528, 539, 540, 541, 542, 547, 551, 563, 575, 576, 577, 581, 586, 596, 599, 600, 604, 614, 623, 627, 638, 649, 650, 651, 652, 653, 654, 656, 657, 692, 762, 763, 764, 770, 773, 776, 777, 782, 820, 847, 862, 870, 871, 872, 878, 887, 897, 916, 917, 927, 990, 993], "bf00039495": 117, "bh": [581, 586], "bia": [72, 73, 586], "bias": [72, 73, 586], "bias_correct": [72, 73], "bifurc": [123, 597, 884], "bigoplu": 588, "bin": [747, 795, 828], "bin_": 747, "bin_f": [747, 795], "binari": [130, 131, 141, 142, 143, 170, 596, 597, 657, 762, 770, 825, 920, 952], "binary_dm": [568, 574, 617, 622, 642, 648], "binomi": [776, 777], "bio": [0, 1, 51, 52, 55, 59, 60, 63, 66, 67, 78, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 129, 217, 219, 271, 274, 310, 312, 324, 331, 332, 333, 334, 344, 345, 378, 380, 391, 396, 429, 431, 443, 449, 485, 487, 499, 506, 507, 508, 532, 533, 543, 546, 568, 574, 575, 617, 622, 642, 648, 650, 748, 760, 761, 830, 835, 845, 904, 925, 928, 990, 994], "biocor": [105, 106, 759], "biodivers": [1, 76, 78, 94], "bioinformat": [78, 94, 119, 125, 127, 867], "biol": [60, 63, 78, 82, 94, 114, 115, 117, 120, 592, 598], "biolog": [1, 53, 60, 61, 62, 89, 94, 95, 99, 101, 118, 119, 121, 123, 126, 191, 295, 296, 297, 299, 300, 303, 306, 307, 308, 311, 323, 365, 366, 367, 369, 370, 373, 374, 375, 376, 379, 390, 416, 417, 418, 420, 421, 424, 425, 426, 427, 430, 442, 470, 471, 472, 474, 475, 478, 481, 482, 483, 486, 498, 509, 547, 776, 779, 806, 846, 927, 987, 991, 992], "biologi": [94, 95, 99, 344, 657, 867, 880, 926, 927], "biom": [127, 779, 785, 792, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 987], "biom_format": [779, 846], "biom_open": [805, 839], "biometr": [90, 653], "biometrika": [69, 81], "bioperl": [119, 125], "biopython": 119, "biosci": [592, 598], "bioscienc": 870, "biotechnologi": [118, 129], "biowulf": 126, "biplot": [124, 762, 770], "biplot_scor": [749, 931], "bit": [97, 114, 115, 127], "bitscor": [114, 115], "bitting": 94, "biz": 796, "blackwel": 89, "blank": [118, 119, 123, 124, 125, 127, 173, 188, 220, 235, 238, 253, 256, 269, 272, 567, 616, 641], "blast": [61, 62, 64, 65, 118], "blast6": 115, "blastcgihelp": 118, "blastedbio": 114, "blastn": 115, "blastp": 115, "block": [62, 65, 108, 559, 952], "block_siz": 952, "blocksiz": 108, "blogspot": 114, "blosum": [62, 65, 397, 547, 559], "blosum45": 559, "blosum50": 559, "blosum62": [547, 559], "blosum80": 559, "blosum90": 559, "bmi": 777, "bob": 509, "bodi": [1, 759], "body_sit": [1, 759], "boilerpl": 130, "bologna": 80, "bone": 776, "bonferroni": [581, 586], "boniferroni": [581, 586], "boogaart": 596, "book": [114, 115, 118], "bool": [14, 16, 29, 30, 33, 42, 45, 48, 50, 51, 52, 53, 57, 60, 61, 62, 72, 73, 78, 94, 103, 105, 106, 107, 108, 111, 141, 142, 143, 162, 166, 174, 180, 184, 187, 189, 190, 191, 192, 198, 204, 210, 212, 214, 218, 221, 227, 231, 234, 236, 237, 239, 245, 249, 252, 254, 255, 257, 263, 265, 273, 275, 276, 277, 280, 282, 289, 292, 293, 295, 297, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 327, 328, 329, 335, 341, 347, 348, 351, 353, 360, 363, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 402, 404, 411, 414, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 455, 457, 464, 467, 468, 470, 472, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 503, 504, 505, 509, 510, 511, 514, 516, 523, 526, 529, 530, 531, 532, 533, 535, 536, 537, 539, 540, 541, 542, 544, 545, 548, 549, 556, 558, 561, 577, 581, 587, 588, 592, 598, 600, 601, 602, 609, 611, 613, 624, 625, 632, 634, 637, 640, 651, 654, 657, 692, 703, 767, 768, 770, 771, 775, 776, 778, 795, 798, 802, 803, 805, 806, 814, 815, 816, 817, 825, 826, 827, 829, 832, 837, 838, 839, 842, 844, 865, 870, 871, 874, 888, 890, 891, 892, 894, 897, 900, 901, 902, 905, 917, 919, 920, 927, 931, 953], "boolean": [29, 106, 118, 121, 126, 275, 282, 295, 297, 300, 303, 315, 318, 320, 322, 323, 325, 353, 365, 367, 370, 373, 382, 385, 387, 389, 390, 392, 397, 404, 416, 418, 421, 424, 434, 437, 439, 441, 442, 444, 445, 450, 457, 470, 472, 475, 478, 490, 493, 495, 497, 498, 500, 509, 516, 535, 538, 540, 542, 544, 638, 803, 835], "bootstrap": 847, "both": [28, 46, 54, 56, 67, 72, 73, 74, 78, 94, 112, 113, 114, 115, 118, 119, 125, 127, 129, 162, 166, 216, 344, 563, 584, 585, 587, 588, 599, 614, 638, 640, 645, 650, 651, 652, 653, 768, 782, 792, 795, 799, 805, 820, 835, 839, 871, 872, 911, 920, 988, 990], "bound": [83, 84, 120, 121, 130, 191, 192, 200, 201, 204, 212, 213, 215, 216, 509, 581, 586, 774, 777], "bound_moieti": 120, "bowden": [275, 346, 397, 450, 509], "boxplot": 1, "bp": [117, 120], "braak": 763, "bracket": [102, 123], "brai": 1, "branch": [1, 78, 94, 106, 597, 847, 867, 868, 877, 918, 921, 927, 993], "braycurti": 1, "break": [275, 397, 450], "bren": 596, "brillouin": 71, "broader": 748, "broadinstitut": 118, "broken": [46, 926], "brows": 117, "bsd": 987, "bt": [119, 816], "btop": [114, 115], "buf_siz": 747, "buffer": [130, 170, 747], "buffer_s": 130, "bufferedrandom": 170, "bufferedread": [131, 141, 142, 170], "bufferedwrit": [131, 143, 170], "bui": 987, "build": [201, 596, 840], "buildilrbas": 596, "built": [2, 16, 28, 131, 144, 173, 191, 201, 220, 238, 256, 275, 334, 346, 397, 450, 509, 547, 600, 623, 659, 670, 681, 692, 703, 714, 725, 736, 749, 779, 847, 872, 911, 933, 953, 965, 976, 988], "bulletin": 926, "busi": 130, "bwpd_": 94, "by_id": 835, "by_nam": [328, 394, 447, 504, 545, 547, 564], "bypass": [78, 103, 105, 106, 107], "byte": [170, 325, 392, 444, 500, 544], "byteio": 113, "bytesio": [113, 170, 171, 952], "bz2": 170, "bzh91ai": 171, "b\u00e4hler": [592, 598], "c": [1, 2, 16, 28, 46, 53, 54, 56, 57, 66, 69, 78, 79, 80, 81, 82, 94, 95, 97, 99, 105, 106, 111, 117, 118, 119, 123, 125, 127, 128, 129, 143, 275, 285, 290, 296, 302, 304, 305, 356, 361, 366, 372, 397, 407, 412, 417, 423, 450, 460, 465, 471, 477, 479, 480, 509, 519, 524, 530, 547, 558, 562, 565, 567, 570, 573, 578, 580, 585, 592, 593, 594, 595, 597, 598, 599, 611, 616, 619, 621, 634, 641, 644, 645, 647, 650, 651, 759, 769, 775, 776, 793, 795, 796, 848, 849, 861, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 880, 881, 882, 883, 887, 888, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 920, 921, 922, 923, 924, 926, 927, 990, 993], "c_": 69, "ca": [47, 124, 749, 763, 770], "caa40058": 117, "caaatgtgaa": 117, "caacgtggcc": 117, "caaggaagat": 117, "caagggctgc": 117, "cabcacc": 119, "cac": [308, 316, 376, 383, 427, 435, 483, 491, 536], "cacaattact": 117, "cacaauuacu": 117, "cach": [864, 869, 875, 879, 880, 881, 883, 890, 899, 903], "cache_attr": [875, 890], "cache_attrnam": 869, "cache_typ": 869, "caggcc": 995, "cagttgaagc": 117, "cagtttgatg": 117, "caguugaagc": 117, "caguuugaug": 117, "cajo": 763, "calcul": [16, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 111, 112, 304, 305, 479, 480, 581, 586, 589, 597, 598, 649, 650, 651, 652, 653, 657, 681, 692, 736, 767, 771, 774, 776, 777, 819, 823, 870, 877, 916, 987], "call": [1, 54, 78, 79, 84, 85, 105, 106, 116, 118, 125, 128, 130, 170, 191, 293, 301, 304, 325, 344, 363, 371, 392, 414, 422, 444, 468, 476, 479, 500, 509, 526, 529, 544, 640, 650, 651, 747, 763, 773, 803, 863, 865, 866, 869, 880, 881, 883, 896, 897, 903, 912, 917, 924, 951, 953, 954, 964, 988, 995], "callabl": [16, 28, 45, 48, 56, 103, 107, 108, 111, 563, 581, 614, 638], "callback": [954, 995], "caller": [55, 59, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 680, 713, 724, 760, 761, 830, 843, 845, 904, 925], "calucul": 653, "can": [0, 1, 16, 28, 53, 56, 60, 61, 62, 66, 67, 74, 78, 79, 94, 103, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 170, 191, 200, 201, 216, 256, 293, 298, 300, 315, 325, 363, 368, 370, 382, 392, 414, 419, 421, 434, 444, 468, 473, 475, 490, 500, 509, 526, 528, 535, 544, 547, 551, 559, 575, 578, 581, 586, 596, 599, 600, 604, 623, 627, 649, 650, 651, 653, 654, 655, 658, 748, 759, 762, 767, 768, 769, 770, 773, 775, 776, 777, 782, 792, 796, 805, 817, 820, 829, 839, 842, 847, 868, 870, 878, 908, 911, 918, 926, 927, 928, 932, 933, 953, 976, 990, 993, 995], "cancer": 651, "candid": [334, 777], "cannot": [16, 28, 45, 48, 118, 119, 122, 123, 127, 162, 163, 166, 167, 170, 256, 293, 346, 363, 414, 468, 526, 581, 649, 650, 651, 652, 653, 747, 759, 775, 777, 778, 880, 883, 911, 988], "canon": [275, 327, 393, 397, 446, 450, 503, 547, 763, 770, 779, 846, 987], "captur": [329, 395, 448, 505], "cardin": 932, "care": [1, 47, 118, 120, 653], "carlo": 773, "carol": 509, "casava": 126, "casava_ug_15011196b": 126, "case": [1, 47, 60, 61, 62, 70, 108, 113, 118, 123, 125, 127, 129, 131, 256, 270, 275, 305, 318, 328, 385, 394, 437, 447, 450, 480, 493, 504, 538, 545, 559, 581, 586, 600, 651, 657, 762, 767, 769, 777, 867, 900, 926, 953, 954, 988, 993], "cast": [1, 123, 256, 293, 363, 414, 468, 526, 599, 600, 655, 759, 821], "cat": [317, 384, 436, 492, 537, 775, 776], "catatttgct": 117, "catcgatcgatcgatgcatgcatgcatg": 118, "catcgtc": 118, "categor": [127, 173, 256, 265, 269, 273, 649, 652, 748, 759], "categori": [1, 127, 128, 658, 659, 669, 670, 680, 691, 692, 702, 703, 714, 724, 725, 735, 736, 746, 748, 759, 773, 775, 776, 790, 795, 839, 989], "categoricalmetadatacolumn": [220, 256, 267], "categoryresult": 703, "catttagga": 126, "catttgaaaa": 117, "cauauuugcu": 117, "caugcaucguacguacgcaugac": 116, "caus": [16, 127, 170, 344], "caution": 111, "cauucguacguacgcaugac": 116, "caveat": [118, 578], "cb": [128, 775], "cc": [128, 325, 334, 392, 444, 500, 544], "cca": [124, 748, 749, 762, 770], "cca1": 748, "cca2": 748, "cca3": 748, "cca4": 748, "cca5": 748, "cca6": 748, "cca7": 748, "cca8": 748, "cca9": 748, "ccaatggtac": 117, "ccaggtcgat": 117, "ccc": [277, 348, 399, 452, 511], "cccataaata": 117, "cccc": [315, 382, 434, 490, 535], "ccccchhhhhhhhhhhhh": 128, "ccchhhhhhhhhhhhhhh": 128, "cccttaggtc": 117, "ccg": 56, "ccggac": 995, "ccgggcacggtat": 118, "ccgwllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 334, "ccora": 763, "ccyt": 119, "cd": [60, 117, 120, 344], "cde": 129, "cell": [127, 776], "cell_lin": 776, "center": [118, 129, 582, 650, 762, 764, 768, 771], "centr": [578, 584, 585, 766], "centroid": 653, "cepa": 867, "certain": [78, 87, 103, 105, 106, 107, 162, 164, 166, 168, 256, 275, 397, 450, 576, 922], "cg": [46, 325, 392, 444, 500, 509, 544], "cga": [316, 383, 435, 491, 536], "cgac": 116, "cgagc": [282, 353, 404, 457, 516], "cgaggccgggac": 118, "cgatgtc": 118, "cgatgtcgatcgatcgatcgatcag": 118, "cgau": 116, "cgcgaugcaugcau": 116, "cgggacactc": [118, 125], "cgggcacggt": [118, 125], "cgggcasdgca": 126, "cgggcattgca": 126, "cggtacgctt": [118, 125], "cgi": [61, 62, 64, 65, 334, 342, 343], "cgt": [316, 383, 435, 491, 536], "cgtcacttat": 117, "cgttacgctt": [118, 125], "cgttcagggt": [118, 125], "cgttta": 576, "cgugcaugcau": 116, "chain": 120, "challeng": 78, "chanc": [547, 657], "chang": [83, 118, 200, 201, 344, 509, 559, 581, 586, 649, 747, 842, 869, 903, 995], "chao": [69, 72, 94], "chao1": 73, "chao1_ci": 72, "chapter": [118, 769], "char": [302, 329, 372, 395, 423, 448, 477, 505, 530], "charact": [16, 33, 46, 47, 50, 54, 67, 114, 115, 116, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 256, 275, 280, 282, 285, 287, 289, 290, 291, 295, 296, 297, 300, 302, 303, 304, 305, 306, 307, 308, 311, 318, 323, 325, 327, 328, 334, 344, 346, 351, 353, 356, 358, 360, 361, 362, 365, 366, 367, 370, 372, 373, 374, 375, 376, 379, 385, 390, 392, 393, 394, 397, 402, 404, 407, 409, 411, 412, 413, 416, 417, 418, 421, 423, 424, 425, 426, 427, 430, 432, 437, 442, 444, 445, 446, 447, 450, 455, 457, 460, 462, 464, 465, 466, 470, 471, 472, 475, 477, 478, 479, 480, 481, 482, 483, 486, 493, 498, 500, 503, 504, 509, 514, 516, 519, 521, 523, 524, 525, 530, 538, 544, 545, 547, 562, 565, 576, 805, 839, 990], "character": 586, "charg": [118, 125], "charlson": 94, "chase": 76, "check": [16, 119, 142, 162, 166, 192, 201, 204, 215, 548, 549, 587, 588, 599, 600, 601, 602, 623, 624, 625, 658, 762, 763, 776, 802, 814, 930, 931, 951, 995], "check_length": 995, "checksum": 952, "chemic": [547, 777], "chen": [69, 94], "chf": [332, 345, 507], "chi": [762, 763], "chichest": 578, "child": [123, 201, 293, 363, 414, 468, 526, 596, 847, 868, 899, 903, 921, 993], "child1": [864, 879], "child2": [864, 879], "child_index": 918, "children": [123, 597, 847, 852, 856, 864, 868, 879, 881, 888, 892, 899, 903, 905, 912], "chimp": [118, 125], "chisquar": 777, "chiu": 94, "choic": [45, 48, 122, 768], "choos": [78, 127, 763, 773], "chosen": [325, 392, 444, 500, 544, 590, 650, 759, 770, 778], "christoph": 119, "chunk": 125, "ci": [68, 84, 586], "ci_typ": 84, "cigar": [2, 16], "circuit": 995, "circumst": [80, 397, 776], "citat": 129, "ciufo": 129, "cl": [141, 143, 156, 158, 159, 160, 346, 937], "clade": [906, 913, 926, 993], "cladogenesi": 657, "claim": [163, 167], "clarifi": 78, "clariti": 123, "clark": [649, 650], "class": [2, 16, 28, 51, 52, 67, 69, 72, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 141, 143, 144, 156, 158, 159, 160, 161, 173, 191, 201, 220, 238, 256, 275, 293, 310, 312, 334, 346, 363, 378, 380, 397, 414, 429, 431, 450, 468, 485, 487, 509, 526, 532, 533, 547, 581, 600, 623, 659, 670, 681, 692, 703, 714, 725, 736, 749, 779, 800, 803, 826, 841, 846, 847, 869, 926, 933, 953, 965, 976, 987, 988, 990], "classic": 129, "classif": [129, 759], "classmethod": [49, 55, 213, 217, 269, 271, 293, 324, 343, 363, 391, 414, 443, 468, 499, 526, 543, 559, 562, 563, 564, 565, 568, 614, 617, 638, 642, 760, 805, 806, 830, 884, 885, 886, 904], "classproperti": 346, "claus": 268, "clean": [170, 864, 903], "clear": 126, "clinic": [777, 989], "clone": 117, "clone_lib": 117, "close": [55, 59, 79, 118, 119, 123, 125, 128, 170, 171, 217, 219, 256, 271, 274, 324, 333, 344, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 581, 617, 622, 642, 648, 680, 713, 724, 760, 761, 830, 845, 904, 925, 952], "closeabl": 170, "closefd": 130, "closer": [1, 995], "clostridia": [886, 919], "closur": [580, 593, 594, 595], "clover": 117, "clr": [578, 585, 586, 597], "clustal": [55, 59, 988], "clustal_f": 116, "clustalw": 116, "cluster": [1, 651, 653, 884, 990], "cmap": [1, 567, 616, 641, 759], "cnt": 776, "co": 657, "co2": 776, "cock": 119, "cocryst": 120, "code": [116, 118, 119, 120, 129, 216, 275, 328, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 394, 397, 447, 450, 502, 504, 506, 507, 545, 657, 778, 835, 870, 926, 928, 990], "codon": [120, 129, 331, 334, 344, 345, 506, 547], "codon_start": 120, "coeff": 651, "coeffici": [69, 650, 651, 657, 749, 770, 773, 872], "coercion": [293, 363, 414, 468, 526], "cogent": 877, "col": [600, 789, 800, 815, 841], "col1": [54, 127], "col2": [54, 127], "col3": [54, 127], "collabor": 120, "collaps": [127, 868], "collapse_f": 795, "collapsed_id": [795, 805, 839], "collat": 654, "collect": [16, 95, 99, 101, 170, 256, 558, 596, 611, 634, 747], "collinear": [748, 763], "colon": 123, "color": [1, 84, 85, 567, 616, 641, 759], "colorbar": [567, 616, 641, 759], "colormap": [567, 616, 641, 759], "colormaps_refer": 759, "column": [1, 16, 28, 52, 53, 54, 107, 112, 113, 118, 120, 121, 124, 125, 128, 129, 173, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 220, 221, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 273, 293, 312, 318, 363, 380, 385, 414, 431, 437, 468, 487, 493, 509, 526, 533, 538, 547, 551, 566, 570, 579, 580, 581, 586, 587, 588, 599, 604, 615, 619, 627, 639, 640, 644, 649, 650, 651, 652, 653, 654, 655, 657, 692, 736, 748, 759, 762, 763, 764, 766, 770, 771, 775, 776, 782, 793, 795, 800, 805, 806, 811, 815, 816, 817, 822, 831, 832, 837, 838, 839, 841, 885, 889, 930, 931, 987], "column_missing_schem": [256, 269], "column_typ": [265, 269], "columnwis": 764, "com": [83, 114, 115, 116, 650, 952], "comb": 900, "combin": [16, 28, 45, 48, 120, 586, 650, 749, 763, 817], "come": [128, 657, 914], "comma": [121, 122, 123], "command": [127, 129, 344], "comment": [117, 118, 120, 121, 122, 128, 129, 256], "comment_char": 123, "commit": 773, "common": [46, 51, 52, 63, 78, 94, 114, 118, 119, 120, 127, 128, 129, 310, 312, 378, 380, 429, 431, 485, 487, 532, 533, 579, 600, 692, 793, 794, 847, 872, 880, 893, 895, 918, 919, 927, 990, 993, 994], "commonli": [123, 127, 547, 653, 770, 993], "commun": [69, 74, 78, 94, 97, 102, 105, 106, 586, 599, 649, 650, 652, 653, 748, 759, 763, 770, 777, 987], "compact": 865, "compani": 776, "compar": [1, 88, 105, 111, 114, 115, 218, 314, 319, 320, 321, 322, 325, 386, 387, 388, 389, 392, 438, 439, 440, 441, 444, 489, 494, 495, 496, 497, 500, 539, 540, 541, 542, 544, 549, 556, 581, 599, 602, 609, 625, 632, 651, 657, 775, 776, 777, 870, 871, 872, 900, 930, 931, 990, 993], "compare_rfd": [871, 872], "compare_subset": [870, 872, 913, 914, 993], "compare_tip_dist": [870, 871, 878, 887, 916, 993], "comparison": [105, 106, 581, 586, 657, 775, 870, 930, 993], "compat": [78, 94, 105, 106, 127, 129, 334, 581], "compil": [301, 329, 371, 395, 422, 448, 476, 505, 529, 778], "complement": [314, 326, 344, 489, 501, 990], "complement_map": [292, 467], "complet": [66, 84, 85, 119, 120, 123, 773, 929, 988], "complex": [123, 995], "compliant": [275, 397, 450], "complic": [547, 988], "compon": [578, 580, 590, 591, 592, 593, 594, 595, 725, 749, 762, 768, 995], "compos": [47, 119, 126, 256], "composit": [74, 78, 94, 170, 763, 987], "compound": 586, "comprehens": 129, "compress": [113, 130, 170, 805, 815, 816, 817, 839], "compresslevel": [130, 170], "comput": [0, 1, 46, 47, 50, 69, 72, 78, 85, 96, 102, 103, 104, 105, 106, 107, 108, 111, 201, 298, 302, 368, 372, 419, 423, 473, 477, 528, 530, 563, 575, 576, 577, 581, 586, 592, 596, 597, 598, 599, 614, 638, 649, 650, 651, 652, 653, 654, 657, 658, 659, 669, 691, 692, 702, 703, 714, 725, 735, 736, 746, 748, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 878, 914, 916, 926, 952, 990, 993], "computation": 16, "concat": [53, 54], "concaten": [53, 128, 213, 293, 363, 414, 468, 526, 796], "concentr": [74, 777], "concept": [87, 596], "conceptu": [119, 652], "concern": [16, 122], "concis": 581, "conclud": 581, "concret": 220, "condens": [623, 635, 640, 645], "condensed_form": [623, 640, 645], "condit": [1, 84, 85, 776], "confid": [1, 68, 73, 77, 84, 586, 773, 774, 847, 867], "confirm": [1, 649, 653, 777], "conflict": 875, "conform": 346, "confus": 763, "conjunct": 653, "connect": [78, 80, 94, 123, 847, 896, 903], "consens": 926, "consensu": 926, "consensus_tre": 926, "conserv": [78, 83, 84, 94, 116, 293, 363, 414, 468, 526, 581, 599], "consid": [47, 69, 78, 83, 94, 105, 106, 118, 123, 256, 280, 315, 351, 382, 402, 434, 455, 490, 514, 535, 576, 578, 593, 653, 654, 747, 775, 776, 777, 930, 953], "consider": [83, 94, 220, 256, 776], "consist": [115, 118, 119, 121, 124, 125, 127, 128, 129, 265, 328, 394, 447, 504, 509, 545, 547, 776, 897, 917], "constant": [77, 578, 581, 635, 651, 775], "constitut": [1, 547, 565], "constrain": [749, 763], "constraint": [124, 749, 763, 770], "construct": [49, 58, 120, 129, 185, 189, 190, 191, 192, 220, 232, 236, 237, 250, 254, 255, 256, 273, 547, 562, 565, 571, 592, 599, 748, 792, 793, 794, 795, 796, 811, 820, 826, 828, 829, 833, 834, 841, 842, 875, 885, 886, 927, 987, 988, 993], "constructor": [28, 45, 48, 56, 116, 118, 119, 120, 125, 126, 128, 142, 155, 165, 275, 318, 334, 385, 397, 437, 450, 493, 509, 538, 547, 655], "consum": [28, 48, 143, 275, 334, 397, 450, 509], "consumpt": [654, 768, 795], "contain": [1, 16, 28, 46, 48, 54, 60, 61, 62, 63, 64, 65, 66, 69, 103, 104, 107, 108, 111, 112, 114, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 161, 173, 183, 185, 189, 190, 230, 232, 236, 237, 238, 248, 250, 254, 255, 256, 265, 266, 270, 273, 275, 277, 282, 295, 297, 302, 303, 306, 307, 308, 311, 315, 316, 317, 323, 325, 328, 334, 348, 353, 365, 367, 372, 373, 374, 375, 376, 379, 382, 383, 384, 390, 392, 394, 397, 399, 404, 416, 418, 423, 424, 425, 426, 427, 430, 432, 434, 435, 436, 442, 444, 445, 447, 450, 452, 457, 470, 472, 477, 478, 481, 482, 483, 486, 490, 491, 492, 498, 500, 504, 511, 516, 530, 535, 536, 537, 544, 545, 561, 563, 567, 575, 576, 581, 596, 597, 599, 613, 614, 616, 637, 638, 641, 645, 649, 650, 651, 652, 653, 654, 656, 658, 748, 759, 763, 795, 805, 806, 835, 839, 865, 869, 877, 907, 926, 927, 951, 954, 976, 990, 993], "content": [28, 46, 117, 118, 119, 120, 121, 123, 127, 130, 141, 142, 143, 270, 275, 292, 293, 296, 299, 326, 330, 363, 366, 369, 414, 417, 420, 450, 467, 468, 471, 474, 501, 502, 526, 990], "context": [1, 16, 171, 172, 576, 759, 927], "contextu": 953, "contigu": [121, 191, 315, 382, 434, 490, 535], "conting": [586, 770, 779, 843], "continu": [60, 61, 62, 748], "contrast": [94, 596], "contribut": [46, 94, 657, 762, 767], "control": [54, 118, 649, 651, 652, 658, 770, 773, 775, 776, 777, 793, 803, 820], "control_cat": [775, 776], "controversi": 90, "conveni": [0, 16, 55, 59, 93, 164, 168, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925, 994], "convent": [78, 105, 106, 114, 117, 120], "convers": [119, 170, 635, 820], "convert": [1, 114, 116, 117, 118, 120, 123, 125, 128, 170, 189, 190, 220, 236, 237, 254, 255, 273, 275, 298, 327, 328, 368, 393, 394, 397, 419, 446, 447, 450, 473, 503, 504, 509, 528, 545, 600, 640, 650, 778, 822, 827, 829, 837, 838, 867, 932], "convert_underscor": 123, "convienc": [893, 895], "coo_matrix": 597, "coord": [658, 659, 681, 692, 725, 736], "coord_data": 658, "coordin": [1, 120, 126, 191, 201, 204, 212, 213, 218, 586, 597, 653, 658, 692, 725, 736, 749, 759, 762, 768, 769, 770], "copi": [28, 31, 32, 118, 125, 128, 201, 202, 203, 278, 279, 325, 349, 350, 392, 400, 401, 444, 453, 454, 500, 509, 512, 513, 544, 569, 572, 600, 618, 620, 643, 646, 771, 778, 843, 848, 849, 876, 908, 909, 915, 923, 924, 947, 948, 949], "copy_from": 201, "copyright": [118, 125], "corbet": 79, "cornish": [275, 346, 397, 450, 509], "cornwel": 94, "corr": 1, "corr_coeff": [651, 657], "correct": [72, 73, 80, 118, 581, 586, 903, 909, 988], "correl": [1, 592, 598, 599, 650, 651, 654, 656, 657, 749, 763, 764, 770, 773, 777, 872, 993], "correspond": [1, 53, 78, 94, 105, 106, 118, 119, 121, 126, 128, 163, 167, 186, 233, 251, 256, 305, 318, 334, 344, 385, 437, 480, 493, 506, 507, 538, 551, 581, 596, 604, 627, 749, 762, 763, 766, 777, 795, 800, 805, 807, 809, 810, 821, 822, 839, 841, 842, 847, 880, 885, 889, 898, 919, 926], "cospeci": 657, "cost": [592, 598], "costli": 0, "could": [1, 28, 85, 118, 119, 126, 130, 162, 164, 166, 168, 581, 586, 600, 649, 651, 652, 653, 654, 657, 759, 775, 834, 893, 895, 928, 929, 988], "count": [0, 28, 45, 48, 50, 54, 57, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 116, 118, 119, 125, 128, 302, 304, 305, 317, 319, 321, 372, 384, 386, 388, 423, 436, 438, 440, 477, 479, 480, 492, 494, 496, 530, 537, 539, 541, 577, 578, 581, 586, 657, 763, 769, 776, 777, 778, 795, 809, 825, 829, 835, 871, 872, 898, 926, 988], "counts2": 777, "counts_001": 773, "counts_010": 773, "counts_100": 773, "counts_interv": [773, 776, 777], "coupl": 201, "covari": [94, 764], "cover": [201, 559, 993], "coverag": [69, 77, 81, 85, 114, 115], "cprofil": 995, "cran": [596, 649, 650, 651, 652, 653], "crd": 118, "creat": [1, 16, 28, 45, 48, 49, 53, 55, 56, 57, 58, 117, 118, 121, 123, 125, 127, 144, 155, 165, 170, 171, 189, 190, 191, 201, 212, 213, 217, 236, 237, 254, 255, 271, 273, 275, 324, 325, 346, 391, 392, 397, 443, 444, 450, 499, 500, 509, 543, 544, 562, 563, 565, 567, 568, 570, 571, 581, 590, 591, 599, 614, 616, 617, 619, 638, 641, 642, 644, 645, 655, 657, 692, 748, 759, 760, 779, 795, 802, 803, 809, 810, 812, 813, 815, 820, 821, 826, 827, 828, 830, 831, 833, 834, 836, 841, 842, 844, 846, 868, 869, 890, 904, 927, 990, 993, 995], "create_cach": 890, "create_d": [779, 846], "create_format": [130, 141, 142, 143], "creation": [805, 839, 840], "creation_d": [839, 840], "credibl": 586, "criteria": [184, 216, 231, 249, 268, 775, 922], "critic": [773, 774, 776, 777, 867], "crop": 129, "cross": 120, "cross_refer": 117, "csc": [782, 839], "csc_matrix": 839, "csr": [782, 839], "csr_matrix": 839, "csv": [114, 122, 988], "ctaa": 120, "ctaacccccttttctcaga": 0, "ctagctagta": 117, "ctataaaaaa": 120, "ctattatact": 117, "ctc": [328, 394, 447, 504, 545], "ctcaaaagtc": [328, 394, 447, 504, 545], "ctcaaaattc": 117, "ctcttctagt": 117, "ctgtttgtta": 117, "cttcatgtat": 117, "cttccaattt": 117, "cttgacatag": 117, "cttgatgata": 117, "cuaa": 120, "cual": 127, "cuauaaaaaa": 120, "cug": 344, "cuguuuguua": 117, "cultur": 776, "cumbersom": 127, "cumul": [83, 102, 116], "cuppini": 80, "curat": 129, "current": [112, 114, 117, 118, 119, 120, 125, 127, 128, 129, 201, 215, 256, 265, 332, 345, 507, 559, 581, 651, 736, 762, 768, 805, 839, 869, 882, 891, 892, 897, 987], "curti": 1, "curv": [80, 83, 90, 763, 773, 776, 777], "custom": [0, 1, 129, 275, 298, 334, 335, 346, 368, 397, 419, 450, 473, 528, 759, 805, 833, 839, 987, 990], "custom_metr": [298, 368, 419, 473, 528], "customsequ": 346, "cutoff": [581, 926], "cuucauguau": 117, "cuugacauag": 117, "cw": 128, "cy": 397, "cyanogen": 117, "cystein": 397, "cytokin": 776, "cytophagia": [886, 919], "cytosin": [275, 450], "czech": 867, "d": [1, 16, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 114, 115, 120, 123, 124, 275, 397, 450, 558, 562, 567, 573, 578, 579, 580, 581, 584, 585, 587, 588, 589, 592, 593, 594, 595, 596, 597, 598, 599, 611, 616, 621, 634, 641, 645, 647, 649, 650, 651, 652, 653, 657, 692, 714, 736, 749, 759, 767, 776, 777, 778, 779, 796, 811, 812, 832, 846, 848, 849, 862, 863, 865, 867, 868, 869, 870, 871, 873, 874, 876, 877, 878, 880, 881, 882, 883, 887, 893, 894, 895, 896, 897, 903, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 921, 922, 923, 924, 926, 927, 988, 990, 993, 995], "d1": [129, 990], "d136": 129, "d143": 129, "d2": 990, "d3": 990, "d_": [89, 99], "d_a": 820, "d_b": 820, "d_d": 123, "d_w": 102, "d_x": 651, "d_y": 651, "daili": 129, "danger": 1, "dash": 127, "data": [1, 54, 78, 80, 90, 94, 103, 105, 106, 107, 108, 111, 113, 114, 117, 119, 121, 122, 124, 126, 127, 128, 129, 170, 173, 220, 238, 256, 265, 275, 346, 397, 450, 509, 549, 551, 569, 578, 579, 580, 581, 582, 585, 586, 588, 590, 592, 596, 598, 600, 602, 604, 618, 623, 625, 627, 643, 650, 657, 658, 680, 713, 724, 747, 748, 759, 762, 763, 767, 773, 775, 776, 777, 779, 780, 782, 789, 790, 792, 795, 800, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 821, 824, 826, 827, 828, 829, 831, 833, 834, 836, 837, 838, 839, 841, 842, 843, 844, 885, 916, 920, 927, 951, 954, 987, 988, 989, 990, 995], "data_fh": 804, "data_fram": 650, "data_pump": 806, "data_typ": [805, 839], "databas": [114, 115, 117, 120, 127, 129, 191, 885], "datafram": [1, 28, 52, 107, 114, 115, 129, 189, 220, 236, 254, 256, 273, 275, 312, 380, 397, 431, 450, 487, 509, 533, 558, 570, 573, 581, 586, 611, 619, 621, 634, 644, 647, 649, 650, 652, 653, 654, 658, 692, 736, 748, 749, 759, 762, 763, 769, 770, 775, 776, 793, 822, 838, 885, 930, 990], "datapoint": 90, "dataset": [108, 112, 578, 586, 653, 748, 763, 768, 805, 839], "datatyp": [112, 747, 778], "date": [117, 805, 806, 839, 840], "datetim": [839, 840], "dayhoff": 559, "db": 118, "db_xref": [117, 120], "dbsourc": 117, "dbxref": [120, 121], "ddbj": 120, "ddl": [805, 839], "ddof": [592, 598, 767, 771], "de": [117, 128], "deal": [117, 169, 578, 590, 768, 988], "debug": [69, 953, 964, 995], "debug_post_st": 995, "debug_pre_st": 995, "debug_runtim": 995, "debug_trac": 995, "decemb": 119, "decid": [768, 995], "decim": [123, 127, 931], "declar": [124, 127], "decod": [119, 170], "decomposit": [94, 108], "decompress": 170, "decor": [130, 141, 142, 143, 201, 346, 869, 926, 933, 953, 965, 966, 976, 987], "decreas": 747, "deem": 763, "deep": [32, 70, 203, 278, 279, 349, 350, 400, 401, 453, 454, 509, 512, 513, 560, 572, 612, 620, 636, 646], "deepcopi": [32, 848, 849, 873, 923, 924], "deeper": [105, 106], "def": [116, 130, 141, 142, 143, 298, 346, 368, 419, 473, 528, 777, 995], "default": [0, 1, 16, 28, 45, 46, 48, 54, 56, 59, 60, 61, 62, 64, 65, 69, 73, 83, 90, 94, 97, 103, 107, 114, 118, 120, 121, 122, 123, 125, 126, 127, 130, 131, 141, 143, 156, 158, 184, 216, 219, 220, 231, 249, 256, 268, 274, 298, 315, 327, 328, 331, 332, 333, 334, 344, 345, 368, 382, 393, 394, 396, 419, 434, 446, 447, 449, 473, 490, 503, 504, 506, 507, 508, 528, 535, 545, 546, 558, 563, 567, 574, 579, 580, 581, 586, 587, 588, 590, 591, 600, 611, 614, 616, 622, 634, 638, 641, 648, 650, 651, 653, 654, 655, 692, 747, 759, 761, 767, 768, 770, 771, 778, 789, 795, 800, 803, 805, 810, 812, 815, 816, 817, 819, 820, 823, 825, 826, 827, 829, 833, 835, 839, 840, 841, 842, 844, 845, 872, 897, 916, 925, 926, 927, 930, 931, 951, 954, 976, 988, 990, 993, 995], "default_column": 114, "default_gap_char": [46, 47, 54, 346], "default_missing_schem": [256, 269], "default_write_format": 143, "defaultdict": 821, "defer": 201, "defin": [1, 28, 54, 56, 62, 65, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 111, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 191, 201, 215, 256, 280, 298, 316, 317, 327, 328, 334, 335, 342, 343, 351, 368, 383, 384, 393, 394, 402, 419, 435, 436, 446, 447, 455, 473, 491, 492, 503, 504, 514, 528, 536, 537, 545, 547, 559, 564, 567, 577, 579, 580, 584, 585, 587, 588, 589, 593, 594, 595, 600, 616, 641, 651, 654, 759, 773, 803, 805, 820, 828, 839, 844, 923, 924, 927, 930, 964, 988, 990, 993, 995], "definit": [1, 46, 74, 117, 118, 119, 120, 121, 129, 275, 292, 293, 296, 297, 299, 306, 307, 311, 323, 326, 329, 330, 331, 332, 334, 344, 345, 346, 363, 366, 367, 369, 374, 375, 379, 390, 395, 397, 414, 417, 418, 420, 425, 426, 430, 442, 448, 450, 467, 468, 471, 472, 474, 481, 482, 486, 498, 501, 502, 505, 506, 507, 526, 559, 805, 839, 927, 990, 994, 995], "definite_char": 346, "deflin": 118, "degap": [304, 305, 479, 480, 990], "degener": [46, 47, 117, 118, 119, 120, 121, 275, 292, 293, 295, 296, 299, 304, 305, 306, 307, 311, 323, 326, 327, 329, 330, 331, 332, 334, 344, 345, 346, 363, 365, 366, 369, 374, 375, 379, 390, 393, 395, 397, 414, 416, 417, 420, 425, 426, 430, 442, 446, 448, 450, 467, 468, 470, 471, 474, 479, 480, 481, 482, 486, 498, 501, 502, 503, 505, 506, 507, 526, 559, 990], "degenerate_map": [299, 346, 369, 420, 474, 990], "degenerate_mod": 47, "degre": [74, 94, 116, 586, 592, 598, 767, 774, 776], "deiman": 128, "del": [122, 327, 393, 446, 503, 748], "deleg": 852, "delet": [201, 890, 906, 934], "deleteri": 929, "delgado": [578, 596], "delim": 800, "delimit": [121, 122, 124, 126, 129, 188, 235, 253, 272, 599, 800, 804, 807, 841], "delta": [94, 590, 591, 767], "demograph": 989, "demonstr": [51, 52, 130, 310, 312, 378, 380, 429, 431, 485, 487, 532, 533], "dempqsv": [328, 394, 447, 504, 545], "demultiplex": 747, "den": 596, "denomin": [579, 596], "denominator_col": 579, "denominator_idx": [579, 580], "denot": [74, 94, 98, 101, 102, 118, 581, 586, 649, 652, 653], "dens": [113, 795, 798, 803, 806, 815, 816, 817, 826, 837, 838, 846], "densiti": 842, "dep": 773, "depend": [2, 73, 76, 77, 78, 94, 103, 105, 106, 107, 118, 119, 128, 141, 142, 143, 170, 305, 480, 551, 604, 627, 651, 653, 655, 714, 768, 805, 848, 849, 872, 873, 876, 920, 926, 953, 964, 988, 993, 995], "deprec": [66, 67, 78, 92, 94, 105, 106, 111, 311, 323, 379, 390, 430, 442, 486, 498, 581, 591], "depth": [94, 748, 773, 776, 777, 920, 993], "deriv": [61, 62, 64, 65, 117, 315, 382, 434, 490, 509, 535, 587, 588, 596, 776, 927], "derives_from": 121, "desc": 509, "descend": [57, 94, 218, 847, 877, 889, 897, 906, 913, 914, 917, 920, 993], "describ": [0, 1, 47, 60, 63, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 87, 94, 95, 98, 105, 106, 111, 113, 117, 118, 119, 120, 121, 124, 125, 127, 128, 188, 235, 253, 256, 269, 272, 315, 318, 382, 385, 434, 437, 490, 493, 509, 535, 538, 569, 592, 598, 599, 618, 635, 643, 651, 657, 769, 795, 801, 805, 839, 840, 889, 927, 989, 990, 993], "descript": [16, 69, 78, 83, 88, 89, 99, 103, 105, 106, 107, 112, 114, 118, 119, 120, 121, 123, 125, 127, 129, 173, 220, 238, 551, 604, 627, 839, 870, 926, 990, 993], "description_newline_replac": [118, 119], "descriptor": [120, 769, 947, 948, 949], "deseri": [599, 749], "design": [1, 108, 112, 113, 117, 127, 256, 599, 775], "desir": [80, 84, 114, 122, 768, 822, 834, 910, 995], "destin": 509, "detail": [16, 53, 54, 66, 67, 94, 108, 110, 111, 117, 118, 119, 120, 121, 125, 126, 128, 129, 130, 173, 220, 238, 256, 345, 509, 551, 604, 627, 650, 654, 759, 762, 763, 770, 927, 988], "detect": [118, 120, 127, 163, 167, 581, 651, 777, 792], "determin": [1, 30, 33, 42, 51, 52, 78, 94, 103, 105, 106, 107, 122, 130, 159, 160, 170, 174, 180, 183, 187, 221, 227, 230, 234, 239, 245, 248, 252, 256, 257, 263, 265, 266, 277, 280, 289, 306, 307, 308, 309, 310, 311, 312, 314, 335, 341, 348, 351, 360, 374, 375, 376, 377, 378, 379, 380, 399, 402, 411, 425, 426, 427, 428, 429, 430, 431, 432, 452, 455, 464, 481, 482, 483, 484, 485, 486, 487, 489, 511, 514, 523, 531, 532, 533, 556, 581, 609, 632, 653, 657, 747, 768, 773, 775, 776, 780, 795, 926, 995], "determinist": [79, 649, 653], "develop": [1, 2, 108, 111, 117, 127, 141, 142, 143, 581, 927, 987, 995], "deviat": [650, 767, 770, 771, 774], "df": [114, 115, 129, 570, 586, 619, 644, 649, 650, 653, 759, 774, 838], "di": [80, 990], "diag": 817, "diagnos": 995, "diagon": [112, 638, 645, 817], "diagram": 191, "dict": [16, 28, 49, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 117, 120, 142, 162, 163, 164, 166, 167, 168, 191, 212, 216, 217, 219, 256, 269, 271, 274, 275, 302, 317, 324, 331, 332, 333, 372, 384, 391, 396, 397, 423, 436, 443, 449, 450, 477, 492, 499, 506, 507, 508, 509, 530, 537, 543, 546, 547, 562, 568, 571, 574, 617, 622, 642, 648, 651, 654, 714, 760, 761, 790, 791, 805, 806, 807, 810, 820, 821, 830, 839, 844, 845, 885, 889, 898, 904, 918, 925, 953, 990, 995], "dict_of_metadata": 791, "dictionari": [49, 51, 56, 58, 67, 128, 129, 191, 202, 203, 212, 216, 310, 378, 429, 485, 509, 532, 562, 571, 651, 803, 885], "did": [69, 118, 126, 162, 166, 171, 995], "didn": [118, 995], "diet": 775, "differ": [0, 1, 33, 46, 47, 49, 60, 61, 62, 73, 78, 83, 95, 99, 105, 106, 115, 118, 119, 125, 128, 129, 130, 220, 277, 280, 289, 293, 294, 298, 313, 314, 319, 320, 321, 322, 325, 331, 334, 341, 348, 351, 360, 363, 364, 368, 381, 386, 387, 388, 389, 392, 399, 402, 411, 414, 415, 419, 433, 438, 439, 440, 441, 444, 452, 455, 464, 468, 469, 473, 488, 489, 494, 495, 496, 497, 500, 506, 511, 514, 523, 526, 527, 528, 534, 539, 540, 541, 542, 544, 551, 576, 581, 586, 599, 604, 627, 649, 652, 653, 657, 681, 736, 748, 762, 763, 768, 776, 777, 842, 870, 871, 930, 931, 947, 948, 949, 990, 993], "differenti": [581, 586], "difficult": 1, "digit": 127, "dimens": [40, 124, 125, 557, 579, 583, 587, 588, 610, 633, 653, 749, 758, 759, 768, 769], "dimension": [1, 569, 580, 593, 594, 595, 600, 618, 635, 643, 748, 762, 769, 770, 776, 777, 831, 991], "direct": [127, 129, 188, 235, 253, 272, 763, 847], "direct_io": [800, 840, 841], "direction": 931, "directli": [28, 45, 48, 127, 275, 334, 397, 450, 509, 575, 581, 657, 840, 841, 953, 995], "dirichilet": 586, "dirichlet": 586, "disabl": [1, 78, 103, 105, 106, 107, 995], "disallow": [123, 128, 651], "disallow_negative_branch_length": 927, "discard": [120, 651, 803], "discov": [1, 875], "discoveri": 1, "discrep": 74, "discret": 101, "discuss": [94, 105, 106, 127, 995], "diseas": [581, 651, 793], "disjoint": [796, 926], "disjointiderror": [792, 796], "disk": [118, 256, 600], "dism": 592, "disperison": 653, "dispers": 653, "displai": [117, 302, 325, 334, 372, 392, 423, 444, 477, 500, 530, 544, 654, 749], "disrupt": [300, 370, 421, 475, 990], "dissimilar": [104, 107, 122, 548, 549, 551, 556, 557, 558, 560, 561, 563, 566, 567, 569, 572, 573, 592, 599, 600, 601, 602, 604, 609, 610, 611, 612, 613, 614, 615, 616, 618, 620, 621, 624, 625, 627, 632, 633, 634, 636, 637, 639, 641, 643, 646, 647], "dissimilaritymatrix": [112, 122, 547, 549, 551, 556, 558, 560, 561, 563, 567, 568, 570, 572, 573, 574, 592, 599, 623, 625, 627, 632, 634, 636, 637, 641, 644, 646, 647, 655], "dist": [872, 887], "dist_f": 872, "distanc": [1, 16, 94, 104, 105, 106, 107, 108, 110, 111, 112, 122, 123, 319, 321, 386, 388, 438, 440, 494, 496, 539, 541, 547, 558, 561, 567, 569, 573, 579, 592, 656, 657, 759, 762, 763, 765, 768, 770, 847, 861, 862, 870, 872, 887, 909, 916, 927, 987, 993], "distance_filt": 16, "distance_from_r": 872, "distance_from_r_squar": 872, "distance_matrix": [649, 650, 652, 653, 765, 768], "distancematrix": [107, 108, 111, 112, 122, 570, 575, 592, 599, 600, 619, 649, 650, 651, 652, 653, 654, 655, 657, 759, 768, 916, 927], "distant": 887, "distinct": [46, 91, 92, 101, 576, 599], "distinguish": [74, 94], "distort": 578, "distribut": [77, 117, 586, 593, 655, 768, 773, 774, 776, 777, 835], "div": 129, "diverg": 1, "divers": [599, 778, 987], "divid": [116, 596, 765, 767, 771, 795], "divis": [334, 596, 771], "dj": 118, "dm": [112, 551, 558, 567, 570, 573, 599, 604, 611, 616, 619, 621, 627, 634, 641, 644, 645, 647, 649, 650, 653, 654, 759, 927], "dm1": 654, "dm2": 654, "dm_fh": 599, "dm_from_np": 599, "dmp": 885, "dna": [0, 28, 29, 30, 31, 32, 33, 38, 40, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 61, 64, 66, 116, 117, 118, 119, 120, 121, 125, 126, 128, 334, 346, 363, 365, 366, 367, 369, 370, 373, 374, 375, 376, 379, 380, 382, 390, 394, 395, 414, 416, 417, 418, 420, 421, 424, 425, 426, 427, 430, 431, 434, 442, 447, 448, 450, 467, 468, 470, 471, 472, 474, 475, 478, 479, 480, 481, 482, 483, 486, 487, 489, 490, 498, 501, 502, 504, 505, 509, 526, 533, 535, 545, 600, 988, 990], "dna_seq": [117, 118, 120], "dnaful": 559, "do": [1, 45, 48, 90, 112, 118, 125, 127, 130, 170, 275, 280, 322, 351, 389, 397, 402, 441, 450, 455, 497, 509, 514, 542, 576, 581, 651, 654, 692, 770, 782, 803, 826, 835, 867, 880, 910, 911, 993, 995], "do_someth": 995, "do_something_awesom": 995, "do_something_els": 995, "doc": [107, 116, 117, 118, 125, 127, 188, 191, 235, 253, 256, 269, 272, 569, 600, 618, 623, 635, 643, 839, 926], "docstr": [173, 220, 238], "doctest": 805, "document": [1, 35, 110, 113, 118, 120, 125, 126, 161, 581, 759, 779, 805, 839, 846, 847, 988, 992], "doe": [28, 45, 46, 48, 54, 57, 66, 78, 94, 114, 116, 118, 119, 121, 123, 125, 128, 170, 183, 230, 248, 266, 293, 334, 335, 341, 344, 363, 414, 468, 526, 559, 569, 576, 599, 618, 640, 643, 649, 651, 653, 692, 768, 776, 777, 799, 821, 822, 839, 863, 872, 883, 896, 909, 916, 919, 926, 930, 988], "doesn": [54, 118, 127, 269, 344, 593, 597, 762, 768, 772, 909, 928, 994], "doi": [16, 66, 117, 119, 592, 598, 927], "domain": [128, 397, 885, 919], "domin": [68, 70, 76, 87, 98, 99, 102], "domrachev": 129, "don": [1, 16, 54, 118, 127, 304, 305, 479, 480, 579, 581, 654, 770, 773, 777, 871, 872, 909, 927], "done": [47, 581, 653, 680, 713, 724, 782], "doubl": [69, 70, 71, 72, 74, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 102, 162, 166, 762, 768], "doubleton": [1, 72, 73, 75, 77, 93], "doubt": 127, "download": [117, 120, 129], "dqyhrykedvgimkdqnmdsyrfsiswprilpkgklsgginhegikyynnli": 117, "dr": 117, "draw": [586, 773, 775, 776, 777, 865, 908], "draw_mod": [773, 777], "drawn": [586, 655, 773, 776, 777], "driver": [1, 76], "drop": [201, 265, 282, 353, 404, 457, 516, 654, 748, 763, 803, 906, 926], "drop_all_miss": 265, "drop_all_uniqu": 265, "drop_missing_valu": [184, 187, 231, 234, 249, 252], "drop_zero_vari": 265, "dt": 117, "dt_rich": 795, "dtype": [0, 1, 28, 33, 45, 46, 47, 48, 50, 53, 54, 56, 57, 116, 118, 119, 125, 126, 128, 256, 273, 292, 293, 295, 296, 297, 303, 320, 322, 323, 326, 328, 363, 365, 366, 367, 373, 387, 389, 390, 394, 414, 416, 417, 418, 424, 439, 441, 442, 445, 447, 467, 468, 470, 471, 472, 478, 495, 497, 498, 501, 504, 509, 526, 540, 542, 545, 581, 600, 645, 649, 653, 748, 779, 819, 823, 837, 846, 918, 990], "due": [92, 123, 215, 590, 591, 650, 653, 763, 776], "dump": [129, 993, 995], "dunn": 117, "duplic": [54, 111, 119, 127, 128, 215, 328, 394, 447, 504, 545, 561, 613, 637, 950], "duplicatenodeerror": [78, 94, 103, 105, 106, 107, 875], "duplicateregistrationerror": [141, 142, 143], "dure": [54, 118, 192, 293, 363, 414, 468, 526, 653, 820, 840, 841, 951], "dx": 80, "e": [0, 1, 16, 29, 40, 47, 50, 51, 57, 74, 79, 80, 81, 82, 83, 88, 89, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 191, 214, 220, 256, 269, 270, 293, 301, 302, 310, 344, 363, 371, 372, 378, 397, 414, 422, 423, 429, 432, 445, 468, 476, 477, 485, 502, 509, 526, 529, 530, 532, 547, 551, 558, 567, 573, 576, 581, 586, 596, 597, 599, 600, 604, 611, 616, 621, 623, 627, 634, 641, 645, 647, 649, 650, 651, 652, 653, 759, 765, 766, 775, 776, 778, 796, 800, 805, 822, 835, 839, 847, 848, 849, 862, 863, 865, 867, 868, 869, 873, 874, 876, 877, 878, 880, 881, 882, 883, 887, 891, 893, 894, 895, 896, 897, 903, 907, 908, 909, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 931, 950, 953, 988, 990, 993, 995], "e1004075": [592, 598], "e157": 94, "e_": [587, 588], "e_1": [587, 588], "e_d": 99, "e_h": 95, "e_i": 588, "e_matrix": 766, "each": [0, 1, 16, 28, 38, 43, 46, 47, 50, 53, 56, 60, 61, 62, 63, 64, 65, 66, 78, 90, 103, 105, 106, 107, 108, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 191, 202, 203, 212, 256, 270, 275, 285, 290, 293, 299, 302, 315, 317, 332, 345, 356, 361, 363, 369, 372, 382, 384, 397, 407, 412, 414, 420, 423, 434, 436, 460, 465, 468, 474, 477, 490, 492, 507, 509, 519, 524, 526, 530, 535, 537, 547, 551, 561, 563, 576, 581, 583, 586, 590, 591, 593, 594, 595, 596, 599, 604, 613, 614, 627, 637, 638, 649, 650, 651, 652, 653, 654, 657, 658, 659, 669, 670, 681, 691, 692, 702, 703, 725, 735, 736, 746, 747, 748, 749, 759, 763, 764, 766, 767, 768, 770, 773, 776, 777, 795, 803, 805, 816, 822, 824, 836, 839, 842, 920, 926, 988, 990, 995], "earlier": 995, "earth": 108, "earthmicrobiom": 108, "easi": [118, 119, 127], "easier": [191, 547], "easili": [122, 990], "ebi": [60, 63, 117, 120, 191], "ec_numb": 117, "ecoli": [115, 792], "ecolog": [1, 76, 748, 763, 768], "ecologi": [1, 76, 78, 79, 86, 87, 102, 581, 649, 650, 651, 652, 748, 762, 763, 768, 769, 770], "ecologist": 762, "ed": 80, "edg": [123, 657, 762, 865, 918], "edit": [127, 651, 769], "editor": 118, "edu": [69, 73, 116, 118, 123, 125, 926], "educ": [0, 775], "edward": 120, "eeb": [69, 73], "eeeee": 128, "eeeeeeee": 128, "eeeeeeeeeeh": 128, "eeeeeeeehhh": 128, "effect": [16, 66, 76, 105, 106, 127, 170, 328, 394, 447, 504, 545, 558, 611, 634, 773, 775, 776, 777], "effici": [0, 122, 640], "efficiencywarn": 778, "effort": 120, "egozcu": [578, 587, 588, 592, 596, 598], "eh": 78, "eifcyilkinitilqfsitengmnefndatlpveeallntyridyyyrhlyi": 117, "eigendecomposit": [653, 768], "eigenvalu": [653, 749, 762, 768, 770], "eigenvector": [653, 763, 768], "eigh": [653, 768], "eight": 777, "eigval": [124, 749], "either": [1, 28, 35, 54, 56, 60, 61, 62, 94, 114, 127, 128, 141, 142, 143, 256, 305, 315, 346, 382, 434, 480, 490, 535, 577, 651, 653, 747, 759, 762, 767, 775, 777, 793, 794, 820, 836, 926], "elem": [805, 839], "element": [16, 122, 170, 551, 563, 583, 587, 588, 604, 614, 627, 638, 736, 759, 762, 766, 767, 771, 774, 776, 777, 778, 779, 782, 805, 808, 824, 839, 950], "elementwis": 765, "elev": 650, "ellaps": 847, "elong": 921, "els": [14, 15, 123, 130, 142, 162, 166, 276, 329, 347, 395, 398, 448, 451, 505, 509, 510, 764, 803, 827, 842, 869], "elsevi": [651, 748, 762, 763, 770], "elsewher": [78, 103, 105, 106, 107], "embed": 748, "embl": [120, 129, 191, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546], "embl_gen": 117, "embl_str": 117, "emboss": [60, 63], "emboss_needl": 60, "emboss_wat": 63, "embryophyta": 117, "emorg": 115, "emperor": 759, "emploi": 73, "empti": [2, 29, 51, 79, 115, 118, 121, 125, 159, 160, 302, 310, 372, 378, 423, 429, 477, 485, 530, 532, 561, 581, 613, 637, 775, 782, 814, 831, 832, 869, 919, 930, 988], "en": [118, 119, 128, 927], "ena": [117, 120], "enabl": [839, 953, 995], "encod": [112, 118, 119, 126, 130, 131, 170, 256, 596, 748], "encode_miss": [189, 190, 236, 237, 254, 255, 273], "encount": [1, 127, 878, 880, 887], "encourag": 776, "end": [0, 16, 60, 61, 62, 63, 64, 65, 66, 114, 115, 117, 118, 119, 120, 121, 128, 129, 191, 201, 212, 218, 294, 313, 344, 364, 381, 415, 433, 469, 488, 527, 534, 909], "endpoint": [777, 916], "enforc": [118, 256, 509], "engel": 88, "engin": 954, "english": [123, 651], "enough": [76, 118, 123, 777], "enrol": 777, "ens_": 76, "ens_pi": 76, "enspi": 99, "ensur": [1, 16, 47, 78, 105, 106, 130, 275, 397, 450, 549, 583, 586, 590, 602, 623, 625, 868, 930], "entail": [78, 103, 105, 106, 107], "entir": [1, 16, 28, 74, 275, 397, 450, 509, 782, 839, 843], "entiti": [101, 191, 839], "entrez": 129, "entri": [80, 112, 113, 117, 129, 747, 800, 803, 825, 826, 841, 842, 846], "entropi": [47, 82, 97], "enumer": 16, "env": [650, 799], "environ": [69, 105, 106, 593, 763, 837], "environment": [94, 650, 748, 763, 768, 769], "enzym": 90, "eq": [765, 766], "equal": [1, 33, 42, 47, 67, 69, 101, 105, 106, 107, 118, 174, 180, 192, 198, 204, 210, 221, 227, 239, 245, 257, 263, 280, 289, 335, 341, 351, 360, 402, 411, 455, 464, 509, 514, 523, 547, 549, 556, 576, 593, 602, 609, 625, 632, 649, 651, 652, 653, 655, 657, 747, 762, 767, 768, 771, 776, 777, 778, 780, 801, 870, 926, 930, 931], "equat": [72, 73, 79, 90, 651], "equit": [95, 99], "equival": [40, 76, 78, 94, 119, 127, 278, 279, 302, 304, 325, 326, 332, 345, 349, 350, 372, 392, 400, 401, 423, 444, 453, 454, 477, 479, 500, 501, 507, 512, 513, 530, 544, 558, 573, 576, 581, 611, 621, 634, 647, 651, 748, 990], "erb": [592, 598], "eredi": 80, "erik": [16, 66], "error": [1, 47, 78, 90, 94, 103, 105, 106, 107, 118, 119, 125, 127, 130, 170, 215, 256, 270, 328, 394, 447, 504, 545, 649, 651, 653, 773, 777, 844, 932, 988], "escap": 123, "especi": [112, 118, 127, 657, 770], "essenti": 120, "esti": 77, "estim": [16, 69, 72, 73, 77, 79, 81, 83, 84, 85, 90, 96, 586, 767, 775, 776, 777], "estrang": 123, "et": [581, 586, 657, 779, 846], "etc": [55, 59, 80, 118, 119, 127, 162, 163, 164, 166, 167, 168, 188, 191, 217, 219, 235, 253, 271, 272, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 547, 568, 574, 617, 622, 642, 648, 760, 761, 768, 770, 822, 830, 845, 847, 904, 925, 989, 990], "euclidean": [578, 599, 650, 762, 768, 770], "euclidian": 768, "eudicotyledon": 117, "eukaryota": 117, "euryarchaeota": [886, 919], "evalu": [78, 94, 114, 115, 282, 353, 404, 457, 516, 599, 650, 747, 773, 869, 906, 909, 993, 995], "evaul": 130, "even": [60, 61, 62, 68, 82, 88, 95, 99, 118, 123, 344, 649, 653, 777, 920], "evenli": [593, 759], "everi": [69, 127, 129, 265, 580, 593, 594, 595, 596, 597, 654, 868, 883, 889], "evid": [117, 123], "evmltdiprlhindpimk": 128, "evolut": [118, 123, 125, 656, 657, 867, 926, 927], "evolutionari": [78, 547, 559, 847, 927], "ex": 995, "exact": [78, 94, 103, 105, 106, 107, 127, 191, 293, 363, 414, 468, 526, 653, 768, 988], "exactli": [28, 45, 48, 53, 63, 64, 65, 118, 119, 125, 130, 189, 236, 254, 256, 280, 289, 335, 351, 360, 402, 411, 455, 464, 514, 523, 597, 759, 865], "examin": [954, 995], "exampl": [0, 1, 28, 29, 30, 31, 32, 33, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 78, 105, 106, 107, 122, 127, 130, 141, 142, 143, 171, 191, 201, 213, 218, 256, 275, 276, 277, 280, 282, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 347, 348, 351, 353, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 402, 404, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 450, 451, 452, 455, 457, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 547, 558, 559, 562, 565, 567, 570, 573, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 600, 611, 616, 619, 621, 634, 641, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 747, 759, 768, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 848, 849, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 932, 952, 988, 989, 990, 991, 993, 995], "example_t": [113, 798, 817, 818, 819, 822, 823, 837, 838], "exce": [118, 125], "exceed": 127, "excel": [119, 127], "except": [1, 118, 123, 124, 125, 127, 142, 344, 561, 613, 637, 652, 763, 875, 926, 928, 929, 964, 994], "excit": 995, "exclud": [126, 596, 638, 645, 912], "exclude_absent_taxa": 871, "exclus": [130, 191, 201, 212, 294, 313, 364, 381, 415, 433, 469, 488, 527, 534, 581], "execut": [130, 670, 714, 954, 976, 995], "exercis": 775, "exhibit": 762, "exist": [0, 56, 69, 74, 113, 123, 130, 141, 142, 143, 159, 160, 344, 547, 559, 563, 599, 614, 638, 651, 654, 759, 799, 805, 811, 847, 864, 872, 877, 879, 910, 951, 976, 990], "exon": [121, 191, 318, 385, 437, 450, 493, 509, 538], "exp": [580, 585, 592, 598], "expand": [657, 822, 919], "expect": [1, 108, 114, 130, 158, 275, 397, 450, 586, 587, 588, 599, 657, 762, 763, 770, 795, 804, 805, 820, 839, 918, 995], "expens": 782, "experi": [0, 117, 120, 127, 581, 586, 776], "experienc": 777, "experiment": [117, 653, 989], "explain": [120, 121, 124, 658, 692, 736, 748, 749, 762, 768, 770], "explan": [762, 763], "explanatori": [657, 748, 749, 763, 770], "explicit": 119, "explicitli": [94, 125, 127, 328, 394, 447, 504, 545, 748], "explor": [1, 104, 748], "exploratori": 1, "expon": [123, 595], "export": 127, "expos": 805, "express": [102, 301, 329, 371, 395, 422, 448, 476, 505, 529, 586, 592, 598, 776, 990], "ext": [188, 235, 253, 272], "extend": [0, 16, 45, 54, 60, 61, 62, 63, 64, 65, 78, 776, 864, 877, 926, 988], "extens": [117, 127, 188, 235, 253, 272], "extern": 123, "extinct": 78, "extra": [129, 130, 649, 650, 652, 653, 714], "extract": [551, 586, 599, 600, 604, 627, 649, 653, 763, 867, 990], "extrapol": [84, 85, 773], "extrem": 651, "f": [1, 16, 54, 70, 84, 94, 108, 113, 114, 115, 119, 123, 126, 128, 129, 171, 397, 651, 652, 653, 763, 766, 773, 776, 794, 795, 805, 828, 831, 839, 841, 842, 848, 849, 862, 863, 865, 867, 868, 869, 873, 874, 876, 877, 878, 880, 881, 882, 883, 887, 893, 894, 895, 896, 897, 903, 907, 908, 909, 912, 913, 914, 916, 917, 921, 922, 923, 924, 926, 993], "f_1": [69, 72, 77, 81, 96], "f_2": [72, 77], "f_i": 69, "f_onewai": 581, "fabacea": 117, "fabal": 117, "fabid": 117, "facilit": [78, 105, 106, 108, 112, 623, 748, 773, 875, 927], "fact": 344, "factor": [94, 105, 106, 649, 652, 657, 763, 777], "factori": [130, 141, 142, 143, 155, 165], "fail": [78, 79, 94, 103, 105, 106, 107, 215, 653, 773, 953, 954, 995], "fail_callback": [954, 995], "fail_f": 995, "failur": [69, 954, 995], "fairli": 657, "faith": [1, 78, 94, 599], "faith_pd": [1, 94], "fall": [80, 83, 94, 106, 747], "fals": [1, 14, 15, 16, 29, 30, 31, 32, 33, 45, 46, 48, 50, 51, 52, 53, 57, 60, 61, 62, 72, 73, 78, 94, 103, 105, 106, 107, 114, 117, 118, 119, 120, 121, 123, 126, 141, 142, 143, 170, 171, 184, 187, 189, 190, 191, 201, 213, 214, 231, 234, 236, 237, 249, 252, 254, 255, 265, 273, 275, 276, 277, 278, 280, 282, 289, 292, 293, 295, 296, 297, 299, 302, 303, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 344, 345, 346, 347, 348, 349, 351, 353, 360, 363, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 404, 411, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457, 464, 467, 468, 470, 471, 472, 474, 477, 478, 480, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 514, 516, 523, 526, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 548, 549, 556, 558, 581, 586, 592, 598, 601, 602, 609, 611, 624, 625, 632, 634, 638, 640, 651, 654, 657, 658, 659, 681, 692, 725, 768, 770, 773, 775, 776, 778, 795, 802, 803, 806, 814, 815, 816, 817, 825, 826, 828, 832, 835, 837, 838, 839, 842, 844, 865, 870, 871, 874, 882, 888, 891, 892, 897, 905, 917, 919, 920, 922, 931, 953, 976, 990, 993, 995], "famili": 1, "far": 762, "farthest": 909, "fasffbf": 119, "fast": [78, 105, 106, 658, 768, 820], "fasta": [55, 59, 119, 121, 126, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 988], "fasta_fl": 118, "fasta_format": 118, "faster": [1, 78, 105, 106, 108, 302, 332, 345, 372, 423, 477, 507, 530, 653, 768, 900], "fastq": [55, 59, 126, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 988], "fastq_format": 119, "favor": [66, 591], "fc": 586, "fd": [78, 952], "fdr_bh": [581, 586], "featur": [1, 80, 91, 113, 118, 121, 127, 128, 191, 201, 204, 213, 215, 216, 218, 256, 275, 397, 450, 509, 578, 581, 586, 596, 749, 758, 762, 763, 769, 770, 931, 989, 990, 991], "feature_t": 120, "fecal": 777, "federhen": 129, "fee": [118, 125], "felsenstein": [118, 125, 993], "fernand": 586, "fernandez": [578, 590], "ferr": 120, "fetch": [201, 835, 993], "fetureid": 127, "few": [78, 105, 106, 108, 805, 839, 988, 993, 995], "fewer": [69, 125, 776, 777], "fff": 119, "ffffx": 119, "ffllssssyi": 334, "fglfmeqlttgdysksmrrivknrlpkfskfesslvngsfdfiginyysssi": 117, "fh": [114, 115, 116, 118, 119, 120, 121, 125, 126, 128, 129, 130, 141, 142, 143], "field": [1, 115, 119, 126, 334, 748, 805, 839], "fifth": 118, "fig": [1, 567, 616, 641, 759], "figur": [567, 616, 641, 759], "file": [55, 59, 112, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 142, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 217, 219, 235, 253, 256, 269, 271, 272, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 567, 568, 574, 581, 599, 616, 617, 622, 641, 642, 648, 680, 713, 724, 759, 760, 761, 775, 779, 792, 793, 794, 795, 796, 800, 804, 805, 807, 811, 820, 826, 828, 829, 830, 833, 834, 839, 840, 841, 842, 845, 846, 867, 904, 925, 951, 952, 987, 993], "fileformaterror": 130, "filehandl": [55, 59, 130, 141, 142, 143, 162, 163, 164, 166, 167, 168, 170, 171, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925], "filenam": 951, "filepath": [55, 59, 162, 163, 164, 166, 167, 168, 170, 188, 217, 219, 235, 253, 269, 271, 272, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 654, 760, 761, 830, 845, 904, 925], "filesentinel": [130, 141, 143], "filter": [16, 47, 66, 126, 182, 183, 229, 230, 247, 248, 256, 265, 266, 296, 366, 417, 471, 654, 793, 794, 835, 919, 995], "filter_column": 266, "filter_f": 919, "filter_fn": 803, "filter_id": [184, 231, 249, 265, 268], "final": [128, 657, 795, 840, 841, 995], "find": [0, 79, 295, 297, 300, 303, 313, 315, 320, 322, 323, 365, 367, 370, 373, 381, 382, 387, 389, 390, 416, 418, 421, 424, 433, 434, 439, 441, 442, 445, 470, 472, 475, 478, 488, 490, 495, 497, 498, 534, 535, 540, 542, 650, 653, 657, 763, 777, 816, 862, 863, 875, 877, 878, 881, 882, 883, 888, 890, 891, 892, 893, 895, 896, 903, 907, 912, 921, 923, 924, 950], "find_al": [880, 882, 883], "find_by_func": [880, 881, 883], "find_by_id": [880, 881, 882], "find_motif": [315, 382, 434, 490, 535, 990], "find_with_regex": [315, 382, 434, 490, 535, 990], "fine": 842, "firmicut": [822, 885, 886, 919], "first": [1, 16, 60, 61, 62, 63, 64, 65, 66, 69, 78, 105, 106, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 143, 213, 218, 313, 315, 331, 332, 344, 381, 382, 433, 434, 488, 490, 506, 509, 534, 535, 551, 579, 580, 581, 586, 593, 604, 627, 649, 651, 681, 736, 748, 764, 773, 776, 800, 811, 841, 867, 871, 880, 881, 886, 889, 919, 920, 964, 988, 993, 995], "fish": 748, "fisher": 79, "fit": [90, 586, 747, 749, 770, 994], "five": [118, 129, 567, 581, 616, 641, 927], "fix": [84, 122, 125], "fl": 118, "flag": [129, 993], "flat": [120, 315, 382, 434, 490, 535], "flatfil": 117, "flatten": 767, "float": [47, 50, 60, 61, 62, 63, 64, 65, 66, 67, 78, 83, 84, 94, 103, 105, 106, 107, 108, 111, 112, 114, 120, 122, 123, 127, 256, 273, 298, 304, 305, 319, 321, 368, 386, 388, 419, 438, 440, 473, 479, 480, 494, 496, 528, 539, 541, 563, 565, 576, 577, 581, 586, 590, 591, 595, 598, 599, 600, 614, 638, 651, 653, 655, 657, 670, 714, 759, 774, 776, 777, 782, 805, 806, 808, 809, 820, 836, 839, 847, 862, 870, 871, 872, 877, 878, 887, 918, 926, 930], "float32": [112, 653, 837], "float64": [1, 54, 112, 293, 363, 414, 468, 526, 581, 645, 653, 748, 805, 839], "flush": 170, "fmet": 344, "fn": 951, "focu": 130, "focus": [256, 770], "fold": [586, 988], "folder": 951, "follow": [1, 51, 52, 54, 66, 73, 78, 79, 94, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 191, 256, 275, 282, 310, 312, 353, 378, 380, 397, 404, 429, 431, 450, 457, 485, 487, 509, 516, 532, 533, 551, 559, 579, 580, 581, 584, 585, 587, 588, 589, 593, 595, 596, 599, 604, 627, 649, 650, 651, 653, 654, 658, 759, 762, 777, 866, 903, 954, 988, 993, 995], "foo": [121, 127, 201, 509, 782, 795, 796, 805, 806, 821, 831, 839, 841, 842, 952, 995], "foobar": [796, 995], "foral": [584, 585], "foraminifera": 70, "ford": 94, "form": [1, 28, 60, 172, 551, 600, 604, 623, 627, 645, 790, 791, 800, 804, 841, 918], "formal": [119, 129, 578], "format": [55, 59, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 188, 191, 217, 219, 235, 238, 253, 256, 269, 271, 272, 274, 324, 329, 333, 334, 342, 391, 395, 396, 443, 448, 449, 499, 505, 508, 543, 546, 568, 569, 574, 600, 617, 618, 622, 623, 635, 640, 642, 643, 648, 680, 713, 724, 760, 761, 779, 800, 804, 805, 806, 807, 830, 835, 837, 839, 840, 841, 845, 846, 865, 885, 904, 925, 927, 987, 992, 993], "format_f": 839, "format_nam": [156, 157, 158], "format_object": 154, "format_url": 806, "format_vers": [113, 779, 805, 839, 846], "formatidentificationwarn": [162, 166], "former": 547, "formula": [80, 653], "forum": 127, "forward": [1, 332, 344, 345, 507], "fould": 870, "found": [16, 101, 113, 115, 117, 118, 119, 120, 123, 125, 128, 162, 164, 166, 168, 328, 394, 447, 504, 545, 561, 613, 637, 650, 651, 653, 777, 805, 839, 870, 880, 881, 882, 883, 893, 895, 911, 926], "foundat": 119, "four": [28, 119, 128, 275, 397, 450, 581, 759], "fr": 926, "frac": [69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 86, 87, 88, 89, 90, 95, 96, 99, 102, 579, 580, 584, 589, 590, 591, 593, 594, 595, 596, 651, 770], "fraction": [70, 577, 777, 808, 871, 993], "fraction_diff": [298, 368, 419, 473, 528], "fraction_sam": [298, 368, 419, 473, 528], "frame": [114, 115, 332, 344, 345, 507, 586, 650, 885], "framework": [94, 578], "free": [129, 953, 995], "freedom": [586, 592, 598, 767, 774], "freq": [302, 317, 372, 384, 423, 436, 477, 492, 530, 537], "frequenc": [1, 47, 50, 69, 81, 304, 305, 317, 319, 321, 384, 386, 388, 436, 438, 440, 479, 480, 492, 494, 496, 537, 539, 541, 773, 775, 777, 847, 867], "frequent": [782, 847, 869], "friedman": 581, "friedmanchisquar": 581, "from": [0, 1, 16, 28, 29, 30, 31, 32, 33, 38, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 74, 78, 83, 94, 101, 102, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 162, 166, 182, 189, 190, 191, 200, 201, 213, 214, 217, 220, 229, 236, 237, 247, 254, 255, 256, 269, 270, 271, 273, 275, 276, 277, 280, 282, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 344, 345, 346, 347, 348, 351, 353, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 402, 404, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 455, 457, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 551, 558, 559, 562, 563, 565, 567, 568, 570, 571, 573, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 604, 611, 614, 616, 617, 619, 621, 627, 634, 638, 641, 642, 644, 645, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 747, 748, 759, 760, 762, 763, 765, 766, 768, 773, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 848, 849, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 932, 952, 954, 990, 993, 995], "from_": [558, 611, 634], "from_dict": [58, 649, 653, 658, 759, 775, 776], "from_hdf5": 839, "from_iter": 575, "from_ncbi": [334, 335, 344, 345, 506, 507], "from_taxdump": 886, "from_taxonomi": [885, 919], "front": [218, 596], "frontier": 94, "frozenset": [869, 913, 914], "fsvd": [653, 768], "ft_current": 191, "ftp": [117, 129, 191], "full": [84, 85, 116, 581, 782, 795, 817, 883, 909, 951], "full_genome_avail": [803, 828], "fulli": [94, 120, 988], "fun": 995, "func": [807, 831, 869, 882, 906, 911, 922, 933, 966, 977], "function": [1, 60, 61, 62, 78, 79, 84, 85, 90, 93, 105, 106, 107, 108, 111, 118, 119, 126, 141, 142, 143, 156, 157, 158, 161, 191, 201, 213, 275, 298, 334, 368, 397, 419, 450, 473, 528, 547, 563, 576, 579, 580, 581, 584, 585, 587, 588, 591, 596, 614, 638, 650, 651, 652, 653, 654, 655, 658, 747, 763, 772, 775, 776, 777, 779, 795, 800, 803, 805, 807, 820, 828, 831, 833, 839, 840, 841, 842, 846, 865, 869, 872, 877, 882, 906, 911, 919, 921, 922, 927, 928, 930, 931, 932, 933, 951, 953, 965, 966, 976, 977, 987, 988, 989, 990, 993], "further": [130, 256, 776, 993], "futher": 130, "futur": [78, 94, 105, 106, 118], "fuzzi": [121, 191, 192, 200, 201, 212, 213, 509], "g": [0, 1, 16, 33, 47, 48, 54, 62, 65, 80, 83, 90, 94, 108, 111, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 191, 220, 256, 269, 275, 282, 285, 290, 293, 294, 301, 302, 303, 304, 305, 315, 353, 356, 361, 363, 364, 371, 372, 373, 382, 397, 404, 407, 412, 414, 415, 422, 423, 424, 434, 450, 457, 460, 465, 468, 469, 476, 477, 478, 479, 480, 490, 509, 516, 519, 524, 526, 527, 529, 530, 535, 547, 551, 559, 565, 576, 581, 596, 599, 600, 604, 623, 627, 645, 649, 650, 652, 653, 759, 776, 777, 805, 822, 835, 839, 847, 868, 869, 874, 877, 881, 908, 909, 910, 912, 913, 919, 922, 923, 924, 926, 953, 988, 990, 993, 995], "g1": 653, "g2": 653, "g_m": 584, "ga": [509, 990], "gaa": 990, "gaagcaatgc": 117, "gaagttgagt": 117, "gaatcaagcc": 117, "gabor": [16, 66], "gac": [316, 383, 435, 491, 536], "gacccgcuuu": 990, "gacg": [316, 383, 435, 491, 536], "gacgtt": [307, 308, 375, 376, 426, 427, 482, 483], "gag": [328, 394, 447, 504, 545], "gagatagagt": 117, "gagcccgggc": [118, 125], "gagccgtggc": [118, 125], "gagcggaggc": 117, "gaggacttcg": 117, "gaggtattgg": 117, "gagrctc": [328, 394, 447, 504, 545], "gain": [256, 599, 768], "gair": 118, "gairaagccttggc": 125, "gamma": 69, "gap": [0, 16, 46, 47, 50, 54, 60, 61, 62, 63, 64, 65, 114, 115, 116, 117, 118, 119, 120, 121, 125, 275, 292, 293, 296, 299, 300, 304, 305, 308, 315, 326, 327, 328, 330, 331, 332, 334, 344, 345, 346, 363, 366, 369, 370, 376, 382, 393, 394, 397, 414, 417, 420, 421, 427, 434, 446, 447, 450, 467, 468, 471, 474, 475, 479, 480, 483, 490, 501, 502, 503, 504, 506, 507, 509, 526, 535, 545, 576, 919, 990, 995], "gap_char": [296, 346, 366, 417, 471], "gap_charact": [328, 394, 447, 504, 545], "gap_extend_penalti": [16, 60, 61, 62, 63, 64, 65], "gap_mod": 47, "gap_open_penalti": [16, 60, 61, 62, 63, 64, 65], "gapopen": [114, 115], "garbag": 170, "gardnerella": 777, "garrison": [16, 66], "gascuel": 927, "gaston": 78, "gataccttca": 117, "gatcacttga": 117, "gatcttcccc": 117, "gatgcaacac": 117, "gather": [573, 621, 647, 993], "gattattcta": 117, "gattttcgag": 117, "gauu": [320, 322, 387, 389, 439, 441, 495, 497, 540, 542], "gb": [115, 120], "gb_str": 120, "gbk": 120, "gc": [46, 117, 118, 119, 120, 121, 129, 275, 292, 293, 296, 299, 305, 326, 330, 335, 345, 363, 366, 369, 414, 417, 420, 450, 467, 468, 471, 474, 480, 501, 502, 526, 990], "gc_content": [305, 480], "gc_frequenc": [304, 479], "gcaattttca": 117, "gcacatccct": 120, "gcacaucccu": 120, "gcagaagctg": 117, "gcagatgtg": 577, "gcatgcatgc": 121, "gcatggtcat": 117, "gcaugcaucugcauacguacguacgcaugca": 116, "gcaugcaucugcauacguacguacgcaugcagucgauacauacguacgucgguacgu": 116, "gcaugcaucugcauacguacguacgcaugcauca": 116, "gccaaaccca": 117, "gcccagtagcttcccaatatgagagcatcaattgtagatcgggcc": 0, "gccccccuuu": 990, "gcgtatagtt": 117, "gcgtgcctaaggtatgcaag": 0, "gctaactaggctcccttctacccctctcagaga": 0, "gctgccgaga": 117, "gctgttattt": 117, "gcttcatctt": 117, "gen": [121, 995], "gen1": 121, "gen2": 121, "gena": 191, "genbank": [117, 121, 129, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546], "gender": [599, 775, 776], "gene": [1, 121, 191, 201, 213, 216, 275, 509, 586, 592, 598, 779, 846, 989], "gene_nam": 191, "genea": 792, "geneb": 792, "gener": [1, 45, 48, 60, 66, 67, 68, 86, 94, 108, 119, 120, 121, 123, 128, 129, 141, 143, 156, 158, 162, 166, 169, 301, 315, 316, 371, 382, 383, 422, 434, 435, 476, 490, 491, 509, 529, 535, 536, 547, 586, 599, 649, 650, 651, 655, 747, 749, 759, 762, 773, 776, 777, 805, 815, 816, 824, 828, 839, 988, 990, 994], "generated_bi": [779, 806, 839, 840, 846], "generatortyp": [815, 817, 828], "genet": [118, 123, 125, 129, 331, 332, 334, 335, 341, 342, 343, 344, 345, 506, 507, 656, 926, 990], "genetic_cod": [506, 507], "geneticcod": [332, 506, 507, 990], "genom": [1, 201], "genpept": 120, "gentil": 596, "genu": [1, 129], "geologi": 578, "geometr": [582, 584, 586, 596, 653], "geometri": [578, 580, 584, 585, 588], "geq": 770, "gerald": 596, "get": [67, 113, 127, 170, 171, 200, 201, 334, 343, 599, 651, 747, 763, 803, 810, 811, 812, 813, 819, 821, 823, 825, 826, 844, 874, 913], "get_alpha_diversity_metr": [1, 103, 110], "get_beta_diversity_metr": [1, 107, 109, 111], "get_column": 268, "get_id": [182, 183, 187, 229, 230, 234, 247, 248, 252, 266, 267], "get_max_dist": 878, "get_nam": 559, "get_trajectori": 658, "get_value_by_id": 798, "getaaafhwqaaf": 126, "getvalu": [116, 118, 119, 120, 121, 125, 128, 599], "gff": 121, "gff3": [120, 217, 219, 324, 333, 391, 396, 543, 546], "gff_str": 121, "gfgmvinn": 128, "gfp": 990, "gfv": 128, "gg": [294, 300, 364, 370, 415, 421, 469, 475, 527], "gg_otu_1": [805, 806], "gg_otu_2": 806, "gg_otu_3": 806, "gg_otu_4": 806, "gg_otu_5": 806, "gga": 990, "ggaa": [293, 363, 414, 468, 526], "ggacugaa": 990, "ggag": [300, 370, 421, 475], "ggattgttta": 117, "ggca": 0, "ggctaacggt": 117, "ggg": 990, "ggggagg": [300, 370, 421, 475], "gggtttttac": 117, "ggt": [128, 325, 392, 444, 500, 544], "ggta": 0, "ggtaccaacg": [325, 392, 444, 500, 544], "ggtacgcaag": 0, "ggtc": [296, 366, 417, 471], "ggtccattc": [296, 366, 417, 471], "ggtggtttct": 117, "ggtgtttagc": 117, "ggtt": 799, "ggu": [277, 348, 399, 452, 511], "gguc": [285, 287, 290, 298, 319, 320, 321, 322, 356, 358, 361, 368, 386, 387, 388, 389, 407, 409, 412, 419, 438, 439, 440, 441, 460, 462, 465, 473, 494, 495, 496, 497, 519, 521, 524, 528, 539, 540, 541, 542], "ggucg": [282, 294, 353, 364, 404, 415, 457, 469, 516, 527], "ggucguaaagga": [291, 362, 413, 466, 525], "ggucgugaag": 509, "ggucgugaagga": [277, 282, 348, 353, 399, 404, 452, 457, 509, 511, 516], "gi": [114, 115, 120], "gigasci": [759, 779, 846], "gilk": 657, "gini": [80, 98], "gish": [114, 115], "github": 759, "give": [1, 123, 762, 763, 770, 779, 846, 872], "given": [1, 55, 59, 69, 80, 83, 88, 90, 99, 103, 107, 108, 111, 118, 119, 123, 124, 127, 141, 143, 159, 160, 162, 163, 166, 167, 214, 217, 219, 271, 274, 324, 328, 333, 391, 394, 396, 443, 447, 449, 499, 504, 508, 543, 545, 546, 563, 568, 574, 596, 614, 617, 622, 638, 642, 648, 650, 651, 654, 760, 761, 763, 767, 772, 774, 776, 810, 812, 820, 828, 830, 835, 844, 845, 847, 882, 904, 925, 952, 953, 965, 995], "gkp1137": 119, "glahn": [578, 592, 598], "gln": 397, "global": [0, 60, 61, 62], "global_pairwise_align": [61, 62, 63, 64, 65], "global_pairwise_align_nucelotid": [60, 62, 63, 64, 65], "global_pairwise_align_nucleotid": 0, "global_pairwise_align_protein": [60, 61, 63, 64, 65], "glossari": 47, "glu": 397, "glucosidas": 117, "glutam": 397, "glutamin": 397, "glx": 397, "gly": 397, "glycin": [47, 397], "glycosyl": [315, 382, 421, 434, 490, 535, 990], "go": [777, 835, 993, 995], "goa": 117, "goal": [127, 988], "goldman": 94, "gonzalez": 759, "good": [77, 81, 768], "goodrich": 870, "googl": 127, "gorilla": [118, 125], "gorlick": 128, "goto": 119, "gouet": [84, 85], "gov": [47, 61, 62, 64, 65, 114, 115, 118, 120, 126, 129, 334, 342, 343], "gracilibacteria": 334, "gradient": [80, 748, 762, 763, 768, 770], "gradientanova": [659, 681, 725, 736], "gradientanovaresult": [669, 691, 702, 735, 746], "graft": 921, "gram": [587, 588], "grammar": [346, 509], "grammaredsequ": [28, 38, 43, 45, 48, 49, 60, 63, 116, 118, 125, 128, 275, 296, 299, 327, 397, 417, 420, 446, 450, 471, 474, 503, 990], "grand": 847, "grant": [118, 125], "greater": [118, 201, 276, 347, 398, 451, 510, 586, 649, 651, 652, 653, 654, 657, 776, 777, 778, 811, 835], "grei": 759, "group": [1, 101, 127, 329, 395, 448, 505, 558, 581, 586, 596, 611, 634, 649, 652, 653, 658, 659, 669, 670, 691, 702, 714, 724, 725, 735, 746, 748, 775, 776, 777, 790, 805, 810, 839, 953, 989, 993], "group1": 649, "group2": 649, "group3": 649, "group_md": 790, "group_observation_md": 810, "groupbi": 776, "groupresult": 670, "growth": [586, 776], "gsi": 596, "gt": 53, "gt10": 117, "gtaacctgag": 117, "gtacct": [116, 125], "gtagaggacc": 117, "gtagct": [116, 125], "gtatct": 125, "gtcgaa": [116, 125], "gtt": [316, 383, 435, 491, 536], "gttaatgcca": 117, "gttactcaac": 117, "gttcggcctc": 117, "gttgaccaat": 117, "gttgggatta": 117, "gtttatccaa": 117, "guaaccugag": 117, "guanin": [275, 450], "guarante": [54, 85, 127, 275, 299, 369, 397, 420, 450, 474, 600, 655, 877], "guc": [282, 353, 404, 457, 516], "gucgauacauacguacgucgguacgu": 116, "gucgauacauacguacgucguacguacgu": 116, "guess": [55, 90, 118, 162, 166, 217, 271, 324, 391, 443, 499, 543, 568, 617, 642, 760, 830, 904, 929], "gunnerida": 117, "gut": [1, 127, 759], "gytai": 128, "gzip": [170, 839], "h": [16, 69, 70, 74, 82, 94, 95, 96, 97, 98, 99, 118, 125, 128, 171, 275, 397, 450, 868, 869, 874, 877, 908, 909, 910, 913, 914, 923, 924, 926, 993], "h5grp": [805, 839], "h5py": [805, 839], "h_": 581, "h_0": 80, "h_b": 71, "h_i": 80, "h_n": 80, "ha": [1, 16, 28, 46, 51, 52, 60, 61, 62, 67, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 163, 167, 170, 187, 234, 252, 256, 269, 275, 292, 293, 296, 299, 309, 310, 311, 312, 323, 326, 330, 331, 332, 334, 344, 345, 346, 363, 366, 369, 377, 378, 379, 380, 390, 397, 414, 417, 420, 428, 429, 430, 431, 442, 450, 467, 468, 471, 474, 484, 485, 486, 487, 498, 501, 502, 506, 507, 509, 526, 531, 532, 533, 581, 583, 599, 747, 762, 764, 775, 776, 777, 795, 803, 820, 868, 888, 891, 892, 906, 910, 926, 953, 990, 993], "habitat": 763, "had": [78, 105, 106, 649, 653, 777], "half": [83, 593], "halobacteria": [886, 919], "ham": [298, 368, 419, 473, 528, 599, 990], "hamadi": [78, 105, 106], "hand": [1, 768], "handbook": 118, "handi": [953, 995], "handl": [47, 54, 118, 119, 126, 128, 129, 130, 131, 141, 143, 170, 256, 269, 344, 345, 581, 651, 653, 654, 773, 782, 795, 820, 829, 920, 927, 952, 995], "handler": [131, 162, 164, 166, 168, 170], "happen": [123, 315, 382, 434, 490, 535, 926, 995], "hard": [78, 103, 105, 106, 107], "hardcod": 77, "harm": 593, "has_children": [891, 892], "has_definit": [295, 297, 307, 311, 323, 365, 367, 375, 379, 390, 416, 418, 426, 430, 442, 470, 472, 482, 486, 498], "has_degener": [297, 306, 311, 367, 374, 379, 418, 425, 430, 472, 481, 486], "has_gap": [303, 373, 424, 478], "has_missing_valu": [182, 184, 229, 231, 247, 249], "has_nuc_pattern": 995, "has_stop": 445, "hash": [8, 22, 136, 149, 664, 675, 686, 697, 708, 719, 730, 741, 754, 855, 940, 959, 971, 982], "hashabl": [28, 30, 747, 976], "hashlib": 952, "hasn": [509, 778, 842], "have": [0, 1, 16, 46, 49, 50, 53, 54, 66, 68, 78, 83, 95, 99, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 161, 170, 191, 201, 202, 203, 256, 265, 270, 280, 293, 299, 315, 344, 351, 363, 369, 382, 402, 414, 420, 434, 455, 468, 474, 490, 514, 526, 535, 549, 565, 581, 597, 599, 602, 625, 651, 657, 658, 680, 692, 713, 724, 747, 759, 762, 763, 764, 767, 768, 770, 771, 773, 775, 776, 777, 778, 803, 805, 820, 821, 822, 839, 844, 847, 866, 867, 868, 877, 879, 880, 903, 909, 916, 918, 919, 928, 930, 993, 995], "hdf5": [112, 113, 779, 805, 839, 846], "hdfgroup": 112, "hdist": 657, "he": 0, "header": [114, 115, 116, 119, 120, 122, 124, 127, 174, 180, 221, 227, 239, 245, 256, 257, 263, 268, 800, 804], "header_kei": [800, 841], "header_valu": [800, 841], "heagawghe": 0, "health": [581, 775, 776], "healthi": [775, 776, 777], "heatmap": [567, 616, 641], "heip": [82, 88], "heip_": 95, "hello": [291, 362, 413, 466, 525], "help": [127, 129], "helper": [6, 20, 36, 134, 147, 176, 194, 206, 223, 241, 259, 283, 337, 354, 405, 458, 517, 552, 605, 628, 662, 673, 684, 695, 706, 717, 728, 739, 752, 783, 853, 930, 931, 938, 957, 969, 980, 993], "henc": 651, "henikoff": [62, 65, 559], "here": [0, 1, 47, 69, 73, 78, 83, 88, 90, 96, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 120, 125, 130, 141, 143, 171, 315, 382, 434, 490, 535, 581, 586, 657, 768, 770, 805, 839, 920, 927, 993], "hernand": 596, "heterogen": 769, "heuer": 119, "heurist": [16, 653, 768], "hexdigest": 952, "hgc": 129, "hi": 397, "hidden": 129, "hierarch": [129, 596], "hierarchi": [795, 884, 885, 993], "high": [78, 105, 106, 118, 119, 586, 748, 759, 762, 768, 991], "higher": [47, 547, 581, 586, 965], "highest": [16, 123], "highli": 47, "highlight": 119, "hill": 94, "histidin": 397, "histor": [1, 92, 334, 867], "histori": [78, 777], "hit": 115, "hoc": 773, "hochberg": [581, 586], "hoffmann": 94, "hold": [623, 669, 691, 702, 735, 746, 747, 768, 775, 836, 875, 976], "hollow": [107, 112, 600, 638, 640, 655], "holm": [581, 586], "hommola": 657, "homogen": [653, 762, 770], "homolog": 547, "horizont": 54, "host": [129, 657], "host_dist": 657, "hot": 748, "hotton": 129, "hous": 775, "how": [43, 53, 54, 90, 118, 120, 127, 170, 220, 256, 293, 315, 327, 344, 345, 363, 382, 393, 414, 434, 446, 468, 490, 503, 526, 535, 592, 598, 651, 768, 773, 775, 776, 777, 779, 801, 820, 846, 988, 995], "howev": [1, 78, 79, 94, 103, 105, 106, 107, 118, 122, 123, 127, 129, 275, 397, 450, 509, 578, 586, 653, 657, 748, 768, 782, 842, 878, 933], "hsp": [114, 115], "hstack": [775, 776], "htm": 650, "html": [47, 83, 113, 114, 116, 118, 120, 123, 125, 128, 191, 569, 600, 618, 623, 635, 643, 649, 650, 651, 652, 653, 759, 779, 805, 839, 846, 926], "http": [16, 47, 60, 61, 62, 63, 64, 65, 66, 69, 73, 83, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 188, 235, 253, 256, 269, 272, 334, 342, 343, 569, 592, 596, 598, 600, 618, 623, 635, 643, 649, 650, 651, 652, 653, 759, 779, 805, 806, 839, 846, 926, 927, 952], "huerta": 867, "hugh": 117, "human": [112, 118, 119, 122, 123, 124, 932], "hundr": [1, 108], "hwang": 69, "hydrogenosom": 129, "hypothesi": [578, 581, 586, 651, 654, 657, 773], "hypothet": 191, "h\u00e9bert": 596, "i": [0, 1, 2, 16, 28, 29, 30, 31, 32, 33, 35, 40, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 141, 142, 143, 155, 156, 158, 162, 163, 164, 165, 166, 167, 168, 170, 174, 180, 188, 191, 192, 198, 200, 201, 204, 210, 212, 213, 214, 215, 217, 219, 220, 221, 227, 235, 239, 245, 253, 256, 257, 263, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 360, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 411, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 523, 526, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 556, 558, 561, 566, 567, 568, 569, 572, 573, 574, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 609, 611, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 632, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 657, 680, 692, 713, 724, 725, 736, 747, 748, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 782, 789, 792, 795, 796, 799, 800, 802, 803, 804, 805, 811, 814, 815, 816, 817, 820, 821, 822, 828, 829, 830, 831, 832, 835, 836, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 852, 862, 865, 867, 869, 872, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 885, 886, 887, 889, 891, 892, 893, 895, 897, 898, 900, 903, 904, 908, 911, 913, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 933, 937, 950, 951, 952, 953, 954, 964, 965, 976, 987, 988, 990, 993, 994, 995], "id": [0, 1, 28, 33, 51, 56, 57, 78, 94, 103, 105, 106, 107, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 174, 180, 183, 184, 186, 189, 190, 221, 227, 230, 231, 233, 236, 237, 239, 245, 248, 249, 251, 254, 255, 256, 257, 263, 265, 266, 268, 270, 273, 280, 289, 291, 310, 331, 332, 334, 343, 344, 345, 351, 360, 362, 378, 402, 411, 413, 429, 455, 464, 466, 485, 506, 507, 509, 514, 523, 525, 532, 548, 549, 551, 557, 558, 561, 563, 566, 570, 573, 592, 599, 600, 601, 602, 604, 610, 611, 613, 614, 615, 619, 621, 623, 624, 625, 627, 633, 634, 637, 638, 639, 640, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 692, 736, 749, 758, 759, 775, 776, 777, 780, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 809, 811, 813, 815, 820, 821, 822, 826, 828, 829, 833, 834, 835, 838, 839, 841, 842, 843, 844, 848, 849, 866, 873, 876, 883, 885, 886, 889, 916, 918, 927, 990], "id1": 127, "id2": 127, "id3": 127, "id_": [795, 803, 828, 842], "id_head": [189, 190, 236, 237, 254, 255, 268, 270, 273], "id_i": 817, "id_index": 918, "id_j": 817, "id_list": 884, "id_map": 844, "id_pair": 111, "id_whitespace_replac": [118, 119], "idea": 776, "ideal": 130, "ident": [1, 114, 115, 123, 127, 551, 604, 623, 627, 657, 872, 905, 993], "identif": 63, "identifi": [57, 103, 107, 108, 111, 112, 116, 118, 119, 120, 121, 122, 125, 128, 129, 216, 256, 300, 421, 475, 599, 654, 773, 777, 813, 821, 844, 988], "ids_to_keep": [183, 230, 248, 266, 803], "idx": [328, 394, 447, 504, 545], "ie": [305, 480], "ignor": [16, 47, 69, 78, 105, 106, 115, 116, 117, 118, 119, 122, 123, 127, 130, 265, 300, 301, 344, 345, 370, 371, 421, 422, 475, 476, 529, 561, 613, 637, 649, 650, 651, 652, 653, 768, 775, 776, 839, 877, 896, 931, 953, 954, 990, 993, 995], "ignore_axis_label": 931, "ignore_direction": 931, "ignore_metadata": 53, "ignore_method_nam": 931, "ii": 773, "iii": 84, "ij": 651, "il": 397, "illumina": [119, 126], "illumina1": [119, 126], "illumina_1": 126, "illustr": [509, 649, 653], "iloc": 35, "ilr": [578, 588, 597], "ilr_inv": 597, "im": [121, 201, 213], "im1": 213, "im2": 213, "imagin": 123, "immedi": [118, 125, 889], "immut": [509, 990], "implement": [0, 1, 60, 63, 68, 69, 73, 78, 83, 88, 99, 104, 105, 106, 109, 110, 119, 123, 127, 130, 141, 142, 143, 144, 170, 256, 596, 748, 762, 763, 768, 769, 840, 841, 870, 926, 928], "impli": [47, 170, 657], "implicit": 820, "implicitli": 113, "import": [0, 1, 28, 29, 30, 31, 32, 33, 38, 40, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 74, 78, 94, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 191, 201, 213, 275, 276, 277, 280, 282, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 334, 344, 345, 346, 347, 348, 351, 353, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 402, 404, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 450, 451, 452, 455, 457, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 547, 558, 559, 562, 565, 567, 570, 573, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 611, 616, 619, 621, 634, 641, 644, 645, 647, 649, 650, 651, 653, 654, 657, 658, 747, 748, 759, 773, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 848, 849, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 932, 952, 988, 990, 993, 995], "import_modul": 130, "impos": [78, 105, 106], "improv": [53, 123, 125, 275, 397, 450, 638], "impur": 98, "imput": [578, 590], "incid": 657, "includ": [1, 47, 53, 55, 59, 67, 68, 78, 94, 105, 106, 110, 111, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 173, 188, 217, 219, 220, 235, 238, 253, 256, 257, 263, 268, 270, 271, 272, 274, 282, 291, 296, 304, 305, 315, 324, 328, 330, 331, 332, 333, 344, 345, 353, 362, 366, 382, 391, 394, 396, 404, 413, 417, 434, 443, 447, 449, 450, 457, 466, 471, 479, 480, 490, 499, 502, 504, 506, 507, 508, 516, 525, 535, 543, 545, 546, 547, 557, 559, 568, 574, 581, 599, 610, 617, 622, 633, 638, 642, 645, 648, 649, 650, 652, 653, 654, 658, 758, 759, 760, 761, 763, 768, 769, 773, 777, 795, 800, 830, 837, 838, 843, 845, 862, 863, 865, 894, 896, 897, 900, 901, 902, 904, 917, 919, 920, 925, 988, 989, 990, 991, 993, 994], "include_collapsed_metadata": 795, "include_self": [869, 894, 897, 900, 901, 902, 917, 920, 993], "inclus": [170, 191, 212, 294, 313, 364, 381, 415, 433, 469, 488, 527, 534, 650], "incom": 867, "incomplet": [275, 346, 397, 450, 509], "inconsist": 562, "incorpor": [1, 94, 577], "incorrect": 1, "incorrectli": 804, "increas": [586, 599, 600, 654, 655, 657, 747, 773, 776, 795, 842], "incub": 776, "ind": [773, 777], "inde": 657, "independ": [332, 345, 507, 657, 669, 670, 691, 702, 735, 746, 820, 920], "index": [0, 1, 28, 30, 33, 35, 42, 45, 48, 49, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 80, 82, 83, 86, 87, 89, 95, 97, 98, 99, 102, 103, 116, 118, 125, 126, 128, 185, 189, 190, 232, 236, 237, 250, 254, 255, 256, 273, 282, 312, 353, 380, 404, 431, 457, 487, 516, 533, 548, 551, 570, 579, 580, 581, 586, 599, 601, 604, 619, 624, 627, 644, 645, 649, 650, 651, 652, 653, 658, 692, 736, 749, 759, 775, 782, 793, 795, 805, 821, 822, 825, 838, 839, 886, 889, 899, 900, 918, 926, 930], "indexerror": [782, 811], "indic": [1, 15, 29, 30, 33, 42, 51, 52, 69, 72, 73, 88, 94, 111, 112, 118, 119, 127, 130, 174, 180, 191, 192, 198, 201, 204, 210, 221, 227, 239, 245, 256, 257, 263, 277, 280, 282, 289, 295, 297, 300, 301, 303, 306, 307, 308, 309, 310, 311, 312, 315, 320, 322, 323, 325, 328, 334, 335, 341, 348, 351, 353, 360, 365, 367, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 387, 389, 390, 392, 394, 399, 402, 404, 411, 416, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 439, 441, 442, 444, 445, 447, 452, 455, 457, 464, 470, 472, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 490, 495, 497, 498, 500, 504, 511, 514, 516, 523, 529, 531, 532, 533, 535, 540, 542, 544, 545, 547, 581, 586, 597, 649, 651, 652, 653, 657, 747, 758, 759, 775, 805, 839, 882, 884, 922, 965, 976, 993, 995], "indicatd": 995, "indirectli": 909, "indiscern": 623, "individu": [1, 69, 70, 71, 74, 77, 78, 79, 81, 86, 87, 88, 89, 90, 95, 99, 102, 105, 106, 112, 118, 256, 547, 581, 775, 782, 995], "indptr": [805, 839], "ineffici": [782, 928], "ineleg": 900, "inequ": [42, 180, 198, 210, 227, 245, 263, 289, 341, 360, 411, 464, 523, 623, 768], "inf": [79, 127, 911], "infeas": 118, "infect": 777, "infer": [120, 127, 162, 166, 188, 235, 253, 269, 272, 951, 988], "infern": 128, "infin": 127, "infinit": [911, 923, 924], "infinitum": 123, "info": [16, 66, 201, 658, 714], "inform": [16, 47, 55, 59, 71, 86, 94, 114, 115, 116, 117, 118, 119, 120, 126, 127, 129, 191, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 670, 714, 748, 760, 761, 770, 776, 777, 779, 795, 830, 835, 845, 846, 904, 925, 953, 989, 990, 995], "inher": [578, 657], "inherit": [129, 346, 509, 796], "inidic": [14, 16], "initi": [90, 118, 776, 894, 897, 900, 901, 902, 917, 920, 927, 964], "initialize_st": 995, "inlin": 127, "inner": [54, 123, 270, 293, 363, 414, 468, 526, 562], "inord": 920, "inosin": 275, "inplac": [768, 803, 826, 827, 829, 832, 842, 844, 911], "input": [60, 61, 62, 63, 64, 65, 66, 78, 94, 103, 105, 106, 107, 129, 141, 143, 170, 171, 201, 213, 298, 325, 344, 345, 368, 392, 419, 444, 473, 500, 528, 544, 575, 581, 586, 597, 600, 650, 651, 747, 759, 762, 763, 765, 769, 778, 804, 921, 926, 927, 987, 990], "input_is_dens": 806, "ins": [2, 16, 28, 131, 144, 173, 191, 201, 220, 238, 256, 275, 334, 346, 397, 450, 509, 547, 600, 623, 659, 670, 681, 692, 703, 714, 725, 736, 749, 779, 847, 933, 953, 965, 976], "insdc": [117, 120, 191, 220, 256, 269], "insensit": [127, 559, 581, 586], "insert": [123, 212, 868], "insert_length": 868, "insid": [120, 123], "insight": [105, 106], "insignific": 1, "instal": 928, "instanc": [55, 59, 130, 143, 156, 158, 159, 160, 162, 166, 201, 216, 217, 219, 271, 274, 293, 324, 333, 363, 391, 396, 414, 443, 449, 468, 499, 508, 526, 543, 546, 549, 559, 568, 574, 576, 577, 586, 600, 602, 617, 622, 623, 625, 640, 642, 648, 651, 653, 654, 655, 669, 691, 702, 735, 746, 759, 760, 761, 777, 792, 796, 822, 830, 845, 847, 863, 904, 925, 926, 933, 934, 937, 944, 993, 995], "instanti": [16, 117, 130, 346, 995], "instead": [1, 50, 97, 117, 118, 120, 127, 130, 131, 141, 142, 143, 185, 214, 220, 232, 250, 302, 315, 317, 319, 321, 328, 372, 382, 384, 386, 388, 394, 423, 434, 436, 438, 440, 447, 477, 490, 492, 494, 496, 504, 530, 535, 537, 539, 541, 545, 600, 649, 651, 653, 767, 776, 777, 837, 838, 872, 927, 928, 988], "institut": 119, "instruct": 992, "instrument": 118, "int": [16, 40, 50, 57, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 111, 114, 120, 121, 126, 142, 170, 191, 201, 212, 216, 256, 282, 287, 294, 300, 301, 305, 313, 315, 316, 317, 319, 321, 325, 343, 353, 358, 364, 370, 371, 381, 382, 383, 384, 386, 388, 392, 404, 409, 415, 421, 422, 433, 434, 435, 436, 438, 440, 444, 457, 462, 469, 475, 476, 480, 488, 490, 491, 492, 494, 496, 500, 506, 507, 516, 521, 527, 529, 534, 535, 536, 537, 539, 541, 544, 565, 566, 577, 579, 580, 586, 592, 598, 615, 639, 649, 651, 652, 653, 654, 655, 657, 692, 736, 747, 759, 763, 767, 768, 770, 771, 774, 776, 777, 778, 795, 805, 811, 813, 835, 839, 847, 868, 872, 874, 883, 889, 898, 899, 911, 926, 931, 932, 952, 965], "int32": [805, 839], "int64": [1, 28, 46, 54, 292, 296, 326, 366, 417, 467, 471, 501, 509, 581, 805, 839, 990], "integ": [1, 16, 103, 107, 112, 114, 118, 119, 122, 123, 124, 125, 126, 256, 282, 353, 404, 457, 516, 581, 586, 599, 600, 649, 652, 653, 654, 655, 736, 778], "intend": [1, 84, 85, 127, 275, 346, 397, 747, 759, 930, 931], "intens": 776, "interablemetadata": 213, "interact": [657, 992], "interest": [1, 127, 509, 581, 599, 657, 762, 770, 776, 893, 895, 995], "interfac": [51, 52, 104, 127, 310, 312, 378, 380, 429, 431, 485, 487, 532, 533, 547, 649, 650, 651, 652, 926, 988], "interleav": [125, 128], "intermedi": 868, "intern": [57, 113, 120, 123, 597, 865, 867, 869, 875, 877, 880, 889, 898, 903, 909, 919, 921, 922, 988, 993], "internet": [118, 129], "interpret": [1, 47, 74, 78, 103, 105, 106, 107, 112, 123, 127, 220, 256, 578, 762, 763, 770, 806], "interpro": 117, "interquantil": 83, "interrog": 953, "intersect": [293, 363, 414, 468, 526, 820, 848, 849, 873, 876], "interv": [68, 73, 77, 84, 117, 120, 121, 201, 202, 203, 204, 210, 212, 213, 214, 215, 216, 218, 275, 280, 292, 309, 330, 351, 377, 397, 402, 428, 450, 455, 467, 484, 509, 514, 531, 586, 774, 987], "interval_metadata": [120, 121, 191, 201, 213, 216, 275, 280, 282, 309, 346, 351, 353, 377, 397, 402, 404, 428, 450, 455, 457, 484, 509, 514, 516, 531], "intervalmetadata": [121, 191, 200, 275, 397, 450, 509], "intracellular": 128, "introduc": [69, 80, 116, 118, 578], "introduct": 987, "intron": [318, 385, 437, 450, 493, 538], "intvl": 201, "invalid": [1, 50, 54, 78, 94, 103, 105, 106, 107, 118, 269, 275, 397, 450, 650, 651, 759, 779, 846, 864, 869, 879, 890, 899, 903], "invalidate_cach": [869, 875], "invent": 119, "invers": [47, 580, 585, 588, 594], "inverse_shannon_uncertainti": 47, "invert": [315, 382, 434, 490, 535, 803], "investig": 1, "involv": [94, 579], "inward": 83, "io": [1, 55, 59, 78, 105, 106, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 599, 617, 622, 642, 648, 759, 760, 761, 804, 807, 830, 845, 885, 904, 925, 926, 952, 987, 993], "io_registri": 130, "ionom": 596, "ioregistri": [130, 141, 143], "ipr001360": 117, "ipr013781": 117, "ipr017853": 117, "ipr033132": 117, "ipyparallel": 108, "ipython": 749, "irrelev": [60, 61, 62], "irsairagsnvkgfyawsfldcnewfagftvrfglnfvd": 117, "is_circular": 121, "is_reverse_compl": [326, 501], "is_root": [888, 892, 993], "is_tip": [869, 888, 891, 993], "is_zero_bas": 15, "ism": [78, 105, 106], "isn": [28, 45, 48, 54, 80, 127, 128, 141, 143, 171, 191, 587, 588, 778, 822], "isnapshgnakpsystnpmtnisfekhgiplgpraasiwiyvypymfiqedf": 117, "iso": [805, 839], "isoleucin": 397, "isometr": [578, 579, 580, 587, 588], "isometri": [584, 585, 587, 588], "isomorph": [123, 584, 585, 587, 588], "issu": [76, 117, 118, 119, 127, 142, 927, 988], "isubsampl": 778, "item": [60, 61, 62, 63, 64, 65, 66, 128, 302, 325, 372, 392, 423, 444, 477, 500, 509, 530, 544, 558, 573, 611, 621, 634, 647, 747, 778, 799, 835, 869, 911, 918, 919, 953, 954, 964, 995], "iter": [28, 38, 43, 48, 53, 60, 61, 62, 63, 64, 65, 66, 67, 103, 107, 108, 111, 126, 183, 191, 212, 213, 214, 216, 230, 248, 266, 282, 285, 290, 293, 301, 315, 325, 328, 353, 356, 361, 363, 371, 382, 392, 394, 404, 407, 412, 414, 422, 434, 444, 447, 457, 460, 465, 468, 476, 490, 500, 504, 516, 519, 524, 526, 529, 535, 544, 545, 547, 558, 561, 563, 565, 573, 581, 611, 613, 614, 621, 634, 637, 638, 647, 650, 653, 654, 747, 759, 776, 777, 785, 795, 796, 803, 804, 805, 816, 817, 820, 828, 834, 842, 848, 849, 856, 873, 876, 877, 886, 894, 897, 900, 901, 902, 910, 911, 917, 920, 950, 952, 954, 976, 993, 995], "iter_": [817, 954], "iter_km": [302, 372, 423, 477, 530], "its": [1, 28, 45, 46, 48, 49, 51, 52, 53, 54, 60, 61, 62, 92, 117, 118, 119, 120, 123, 124, 128, 130, 143, 170, 191, 201, 256, 270, 302, 309, 310, 312, 317, 372, 377, 378, 380, 384, 423, 428, 429, 431, 436, 477, 484, 485, 487, 492, 509, 530, 531, 532, 533, 537, 551, 559, 582, 604, 627, 650, 758, 762, 764, 767, 772, 803, 847, 869, 899, 900, 909, 914, 919, 920, 926, 927, 951, 988, 993], "itself": [118, 125, 129, 171, 191, 275, 334, 397, 450, 509, 547, 657, 749, 803, 827, 842, 847, 990], "itypeerror": 107, "iupac": [118, 119, 125, 126, 275, 305, 334, 344, 397, 450, 480, 509, 990], "iv": [83, 88, 94], "j": [60, 62, 63, 65, 78, 81, 82, 90, 94, 95, 105, 106, 112, 114, 115, 118, 119, 120, 128, 129, 397, 558, 559, 573, 578, 587, 588, 589, 590, 592, 596, 598, 611, 621, 634, 647, 651, 652, 653, 763, 817, 877, 926], "j00123": 120, "j04373": 128, "jag": 822, "jaim": 867, "je": 657, "jet": 1, "jim": 119, "jj": [592, 598], "joe": 125, "join": [53, 114, 115, 119, 126, 128, 129, 270, 293, 363, 414, 468, 526, 796, 919, 926, 927], "joint": 120, "joseph": [118, 125, 993], "jost": 94, "journal": [16, 66, 69, 72, 79, 94, 95, 97, 99, 120, 592, 598, 649], "json": [779, 806, 840, 846], "json_obj": 806, "json_tabl": 806, "juli": [16, 66], "julia": 870, "june": 123, "jupyt": 759, "just": [83, 84, 85, 90, 130, 789, 800, 817, 820, 841, 910, 988, 993, 995], "justif": 83, "jyzox": 119, "k": [16, 69, 74, 94, 95, 97, 98, 99, 108, 275, 302, 316, 317, 372, 383, 384, 397, 423, 435, 436, 450, 477, 491, 492, 530, 536, 537, 547, 559, 577, 596, 650, 657, 877, 911, 918, 926], "k_": 773, "k__a": 795, "ka": 119, "kan": 129, "kannan": 129, "karsch": 129, "keemei": 127, "keep": [120, 127, 214, 282, 353, 404, 457, 516, 747, 793, 794, 803, 815, 820, 909, 910], "kegg_pathwai": [805, 822, 839], "kei": [5, 28, 45, 48, 49, 51, 56, 67, 117, 118, 120, 128, 212, 216, 275, 299, 310, 318, 325, 369, 378, 385, 392, 397, 420, 429, 437, 444, 450, 474, 485, 493, 500, 509, 532, 538, 544, 563, 614, 638, 795, 799, 822, 844, 898, 918, 926, 995], "kellei": [105, 106], "kempton": 83, "kendalltau": 651, "kept": 120, "kestrel": 128, "keto": 275, "keyerror": [653, 822], "keyword": [55, 59, 66, 117, 120, 122, 142, 162, 163, 164, 166, 167, 168, 216, 217, 219, 271, 274, 318, 324, 331, 332, 333, 385, 391, 396, 437, 443, 449, 493, 499, 506, 507, 508, 538, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925], "khovanskaya": 129, "kill": 593, "kind": 762, "kinet": 90, "kingdom": [114, 115, 129], "kit": 987, "kj": 78, "klein": 120, "kmer": [316, 317, 383, 384, 435, 436, 491, 492, 536, 537, 577], "kmer_frequ": [302, 372, 423, 477, 530], "knight": [76, 78, 105, 106, 759], "know": [1, 16, 78, 105, 106, 116, 118, 125, 128, 130, 581, 773, 928, 988], "knowledg": [908, 988], "known": [69, 123, 162, 166, 596, 597, 763, 768, 990], "kortlev": 128, "kr": 649, "kruskal": [581, 776, 777], "kuo": 69, "kva": [332, 345, 507], "kw": 117, "kwarg": [55, 59, 66, 103, 107, 108, 111, 141, 143, 155, 162, 163, 164, 165, 166, 167, 168, 171, 172, 217, 219, 271, 274, 324, 331, 332, 333, 391, 396, 443, 449, 499, 506, 507, 508, 543, 546, 547, 568, 574, 617, 622, 642, 648, 736, 760, 761, 779, 807, 830, 845, 904, 925, 953, 988], "kwarg1": 130, "kz": 119, "l": [16, 70, 71, 78, 83, 84, 94, 102, 117, 119, 129, 344, 397, 596, 651, 748, 762, 763, 770, 919], "l1": 30, "l2": 30, "l3": 30, "lab": [759, 776], "label": [28, 30, 33, 35, 45, 48, 49, 54, 56, 57, 58, 116, 118, 120, 125, 127, 128, 567, 596, 599, 616, 641, 649, 650, 652, 653, 654, 749, 759, 867, 931], "labor": 776, "lack": 862, "lafond": 596, "lahaeavhvyktkyqayqkgkigitlvsnwlmplddnsipdikaaersldfq": 117, "lambda": [117, 747, 773, 776, 777, 795, 803, 807, 828, 831, 833, 842, 869, 882, 903, 906, 911, 922, 926, 927, 995], "lane": 126, "lane_numb": 126, "langl": [587, 589], "lapoint": 596, "larg": [16, 79, 83, 105, 106, 112, 118, 125, 590, 591, 650, 770, 776, 805, 865, 872], "larger": [47, 776], "largest": [16, 102, 816, 829], "last": [46, 117, 125, 315, 344, 382, 434, 490, 509, 535, 651, 748, 995], "later": [119, 775], "latter": [1, 547], "law": 77, "layout": 120, "lb": 119, "lca": [78, 94, 867, 895], "ldot": [579, 580, 584, 585, 587, 588, 593, 594, 595], "lead": [78, 103, 105, 106, 107, 118, 119, 122], "learn": [779, 846], "least": [51, 52, 90, 123, 127, 256, 300, 309, 310, 312, 370, 377, 378, 380, 421, 428, 429, 431, 475, 484, 485, 487, 531, 532, 533, 581, 651, 759, 776, 777, 929, 995], "leav": [83, 117, 327, 393, 446, 503, 803, 826], "lee": [16, 66, 69], "left": [54, 69, 97, 123, 188, 235, 253, 270, 272, 579, 580, 584, 589, 593, 594, 595, 596, 867, 889, 930, 931, 993], "left_child_id": 918, "leftmost": 129, "legaci": [114, 115, 118], "legal": 170, "legend": 759, "legendr": [651, 748, 762, 763, 765, 766, 768, 769, 770], "len": [16, 28, 40, 287, 358, 409, 462, 521, 559, 655, 777, 848, 849, 873, 876, 914, 926, 995], "length": [0, 1, 16, 28, 45, 46, 48, 53, 60, 61, 62, 78, 94, 105, 106, 112, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 201, 213, 275, 276, 282, 287, 292, 293, 294, 296, 299, 302, 304, 305, 315, 316, 317, 319, 320, 321, 322, 326, 327, 328, 330, 331, 332, 334, 344, 345, 346, 347, 353, 358, 363, 364, 366, 369, 372, 382, 383, 384, 386, 387, 388, 389, 393, 394, 397, 398, 404, 409, 414, 415, 417, 420, 423, 434, 435, 436, 438, 439, 440, 441, 446, 447, 450, 451, 457, 462, 467, 468, 469, 471, 474, 477, 479, 480, 490, 491, 492, 494, 495, 496, 497, 501, 502, 503, 504, 506, 507, 509, 510, 516, 521, 526, 527, 530, 535, 536, 537, 539, 540, 541, 542, 545, 563, 576, 577, 581, 586, 614, 638, 649, 652, 653, 657, 767, 768, 776, 777, 805, 839, 847, 862, 868, 877, 878, 887, 909, 916, 918, 921, 922, 927, 990, 993, 995], "lengtherror": 909, "leq": 578, "less": [16, 69, 78, 85, 105, 106, 108, 125, 127, 316, 317, 383, 384, 435, 436, 491, 492, 536, 537, 577, 651, 654, 747, 762, 778, 795, 835, 898, 932], "lesser": 94, "let": [1, 118, 119, 121, 125, 126, 128, 191, 201, 325, 392, 444, 500, 509, 544, 581, 651, 747, 772, 773, 776, 777, 816, 928, 990, 993, 995], "letter": [76, 78, 118, 120, 397], "leu": 397, "leucin": 397, "level": [57, 84, 123, 170, 256, 581, 775, 776, 885, 933, 990], "levelord": [897, 900, 901, 902, 917, 920], "leven": 653, "lewi": 94, "lexicon": [118, 119, 125], "lfc_result": 586, "li": 94, "librari": [16, 66, 105, 106, 118, 987, 988], "libreria": 80, "licens": [835, 987], "life": 78, "like": [1, 60, 61, 62, 108, 118, 120, 121, 122, 124, 127, 130, 318, 385, 437, 493, 538, 547, 599, 657, 680, 692, 713, 714, 724, 736, 768, 770, 776, 777, 800, 804, 807, 811, 840, 841, 952, 988, 995], "likelihood": 547, "likelyhood": [767, 771], "likewis": [54, 94, 128], "limit": [1, 77, 114, 123, 124, 125, 775, 776, 927], "limits_": [584, 585, 588, 589, 596], "linalg": 772, "linamaras": 117, "line": [80, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 170, 776, 804, 807, 865], "lineag": [129, 776, 886, 919], "lineage_map": 886, "linear": [80, 117, 120, 749, 763], "link": [107, 200, 256, 650, 657, 847], "linkag": [777, 884], "linkage_matrix": 884, "linnean": 94, "linux": 811, "lipman": [114, 115, 118], "list": [1, 66, 78, 94, 105, 106, 109, 110, 114, 117, 119, 120, 121, 124, 127, 128, 129, 130, 141, 143, 159, 160, 170, 201, 325, 392, 444, 500, 509, 544, 557, 561, 564, 597, 599, 610, 613, 633, 637, 651, 653, 654, 670, 692, 703, 725, 758, 773, 775, 776, 777, 795, 799, 803, 804, 805, 807, 816, 822, 833, 834, 839, 847, 863, 869, 877, 879, 881, 884, 893, 895, 896, 911, 912, 916, 918, 919, 926, 927, 988, 995], "liter": 123, "literatur": [1, 74, 777], "live": [1, 215], "lkwh": [332, 345, 507], "ll": [1, 78, 105, 106, 650, 651, 654, 748, 773, 776, 777, 993, 995], "lladser": [84, 85, 105, 106], "lladser_ci": 85, "lladser_p": 84, "ln": [71, 79, 86, 95, 579, 581, 584, 589, 596], "load": [0, 118, 119, 124, 126, 127, 188, 235, 253, 256, 272, 559, 581, 599, 600, 649, 650, 653, 654, 805, 951, 952, 988], "loc": [35, 509, 581, 776], "local": [0, 63, 64, 65, 114, 115, 120], "local_pairwise_align": [60, 61, 62, 64, 65], "local_pairwise_align_nucleotid": [60, 61, 62, 63, 65], "local_pairwise_align_protein": [0, 60, 61, 62, 63, 64], "local_pairwise_align_ssw": [0, 60, 61, 62, 63, 64, 65], "locat": [16, 55, 59, 117, 123, 128, 156, 157, 158, 191, 217, 219, 271, 274, 300, 301, 324, 333, 370, 371, 391, 396, 421, 422, 443, 449, 475, 476, 499, 508, 529, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 824, 830, 845, 904, 908, 925, 930, 994], "loci": 16, "locu": [117, 120, 129], "log": [86, 578, 579, 580, 581, 584, 585, 586, 587, 588, 592, 598], "log2": 586, "log_2": 97, "logarithm": [82, 97, 581], "logic": [130, 953], "logratio": 578, "long": [116, 118, 125, 127, 300, 370, 421, 475, 579, 650, 736, 762], "long_method_nam": [749, 931], "longer": [118, 125, 578, 777], "look": [67, 122, 124, 125, 130, 216, 325, 392, 444, 500, 506, 507, 544, 551, 581, 604, 627, 759, 775, 776, 777, 800, 869, 976, 993, 995], "lookup": [60, 61, 62, 63, 64, 65, 156, 157, 158, 551, 604, 627, 651, 654, 864, 875, 879, 889, 890, 899, 903, 918, 953], "lookup_id": [548, 566, 601, 615, 624, 639], "loop": [118, 923, 924], "loos": [1, 657], "lorenz": 80, "lose": [653, 768], "loss": [78, 657], "lost": [653, 768], "lot": 762, "love": [779, 846], "lovel": [592, 598], "low": [85, 748, 768, 776], "lower": [83, 84, 118, 125, 191, 256, 581, 586, 638, 645, 651, 747, 748, 777], "lower_bound": [73, 77, 84], "lower_quantil": 83, "lowercas": [16, 117, 118, 119, 120, 126, 275, 293, 346, 363, 397, 414, 450, 468, 509, 526], "lowest": [78, 94, 893, 895], "lowest_common_ancestor": 893, "lozupon": [78, 105, 106], "lq": 83, "lsmat": [568, 574, 617, 622, 642, 648], "luca": 867, "ly": 397, "lysin": 397, "m": [16, 63, 69, 78, 94, 105, 106, 114, 115, 117, 119, 125, 129, 275, 334, 335, 344, 397, 450, 559, 650, 653, 657, 759, 762, 763, 769, 770, 772, 775, 805, 811, 839, 910, 927], "m1": 872, "m2": 872, "m24803": 128, "m24804": 128, "m_shape": 772, "ma": [69, 328, 394, 447, 504, 545], "machin": 126, "machine_nam": 126, "macrophag": 776, "madden": 118, "made": [28, 90, 509, 581, 600, 623, 747, 795, 863, 880, 881, 903, 929], "magnitud": [90, 586, 651, 653, 768, 928], "magnoliophyta": 117, "magnuson": 94, "magurran": [83, 89], "mai": [1, 2, 16, 47, 56, 78, 85, 115, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 142, 159, 160, 170, 191, 215, 256, 268, 269, 275, 302, 346, 372, 397, 423, 450, 477, 509, 530, 547, 551, 561, 576, 581, 599, 604, 613, 627, 637, 651, 653, 657, 747, 762, 773, 775, 776, 777, 778, 795, 885, 928, 951, 953, 988, 990], "main": 220, "mainli": [658, 748], "maintain": [118, 123, 130, 640, 762, 763, 773, 776], "major": [46, 578, 645, 805, 839, 926], "make": [47, 54, 118, 123, 127, 130, 188, 235, 253, 256, 272, 335, 551, 576, 604, 627, 649, 653, 777, 915, 918, 919, 927, 933, 953, 995], "mam": 129, "manag": [170, 171, 172], "mandal": 581, "mani": [1, 69, 93, 110, 123, 127, 547, 578, 581, 657, 762, 768, 776, 777, 795, 995], "manipul": [0, 51, 52, 127, 256, 310, 312, 378, 380, 429, 431, 485, 487, 509, 532, 533, 578, 599, 805], "mann": 581, "manner": [46, 118, 125, 282, 296, 353, 366, 404, 417, 457, 471, 516, 651, 768], "mannwhitneyu": 581, "mantel": [1, 599, 654, 657], "manual": [69, 73, 83, 88, 127, 926], "map": [1, 49, 56, 108, 144, 256, 269, 651, 654, 657, 658, 692, 736, 759, 775, 777, 795, 844, 886, 889, 990], "map_async": 108, "map_f": 108, "mar": [60, 63, 82], "marchand": 596, "marguerat": [592, 598], "margush": 926, "marin": 650, "mark": [117, 120, 128, 995], "marrow": 776, "marth": [16, 66], "marti": [652, 653], "martin": [578, 590], "mask": [16, 328, 394, 447, 504, 545, 592, 598], "mask_auto": 16, "mask_gap": [328, 394, 447, 504, 545], "mask_length": 16, "mat": [547, 559, 562, 565, 579, 580, 582, 583, 584, 585, 587, 588, 590, 591, 592, 916], "match": [0, 16, 45, 48, 54, 61, 64, 67, 114, 118, 119, 127, 170, 171, 184, 189, 190, 231, 236, 237, 249, 254, 255, 256, 268, 270, 273, 280, 300, 301, 319, 321, 322, 329, 344, 351, 370, 371, 386, 388, 389, 395, 402, 421, 422, 438, 440, 441, 448, 455, 475, 476, 494, 496, 497, 505, 514, 529, 539, 541, 542, 565, 600, 649, 651, 653, 654, 773, 775, 776, 777, 871, 872, 881, 883, 990, 995], "match_frequ": [321, 388, 440, 496, 541, 990], "match_scor": [16, 61, 64, 67], "matevz": 596, "math": 835, "mathbb": [579, 580, 581, 584, 585, 587, 588], "mathemat": [74, 97, 105, 578, 748, 867, 870, 926], "mathemt": 106, "matplotlib": [567, 616, 641, 749, 759], "matric": [1, 62, 65, 112, 122, 397, 547, 549, 556, 559, 564, 599, 600, 602, 609, 625, 632, 650, 651, 654, 656, 657, 764, 768, 872], "matrix": [1, 16, 67, 103, 107, 108, 111, 328, 394, 447, 504, 545, 547, 548, 549, 551, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 571, 572, 573, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 604, 609, 610, 611, 612, 613, 614, 615, 616, 620, 621, 623, 624, 625, 627, 632, 633, 634, 636, 637, 638, 639, 640, 641, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 748, 759, 762, 764, 765, 766, 768, 769, 770, 772, 774, 779, 780, 782, 795, 805, 806, 809, 824, 831, 835, 837, 838, 839, 846, 884, 916, 927, 987, 992], "matrix_data": [779, 846], "matrix_element_typ": 806, "matrix_rank": 772, "matsen": 94, "matter": [127, 192, 213, 551, 604, 627], "matthew": 926, "matto": 596, "max": [16, 69, 70, 90, 776, 777, 816, 887], "max_count": [773, 776, 777], "max_i": 102, "max_sample_count": 816, "max_width": 118, "maxim": [16, 94, 650, 763], "maxima": 819, "maximum": [95, 102, 118, 119, 581, 586, 650, 692, 747, 763, 767, 771, 776, 777, 819, 872], "mccoi": 94, "mcdonald": [779, 846], "mcentyr": 118, "mci": 990, "mcintosh": [87, 88], "mcintosh_": 87, "mcintosh_d": 88, "mcmorri": 926, "md": [118, 791, 799, 803, 828, 842], "md5": [117, 952], "md_i": 817, "md_j": 817, "mdfivaifalfvissftitstnaveastlldignlsr": 117, "mean": [121, 123, 130, 170, 201, 216, 275, 304, 305, 479, 480, 558, 573, 578, 581, 584, 586, 596, 611, 621, 634, 647, 714, 736, 762, 766, 767, 768, 771, 773, 774, 776, 777, 805, 839, 988, 993], "meaning": [16, 45, 48, 54, 768, 990], "measur": [1, 74, 76, 82, 84, 85, 88, 89, 93, 94, 95, 97, 98, 99, 105, 106, 547, 581, 592, 598, 599, 762, 775, 776, 847, 867, 989], "mechan": [953, 995], "media": 776, "median": [581, 653], "medic": 117, "medlin": 128, "meepqsdpsv": [328, 394, 447, 504, 545], "meet": [66, 127, 216, 268, 269, 922], "member": [162, 166, 953, 976, 995], "membership": 130, "meme_v4": 116, "memo": [32, 203, 279, 350, 401, 454, 513], "memori": [80, 116, 118, 119, 120, 125, 126, 128, 256, 599, 654, 747, 768, 779, 846, 952, 988], "mengyao": [16, 66], "menopaus": 777, "menten": 90, "mention": 123, "merg": 256, "merged_t": 820, "messag": [1, 78, 103, 105, 106, 107, 670, 714, 932, 988], "met": [1, 397, 976], "met_neg": 777, "met_po": 777, "meta": [127, 775, 776], "metabolit": [1, 777, 779, 846, 989], "metabolite_test": 777, "metadata": [0, 1, 28, 33, 42, 45, 46, 48, 51, 52, 53, 54, 56, 57, 113, 116, 117, 118, 119, 120, 121, 125, 126, 275, 280, 282, 289, 291, 292, 293, 296, 299, 309, 310, 312, 318, 325, 326, 330, 331, 332, 334, 344, 345, 346, 351, 353, 360, 362, 363, 366, 369, 377, 378, 380, 385, 392, 397, 402, 404, 411, 413, 414, 417, 420, 428, 429, 431, 437, 444, 450, 455, 457, 464, 466, 467, 468, 471, 474, 484, 485, 487, 493, 500, 501, 502, 506, 507, 509, 514, 516, 523, 525, 526, 531, 532, 533, 538, 544, 563, 614, 638, 650, 658, 670, 692, 703, 714, 736, 759, 770, 773, 775, 776, 777, 780, 790, 791, 793, 794, 795, 799, 800, 803, 805, 806, 807, 810, 815, 820, 822, 828, 837, 838, 839, 841, 842, 843, 987, 990, 991], "metadata_f": 795, "metadata_field": [805, 839], "metadata_formatt": [800, 841], "metadata_i": 817, "metadata_j": 817, "metadata_map": [658, 659, 681, 692, 725, 736], "metadatacolumn": [173, 174, 180, 182, 183, 238, 239, 245, 247, 248, 256, 267], "metadatafileerror": 269, "metag": 792, "metagenom": 792, "metatdata": 117, "metdata": [509, 820], "methionin": [344, 397], "method": [0, 1, 2, 16, 28, 35, 47, 54, 55, 59, 60, 80, 103, 105, 107, 108, 111, 113, 124, 127, 131, 141, 143, 144, 161, 173, 191, 201, 212, 217, 219, 220, 238, 256, 271, 274, 275, 278, 279, 293, 302, 324, 326, 332, 333, 334, 343, 345, 346, 349, 350, 363, 372, 391, 396, 397, 400, 401, 414, 423, 443, 449, 450, 453, 454, 468, 477, 499, 501, 507, 508, 509, 512, 513, 526, 530, 543, 546, 547, 568, 574, 578, 581, 586, 590, 596, 599, 600, 617, 622, 623, 640, 642, 648, 649, 650, 651, 652, 653, 654, 659, 670, 680, 681, 692, 703, 713, 714, 724, 725, 736, 747, 749, 759, 760, 761, 762, 763, 768, 779, 829, 830, 839, 845, 847, 848, 849, 865, 867, 868, 869, 872, 873, 875, 876, 877, 878, 880, 882, 883, 903, 904, 909, 911, 923, 924, 925, 926, 927, 933, 945, 952, 953, 954, 964, 976, 987, 990, 993, 995], "metodologica": 80, "metric": [47, 69, 74, 78, 79, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 298, 368, 419, 473, 528, 563, 577, 614, 623, 638, 847, 990], "metricspac": 623, "mgc": 129, "micha": 90, "michael": 119, "microbi": [78, 84, 85, 94, 105, 106, 581, 649, 650, 652, 653, 759], "microbiol": [105, 106], "microbiom": [1, 94, 108, 581, 586, 768], "microsoft": 127, "mid": 909, "middl": 215, "midpoint": [909, 927], "mieadkvahvqvgnnleh": 128, "might": [1, 80, 122, 124, 650, 775, 776, 777, 872, 988], "miller": [114, 115], "million": 108, "min": [94, 99, 777], "min_count": [773, 776, 777], "min_group_s": 795, "min_length": [300, 315, 370, 382, 421, 434, 475, 490, 535, 990], "minim": 123, "minima": 823, "minimize_scalar": 79, "minimum": [78, 94, 99, 129, 305, 315, 382, 434, 480, 490, 535, 581, 653, 747, 776, 777, 795, 823], "mininum": 586, "minor": [115, 805, 839], "minter": [0, 28, 33, 45, 48, 56, 57, 116, 125], "minu": [47, 120, 128, 725], "mirror": 586, "misc_bind": 120, "miscellan": 987, "mislead": [47, 111], "mismatch": [0, 16, 61, 64, 67, 114, 115, 319, 320, 321, 386, 387, 388, 438, 439, 440, 494, 495, 496, 539, 540, 541, 565, 651, 871], "mismatch_frequ": [319, 386, 438, 494, 539, 990], "mismatch_scor": [16, 61, 64, 67], "miss": [114, 118, 127, 128, 182, 184, 185, 187, 189, 190, 220, 229, 231, 232, 234, 236, 237, 247, 249, 250, 252, 254, 255, 256, 265, 269, 273, 293, 363, 414, 468, 526, 578, 590, 650, 759, 775, 776, 995], "missing_schem": [173, 220, 238], "missingiderror": [551, 558, 561, 566, 573, 604, 611, 613, 615, 621, 627, 634, 637, 639, 647], "missingnodeerror": [78, 94, 103, 105, 106, 107, 880, 881, 883, 898, 911], "mit": 116, "mitochondri": [129, 331, 343, 506], "mix": 127, "mizrachi": 129, "ml": 90, "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm": 334, "mn": 89, "moac": 114, "mode": [47, 130, 170, 344, 777, 795, 953], "model": [83, 84, 85, 90, 559, 578, 586, 599, 777], "moder": 651, "modif": [201, 657], "modifi": [57, 118, 120, 128, 161, 275, 397, 450, 509, 640, 736, 769, 803, 842, 911], "modul": [0, 1, 128, 130, 169, 575, 578, 599, 658, 748, 773, 951, 952, 988, 989, 990, 991, 992, 993, 995], "mol": [60, 63, 114, 115, 117, 120], "mol_typ": [117, 120], "molbev": 927, "molecul": [117, 118, 120, 509, 547, 990], "molecular": [63, 657, 867, 927, 990], "moment": [117, 651, 995], "monkei": 161, "monkey_patch": [141, 143], "monoton": [599, 600, 654, 655], "mont": 773, "month": 129, "mooer": 94, "more": [0, 1, 46, 47, 48, 55, 59, 60, 66, 69, 80, 103, 110, 115, 117, 118, 119, 123, 124, 125, 126, 127, 128, 163, 167, 187, 217, 219, 234, 252, 256, 270, 271, 274, 306, 307, 308, 311, 324, 333, 374, 375, 376, 379, 391, 396, 397, 425, 426, 427, 430, 432, 443, 449, 481, 482, 483, 486, 499, 508, 543, 546, 551, 568, 574, 578, 581, 583, 586, 599, 604, 617, 622, 627, 640, 642, 648, 649, 650, 651, 652, 653, 654, 657, 669, 691, 702, 735, 746, 747, 759, 760, 761, 762, 763, 770, 776, 777, 779, 795, 811, 830, 835, 845, 846, 868, 885, 904, 925, 926, 988, 993, 994], "mosaic": 128, "most": [46, 70, 79, 94, 112, 116, 118, 119, 122, 123, 125, 127, 129, 344, 509, 651, 747, 770, 773, 887, 889, 926, 993], "mostli": [127, 128], "motif": [300, 370, 421, 475, 990], "motif_slic": [300, 370, 421, 475], "motif_typ": [300, 370, 421, 475], "motiv": 108, "mpl": [331, 332, 334, 344, 345, 506, 507], "mpt": [331, 506], "mqhvsapvfvfectrlai": 128, "mrna": 117, "msa": [0, 28, 29, 30, 31, 32, 33, 35, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 56, 57, 58, 116, 118, 119, 125, 128], "msa1": 54, "msa2": 54, "msa_copi": [31, 32], "msl072": 927, "mtcraqliavprassla": 128, "mtrand": [872, 911], "mu": 773, "mu_": 773, "much": [0, 1, 78, 105, 106, 123, 988], "mullikin": 119, "multi": 581, "multi_replac": [581, 591], "multifurc": [123, 993], "multiindex": [57, 645], "multimod": 762, "multinomi": [586, 835], "multipl": [0, 28, 53, 78, 105, 106, 116, 117, 118, 119, 120, 121, 123, 129, 191, 213, 509, 547, 578, 581, 586, 590, 657, 748, 770, 776, 795, 919, 926, 988, 993], "multiple_comparisons_correct": 581, "multipli": 94, "multivari": [579, 649, 650, 652, 653, 762, 763, 987], "must": [16, 28, 45, 48, 54, 55, 59, 78, 80, 94, 105, 106, 107, 108, 111, 114, 116, 118, 119, 122, 123, 124, 125, 127, 128, 142, 216, 217, 219, 256, 268, 270, 271, 274, 275, 293, 298, 318, 324, 331, 333, 363, 368, 385, 391, 396, 397, 414, 419, 437, 443, 449, 450, 468, 473, 493, 499, 506, 508, 509, 526, 528, 538, 543, 546, 561, 568, 574, 581, 586, 597, 600, 613, 617, 622, 637, 642, 648, 649, 650, 651, 652, 653, 655, 657, 680, 713, 724, 747, 759, 760, 761, 762, 767, 776, 777, 778, 795, 803, 804, 811, 820, 828, 830, 840, 841, 842, 845, 869, 904, 911, 919, 925, 926, 927, 930, 932, 952, 953, 976, 995], "mutabl": [80, 509, 933, 990], "mutant": 120, "mutat": [547, 559, 847], "my": 990, "my_obj": 988, "myeloid": 776, "myer": [114, 115], "myformat": [130, 141, 142, 143], "myformat2": [141, 142, 143], "myformat_read": [141, 143], "myformat_sniff": 142, "myobject": [141, 143], "n": [1, 16, 70, 71, 77, 79, 80, 81, 86, 87, 88, 89, 90, 94, 96, 102, 112, 114, 115, 116, 118, 119, 120, 124, 125, 126, 128, 129, 130, 141, 142, 143, 170, 171, 275, 315, 328, 382, 394, 397, 421, 434, 447, 450, 490, 504, 535, 545, 590, 591, 599, 651, 654, 657, 747, 762, 763, 764, 767, 769, 770, 771, 773, 777, 778, 805, 811, 835, 839, 848, 849, 861, 869, 873, 876, 882, 887, 889, 896, 911, 912, 919, 926, 927, 932, 990], "n1": 807, "n4": 807, "n_": [69, 70], "n_compon": [579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598], "n_composit": [579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595], "n_featur": 596, "n_i": [71, 87, 88], "n_ob": 837, "n_partit": 596, "n_var": 837, "na": [127, 804], "naess": 596, "name": [1, 55, 59, 78, 94, 105, 106, 114, 115, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 156, 157, 158, 163, 167, 174, 180, 189, 190, 191, 217, 219, 221, 227, 236, 237, 239, 245, 254, 255, 256, 257, 263, 267, 269, 270, 271, 273, 274, 318, 324, 333, 334, 335, 341, 343, 385, 391, 396, 437, 443, 449, 493, 499, 508, 538, 543, 546, 547, 559, 564, 568, 574, 581, 586, 592, 597, 617, 622, 642, 648, 649, 650, 652, 653, 658, 670, 714, 749, 759, 760, 761, 795, 800, 830, 838, 841, 845, 847, 861, 863, 864, 865, 867, 869, 870, 871, 872, 875, 879, 880, 881, 882, 883, 885, 887, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 906, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 925, 926, 945, 951, 988, 993], "name_txt": 129, "named_gc": 335, "namedtemporaryfil": 170, "nan": [47, 50, 54, 85, 114, 127, 184, 185, 187, 189, 190, 220, 231, 232, 234, 236, 237, 249, 250, 252, 254, 255, 256, 265, 273, 293, 302, 363, 372, 414, 423, 468, 477, 526, 530, 576, 577, 649, 650, 651, 652, 653, 654, 657, 759, 775, 776, 918, 930], "nan_length_valu": 918, "nanmean": 777, "naohisa": 119, "nar": 119, "nasanfta": [315, 382, 434, 490, 535], "nat": 120, "natal": 596, "nation": [118, 129, 559], "nativ": [1, 569, 618, 643, 768], "natl": [62, 65], "natsort": 833, "natur": [74, 83, 98, 99, 256, 833], "nb": 171, "nbk21097": 118, "nbk279675": 114, "nbk279682": 115, "nc": 171, "ncbi": [61, 62, 64, 65, 114, 115, 118, 120, 129, 331, 332, 334, 335, 342, 343, 344, 345, 506, 507, 885, 990], "ncbiinsight": 129, "ncifcrf": 47, "ncrna": 509, "nd": 804, "ndarrai": [50, 107, 275, 277, 294, 295, 297, 298, 303, 313, 314, 319, 320, 321, 322, 323, 328, 348, 364, 365, 367, 368, 373, 381, 386, 387, 388, 389, 390, 394, 397, 399, 415, 416, 418, 419, 424, 433, 438, 439, 440, 441, 442, 445, 447, 450, 452, 469, 470, 472, 473, 478, 488, 489, 494, 495, 496, 497, 498, 504, 509, 511, 527, 528, 534, 539, 540, 541, 542, 545, 551, 569, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 600, 604, 618, 627, 635, 640, 643, 655, 657, 771, 778, 798, 837, 884], "ne2": 117, "nearbi": 16, "nearli": [60, 61, 62], "necessari": [54, 114, 125, 201, 509, 600, 649, 650, 651, 680, 713, 724, 872, 951, 988], "necessarili": [45, 48, 54, 124, 302, 372, 423, 477, 509, 530, 778], "nee": 78, "need": [1, 45, 48, 53, 78, 105, 106, 108, 112, 121, 123, 130, 141, 143, 170, 201, 216, 346, 581, 586, 587, 588, 597, 649, 650, 652, 653, 654, 747, 748, 763, 770, 773, 776, 777, 805, 869, 872, 930, 931, 953, 995], "needl": 60, "needleman": [0, 60, 61, 62], "neg": [1, 16, 61, 64, 67, 80, 127, 344, 583, 590, 591, 623, 762, 763, 768, 773, 777, 927], "negat": 214, "neglig": 1, "nei": 927, "neighbor": [120, 912, 927], "neighbour_join": 927, "neither": [28, 56, 171, 831, 911, 920], "nellangiqpfvtlfhwdlpqvledeyggflnsgvindfrdytdlcfkefgd": 117, "neq": 773, "nest": [123, 599, 651, 822, 837, 914, 993], "never": [118, 128], "new": [0, 45, 48, 55, 56, 57, 71, 82, 84, 85, 105, 129, 141, 142, 143, 155, 165, 201, 217, 270, 271, 282, 293, 296, 324, 325, 353, 363, 366, 391, 392, 404, 414, 417, 443, 444, 457, 468, 471, 499, 500, 509, 516, 526, 543, 544, 568, 617, 640, 642, 651, 652, 654, 760, 763, 771, 803, 826, 827, 829, 830, 832, 834, 842, 843, 844, 848, 849, 873, 876, 903, 904, 908, 909, 923, 924, 927, 990, 993, 995], "new_fasta_fh": 118, "new_fh": 119, "new_qual_fh": 118, "new_tabl": [803, 826, 833], "new_taxdump": 129, "new_tre": [923, 924], "newcastl": 117, "newick": [78, 105, 106, 805, 810, 839, 861, 867, 904, 925, 927, 988, 993], "newick_doc": 123, "newick_str": 927, "newicktre": 123, "newlin": [118, 123, 125, 130, 131, 162, 163, 166, 167, 170], "next": [1, 78, 84, 85, 105, 106, 117, 123, 130, 509, 581, 736, 762, 926, 993, 995], "nh": 128, "nhx": 128, "nich": 763, "nident": [114, 115], "nih": [61, 62, 64, 65, 114, 115, 118, 120, 126, 129, 334, 342, 343], "nlm": [61, 62, 64, 65, 114, 115, 118, 120, 129, 334, 342, 343], "nnz": [779, 805, 839, 846], "no_gap": [315, 382, 434, 490, 535], "node": [1, 78, 105, 106, 597, 847, 848, 849, 852, 856, 862, 863, 864, 866, 867, 868, 869, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 908, 909, 912, 913, 916, 917, 918, 919, 920, 921, 922, 926, 988, 993], "node_c": 896, "node_id": [883, 889, 918], "node_info": 123, "nodes_new": 129, "nodes_slim": 129, "nolengtherror": [862, 878, 887], "nomenclatur": [275, 346, 397, 450, 509], "non": [28, 72, 80, 114, 116, 117, 121, 127, 191, 275, 311, 323, 327, 379, 390, 393, 397, 430, 442, 446, 486, 498, 503, 547, 578, 579, 580, 581, 583, 586, 590, 591, 593, 594, 595, 623, 649, 652, 653, 657, 762, 768, 773, 779, 805, 820, 839, 842, 871, 872, 877, 990], "non_tip": [894, 900, 901, 902, 917, 920, 926, 993], "noncanon": [327, 393, 446, 503], "none": [16, 28, 45, 47, 48, 55, 56, 57, 61, 62, 64, 65, 66, 78, 90, 94, 103, 105, 106, 107, 108, 114, 118, 122, 130, 131, 141, 143, 156, 157, 158, 162, 166, 170, 188, 191, 201, 212, 214, 216, 217, 235, 253, 256, 265, 268, 269, 271, 272, 275, 294, 298, 300, 301, 302, 313, 324, 328, 329, 346, 364, 368, 370, 371, 372, 381, 391, 394, 395, 397, 415, 419, 421, 422, 423, 433, 443, 447, 448, 450, 469, 473, 475, 476, 477, 488, 499, 504, 505, 509, 527, 528, 529, 530, 534, 543, 545, 563, 567, 568, 581, 586, 587, 588, 590, 591, 592, 600, 614, 616, 617, 623, 638, 641, 642, 649, 650, 651, 652, 653, 654, 655, 659, 681, 692, 725, 747, 749, 759, 760, 764, 767, 768, 771, 772, 774, 775, 776, 777, 779, 795, 799, 800, 805, 806, 807, 810, 815, 820, 821, 830, 831, 835, 839, 840, 841, 842, 846, 847, 867, 868, 872, 875, 877, 885, 894, 896, 899, 900, 901, 902, 904, 911, 915, 916, 918, 919, 920, 923, 924, 926, 927, 953, 954, 976, 990, 993, 995], "nonlinear": 90, "nonmatch": [651, 654], "nonneg": 118, "nonparametr": [77, 578, 590], "nontip": 897, "nonzero": [113, 803, 808, 819, 823, 825, 826, 842, 846], "noparenterror": 862, "noqa": 805, "nor": [28, 45, 48, 56, 122, 125, 600, 831, 911], "norm": [659, 681, 725, 736, 795], "normal": [77, 106, 119, 120, 220, 256, 649, 653, 768, 769, 770, 773, 774, 776, 777, 795, 826, 869], "not_non": [976, 995], "notabl": 119, "notat": [123, 127, 397], "note": [2, 16, 28, 35, 40, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 108, 110, 113, 117, 118, 119, 120, 121, 123, 125, 126, 127, 191, 201, 202, 203, 215, 268, 270, 275, 278, 279, 282, 293, 296, 299, 302, 304, 315, 326, 328, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 349, 350, 353, 363, 366, 369, 372, 382, 394, 397, 400, 401, 404, 414, 417, 420, 423, 434, 447, 450, 453, 454, 457, 468, 471, 474, 477, 479, 490, 501, 502, 504, 506, 507, 509, 512, 513, 516, 526, 530, 535, 545, 547, 551, 558, 559, 569, 572, 573, 576, 577, 581, 586, 587, 588, 590, 592, 596, 597, 598, 600, 604, 611, 618, 620, 621, 623, 627, 634, 635, 640, 643, 646, 647, 649, 650, 651, 652, 653, 654, 657, 747, 759, 762, 763, 768, 770, 771, 776, 777, 778, 779, 782, 795, 796, 804, 805, 811, 820, 822, 835, 837, 838, 839, 846, 865, 867, 868, 869, 870, 872, 877, 883, 885, 911, 916, 918, 919, 920, 921, 926, 927, 930, 932, 951, 952, 990, 993, 995], "notebook": 749, "noth": [57, 170, 270, 329, 395, 448, 505, 953], "notic": [1, 118, 123, 125, 777, 995], "notifi": 651, "notimplementederror": [762, 763], "notion": 651, "notredam": [592, 598], "notstart": 127, "nov": [62, 65, 117, 759], "novel": 581, "novemb": 927, "now": [1, 83, 117, 118, 120, 125, 509, 578, 581, 650, 747, 748, 773, 776, 777, 842, 993, 995], "np": [47, 50, 78, 85, 94, 105, 106, 114, 184, 187, 231, 234, 249, 252, 256, 265, 275, 277, 294, 295, 297, 298, 302, 303, 313, 314, 319, 320, 321, 322, 323, 328, 348, 364, 365, 367, 368, 372, 373, 381, 386, 387, 388, 389, 390, 394, 397, 399, 415, 416, 418, 419, 423, 424, 433, 438, 439, 440, 441, 442, 445, 447, 450, 452, 469, 470, 472, 473, 477, 478, 488, 489, 494, 495, 496, 497, 498, 504, 509, 511, 527, 528, 530, 534, 539, 540, 541, 542, 545, 547, 576, 577, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 649, 651, 652, 653, 654, 657, 658, 747, 748, 759, 772, 773, 775, 776, 777, 778, 792, 793, 794, 795, 796, 798, 799, 802, 803, 809, 810, 811, 812, 813, 815, 816, 819, 820, 821, 823, 826, 827, 828, 829, 831, 833, 834, 835, 836, 837, 841, 842, 844, 889, 911, 926, 930], "np_286546": 114, "npd": 94, "nrte": [315, 382, 434, 490, 535], "ns_": 90, "nt": 191, "nuc": [328, 394, 447, 504, 545, 547, 559], "nuc_pattern": 995, "nuccor": 120, "nucl": 119, "nucleic": [125, 129, 275, 346, 397, 450, 509], "nucleobas": [275, 450], "nucleotid": [0, 16, 61, 64, 115, 117, 118, 119, 120, 275, 292, 314, 326, 328, 394, 447, 450, 467, 489, 501, 504, 545, 547, 559, 995], "nucleotidemixin": [292, 326, 467, 501], "null": [123, 581, 586, 657, 773, 842], "num_it": [773, 776, 777], "num_object": 655, "num_repeat": 90, "num_run": [776, 777], "number": [1, 28, 40, 45, 48, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 112, 114, 116, 117, 118, 120, 123, 125, 126, 128, 129, 170, 191, 212, 256, 287, 294, 302, 319, 321, 358, 364, 372, 386, 388, 409, 415, 423, 438, 440, 462, 469, 477, 494, 496, 521, 527, 530, 539, 541, 547, 562, 580, 581, 586, 590, 591, 593, 594, 595, 596, 600, 649, 650, 651, 652, 653, 654, 655, 657, 692, 736, 747, 763, 767, 768, 770, 771, 773, 774, 776, 777, 778, 779, 795, 805, 809, 811, 825, 835, 839, 867, 874, 911, 930, 931], "number_of_dimens": [653, 768], "numer": [1, 79, 83, 114, 122, 127, 129, 238, 256, 265, 269, 273, 596, 650, 651, 692, 748, 759, 762, 763, 769, 770, 777, 931], "numeric_onli": 1, "numericmetadatacolumn": [220, 256, 267], "numpi": [1, 107, 551, 569, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 604, 618, 627, 635, 643, 649, 653, 655, 657, 658, 692, 714, 736, 747, 748, 773, 775, 776, 777, 778, 792, 793, 794, 795, 796, 799, 802, 803, 809, 810, 811, 812, 813, 815, 816, 820, 821, 825, 826, 827, 828, 829, 831, 833, 834, 835, 836, 839, 841, 842, 872, 911, 990], "nutrient": 596, "nwnnnnnn": [306, 311, 374, 379, 425, 430, 481, 486], "o": [54, 55, 59, 94, 117, 118, 119, 126, 128, 217, 219, 271, 274, 324, 333, 391, 396, 397, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 811, 830, 845, 904, 925, 927, 988, 994], "o1": [793, 794, 796, 799, 802, 803, 809, 810, 811, 812, 813, 815, 816, 820, 821, 822, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 841, 842, 844], "o2": [793, 794, 796, 799, 802, 803, 809, 810, 811, 812, 813, 815, 816, 820, 821, 822, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 841, 842, 844], "o3": [793, 794, 796, 802, 811, 816, 820, 829], "o31698": 128, "o31699": 128, "o4": [793, 794, 796, 811, 829], "o5": [796, 811], "o83071": 128, "ob": [1, 72, 101, 837], "obesrvation_metadata_f": 820, "obf": 119, "obj": [130, 143, 164, 168, 944, 995], "object": [0, 1, 16, 28, 31, 32, 33, 42, 45, 48, 49, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 162, 164, 166, 168, 173, 174, 180, 183, 186, 191, 192, 198, 200, 201, 202, 203, 204, 210, 212, 213, 214, 215, 216, 220, 221, 227, 230, 233, 238, 239, 245, 248, 251, 256, 257, 263, 266, 269, 270, 273, 275, 277, 280, 282, 293, 294, 298, 301, 302, 309, 310, 312, 313, 314, 319, 320, 321, 322, 329, 348, 351, 353, 363, 364, 368, 371, 372, 377, 378, 380, 381, 386, 387, 388, 389, 395, 397, 399, 402, 404, 414, 415, 419, 422, 423, 428, 429, 431, 433, 438, 439, 440, 441, 448, 450, 452, 455, 457, 468, 469, 473, 476, 477, 484, 485, 487, 488, 489, 494, 495, 496, 497, 505, 509, 511, 514, 516, 526, 527, 528, 529, 530, 531, 532, 533, 534, 539, 540, 541, 542, 551, 561, 563, 567, 575, 576, 581, 599, 600, 604, 613, 614, 616, 623, 627, 637, 638, 641, 649, 650, 652, 653, 654, 655, 680, 713, 724, 762, 763, 768, 769, 770, 779, 782, 794, 804, 805, 806, 807, 832, 837, 839, 840, 841, 844, 847, 864, 872, 879, 911, 916, 918, 927, 930, 931, 952, 953, 976, 988, 990, 993, 995], "obs_id": [809, 811, 816], "obs_map": 807, "obs_phi": 795, "observ": [1, 78, 81, 90, 93, 101, 105, 106, 111, 113, 302, 328, 372, 394, 423, 447, 477, 504, 530, 545, 581, 657, 748, 773, 776, 777, 779, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 846, 898, 926, 992, 995], "observation_column_nam": [800, 841], "observation_group_metadata": [779, 810], "observation_id": [779, 816, 824, 829], "observation_index": 779, "observation_metadata": 779, "observation_metadata_f": 820, "observed_char": [302, 372, 423, 477, 530], "observed_featur": 101, "obsolet": 125, "obtain": [79, 256, 282, 353, 404, 457, 509, 516, 558, 559, 573, 581, 599, 611, 621, 634, 645, 647, 649, 651, 653, 947, 948, 949], "obviou": 123, "oc": 117, "occur": [16, 115, 118, 119, 122, 123, 163, 167, 170, 313, 381, 433, 488, 509, 534, 777, 871, 880], "occurr": [75, 100, 294, 306, 307, 308, 311, 364, 374, 375, 376, 379, 415, 425, 426, 427, 430, 432, 469, 481, 482, 483, 486, 527], "oct": [118, 120], "odot": [588, 595], "off": [83, 96, 275, 397, 450, 593, 776, 870, 926, 930, 995], "offer": 953, "offici": 113, "offset": [119, 120], "often": [1, 78, 103, 107, 117, 118, 120, 599, 657, 763, 768, 773, 951], "oh": 987, "ol": 78, "old": 844, "older": 125, "om": [779, 846], "omic": 578, "ominu": 594, "omit": [123, 256, 269, 599, 835, 885, 919, 921, 926, 988], "ommit": 126, "onc": [81, 118, 130, 920], "one": [0, 1, 45, 46, 47, 48, 51, 52, 54, 60, 61, 62, 78, 79, 80, 83, 88, 94, 103, 105, 106, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 142, 163, 167, 187, 189, 213, 216, 218, 234, 236, 252, 254, 256, 285, 290, 293, 306, 307, 308, 309, 310, 311, 312, 344, 356, 361, 363, 374, 375, 376, 377, 378, 379, 380, 397, 407, 412, 414, 425, 426, 427, 428, 429, 430, 431, 432, 460, 465, 468, 481, 482, 483, 484, 485, 486, 487, 519, 524, 526, 531, 532, 533, 547, 551, 563, 581, 600, 604, 614, 627, 638, 645, 650, 651, 653, 654, 657, 658, 659, 748, 764, 767, 768, 775, 776, 777, 792, 795, 820, 831, 862, 864, 865, 871, 885, 898, 903, 911, 988, 993, 995], "one_to_mani": 795, "one_to_many_md_kei": 795, "one_to_many_mod": 795, "ones": [763, 776, 820], "onli": [0, 1, 16, 54, 81, 84, 94, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 170, 184, 185, 201, 216, 231, 232, 249, 250, 256, 265, 270, 275, 293, 300, 334, 363, 370, 397, 414, 421, 450, 468, 475, 509, 526, 547, 561, 578, 581, 593, 613, 623, 637, 638, 640, 645, 649, 653, 654, 747, 748, 763, 768, 770, 775, 776, 777, 793, 794, 795, 803, 805, 817, 842, 868, 871, 872, 874, 877, 880, 903, 911, 916, 920, 933, 976, 993, 995], "onlin": [83, 88, 119], "ons": 127, "onto": [130, 161, 769, 926], "ontologi": 121, "ontology_term": 121, "oo": 988, "open": [0, 55, 59, 60, 61, 62, 63, 64, 65, 108, 114, 115, 119, 130, 141, 143, 162, 163, 164, 166, 167, 168, 171, 172, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 805, 830, 841, 845, 904, 925, 952, 987, 988], "open_fil": 952, "open_filehandl": 988, "oper": [1, 45, 48, 54, 105, 114, 118, 123, 214, 275, 304, 305, 397, 450, 479, 480, 509, 578, 580, 593, 594, 595, 599, 600, 635, 651, 652, 768, 790, 791, 793, 794, 795, 799, 805, 818, 822, 831, 832, 833, 834, 836, 839, 842, 885, 909, 926, 954, 987, 988, 990], "operon": 191, "opinion": 80, "oplu": 593, "oppos": [654, 995], "optim": [1, 16, 79, 103, 105, 106, 107, 653, 878, 928], "option": [16, 28, 45, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 72, 73, 78, 83, 84, 85, 90, 94, 97, 103, 105, 106, 107, 108, 111, 116, 118, 119, 124, 125, 127, 128, 129, 131, 141, 142, 143, 162, 163, 164, 166, 167, 168, 170, 184, 188, 189, 190, 191, 201, 212, 216, 217, 218, 219, 231, 235, 236, 237, 249, 253, 254, 255, 256, 265, 268, 269, 271, 272, 273, 274, 275, 280, 292, 293, 294, 298, 300, 301, 302, 305, 313, 315, 316, 317, 319, 321, 324, 327, 328, 333, 334, 343, 344, 345, 351, 363, 364, 368, 370, 371, 372, 381, 382, 383, 384, 386, 388, 391, 393, 394, 396, 397, 402, 414, 415, 419, 421, 422, 423, 433, 434, 435, 436, 438, 440, 443, 446, 447, 449, 450, 455, 467, 468, 469, 473, 475, 476, 477, 480, 488, 490, 491, 492, 494, 496, 499, 503, 504, 506, 507, 508, 509, 514, 526, 527, 528, 529, 530, 534, 535, 536, 537, 539, 541, 543, 545, 546, 558, 561, 563, 567, 568, 574, 577, 581, 586, 587, 588, 590, 591, 600, 611, 613, 614, 616, 617, 622, 634, 637, 638, 640, 641, 642, 648, 649, 650, 651, 652, 653, 654, 655, 657, 692, 747, 759, 760, 761, 763, 764, 767, 768, 770, 771, 774, 775, 776, 777, 778, 790, 791, 792, 795, 796, 798, 799, 802, 803, 805, 810, 811, 812, 815, 816, 817, 818, 819, 820, 823, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 868, 885, 890, 904, 911, 918, 919, 925, 926, 927, 930, 931, 952, 953, 954, 976, 990, 995], "or_f": 124, "oral": 1, "orcutt": 559, "ord_r": 124, "order": [1, 16, 38, 43, 49, 53, 54, 57, 103, 107, 112, 114, 118, 122, 123, 124, 125, 128, 183, 188, 213, 230, 235, 248, 253, 256, 257, 263, 266, 270, 272, 275, 290, 299, 302, 328, 332, 334, 345, 361, 369, 372, 394, 397, 412, 420, 423, 447, 450, 465, 474, 477, 504, 507, 524, 530, 545, 549, 551, 558, 561, 573, 581, 586, 597, 602, 604, 611, 613, 621, 625, 627, 634, 637, 640, 645, 647, 649, 650, 651, 652, 653, 654, 657, 762, 771, 775, 776, 805, 825, 833, 834, 839, 897, 916, 917, 918, 926, 928, 930, 993, 995], "ordin": [1, 653, 931, 932, 987], "ordination_result": 748, "ordinationresult": [124, 653, 762, 763, 768, 769, 770, 931], "org": [16, 66, 108, 112, 113, 118, 119, 120, 125, 127, 128, 188, 235, 253, 256, 269, 272, 569, 592, 596, 598, 600, 618, 623, 635, 643, 649, 650, 651, 652, 653, 759, 779, 805, 806, 839, 846, 927], "organ": [1, 117, 120, 129], "organis": 120, "orient": [658, 759, 775, 805, 839, 908, 988], "origin": [1, 60, 62, 63, 65, 70, 71, 74, 77, 78, 81, 82, 86, 87, 94, 95, 97, 98, 105, 106, 108, 116, 118, 123, 125, 126, 185, 189, 190, 232, 236, 237, 250, 254, 255, 273, 293, 363, 414, 468, 509, 526, 649, 650, 651, 652, 653, 657, 762, 770, 778, 795, 803, 826, 842, 870, 926, 927, 993, 995], "orthogon": [587, 588, 596], "ortholog": [779, 846], "orthonorm": [587, 588, 596, 597], "orthornorm": 587, "ostel": 118, "other": [0, 1, 16, 33, 42, 51, 52, 54, 78, 93, 108, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 170, 174, 180, 192, 198, 204, 210, 215, 221, 227, 239, 245, 256, 257, 263, 270, 275, 280, 289, 298, 304, 305, 310, 312, 314, 319, 320, 321, 322, 325, 335, 341, 351, 360, 368, 378, 380, 386, 387, 388, 389, 392, 397, 402, 411, 419, 429, 431, 438, 439, 440, 441, 444, 450, 455, 464, 473, 479, 480, 485, 487, 489, 494, 495, 496, 497, 500, 509, 514, 523, 528, 532, 533, 539, 540, 541, 542, 544, 547, 549, 556, 575, 581, 586, 599, 602, 609, 623, 625, 632, 653, 748, 759, 762, 763, 768, 775, 777, 780, 788, 792, 796, 801, 816, 820, 847, 870, 871, 872, 878, 880, 881, 930, 953, 964, 987, 988, 989, 990, 993, 995], "other_vertebr": 115, "otherwis": [16, 29, 45, 48, 57, 72, 73, 118, 120, 123, 126, 127, 170, 187, 220, 234, 252, 328, 394, 447, 504, 545, 548, 549, 551, 556, 561, 601, 602, 604, 609, 613, 624, 625, 627, 632, 637, 640, 654, 782, 798, 802, 814, 820, 826, 829, 905, 990], "otu": [1, 92, 127, 779, 792, 793, 794, 795, 796, 800, 804, 805, 806, 811, 816, 820, 826, 828, 829, 833, 834, 839, 841, 842, 846], "otu1": 800, "otu2": 800, "otu_id": [78, 94, 105, 106], "otuid": 127, "our": [1, 80, 119, 127, 130, 142, 171, 315, 382, 434, 490, 535, 748, 773, 776, 777, 778, 990, 995], "out": [47, 126, 127, 130, 182, 229, 247, 759, 803, 835, 871, 872, 995], "out_f": [680, 713, 724], "out_fh": 599, "outcom": [96, 776], "outer": [53, 54, 293, 363, 414, 468, 526, 562], "outfmt": [114, 115], "output": [54, 114, 115, 123, 125, 126, 128, 318, 385, 437, 493, 538, 586, 649, 653, 654, 692, 763, 789, 795, 800, 840, 841, 919, 927, 987, 995], "outsid": [119, 191, 215, 302, 372, 423, 477, 530], "over": [38, 43, 53, 108, 118, 119, 126, 127, 128, 285, 290, 356, 361, 407, 412, 460, 465, 519, 524, 547, 586, 655, 669, 691, 702, 735, 746, 773, 774, 782, 792, 795, 796, 815, 816, 817, 819, 822, 823, 828, 831, 835, 842, 856, 894, 897, 900, 901, 902, 914, 917, 920, 993], "overal": [779, 846], "overhead": [747, 805], "overlap": [83, 216, 270, 316, 317, 383, 384, 435, 436, 491, 492, 536, 537, 558, 577, 586, 611, 634, 820, 871], "overrid": [16, 61, 64, 94, 131, 141, 142, 143, 162, 166, 269, 903, 995], "overridden": [16, 28, 120, 927], "override_skip_babp": 16, "overriden": [141, 142, 143], "overview": 927, "own": [45, 48, 54, 112, 118, 124, 128, 130, 773], "owner": 937, "oxfordjourn": 119, "oxtobi": 117, "p": [1, 16, 66, 78, 87, 88, 94, 397, 581, 586, 596, 599, 649, 651, 652, 653, 654, 657, 748, 762, 763, 764, 770, 773, 776, 777], "p26204": 117, "p__b": 795, "p__c": 795, "p_adjust": [581, 586], "p_i": [74, 76, 97, 98], "p_valu": [1, 651, 657], "packag": [16, 66, 68, 104, 116, 118, 123, 125, 586, 596, 599, 649, 650, 651, 652, 653, 656, 762, 763, 770, 773, 993, 994], "pad": [54, 125, 293, 363, 414, 468, 526], "page": [80, 581, 927, 993], "pair": [0, 1, 51, 60, 61, 62, 64, 67, 105, 106, 107, 111, 117, 119, 120, 121, 123, 128, 212, 216, 310, 378, 429, 485, 532, 547, 551, 558, 573, 577, 581, 604, 611, 621, 627, 634, 638, 645, 647, 654, 773, 887, 916, 990], "pairwis": [107, 108, 111, 563, 581, 592, 614, 638, 654, 657, 795, 817, 878, 916, 993], "pairwise_dist": 107, "pairwise_func": 107, "pam": [397, 547, 559], "pam250": 559, "pam30": 559, "pam70": 559, "pancoro": 117, "panda": [1, 28, 52, 57, 107, 114, 115, 129, 189, 190, 220, 236, 237, 254, 255, 256, 273, 275, 312, 380, 397, 431, 450, 487, 533, 570, 581, 586, 619, 644, 645, 649, 650, 652, 653, 654, 658, 692, 736, 748, 759, 775, 776, 793, 822, 838, 885, 930, 990], "paper": 127, "papilionoidea": 117, "par_dist": 657, "parallel": [80, 108], "paramet": [1, 2, 16, 17, 28, 30, 33, 42, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 130, 131, 141, 142, 143, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 170, 174, 180, 183, 184, 186, 188, 189, 190, 191, 192, 198, 201, 204, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 230, 231, 233, 235, 236, 237, 239, 245, 248, 249, 251, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 282, 289, 292, 293, 294, 298, 300, 301, 302, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 341, 343, 344, 345, 348, 351, 353, 360, 363, 364, 368, 370, 371, 372, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 402, 404, 411, 414, 415, 419, 421, 422, 423, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 452, 455, 457, 464, 467, 468, 469, 473, 475, 476, 477, 480, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 503, 504, 505, 506, 507, 508, 509, 511, 514, 516, 523, 526, 527, 528, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 556, 558, 559, 561, 562, 563, 565, 566, 567, 568, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 609, 611, 613, 614, 615, 616, 617, 621, 622, 624, 625, 627, 632, 634, 637, 638, 639, 640, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 680, 692, 713, 724, 736, 747, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 782, 790, 791, 792, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 862, 864, 865, 868, 869, 870, 871, 872, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 890, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 910, 911, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 930, 931, 932, 933, 950, 951, 952, 953, 954, 964, 965, 976, 995], "parametr": [72, 578, 581, 649, 652], "params_guess": 90, "parasit": 657, "pardi": 94, "parent": [117, 121, 123, 129, 509, 596, 847, 864, 867, 879, 882, 891, 899, 903, 912, 918, 921, 923, 924, 993], "parent_tax_id": [129, 885], "parenthes": 993, "parenthesi": 123, "parker": 70, "pars": [118, 119, 120, 122, 130, 804, 805, 806, 807, 988], "parse_biom_t": 805, "parse_f": 805, "parser": [121, 123, 988], "part": [114, 118, 120, 123, 126, 575, 579, 596, 747, 828, 897, 953, 993], "partial": [16, 94, 215, 782], "partial_beta_divers": 108, "partialdistancematrix": 108, "particip": 777, "particuarli": 118, "particular": [1, 847, 929, 995], "particularli": 869, "partit": [596, 597, 795], "pass": [1, 28, 35, 48, 55, 56, 59, 66, 103, 107, 108, 109, 110, 114, 116, 118, 120, 125, 126, 128, 141, 142, 143, 155, 161, 162, 163, 164, 165, 166, 167, 168, 170, 217, 219, 271, 274, 275, 298, 300, 302, 324, 325, 333, 344, 368, 370, 372, 391, 392, 396, 397, 419, 421, 423, 443, 444, 449, 450, 473, 475, 477, 499, 500, 508, 509, 528, 530, 543, 544, 546, 551, 568, 574, 604, 617, 622, 627, 638, 640, 642, 648, 651, 654, 692, 760, 761, 776, 816, 829, 830, 845, 893, 895, 904, 925, 927, 976, 993, 995], "passthrough": 57, "password": 130, "patch": 161, "path": [113, 118, 119, 126, 170, 188, 235, 253, 269, 272, 795, 863, 951], "pathwai": [779, 795, 846], "pattern": [129, 301, 329, 371, 395, 422, 448, 476, 505, 529, 748, 990, 995], "paw": [397, 432, 445], "pawhea": 0, "pawlowski": [578, 592, 598], "pc": [1, 658, 759], "pca": [762, 768, 770], "pcbi": [592, 598], "pcoa": [1, 124, 653, 749, 759, 769], "pcoa_result": 759, "pcr": 777, "pd": [1, 28, 48, 52, 57, 78, 94, 103, 114, 115, 129, 220, 312, 380, 431, 487, 509, 533, 558, 570, 573, 581, 586, 599, 611, 619, 621, 634, 644, 645, 647, 649, 650, 653, 658, 748, 749, 759, 762, 770, 775, 776, 793, 822, 838, 885, 930], "pd_": 94, "pdf": 126, "pdist": [1, 104, 107, 110, 657], "pearson": [118, 651, 654, 657, 872], "pearsonr": [651, 657, 773], "peerj": 94, "penal": [60, 61, 62], "penalize_terminal_gap": [60, 61, 62], "penalti": [0, 16, 60, 61, 62, 63, 64, 65], "pentapetala": 117, "per": [54, 114, 115, 126, 128, 275, 397, 450, 509, 586, 654, 657, 747, 770, 776, 777, 836, 865, 952], "percent": [114, 990], "percentag": [114, 578], "percentil": 581, "percentile_df": 581, "perfect": [748, 763], "perform": [0, 1, 16, 53, 54, 66, 78, 90, 103, 105, 106, 107, 108, 118, 119, 127, 192, 270, 275, 332, 345, 397, 450, 507, 509, 549, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 597, 598, 600, 602, 623, 625, 635, 638, 653, 654, 657, 658, 659, 681, 725, 736, 748, 768, 770, 771, 777, 778, 782, 795, 826, 829, 835, 848, 849, 873, 876, 883, 894, 900, 901, 902, 911, 923, 924, 930, 988], "period": [127, 188, 235, 253, 272], "periton": 776, "perm_stat": 657, "permanova": [649, 653], "permdisp2": 653, "permiss": [118, 123, 125], "permit": [123, 142], "permut": [1, 192, 649, 651, 652, 653, 654, 657], "perspect": 94, "pertain": 656, "perturb": [578, 594], "petchei": 78, "peter": 119, "pfam": 128, "pg": 76, "pgc": 129, "ph": 650, "phagocyt": 776, "phase": [120, 121], "phe": 397, "phenylalanin": 397, "php": 118, "phred": [118, 119], "phred_offset": [119, 126], "phydiv": 78, "phylip": [55, 59, 118, 123, 926, 988, 993], "phylip_multiple_alignment_format": 125, "phylipformaterror": 125, "phylo": 125, "phylochip": [78, 105, 106], "phylogenet": [1, 78, 94, 105, 106, 123, 125, 599, 657, 847, 870, 880, 927, 987, 990], "phylogeni": [125, 656, 657], "phylum": 885, "physic": [769, 777], "pick": [16, 776], "pickl": [6, 20, 36, 134, 147, 176, 194, 206, 223, 241, 259, 283, 337, 354, 405, 458, 517, 552, 605, 628, 662, 673, 684, 695, 706, 717, 728, 739, 752, 783, 853, 938, 957, 969, 980], "pident": [114, 115], "pie": 76, "piec": 995, "pielou": [95, 99], "pielou_": 82, "piet": 763, "pii": 116, "ping": [16, 66], "pipe": 129, "pirrung": 759, "pisc": 83, "pitfal": 47, "pizetti": 80, "place": [57, 123, 128, 270, 344, 747, 768, 771, 803, 826, 829, 839, 842, 864, 889, 921, 931], "placebo": [581, 586], "plain": [116, 118, 119, 120, 123, 125, 126], "plan": 127, "planetmath": 623, "plankton": 70, "plant": [102, 117, 596], "plastid": 129, "pleas": [35, 55, 59, 118, 126, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925, 992], "pleij": 128, "pln": [117, 129], "plo": [16, 66, 84, 85, 592, 598], "ploson": [16, 66], "plot": [1, 749], "plu": [129, 275, 397, 450], "plugin": 127, "plural": [1, 172], "pm": 77, "pmid": [128, 651, 927], "png": 749, "point": [47, 80, 83, 85, 112, 116, 127, 130, 142, 191, 256, 318, 325, 328, 385, 392, 394, 437, 444, 447, 493, 500, 504, 538, 544, 545, 559, 653, 659, 681, 736, 748, 759, 776, 777, 909, 930, 951], "poisson": [84, 85], "polymeras": 128, "pone": [16, 66], "pool": 69, "poorli": [657, 768], "pop": [903, 905, 906, 910], "popul": [72, 79, 81, 101, 126, 128, 318, 385, 437, 493, 538, 593, 655, 773, 777], "port": 127, "portal": 129, "portion": 651, "pos_rat": 777, "posit": [0, 16, 28, 29, 33, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 114, 115, 116, 118, 119, 120, 123, 125, 126, 127, 128, 275, 280, 282, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 312, 313, 315, 318, 319, 320, 321, 322, 323, 325, 326, 330, 331, 332, 344, 345, 351, 353, 356, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 397, 402, 404, 407, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 431, 433, 434, 437, 438, 439, 440, 441, 442, 444, 445, 450, 455, 457, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 487, 488, 490, 493, 494, 495, 496, 497, 498, 500, 501, 502, 506, 507, 509, 514, 516, 519, 523, 524, 525, 526, 527, 529, 533, 534, 535, 538, 539, 540, 541, 542, 544, 579, 580, 581, 590, 651, 657, 736, 749, 773, 774, 776, 777, 782, 809, 822, 899, 990], "positional_metadata": [28, 33, 46, 52, 53, 54, 118, 128, 275, 280, 292, 293, 296, 312, 318, 325, 326, 346, 351, 363, 366, 380, 385, 392, 397, 402, 414, 417, 431, 437, 444, 450, 455, 467, 468, 471, 487, 493, 500, 501, 509, 514, 526, 533, 538, 544, 990], "possibl": [1, 16, 35, 95, 99, 118, 119, 127, 128, 215, 299, 332, 345, 369, 420, 474, 507, 650, 654, 776, 872, 920, 926], "post": [125, 773, 777], "posterior": [586, 847], "postmenopaus": 777, "postord": [877, 880, 894, 897, 901, 902, 917, 920, 993], "potenti": [118, 315, 382, 434, 490, 535, 747, 906, 928, 995], "pound": [127, 256], "power": [578, 586, 779, 846, 988], "pp": [79, 89, 96, 763], "ppo": [114, 115], "practic": [1, 54, 94, 118, 119, 126, 747, 875, 880], "pre": [301, 329, 371, 395, 422, 448, 476, 505, 529, 547, 559, 564, 777], "pre_and_postord": [894, 897, 900, 902, 917, 920], "pre_rat": 777, "prealloc": 953, "preced": [16, 116, 123, 125], "precomput": 772, "predefin": [121, 298, 368, 419, 473, 528], "predict": [84, 85, 128, 776], "prefer": [47, 103, 107, 119, 188, 235, 253, 272, 762, 763], "prefer_self": 820, "prefix": 129, "preliminari": 776, "premenopaus": 777, "preorder": [894, 897, 900, 901, 917, 920, 993], "prepar": 127, "preq1": 120, "presenc": [73, 94, 335, 344, 777, 827], "present": [46, 47, 78, 105, 106, 114, 118, 124, 127, 128, 202, 203, 256, 275, 292, 295, 296, 297, 302, 303, 313, 323, 326, 344, 365, 366, 367, 372, 373, 381, 390, 397, 416, 417, 418, 423, 424, 433, 442, 445, 450, 467, 470, 471, 472, 477, 478, 488, 498, 501, 530, 534, 561, 581, 613, 637, 649, 650, 652, 653, 692, 758, 768, 777, 778, 795, 804, 805, 844, 871, 926, 927, 929, 993], "preserv": [123, 256, 748, 762, 763, 768, 909], "press": 71, "presum": 118, "prevent": 16, "previou": [1, 60, 61, 62, 63, 64, 65, 280, 351, 402, 455, 514, 649, 651, 653], "previous": [0, 318, 325, 385, 392, 437, 444, 493, 500, 538, 544, 995], "pri": 129, "primari": [130, 990], "primer": 650, "princip": [1, 653, 759, 762, 768, 769], "principl": 773, "print": [0, 1, 53, 78, 105, 106, 116, 118, 119, 120, 121, 123, 125, 126, 128, 299, 315, 328, 332, 345, 369, 382, 394, 420, 434, 447, 474, 490, 504, 507, 509, 535, 545, 599, 651, 657, 658, 747, 773, 777, 792, 793, 794, 795, 796, 799, 803, 809, 811, 812, 816, 817, 818, 819, 820, 823, 826, 827, 828, 829, 833, 834, 835, 841, 842, 844, 848, 849, 864, 865, 868, 869, 872, 873, 874, 876, 877, 879, 880, 881, 883, 885, 886, 888, 891, 892, 893, 894, 895, 897, 899, 900, 901, 902, 903, 906, 908, 909, 910, 911, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 990, 993, 995], "printabl": [119, 126], "prior": [344, 651, 654, 885, 954, 964, 995], "prioriti": [94, 965, 966, 995], "privat": [120, 865], "prng": 747, "pro": 397, "prob": [28, 33, 46, 53], "probabl": [74, 84, 85, 96, 586, 658, 670, 747, 762, 773, 777, 847], "problem": [127, 581, 768], "problemat": [127, 918], "proc": [62, 65], "procedur": [653, 988], "proceed": 559, "process": [108, 118, 128, 215, 586, 770, 840, 841, 929, 954, 995], "process_func": 807, "processor": 995, "prod": [584, 596], "produc": [114, 115, 125, 126, 141, 315, 382, 434, 490, 535, 762, 770], "product": [0, 191, 589, 651], "program": [122, 123, 127, 129], "progress": 650, "project": [108, 119, 579, 596, 649, 650, 651, 652, 653, 769], "prolin": 397, "promis": 581, "pronounc": [779, 846, 987], "prop_expl": [658, 659, 681, 692, 725, 736], "propag": 509, "properli": [123, 170], "properti": [116, 125, 129, 270, 335, 341, 346, 547, 563, 614, 623, 638, 773, 867, 903, 933, 945, 947, 948, 949, 989], "proport": [74, 76, 80, 81, 90, 94, 97, 98, 124, 305, 480, 576, 578, 579, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 598, 649, 651, 652, 658, 692, 736, 749, 762, 768, 770, 870], "proportion": [592, 598], "proportion_explain": [748, 749], "propos": [97, 927], "prot": 117, "protein": [0, 16, 28, 47, 60, 62, 65, 66, 114, 116, 117, 118, 119, 120, 125, 126, 128, 315, 328, 331, 332, 334, 344, 345, 346, 382, 394, 490, 504, 506, 507, 509, 535, 545, 559, 776, 990], "protein_from_dna": 990, "protein_from_rna": 990, "protein_id": 117, "provid": [0, 1, 16, 28, 45, 47, 48, 55, 56, 61, 64, 66, 68, 78, 83, 94, 103, 104, 105, 106, 107, 114, 118, 119, 123, 125, 127, 128, 129, 130, 141, 143, 162, 163, 166, 167, 169, 171, 186, 188, 217, 233, 235, 251, 253, 256, 269, 270, 271, 272, 280, 302, 315, 318, 324, 328, 351, 372, 382, 385, 391, 394, 402, 423, 434, 437, 443, 447, 450, 455, 477, 490, 493, 499, 504, 509, 514, 530, 535, 538, 543, 545, 547, 563, 568, 573, 578, 586, 599, 600, 614, 617, 621, 638, 642, 647, 649, 650, 651, 652, 653, 655, 658, 692, 747, 748, 749, 759, 760, 764, 773, 775, 776, 779, 790, 798, 800, 803, 805, 810, 812, 813, 818, 819, 821, 823, 829, 830, 835, 839, 840, 842, 844, 846, 869, 877, 885, 898, 904, 908, 911, 918, 926, 927, 954, 988, 989, 990, 991, 992, 993, 994, 995], "proxim": 748, "prune": [868, 910, 921, 922], "psa": [60, 63], "pseudo": [652, 773], "pseudocount": [578, 581, 586], "pseudoknot": 128, "pub": [117, 129, 191], "public": [94, 119, 759], "publish": [119, 128], "pubm": [117, 120, 509], "pull": 118, "pure": [0, 928], "purin": [275, 300, 370, 421, 475, 990], "purpos": [0, 1, 66, 69, 127, 129, 334, 773, 995], "put": [277, 348, 399, 452, 511], "pvalu": 586, "pwmantel": 651, "pwr": 776, "pwr_001": 773, "pwr_010": 773, "pwr_100": 773, "pwr_est": 777, "pwr_est2": 777, "py": [119, 130], "pycog": [78, 105, 106, 926], "pyl": 397, "pyrimidin": [275, 300, 475], "pyrosequenc": [78, 105, 106], "pyrrolysin": 397, "python": [0, 1, 2, 509, 599, 623, 651, 928, 933, 987, 988, 990], "q": [16, 83, 115, 397, 763, 764], "q2": 127, "q2cli": 127, "qacc": [114, 115], "qaccver": [114, 115], "qcov": [114, 115], "qcovhsp": [114, 115], "qend": [114, 115], "qframe": [114, 115], "qgi": [114, 115], "qiim": [78, 105, 106, 127, 256], "qiime2": [127, 188, 235, 253, 256, 269, 272], "qiita": 127, "qiu": 657, "qlen": [114, 115], "qseq": [114, 115, 324, 391, 443, 499, 543], "qseqid": [114, 115], "qstart": [114, 115], "qual": 119, "qual_fl": 118, "qualifi": [117, 120], "qualit": [105, 106, 759], "qualiti": [52, 118, 126, 275, 280, 292, 296, 312, 326, 351, 366, 380, 397, 402, 417, 431, 450, 455, 467, 471, 487, 501, 509, 514, 533, 759, 990], "quantifi": 1, "quantil": [83, 586], "quantit": [94, 105, 106, 762, 777], "quantiti": 106, "quartil": 83, "queri": [0, 16, 66, 114, 115, 201, 268, 509], "query1": 115, "query_begin": 2, "query_sequ": [0, 2, 16, 17], "quick": [551, 604, 627, 635, 759, 762], "quit": 995, "quot": 123, "qvalu": 586, "r": [1, 16, 78, 79, 83, 84, 85, 86, 87, 94, 105, 106, 119, 120, 129, 170, 275, 397, 450, 559, 578, 579, 580, 584, 585, 586, 587, 588, 596, 649, 650, 651, 652, 653, 657, 759, 762, 763, 770, 794, 869, 910], "r1": 990, "r2": 990, "r3": 990, "r4": 990, "r5": 990, "r_i": 596, "r_m": 651, "ra": [117, 128], "raaijmak": 90, "raimon": 596, "rais": [28, 45, 47, 48, 50, 54, 56, 58, 69, 78, 79, 80, 94, 103, 105, 106, 107, 111, 118, 119, 125, 130, 141, 142, 143, 162, 163, 164, 166, 167, 168, 183, 215, 230, 248, 266, 269, 270, 277, 293, 294, 298, 300, 302, 313, 314, 316, 317, 319, 320, 321, 322, 328, 344, 346, 348, 363, 364, 368, 370, 372, 381, 383, 384, 386, 387, 388, 389, 394, 399, 414, 415, 419, 421, 423, 433, 435, 436, 438, 439, 440, 441, 447, 452, 468, 469, 473, 475, 477, 488, 489, 491, 492, 494, 495, 496, 497, 504, 511, 526, 527, 528, 530, 534, 536, 537, 539, 540, 541, 542, 545, 551, 558, 559, 561, 562, 563, 566, 573, 576, 577, 583, 590, 591, 597, 604, 611, 613, 614, 615, 621, 627, 634, 637, 638, 639, 647, 649, 650, 651, 653, 654, 692, 736, 747, 759, 762, 763, 768, 776, 777, 778, 779, 782, 790, 792, 796, 798, 799, 803, 804, 805, 810, 811, 812, 813, 816, 817, 818, 819, 821, 822, 823, 829, 831, 832, 835, 842, 844, 846, 862, 869, 870, 872, 875, 877, 878, 880, 881, 883, 885, 887, 893, 895, 898, 908, 909, 910, 911, 916, 921, 930, 931, 932, 933], "rand": 655, "randint": 773, "randn": [773, 776, 777], "random": [77, 79, 90, 112, 586, 649, 653, 655, 747, 763, 773, 775, 776, 777, 835, 872, 911], "random_fn": 655, "randomli": [74, 640, 649, 651, 652, 655, 747, 778, 835, 872, 911], "randomst": [872, 911], "rang": [52, 74, 83, 95, 106, 119, 120, 127, 292, 296, 302, 312, 315, 326, 366, 372, 380, 382, 417, 423, 431, 434, 467, 471, 477, 487, 490, 501, 530, 533, 535, 649, 650, 759, 777, 811, 816, 835, 889, 995], "rangeindex": [28, 45, 48, 56, 125], "rangle_a": [587, 589], "rank": [1, 102, 129, 581, 649, 650, 651, 772, 829, 885], "rapid": [112, 118, 889], "rapidli": 995, "rare": [69, 777], "rare_threshold": 69, "rarefact": [90, 835], "rate": [69, 547, 773], "rather": [1, 83, 123, 547, 578, 657, 927], "ratio": [84, 95, 99, 578, 579, 580, 581, 584, 585, 587, 588, 592, 598, 777], "rational": 772, "raw": [114, 680, 713], "raw_f": [680, 713, 724], "raxml": 125, "rbwpd_": 94, "rc": [128, 292, 467, 567, 616, 641, 759], "rda": [124, 749, 762, 763], "re": [0, 1, 45, 48, 54, 78, 103, 105, 106, 107, 113, 116, 118, 119, 125, 128, 275, 301, 329, 346, 371, 395, 397, 422, 448, 450, 476, 505, 509, 529, 654, 762, 770, 772, 773, 777, 792, 835, 918, 993, 995], "reach": 125, "read": [1, 16, 59, 78, 105, 106, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 128, 129, 141, 142, 159, 161, 163, 167, 170, 171, 219, 269, 274, 275, 332, 333, 344, 345, 396, 397, 449, 450, 507, 508, 509, 546, 574, 597, 599, 622, 648, 654, 761, 794, 845, 848, 849, 861, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 874, 876, 877, 878, 880, 881, 882, 883, 885, 887, 888, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 933, 987, 993], "read_numb": 126, "read_sequ": 2, "readabl": [112, 118, 119, 122, 123, 124, 125, 170, 932], "reader": [55, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 156, 161, 162, 163, 166, 167, 217, 271, 324, 391, 443, 499, 543, 568, 617, 642, 760, 830, 904], "readi": [0, 130], "reading_fram": [332, 344, 345, 507], "readlin": [141, 170], "real": [53, 118, 119, 126, 578, 579, 580, 584, 585, 587, 588, 593, 594, 595], "realli": 1, "reason": [1, 79, 90, 117, 123, 776, 805, 867], "reassign": [56, 125, 651], "reassign_index": [28, 45, 48, 57, 58, 125], "reca": 216, "recal": 123, "recapitul": 657, "recaptur": 69, "receiv": [130, 131, 142, 302, 372, 423, 477, 530, 926], "recent": [125, 344, 509, 651], "receptor": 776, "reciproc": [74, 777], "recod": 47, "recogn": [127, 822, 832], "recommend": [1, 83, 94, 125, 128, 275, 346, 397, 450, 509, 581, 599, 759, 762, 770, 776], "recomput": [45, 48, 54], "reconstruct": [903, 927, 987, 990], "record": [115, 117, 118, 119, 120, 121, 126], "rectangl": 80, "recurs": [123, 865, 923, 924], "red": [567, 616, 641], "redefin": [651, 933], "reduc": [108, 188, 235, 253, 272, 653, 747, 768, 795], "reduce_f": 108, "reduct": 748, "redund": [569, 600, 618, 623, 643, 770], "redundant_form": 592, "reeder": [84, 85], "ref": [114, 864], "refer": [1, 16, 35, 47, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 105, 106, 108, 191, 275, 334, 342, 343, 346, 397, 450, 509, 547, 559, 569, 579, 580, 581, 586, 590, 592, 596, 598, 600, 618, 623, 635, 643, 649, 650, 651, 652, 653, 657, 759, 762, 763, 770, 779, 805, 839, 846, 870, 899, 926, 927, 992], "reference_sequ": 2, "reflect": [170, 657, 903, 908], "regard": 586, "regardless": [16, 46, 53, 54, 128, 256, 270, 344, 565, 655], "regex": [301, 329, 371, 395, 422, 448, 476, 505, 529], "region": [121, 191, 201, 315, 382, 434, 490, 535], "regist": [59, 130, 131, 141, 142, 143, 155, 161, 163, 165, 167, 219, 274, 333, 396, 449, 508, 546, 574, 622, 648, 761, 845, 925], "registri": [55, 59, 113, 118, 119, 126, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925, 988], "regress": [578, 651, 770, 777], "regsistri": [155, 165], "regular": [113, 123, 301, 329, 371, 395, 422, 448, 476, 505, 529, 990], "reject": [581, 586, 773], "rel": [50, 94, 113, 117, 120, 183, 230, 248, 266, 270, 302, 304, 305, 317, 319, 321, 372, 384, 386, 388, 423, 436, 438, 440, 477, 479, 480, 492, 494, 496, 530, 537, 539, 541, 592, 598, 635, 912, 930, 965, 990], "relat": [1, 78, 79, 87, 94, 105, 106, 108, 117, 118, 122, 128, 599, 645, 762, 763, 770, 805, 839], "relationship": [1, 94, 123, 762, 763, 770, 773, 777, 795, 927, 991], "relax": 125, "releas": [78, 94, 105, 106, 117, 129], "relev": [1, 16, 120, 586, 776, 795, 805, 839, 927, 990], "reli": [93, 127, 188, 235, 253, 272, 275, 397, 450], "reliabl": 586, "reload": 119, "remain": [56, 118], "remaind": [118, 795], "rememb": [127, 191], "remot": 120, "remov": [47, 66, 78, 94, 105, 106, 118, 122, 125, 182, 214, 229, 247, 296, 327, 366, 393, 417, 446, 471, 503, 799, 832, 864, 879, 899, 903, 906, 910, 921, 990], "remove_delet": [899, 903, 905, 910], "renam": [120, 311, 323, 379, 390, 430, 442, 486, 498, 581], "render": 927, "reorder": [651, 654, 868, 872], "repeat": [1, 119, 773, 950], "repeatedli": 773, "repect": 118, "repen": 117, "replac": [1, 67, 90, 118, 275, 327, 330, 393, 397, 446, 450, 502, 503, 547, 578, 581, 590, 591, 747, 771, 778, 835, 842, 918], "replic": 877, "report": [94, 127, 142, 586, 657, 770], "repres": [1, 46, 74, 76, 78, 81, 90, 97, 98, 105, 106, 108, 112, 113, 114, 115, 117, 118, 122, 123, 125, 127, 128, 129, 191, 212, 220, 256, 275, 328, 394, 397, 447, 450, 504, 509, 545, 547, 551, 558, 563, 573, 587, 588, 596, 597, 604, 611, 614, 621, 627, 634, 638, 647, 657, 748, 759, 773, 782, 795, 806, 831, 836, 840, 847, 914, 919, 926, 927, 990, 993], "represent": [0, 1, 112, 113, 118, 123, 127, 201, 318, 342, 385, 437, 493, 538, 557, 597, 610, 633, 656, 749, 758, 779, 782, 795, 805, 841, 846, 847, 861, 918, 919, 988, 993], "representationwarn": 916, "reprint": 80, "reproduc": [54, 78, 105, 106], "reproduct": 777, "request": [118, 267, 558, 573, 611, 621, 634, 647, 792, 799, 811, 822, 877, 951, 988], "requir": [16, 78, 84, 85, 94, 105, 106, 112, 115, 116, 118, 121, 125, 128, 129, 216, 256, 269, 331, 344, 345, 506, 597, 599, 623, 651, 657, 747, 767, 775, 782, 795, 804, 869, 875, 909, 929, 953, 988, 990, 995], "rerun": 651, "res_metadata": 793, "res_tabl": [793, 794], "res_tre": 794, "resampl": 835, "research": [1, 129, 651, 768], "resembl": 118, "reserv": [125, 127], "reset": [45, 48, 56], "reset_index": [45, 48], "reshap": [811, 816], "resid": 747, "residu": [47, 770], "resolv": [108, 111, 127, 657], "resourc": [94, 127, 129, 170], "respect": [1, 28, 72, 118, 121, 124, 127, 129, 141, 142, 143, 161, 162, 164, 166, 168, 170, 256, 302, 372, 423, 477, 509, 530, 558, 563, 565, 573, 581, 596, 611, 614, 621, 634, 638, 645, 647, 657, 748, 749, 793, 794, 815, 816, 817, 836], "respons": [55, 59, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 680, 713, 724, 748, 760, 761, 763, 770, 830, 845, 904, 925], "restrict": [35, 78, 105, 106, 125, 220, 256, 990], "result": [1, 2, 16, 17, 47, 49, 54, 60, 61, 62, 78, 79, 83, 103, 105, 106, 107, 111, 114, 115, 118, 127, 130, 170, 213, 268, 270, 275, 292, 293, 296, 326, 328, 363, 366, 394, 397, 414, 417, 447, 450, 467, 468, 471, 501, 504, 526, 545, 581, 586, 589, 590, 593, 638, 649, 651, 652, 653, 654, 655, 658, 669, 670, 680, 681, 691, 702, 703, 713, 714, 724, 725, 735, 746, 747, 749, 758, 759, 762, 763, 768, 770, 773, 778, 795, 796, 817, 820, 828, 835, 839, 841, 880, 896, 910, 918, 919, 926, 927, 931, 988, 990, 995], "result_constructor": 927, "retain": [54, 183, 230, 248, 265, 266, 293, 325, 363, 392, 414, 444, 468, 500, 526, 544, 561, 613, 637, 747, 795, 844], "retriev": [184, 186, 231, 233, 249, 251, 256, 267, 268, 509, 623, 805, 809, 811], "return": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 121, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 217, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 660, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 676, 677, 678, 679, 682, 683, 685, 686, 687, 688, 689, 690, 691, 693, 694, 696, 697, 698, 699, 700, 701, 702, 704, 705, 707, 708, 709, 710, 711, 712, 715, 716, 718, 719, 720, 721, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 735, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 781, 782, 784, 786, 787, 788, 793, 794, 795, 797, 798, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 848, 849, 850, 851, 854, 855, 857, 859, 860, 861, 862, 863, 865, 869, 870, 871, 872, 873, 874, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 895, 896, 897, 898, 899, 904, 905, 907, 908, 909, 910, 912, 913, 914, 916, 918, 919, 920, 922, 923, 924, 926, 927, 932, 933, 935, 936, 937, 939, 940, 941, 942, 943, 946, 950, 951, 952, 955, 956, 958, 959, 960, 961, 962, 963, 967, 968, 970, 971, 972, 973, 974, 975, 976, 978, 979, 981, 982, 983, 984, 985, 986, 988, 990, 995], "return_cod": [328, 394, 447, 504, 545], "reus": [16, 772], "rev": 911, "reveal": [748, 927], "revers": [43, 53, 57, 130, 290, 292, 314, 326, 332, 344, 345, 361, 412, 465, 467, 489, 501, 502, 507, 524, 649, 653, 833, 911, 990, 995], "reverse_compl": [292, 314, 467, 489, 990], "reverse_transcrib": 331, "review": 867, "revisit": 596, "rf": [332, 345, 507], "rfam": 128, "rho": 650, "riboswitch": [120, 191], "rice": 119, "rich": [1, 68, 72, 78, 86, 89, 94, 101], "rich_sparse_otu_table_hdf5": 805, "right": [54, 69, 97, 123, 270, 578, 579, 580, 584, 589, 593, 594, 595, 596, 889, 930, 931, 995], "right_child_id": 918, "rightarrow": [579, 580, 584, 585, 587, 588], "risk": 777, "rl": [117, 128], "rm": [128, 659, 725], "rn": [117, 128], "rna": [0, 28, 33, 61, 64, 66, 116, 117, 118, 119, 120, 125, 126, 128, 275, 293, 330, 331, 332, 334, 344, 345, 346, 363, 414, 509, 526, 586, 990], "rna_seq": [117, 120], "robinson": 870, "robust": [94, 127, 592, 598, 653, 657], "role": [128, 547, 776], "rome": 80, "root": [1, 78, 89, 94, 105, 106, 123, 129, 597, 848, 849, 862, 863, 864, 865, 867, 868, 869, 873, 876, 877, 878, 879, 882, 883, 885, 887, 891, 893, 895, 896, 903, 908, 909, 912, 914, 916, 918, 919, 921, 923, 924, 926, 927, 993], "root_at": [909, 923, 924], "root_at_midpoint": [908, 927], "rosid": 117, "roughli": 90, "round": [78, 83, 90, 105, 106, 651, 773, 776, 777, 877], "roundtrip": 113, "roundtripp": [188, 235, 253, 256, 272], "routin": 623, "row": [1, 28, 103, 107, 108, 111, 112, 113, 125, 191, 256, 547, 551, 566, 580, 581, 583, 586, 587, 588, 590, 591, 593, 594, 595, 596, 599, 600, 604, 615, 627, 639, 640, 645, 649, 650, 651, 652, 653, 654, 655, 657, 749, 762, 763, 766, 770, 776, 777, 782, 789, 800, 805, 806, 811, 815, 816, 817, 831, 832, 839, 841, 930], "rozan": 596, "rp": 117, "rpd": 94, "rpd_": 94, "rrna": [1, 586], "rt": [117, 128], "rtol": 930, "rubbbbrbcefgh": 126, "rule": [69, 118, 125, 127, 128, 926], "run": [1, 78, 103, 105, 106, 107, 119, 126, 127, 300, 370, 421, 475, 581, 649, 650, 651, 653, 654, 657, 669, 691, 702, 735, 746, 759, 990, 995], "run_numb": 126, "runtim": [118, 275, 397, 450, 953, 995], "runtimeerror": 79, "rvrywstlnepwvfsnsgyalgtnapgrcsasnvakpgdsgtgpyivthnqi": 117, "rvsrv": 128, "rx": 117, "rykmbdhvn": [304, 305, 479, 480], "s1": [0, 1, 76, 275, 277, 293, 294, 298, 313, 314, 319, 320, 321, 322, 348, 363, 364, 368, 381, 386, 387, 388, 389, 397, 399, 414, 415, 419, 433, 438, 439, 440, 441, 450, 452, 468, 469, 473, 488, 489, 494, 495, 496, 497, 509, 511, 526, 527, 528, 534, 539, 540, 541, 542, 581, 586, 649, 653, 792, 793, 794, 796, 798, 799, 802, 803, 809, 810, 811, 812, 813, 815, 817, 820, 821, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 841, 842, 844], "s12064": [592, 598], "s2": [0, 1, 293, 298, 363, 368, 414, 419, 468, 473, 526, 528, 581, 586, 649, 653, 792, 793, 794, 796, 799, 802, 803, 809, 810, 811, 812, 813, 815, 817, 820, 821, 826, 827, 828, 829, 831, 833, 834, 835, 836, 838, 841, 842, 844], "s3": [581, 586, 649, 653, 792, 793, 794, 796, 802, 803, 810, 811, 812, 813, 817, 820, 821, 827, 828, 829, 831, 833, 834, 835, 836, 838, 841, 842, 844], "s4": [581, 586, 649, 653, 793, 794, 796, 802, 811], "s46826": 117, "s5": [581, 586, 649, 653, 796, 811], "s6": [581, 586, 653, 796], "s7": [653, 796], "s8": 796, "s9": 796, "s_": [1, 69, 71, 72, 90, 101], "s_i": 596, "s_max": 90, "sa": 128, "sacc": [114, 115], "saccver": [114, 115], "safe": [1, 78, 103, 105, 106, 107, 127, 768, 778, 865], "safe_char": 123, "saga": [201, 213, 509], "sagb": [201, 213], "sagc": 201, "sai": [191, 201, 777], "saitou": 927, "sallacc": [114, 115], "sallgi": [114, 115], "sallseqid": [114, 115], "salltitl": [114, 115], "salmo": [118, 125], "salvemini": 80, "sam_id": 816, "same": [1, 28, 46, 47, 48, 50, 54, 56, 74, 78, 83, 94, 95, 99, 105, 106, 118, 119, 120, 121, 123, 126, 128, 130, 183, 204, 218, 220, 230, 248, 265, 266, 270, 280, 282, 289, 292, 293, 296, 298, 299, 315, 319, 320, 321, 322, 326, 327, 331, 334, 335, 344, 351, 353, 360, 363, 366, 368, 369, 382, 386, 387, 388, 389, 393, 402, 404, 411, 414, 417, 419, 420, 434, 438, 439, 440, 441, 446, 455, 457, 464, 467, 468, 471, 473, 474, 490, 494, 495, 496, 497, 501, 503, 506, 509, 514, 516, 523, 526, 528, 535, 539, 540, 541, 542, 549, 551, 559, 560, 561, 563, 572, 576, 577, 581, 586, 602, 604, 612, 613, 614, 620, 625, 627, 636, 637, 638, 640, 646, 649, 650, 651, 652, 653, 654, 657, 747, 762, 763, 767, 768, 770, 776, 777, 778, 782, 795, 803, 826, 842, 881, 911, 926, 930, 990, 993], "samp_id": [809, 811], "sampl": [1, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 127, 256, 578, 581, 586, 600, 649, 650, 652, 653, 659, 692, 725, 736, 747, 749, 758, 759, 762, 763, 768, 769, 770, 773, 775, 776, 777, 790, 791, 792, 793, 794, 795, 796, 798, 799, 802, 803, 804, 805, 807, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 872, 931, 987, 991], "sample1": [800, 806], "sample2": [800, 806], "sample3": 806, "sample4": 806, "sample5": 806, "sample6": 806, "sample_constraint": 749, "sample_count": [776, 777], "sample_gen": 816, "sample_group_metadata": 779, "sample_id": [779, 816, 824, 829], "sample_index": 779, "sample_map": 807, "sample_md": 1, "sample_metadata": [127, 271, 274, 779, 799], "sample_metadata_f": 820, "sample_nam": 127, "sample_typ": [803, 828], "samplea": 747, "sampleb": 747, "samplec": 747, "sampleid": [127, 804], "samplemetadata": 127, "samplerecord": 120, "sanger": 119, "sapien": 118, "sapiensaccggttggc": 125, "satisfi": [130, 216, 775, 976], "save": [16, 201, 256, 269, 600, 680, 713, 724, 900], "sb": 60, "sbc": 128, "sbjct": 115, "sbjctframe": 115, "sblastnam": [114, 115], "sbp": 596, "scalar": [73, 97, 328, 394, 447, 504, 545, 547, 551, 589, 595, 599, 604, 627, 759, 819, 823], "scale": [76, 650, 762, 763, 764, 770], "scale_i": 770, "scandinavian": 72, "scatter": 759, "scatterplot": [749, 759], "scenario": 581, "scheme": [129, 170, 185, 189, 190, 232, 236, 237, 250, 254, 255, 256, 269, 273, 567, 616, 641], "schmidt": [587, 588], "schneider": 47, "schoch": 129, "school": 117, "schwartz": 559, "sci": [62, 65, 115, 596], "scienc": [70, 71, 78, 116, 118, 559, 763], "sciencedirect": 116, "scientif": [114, 127, 623, 748], "sciki": 118, "scikit": [0, 1, 51, 52, 55, 59, 60, 63, 66, 67, 78, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 129, 217, 219, 271, 274, 310, 312, 324, 331, 332, 333, 334, 344, 345, 378, 380, 391, 396, 429, 431, 443, 449, 485, 487, 499, 506, 507, 508, 532, 533, 543, 546, 568, 574, 575, 617, 622, 642, 648, 748, 760, 761, 830, 835, 845, 904, 925, 928, 990, 994], "scipi": [1, 79, 104, 107, 110, 569, 576, 581, 586, 597, 600, 618, 623, 635, 643, 645, 650, 651, 653, 657, 768, 773, 776, 777, 798, 829, 839, 884], "scomnam": [114, 115], "scope": [78, 995], "score": [0, 16, 47, 60, 61, 62, 63, 64, 65, 66, 67, 73, 114, 115, 118, 120, 121, 126, 509, 547, 562, 565, 749, 770, 990], "score_filt": 16, "score_onli": 16, "score_s": 16, "sdbl": 877, "sdr": [83, 88], "sdrhelp": 83, "se": 128, "sea": 70, "search": [30, 60, 114, 115, 118, 184, 216, 231, 249, 268, 300, 313, 370, 381, 421, 433, 475, 488, 534, 548, 601, 624, 763, 798, 810, 813, 821, 844, 875, 880, 881, 882, 883, 950, 990], "sec": 397, "second": [1, 16, 60, 61, 62, 63, 64, 65, 66, 119, 125, 130, 143, 191, 213, 335, 551, 581, 604, 627, 777, 886, 889, 919, 988, 995], "secondari": [777, 806], "section": [54, 118, 119, 124, 127, 128, 256, 334, 509, 650, 651, 762, 763], "sediment": 70, "see": [1, 53, 54, 55, 59, 66, 78, 94, 103, 105, 106, 107, 108, 110, 111, 115, 117, 118, 119, 123, 125, 126, 127, 129, 130, 173, 217, 219, 220, 238, 256, 271, 274, 298, 324, 333, 334, 345, 368, 391, 396, 419, 443, 449, 473, 499, 508, 509, 528, 543, 546, 551, 568, 574, 587, 588, 604, 617, 622, 627, 642, 648, 649, 650, 651, 652, 653, 654, 657, 748, 759, 760, 761, 768, 770, 772, 773, 777, 779, 785, 820, 830, 835, 845, 846, 904, 925, 988, 989, 995], "seed": [586, 649, 653, 747, 773, 776, 777, 835], "seem": 776, "seen": [117, 120, 777], "segment": 80, "select": [74, 94, 127, 586, 653, 775, 776, 835, 911], "selenocystein": 397, "self": [3, 4, 5, 7, 8, 9, 10, 11, 13, 18, 19, 21, 22, 23, 24, 25, 27, 34, 37, 39, 41, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 175, 177, 178, 179, 181, 193, 195, 196, 197, 199, 201, 205, 207, 208, 209, 211, 215, 222, 224, 225, 226, 228, 240, 242, 243, 244, 246, 258, 260, 261, 262, 264, 281, 282, 284, 286, 288, 326, 336, 338, 339, 340, 352, 353, 355, 357, 359, 403, 404, 406, 408, 410, 456, 457, 459, 461, 463, 501, 515, 516, 518, 520, 522, 549, 550, 553, 554, 555, 556, 558, 560, 572, 573, 602, 603, 606, 607, 608, 609, 611, 612, 620, 621, 625, 626, 629, 630, 631, 632, 634, 636, 646, 647, 660, 661, 663, 664, 665, 666, 667, 668, 671, 672, 674, 675, 676, 677, 678, 679, 682, 683, 685, 686, 687, 688, 689, 690, 693, 694, 696, 697, 698, 699, 700, 701, 704, 705, 707, 708, 709, 710, 711, 712, 715, 716, 718, 719, 720, 721, 722, 723, 726, 727, 729, 730, 731, 732, 733, 734, 737, 738, 740, 741, 742, 743, 744, 745, 750, 751, 753, 754, 755, 756, 757, 781, 784, 786, 787, 788, 789, 792, 796, 800, 811, 817, 819, 820, 823, 832, 835, 841, 844, 848, 849, 850, 851, 854, 855, 857, 859, 860, 861, 862, 863, 864, 866, 867, 870, 871, 872, 873, 876, 877, 878, 879, 896, 897, 898, 899, 905, 906, 907, 912, 913, 914, 917, 918, 919, 920, 921, 923, 924, 935, 936, 939, 940, 941, 942, 943, 946, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 967, 968, 970, 971, 972, 973, 974, 975, 978, 979, 981, 982, 983, 984, 985, 986, 993, 995], "self_aft": 920, "self_befor": 920, "semi": 123, "semicolon": [118, 121], "semimetr": 768, "send": [114, 115], "sens": [763, 777, 919, 927], "sensit": [118, 127, 318, 385, 437, 493, 538], "sep": 117, "separ": [1, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 653, 763, 804, 807], "seq": [0, 28, 38, 43, 49, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 114, 115, 116, 118, 119, 121, 125, 126, 278, 279, 292, 299, 302, 310, 312, 325, 326, 328, 329, 332, 345, 346, 349, 350, 369, 372, 378, 380, 392, 394, 395, 400, 401, 420, 423, 429, 431, 444, 447, 448, 453, 454, 467, 474, 477, 485, 487, 500, 501, 504, 505, 507, 509, 512, 513, 530, 532, 533, 544, 545, 586, 747, 995], "seq1": [0, 28, 45, 48, 56, 60, 61, 62, 63, 64, 65, 116, 118, 119, 125, 128, 576, 577], "seq2": [0, 28, 45, 48, 56, 60, 61, 62, 63, 64, 65, 118, 119, 128, 576, 577], "seq3": [28, 48, 118, 125], "seq4": 118, "seq5": 118, "seq_1": 121, "seq_2": 121, "seq_gener": [299, 369, 420, 474], "seq_id": 121, "seq_num": [118, 119, 120, 121, 126], "seqid": 121, "seqr": 120, "sequenc": [1, 16, 28, 29, 31, 32, 33, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 114, 115, 116, 117, 119, 120, 121, 126, 129, 191, 201, 213, 586, 600, 655, 747, 777, 987, 988, 995], "sequence1": 66, "sequence2": 66, "sequenceprocessor": 995, "sequenti": [102, 118, 119, 125, 596, 597, 759, 921], "ser": 397, "seri": [1, 57, 103, 121, 173, 185, 190, 220, 232, 237, 238, 250, 255, 581, 586, 645, 649, 650, 652, 653, 658, 749, 773], "serial": [122, 256, 599, 749, 988], "serin": 397, "serv": [0, 129, 748, 759], "server": [60, 61, 62, 63, 64, 65, 129], "set": [15, 16, 46, 49, 53, 54, 78, 94, 105, 106, 111, 118, 120, 122, 125, 131, 170, 184, 201, 214, 231, 249, 268, 270, 275, 293, 302, 315, 318, 328, 346, 363, 372, 382, 385, 394, 397, 414, 423, 434, 437, 447, 450, 468, 477, 490, 493, 504, 509, 526, 530, 535, 538, 545, 559, 567, 573, 578, 590, 616, 621, 641, 647, 657, 747, 768, 770, 773, 775, 776, 777, 795, 796, 803, 835, 837, 848, 849, 864, 866, 869, 873, 876, 877, 879, 899, 913, 914, 926, 933, 944, 945, 950, 990, 995], "set1": 759, "set_index": 885, "setter": 200, "setup": 995, "seven": 581, "sever": [78, 123, 125, 773], "sex": [775, 776], "sffaaa": 119, "sfprgfifgagssayqfegavneggrgpsiwdtfthkypekirdgsnaditv": 117, "sframe": [114, 115], "sg": [332, 345, 507], "sgc": [344, 345], "sgi": [114, 115], "shallow": [28, 31, 201, 202, 278, 349, 400, 453, 509, 512], "shannon": [47, 82, 95], "shannon_entropi": 47, "shape": [40, 49, 112, 124, 549, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 602, 625, 651, 764, 767, 778, 779, 805, 806, 839, 846], "share": [16, 51, 52, 54, 69, 270, 293, 310, 312, 363, 378, 380, 414, 429, 431, 468, 485, 487, 509, 526, 532, 533, 748, 993], "shear": 903, "sheet": 127, "shift": 213, "short": 995, "short_cicruit": 954, "short_circuit": 953, "short_method_nam": [749, 931], "shorter": 125, "should": [1, 16, 47, 67, 74, 78, 79, 90, 94, 101, 103, 104, 105, 106, 107, 114, 120, 124, 127, 129, 130, 141, 142, 143, 183, 201, 230, 248, 256, 266, 275, 298, 315, 316, 317, 327, 334, 368, 382, 383, 384, 393, 397, 419, 434, 435, 436, 446, 450, 473, 490, 491, 492, 503, 528, 535, 536, 537, 577, 579, 580, 581, 592, 598, 635, 651, 653, 657, 747, 762, 763, 768, 769, 770, 773, 776, 777, 790, 791, 800, 835, 841, 844, 885, 906], "shouldn": 763, "show": [1, 201, 773, 993], "show_intern": 865, "shown": [191, 581, 762], "shrink": 586, "shtml": 118, "shuffl": 872, "shuffle_f": [872, 911], "shuffled_tre": 911, "shuffler": 911, "sibl": [123, 293, 363, 414, 468, 526], "side": [94, 651, 654, 657], "sigh": 987, "sign": [127, 581, 931], "signatur": [108, 171, 795, 805, 839], "signific": [1, 127, 581, 586, 649, 651, 652, 653, 654, 657, 776, 777], "significance_test": 581, "significantli": [1, 53, 581, 649, 652, 653], "silent": [78, 105, 106, 811], "silpl": 344, "simd": [16, 66], "similar": [60, 61, 62, 63, 64, 65, 104, 115, 117, 118, 119, 122, 125, 127, 130, 509, 547, 649, 650, 651, 652, 653, 748, 763, 768, 770, 776, 777, 990, 993], "similarli": [0, 1, 118, 990], "simpl": [114, 115, 118, 119, 123, 127, 128, 130, 155, 165, 593, 650, 657, 988, 993], "simpler": 0, "simplex": [579, 587, 588, 596], "simpli": [47, 54, 101, 130, 334, 569, 618, 643, 768, 773, 880, 995], "simplifi": 80, "simpson": [74, 99], "simul": [578, 773, 776, 777], "sinc": [1, 28, 45, 48, 57, 80, 117, 118, 120, 125, 127, 129, 192, 302, 344, 372, 423, 477, 509, 530, 581, 651, 773, 777, 920, 933, 995], "singl": [1, 28, 45, 48, 56, 78, 84, 85, 93, 105, 106, 108, 117, 118, 119, 120, 123, 125, 126, 127, 128, 173, 188, 191, 201, 213, 220, 235, 238, 253, 256, 272, 282, 285, 290, 302, 315, 329, 353, 356, 361, 372, 382, 395, 404, 407, 412, 423, 434, 448, 457, 460, 465, 477, 490, 505, 516, 519, 524, 530, 535, 581, 596, 657, 774, 795, 796, 805, 820, 868, 976, 988, 993, 995], "singleton": [1, 69, 72, 73, 77, 79, 81, 93, 96, 100, 130], "singular": [1, 772, 903, 976], "sinica": 69, "site": [1, 120, 124, 315, 382, 434, 490, 535, 748, 749, 759, 768], "site0": 124, "site1": [124, 748], "site10": 748, "site2": [124, 748], "site3": [124, 748], "site4": [124, 748], "site5": [124, 748], "site6": [124, 748], "site7": [124, 748], "site8": [124, 748], "site9": [124, 748], "sitemap": 120, "situat": [1, 759, 775], "six": [124, 332, 345, 507, 581], "size": [40, 76, 586, 649, 650, 651, 653, 736, 747, 759, 767, 773, 775, 776, 777, 795, 805, 839, 952], "sk": [127, 188, 235, 253, 272], "skbio": [127, 987], "skin": [1, 759], "skip": [315, 382, 434, 490, 535, 649, 651, 652, 653, 657, 805], "skip_subregion": 121, "sklearn": 107, "slen": [114, 115], "slice": [35, 282, 300, 301, 315, 325, 353, 370, 371, 382, 392, 404, 421, 422, 434, 444, 457, 475, 476, 490, 500, 516, 529, 535, 544, 551, 599, 604, 627, 782, 852, 990], "slightli": [60, 83, 653], "slope": 83, "slow": [1, 78, 103, 105, 106, 107], "slower": [0, 928], "sm": [328, 394, 447, 504, 545], "small": [1, 122, 128, 578, 590, 591, 770], "smaller": [101, 315, 382, 434, 490, 535, 654], "smallest": [102, 125, 776, 777, 829], "smith": [0, 16, 63, 64, 65, 66, 657], "snif": 988, "sniffer": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 157, 162, 163, 166, 167, 988], "so": [1, 2, 47, 60, 61, 62, 63, 64, 65, 67, 78, 103, 105, 106, 107, 118, 123, 127, 130, 170, 171, 201, 204, 304, 305, 479, 480, 651, 725, 748, 762, 763, 764, 768, 770, 773, 775, 776, 777, 837, 926, 988, 993, 995], "sob": [1, 91, 92, 93], "societi": 94, "softwar": [1, 118, 119, 127, 840, 987], "sole": [127, 265], "solexa": 119, "solut": 79, "solv": [79, 773], "some": [1, 16, 68, 78, 80, 90, 94, 118, 120, 123, 126, 127, 141, 142, 143, 191, 215, 275, 397, 450, 580, 593, 594, 595, 763, 773, 776, 953, 993, 995], "someformat": 988, "someskbioclass": [130, 988], "someth": [55, 59, 130, 142, 162, 163, 164, 166, 167, 168, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 655, 760, 761, 800, 830, 845, 904, 925, 995], "sometim": [74, 118, 120, 127, 763, 988], "somewhat": [657, 900], "sonnhamm": 128, "soppos": 117, "sort": [49, 54, 109, 110, 192, 201, 204, 299, 302, 328, 369, 372, 394, 420, 423, 447, 474, 477, 504, 530, 545, 692, 725, 747, 795, 834, 835, 913, 918, 919, 926, 990, 995], "sort_categori": [658, 659, 681, 692, 725], "sort_f": 833, "sort_index": 57, "sorted_t": 834, "sourc": [28, 29, 30, 31, 32, 33, 35, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 117, 118, 120, 121, 131, 141, 142, 143, 144, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 200, 201, 202, 203, 204, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 669, 670, 680, 681, 691, 692, 702, 703, 713, 714, 724, 725, 735, 736, 746, 747, 749, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 852, 856, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 937, 944, 950, 951, 952, 953, 954, 964, 965, 966, 976, 977, 987], "space": [1, 118, 123, 125, 127, 128, 201, 204, 213, 578, 579, 580, 584, 585, 587, 588, 692, 748, 749, 759, 762, 769, 795], "spaitial": 653, "span": [78, 94, 108, 118, 120, 123, 191, 216, 795], "spars": [113, 587, 588, 597, 762, 770, 779, 782, 798, 805, 815, 816, 817, 837, 839], "sparse_vector": 795, "sparsedatafram": 838, "spatial": [1, 104, 107, 110, 569, 576, 600, 618, 623, 635, 643, 645, 653], "spearman": [1, 650, 651, 654], "spearmanr": [650, 651], "spec": 256, "specfi": 995, "speci": [1, 69, 78, 81, 83, 88, 94, 101, 102, 124, 129, 586, 593, 748, 763, 768, 770, 847], "special": [16, 122, 130, 805, 839], "speciat": 657, "specie1": 748, "specie2": 748, "specie3": 748, "specie4": 748, "specie5": 748, "specie6": 748, "specie7": 748, "specie8": 748, "specie9": 748, "species0": 124, "species1": 124, "species2": 124, "species3": 124, "species4": 124, "species5": 124, "species6": 124, "species7": 124, "species8": 124, "species_a": 867, "speciesa": 867, "specif": [73, 78, 83, 103, 105, 106, 107, 108, 111, 130, 216, 220, 509, 657, 669, 691, 692, 702, 735, 746, 776, 777, 782, 795, 805, 839, 911, 988, 994, 995], "specifi": [50, 54, 94, 111, 114, 116, 118, 119, 120, 121, 122, 125, 128, 129, 130, 161, 170, 191, 201, 214, 216, 268, 269, 275, 282, 300, 302, 318, 331, 343, 344, 346, 353, 370, 372, 385, 397, 404, 421, 423, 437, 450, 457, 475, 477, 493, 506, 509, 516, 530, 538, 548, 551, 558, 561, 566, 567, 573, 579, 580, 581, 586, 587, 588, 590, 591, 597, 601, 604, 611, 613, 615, 616, 621, 624, 627, 634, 637, 639, 641, 647, 649, 650, 651, 652, 653, 657, 736, 759, 767, 768, 774, 782, 792, 795, 805, 809, 811, 832, 839, 869, 877, 908, 911, 913, 916, 919, 926, 953, 965, 966, 976, 995], "speed": [201, 768], "spermatophyta": 117, "sphingobacteria": [886, 919], "split": [118, 119, 125, 128], "spmatrix": [782, 798], "spreadsheet": [122, 127], "sqcup": [78, 94], "sqlite": 268, "sqrt": [77, 87, 88, 89, 596, 770], "squar": [89, 90, 107, 123, 547, 600, 623, 765], "squareform": [600, 645], "sr1": 334, "srava": 128, "ss": [128, 835], "ss_con": 128, "sscinam": [114, 115], "sseq": [114, 115], "sseqid": [114, 115], "sskingdom": [114, 115], "sstart": [114, 115], "sstrand": [114, 115], "ssw": [2, 16, 66], "stabl": [558, 573, 611, 621, 634, 647, 866], "stack": 900, "stackoverflow": 952, "stai": 127, "stale": 201, "stamataki": 867, "stand": [305, 480, 651], "standalon": 118, "standard": [118, 119, 121, 123, 127, 328, 331, 332, 334, 344, 345, 394, 447, 504, 506, 507, 545, 551, 578, 581, 604, 627, 650, 651, 764, 767, 770, 771, 988, 990], "standardis": 76, "staphylococcu": 792, "start": [0, 14, 15, 16, 28, 45, 48, 56, 60, 61, 62, 63, 64, 65, 66, 114, 115, 117, 120, 121, 122, 123, 125, 128, 129, 191, 212, 218, 294, 313, 334, 335, 341, 344, 345, 364, 381, 415, 433, 469, 488, 527, 534, 600, 654, 655, 773, 776, 777, 815, 995], "start_end_posit": 0, "stat": [0, 1, 28, 45, 46, 48, 53, 54, 57, 90, 96, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 275, 282, 292, 293, 296, 299, 326, 330, 331, 332, 334, 344, 345, 346, 353, 363, 366, 369, 397, 404, 414, 417, 420, 450, 457, 467, 468, 471, 474, 501, 502, 506, 507, 509, 516, 526, 547, 558, 567, 573, 575, 829, 987, 990], "state": [94, 116, 125, 127, 170, 953, 954, 964, 976, 995], "static": [346, 804, 807], "statis": [649, 652], "statist": [1, 69, 72, 77, 83, 90, 579, 581, 586, 649, 651, 652, 653, 654, 657, 748, 762, 763, 767, 773, 776, 777, 987], "statistica": [69, 80], "statsmodel": 773, "statu": [775, 776], "staxid": [114, 115], "std": [117, 767, 771, 776], "steel": 927, "steep": 762, "step": [1, 28, 45, 48, 56, 78, 103, 105, 106, 107, 125, 130, 766, 773], "still": [123, 124, 170, 200, 581, 586, 590, 651, 653], "stimat": 771, "stitl": [114, 115], "stockholm": [55, 59], "stockholm_format": 128, "stombaugh": [105, 106], "stool": 777, "stop": [28, 45, 48, 56, 69, 125, 294, 313, 331, 332, 334, 344, 345, 364, 381, 397, 415, 432, 433, 469, 488, 506, 507, 527, 534, 779, 846, 867, 954, 990], "storag": [201, 837], "store": [28, 38, 43, 51, 52, 53, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 191, 201, 256, 273, 275, 310, 312, 346, 378, 380, 397, 429, 431, 450, 485, 487, 509, 532, 533, 569, 599, 600, 618, 623, 643, 654, 670, 703, 714, 749, 762, 763, 768, 770, 795, 805, 839, 847, 989, 990], "str": [13, 17, 27, 33, 38, 43, 55, 59, 67, 103, 107, 108, 109, 110, 111, 114, 120, 121, 128, 131, 140, 153, 156, 157, 158, 162, 163, 164, 166, 167, 168, 170, 181, 183, 186, 188, 199, 211, 217, 219, 228, 230, 233, 235, 246, 248, 251, 253, 256, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 285, 290, 291, 294, 298, 299, 300, 301, 302, 313, 314, 316, 318, 319, 320, 321, 322, 324, 325, 327, 328, 333, 334, 342, 348, 356, 361, 362, 364, 368, 369, 370, 371, 372, 381, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 399, 407, 412, 413, 415, 419, 420, 421, 422, 423, 433, 435, 437, 438, 439, 440, 441, 443, 444, 446, 447, 449, 450, 452, 460, 465, 466, 469, 473, 474, 475, 476, 477, 488, 489, 491, 493, 494, 495, 496, 497, 499, 500, 503, 504, 508, 509, 511, 519, 524, 525, 527, 528, 529, 530, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 551, 557, 558, 559, 561, 564, 566, 567, 568, 573, 574, 581, 586, 592, 597, 600, 601, 604, 610, 611, 613, 615, 616, 617, 621, 622, 624, 627, 633, 634, 637, 639, 641, 642, 647, 648, 649, 650, 652, 653, 654, 655, 668, 670, 679, 690, 692, 701, 703, 712, 714, 723, 734, 745, 749, 758, 759, 760, 761, 768, 775, 776, 789, 792, 795, 798, 799, 800, 802, 804, 805, 809, 813, 821, 829, 830, 837, 839, 840, 841, 845, 847, 861, 865, 869, 880, 881, 893, 895, 904, 908, 910, 914, 916, 925, 926, 927, 932, 946, 951, 963, 975, 986], "straight": 1, "straightforward": [127, 990], "strand": [114, 115, 120, 121, 128, 191, 330, 331, 332, 502], "stranded": 120, "strategi": [578, 590, 927], "stream": [118, 121, 988], "strength": 1, "streptophyta": 117, "strict": [54, 125, 293, 363, 414, 468, 526, 561, 613, 637, 651, 654, 657, 795, 844], "strict_match": [775, 776], "stricter": [123, 930], "strictli": [118, 581, 586, 597, 868], "string": [1, 16, 44, 103, 107, 108, 111, 112, 116, 118, 119, 123, 125, 127, 128, 189, 190, 236, 237, 254, 255, 256, 273, 291, 301, 302, 318, 325, 328, 329, 334, 342, 362, 371, 372, 385, 392, 394, 395, 413, 422, 423, 437, 444, 447, 448, 466, 476, 477, 493, 500, 504, 505, 525, 529, 530, 538, 544, 545, 547, 551, 557, 563, 581, 586, 599, 600, 604, 610, 614, 627, 633, 638, 649, 652, 653, 655, 758, 759, 800, 803, 829, 840, 841, 844, 861, 865, 919, 927, 932, 993], "stringifi": 789, "stringio": [1, 78, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 170, 599, 804, 807, 926, 927, 988, 993], "strip": [867, 871, 872], "stripe": [16, 66], "stripedsmithwaterman": [0, 66], "strong": [1, 275, 649, 651, 657], "struct": [2, 120], "structur": [105, 106, 115, 120, 123, 129, 559, 600, 649, 650, 657, 748, 779, 795, 805, 839, 846, 909, 953, 987], "studi": [1, 78, 127, 256, 578, 581, 748, 762, 770, 777], "style": [578, 923, 924], "su": 128, "sub": [120, 121, 191, 778], "subclass": [54, 116, 118, 125, 128, 130, 220, 293, 363, 414, 468, 509, 526, 547, 599, 600, 655, 926, 953], "subfold": 951, "subject": [1, 114, 115, 127, 989, 995], "subject1": 115, "subject2": 115, "sublist": 777, "submit": [117, 118, 777], "submodul": 130, "suboptim": 16, "subsampl": [90, 747, 773, 776, 777, 778, 872, 987], "subsample_count": [90, 747], "subsample_paired_pow": 777, "subsample_pow": 773, "subseq": [315, 382, 434, 490, 509, 535], "subsequ": [63, 116, 118, 127, 277, 285, 290, 294, 313, 315, 348, 356, 361, 364, 381, 382, 399, 407, 412, 415, 433, 434, 452, 460, 465, 469, 488, 490, 509, 511, 519, 524, 527, 534, 535, 953, 990], "subset": [78, 94, 105, 106, 111, 112, 117, 650, 805, 811, 835, 871, 877, 993], "subset_with_metadata": 805, "subsitut": [328, 394, 447, 504, 545], "substitut": [16, 60, 61, 62, 63, 64, 65, 67, 122, 328, 394, 397, 447, 504, 545, 547, 559, 562, 564, 565, 571, 578, 929, 990], "substitution_matrix": [16, 60, 61, 62, 63, 64, 65], "substitutionmatrix": [67, 328, 394, 447, 504, 545, 990], "substract": [60, 61, 62, 63, 64, 65, 766], "substrat": 748, "substrate_cor": 748, "substrate_oth": 748, "substrate_sand": 748, "subtili": 128, "subtract": [16, 736], "subtre": [123, 129, 882, 993], "success": [929, 954, 995], "success_callback": [954, 995], "success_f": 995, "successfulli": 867, "suffix": 68, "suggest": [16, 142, 162, 163, 166, 167, 776], "suit": 763, "sum": [69, 71, 74, 78, 87, 88, 90, 94, 98, 213, 302, 372, 423, 477, 530, 580, 584, 585, 589, 777, 778, 815, 816, 820, 825, 835, 862, 918, 952], "sum_": [76, 78, 80, 94, 97, 578, 580, 593, 594, 595, 651], "summar": 581, "summari": [44, 557, 581, 610, 633, 825], "super": [114, 115], "superkingdom": 129, "superset": [78, 94, 105, 106, 649, 653], "supplement": 76, "supplementari": [119, 581], "suppli": [16, 114, 118, 126, 162, 166, 265, 298, 368, 419, 473, 528, 575, 777, 795, 877], "support": [1, 47, 55, 59, 80, 170, 173, 217, 219, 238, 256, 265, 271, 274, 275, 324, 333, 391, 396, 397, 443, 449, 450, 499, 508, 543, 546, 547, 559, 568, 574, 617, 622, 642, 648, 651, 749, 760, 761, 768, 773, 782, 795, 822, 830, 845, 847, 867, 904, 922, 925, 926, 933, 953, 976, 987, 991, 992, 993, 994, 995], "support_attr": 926, "support_valu": 926, "suppos": [114, 115, 117, 118, 119, 120, 123, 126, 128, 593, 773, 777], "suppress": [129, 649, 653, 654], "suppress_sequ": [16, 66], "sure": [638, 777, 995], "surpass": 125, "surround": [123, 586], "survei": 1, "sv": 117, "svd": 772, "svg": 749, "sw": [16, 775], "swab": 1, "swiss": 117, "switch": 782, "sy": 171, "symbiont": 657, "symbol": [47, 118], "symmetr": [1, 547, 551, 599, 600, 604, 623, 627, 638, 651, 655, 657, 762, 870], "symmetri": [599, 600, 623, 638, 640], "symptom": 777, "syn": 120, "synonym": [1, 129], "synthesi": 128, "synthet": 120, "system": [55, 59, 86, 97, 127, 129, 130, 201, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 776, 811, 830, 845, 904, 925], "systemat": 94, "t": [1, 16, 28, 45, 47, 48, 49, 53, 54, 58, 66, 78, 80, 94, 103, 105, 106, 107, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 141, 143, 171, 191, 192, 269, 275, 280, 289, 294, 298, 302, 304, 305, 306, 307, 308, 311, 319, 320, 321, 322, 330, 344, 351, 360, 364, 368, 372, 374, 375, 376, 379, 386, 387, 388, 389, 397, 402, 411, 415, 419, 423, 425, 426, 427, 430, 438, 439, 440, 441, 450, 455, 464, 469, 473, 477, 479, 480, 481, 482, 483, 486, 494, 495, 496, 497, 502, 509, 514, 523, 527, 528, 530, 539, 540, 541, 542, 547, 565, 579, 581, 586, 587, 588, 592, 593, 597, 654, 762, 763, 768, 770, 772, 773, 775, 777, 778, 792, 800, 805, 806, 822, 829, 839, 842, 871, 872, 909, 910, 918, 926, 927, 928, 990, 994, 995], "t0": [114, 115, 121, 124, 126, 599], "t1": [114, 115, 124, 126, 129, 599, 804], "t10": [121, 124], "t100": [114, 115], "t10596": 115, "t1217": 115, "t1233": 115, "t131567": 129, "t1566": 115, "t161": 114, "t2": [124, 126, 804, 807], "t2130": 115, "t2214": 115, "t3": [126, 804, 807], "t30": [121, 126], "t329": 114, "t330": 114, "t335928": 129, "t34": 126, "t35": 126, "t3e": [114, 115], "t4": 124, "t42": 115, "t44": 115, "t5": 807, "t50": 121, "t5565": 115, "t5587": 115, "t5671": 115, "t6": 807, "t6821": 115, "t6928": 115, "t6e": 115, "t80": 121, "t811": 115, "t8468": 115, "t8552": 115, "t8e": 115, "t9": 124, "t90": 121, "t94": 115, "t96": 121, "t99": 114, "t9e": 114, "t_a": 820, "t_b": 820, "ta": [599, 990], "taaactatta": 117, "taaactccgg": 117, "taacaatcct": 117, "taacatatac": 119, "taacgtta": [330, 502], "taagactaaa": 117, "taatgaatgg": 117, "tab": [114, 115, 121, 122, 123, 124, 126, 127, 129, 799, 804, 807, 841], "tabl": [1, 103, 107, 113, 119, 120, 127, 129, 268, 331, 332, 334, 343, 344, 345, 506, 507, 581, 586, 748, 762, 763, 769, 770, 953, 987, 989, 990], "table2": 842, "table3": 842, "table_id": [343, 779, 846], "tableexcept": [779, 831, 844, 846], "tabular": [28, 114, 115, 127, 129, 256], "tabularmsa": [0, 60, 61, 62, 63, 64, 65, 66, 116, 119, 125, 128, 201, 988], "tac": 126, "tacatcgttt": 117, "tacatgtgta": 117, "taccaggcat": 117, "tacccggt": 990, "tacctaagtt": 117, "tacg": 126, "tacgta": 126, "tae000111": 115, "tae000171": 115, "tae000174": 115, "tae000425": 115, "tag": [121, 128, 299, 329, 369, 395, 420, 448, 474, 505, 596], "tagagattaattgccactgccaaaattctg": 0, "tagattacag": 117, "taggttgatc": 117, "tagtgaatgg": 117, "take": [1, 107, 125, 130, 141, 142, 143, 220, 298, 325, 368, 392, 419, 444, 473, 500, 528, 544, 563, 581, 614, 623, 638, 650, 651, 725, 762, 770, 773, 774, 790, 791, 800, 820, 833, 841, 842, 927, 953, 993, 995], "taken": [1, 114, 115, 118, 125, 128, 129, 581, 657, 952], "target": [0, 1, 16, 66, 77, 121, 558, 573, 611, 621, 634, 647], "target_begin": 2, "target_sequ": [0, 2, 16, 17], "task": [929, 988], "tata": [301, 371, 422, 476, 529], "tataa": [301, 371, 422, 476, 529], "tatattagca": 117, "tatctaactg": 117, "tatgtatata": 119, "tatgtatatataacatatacatatatacatacata": 119, "tau": 581, "tax": 115, "tax_id": [129, 885], "taxa": [1, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 127, 129, 581, 763, 777, 872, 927], "taxdump": 885, "taxdump_readm": 129, "taxid": 129, "taxon": [1, 69, 70, 71, 74, 76, 78, 87, 88, 94, 97, 98, 102, 105, 106, 117, 120, 779, 846, 885, 993], "taxonom": [1, 105], "taxonomi": [114, 123, 127, 129, 334, 342, 343, 795, 796, 805, 822, 839, 885, 886, 919], "taxonomy_0": [822, 837], "taxonomy_1": [822, 837], "taylor": 83, "tb": [599, 804, 807], "tc": [599, 804, 807], "tcaaaagaaa": 117, "tcatttagga": 126, "tcc": 0, "tccacaaatg": 117, "tccagaaaaa": 117, "tcg": [329, 395, 448, 505], "tcga": [328, 394, 447, 504, 545], "tcggagcagt": 117, "tcgggcasdgca": 126, "tcgggcattgca": 126, "tcgtatagat": 117, "tctacccctctcagaga": 0, "tctataagattccgcatgcgttacttataagatgtctcaacgg": 0, "tctcaatctc": 117, "tctcaga": 0, "tcttaacata": 117, "tcttcagcat": 117, "tcttgctcat": 117, "tctttgcttc": 117, "tdbl": 877, "technic": [97, 123], "techniqu": [1, 79, 578, 762, 763, 991], "teh": [779, 846], "tell": 581, "temorg": 115, "temperatur": 776, "tempfil": 170, "temporari": 795, "temporaryfil": 170, "ten": 1, "tend": 127, "ter": [397, 763], "term": [1, 47, 74, 92, 94, 113, 120, 185, 220, 232, 250, 256, 657, 748, 927], "termin": [117, 331, 344, 506, 920], "test": [1, 33, 42, 94, 130, 174, 180, 192, 198, 204, 210, 221, 227, 239, 245, 257, 263, 280, 289, 335, 341, 351, 360, 402, 411, 455, 464, 514, 523, 578, 581, 586, 599, 649, 651, 652, 653, 654, 656, 657, 669, 691, 702, 735, 746, 773, 776, 777, 801, 930, 931, 951, 987], "test_tabl": [804, 807], "texon": 121, "text": [71, 87, 88, 102, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 141, 142, 143, 170, 256, 599, 680, 713, 724], "textiobas": [131, 141, 142, 143, 170], "textiowrapp": 170, "tf": 63, "tgaaggatca": 117, "tgaattcaac": 117, "tgca": 126, "tgene": 121, "tgenu": 129, "tgetaaafhwqaaf": 126, "tgg": [299, 329, 369, 395, 420, 448, 474, 505], "tggaacaatt": 117, "tggattaaaa": 117, "tggattctgc": 191, "tggtgcacct": 117, "tggtgctgga": 117, "tgi": 114, "tgtaataaat": 117, "th": [71, 87, 88, 102, 596], "than": [0, 1, 16, 46, 47, 69, 78, 83, 85, 101, 105, 106, 118, 123, 125, 128, 163, 167, 201, 256, 275, 276, 277, 280, 294, 298, 302, 313, 314, 315, 316, 317, 319, 320, 321, 322, 332, 345, 347, 348, 351, 364, 368, 372, 381, 382, 383, 384, 386, 387, 388, 389, 397, 398, 399, 402, 415, 419, 423, 433, 434, 435, 436, 438, 439, 440, 441, 450, 451, 452, 455, 469, 473, 477, 488, 489, 490, 491, 492, 494, 495, 496, 497, 507, 510, 511, 514, 527, 528, 530, 534, 535, 536, 537, 539, 540, 541, 542, 547, 577, 578, 581, 583, 586, 599, 640, 649, 651, 652, 653, 657, 747, 762, 763, 776, 777, 778, 811, 816, 835, 868, 885, 898, 927, 932, 988, 993], "thei": [0, 1, 38, 43, 47, 53, 69, 103, 107, 114, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 218, 275, 280, 289, 292, 315, 335, 351, 360, 382, 402, 411, 434, 450, 455, 464, 467, 490, 514, 523, 535, 549, 561, 578, 602, 613, 625, 637, 649, 650, 651, 652, 653, 654, 658, 758, 759, 762, 768, 773, 796, 805, 839, 872, 879, 928, 930, 995], "them": [1, 80, 120, 125, 127, 192, 204, 213, 214, 327, 393, 446, 503, 509, 651, 692, 767, 768, 770, 954], "themselv": [989, 990], "theorem": [84, 85], "theoret": [95, 99], "theori": [47, 71, 86, 97, 592, 598], "therebi": 748, "therefor": [1, 45, 48, 54, 74, 78, 94, 98, 105, 106, 111, 127, 256, 547, 581], "thermoplasmata": [886, 919], "theta": [94, 581], "thi": [0, 1, 16, 30, 31, 32, 33, 35, 40, 42, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 83, 84, 85, 90, 93, 94, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 155, 163, 165, 167, 169, 170, 171, 174, 180, 183, 189, 190, 191, 192, 198, 200, 201, 202, 203, 204, 210, 212, 213, 214, 215, 216, 217, 219, 221, 227, 230, 236, 237, 239, 245, 248, 254, 255, 256, 257, 263, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 280, 282, 285, 287, 289, 290, 293, 294, 298, 302, 304, 305, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 328, 329, 332, 333, 334, 343, 344, 345, 346, 348, 349, 350, 351, 353, 356, 358, 360, 361, 363, 364, 368, 372, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 394, 395, 396, 399, 400, 401, 402, 404, 407, 409, 411, 412, 414, 415, 419, 423, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 447, 448, 449, 452, 453, 454, 455, 457, 460, 462, 464, 465, 468, 469, 473, 477, 479, 480, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 504, 505, 507, 508, 509, 511, 512, 513, 514, 516, 519, 521, 523, 524, 526, 527, 528, 530, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 568, 569, 570, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 597, 599, 602, 604, 617, 618, 619, 622, 623, 625, 627, 640, 642, 643, 644, 645, 648, 649, 650, 651, 653, 655, 656, 657, 658, 747, 748, 759, 760, 761, 763, 768, 769, 770, 773, 775, 776, 777, 792, 795, 796, 803, 805, 811, 820, 826, 829, 830, 835, 839, 840, 844, 845, 847, 863, 865, 867, 869, 871, 872, 875, 877, 878, 880, 882, 883, 885, 889, 896, 900, 903, 904, 906, 908, 909, 911, 912, 913, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 951, 952, 953, 954, 964, 976, 988, 989, 990, 991, 992, 993, 994, 995], "thing": 995, "third": [593, 599, 889, 995], "those": [1, 104, 127, 256, 270, 657, 747, 762, 777, 815, 877, 911, 916, 927, 953, 990], "though": [80, 118, 119, 125, 126, 127, 581, 635, 649, 653, 817, 927, 995], "thought": 653, "thr": 397, "thraustochytrium": 343, "three": [1, 28, 93, 125, 129, 593, 599, 623, 654, 748, 759, 776, 777, 795, 796, 842, 872, 995], "threonin": 397, "threshold": [69, 930], "through": [1, 35, 60, 61, 62, 127, 155, 161, 165, 551, 604, 627, 768, 880, 995], "throughout": [1, 122, 334, 343, 776, 994], "throughput": [78, 105, 106, 118, 119, 586, 759, 776], "thrown": [142, 887], "thu": [1, 118, 119, 123, 127, 183, 230, 248, 266, 302, 372, 423, 477, 509, 530, 551, 604, 623, 627, 649, 651, 653, 657, 768], "thymin": [117, 120, 275, 330, 502], "ti": [46, 70, 829, 926], "tid": 121, "tile": 126, "tile_numb": 126, "till": 129, "time": [1, 16, 45, 48, 78, 90, 99, 105, 106, 108, 118, 119, 127, 547, 587, 588, 596, 635, 649, 650, 651, 652, 654, 658, 681, 736, 770, 773, 776, 777, 782, 795, 826, 835, 847, 911, 995], "timestamp": 839, "tip": [1, 78, 94, 105, 106, 847, 865, 867, 869, 870, 871, 872, 874, 875, 877, 878, 880, 887, 892, 893, 894, 895, 897, 898, 900, 901, 902, 908, 909, 910, 911, 913, 914, 916, 919, 920, 921, 926, 988, 993], "tip_": 912, "tip_a": [878, 907], "tip_count": 898, "tip_d": 878, "tip_list": 915, "tip_nam": 869, "tip_subset": 877, "tip_tip_dist": [878, 887], "tipnam": [893, 895], "tissue_typ": 117, "titl": [1, 114, 115, 120, 128, 567, 616, 641, 759], "tjflkafnkkghvm": 126, "tmgc": 343, "tn": 128, "tno": 129, "to_": [558, 611, 634], "to_data_fram": 645, "to_datafram": [190, 237, 255, 256], "to_delet": 903, "to_dict": 49, "to_hdf5": 805, "to_seri": [189, 236, 254], "toarrai": 597, "tobacco": 777, "togeth": [54, 117, 118, 120, 128, 581, 795, 820, 953], "tol": 772, "toler": [772, 930], "tolosana": [578, 596], "ton": 1, "tongu": 1, "too": [85, 768, 792, 862], "tool": [60, 63, 114, 115, 118, 125, 127, 129, 759, 763], "toolkit": 867, "top": [581, 885], "topolog": 866, "topologi": [869, 903, 993], "total": [70, 71, 77, 78, 79, 81, 86, 87, 88, 89, 90, 102, 112, 114, 127, 302, 372, 423, 477, 530, 650, 795, 877], "totaldescendingbranch": 877, "toward": 863, "tparent": 121, "tr": 877, "traceback": [114, 125, 344, 509, 651], "tracheophyta": 117, "track": 117, "tracker": [118, 142], "tract": 777, "trail": [118, 119, 122], "trajectori": [658, 659, 669, 670, 680, 681, 691, 692, 702, 703, 713, 714, 724, 725, 735, 736, 746], "trajectory_categori": [658, 659, 681, 692, 725], "trajectory_result": 658, "tranform": 842, "tranpos": 837, "transcrib": [117, 120, 331, 332, 502, 990], "transcript": 191, "transect": 748, "transform": [141, 143, 315, 382, 434, 490, 535, 578, 579, 580, 584, 585, 587, 588, 592, 597, 762, 768, 770, 782, 807, 829], "translat": [117, 120, 123, 129, 170, 330, 332, 334, 345, 502, 507, 990], "translate_six_fram": [330, 331, 344, 502, 506], "transloc": 776, "transpar": [127, 170], "transpos": 837, "trapezoid": 80, "trascrib": 117, "traver": 993, "travers": [848, 849, 869, 873, 876, 880, 883, 894, 897, 900, 901, 902, 917, 923, 924, 993], "tre361": 117, "treat": [45, 46, 47, 48, 118, 122, 127, 256, 275, 318, 327, 385, 393, 397, 437, 446, 450, 493, 503, 509, 538, 576, 776], "treatment": [220, 581, 586, 658, 776, 793], "treatment_stat": 776, "tree": [1, 78, 94, 105, 106, 123, 128, 129, 201, 597, 794, 810, 987, 988], "tree1": [870, 871, 872, 993], "tree2": [870, 871, 872, 993], "tree3": 993, "tree_copi": [848, 849, 873, 876], "tree_copy_nod": [848, 849, 873, 876], "tree_nod": [848, 849, 873, 876], "tree_node_class": 926, "treeerror": [908, 909], "treenod": [1, 78, 94, 105, 106, 123, 597, 794, 926, 927, 988, 993], "trg": [299, 329, 369, 395, 420, 448, 474, 505], "tri": 817, "triangl": [623, 638, 645, 651, 768, 817], "triangular": 651, "trifoliea": 117, "trifolium": 117, "trifurc": [78, 105, 106, 123], "trim": 344, "tripleton": 1, "trp": 397, "trubbbbrbcefgh": 126, "true": [1, 14, 15, 16, 29, 30, 31, 32, 33, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 62, 72, 73, 78, 79, 94, 101, 103, 105, 106, 107, 108, 111, 114, 117, 118, 119, 120, 121, 123, 126, 141, 142, 143, 162, 166, 170, 171, 184, 187, 191, 201, 213, 218, 231, 234, 249, 252, 265, 275, 276, 277, 279, 280, 282, 289, 292, 293, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 344, 345, 346, 347, 348, 350, 351, 353, 360, 363, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 411, 414, 416, 417, 418, 420, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 457, 464, 467, 468, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 516, 523, 526, 530, 532, 533, 536, 537, 538, 539, 540, 541, 542, 544, 545, 548, 549, 556, 558, 561, 577, 581, 586, 587, 588, 592, 599, 600, 601, 602, 609, 611, 613, 623, 624, 625, 632, 634, 637, 638, 640, 649, 651, 653, 654, 657, 692, 703, 767, 768, 770, 771, 775, 776, 778, 779, 795, 798, 802, 803, 805, 806, 814, 815, 816, 817, 821, 825, 826, 827, 828, 829, 832, 833, 835, 837, 838, 839, 842, 844, 865, 867, 869, 874, 882, 888, 890, 891, 892, 894, 897, 900, 901, 902, 905, 906, 907, 908, 917, 919, 920, 922, 926, 927, 953, 954, 964, 976, 990, 993, 995], "truncat": [119, 557, 610, 633, 758, 927, 995], "trust": 119, "truth": [276, 347, 398, 451, 510], "truthi": [276, 347, 398, 451, 510], "try": [777, 778], "tryptophan": [47, 397], "tsuperkingdom": 129, "tsv": [122, 127, 188, 235, 253, 256, 269, 272, 807, 841], "tsv_fh": 807, "tt": [46, 315, 382, 434, 490, 535], "tta": [317, 384, 436, 492, 537], "ttacatatta": 117, "ttacgcttaaac": 118, "ttactattac": 117, "ttactgttcg": 117, "ttagctcatt": 117, "ttattaaaag": 117, "ttattgtagc": 117, "ttattttttt": 117, "ttcaatttgg": 117, "ttcatt": [292, 314, 326, 467, 489, 501], "ttcatttgat": 117, "ttccagtaga": 117, "ttctactctt": 117, "ttctgcaatc": 117, "ttest_ind": [581, 586], "ttest_rel": 581, "ttgaatactt": 117, "ttgagaatac": 117, "ttgg": 795, "ttggccaaga": 117, "ttgtaactct": 117, "ttgttgtacc": 117, "ttjflkafnkkghvm": 126, "tttattggta": 117, "tttcctcgtg": 117, "tttgaattaa": 117, "tttgcaggct": 117, "ttttcattgg": 117, "ttttggactg": 117, "ttttggatta": 117, "tttttaggcc": 117, "tttttttaaaaaaa": 995, "tupl": [60, 61, 62, 63, 64, 65, 66, 73, 77, 84, 90, 93, 111, 121, 142, 191, 212, 216, 270, 331, 332, 506, 507, 551, 604, 627, 782, 790, 795, 805, 806, 822, 835, 839, 886, 887, 918, 919], "turkei": [118, 125], "turn": [275, 397, 450, 770, 930, 995], "turnip": 128, "tutori": [127, 130, 188, 235, 253, 256, 269, 272, 987], "twice": 777, "two": [0, 1, 60, 61, 62, 63, 64, 65, 66, 69, 74, 94, 105, 106, 114, 115, 118, 119, 120, 121, 123, 125, 126, 129, 191, 192, 198, 204, 210, 213, 218, 275, 280, 293, 298, 315, 319, 321, 351, 363, 368, 382, 386, 388, 397, 402, 414, 419, 434, 438, 440, 450, 455, 468, 473, 490, 494, 496, 514, 526, 528, 535, 539, 541, 547, 549, 551, 556, 558, 563, 569, 576, 577, 578, 581, 583, 586, 593, 596, 597, 599, 600, 602, 604, 609, 611, 614, 618, 625, 627, 632, 634, 638, 643, 649, 650, 651, 652, 653, 654, 655, 657, 763, 768, 773, 776, 777, 792, 795, 805, 820, 839, 871, 872, 878, 887, 909, 911, 926, 931, 988, 990, 993], "txt": [117, 127, 129, 188, 235, 253, 272], "tyne": 117, "type": [1, 16, 28, 33, 45, 46, 48, 84, 95, 99, 107, 111, 112, 116, 118, 119, 120, 121, 122, 125, 128, 129, 141, 143, 156, 158, 159, 160, 162, 166, 170, 173, 174, 180, 188, 220, 221, 227, 235, 238, 239, 245, 253, 256, 257, 263, 265, 269, 272, 277, 280, 289, 292, 293, 294, 296, 298, 299, 300, 313, 314, 319, 320, 321, 322, 325, 326, 335, 341, 348, 351, 360, 363, 364, 366, 368, 369, 370, 381, 386, 387, 388, 389, 392, 399, 402, 411, 414, 415, 417, 419, 420, 421, 433, 438, 439, 440, 441, 444, 452, 455, 464, 467, 468, 469, 471, 473, 474, 475, 488, 489, 494, 495, 496, 497, 500, 501, 509, 511, 514, 523, 526, 527, 528, 534, 539, 540, 541, 542, 544, 551, 560, 572, 576, 577, 599, 604, 612, 620, 627, 636, 646, 650, 653, 655, 748, 762, 763, 770, 773, 775, 779, 790, 796, 805, 806, 820, 839, 846, 848, 849, 869, 873, 876, 918, 926, 930, 937, 987, 988], "typeerror": [28, 45, 48, 54, 103, 162, 163, 166, 167, 277, 293, 294, 298, 302, 313, 314, 319, 320, 321, 322, 348, 363, 364, 368, 372, 381, 386, 387, 388, 389, 399, 414, 415, 419, 423, 433, 438, 439, 440, 441, 452, 468, 469, 473, 477, 488, 489, 494, 495, 496, 497, 511, 526, 527, 528, 530, 534, 539, 540, 541, 542, 576, 577, 650, 651, 653, 776, 777, 778, 822, 869], "typic": [60, 61, 62, 63, 64, 65, 67, 118, 119, 126, 127, 128, 191, 201, 768, 867, 989], "tyr": 397, "tyrosin": 397, "u": [1, 62, 65, 78, 84, 87, 105, 106, 117, 118, 120, 129, 280, 285, 289, 290, 330, 351, 356, 360, 361, 397, 402, 407, 411, 412, 450, 455, 460, 464, 465, 502, 514, 519, 523, 524, 581, 584, 585, 597, 651, 772, 777, 794, 990, 995], "u1": [1, 78, 105, 106], "u2": [1, 78, 105, 106], "u3": [1, 78, 105, 106], "u4": [1, 78, 105, 106], "u5": [1, 78, 105, 106], "u6": [1, 78, 105, 106], "u7": [1, 78, 105, 106], "u8": [78, 105, 106], "u_count": [78, 105, 106], "u_i": 581, "uaacguua": [330, 502], "uaaguucucgaucucuaaaaucg": 128, "uaaguucucgaucuuuaaaaucg": 128, "uagguugauc": 117, "uc": 990, "ucagucagucagucagucagucagucagucagucagucagucagucagucagucagucagucag": 334, "uccacaaaug": 117, "uconn": [69, 73], "ugaguucucgaucucuaaaaucg": 128, "ugaguucucuaucucuaaaaucg": 128, "uint8": [118, 119, 126, 275, 277, 294, 298, 313, 314, 319, 320, 321, 322, 328, 348, 364, 368, 381, 386, 387, 388, 389, 394, 397, 399, 415, 419, 433, 438, 439, 440, 441, 447, 450, 452, 469, 473, 488, 489, 494, 495, 496, 497, 504, 509, 511, 527, 528, 534, 539, 540, 541, 542, 545], "uk": [60, 63, 82, 117, 120, 191, 578], "ulcl": 84, "ulcu": 84, "un": 123, "unabl": 131, "unalign": [60, 61, 62, 63, 64, 65, 66, 990], "unbound": [201, 215], "uncertainti": [47, 586, 657], "unclear": 83, "unconstrain": 763, "uncorrect": [72, 73], "uncov": [84, 85, 991], "undefin": [127, 775, 776, 872], "under": [80, 107, 118, 275, 397, 450, 509, 581, 692, 776, 795, 987], "underli": [0, 170, 280, 344, 351, 402, 455, 509, 514, 576, 748, 773, 779, 990], "underpow": 773, "underscor": [123, 125], "understand": [127, 581], "understood": [55, 59, 123, 162, 163, 164, 166, 167, 168, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 830, 845, 904, 925], "unequ": [69, 335, 547], "unescap": 123, "uneven": 102, "unfortun": [119, 776], "ungap": [315, 382, 434, 490, 535], "ungapped_subsequ": [315, 382, 434, 490, 535], "unicod": [112, 127, 170], "unifi": 586, "uniform": [1, 655], "unifrac": [1, 78, 94, 105, 106, 108, 111, 768], "unimod": [763, 768], "union": [796, 820], "uniprotkb": 117, "uniq": [328, 394, 447, 504, 545], "uniqu": [1, 54, 58, 114, 118, 122, 123, 127, 128, 129, 265, 270, 328, 394, 447, 504, 545, 577, 599, 653, 759, 795, 822, 866, 875, 880], "unit": [1, 105, 120, 130, 547, 768, 770, 771, 930, 931, 994], "univers": [117, 118, 125, 127, 131], "unix": 129, "unknown": [47, 84, 85, 120, 191, 300, 370, 421, 475, 747, 829], "unknownaxiserror": [790, 792, 798, 799, 803, 810, 812, 813, 816, 817, 818, 819, 821, 822, 823, 831, 832, 842, 844], "unknowniderror": [813, 821], "unless": [16, 28, 53, 72, 126, 954], "unlik": [128, 747], "unmask": 16, "unnam": 988, "unnecessari": 54, "unobserv": 96, "unpack": 922, "unpack_by_func": 921, "unpair": 123, "unpermut": [649, 651, 652], "unread": 170, "unrecogn": [790, 792, 798, 803, 810, 812, 813, 818, 819, 821, 823, 842, 844], "unrecognizedformaterror": [162, 163, 164, 166, 167, 168], "unresolv": 111, "unroot": [78, 94, 105, 106, 123, 884, 908, 923, 924, 927], "unrooted_copi": [848, 849, 873, 876, 909, 924], "unrooted_deepcopi": [848, 849, 873, 876, 908, 909, 923], "unshar": 54, "unsign": [747, 898], "unsolv": 581, "unstabl": 111, "unsupport": [127, 397], "until": [201, 596, 910], "untouch": [803, 826], "untreat": 776, "unweight": [1, 94, 105, 106, 771], "unweighted_unifrac": [1, 106], "unwrit": 170, "unzip": 828, "up": [47, 67, 116, 125, 127, 128, 170, 201, 213, 506, 507, 551, 583, 590, 591, 593, 594, 595, 604, 627, 651, 747, 777, 795, 864, 869, 872, 903, 909, 976, 993], "upd": 94, "upd_": 94, "updat": [117, 118, 129, 201, 215, 509, 844], "updated_t": 844, "upon": 117, "upper": [16, 83, 84, 118, 125, 191, 201, 213, 215, 638, 645, 651, 817], "upper_bound": [73, 77, 84, 201, 213], "upper_quantil": 83, "uppercas": [275, 397, 450, 509], "upsk": 128, "uq": 83, "uracil": [117, 120, 330, 450, 502], "urinari": 777, "url": [55, 59, 162, 163, 164, 166, 167, 168, 170, 217, 219, 271, 274, 324, 333, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 805, 830, 839, 845, 904, 925], "urn": [84, 85], "us": [1, 2, 16, 28, 35, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 60, 61, 62, 72, 73, 74, 78, 79, 82, 83, 90, 93, 94, 97, 103, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 141, 142, 143, 159, 160, 163, 167, 170, 189, 190, 201, 213, 236, 237, 254, 255, 256, 268, 269, 273, 275, 293, 298, 310, 312, 315, 318, 325, 328, 331, 332, 334, 342, 343, 344, 345, 346, 363, 368, 378, 380, 382, 385, 392, 394, 397, 414, 419, 429, 431, 434, 437, 444, 447, 450, 468, 473, 485, 487, 490, 493, 500, 504, 506, 507, 509, 526, 528, 532, 533, 535, 538, 544, 545, 547, 551, 563, 575, 576, 578, 579, 580, 581, 586, 587, 588, 590, 591, 597, 599, 600, 604, 614, 623, 627, 638, 645, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 681, 692, 703, 725, 736, 748, 759, 762, 768, 772, 773, 774, 775, 776, 777, 795, 800, 801, 803, 826, 829, 831, 833, 834, 837, 839, 840, 847, 848, 849, 865, 867, 868, 869, 872, 873, 876, 878, 884, 885, 903, 908, 909, 916, 918, 923, 924, 926, 928, 929, 930, 931, 932, 953, 976, 990, 993, 994, 995], "usag": [92, 652], "useabl": 161, "usefulli": 926, "user": [1, 47, 104, 114, 127, 129, 130, 131, 141, 142, 143, 162, 164, 166, 168, 327, 393, 446, 503, 581, 586, 763, 768, 928, 990], "usrman": 117, "usual": [1, 101, 117, 120, 127, 129, 547, 867], "ut": 990, "uti": 777, "util": [1, 55, 59, 129, 141, 143, 217, 219, 271, 274, 324, 333, 334, 342, 343, 346, 391, 396, 443, 449, 499, 508, 543, 546, 568, 574, 617, 622, 642, 648, 760, 761, 805, 820, 828, 830, 833, 839, 845, 904, 925, 987, 988], "uu": 105, "uuagcucauu": 117, "uuauuguagc": 117, "uuauuuuuuu": 117, "uucuacucuu": 117, "uugagaauac": 117, "uuugaauuaa": 117, "uuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggguuuuccccaaaagggg": 334, "uuuuuuuuuuuuuuuuccccccccccccccccaaaaaaaaaaaaaaaagggggggggggggggg": 334, "v": [16, 105, 106, 220, 256, 275, 280, 289, 351, 360, 397, 402, 411, 450, 455, 464, 514, 523, 578, 592, 596, 598, 775, 776, 918], "v2": 113, "v_count": [105, 106], "vagin": 777, "vaginali": 777, "val": [397, 803], "val_i": 817, "val_j": 817, "valdar": 47, "valid": [60, 63, 78, 94, 103, 105, 106, 107, 108, 111, 118, 119, 123, 125, 256, 269, 275, 328, 346, 394, 397, 447, 450, 504, 545, 592, 598, 600, 623, 638, 779, 805, 829, 839, 990, 995], "valin": 397, "valu": [1, 3, 4, 7, 9, 10, 11, 18, 19, 21, 23, 24, 25, 34, 37, 39, 41, 47, 51, 60, 61, 62, 63, 64, 65, 67, 69, 80, 90, 102, 103, 106, 112, 114, 115, 117, 118, 119, 120, 121, 122, 127, 128, 132, 133, 135, 137, 138, 139, 145, 146, 148, 150, 151, 152, 170, 174, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 200, 205, 207, 208, 209, 212, 216, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 269, 270, 273, 275, 276, 281, 284, 286, 288, 292, 293, 310, 318, 325, 326, 336, 338, 339, 340, 347, 352, 355, 357, 359, 363, 378, 385, 392, 397, 398, 403, 406, 408, 410, 414, 429, 437, 444, 450, 451, 456, 459, 461, 463, 467, 468, 485, 493, 500, 501, 509, 510, 515, 518, 520, 522, 526, 532, 538, 544, 550, 553, 554, 555, 558, 573, 578, 581, 583, 586, 590, 591, 592, 593, 594, 595, 598, 603, 606, 607, 608, 611, 621, 626, 629, 630, 631, 634, 647, 649, 650, 651, 652, 653, 654, 655, 657, 660, 661, 663, 665, 666, 667, 671, 672, 674, 676, 677, 678, 680, 682, 683, 685, 687, 688, 689, 692, 693, 694, 696, 698, 699, 700, 704, 705, 707, 709, 710, 711, 713, 715, 716, 718, 720, 721, 722, 724, 726, 727, 729, 731, 732, 733, 737, 738, 740, 742, 743, 744, 747, 750, 751, 753, 755, 756, 757, 759, 762, 763, 767, 768, 770, 772, 773, 774, 775, 776, 777, 781, 784, 786, 787, 788, 789, 790, 795, 803, 804, 805, 809, 815, 816, 819, 823, 825, 826, 829, 833, 835, 836, 842, 844, 847, 850, 851, 854, 857, 859, 860, 867, 869, 872, 911, 918, 929, 930, 931, 935, 936, 939, 941, 942, 943, 944, 953, 955, 956, 958, 960, 961, 962, 965, 967, 968, 970, 972, 973, 974, 976, 978, 979, 981, 983, 984, 985, 995], "valueerror": [28, 45, 47, 48, 50, 54, 56, 58, 69, 78, 80, 94, 103, 105, 106, 107, 111, 162, 166, 183, 230, 248, 266, 270, 293, 294, 300, 302, 313, 316, 317, 319, 320, 321, 322, 328, 344, 346, 363, 364, 370, 372, 381, 383, 384, 386, 387, 388, 389, 394, 414, 415, 421, 423, 433, 435, 436, 438, 439, 440, 441, 447, 468, 469, 475, 477, 488, 491, 492, 494, 495, 496, 497, 504, 509, 526, 527, 530, 534, 536, 537, 539, 540, 541, 542, 545, 559, 562, 563, 576, 577, 583, 590, 591, 597, 614, 638, 650, 651, 653, 654, 692, 736, 747, 759, 762, 763, 776, 777, 778, 804, 805, 829, 835, 870, 872, 877, 885, 893, 895, 898, 910, 911, 916, 921, 932], "van": 596, "var": [650, 837], "vari": [1, 653, 773, 775, 776], "variabl": [80, 112, 325, 392, 444, 500, 509, 544, 581, 650, 653, 748, 749, 759, 763, 768, 769, 770, 773, 775, 776, 953, 976, 995], "varianc": [73, 265, 592, 598, 650, 652, 653, 748, 764, 767, 771, 776], "variant": [1, 78, 94, 126, 129, 547], "variat": [69, 651, 763], "varieti": 122, "variou": [1, 124, 256, 599, 749, 773, 991, 994], "vazquez": 759, "ve": [1, 118, 119, 777, 993], "vec": 774, "vector": [50, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 122, 295, 297, 300, 303, 315, 318, 320, 322, 323, 325, 328, 334, 365, 367, 370, 373, 382, 385, 387, 389, 390, 392, 394, 416, 418, 421, 424, 434, 437, 439, 441, 442, 444, 445, 447, 470, 472, 475, 478, 490, 493, 495, 497, 498, 500, 504, 535, 538, 540, 542, 544, 545, 551, 579, 580, 581, 586, 587, 588, 593, 594, 595, 598, 599, 600, 604, 623, 627, 649, 652, 653, 703, 763, 777, 778, 782, 795, 828, 832, 835, 842, 918], "vegan": [649, 650, 651, 652, 653, 762, 763, 770], "vellend": 94, "ver": 115, "verdonschot": 763, "veri": [1, 60, 61, 62, 83, 118, 123, 130, 593, 805, 872], "verifi": [117, 130, 162, 166], "versa": [123, 657, 826], "versatil": 748, "version": [1, 72, 73, 78, 94, 103, 105, 106, 107, 112, 114, 116, 117, 120, 121, 125, 142, 299, 327, 329, 369, 393, 395, 420, 446, 448, 474, 503, 505, 581, 596, 779, 800, 803, 805, 826, 835, 839, 841, 846, 861, 865, 928, 932, 990], "versu": [95, 99, 105, 106], "veschi": 80, "via": [45, 48, 56, 69, 84, 85, 118, 125, 298, 334, 335, 341, 368, 419, 473, 528, 649, 651, 652, 795, 835], "vice": [123, 657, 826], "viceroi": [69, 73], "view": [117, 828], "viewer": 867, "violat": 586, "viral": 128, "virgilio": 80, "viridiplanta": 117, "virol": 128, "viru": 128, "visit": 901, "visual": [1, 748, 759], "vlen": [805, 839], "vocabulari": [120, 121, 189, 190, 236, 237, 254, 255, 256, 273], "vol": 96, "volatil": 658, "volum": [76, 927], "vqhklrah": 128, "vrt": 129, "w": [16, 47, 69, 70, 77, 90, 94, 102, 114, 115, 116, 170, 275, 397, 450, 581, 596, 839, 841], "wa": [1, 60, 63, 69, 70, 71, 74, 77, 78, 80, 81, 82, 86, 87, 94, 95, 97, 98, 103, 105, 106, 107, 108, 116, 118, 119, 123, 125, 170, 185, 188, 189, 190, 232, 235, 236, 237, 250, 253, 254, 255, 272, 273, 315, 344, 382, 434, 490, 509, 535, 581, 592, 596, 598, 651, 703, 767, 775, 777, 863, 905, 926, 927, 988, 993, 995], "wai": [0, 1, 118, 119, 123, 125, 128, 130, 191, 269, 327, 393, 446, 503, 547, 581, 651, 768, 773, 795, 805, 839, 988, 993], "wakefield": 926, "walk": [923, 924, 993, 995], "walli": [581, 776, 777], "wan": [16, 66], "want": [60, 61, 62, 117, 120, 201, 773, 775, 776, 777, 871, 872, 988], "warn": [119, 127, 768, 869, 923, 928, 929, 987], "washington": [118, 123, 125, 926], "wasn": [28, 119], "water": 63, "waterman": [0, 16, 63, 64, 65, 66], "we": [0, 1, 16, 45, 47, 48, 78, 83, 90, 94, 105, 106, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 171, 191, 201, 302, 315, 325, 344, 372, 382, 392, 423, 434, 444, 477, 490, 500, 509, 530, 535, 544, 581, 586, 592, 598, 599, 649, 650, 651, 653, 654, 657, 658, 748, 759, 762, 770, 772, 773, 775, 776, 777, 792, 805, 835, 872, 926, 988, 993, 995], "weak": 275, "weaker": 657, "web": [16, 60, 63, 66, 116, 129, 649, 650, 651, 652, 653], "webfeat": 120, "webpag": 120, "websit": 47, "week": 777, "weight": [1, 78, 94, 105, 106, 123, 658, 659, 681, 692, 703, 725, 767, 771, 926], "weighted_unifrac": [1, 105], "welcom": 118, "well": [0, 119, 127, 130, 256, 509, 586, 599, 600, 650, 652, 653, 657, 749, 763, 805, 926, 988, 993, 994], "wellcom": 119, "were": [1, 62, 65, 78, 83, 103, 105, 106, 107, 123, 125, 126, 280, 315, 351, 382, 402, 434, 455, 490, 514, 535, 649, 651, 653, 759, 776, 777, 893, 895, 929, 995], "wf": [119, 995], "what": [1, 78, 94, 103, 105, 106, 107, 123, 127, 130, 131, 159, 160, 164, 168, 216, 315, 382, 434, 490, 535, 657, 747, 776, 792, 795, 805, 828, 839, 993, 995], "whatev": 130, "when": [1, 16, 45, 47, 48, 54, 57, 60, 61, 62, 69, 79, 94, 95, 99, 108, 111, 112, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 141, 142, 143, 162, 163, 164, 166, 167, 168, 170, 201, 213, 256, 265, 269, 293, 300, 301, 304, 305, 318, 363, 370, 371, 385, 414, 421, 422, 437, 468, 475, 476, 479, 480, 493, 509, 526, 529, 538, 576, 581, 599, 649, 651, 652, 653, 655, 657, 680, 713, 724, 762, 770, 773, 774, 775, 776, 777, 778, 779, 795, 805, 846, 872, 906, 923, 924, 927, 931, 932, 953, 988, 993, 995], "whenev": [119, 768], "where": [1, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 107, 108, 111, 112, 118, 122, 123, 124, 127, 128, 130, 268, 295, 297, 301, 303, 313, 315, 320, 322, 323, 325, 365, 367, 371, 373, 381, 382, 387, 389, 390, 392, 416, 418, 422, 424, 433, 434, 439, 441, 442, 444, 445, 470, 472, 476, 478, 488, 490, 495, 497, 498, 500, 529, 534, 535, 540, 542, 544, 547, 551, 579, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591, 593, 594, 595, 596, 604, 627, 651, 657, 747, 759, 767, 769, 770, 771, 773, 777, 778, 803, 805, 822, 834, 839, 844, 847, 871, 872, 882, 886, 919, 922, 951, 993, 995], "where_values_miss": [184, 231, 249], "wherea": [113, 747], "wherev": 771, "whether": [14, 29, 30, 33, 42, 51, 52, 72, 73, 94, 121, 130, 141, 143, 170, 174, 180, 189, 190, 221, 227, 236, 237, 239, 245, 254, 255, 257, 263, 273, 277, 280, 289, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 335, 341, 348, 351, 360, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 399, 402, 411, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 452, 455, 464, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 511, 514, 523, 531, 532, 533, 535, 536, 537, 556, 577, 581, 592, 598, 609, 632, 649, 651, 652, 653, 758, 770, 771, 802, 803, 805, 814, 839, 842], "which": [1, 28, 60, 61, 62, 69, 74, 78, 88, 94, 98, 101, 105, 106, 108, 114, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 141, 142, 143, 144, 156, 158, 159, 160, 161, 162, 166, 256, 275, 293, 294, 305, 313, 315, 318, 328, 344, 363, 364, 381, 382, 385, 394, 397, 414, 415, 433, 434, 437, 447, 450, 468, 469, 480, 488, 490, 493, 504, 509, 526, 527, 534, 535, 538, 545, 558, 578, 579, 580, 581, 586, 600, 611, 634, 649, 652, 653, 657, 763, 767, 768, 773, 774, 775, 776, 777, 793, 794, 795, 796, 800, 803, 819, 822, 823, 825, 831, 832, 836, 839, 841, 872, 875, 906, 907, 918, 919, 924, 926, 927, 937, 954, 976, 988, 990, 993, 995], "while": [0, 1, 112, 117, 118, 119, 120, 125, 191, 334, 509, 581, 653, 692, 736, 748, 759, 775, 779, 782, 846, 847, 875, 953, 989, 990, 995], "white": 117, "whitespac": [118, 119, 122, 124, 128], "whitnei": 581, "who": [123, 777], "whole": [128, 766, 774, 799, 819, 823, 825, 832, 836], "whose": [120, 126, 127, 566, 615, 639, 650, 651, 771, 798, 813, 821, 833], "why": 76, "wide": [1, 54, 94, 293, 363, 414, 468, 526], "width": [118, 122, 125], "wiener": [82, 97], "wiki": [118, 119, 125, 128, 927], "wikipedia": [118, 119, 128, 927, 993], "wilcoxon": 581, "wild": [327, 393, 446, 503], "wildcard": [327, 328, 393, 394, 446, 447, 503, 504, 545], "wildcard_char": [328, 394, 447, 504, 545], "wilei": 578, "william": 79, "window": 736, "window_s": 736, "wish": [127, 993], "with_mean": [767, 771], "with_replac": 835, "with_std": [767, 771], "within": [1, 47, 94, 102, 108, 112, 115, 118, 119, 123, 125, 127, 128, 256, 275, 397, 450, 509, 558, 586, 611, 634, 653, 654, 714, 748, 749, 759, 775, 776, 795, 824, 847, 889, 930, 933, 976, 993, 995], "within_captur": [329, 395, 448, 505], "without": [45, 48, 54, 56, 90, 106, 115, 123, 125, 127, 128, 188, 235, 253, 272, 509, 578, 747, 759, 777, 778, 800, 817, 835, 841, 878, 887, 919, 952, 953, 988], "wllllpppphhqqrrrriiimttttnnkkssrrvvvvaaaaddeegggg": 334, "woman": 777, "women": 777, "won": [1, 78, 103, 105, 106, 107, 119, 192, 763], "word": [0, 117, 118, 120, 123, 128, 216, 317, 384, 436, 492, 537], "work": [1, 16, 108, 118, 125, 127, 130, 256, 275, 397, 450, 599, 651, 763, 777, 811, 820, 987, 989, 990, 992, 993], "workflow": 987, "worri": [123, 779, 846], "worst": 900, "would": [47, 78, 80, 83, 105, 106, 116, 118, 121, 123, 125, 127, 128, 130, 256, 293, 315, 363, 382, 414, 434, 468, 490, 526, 535, 558, 593, 596, 611, 634, 657, 775, 776, 869, 919, 920, 926, 988], "wprintgc": [334, 342, 343], "wr": [118, 657], "wrap": [2, 125, 128, 977], "wrapper": [16, 66, 84, 85, 930], "writabl": 170, "write": [55, 113, 116, 117, 119, 121, 122, 123, 125, 128, 130, 143, 160, 161, 170, 217, 271, 324, 391, 443, 499, 543, 568, 599, 617, 642, 680, 713, 724, 760, 830, 839, 840, 841, 861, 904, 932, 987], "writeabl": 988, "writer": [59, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 158, 161, 164, 168, 170, 219, 274, 333, 396, 449, 508, 546, 574, 622, 648, 761, 845, 925], "written": [116, 118, 119, 123, 125, 256, 800, 840, 841, 926, 988, 993], "wrong": 88, "wu": [94, 106], "wu_dm": 1, "wu_pc": 1, "wunsch": [0, 60, 61, 62], "www": [16, 60, 63, 66, 83, 108, 112, 114, 115, 116, 117, 118, 119, 120, 125, 129, 334, 342, 343, 650], "x": [16, 80, 96, 113, 119, 126, 328, 346, 394, 397, 447, 504, 545, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 593, 594, 595, 596, 598, 651, 654, 657, 748, 749, 759, 762, 763, 764, 770, 773, 776, 777, 795, 803, 807, 816, 821, 826, 831, 833, 837, 839, 841, 842, 846, 872, 882, 903, 906, 918, 922, 927, 952, 995], "x00": 171, "x01": 171, "x03": 171, "x0c": 171, "x108": 171, "x1c": 171, "x56734": 117, "x86": 171, "x89": 171, "x8b": 171, "x9ah3m": 171, "x9c": 171, "x_": [578, 579, 596, 773, 777], "x_1": [579, 580, 584, 585, 593, 594, 595], "x_d": [579, 580, 584, 585, 593, 594, 595], "x_i": [580, 584, 589, 593, 594, 595, 596], "x_j": 589, "xa6": 171, "xaa": 397, "xb7": 171, "xb9": 171, "xc1": 171, "xc4": 171, "xle": 397, "xx": 117, "xxxxxx": 346, "xyz": 116, "y": [16, 69, 80, 119, 126, 275, 397, 450, 589, 593, 594, 598, 651, 654, 657, 748, 759, 763, 764, 769, 770, 775, 821, 831, 839, 841, 842, 872, 918], "y_": [580, 777], "y_1": [580, 593, 594], "y_2": 580, "y_d": [593, 594], "y_i": 589, "y_j": 589, "yang": 69, "ye": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "yeast": [331, 506], "yeild": 653, "yellow": 128, "yet": [123, 129, 130], "yield": [38, 43, 53, 118, 216, 285, 290, 299, 300, 301, 315, 316, 332, 345, 356, 361, 369, 370, 371, 382, 383, 407, 412, 420, 421, 422, 434, 435, 460, 465, 474, 475, 476, 490, 491, 507, 519, 524, 529, 535, 536, 653, 815, 816, 817, 824, 828, 882, 894, 897, 900, 901, 902, 911, 917, 919, 920, 954, 988, 995], "york": 71, "you": [1, 16, 60, 61, 62, 78, 103, 105, 106, 107, 108, 114, 116, 118, 119, 121, 125, 127, 128, 130, 200, 201, 213, 215, 216, 275, 397, 450, 509, 547, 638, 649, 653, 770, 773, 775, 776, 777, 834, 869, 871, 872, 988, 990, 993, 995], "your": [16, 54, 78, 103, 105, 106, 107, 119, 127, 130, 201, 653, 773, 776, 988, 993, 995], "yy": 119, "z": [16, 54, 77, 127, 397, 654, 759, 815, 872, 918], "z3": [809, 815], "zero": [69, 79, 111, 112, 191, 212, 256, 270, 302, 372, 423, 477, 530, 578, 581, 583, 586, 590, 591, 592, 593, 594, 595, 598, 600, 649, 650, 651, 652, 653, 654, 657, 762, 768, 771, 776, 778, 779, 805, 832, 835, 839, 842, 927, 995], "zero_index": [16, 66], "zhao": [16, 66], "zip": 799, "zp_02903423": 114, "zscore": 73, "zxx": 119, "\u00e9": 596, "\u00f8": 94}, "titles": ["Sequence Alignments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.alignment</span></code>)", "Community Diversity (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity</span></code>)", "skbio.alignment.AlignmentStructure", "skbio.alignment.AlignmentStructure.__eq__", "skbio.alignment.AlignmentStructure.__ge__", "skbio.alignment.AlignmentStructure.__getitem__", "skbio.alignment.AlignmentStructure.__getstate__", "skbio.alignment.AlignmentStructure.__gt__", "skbio.alignment.AlignmentStructure.__hash__", "skbio.alignment.AlignmentStructure.__le__", "skbio.alignment.AlignmentStructure.__lt__", "skbio.alignment.AlignmentStructure.__ne__", "skbio.alignment.AlignmentStructure.__setstate__", "skbio.alignment.AlignmentStructure.__str__", "skbio.alignment.AlignmentStructure.is_zero_based", "skbio.alignment.AlignmentStructure.set_zero_based", "skbio.alignment.StripedSmithWaterman", "skbio.alignment.StripedSmithWaterman.__call__", "skbio.alignment.StripedSmithWaterman.__eq__", "skbio.alignment.StripedSmithWaterman.__ge__", "skbio.alignment.StripedSmithWaterman.__getstate__", "skbio.alignment.StripedSmithWaterman.__gt__", "skbio.alignment.StripedSmithWaterman.__hash__", "skbio.alignment.StripedSmithWaterman.__le__", "skbio.alignment.StripedSmithWaterman.__lt__", "skbio.alignment.StripedSmithWaterman.__ne__", "skbio.alignment.StripedSmithWaterman.__setstate__", "skbio.alignment.StripedSmithWaterman.__str__", "skbio.alignment.TabularMSA", "skbio.alignment.TabularMSA.__bool__", "skbio.alignment.TabularMSA.__contains__", "skbio.alignment.TabularMSA.__copy__", "skbio.alignment.TabularMSA.__deepcopy__", "skbio.alignment.TabularMSA.__eq__", "skbio.alignment.TabularMSA.__ge__", "skbio.alignment.TabularMSA.__getitem__", "skbio.alignment.TabularMSA.__getstate__", "skbio.alignment.TabularMSA.__gt__", "skbio.alignment.TabularMSA.__iter__", "skbio.alignment.TabularMSA.__le__", "skbio.alignment.TabularMSA.__len__", "skbio.alignment.TabularMSA.__lt__", "skbio.alignment.TabularMSA.__ne__", "skbio.alignment.TabularMSA.__reversed__", "skbio.alignment.TabularMSA.__str__", "skbio.alignment.TabularMSA.append", "skbio.alignment.TabularMSA.consensus", "skbio.alignment.TabularMSA.conservation", "skbio.alignment.TabularMSA.extend", "skbio.alignment.TabularMSA.from_dict", "skbio.alignment.TabularMSA.gap_frequencies", "skbio.alignment.TabularMSA.has_metadata", "skbio.alignment.TabularMSA.has_positional_metadata", "skbio.alignment.TabularMSA.iter_positions", "skbio.alignment.TabularMSA.join", "skbio.alignment.TabularMSA.read", "skbio.alignment.TabularMSA.reassign_index", "skbio.alignment.TabularMSA.sort", "skbio.alignment.TabularMSA.to_dict", "skbio.alignment.TabularMSA.write", "skbio.alignment.global_pairwise_align", "skbio.alignment.global_pairwise_align_nucleotide", "skbio.alignment.global_pairwise_align_protein", "skbio.alignment.local_pairwise_align", "skbio.alignment.local_pairwise_align_nucleotide", "skbio.alignment.local_pairwise_align_protein", "skbio.alignment.local_pairwise_align_ssw", "skbio.alignment.make_identity_substitution_matrix", "Alpha diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.alpha</span></code>)", "skbio.diversity.alpha.ace", "skbio.diversity.alpha.berger_parker_d", "skbio.diversity.alpha.brillouin_d", "skbio.diversity.alpha.chao1", "skbio.diversity.alpha.chao1_ci", "skbio.diversity.alpha.dominance", "skbio.diversity.alpha.doubles", "skbio.diversity.alpha.enspie", "skbio.diversity.alpha.esty_ci", "skbio.diversity.alpha.faith_pd", "skbio.diversity.alpha.fisher_alpha", "skbio.diversity.alpha.gini_index", "skbio.diversity.alpha.goods_coverage", "skbio.diversity.alpha.heip_e", "skbio.diversity.alpha.kempton_taylor_q", "skbio.diversity.alpha.lladser_ci", "skbio.diversity.alpha.lladser_pe", "skbio.diversity.alpha.margalef", "skbio.diversity.alpha.mcintosh_d", "skbio.diversity.alpha.mcintosh_e", "skbio.diversity.alpha.menhinick", "skbio.diversity.alpha.michaelis_menten_fit", "skbio.diversity.alpha.observed_features", "skbio.diversity.alpha.observed_otus", "skbio.diversity.alpha.osd", "skbio.diversity.alpha.phydiv", "skbio.diversity.alpha.pielou_e", "skbio.diversity.alpha.robbins", "skbio.diversity.alpha.shannon", "skbio.diversity.alpha.simpson", "skbio.diversity.alpha.simpson_e", "skbio.diversity.alpha.singles", "skbio.diversity.alpha.sobs", "skbio.diversity.alpha.strong", "skbio.diversity.alpha_diversity", "Beta diversity measures (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.diversity.beta</span></code>)", "skbio.diversity.beta.unweighted_unifrac", "skbio.diversity.beta.weighted_unifrac", "skbio.diversity.beta_diversity", "skbio.diversity.block_beta_diversity", "skbio.diversity.get_alpha_diversity_metrics", "skbio.diversity.get_beta_diversity_metrics", "skbio.diversity.partial_beta_diversity", "Simple binary dissimilarity matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.binary_dm</span></code>)", "BIOM-Format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.biom</span></code>)", "BLAST+6 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast6</span></code>)", "BLAST+7 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.blast7</span></code>)", "Clustal format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.clustal</span></code>)", "EMBL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.embl</span></code>)", "FASTA/QUAL format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fasta</span></code>)", "FASTQ format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.fastq</span></code>)", "GenBank format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.genbank</span></code>)", "GFF3 format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.gff3</span></code>)", "Labeled square matrix format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.lsmat</span></code>)", "Newick format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.newick</span></code>)", "Ordination results format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.ordination</span></code>)", "PHYLIP multiple sequence alignment format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.phylip</span></code>)", "QSeq format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.qseq</span></code>)", "Format Support", "Stockholm format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.stockholm</span></code>)", "Taxdump format (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.format.taxdump</span></code>)", "I/O Registry (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.registry</span></code>)", "skbio.io.registry.Format", "skbio.io.registry.Format.__eq__", "skbio.io.registry.Format.__ge__", "skbio.io.registry.Format.__getstate__", "skbio.io.registry.Format.__gt__", "skbio.io.registry.Format.__hash__", "skbio.io.registry.Format.__le__", "skbio.io.registry.Format.__lt__", "skbio.io.registry.Format.__ne__", "skbio.io.registry.Format.__str__", "skbio.io.registry.Format.reader", "skbio.io.registry.Format.sniffer", "skbio.io.registry.Format.writer", "skbio.io.registry.IORegistry", "skbio.io.registry.IORegistry.__eq__", "skbio.io.registry.IORegistry.__ge__", "skbio.io.registry.IORegistry.__getstate__", "skbio.io.registry.IORegistry.__gt__", "skbio.io.registry.IORegistry.__hash__", "skbio.io.registry.IORegistry.__le__", "skbio.io.registry.IORegistry.__lt__", "skbio.io.registry.IORegistry.__ne__", "skbio.io.registry.IORegistry.__str__", "skbio.io.registry.IORegistry.add_format", "skbio.io.registry.IORegistry.create_format", "skbio.io.registry.IORegistry.get_reader", "skbio.io.registry.IORegistry.get_sniffer", "skbio.io.registry.IORegistry.get_writer", "skbio.io.registry.IORegistry.list_read_formats", "skbio.io.registry.IORegistry.list_write_formats", "skbio.io.registry.IORegistry.monkey_patch", "skbio.io.registry.IORegistry.read", "skbio.io.registry.IORegistry.sniff", "skbio.io.registry.IORegistry.write", "skbio.io.registry.create_format", "skbio.io.registry.read", "skbio.io.registry.sniff", "skbio.io.registry.write", "I/O utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io.util</span></code>)", "skbio.io.util.open", "skbio.io.util.open_file", "skbio.io.util.open_files", "skbio.metadata.CategoricalMetadataColumn", "skbio.metadata.CategoricalMetadataColumn.__eq__", "skbio.metadata.CategoricalMetadataColumn.__ge__", "skbio.metadata.CategoricalMetadataColumn.__getstate__", "skbio.metadata.CategoricalMetadataColumn.__gt__", "skbio.metadata.CategoricalMetadataColumn.__le__", "skbio.metadata.CategoricalMetadataColumn.__lt__", "skbio.metadata.CategoricalMetadataColumn.__ne__", "skbio.metadata.CategoricalMetadataColumn.__str__", "skbio.metadata.CategoricalMetadataColumn.drop_missing_values", "skbio.metadata.CategoricalMetadataColumn.filter_ids", "skbio.metadata.CategoricalMetadataColumn.get_ids", "skbio.metadata.CategoricalMetadataColumn.get_missing", "skbio.metadata.CategoricalMetadataColumn.get_value", "skbio.metadata.CategoricalMetadataColumn.has_missing_values", "skbio.metadata.CategoricalMetadataColumn.save", "skbio.metadata.CategoricalMetadataColumn.to_dataframe", "skbio.metadata.CategoricalMetadataColumn.to_series", "skbio.metadata.Interval", "skbio.metadata.Interval.__eq__", "skbio.metadata.Interval.__ge__", "skbio.metadata.Interval.__getstate__", "skbio.metadata.Interval.__gt__", "skbio.metadata.Interval.__le__", "skbio.metadata.Interval.__lt__", "skbio.metadata.Interval.__ne__", "skbio.metadata.Interval.__str__", "skbio.metadata.Interval.drop", "skbio.metadata.IntervalMetadata", "skbio.metadata.IntervalMetadata.__copy__", "skbio.metadata.IntervalMetadata.__deepcopy__", "skbio.metadata.IntervalMetadata.__eq__", "skbio.metadata.IntervalMetadata.__ge__", "skbio.metadata.IntervalMetadata.__getstate__", "skbio.metadata.IntervalMetadata.__gt__", "skbio.metadata.IntervalMetadata.__le__", "skbio.metadata.IntervalMetadata.__lt__", "skbio.metadata.IntervalMetadata.__ne__", "skbio.metadata.IntervalMetadata.__str__", "skbio.metadata.IntervalMetadata.add", "skbio.metadata.IntervalMetadata.concat", "skbio.metadata.IntervalMetadata.drop", "skbio.metadata.IntervalMetadata.merge", "skbio.metadata.IntervalMetadata.query", "skbio.metadata.IntervalMetadata.read", "skbio.metadata.IntervalMetadata.sort", "skbio.metadata.IntervalMetadata.write", "skbio.metadata.MetadataColumn", "skbio.metadata.MetadataColumn.__eq__", "skbio.metadata.MetadataColumn.__ge__", "skbio.metadata.MetadataColumn.__getstate__", "skbio.metadata.MetadataColumn.__gt__", "skbio.metadata.MetadataColumn.__le__", "skbio.metadata.MetadataColumn.__lt__", "skbio.metadata.MetadataColumn.__ne__", "skbio.metadata.MetadataColumn.__str__", "skbio.metadata.MetadataColumn.drop_missing_values", "skbio.metadata.MetadataColumn.filter_ids", "skbio.metadata.MetadataColumn.get_ids", "skbio.metadata.MetadataColumn.get_missing", "skbio.metadata.MetadataColumn.get_value", "skbio.metadata.MetadataColumn.has_missing_values", "skbio.metadata.MetadataColumn.save", "skbio.metadata.MetadataColumn.to_dataframe", "skbio.metadata.MetadataColumn.to_series", "skbio.metadata.NumericMetadataColumn", "skbio.metadata.NumericMetadataColumn.__eq__", "skbio.metadata.NumericMetadataColumn.__ge__", "skbio.metadata.NumericMetadataColumn.__getstate__", "skbio.metadata.NumericMetadataColumn.__gt__", "skbio.metadata.NumericMetadataColumn.__le__", "skbio.metadata.NumericMetadataColumn.__lt__", "skbio.metadata.NumericMetadataColumn.__ne__", "skbio.metadata.NumericMetadataColumn.__str__", "skbio.metadata.NumericMetadataColumn.drop_missing_values", "skbio.metadata.NumericMetadataColumn.filter_ids", "skbio.metadata.NumericMetadataColumn.get_ids", "skbio.metadata.NumericMetadataColumn.get_missing", "skbio.metadata.NumericMetadataColumn.get_value", "skbio.metadata.NumericMetadataColumn.has_missing_values", "skbio.metadata.NumericMetadataColumn.save", "skbio.metadata.NumericMetadataColumn.to_dataframe", "skbio.metadata.NumericMetadataColumn.to_series", "skbio.metadata.SampleMetadata", "skbio.metadata.SampleMetadata.__eq__", "skbio.metadata.SampleMetadata.__ge__", "skbio.metadata.SampleMetadata.__getstate__", "skbio.metadata.SampleMetadata.__gt__", "skbio.metadata.SampleMetadata.__le__", "skbio.metadata.SampleMetadata.__lt__", "skbio.metadata.SampleMetadata.__ne__", "skbio.metadata.SampleMetadata.__str__", "skbio.metadata.SampleMetadata.filter_columns", "skbio.metadata.SampleMetadata.filter_ids", "skbio.metadata.SampleMetadata.get_column", "skbio.metadata.SampleMetadata.get_ids", "skbio.metadata.SampleMetadata.load", "skbio.metadata.SampleMetadata.merge", "skbio.metadata.SampleMetadata.read", "skbio.metadata.SampleMetadata.save", "skbio.metadata.SampleMetadata.to_dataframe", "skbio.metadata.SampleMetadata.write", "skbio.sequence.DNA", "skbio.sequence.DNA.__bool__", "skbio.sequence.DNA.__contains__", "skbio.sequence.DNA.__copy__", "skbio.sequence.DNA.__deepcopy__", "skbio.sequence.DNA.__eq__", "skbio.sequence.DNA.__ge__", "skbio.sequence.DNA.__getitem__", "skbio.sequence.DNA.__getstate__", "skbio.sequence.DNA.__gt__", "skbio.sequence.DNA.__iter__", "skbio.sequence.DNA.__le__", "skbio.sequence.DNA.__len__", "skbio.sequence.DNA.__lt__", "skbio.sequence.DNA.__ne__", "skbio.sequence.DNA.__reversed__", "skbio.sequence.DNA.__str__", "skbio.sequence.DNA.complement", "skbio.sequence.DNA.concat", "skbio.sequence.DNA.count", "skbio.sequence.DNA.definites", "skbio.sequence.DNA.degap", "skbio.sequence.DNA.degenerates", "skbio.sequence.DNA.distance", "skbio.sequence.DNA.expand_degenerates", "skbio.sequence.DNA.find_motifs", "skbio.sequence.DNA.find_with_regex", "skbio.sequence.DNA.frequencies", "skbio.sequence.DNA.gaps", "skbio.sequence.DNA.gc_content", "skbio.sequence.DNA.gc_frequency", "skbio.sequence.DNA.has_definites", "skbio.sequence.DNA.has_degenerates", "skbio.sequence.DNA.has_gaps", "skbio.sequence.DNA.has_interval_metadata", "skbio.sequence.DNA.has_metadata", "skbio.sequence.DNA.has_nondegenerates", "skbio.sequence.DNA.has_positional_metadata", "skbio.sequence.DNA.index", "skbio.sequence.DNA.is_reverse_complement", "skbio.sequence.DNA.iter_contiguous", "skbio.sequence.DNA.iter_kmers", "skbio.sequence.DNA.kmer_frequencies", "skbio.sequence.DNA.lowercase", "skbio.sequence.DNA.match_frequency", "skbio.sequence.DNA.matches", "skbio.sequence.DNA.mismatch_frequency", "skbio.sequence.DNA.mismatches", "skbio.sequence.DNA.nondegenerates", "skbio.sequence.DNA.read", "skbio.sequence.DNA.replace", "skbio.sequence.DNA.reverse_complement", "skbio.sequence.DNA.to_definites", "skbio.sequence.DNA.to_indices", "skbio.sequence.DNA.to_regex", "skbio.sequence.DNA.transcribe", "skbio.sequence.DNA.translate", "skbio.sequence.DNA.translate_six_frames", "skbio.sequence.DNA.write", "skbio.sequence.GeneticCode", "skbio.sequence.GeneticCode.__eq__", "skbio.sequence.GeneticCode.__ge__", "skbio.sequence.GeneticCode.__getstate__", "skbio.sequence.GeneticCode.__gt__", "skbio.sequence.GeneticCode.__le__", "skbio.sequence.GeneticCode.__lt__", "skbio.sequence.GeneticCode.__ne__", "skbio.sequence.GeneticCode.__str__", "skbio.sequence.GeneticCode.from_ncbi", "skbio.sequence.GeneticCode.translate", "skbio.sequence.GeneticCode.translate_six_frames", "skbio.sequence.GrammaredSequence", "skbio.sequence.GrammaredSequence.__bool__", "skbio.sequence.GrammaredSequence.__contains__", "skbio.sequence.GrammaredSequence.__copy__", "skbio.sequence.GrammaredSequence.__deepcopy__", "skbio.sequence.GrammaredSequence.__eq__", "skbio.sequence.GrammaredSequence.__ge__", "skbio.sequence.GrammaredSequence.__getitem__", "skbio.sequence.GrammaredSequence.__getstate__", "skbio.sequence.GrammaredSequence.__gt__", "skbio.sequence.GrammaredSequence.__iter__", "skbio.sequence.GrammaredSequence.__le__", "skbio.sequence.GrammaredSequence.__len__", "skbio.sequence.GrammaredSequence.__lt__", "skbio.sequence.GrammaredSequence.__ne__", "skbio.sequence.GrammaredSequence.__reversed__", "skbio.sequence.GrammaredSequence.__str__", "skbio.sequence.GrammaredSequence.concat", "skbio.sequence.GrammaredSequence.count", "skbio.sequence.GrammaredSequence.definites", "skbio.sequence.GrammaredSequence.degap", "skbio.sequence.GrammaredSequence.degenerates", "skbio.sequence.GrammaredSequence.distance", "skbio.sequence.GrammaredSequence.expand_degenerates", "skbio.sequence.GrammaredSequence.find_motifs", "skbio.sequence.GrammaredSequence.find_with_regex", "skbio.sequence.GrammaredSequence.frequencies", "skbio.sequence.GrammaredSequence.gaps", "skbio.sequence.GrammaredSequence.has_definites", "skbio.sequence.GrammaredSequence.has_degenerates", "skbio.sequence.GrammaredSequence.has_gaps", "skbio.sequence.GrammaredSequence.has_interval_metadata", "skbio.sequence.GrammaredSequence.has_metadata", "skbio.sequence.GrammaredSequence.has_nondegenerates", "skbio.sequence.GrammaredSequence.has_positional_metadata", "skbio.sequence.GrammaredSequence.index", "skbio.sequence.GrammaredSequence.iter_contiguous", "skbio.sequence.GrammaredSequence.iter_kmers", "skbio.sequence.GrammaredSequence.kmer_frequencies", "skbio.sequence.GrammaredSequence.lowercase", "skbio.sequence.GrammaredSequence.match_frequency", "skbio.sequence.GrammaredSequence.matches", "skbio.sequence.GrammaredSequence.mismatch_frequency", "skbio.sequence.GrammaredSequence.mismatches", "skbio.sequence.GrammaredSequence.nondegenerates", "skbio.sequence.GrammaredSequence.read", "skbio.sequence.GrammaredSequence.replace", "skbio.sequence.GrammaredSequence.to_definites", "skbio.sequence.GrammaredSequence.to_indices", "skbio.sequence.GrammaredSequence.to_regex", "skbio.sequence.GrammaredSequence.write", "skbio.sequence.Protein", "skbio.sequence.Protein.__bool__", "skbio.sequence.Protein.__contains__", "skbio.sequence.Protein.__copy__", "skbio.sequence.Protein.__deepcopy__", "skbio.sequence.Protein.__eq__", "skbio.sequence.Protein.__ge__", "skbio.sequence.Protein.__getitem__", "skbio.sequence.Protein.__getstate__", "skbio.sequence.Protein.__gt__", "skbio.sequence.Protein.__iter__", "skbio.sequence.Protein.__le__", "skbio.sequence.Protein.__len__", "skbio.sequence.Protein.__lt__", "skbio.sequence.Protein.__ne__", "skbio.sequence.Protein.__reversed__", "skbio.sequence.Protein.__str__", "skbio.sequence.Protein.concat", "skbio.sequence.Protein.count", "skbio.sequence.Protein.definites", "skbio.sequence.Protein.degap", "skbio.sequence.Protein.degenerates", "skbio.sequence.Protein.distance", "skbio.sequence.Protein.expand_degenerates", "skbio.sequence.Protein.find_motifs", "skbio.sequence.Protein.find_with_regex", "skbio.sequence.Protein.frequencies", "skbio.sequence.Protein.gaps", "skbio.sequence.Protein.has_definites", "skbio.sequence.Protein.has_degenerates", "skbio.sequence.Protein.has_gaps", "skbio.sequence.Protein.has_interval_metadata", "skbio.sequence.Protein.has_metadata", "skbio.sequence.Protein.has_nondegenerates", "skbio.sequence.Protein.has_positional_metadata", "skbio.sequence.Protein.has_stops", "skbio.sequence.Protein.index", "skbio.sequence.Protein.iter_contiguous", "skbio.sequence.Protein.iter_kmers", "skbio.sequence.Protein.kmer_frequencies", "skbio.sequence.Protein.lowercase", "skbio.sequence.Protein.match_frequency", "skbio.sequence.Protein.matches", "skbio.sequence.Protein.mismatch_frequency", "skbio.sequence.Protein.mismatches", "skbio.sequence.Protein.nondegenerates", "skbio.sequence.Protein.read", "skbio.sequence.Protein.replace", "skbio.sequence.Protein.stops", "skbio.sequence.Protein.to_definites", "skbio.sequence.Protein.to_indices", "skbio.sequence.Protein.to_regex", "skbio.sequence.Protein.write", "skbio.sequence.RNA", "skbio.sequence.RNA.__bool__", "skbio.sequence.RNA.__contains__", "skbio.sequence.RNA.__copy__", "skbio.sequence.RNA.__deepcopy__", "skbio.sequence.RNA.__eq__", "skbio.sequence.RNA.__ge__", "skbio.sequence.RNA.__getitem__", "skbio.sequence.RNA.__getstate__", "skbio.sequence.RNA.__gt__", "skbio.sequence.RNA.__iter__", "skbio.sequence.RNA.__le__", "skbio.sequence.RNA.__len__", "skbio.sequence.RNA.__lt__", "skbio.sequence.RNA.__ne__", "skbio.sequence.RNA.__reversed__", "skbio.sequence.RNA.__str__", "skbio.sequence.RNA.complement", "skbio.sequence.RNA.concat", "skbio.sequence.RNA.count", "skbio.sequence.RNA.definites", "skbio.sequence.RNA.degap", "skbio.sequence.RNA.degenerates", "skbio.sequence.RNA.distance", "skbio.sequence.RNA.expand_degenerates", "skbio.sequence.RNA.find_motifs", "skbio.sequence.RNA.find_with_regex", "skbio.sequence.RNA.frequencies", "skbio.sequence.RNA.gaps", "skbio.sequence.RNA.gc_content", "skbio.sequence.RNA.gc_frequency", "skbio.sequence.RNA.has_definites", "skbio.sequence.RNA.has_degenerates", "skbio.sequence.RNA.has_gaps", "skbio.sequence.RNA.has_interval_metadata", "skbio.sequence.RNA.has_metadata", "skbio.sequence.RNA.has_nondegenerates", "skbio.sequence.RNA.has_positional_metadata", "skbio.sequence.RNA.index", "skbio.sequence.RNA.is_reverse_complement", "skbio.sequence.RNA.iter_contiguous", "skbio.sequence.RNA.iter_kmers", "skbio.sequence.RNA.kmer_frequencies", "skbio.sequence.RNA.lowercase", "skbio.sequence.RNA.match_frequency", "skbio.sequence.RNA.matches", "skbio.sequence.RNA.mismatch_frequency", "skbio.sequence.RNA.mismatches", "skbio.sequence.RNA.nondegenerates", "skbio.sequence.RNA.read", "skbio.sequence.RNA.replace", "skbio.sequence.RNA.reverse_complement", "skbio.sequence.RNA.reverse_transcribe", "skbio.sequence.RNA.to_definites", "skbio.sequence.RNA.to_indices", "skbio.sequence.RNA.to_regex", "skbio.sequence.RNA.translate", "skbio.sequence.RNA.translate_six_frames", "skbio.sequence.RNA.write", "skbio.sequence.Sequence", "skbio.sequence.Sequence.__bool__", "skbio.sequence.Sequence.__contains__", "skbio.sequence.Sequence.__copy__", "skbio.sequence.Sequence.__deepcopy__", "skbio.sequence.Sequence.__eq__", "skbio.sequence.Sequence.__ge__", "skbio.sequence.Sequence.__getitem__", "skbio.sequence.Sequence.__getstate__", "skbio.sequence.Sequence.__gt__", "skbio.sequence.Sequence.__iter__", "skbio.sequence.Sequence.__le__", "skbio.sequence.Sequence.__len__", "skbio.sequence.Sequence.__lt__", "skbio.sequence.Sequence.__ne__", "skbio.sequence.Sequence.__reversed__", "skbio.sequence.Sequence.__str__", "skbio.sequence.Sequence.concat", "skbio.sequence.Sequence.count", "skbio.sequence.Sequence.distance", "skbio.sequence.Sequence.find_with_regex", "skbio.sequence.Sequence.frequencies", "skbio.sequence.Sequence.has_interval_metadata", "skbio.sequence.Sequence.has_metadata", "skbio.sequence.Sequence.has_positional_metadata", "skbio.sequence.Sequence.index", "skbio.sequence.Sequence.iter_contiguous", "skbio.sequence.Sequence.iter_kmers", "skbio.sequence.Sequence.kmer_frequencies", "skbio.sequence.Sequence.lowercase", "skbio.sequence.Sequence.match_frequency", "skbio.sequence.Sequence.matches", "skbio.sequence.Sequence.mismatch_frequency", "skbio.sequence.Sequence.mismatches", "skbio.sequence.Sequence.read", "skbio.sequence.Sequence.replace", "skbio.sequence.Sequence.to_indices", "skbio.sequence.Sequence.write", "skbio.sequence.SubstitutionMatrix", "skbio.sequence.SubstitutionMatrix.__contains__", "skbio.sequence.SubstitutionMatrix.__eq__", "skbio.sequence.SubstitutionMatrix.__ge__", "skbio.sequence.SubstitutionMatrix.__getitem__", "skbio.sequence.SubstitutionMatrix.__getstate__", "skbio.sequence.SubstitutionMatrix.__gt__", "skbio.sequence.SubstitutionMatrix.__le__", "skbio.sequence.SubstitutionMatrix.__lt__", "skbio.sequence.SubstitutionMatrix.__ne__", "skbio.sequence.SubstitutionMatrix.__str__", "skbio.sequence.SubstitutionMatrix.between", "skbio.sequence.SubstitutionMatrix.by_name", "skbio.sequence.SubstitutionMatrix.copy", "skbio.sequence.SubstitutionMatrix.filter", "skbio.sequence.SubstitutionMatrix.from_dict", "skbio.sequence.SubstitutionMatrix.from_iterable", "skbio.sequence.SubstitutionMatrix.get_names", "skbio.sequence.SubstitutionMatrix.identity", "skbio.sequence.SubstitutionMatrix.index", "skbio.sequence.SubstitutionMatrix.plot", "skbio.sequence.SubstitutionMatrix.read", "skbio.sequence.SubstitutionMatrix.redundant_form", "skbio.sequence.SubstitutionMatrix.to_data_frame", "skbio.sequence.SubstitutionMatrix.to_dict", "skbio.sequence.SubstitutionMatrix.transpose", "skbio.sequence.SubstitutionMatrix.within", "skbio.sequence.SubstitutionMatrix.write", "Sequence distance metrics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence.distance</span></code>)", "skbio.sequence.distance.hamming", "skbio.sequence.distance.kmer_distance", "Composition Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.composition</span></code>)", "skbio.stats.composition.alr", "skbio.stats.composition.alr_inv", "skbio.stats.composition.ancom", "skbio.stats.composition.centralize", "skbio.stats.composition.closure", "skbio.stats.composition.clr", "skbio.stats.composition.clr_inv", "skbio.stats.composition.dirmult_ttest", "skbio.stats.composition.ilr", "skbio.stats.composition.ilr_inv", "skbio.stats.composition.inner", "skbio.stats.composition.multi_replace", "skbio.stats.composition.multiplicative_replacement", "skbio.stats.composition.pairwise_vlr", "skbio.stats.composition.perturb", "skbio.stats.composition.perturb_inv", "skbio.stats.composition.power", "skbio.stats.composition.sbp_basis", "skbio.stats.composition.tree_basis", "skbio.stats.composition.vlr", "Distance matrix-based statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.distance</span></code>)", "skbio.stats.distance.DissimilarityMatrix", "skbio.stats.distance.DissimilarityMatrix.__contains__", "skbio.stats.distance.DissimilarityMatrix.__eq__", "skbio.stats.distance.DissimilarityMatrix.__ge__", "skbio.stats.distance.DissimilarityMatrix.__getitem__", "skbio.stats.distance.DissimilarityMatrix.__getstate__", "skbio.stats.distance.DissimilarityMatrix.__gt__", "skbio.stats.distance.DissimilarityMatrix.__le__", "skbio.stats.distance.DissimilarityMatrix.__lt__", "skbio.stats.distance.DissimilarityMatrix.__ne__", "skbio.stats.distance.DissimilarityMatrix.__str__", "skbio.stats.distance.DissimilarityMatrix.between", "skbio.stats.distance.DissimilarityMatrix.copy", "skbio.stats.distance.DissimilarityMatrix.filter", "skbio.stats.distance.DissimilarityMatrix.from_iterable", "skbio.stats.distance.DissimilarityMatrix.index", "skbio.stats.distance.DissimilarityMatrix.plot", "skbio.stats.distance.DissimilarityMatrix.read", "skbio.stats.distance.DissimilarityMatrix.redundant_form", "skbio.stats.distance.DissimilarityMatrix.to_data_frame", "skbio.stats.distance.DissimilarityMatrix.transpose", "skbio.stats.distance.DissimilarityMatrix.within", "skbio.stats.distance.DissimilarityMatrix.write", "skbio.stats.distance.DistanceMatrix", "skbio.stats.distance.DistanceMatrix.__contains__", "skbio.stats.distance.DistanceMatrix.__eq__", "skbio.stats.distance.DistanceMatrix.__ge__", "skbio.stats.distance.DistanceMatrix.__getitem__", "skbio.stats.distance.DistanceMatrix.__getstate__", "skbio.stats.distance.DistanceMatrix.__gt__", "skbio.stats.distance.DistanceMatrix.__le__", "skbio.stats.distance.DistanceMatrix.__lt__", "skbio.stats.distance.DistanceMatrix.__ne__", "skbio.stats.distance.DistanceMatrix.__str__", "skbio.stats.distance.DistanceMatrix.between", "skbio.stats.distance.DistanceMatrix.condensed_form", "skbio.stats.distance.DistanceMatrix.copy", "skbio.stats.distance.DistanceMatrix.filter", "skbio.stats.distance.DistanceMatrix.from_iterable", "skbio.stats.distance.DistanceMatrix.index", "skbio.stats.distance.DistanceMatrix.permute", "skbio.stats.distance.DistanceMatrix.plot", "skbio.stats.distance.DistanceMatrix.read", "skbio.stats.distance.DistanceMatrix.redundant_form", "skbio.stats.distance.DistanceMatrix.to_data_frame", "skbio.stats.distance.DistanceMatrix.to_series", "skbio.stats.distance.DistanceMatrix.transpose", "skbio.stats.distance.DistanceMatrix.within", "skbio.stats.distance.DistanceMatrix.write", "skbio.stats.distance.anosim", "skbio.stats.distance.bioenv", "skbio.stats.distance.mantel", "skbio.stats.distance.permanova", "skbio.stats.distance.permdisp", "skbio.stats.distance.pwmantel", "skbio.stats.distance.randdm", "Evolutionary statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.evolve</span></code>)", "skbio.stats.evolve.hommola_cospeciation", "Gradient analyses (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.gradient</span></code>)", "skbio.stats.gradient.AverageGradientANOVA", "skbio.stats.gradient.AverageGradientANOVA.__eq__", "skbio.stats.gradient.AverageGradientANOVA.__ge__", "skbio.stats.gradient.AverageGradientANOVA.__getstate__", "skbio.stats.gradient.AverageGradientANOVA.__gt__", "skbio.stats.gradient.AverageGradientANOVA.__hash__", "skbio.stats.gradient.AverageGradientANOVA.__le__", "skbio.stats.gradient.AverageGradientANOVA.__lt__", "skbio.stats.gradient.AverageGradientANOVA.__ne__", "skbio.stats.gradient.AverageGradientANOVA.__str__", "skbio.stats.gradient.AverageGradientANOVA.get_trajectories", "skbio.stats.gradient.CategoryResults", "skbio.stats.gradient.CategoryResults.__eq__", "skbio.stats.gradient.CategoryResults.__ge__", "skbio.stats.gradient.CategoryResults.__getstate__", "skbio.stats.gradient.CategoryResults.__gt__", "skbio.stats.gradient.CategoryResults.__hash__", "skbio.stats.gradient.CategoryResults.__le__", "skbio.stats.gradient.CategoryResults.__lt__", "skbio.stats.gradient.CategoryResults.__ne__", "skbio.stats.gradient.CategoryResults.__str__", "skbio.stats.gradient.CategoryResults.to_files", "skbio.stats.gradient.FirstDifferenceGradientANOVA", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__le__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.__str__", "skbio.stats.gradient.FirstDifferenceGradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVA", "skbio.stats.gradient.GradientANOVA.__eq__", "skbio.stats.gradient.GradientANOVA.__ge__", "skbio.stats.gradient.GradientANOVA.__getstate__", "skbio.stats.gradient.GradientANOVA.__gt__", "skbio.stats.gradient.GradientANOVA.__hash__", "skbio.stats.gradient.GradientANOVA.__le__", "skbio.stats.gradient.GradientANOVA.__lt__", "skbio.stats.gradient.GradientANOVA.__ne__", "skbio.stats.gradient.GradientANOVA.__str__", "skbio.stats.gradient.GradientANOVA.get_trajectories", "skbio.stats.gradient.GradientANOVAResults", "skbio.stats.gradient.GradientANOVAResults.__eq__", "skbio.stats.gradient.GradientANOVAResults.__ge__", "skbio.stats.gradient.GradientANOVAResults.__getstate__", "skbio.stats.gradient.GradientANOVAResults.__gt__", "skbio.stats.gradient.GradientANOVAResults.__hash__", "skbio.stats.gradient.GradientANOVAResults.__le__", "skbio.stats.gradient.GradientANOVAResults.__lt__", "skbio.stats.gradient.GradientANOVAResults.__ne__", "skbio.stats.gradient.GradientANOVAResults.__str__", "skbio.stats.gradient.GradientANOVAResults.to_files", "skbio.stats.gradient.GroupResults", "skbio.stats.gradient.GroupResults.__eq__", "skbio.stats.gradient.GroupResults.__ge__", "skbio.stats.gradient.GroupResults.__getstate__", "skbio.stats.gradient.GroupResults.__gt__", "skbio.stats.gradient.GroupResults.__hash__", "skbio.stats.gradient.GroupResults.__le__", "skbio.stats.gradient.GroupResults.__lt__", "skbio.stats.gradient.GroupResults.__ne__", "skbio.stats.gradient.GroupResults.__str__", "skbio.stats.gradient.GroupResults.to_files", "skbio.stats.gradient.TrajectoryGradientANOVA", "skbio.stats.gradient.TrajectoryGradientANOVA.__eq__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ge__", "skbio.stats.gradient.TrajectoryGradientANOVA.__getstate__", "skbio.stats.gradient.TrajectoryGradientANOVA.__gt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__hash__", "skbio.stats.gradient.TrajectoryGradientANOVA.__le__", "skbio.stats.gradient.TrajectoryGradientANOVA.__lt__", "skbio.stats.gradient.TrajectoryGradientANOVA.__ne__", "skbio.stats.gradient.TrajectoryGradientANOVA.__str__", "skbio.stats.gradient.TrajectoryGradientANOVA.get_trajectories", "skbio.stats.gradient.WindowDifferenceGradientANOVA", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__eq__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ge__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__getstate__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__gt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__hash__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__le__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__lt__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__ne__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.__str__", "skbio.stats.gradient.WindowDifferenceGradientANOVA.get_trajectories", "skbio.stats.isubsample", "Ordination methods (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.ordination</span></code>)", "skbio.stats.ordination.OrdinationResults", "skbio.stats.ordination.OrdinationResults.__eq__", "skbio.stats.ordination.OrdinationResults.__ge__", "skbio.stats.ordination.OrdinationResults.__getstate__", "skbio.stats.ordination.OrdinationResults.__gt__", "skbio.stats.ordination.OrdinationResults.__hash__", "skbio.stats.ordination.OrdinationResults.__le__", "skbio.stats.ordination.OrdinationResults.__lt__", "skbio.stats.ordination.OrdinationResults.__ne__", "skbio.stats.ordination.OrdinationResults.__str__", "skbio.stats.ordination.OrdinationResults.plot", "skbio.stats.ordination.OrdinationResults.read", "skbio.stats.ordination.OrdinationResults.write", "skbio.stats.ordination.ca", "skbio.stats.ordination.cca", "skbio.stats.ordination.corr", "skbio.stats.ordination.e_matrix", "skbio.stats.ordination.f_matrix", "skbio.stats.ordination.mean_and_std", "skbio.stats.ordination.pcoa", "skbio.stats.ordination.pcoa_biplot", "skbio.stats.ordination.rda", "skbio.stats.ordination.scale", "skbio.stats.ordination.svd_rank", "Empirical Power Estimation (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats.power</span></code>)", "skbio.stats.power.confidence_bound", "skbio.stats.power.paired_subsamples", "skbio.stats.power.subsample_paired_power", "skbio.stats.power.subsample_power", "skbio.stats.subsample_counts", "skbio.table.Table", "skbio.table.Table.__eq__", "skbio.table.Table.__ge__", "skbio.table.Table.__getitem__", "skbio.table.Table.__getstate__", "skbio.table.Table.__gt__", "skbio.table.Table.__iter__", "skbio.table.Table.__le__", "skbio.table.Table.__lt__", "skbio.table.Table.__ne__", "skbio.table.Table.__str__", "skbio.table.Table.add_group_metadata", "skbio.table.Table.add_metadata", "skbio.table.Table.align_to", "skbio.table.Table.align_to_dataframe", "skbio.table.Table.align_tree", "skbio.table.Table.collapse", "skbio.table.Table.concat", "skbio.table.Table.copy", "skbio.table.Table.data", "skbio.table.Table.del_metadata", "skbio.table.Table.delimited_self", "skbio.table.Table.descriptive_equality", "skbio.table.Table.exists", "skbio.table.Table.filter", "skbio.table.Table.from_adjacency", "skbio.table.Table.from_hdf5", "skbio.table.Table.from_json", "skbio.table.Table.from_tsv", "skbio.table.Table.get_table_density", "skbio.table.Table.get_value_by_ids", "skbio.table.Table.group_metadata", "skbio.table.Table.head", "skbio.table.Table.ids", "skbio.table.Table.index", "skbio.table.Table.is_empty", "skbio.table.Table.iter", "skbio.table.Table.iter_data", "skbio.table.Table.iter_pairwise", "skbio.table.Table.length", "skbio.table.Table.max", "skbio.table.Table.merge", "skbio.table.Table.metadata", "skbio.table.Table.metadata_to_dataframe", "skbio.table.Table.min", "skbio.table.Table.nonzero", "skbio.table.Table.nonzero_counts", "skbio.table.Table.norm", "skbio.table.Table.pa", "skbio.table.Table.partition", "skbio.table.Table.rankdata", "skbio.table.Table.read", "skbio.table.Table.reduce", "skbio.table.Table.remove_empty", "skbio.table.Table.sort", "skbio.table.Table.sort_order", "skbio.table.Table.subsample", "skbio.table.Table.sum", "skbio.table.Table.to_anndata", "skbio.table.Table.to_dataframe", "skbio.table.Table.to_hdf5", "skbio.table.Table.to_json", "skbio.table.Table.to_tsv", "skbio.table.Table.transform", "skbio.table.Table.transpose", "skbio.table.Table.update_ids", "skbio.table.Table.write", "skbio.table.example_table", "skbio.tree.TreeNode", "skbio.tree.TreeNode.__copy__", "skbio.tree.TreeNode.__deepcopy__", "skbio.tree.TreeNode.__eq__", "skbio.tree.TreeNode.__ge__", "skbio.tree.TreeNode.__getitem__", "skbio.tree.TreeNode.__getstate__", "skbio.tree.TreeNode.__gt__", "skbio.tree.TreeNode.__hash__", "skbio.tree.TreeNode.__iter__", "skbio.tree.TreeNode.__le__", "skbio.tree.TreeNode.__len__", "skbio.tree.TreeNode.__lt__", "skbio.tree.TreeNode.__ne__", "skbio.tree.TreeNode.__str__", "skbio.tree.TreeNode.accumulate_to_ancestor", "skbio.tree.TreeNode.ancestors", "skbio.tree.TreeNode.append", "skbio.tree.TreeNode.ascii_art", "skbio.tree.TreeNode.assign_ids", "skbio.tree.TreeNode.assign_supports", "skbio.tree.TreeNode.bifurcate", "skbio.tree.TreeNode.cache_attr", "skbio.tree.TreeNode.compare_rfd", "skbio.tree.TreeNode.compare_subsets", "skbio.tree.TreeNode.compare_tip_distances", "skbio.tree.TreeNode.copy", "skbio.tree.TreeNode.count", "skbio.tree.TreeNode.create_caches", "skbio.tree.TreeNode.deepcopy", "skbio.tree.TreeNode.descending_branch_length", "skbio.tree.TreeNode.distance", "skbio.tree.TreeNode.extend", "skbio.tree.TreeNode.find", "skbio.tree.TreeNode.find_all", "skbio.tree.TreeNode.find_by_func", "skbio.tree.TreeNode.find_by_id", "skbio.tree.TreeNode.from_linkage_matrix", "skbio.tree.TreeNode.from_taxdump", "skbio.tree.TreeNode.from_taxonomy", "skbio.tree.TreeNode.get_max_distance", "skbio.tree.TreeNode.has_children", "skbio.tree.TreeNode.index_tree", "skbio.tree.TreeNode.invalidate_caches", "skbio.tree.TreeNode.is_root", "skbio.tree.TreeNode.is_tip", "skbio.tree.TreeNode.lca", "skbio.tree.TreeNode.levelorder", "skbio.tree.TreeNode.lowest_common_ancestor", "skbio.tree.TreeNode.neighbors", "skbio.tree.TreeNode.non_tips", "skbio.tree.TreeNode.observed_node_counts", "skbio.tree.TreeNode.pop", "skbio.tree.TreeNode.postorder", "skbio.tree.TreeNode.pre_and_postorder", "skbio.tree.TreeNode.preorder", "skbio.tree.TreeNode.prune", "skbio.tree.TreeNode.read", "skbio.tree.TreeNode.remove", "skbio.tree.TreeNode.remove_deleted", "skbio.tree.TreeNode.root", "skbio.tree.TreeNode.root_at", "skbio.tree.TreeNode.root_at_midpoint", "skbio.tree.TreeNode.shear", "skbio.tree.TreeNode.shuffle", "skbio.tree.TreeNode.siblings", "skbio.tree.TreeNode.subset", "skbio.tree.TreeNode.subsets", "skbio.tree.TreeNode.subtree", "skbio.tree.TreeNode.tip_tip_distances", "skbio.tree.TreeNode.tips", "skbio.tree.TreeNode.to_array", "skbio.tree.TreeNode.to_taxonomy", "skbio.tree.TreeNode.traverse", "skbio.tree.TreeNode.unpack", "skbio.tree.TreeNode.unpack_by_func", "skbio.tree.TreeNode.unrooted_copy", "skbio.tree.TreeNode.unrooted_deepcopy", "skbio.tree.TreeNode.write", "skbio.tree.majority_rule", "skbio.tree.nj", "skbio.util.EfficiencyWarning", "skbio.util.RepresentationWarning", "skbio.util.assert_data_frame_almost_equal", "skbio.util.assert_ordination_results_equal", "skbio.util.cardinal_to_ordinal", "skbio.util.classproperty", "skbio.util.classproperty.__delete__", "skbio.util.classproperty.__eq__", "skbio.util.classproperty.__ge__", "skbio.util.classproperty.__get__", "skbio.util.classproperty.__getstate__", "skbio.util.classproperty.__gt__", "skbio.util.classproperty.__hash__", "skbio.util.classproperty.__le__", "skbio.util.classproperty.__lt__", "skbio.util.classproperty.__ne__", "skbio.util.classproperty.__set__", "skbio.util.classproperty.__set_name__", "skbio.util.classproperty.__str__", "skbio.util.classproperty.deleter", "skbio.util.classproperty.getter", "skbio.util.classproperty.setter", "skbio.util.find_duplicates", "skbio.util.get_data_path", "skbio.util.safe_md5", "skbio.workflow.Workflow", "skbio.workflow.Workflow.__call__", "skbio.workflow.Workflow.__eq__", "skbio.workflow.Workflow.__ge__", "skbio.workflow.Workflow.__getstate__", "skbio.workflow.Workflow.__gt__", "skbio.workflow.Workflow.__hash__", "skbio.workflow.Workflow.__le__", "skbio.workflow.Workflow.__lt__", "skbio.workflow.Workflow.__ne__", "skbio.workflow.Workflow.__str__", "skbio.workflow.Workflow.initialize_state", "skbio.workflow.method", "skbio.workflow.method.__call__", "skbio.workflow.method.__eq__", "skbio.workflow.method.__ge__", "skbio.workflow.method.__getstate__", "skbio.workflow.method.__gt__", "skbio.workflow.method.__hash__", "skbio.workflow.method.__le__", "skbio.workflow.method.__lt__", "skbio.workflow.method.__ne__", "skbio.workflow.method.__str__", "skbio.workflow.requires", "skbio.workflow.requires.__call__", "skbio.workflow.requires.__eq__", "skbio.workflow.requires.__ge__", "skbio.workflow.requires.__getstate__", "skbio.workflow.requires.__gt__", "skbio.workflow.requires.__hash__", "skbio.workflow.requires.__le__", "skbio.workflow.requires.__lt__", "skbio.workflow.requires.__ne__", "skbio.workflow.requires.__str__", "Home", "Input and Output (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.io</span></code>)", "Metadata (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.metadata</span></code>)", "Biological Sequences (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.sequence</span></code>)", "Multivariate Statistics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.stats</span></code>)", "Data Table (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.table</span></code>)", "Trees and Phylogenetics (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.tree</span></code>)", "Utilities for Developers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.util</span></code>)", "Workflow construction (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skbio.workflow</span></code>)"], "titleterms": {"0": 987, "1": 987, "6": [114, 987], "7": 115, "__bool__": [29, 276, 347, 398, 451, 510], "__call__": [17, 954, 966, 977], "__contains__": [30, 277, 348, 399, 452, 511, 548, 601, 624], "__copy__": [31, 202, 278, 349, 400, 453, 512, 848], "__deepcopy__": [32, 203, 279, 350, 401, 454, 513, 849], "__delete__": 934, "__eq__": [3, 18, 33, 132, 145, 174, 192, 204, 221, 239, 257, 280, 335, 351, 402, 455, 514, 549, 602, 625, 660, 671, 682, 693, 704, 715, 726, 737, 750, 780, 850, 935, 955, 967, 978], "__ge__": [4, 19, 34, 133, 146, 175, 193, 205, 222, 240, 258, 281, 336, 352, 403, 456, 515, 550, 603, 626, 661, 672, 683, 694, 705, 716, 727, 738, 751, 781, 851, 936, 956, 968, 979], "__get__": 937, "__getitem__": [5, 35, 282, 353, 404, 457, 516, 551, 604, 627, 782, 852], "__getstate__": [6, 20, 36, 134, 147, 176, 194, 206, 223, 241, 259, 283, 337, 354, 405, 458, 517, 552, 605, 628, 662, 673, 684, 695, 706, 717, 728, 739, 752, 783, 853, 938, 957, 969, 980], "__gt__": [7, 21, 37, 135, 148, 177, 195, 207, 224, 242, 260, 284, 338, 355, 406, 459, 518, 553, 606, 629, 663, 674, 685, 696, 707, 718, 729, 740, 753, 784, 854, 939, 958, 970, 981], "__hash__": [8, 22, 136, 149, 664, 675, 686, 697, 708, 719, 730, 741, 754, 855, 940, 959, 971, 982], "__iter__": [38, 285, 356, 407, 460, 519, 785, 856], "__le__": [9, 23, 39, 137, 150, 178, 196, 208, 225, 243, 261, 286, 339, 357, 408, 461, 520, 554, 607, 630, 665, 676, 687, 698, 709, 720, 731, 742, 755, 786, 857, 941, 960, 972, 983], "__len__": [40, 287, 358, 409, 462, 521, 858], "__lt__": [10, 24, 41, 138, 151, 179, 197, 209, 226, 244, 262, 288, 340, 359, 410, 463, 522, 555, 608, 631, 666, 677, 688, 699, 710, 721, 732, 743, 756, 787, 859, 942, 961, 973, 984], "__ne__": [11, 25, 42, 139, 152, 180, 198, 210, 227, 245, 263, 289, 341, 360, 411, 464, 523, 556, 609, 632, 667, 678, 689, 700, 711, 722, 733, 744, 757, 788, 860, 943, 962, 974, 985], "__reversed__": [43, 290, 361, 412, 465, 524], "__set__": 944, "__set_name__": 945, "__setstate__": [12, 26], "__str__": [13, 27, 44, 140, 153, 181, 199, 211, 228, 246, 264, 291, 342, 362, 413, 466, 525, 557, 610, 633, 668, 679, 690, 701, 712, 723, 734, 745, 758, 789, 861, 946, 963, 975, 986], "ac": 69, "accumulate_to_ancestor": 862, "ad": 123, "add": 212, "add_format": 154, "add_group_metadata": 790, "add_metadata": 791, "advanc": 123, "algorithm": 0, "align": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 116, 125, 128], "align_to": 792, "align_to_datafram": 793, "align_tre": 794, "alignmentstructur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "alpha": [1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "alpha_divers": 103, "alr": 579, "alr_inv": 580, "analys": 658, "analysi": 748, "ancestor": 863, "ancom": 581, "anosim": 649, "append": [45, 864], "applic": 123, "argument": 130, "ascii_art": 865, "assert_data_frame_almost_equ": 930, "assert_ordination_results_equ": 931, "assign_id": 866, "assign_support": 867, "averagegradientanova": [659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669], "base": 599, "basic": 123, "befor": [117, 120], "berger_parker_d": 70, "beta": [1, 104, 105, 106], "beta_divers": 107, "between": [558, 611, 634], "bifurc": 868, "binari": 112, "binary_dm": 112, "bio": [130, 987, 988], "bioenv": 650, "biolog": 990, "biom": [113, 992], "blast": [114, 115], "blast6": 114, "blast7": 115, "block_beta_divers": 108, "brillouin_d": 71, "by_nam": 559, "ca": 762, "cache_attr": 869, "calcul": 990, "can": 988, "canon": 748, "cardinal_to_ordin": 932, "categor": 599, "categoricalmetadatacolumn": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "categoryresult": [670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680], "caveat": 123, "cca": 763, "central": 582, "chao1": 72, "chao1_ci": 73, "charact": 127, "class": [130, 599, 658, 995], "classproperti": [933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949], "closur": 583, "clr": 584, "clr_inv": 585, "clustal": 116, "collaps": 795, "column": [114, 115, 127, 989], "comment": [123, 127], "commun": 1, "compare_rfd": 870, "compare_subset": 871, "compare_tip_dist": 872, "comparison": 599, "complement": [292, 467], "composit": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 991], "concat": [213, 293, 363, 414, 468, 526, 796], "condensed_form": 635, "confidence_bound": 774, "consensu": 46, "conserv": 47, "construct": 995, "continu": 599, "cophylogenet": 656, "copi": [560, 612, 636, 797, 873], "corr": 764, "correspond": 748, "count": [1, 294, 364, 415, 469, 527, 874], "creat": 130, "create_cach": 875, "create_format": [155, 165], "custom": 988, "data": [0, 118, 599, 798, 991, 992], "decor": 995, "deepcopi": 876, "definit": [295, 365, 416, 470], "degap": [296, 366, 417, 471], "degener": [297, 367, 418, 472], "del_metadata": 799, "delet": 947, "delimited_self": 800, "deprec": 0, "descending_branch_length": 877, "descriptive_equ": 801, "dev": 987, "develop": [988, 994], "dirmult_ttest": 586, "dissimilar": 112, "dissimilaritymatrix": [600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "distanc": [298, 368, 419, 473, 528, 575, 576, 577, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 878, 990, 991], "distancematrix": [623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648], "divers": [1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "divis": 129, "dmp": 129, "dna": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "document": 987, "domin": 74, "doubl": 75, "drop": [200, 214], "drop_missing_valu": [182, 229, 247], "e_matrix": 765, "efficiencywarn": 928, "embl": 117, "empir": 773, "empti": 127, "enspi": 76, "estim": 773, "esty_ci": 77, "evolutionari": 656, "evolv": [656, 657], "exampl": [113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 599, 658, 748, 773, 992], "example_t": 846, "except": [130, 599, 988, 993], "exist": 802, "expand_degener": [299, 369, 420, 474], "explan": 123, "extend": [48, 879], "f_matrix": 766, "faith_pd": 78, "fasta": 118, "fastq": 119, "featur": [117, 120], "fh": 117, "file": [117, 118, 120, 988], "filter": [561, 613, 637, 803], "filter_column": 265, "filter_id": [183, 230, 248, 266], "find": 880, "find_al": 881, "find_by_func": 882, "find_by_id": 883, "find_dupl": 950, "find_motif": [300, 370, 421, 475], "find_with_regex": [301, 371, 422, 476, 529], "firstdifferencegradientanova": [681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691], "fisher_alpha": 79, "footer": 128, "formal": 123, "format": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 988], "frequenc": [302, 372, 423, 477, 530], "from": 988, "from_adjac": 804, "from_dict": [49, 562], "from_hdf5": 805, "from_iter": [563, 614, 638], "from_json": 806, "from_linkage_matrix": 884, "from_ncbi": 343, "from_taxdump": 885, "from_taxonomi": 886, "from_tsv": 807, "ft": 117, "function": [0, 68, 104, 130, 169, 575, 578, 599, 656, 748, 773, 994], "g": 128, "gap": [303, 373, 424, 478], "gap_frequ": 50, "gc": 128, "gc_content": [304, 479], "gc_frequenc": [305, 480], "genbank": 120, "gencod": 129, "gener": [117, 118, 126], "geneticcod": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "get_alpha_diversity_metr": 109, "get_beta_diversity_metr": 110, "get_column": 267, "get_data_path": 951, "get_id": [184, 231, 249, 268], "get_max_dist": 887, "get_miss": [185, 232, 250], "get_nam": 564, "get_read": 156, "get_sniff": 157, "get_table_dens": 808, "get_trajectori": [669, 691, 702, 735, 746], "get_valu": [186, 233, 251], "get_value_by_id": 809, "get_writ": 158, "getter": 948, "gf": 128, "gff3": 121, "gini_index": 80, "global_pairwise_align": 60, "global_pairwise_align_nucleotid": 61, "global_pairwise_align_protein": 62, "goods_coverag": 81, "gr": 128, "gradient": [658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746], "gradientanova": [692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702], "gradientanovaresult": [703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713], "grammar": 123, "grammaredsequ": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "group_metadata": 810, "groupresult": [714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724], "ham": 576, "has_children": 888, "has_definit": [306, 374, 425, 481], "has_degener": [307, 375, 426, 482], "has_gap": [308, 376, 427, 483], "has_interval_metadata": [309, 377, 428, 484, 531], "has_metadata": [51, 310, 378, 429, 485, 532], "has_missing_valu": [187, 234, 252], "has_nondegener": [311, 379, 430, 486], "has_positional_metadata": [52, 312, 380, 431, 487, 533], "has_stop": 432, "head": 811, "header": [117, 118, 125, 128], "heip_": 82, "hommola_cospeci": 657, "i": [130, 169], "id": 812, "ident": 565, "identifi": 127, "ilr": 587, "ilr_inv": 588, "index": [313, 381, 433, 488, 534, 566, 615, 639, 813], "index_tre": 889, "inform": 123, "initialize_st": 964, "inlin": 123, "inner": 589, "input": [1, 988], "interv": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 989], "intervalmetadata": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "introduct": 1, "invalidate_cach": 890, "io": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 988], "ioregistri": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "is_empti": 814, "is_reverse_compl": [314, 489], "is_root": 891, "is_tip": 892, "is_zero_bas": 14, "isubsampl": 747, "iter": 815, "iter_contigu": [315, 382, 434, 490, 535], "iter_data": 816, "iter_km": [316, 383, 435, 491, 536], "iter_pairwis": 817, "iter_posit": 53, "join": 54, "kempton_taylor_q": 83, "keyword": 130, "kind": 988, "kmer_dist": 577, "kmer_frequ": [317, 384, 436, 492, 537], "label": [122, 123], "lca": 893, "lead": 127, "length": [123, 818], "level": 117, "levelord": 894, "list_read_format": 159, "list_write_format": 160, "lladser_ci": 84, "lladser_p": 85, "load": 269, "local_pairwise_align": 63, "local_pairwise_align_nucleotid": 64, "local_pairwise_align_protein": 65, "local_pairwise_align_ssw": 66, "locat": 120, "lowercas": [318, 385, 437, 493, 538], "lowest_common_ancestor": 895, "lsmat": 122, "majority_rul": 926, "make_identity_substitution_matrix": 67, "mantel": 651, "margalef": 86, "match": [320, 387, 439, 495, 540], "match_frequ": [319, 386, 438, 494, 539], "matrix": [112, 122, 599, 991], "max": 819, "mcintosh_": 88, "mcintosh_d": 87, "mean_and_std": 767, "measur": [68, 104], "menhinick": 89, "merg": [215, 270, 820], "metadata": [127, 128, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 821, 989], "metadata_to_datafram": 822, "metadatacolumn": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "method": [656, 748, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 991], "metric": [1, 575], "michaelis_menten_fit": 90, "min": 823, "miscellan": 994, "mismatch": [322, 389, 441, 497, 542], "mismatch_frequ": [321, 388, 440, 496, 541], "monkey_patch": 161, "multi_replac": 590, "multidimension": 748, "multipl": [125, 128], "multiplicative_replac": 591, "multivari": 991, "name": 129, "neighbor": 896, "new": 130, "newick": 123, "nj": 927, "node": [123, 129], "non_tip": 897, "nondegener": [323, 390, 442, 498], "nonzero": 824, "nonzero_count": 825, "norm": 826, "number": 127, "numericmetadatacolumn": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "o": [130, 169], "observed_featur": 91, "observed_node_count": 898, "observed_otu": 92, "onli": 126, "open": 170, "open_fil": [171, 172], "oper": 993, "optim": 0, "ordin": [124, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 991], "ordinationresult": [749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761], "origin": 120, "osd": 93, "other": 991, "output": 988, "pa": 827, "paired_subsampl": 775, "pairwise_vlr": 592, "paramet": [114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129], "partial_beta_divers": 111, "partit": 828, "pcoa": 768, "pcoa_biplot": 769, "permanova": 652, "permdisp": 653, "permut": 640, "perturb": 593, "perturb_inv": 594, "phydiv": 94, "phylip": 125, "phylogenet": 993, "pielou_": 95, "plot": [567, 616, 641, 759], "pop": 899, "postord": 900, "power": [595, 773, 774, 775, 776, 777], "pre_and_postord": 901, "preorder": 902, "product": 117, "protein": [397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449], "prune": 903, "pwmantel": 654, "qseq": 126, "qual": 118, "qualiti": 119, "queri": 216, "randdm": 655, "rankdata": 829, "rda": 770, "read": [55, 117, 118, 120, 162, 166, 217, 271, 324, 391, 443, 499, 543, 568, 617, 642, 760, 830, 904, 988], "reader": [118, 120, 121, 141], "reassign_index": 56, "recommend": 127, "reconstruct": 993, "reduc": 831, "redundant_form": [569, 618, 643], "refer": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 578, 599, 748], "registri": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "remov": 905, "remove_delet": 906, "remove_empti": 832, "replac": [325, 392, 444, 500, 544], "representationwarn": 929, "requir": [127, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986], "reserv": 130, "result": [124, 748], "reverse_compl": [326, 501], "reverse_transcrib": 502, "rna": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "robbin": 96, "root": 907, "root_at": 908, "root_at_midpoint": 909, "row": 127, "rule": 123, "safe_md5": 952, "sampl": 989, "samplemetadata": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "save": [188, 235, 253, 272], "sbp_basi": 596, "scale": [748, 771], "scikit": [130, 987, 988], "score": 119, "section": [116, 117, 120, 125], "sequenc": [0, 118, 125, 128, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 990], "set_zero_bas": 15, "setter": 949, "shannon": 97, "shear": 910, "shuffl": 911, "sibl": 912, "simpl": 112, "simpson": 98, "simpson_": 99, "singl": 100, "skbio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 993, 994, 995], "slow": 0, "sniff": [163, 167], "sniffer": 142, "sob": 101, "sort": [57, 218, 833], "sort_ord": 834, "specif": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "specifi": 1, "sq": 117, "squar": 122, "stat": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 991], "statist": [578, 599, 656, 991], "stockholm": 128, "stop": 445, "string": 120, "stripedsmithwaterman": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "strong": 102, "structur": [0, 599, 993], "subsampl": [835, 991], "subsample_count": 778, "subsample_paired_pow": 776, "subsample_pow": 777, "subset": [913, 914], "substitutionmatrix": [547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574], "subtre": 915, "sum": 836, "support": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 988], "svd_rank": 772, "symbol": 123, "tabl": [779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 992], "tabularmsa": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 118], "taxdump": 129, "test": 994, "tip": 917, "tip_tip_dist": 916, "to_anndata": 837, "to_arrai": 918, "to_data_fram": [570, 619, 644], "to_datafram": [189, 236, 254, 273, 838], "to_definit": [327, 393, 446, 503], "to_dict": [58, 571], "to_fil": [680, 713, 724], "to_hdf5": 839, "to_indic": [328, 394, 447, 504, 545], "to_json": 840, "to_regex": [329, 395, 448, 505], "to_seri": [190, 237, 255, 645], "to_taxonomi": 919, "to_tsv": 841, "trail": 127, "trajectorygradientanova": [725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735], "transcrib": 330, "transform": 842, "translat": [331, 344, 506], "translate_six_fram": [332, 345, 507], "transpos": [572, 620, 646, 843], "travers": 920, "tree": [847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 993], "tree_basi": 597, "treenod": [847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925], "tutori": [0, 1, 988, 990, 993, 995], "type": [114, 115, 127, 990], "unpack": 921, "unpack_by_func": 922, "unrooted_copi": 923, "unrooted_deepcopi": 924, "unweighted_unifrac": 105, "update_id": 844, "us": [0, 117, 988], "util": [169, 170, 171, 172, 748, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 990, 993, 994], "valid": [1, 127], "variabl": 599, "variant": 119, "vector": 1, "vlr": 598, "warn": [988, 994], "weighted_unifrac": 106, "what": 988, "whitespac": [123, 127], "windowdifferencegradientanova": [736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746], "within": [573, 621, 647], "workflow": [953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 995], "write": [59, 118, 120, 164, 168, 219, 274, 333, 396, 449, 508, 546, 574, 622, 648, 761, 845, 925, 988], "writer": [118, 121, 143]}})